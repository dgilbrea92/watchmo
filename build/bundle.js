!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=72)}([function(t,e,n){"use strict";t.exports=n(39)},function(t,e,n){t.exports=n(46)()},function(t,e,n){var r;
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/!function(){"use strict";var n={}.hasOwnProperty;function o(){for(var t=[],e=0;e<arguments.length;e++){var r=arguments[e];if(r){var i=typeof r;if("string"===i||"number"===i)t.push(r);else if(Array.isArray(r)&&r.length){var a=o.apply(null,r);a&&t.push(a)}else if("object"===i)for(var l in r)n.call(r,l)&&r[l]&&t.push(l)}}return t.join(" ")}t.exports?(o.default=o,t.exports=o):void 0===(r=function(){return o}.apply(e,[]))||(t.exports=r)}()},function(t,e){t.exports=function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}},function(t,e){t.exports=function(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}},function(t,e,n){var r=n(23),o=n(44);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[t.i,o,""]]);var i={insert:"head",singleton:!1},a=(r(o,i),o.locals?o.locals:{});t.exports=a},function(t,e){t.exports=function(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e}},,function(t,e,n){"use strict";!function t(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)}catch(t){console.error(t)}}}(),t.exports=n(40)},function(t,e){function n(){return t.exports=n=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},n.apply(this,arguments)}t.exports=n},function(t,e,n){"use strict";var r=l(n(65)),o=l(n(70)),i=l(n(33)),a=l(n(30));function l(t){return t&&t.__esModule?t:{default:t}}t.exports={Transition:a.default,TransitionGroup:i.default,ReplaceTransition:o.default,CSSTransition:r.default}},,function(t,e,n){var r=n(23),o=n(43);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[t.i,o,""]]);var i={insert:"head",singleton:!1},a=(r(o,i),o.locals?o.locals:{});t.exports=a},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){"use strict";var r=n(56);t.exports=Function.prototype.bind||r},function(t,e,n){"use strict";var r=n(26),o="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),i=Object.prototype.toString,a=Array.prototype.concat,l=Object.defineProperty,c=l&&function(){var t={};try{for(var e in l(t,"x",{enumerable:!1,value:t}),t)return!1;return t.x===t}catch(t){return!1}}(),u=function(t,e,n,r){var o;e in t&&("function"!=typeof(o=r)||"[object Function]"!==i.call(o)||!r())||(c?l(t,e,{configurable:!0,enumerable:!1,value:n,writable:!0}):t[e]=n)},s=function(t,e){var n=arguments.length>2?arguments[2]:{},i=r(e);o&&(i=a.call(i,Object.getOwnPropertySymbols(e)));for(var l=0;l<i.length;l+=1)u(t,i[l],e[i[l]],n[i[l]])};s.supportsDescriptors=!!c,t.exports=s},function(t,e,n){"use strict";(function(e){var n="__global_unique_id__";t.exports=function(){return e[n]=(e[n]||0)+1}}).call(this,n(13))},function(t,e,n){"use strict";var r=function(){};t.exports=r},function(t,e,n){var r=n(48);t.exports=p,t.exports.parse=i,t.exports.compile=function(t,e){return l(i(t,e),e)},t.exports.tokensToFunction=l,t.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(t,e){for(var n,r=[],i=0,a=0,l="",s=e&&e.delimiter||"/";null!=(n=o.exec(t));){var f=n[0],d=n[1],p=n.index;if(l+=t.slice(a,p),a=p+f.length,d)l+=d[1];else{var m=t[a],h=n[2],g=n[3],b=n[4],v=n[5],y=n[6],x=n[7];l&&(r.push(l),l="");var w=null!=h&&null!=m&&m!==h,k="+"===y||"*"===y,_="?"===y||"*"===y,E=n[2]||s,S=b||v;r.push({name:g||i++,prefix:h||"",delimiter:E,optional:_,repeat:k,partial:w,asterisk:!!x,pattern:S?u(S):x?".*":"[^"+c(E)+"]+?"})}}return a<t.length&&(l+=t.substr(a)),l&&r.push(l),r}function a(t){return encodeURI(t).replace(/[\/?#]/g,(function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()}))}function l(t,e){for(var n=new Array(t.length),o=0;o<t.length;o++)"object"==typeof t[o]&&(n[o]=new RegExp("^(?:"+t[o].pattern+")$",f(e)));return function(e,o){for(var i="",l=e||{},c=(o||{}).pretty?a:encodeURIComponent,u=0;u<t.length;u++){var s=t[u];if("string"!=typeof s){var f,d=l[s.name];if(null==d){if(s.optional){s.partial&&(i+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=c(d[p]),!n[u].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");i+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()})):c(d),!n[u].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');i+=s.prefix+f}}else i+=s}return i}}function c(t){return t.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function u(t){return t.replace(/([=!:$\/()])/g,"\\$1")}function s(t,e){return t.keys=e,t}function f(t){return t&&t.sensitive?"":"i"}function d(t,e,n){r(e)||(n=e||n,e=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<t.length;l++){var u=t[l];if("string"==typeof u)a+=c(u);else{var d=c(u.prefix),p="(?:"+u.pattern+")";e.push(u),u.repeat&&(p+="(?:"+d+p+")*"),a+=p=u.optional?u.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var m=c(n.delimiter||"/"),h=a.slice(-m.length)===m;return o||(a=(h?a.slice(0,-m.length):a)+"(?:"+m+"(?=$))?"),a+=i?"$":o&&h?"":"(?="+m+"|$)",s(new RegExp("^"+a,f(n)),e)}function p(t,e,n){return r(e)||(n=e||n,e=[]),n=n||{},t instanceof RegExp?function(t,e){var n=t.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(t,e)}(t,e):r(t)?function(t,e,n){for(var r=[],o=0;o<t.length;o++)r.push(p(t[o],e,n).source);return s(new RegExp("(?:"+r.join("|")+")",f(n)),e)}(t,e,n):function(t,e,n){return d(i(t,n),e,n)}(t,e,n)}},function(t,e,n){"use strict";e.__esModule=!0;var r=i(n(0)),o=i(n(50));function i(t){return t&&t.__esModule?t:{default:t}}e.default=r.default.createContext||o.default,t.exports=e.default},function(t,e,n){"use strict";(function(t){
/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.16.1
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var n="undefined"!=typeof window&&"undefined"!=typeof document&&"undefined"!=typeof navigator,r=function(){for(var t=["Edge","Trident","Firefox"],e=0;e<t.length;e+=1)if(n&&navigator.userAgent.indexOf(t[e])>=0)return 1;return 0}();var o=n&&window.Promise?function(t){var e=!1;return function(){e||(e=!0,window.Promise.resolve().then((function(){e=!1,t()})))}}:function(t){var e=!1;return function(){e||(e=!0,setTimeout((function(){e=!1,t()}),r))}};function i(t){return t&&"[object Function]"==={}.toString.call(t)}function a(t,e){if(1!==t.nodeType)return[];var n=t.ownerDocument.defaultView.getComputedStyle(t,null);return e?n[e]:n}function l(t){return"HTML"===t.nodeName?t:t.parentNode||t.host}function c(t){if(!t)return document.body;switch(t.nodeName){case"HTML":case"BODY":return t.ownerDocument.body;case"#document":return t.body}var e=a(t),n=e.overflow,r=e.overflowX,o=e.overflowY;return/(auto|scroll|overlay)/.test(n+o+r)?t:c(l(t))}function u(t){return t&&t.referenceNode?t.referenceNode:t}var s=n&&!(!window.MSInputMethodContext||!document.documentMode),f=n&&/MSIE 10/.test(navigator.userAgent);function d(t){return 11===t?s:10===t?f:s||f}function p(t){if(!t)return document.documentElement;for(var e=d(10)?document.body:null,n=t.offsetParent||null;n===e&&t.nextElementSibling;)n=(t=t.nextElementSibling).offsetParent;var r=n&&n.nodeName;return r&&"BODY"!==r&&"HTML"!==r?-1!==["TH","TD","TABLE"].indexOf(n.nodeName)&&"static"===a(n,"position")?p(n):n:t?t.ownerDocument.documentElement:document.documentElement}function m(t){return null!==t.parentNode?m(t.parentNode):t}function h(t,e){if(!(t&&t.nodeType&&e&&e.nodeType))return document.documentElement;var n=t.compareDocumentPosition(e)&Node.DOCUMENT_POSITION_FOLLOWING,r=n?t:e,o=n?e:t,i=document.createRange();i.setStart(r,0),i.setEnd(o,0);var a,l,c=i.commonAncestorContainer;if(t!==c&&e!==c||r.contains(o))return"BODY"===(l=(a=c).nodeName)||"HTML"!==l&&p(a.firstElementChild)!==a?p(c):c;var u=m(t);return u.host?h(u.host,e):h(t,m(e).host)}function g(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"top",n="top"===e?"scrollTop":"scrollLeft",r=t.nodeName;if("BODY"===r||"HTML"===r){var o=t.ownerDocument.documentElement,i=t.ownerDocument.scrollingElement||o;return i[n]}return t[n]}function b(t,e){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=g(e,"top"),o=g(e,"left"),i=n?-1:1;return t.top+=r*i,t.bottom+=r*i,t.left+=o*i,t.right+=o*i,t}function v(t,e){var n="x"===e?"Left":"Top",r="Left"===n?"Right":"Bottom";return parseFloat(t["border"+n+"Width"])+parseFloat(t["border"+r+"Width"])}function y(t,e,n,r){return Math.max(e["offset"+t],e["scroll"+t],n["client"+t],n["offset"+t],n["scroll"+t],d(10)?parseInt(n["offset"+t])+parseInt(r["margin"+("Height"===t?"Top":"Left")])+parseInt(r["margin"+("Height"===t?"Bottom":"Right")]):0)}function x(t){var e=t.body,n=t.documentElement,r=d(10)&&getComputedStyle(n);return{height:y("Height",e,n,r),width:y("Width",e,n,r)}}var w=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},k=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),_=function(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t},E=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t};function S(t){return E({},t,{right:t.left+t.width,bottom:t.top+t.height})}function M(t){var e={};try{if(d(10)){e=t.getBoundingClientRect();var n=g(t,"top"),r=g(t,"left");e.top+=n,e.left+=r,e.bottom+=n,e.right+=r}else e=t.getBoundingClientRect()}catch(t){}var o={left:e.left,top:e.top,width:e.right-e.left,height:e.bottom-e.top},i="HTML"===t.nodeName?x(t.ownerDocument):{},l=i.width||t.clientWidth||o.width,c=i.height||t.clientHeight||o.height,u=t.offsetWidth-l,s=t.offsetHeight-c;if(u||s){var f=a(t);u-=v(f,"x"),s-=v(f,"y"),o.width-=u,o.height-=s}return S(o)}function T(t,e){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=d(10),o="HTML"===e.nodeName,i=M(t),l=M(e),u=c(t),s=a(e),f=parseFloat(s.borderTopWidth),p=parseFloat(s.borderLeftWidth);n&&o&&(l.top=Math.max(l.top,0),l.left=Math.max(l.left,0));var m=S({top:i.top-l.top-f,left:i.left-l.left-p,width:i.width,height:i.height});if(m.marginTop=0,m.marginLeft=0,!r&&o){var h=parseFloat(s.marginTop),g=parseFloat(s.marginLeft);m.top-=f-h,m.bottom-=f-h,m.left-=p-g,m.right-=p-g,m.marginTop=h,m.marginLeft=g}return(r&&!n?e.contains(u):e===u&&"BODY"!==u.nodeName)&&(m=b(m,e)),m}function C(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=t.ownerDocument.documentElement,r=T(t,n),o=Math.max(n.clientWidth,window.innerWidth||0),i=Math.max(n.clientHeight,window.innerHeight||0),a=e?0:g(n),l=e?0:g(n,"left"),c={top:a-r.top+r.marginTop,left:l-r.left+r.marginLeft,width:o,height:i};return S(c)}function N(t){var e=t.nodeName;if("BODY"===e||"HTML"===e)return!1;if("fixed"===a(t,"position"))return!0;var n=l(t);return!!n&&N(n)}function P(t){if(!t||!t.parentElement||d())return document.documentElement;for(var e=t.parentElement;e&&"none"===a(e,"transform");)e=e.parentElement;return e||document.documentElement}function A(t,e,n,r){var o=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i={top:0,left:0},a=o?P(t):h(t,u(e));if("viewport"===r)i=C(a,o);else{var s=void 0;"scrollParent"===r?"BODY"===(s=c(l(e))).nodeName&&(s=t.ownerDocument.documentElement):s="window"===r?t.ownerDocument.documentElement:r;var f=T(s,a,o);if("HTML"!==s.nodeName||N(a))i=f;else{var d=x(t.ownerDocument),p=d.height,m=d.width;i.top+=f.top-f.marginTop,i.bottom=p+f.top,i.left+=f.left-f.marginLeft,i.right=m+f.left}}var g="number"==typeof(n=n||0);return i.left+=g?n:n.left||0,i.top+=g?n:n.top||0,i.right-=g?n:n.right||0,i.bottom-=g?n:n.bottom||0,i}function O(t){return t.width*t.height}function z(t,e,n,r,o){var i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;if(-1===t.indexOf("auto"))return t;var a=A(n,r,i,o),l={top:{width:a.width,height:e.top-a.top},right:{width:a.right-e.right,height:a.height},bottom:{width:a.width,height:a.bottom-e.bottom},left:{width:e.left-a.left,height:a.height}},c=Object.keys(l).map((function(t){return E({key:t},l[t],{area:O(l[t])})})).sort((function(t,e){return e.area-t.area})),u=c.filter((function(t){var e=t.width,r=t.height;return e>=n.clientWidth&&r>=n.clientHeight})),s=u.length>0?u[0].key:c[0].key,f=t.split("-")[1];return s+(f?"-"+f:"")}function j(t,e,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,o=r?P(e):h(e,u(n));return T(n,o,r)}function R(t){var e=t.ownerDocument.defaultView.getComputedStyle(t),n=parseFloat(e.marginTop||0)+parseFloat(e.marginBottom||0),r=parseFloat(e.marginLeft||0)+parseFloat(e.marginRight||0);return{width:t.offsetWidth+r,height:t.offsetHeight+n}}function D(t){var e={left:"right",right:"left",bottom:"top",top:"bottom"};return t.replace(/left|right|bottom|top/g,(function(t){return e[t]}))}function L(t,e,n){n=n.split("-")[0];var r=R(t),o={width:r.width,height:r.height},i=-1!==["right","left"].indexOf(n),a=i?"top":"left",l=i?"left":"top",c=i?"height":"width",u=i?"width":"height";return o[a]=e[a]+e[c]/2-r[c]/2,o[l]=n===l?e[l]-r[u]:e[D(l)],o}function I(t,e){return Array.prototype.find?t.find(e):t.filter(e)[0]}function U(t,e,n){return(void 0===n?t:t.slice(0,function(t,e,n){if(Array.prototype.findIndex)return t.findIndex((function(t){return t[e]===n}));var r=I(t,(function(t){return t[e]===n}));return t.indexOf(r)}(t,"name",n))).forEach((function(t){t.function&&console.warn("`modifier.function` is deprecated, use `modifier.fn`!");var n=t.function||t.fn;t.enabled&&i(n)&&(e.offsets.popper=S(e.offsets.popper),e.offsets.reference=S(e.offsets.reference),e=n(e,t))})),e}function F(){if(!this.state.isDestroyed){var t={instance:this,styles:{},arrowStyles:{},attributes:{},flipped:!1,offsets:{}};t.offsets.reference=j(this.state,this.popper,this.reference,this.options.positionFixed),t.placement=z(this.options.placement,t.offsets.reference,this.popper,this.reference,this.options.modifiers.flip.boundariesElement,this.options.modifiers.flip.padding),t.originalPlacement=t.placement,t.positionFixed=this.options.positionFixed,t.offsets.popper=L(this.popper,t.offsets.reference,t.placement),t.offsets.popper.position=this.options.positionFixed?"fixed":"absolute",t=U(this.modifiers,t),this.state.isCreated?this.options.onUpdate(t):(this.state.isCreated=!0,this.options.onCreate(t))}}function B(t,e){return t.some((function(t){var n=t.name;return t.enabled&&n===e}))}function q(t){for(var e=[!1,"ms","Webkit","Moz","O"],n=t.charAt(0).toUpperCase()+t.slice(1),r=0;r<e.length;r++){var o=e[r],i=o?""+o+n:t;if(void 0!==document.body.style[i])return i}return null}function H(){return this.state.isDestroyed=!0,B(this.modifiers,"applyStyle")&&(this.popper.removeAttribute("x-placement"),this.popper.style.position="",this.popper.style.top="",this.popper.style.left="",this.popper.style.right="",this.popper.style.bottom="",this.popper.style.willChange="",this.popper.style[q("transform")]=""),this.disableEventListeners(),this.options.removeOnDestroy&&this.popper.parentNode.removeChild(this.popper),this}function W(t){var e=t.ownerDocument;return e?e.defaultView:window}function $(t,e,n,r){n.updateBound=r,W(t).addEventListener("resize",n.updateBound,{passive:!0});var o=c(t);return function t(e,n,r,o){var i="BODY"===e.nodeName,a=i?e.ownerDocument.defaultView:e;a.addEventListener(n,r,{passive:!0}),i||t(c(a.parentNode),n,r,o),o.push(a)}(o,"scroll",n.updateBound,n.scrollParents),n.scrollElement=o,n.eventsEnabled=!0,n}function V(){this.state.eventsEnabled||(this.state=$(this.reference,this.options,this.state,this.scheduleUpdate))}function Y(){var t,e;this.state.eventsEnabled&&(cancelAnimationFrame(this.scheduleUpdate),this.state=(t=this.reference,e=this.state,W(t).removeEventListener("resize",e.updateBound),e.scrollParents.forEach((function(t){t.removeEventListener("scroll",e.updateBound)})),e.updateBound=null,e.scrollParents=[],e.scrollElement=null,e.eventsEnabled=!1,e))}function G(t){return""!==t&&!isNaN(parseFloat(t))&&isFinite(t)}function Q(t,e){Object.keys(e).forEach((function(n){var r="";-1!==["width","height","top","right","bottom","left"].indexOf(n)&&G(e[n])&&(r="px"),t.style[n]=e[n]+r}))}var X=n&&/Firefox/i.test(navigator.userAgent);function K(t,e,n){var r=I(t,(function(t){return t.name===e})),o=!!r&&t.some((function(t){return t.name===n&&t.enabled&&t.order<r.order}));if(!o){var i="`"+e+"`",a="`"+n+"`";console.warn(a+" modifier is required by "+i+" modifier in order to work, be sure to include it before "+i+"!")}return o}var J=["auto-start","auto","auto-end","top-start","top","top-end","right-start","right","right-end","bottom-end","bottom","bottom-start","left-end","left","left-start"],Z=J.slice(3);function tt(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Z.indexOf(t),r=Z.slice(n+1).concat(Z.slice(0,n));return e?r.reverse():r}var et="flip",nt="clockwise",rt="counterclockwise";function ot(t,e,n,r){var o=[0,0],i=-1!==["right","left"].indexOf(r),a=t.split(/(\+|\-)/).map((function(t){return t.trim()})),l=a.indexOf(I(a,(function(t){return-1!==t.search(/,|\s/)})));a[l]&&-1===a[l].indexOf(",")&&console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.");var c=/\s*,\s*|\s+/,u=-1!==l?[a.slice(0,l).concat([a[l].split(c)[0]]),[a[l].split(c)[1]].concat(a.slice(l+1))]:[a];return(u=u.map((function(t,r){var o=(1===r?!i:i)?"height":"width",a=!1;return t.reduce((function(t,e){return""===t[t.length-1]&&-1!==["+","-"].indexOf(e)?(t[t.length-1]=e,a=!0,t):a?(t[t.length-1]+=e,a=!1,t):t.concat(e)}),[]).map((function(t){return function(t,e,n,r){var o=t.match(/((?:\-|\+)?\d*\.?\d*)(.*)/),i=+o[1],a=o[2];if(!i)return t;if(0===a.indexOf("%")){var l=void 0;switch(a){case"%p":l=n;break;case"%":case"%r":default:l=r}return S(l)[e]/100*i}if("vh"===a||"vw"===a){return("vh"===a?Math.max(document.documentElement.clientHeight,window.innerHeight||0):Math.max(document.documentElement.clientWidth,window.innerWidth||0))/100*i}return i}(t,o,e,n)}))}))).forEach((function(t,e){t.forEach((function(n,r){G(n)&&(o[e]+=n*("-"===t[r-1]?-1:1))}))})),o}var it={placement:"bottom",positionFixed:!1,eventsEnabled:!0,removeOnDestroy:!1,onCreate:function(){},onUpdate:function(){},modifiers:{shift:{order:100,enabled:!0,fn:function(t){var e=t.placement,n=e.split("-")[0],r=e.split("-")[1];if(r){var o=t.offsets,i=o.reference,a=o.popper,l=-1!==["bottom","top"].indexOf(n),c=l?"left":"top",u=l?"width":"height",s={start:_({},c,i[c]),end:_({},c,i[c]+i[u]-a[u])};t.offsets.popper=E({},a,s[r])}return t}},offset:{order:200,enabled:!0,fn:function(t,e){var n=e.offset,r=t.placement,o=t.offsets,i=o.popper,a=o.reference,l=r.split("-")[0],c=void 0;return c=G(+n)?[+n,0]:ot(n,i,a,l),"left"===l?(i.top+=c[0],i.left-=c[1]):"right"===l?(i.top+=c[0],i.left+=c[1]):"top"===l?(i.left+=c[0],i.top-=c[1]):"bottom"===l&&(i.left+=c[0],i.top+=c[1]),t.popper=i,t},offset:0},preventOverflow:{order:300,enabled:!0,fn:function(t,e){var n=e.boundariesElement||p(t.instance.popper);t.instance.reference===n&&(n=p(n));var r=q("transform"),o=t.instance.popper.style,i=o.top,a=o.left,l=o[r];o.top="",o.left="",o[r]="";var c=A(t.instance.popper,t.instance.reference,e.padding,n,t.positionFixed);o.top=i,o.left=a,o[r]=l,e.boundaries=c;var u=e.priority,s=t.offsets.popper,f={primary:function(t){var n=s[t];return s[t]<c[t]&&!e.escapeWithReference&&(n=Math.max(s[t],c[t])),_({},t,n)},secondary:function(t){var n="right"===t?"left":"top",r=s[n];return s[t]>c[t]&&!e.escapeWithReference&&(r=Math.min(s[n],c[t]-("right"===t?s.width:s.height))),_({},n,r)}};return u.forEach((function(t){var e=-1!==["left","top"].indexOf(t)?"primary":"secondary";s=E({},s,f[e](t))})),t.offsets.popper=s,t},priority:["left","right","top","bottom"],padding:5,boundariesElement:"scrollParent"},keepTogether:{order:400,enabled:!0,fn:function(t){var e=t.offsets,n=e.popper,r=e.reference,o=t.placement.split("-")[0],i=Math.floor,a=-1!==["top","bottom"].indexOf(o),l=a?"right":"bottom",c=a?"left":"top",u=a?"width":"height";return n[l]<i(r[c])&&(t.offsets.popper[c]=i(r[c])-n[u]),n[c]>i(r[l])&&(t.offsets.popper[c]=i(r[l])),t}},arrow:{order:500,enabled:!0,fn:function(t,e){var n;if(!K(t.instance.modifiers,"arrow","keepTogether"))return t;var r=e.element;if("string"==typeof r){if(!(r=t.instance.popper.querySelector(r)))return t}else if(!t.instance.popper.contains(r))return console.warn("WARNING: `arrow.element` must be child of its popper element!"),t;var o=t.placement.split("-")[0],i=t.offsets,l=i.popper,c=i.reference,u=-1!==["left","right"].indexOf(o),s=u?"height":"width",f=u?"Top":"Left",d=f.toLowerCase(),p=u?"left":"top",m=u?"bottom":"right",h=R(r)[s];c[m]-h<l[d]&&(t.offsets.popper[d]-=l[d]-(c[m]-h)),c[d]+h>l[m]&&(t.offsets.popper[d]+=c[d]+h-l[m]),t.offsets.popper=S(t.offsets.popper);var g=c[d]+c[s]/2-h/2,b=a(t.instance.popper),v=parseFloat(b["margin"+f]),y=parseFloat(b["border"+f+"Width"]),x=g-t.offsets.popper[d]-v-y;return x=Math.max(Math.min(l[s]-h,x),0),t.arrowElement=r,t.offsets.arrow=(_(n={},d,Math.round(x)),_(n,p,""),n),t},element:"[x-arrow]"},flip:{order:600,enabled:!0,fn:function(t,e){if(B(t.instance.modifiers,"inner"))return t;if(t.flipped&&t.placement===t.originalPlacement)return t;var n=A(t.instance.popper,t.instance.reference,e.padding,e.boundariesElement,t.positionFixed),r=t.placement.split("-")[0],o=D(r),i=t.placement.split("-")[1]||"",a=[];switch(e.behavior){case et:a=[r,o];break;case nt:a=tt(r);break;case rt:a=tt(r,!0);break;default:a=e.behavior}return a.forEach((function(l,c){if(r!==l||a.length===c+1)return t;r=t.placement.split("-")[0],o=D(r);var u=t.offsets.popper,s=t.offsets.reference,f=Math.floor,d="left"===r&&f(u.right)>f(s.left)||"right"===r&&f(u.left)<f(s.right)||"top"===r&&f(u.bottom)>f(s.top)||"bottom"===r&&f(u.top)<f(s.bottom),p=f(u.left)<f(n.left),m=f(u.right)>f(n.right),h=f(u.top)<f(n.top),g=f(u.bottom)>f(n.bottom),b="left"===r&&p||"right"===r&&m||"top"===r&&h||"bottom"===r&&g,v=-1!==["top","bottom"].indexOf(r),y=!!e.flipVariations&&(v&&"start"===i&&p||v&&"end"===i&&m||!v&&"start"===i&&h||!v&&"end"===i&&g),x=!!e.flipVariationsByContent&&(v&&"start"===i&&m||v&&"end"===i&&p||!v&&"start"===i&&g||!v&&"end"===i&&h),w=y||x;(d||b||w)&&(t.flipped=!0,(d||b)&&(r=a[c+1]),w&&(i=function(t){return"end"===t?"start":"start"===t?"end":t}(i)),t.placement=r+(i?"-"+i:""),t.offsets.popper=E({},t.offsets.popper,L(t.instance.popper,t.offsets.reference,t.placement)),t=U(t.instance.modifiers,t,"flip"))})),t},behavior:"flip",padding:5,boundariesElement:"viewport",flipVariations:!1,flipVariationsByContent:!1},inner:{order:700,enabled:!1,fn:function(t){var e=t.placement,n=e.split("-")[0],r=t.offsets,o=r.popper,i=r.reference,a=-1!==["left","right"].indexOf(n),l=-1===["top","left"].indexOf(n);return o[a?"left":"top"]=i[n]-(l?o[a?"width":"height"]:0),t.placement=D(e),t.offsets.popper=S(o),t}},hide:{order:800,enabled:!0,fn:function(t){if(!K(t.instance.modifiers,"hide","preventOverflow"))return t;var e=t.offsets.reference,n=I(t.instance.modifiers,(function(t){return"preventOverflow"===t.name})).boundaries;if(e.bottom<n.top||e.left>n.right||e.top>n.bottom||e.right<n.left){if(!0===t.hide)return t;t.hide=!0,t.attributes["x-out-of-boundaries"]=""}else{if(!1===t.hide)return t;t.hide=!1,t.attributes["x-out-of-boundaries"]=!1}return t}},computeStyle:{order:850,enabled:!0,fn:function(t,e){var n=e.x,r=e.y,o=t.offsets.popper,i=I(t.instance.modifiers,(function(t){return"applyStyle"===t.name})).gpuAcceleration;void 0!==i&&console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!");var a=void 0!==i?i:e.gpuAcceleration,l=p(t.instance.popper),c=M(l),u={position:o.position},s=function(t,e){var n=t.offsets,r=n.popper,o=n.reference,i=Math.round,a=Math.floor,l=function(t){return t},c=i(o.width),u=i(r.width),s=-1!==["left","right"].indexOf(t.placement),f=-1!==t.placement.indexOf("-"),d=e?s||f||c%2==u%2?i:a:l,p=e?i:l;return{left:d(c%2==1&&u%2==1&&!f&&e?r.left-1:r.left),top:p(r.top),bottom:p(r.bottom),right:d(r.right)}}(t,window.devicePixelRatio<2||!X),f="bottom"===n?"top":"bottom",d="right"===r?"left":"right",m=q("transform"),h=void 0,g=void 0;if(g="bottom"===f?"HTML"===l.nodeName?-l.clientHeight+s.bottom:-c.height+s.bottom:s.top,h="right"===d?"HTML"===l.nodeName?-l.clientWidth+s.right:-c.width+s.right:s.left,a&&m)u[m]="translate3d("+h+"px, "+g+"px, 0)",u[f]=0,u[d]=0,u.willChange="transform";else{var b="bottom"===f?-1:1,v="right"===d?-1:1;u[f]=g*b,u[d]=h*v,u.willChange=f+", "+d}var y={"x-placement":t.placement};return t.attributes=E({},y,t.attributes),t.styles=E({},u,t.styles),t.arrowStyles=E({},t.offsets.arrow,t.arrowStyles),t},gpuAcceleration:!0,x:"bottom",y:"right"},applyStyle:{order:900,enabled:!0,fn:function(t){var e,n;return Q(t.instance.popper,t.styles),e=t.instance.popper,n=t.attributes,Object.keys(n).forEach((function(t){!1!==n[t]?e.setAttribute(t,n[t]):e.removeAttribute(t)})),t.arrowElement&&Object.keys(t.arrowStyles).length&&Q(t.arrowElement,t.arrowStyles),t},onLoad:function(t,e,n,r,o){var i=j(o,e,t,n.positionFixed),a=z(n.placement,i,e,t,n.modifiers.flip.boundariesElement,n.modifiers.flip.padding);return e.setAttribute("x-placement",a),Q(e,{position:n.positionFixed?"fixed":"absolute"}),n},gpuAcceleration:void 0}}},at=function(){function t(e,n){var r=this,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};w(this,t),this.scheduleUpdate=function(){return requestAnimationFrame(r.update)},this.update=o(this.update.bind(this)),this.options=E({},t.Defaults,a),this.state={isDestroyed:!1,isCreated:!1,scrollParents:[]},this.reference=e&&e.jquery?e[0]:e,this.popper=n&&n.jquery?n[0]:n,this.options.modifiers={},Object.keys(E({},t.Defaults.modifiers,a.modifiers)).forEach((function(e){r.options.modifiers[e]=E({},t.Defaults.modifiers[e]||{},a.modifiers?a.modifiers[e]:{})})),this.modifiers=Object.keys(this.options.modifiers).map((function(t){return E({name:t},r.options.modifiers[t])})).sort((function(t,e){return t.order-e.order})),this.modifiers.forEach((function(t){t.enabled&&i(t.onLoad)&&t.onLoad(r.reference,r.popper,r.options,t,r.state)})),this.update();var l=this.options.eventsEnabled;l&&this.enableEventListeners(),this.state.eventsEnabled=l}return k(t,[{key:"update",value:function(){return F.call(this)}},{key:"destroy",value:function(){return H.call(this)}},{key:"enableEventListeners",value:function(){return V.call(this)}},{key:"disableEventListeners",value:function(){return Y.call(this)}}]),t}();at.Utils=("undefined"!=typeof window?window:t).PopperUtils,at.placements=J,at.Defaults=it,e.a=at}).call(this,n(13))},,function(t,e,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function a(t){if(null==t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}t.exports=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},n=0;n<10;n++)e["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(e).map((function(t){return e[t]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(t){r[t]=t})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(t){return!1}}()?Object.assign:function(t,e){for(var n,l,c=a(t),u=1;u<arguments.length;u++){for(var s in n=Object(arguments[u]))o.call(n,s)&&(c[s]=n[s]);if(r){l=r(n);for(var f=0;f<l.length;f++)i.call(n,l[f])&&(c[l[f]]=n[l[f]])}}return c}},function(t,e,n){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},i=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),a=[];function l(t){for(var e=-1,n=0;n<a.length;n++)if(a[n].identifier===t){e=n;break}return e}function c(t,e){for(var n={},r=[],o=0;o<t.length;o++){var i=t[o],c=e.base?i[0]+e.base:i[0],u=n[c]||0,s="".concat(c," ").concat(u);n[c]=u+1;var f=l(s),d={css:i[1],media:i[2],sourceMap:i[3]};-1!==f?(a[f].references++,a[f].updater(d)):a.push({identifier:s,updater:g(d,e),references:1}),r.push(s)}return r}function u(t){var e=document.createElement("style"),r=t.attributes||{};if(void 0===r.nonce){var o=n.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(t){e.setAttribute(t,r[t])})),"function"==typeof t.insert)t.insert(e);else{var a=i(t.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var s,f=(s=[],function(t,e){return s[t]=e,s.filter(Boolean).join("\n")});function d(t,e,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(t.styleSheet)t.styleSheet.cssText=f(e,o);else{var i=document.createTextNode(o),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(i,a[e]):t.appendChild(i)}}function p(t,e,n){var r=n.css,o=n.media,i=n.sourceMap;if(o?t.setAttribute("media",o):t.removeAttribute("media"),i&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}var m=null,h=0;function g(t,e){var n,r,o;if(e.singleton){var i=h++;n=m||(m=u(e)),r=d.bind(null,n,i,!1),o=d.bind(null,n,i,!0)}else n=u(e),r=p.bind(null,n,e),o=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else o()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=o());var n=c(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var r=0;r<n.length;r++){var o=l(n[r]);a[o].references--}for(var i=c(t,e),u=0;u<n.length;u++){var s=l(n[u]);0===a[s].references&&(a[s].updater(),a.splice(s,1))}n=i}}}},function(t,e,n){"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=function(t,e){var n=t[1]||"",r=t[3];if(!r)return n;if(e&&"function"==typeof btoa){var o=(a=r,l=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(c," */")),i=r.sources.map((function(t){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(t," */")}));return[n].concat(i).concat([o]).join("\n")}var a,l,c;return[n].join("\n")}(e,t);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,r){"string"==typeof t&&(t=[[null,t,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var l=0;l<t.length;l++){var c=[].concat(t[l]);r&&o[c[0]]||(n&&(c[2]?c[2]="".concat(n," and ").concat(c[2]):c[2]=n),e.push(c))}},e}},function(t,e,n){"use strict";t.exports=n(49)},function(t,e,n){"use strict";var r=Array.prototype.slice,o=n(27),i=Object.keys,a=i?function(t){return i(t)}:n(51),l=Object.keys;a.shim=function(){Object.keys?function(){var t=Object.keys(arguments);return t&&t.length===arguments.length}(1,2)||(Object.keys=function(t){return o(t)?l(r.call(t)):l(t)}):Object.keys=a;return Object.keys||a},t.exports=a},function(t,e,n){"use strict";var r=Object.prototype.toString;t.exports=function(t){var e=r.call(t),n="[object Arguments]"===e;return n||(n="[object Array]"!==e&&null!==t&&"object"==typeof t&&"number"==typeof t.length&&t.length>=0&&"[object Function]"===r.call(t.callee)),n}},function(t,e,n){"use strict";var r=Object,o=TypeError;t.exports=function(){if(null!=this&&this!==r(this))throw new o("RegExp.prototype.flags getter called on non-object");var t="";return this.global&&(t+="g"),this.ignoreCase&&(t+="i"),this.multiline&&(t+="m"),this.dotAll&&(t+="s"),this.unicode&&(t+="u"),this.sticky&&(t+="y"),t}},function(t,e,n){"use strict";var r=n(28),o=n(15).supportsDescriptors,i=Object.getOwnPropertyDescriptor,a=TypeError;t.exports=function(){if(!o)throw new a("RegExp.prototype.flags requires a true ES5 environment that supports property descriptors");if("gim"===/a/gim.flags){var t=i(RegExp.prototype,"flags");if(t&&"function"==typeof t.get&&"boolean"==typeof/a/.dotAll)return t.get}return r}},function(t,e,n){"use strict";e.__esModule=!0,e.default=e.EXITING=e.ENTERED=e.ENTERING=e.EXITED=e.UNMOUNTED=void 0;var r=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)if(Object.prototype.hasOwnProperty.call(t,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(t,n):{};r.get||r.set?Object.defineProperty(e,n,r):e[n]=t[n]}return e.default=t,e}(n(1)),o=l(n(0)),i=l(n(8)),a=n(31);n(32);function l(t){return t&&t.__esModule?t:{default:t}}e.UNMOUNTED="unmounted";e.EXITED="exited";e.ENTERING="entering";e.ENTERED="entered";e.EXITING="exiting";var c=function(t){var e,n;function r(e,n){var r;r=t.call(this,e,n)||this;var o,i=n.transitionGroup,a=i&&!i.isMounting?e.enter:e.appear;return r.appearStatus=null,e.in?a?(o="exited",r.appearStatus="entering"):o="entered":o=e.unmountOnExit||e.mountOnEnter?"unmounted":"exited",r.state={status:o},r.nextCallback=null,r}n=t,(e=r).prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n;var a=r.prototype;return a.getChildContext=function(){return{transitionGroup:null}},r.getDerivedStateFromProps=function(t,e){return t.in&&"unmounted"===e.status?{status:"exited"}:null},a.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},a.componentDidUpdate=function(t){var e=null;if(t!==this.props){var n=this.state.status;this.props.in?"entering"!==n&&"entered"!==n&&(e="entering"):"entering"!==n&&"entered"!==n||(e="exiting")}this.updateStatus(!1,e)},a.componentWillUnmount=function(){this.cancelNextCallback()},a.getTimeouts=function(){var t,e,n,r=this.props.timeout;return t=e=n=r,null!=r&&"number"!=typeof r&&(t=r.exit,e=r.enter,n=void 0!==r.appear?r.appear:e),{exit:t,enter:e,appear:n}},a.updateStatus=function(t,e){if(void 0===t&&(t=!1),null!==e){this.cancelNextCallback();var n=i.default.findDOMNode(this);"entering"===e?this.performEnter(n,t):this.performExit(n)}else this.props.unmountOnExit&&"exited"===this.state.status&&this.setState({status:"unmounted"})},a.performEnter=function(t,e){var n=this,r=this.props.enter,o=this.context.transitionGroup?this.context.transitionGroup.isMounting:e,i=this.getTimeouts(),a=o?i.appear:i.enter;e||r?(this.props.onEnter(t,o),this.safeSetState({status:"entering"},(function(){n.props.onEntering(t,o),n.onTransitionEnd(t,a,(function(){n.safeSetState({status:"entered"},(function(){n.props.onEntered(t,o)}))}))}))):this.safeSetState({status:"entered"},(function(){n.props.onEntered(t)}))},a.performExit=function(t){var e=this,n=this.props.exit,r=this.getTimeouts();n?(this.props.onExit(t),this.safeSetState({status:"exiting"},(function(){e.props.onExiting(t),e.onTransitionEnd(t,r.exit,(function(){e.safeSetState({status:"exited"},(function(){e.props.onExited(t)}))}))}))):this.safeSetState({status:"exited"},(function(){e.props.onExited(t)}))},a.cancelNextCallback=function(){null!==this.nextCallback&&(this.nextCallback.cancel(),this.nextCallback=null)},a.safeSetState=function(t,e){e=this.setNextCallback(e),this.setState(t,e)},a.setNextCallback=function(t){var e=this,n=!0;return this.nextCallback=function(r){n&&(n=!1,e.nextCallback=null,t(r))},this.nextCallback.cancel=function(){n=!1},this.nextCallback},a.onTransitionEnd=function(t,e,n){this.setNextCallback(n);var r=null==e&&!this.props.addEndListener;t&&!r?(this.props.addEndListener&&this.props.addEndListener(t,this.nextCallback),null!=e&&setTimeout(this.nextCallback,e)):setTimeout(this.nextCallback,0)},a.render=function(){var t=this.state.status;if("unmounted"===t)return null;var e=this.props,n=e.children,r=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(e,["children"]);if(delete r.in,delete r.mountOnEnter,delete r.unmountOnExit,delete r.appear,delete r.enter,delete r.exit,delete r.timeout,delete r.addEndListener,delete r.onEnter,delete r.onEntering,delete r.onEntered,delete r.onExit,delete r.onExiting,delete r.onExited,"function"==typeof n)return n(t,r);var i=o.default.Children.only(n);return o.default.cloneElement(i,r)},r}(o.default.Component);function u(){}c.contextTypes={transitionGroup:r.object},c.childContextTypes={transitionGroup:function(){}},c.propTypes={},c.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:u,onEntering:u,onEntered:u,onExit:u,onExiting:u,onExited:u},c.UNMOUNTED=0,c.EXITED=1,c.ENTERING=2,c.ENTERED=3,c.EXITING=4;var s=(0,a.polyfill)(c);e.default=s},function(t,e,n){"use strict";function r(){var t=this.constructor.getDerivedStateFromProps(this.props,this.state);null!=t&&this.setState(t)}function o(t){this.setState(function(e){var n=this.constructor.getDerivedStateFromProps(t,e);return null!=n?n:null}.bind(this))}function i(t,e){try{var n=this.props,r=this.state;this.props=t,this.state=e,this.__reactInternalSnapshotFlag=!0,this.__reactInternalSnapshot=this.getSnapshotBeforeUpdate(n,r)}finally{this.props=n,this.state=r}}function a(t){var e=t.prototype;if(!e||!e.isReactComponent)throw new Error("Can only polyfill class components");if("function"!=typeof t.getDerivedStateFromProps&&"function"!=typeof e.getSnapshotBeforeUpdate)return t;var n=null,a=null,l=null;if("function"==typeof e.componentWillMount?n="componentWillMount":"function"==typeof e.UNSAFE_componentWillMount&&(n="UNSAFE_componentWillMount"),"function"==typeof e.componentWillReceiveProps?a="componentWillReceiveProps":"function"==typeof e.UNSAFE_componentWillReceiveProps&&(a="UNSAFE_componentWillReceiveProps"),"function"==typeof e.componentWillUpdate?l="componentWillUpdate":"function"==typeof e.UNSAFE_componentWillUpdate&&(l="UNSAFE_componentWillUpdate"),null!==n||null!==a||null!==l){var c=t.displayName||t.name,u="function"==typeof t.getDerivedStateFromProps?"getDerivedStateFromProps()":"getSnapshotBeforeUpdate()";throw Error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n"+c+" uses "+u+" but also contains the following legacy lifecycles:"+(null!==n?"\n  "+n:"")+(null!==a?"\n  "+a:"")+(null!==l?"\n  "+l:"")+"\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://fb.me/react-async-component-lifecycle-hooks")}if("function"==typeof t.getDerivedStateFromProps&&(e.componentWillMount=r,e.componentWillReceiveProps=o),"function"==typeof e.getSnapshotBeforeUpdate){if("function"!=typeof e.componentDidUpdate)throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");e.componentWillUpdate=i;var s=e.componentDidUpdate;e.componentDidUpdate=function(t,e,n){var r=this.__reactInternalSnapshotFlag?this.__reactInternalSnapshot:n;s.call(this,t,e,r)}}return t}n.r(e),n.d(e,"polyfill",(function(){return a})),r.__suppressDeprecationWarning=!0,o.__suppressDeprecationWarning=!0,i.__suppressDeprecationWarning=!0},function(t,e,n){"use strict";e.__esModule=!0,e.classNamesShape=e.timeoutsShape=void 0;var r;(r=n(1))&&r.__esModule;e.timeoutsShape=null;e.classNamesShape=null},function(t,e,n){"use strict";e.__esModule=!0,e.default=void 0;var r=l(n(1)),o=l(n(0)),i=n(31),a=n(71);function l(t){return t&&t.__esModule?t:{default:t}}function c(){return(c=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t}).apply(this,arguments)}function u(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}var s=Object.values||function(t){return Object.keys(t).map((function(e){return t[e]}))},f=function(t){var e,n;function r(e,n){var r,o=(r=t.call(this,e,n)||this).handleExited.bind(u(u(r)));return r.state={handleExited:o,firstRender:!0},r}n=t,(e=r).prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n;var i=r.prototype;return i.getChildContext=function(){return{transitionGroup:{isMounting:!this.appeared}}},i.componentDidMount=function(){this.appeared=!0,this.mounted=!0},i.componentWillUnmount=function(){this.mounted=!1},r.getDerivedStateFromProps=function(t,e){var n=e.children,r=e.handleExited;return{children:e.firstRender?(0,a.getInitialChildMapping)(t,r):(0,a.getNextChildMapping)(t,n,r),firstRender:!1}},i.handleExited=function(t,e){var n=(0,a.getChildMapping)(this.props.children);t.key in n||(t.props.onExited&&t.props.onExited(e),this.mounted&&this.setState((function(e){var n=c({},e.children);return delete n[t.key],{children:n}})))},i.render=function(){var t=this.props,e=t.component,n=t.childFactory,r=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,["component","childFactory"]),i=s(this.state.children).map(n);return delete r.appear,delete r.enter,delete r.exit,null===e?i:o.default.createElement(e,r,i)},r}(o.default.Component);f.childContextTypes={transitionGroup:r.default.object.isRequired},f.propTypes={},f.defaultProps={component:"div",childFactory:function(t){return t}};var d=(0,i.polyfill)(f);e.default=d,t.exports=e.default},function(t,e,n){"use strict";n.r(e);var r=function(t,e){return t<e?-1:t>e?1:t>=e?0:NaN},o=function(t){var e;return 1===t.length&&(e=t,t=function(t,n){return r(e(t),n)}),{left:function(e,n,r,o){for(null==r&&(r=0),null==o&&(o=e.length);r<o;){var i=r+o>>>1;t(e[i],n)<0?r=i+1:o=i}return r},right:function(e,n,r,o){for(null==r&&(r=0),null==o&&(o=e.length);r<o;){var i=r+o>>>1;t(e[i],n)>0?o=i:r=i+1}return r}}};var i=o(r),a=i.right,l=i.left,c=a,u=function(t,e){null==e&&(e=s);for(var n=0,r=t.length-1,o=t[0],i=new Array(r<0?0:r);n<r;)i[n]=e(o,o=t[++n]);return i};function s(t,e){return[t,e]}var f=function(t,e,n){var r,o,i,a,l=t.length,c=e.length,u=new Array(l*c);for(null==n&&(n=s),r=i=0;r<l;++r)for(a=t[r],o=0;o<c;++o,++i)u[i]=n(a,e[o]);return u},d=function(t,e){return e<t?-1:e>t?1:e>=t?0:NaN},p=function(t){return null===t?NaN:+t},m=function(t,e){var n,r,o=t.length,i=0,a=-1,l=0,c=0;if(null==e)for(;++a<o;)isNaN(n=p(t[a]))||(c+=(r=n-l)*(n-(l+=r/++i)));else for(;++a<o;)isNaN(n=p(e(t[a],a,t)))||(c+=(r=n-l)*(n-(l+=r/++i)));if(i>1)return c/(i-1)},h=function(t,e){var n=m(t,e);return n?Math.sqrt(n):n},g=function(t,e){var n,r,o,i=t.length,a=-1;if(null==e){for(;++a<i;)if(null!=(n=t[a])&&n>=n)for(r=o=n;++a<i;)null!=(n=t[a])&&(r>n&&(r=n),o<n&&(o=n))}else for(;++a<i;)if(null!=(n=e(t[a],a,t))&&n>=n)for(r=o=n;++a<i;)null!=(n=e(t[a],a,t))&&(r>n&&(r=n),o<n&&(o=n));return[r,o]},b=Array.prototype,v=b.slice,y=b.map,x=function(t){return function(){return t}},w=function(t){return t},k=function(t,e,n){t=+t,e=+e,n=(o=arguments.length)<2?(e=t,t=0,1):o<3?1:+n;for(var r=-1,o=0|Math.max(0,Math.ceil((e-t)/n)),i=new Array(o);++r<o;)i[r]=t+r*n;return i},_=Math.sqrt(50),E=Math.sqrt(10),S=Math.sqrt(2),M=function(t,e,n){var r,o,i,a,l=-1;if(n=+n,(t=+t)===(e=+e)&&n>0)return[t];if((r=e<t)&&(o=t,t=e,e=o),0===(a=T(t,e,n))||!isFinite(a))return[];if(a>0)for(t=Math.ceil(t/a),e=Math.floor(e/a),i=new Array(o=Math.ceil(e-t+1));++l<o;)i[l]=(t+l)*a;else for(t=Math.floor(t*a),e=Math.ceil(e*a),i=new Array(o=Math.ceil(t-e+1));++l<o;)i[l]=(t-l)/a;return r&&i.reverse(),i};function T(t,e,n){var r=(e-t)/Math.max(0,n),o=Math.floor(Math.log(r)/Math.LN10),i=r/Math.pow(10,o);return o>=0?(i>=_?10:i>=E?5:i>=S?2:1)*Math.pow(10,o):-Math.pow(10,-o)/(i>=_?10:i>=E?5:i>=S?2:1)}function C(t,e,n){var r=Math.abs(e-t)/Math.max(0,n),o=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),i=r/o;return i>=_?o*=10:i>=E?o*=5:i>=S&&(o*=2),e<t?-o:o}var N=function(t){return Math.ceil(Math.log(t.length)/Math.LN2)+1},P=function(){var t=w,e=g,n=N;function r(r){var o,i,a=r.length,l=new Array(a);for(o=0;o<a;++o)l[o]=t(r[o],o,r);var u=e(l),s=u[0],f=u[1],d=n(l,s,f);Array.isArray(d)||(d=C(s,f,d),d=k(Math.ceil(s/d)*d,f,d));for(var p=d.length;d[0]<=s;)d.shift(),--p;for(;d[p-1]>f;)d.pop(),--p;var m,h=new Array(p+1);for(o=0;o<=p;++o)(m=h[o]=[]).x0=o>0?d[o-1]:s,m.x1=o<p?d[o]:f;for(o=0;o<a;++o)s<=(i=l[o])&&i<=f&&h[c(d,i,0,p)].push(r[o]);return h}return r.value=function(e){return arguments.length?(t="function"==typeof e?e:x(e),r):t},r.domain=function(t){return arguments.length?(e="function"==typeof t?t:x([t[0],t[1]]),r):e},r.thresholds=function(t){return arguments.length?(n="function"==typeof t?t:Array.isArray(t)?x(v.call(t)):x(t),r):n},r},A=function(t,e,n){if(null==n&&(n=p),r=t.length){if((e=+e)<=0||r<2)return+n(t[0],0,t);if(e>=1)return+n(t[r-1],r-1,t);var r,o=(r-1)*e,i=Math.floor(o),a=+n(t[i],i,t);return a+(+n(t[i+1],i+1,t)-a)*(o-i)}},O=function(t,e,n){return t=y.call(t,p).sort(r),Math.ceil((n-e)/(2*(A(t,.75)-A(t,.25))*Math.pow(t.length,-1/3)))},z=function(t,e,n){return Math.ceil((n-e)/(3.5*h(t)*Math.pow(t.length,-1/3)))},j=function(t,e){var n,r,o=t.length,i=-1;if(null==e){for(;++i<o;)if(null!=(n=t[i])&&n>=n)for(r=n;++i<o;)null!=(n=t[i])&&n>r&&(r=n)}else for(;++i<o;)if(null!=(n=e(t[i],i,t))&&n>=n)for(r=n;++i<o;)null!=(n=e(t[i],i,t))&&n>r&&(r=n);return r},R=function(t,e){var n,r=t.length,o=r,i=-1,a=0;if(null==e)for(;++i<r;)isNaN(n=p(t[i]))?--o:a+=n;else for(;++i<r;)isNaN(n=p(e(t[i],i,t)))?--o:a+=n;if(o)return a/o},D=function(t,e){var n,o=t.length,i=-1,a=[];if(null==e)for(;++i<o;)isNaN(n=p(t[i]))||a.push(n);else for(;++i<o;)isNaN(n=p(e(t[i],i,t)))||a.push(n);return A(a.sort(r),.5)},L=function(t){for(var e,n,r,o=t.length,i=-1,a=0;++i<o;)a+=t[i].length;for(n=new Array(a);--o>=0;)for(e=(r=t[o]).length;--e>=0;)n[--a]=r[e];return n},I=function(t,e){var n,r,o=t.length,i=-1;if(null==e){for(;++i<o;)if(null!=(n=t[i])&&n>=n)for(r=n;++i<o;)null!=(n=t[i])&&r>n&&(r=n)}else for(;++i<o;)if(null!=(n=e(t[i],i,t))&&n>=n)for(r=n;++i<o;)null!=(n=e(t[i],i,t))&&r>n&&(r=n);return r},U=function(t,e){for(var n=e.length,r=new Array(n);n--;)r[n]=t[e[n]];return r},F=function(t,e){if(n=t.length){var n,o,i=0,a=0,l=t[a];for(null==e&&(e=r);++i<n;)(e(o=t[i],l)<0||0!==e(l,l))&&(l=o,a=i);return 0===e(l,l)?a:void 0}},B=function(t,e,n){for(var r,o,i=(null==n?t.length:n)-(e=null==e?0:+e);i;)o=Math.random()*i--|0,r=t[i+e],t[i+e]=t[o+e],t[o+e]=r;return t},q=function(t,e){var n,r=t.length,o=-1,i=0;if(null==e)for(;++o<r;)(n=+t[o])&&(i+=n);else for(;++o<r;)(n=+e(t[o],o,t))&&(i+=n);return i},H=function(t){if(!(o=t.length))return[];for(var e=-1,n=I(t,W),r=new Array(n);++e<n;)for(var o,i=-1,a=r[e]=new Array(o);++i<o;)a[i]=t[i][e];return r};function W(t){return t.length}var $=function(){return H(arguments)},V=Array.prototype.slice,Y=function(t){return t};function G(t){return"translate("+(t+.5)+",0)"}function Q(t){return"translate(0,"+(t+.5)+")"}function X(t){return function(e){return+t(e)}}function K(t){var e=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(e=Math.round(e)),function(n){return+t(n)+e}}function J(){return!this.__axis}function Z(t,e){var n=[],r=null,o=null,i=6,a=6,l=3,c=1===t||4===t?-1:1,u=4===t||2===t?"x":"y",s=1===t||3===t?G:Q;function f(f){var d=null==r?e.ticks?e.ticks.apply(e,n):e.domain():r,p=null==o?e.tickFormat?e.tickFormat.apply(e,n):Y:o,m=Math.max(i,0)+l,h=e.range(),g=+h[0]+.5,b=+h[h.length-1]+.5,v=(e.bandwidth?K:X)(e.copy()),y=f.selection?f.selection():f,x=y.selectAll(".domain").data([null]),w=y.selectAll(".tick").data(d,e).order(),k=w.exit(),_=w.enter().append("g").attr("class","tick"),E=w.select("line"),S=w.select("text");x=x.merge(x.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),w=w.merge(_),E=E.merge(_.append("line").attr("stroke","currentColor").attr(u+"2",c*i)),S=S.merge(_.append("text").attr("fill","currentColor").attr(u,c*m).attr("dy",1===t?"0em":3===t?"0.71em":"0.32em")),f!==y&&(x=x.transition(f),w=w.transition(f),E=E.transition(f),S=S.transition(f),k=k.transition(f).attr("opacity",1e-6).attr("transform",(function(t){return isFinite(t=v(t))?s(t):this.getAttribute("transform")})),_.attr("opacity",1e-6).attr("transform",(function(t){var e=this.parentNode.__axis;return s(e&&isFinite(e=e(t))?e:v(t))}))),k.remove(),x.attr("d",4===t||2==t?a?"M"+c*a+","+g+"H0.5V"+b+"H"+c*a:"M0.5,"+g+"V"+b:a?"M"+g+","+c*a+"V0.5H"+b+"V"+c*a:"M"+g+",0.5H"+b),w.attr("opacity",1).attr("transform",(function(t){return s(v(t))})),E.attr(u+"2",c*i),S.attr(u,c*m).text(p),y.filter(J).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",2===t?"start":4===t?"end":"middle"),y.each((function(){this.__axis=v}))}return f.scale=function(t){return arguments.length?(e=t,f):e},f.ticks=function(){return n=V.call(arguments),f},f.tickArguments=function(t){return arguments.length?(n=null==t?[]:V.call(t),f):n.slice()},f.tickValues=function(t){return arguments.length?(r=null==t?null:V.call(t),f):r&&r.slice()},f.tickFormat=function(t){return arguments.length?(o=t,f):o},f.tickSize=function(t){return arguments.length?(i=a=+t,f):i},f.tickSizeInner=function(t){return arguments.length?(i=+t,f):i},f.tickSizeOuter=function(t){return arguments.length?(a=+t,f):a},f.tickPadding=function(t){return arguments.length?(l=+t,f):l},f}function tt(t){return Z(1,t)}function et(t){return Z(2,t)}function nt(t){return Z(3,t)}function rt(t){return Z(4,t)}var ot={value:function(){}};function it(){for(var t,e=0,n=arguments.length,r={};e<n;++e){if(!(t=arguments[e]+"")||t in r||/[\s.]/.test(t))throw new Error("illegal type: "+t);r[t]=[]}return new at(r)}function at(t){this._=t}function lt(t,e){return t.trim().split(/^|\s+/).map((function(t){var n="",r=t.indexOf(".");if(r>=0&&(n=t.slice(r+1),t=t.slice(0,r)),t&&!e.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:n}}))}function ct(t,e){for(var n,r=0,o=t.length;r<o;++r)if((n=t[r]).name===e)return n.value}function ut(t,e,n){for(var r=0,o=t.length;r<o;++r)if(t[r].name===e){t[r]=ot,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=n&&t.push({name:e,value:n}),t}at.prototype=it.prototype={constructor:at,on:function(t,e){var n,r=this._,o=lt(t+"",r),i=-1,a=o.length;if(!(arguments.length<2)){if(null!=e&&"function"!=typeof e)throw new Error("invalid callback: "+e);for(;++i<a;)if(n=(t=o[i]).type)r[n]=ut(r[n],t.name,e);else if(null==e)for(n in r)r[n]=ut(r[n],t.name,null);return this}for(;++i<a;)if((n=(t=o[i]).type)&&(n=ct(r[n],t.name)))return n},copy:function(){var t={},e=this._;for(var n in e)t[n]=e[n].slice();return new at(t)},call:function(t,e){if((n=arguments.length-2)>0)for(var n,r,o=new Array(n),i=0;i<n;++i)o[i]=arguments[i+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(i=0,n=(r=this._[t]).length;i<n;++i)r[i].value.apply(e,o)},apply:function(t,e,n){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],o=0,i=r.length;o<i;++o)r[o].value.apply(e,n)}};var st=it;function ft(){}var dt=function(t){return null==t?ft:function(){return this.querySelector(t)}};function pt(){return[]}var mt=function(t){return null==t?pt:function(){return this.querySelectorAll(t)}},ht=function(t){return function(){return this.matches(t)}},gt=function(t){return new Array(t.length)};function bt(t,e){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=e}bt.prototype={constructor:bt,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,e){return this._parent.insertBefore(t,e)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};function vt(t,e,n,r,o,i){for(var a,l=0,c=e.length,u=i.length;l<u;++l)(a=e[l])?(a.__data__=i[l],r[l]=a):n[l]=new bt(t,i[l]);for(;l<c;++l)(a=e[l])&&(o[l]=a)}function yt(t,e,n,r,o,i,a){var l,c,u,s={},f=e.length,d=i.length,p=new Array(f);for(l=0;l<f;++l)(c=e[l])&&(p[l]=u="$"+a.call(c,c.__data__,l,e),u in s?o[l]=c:s[u]=c);for(l=0;l<d;++l)(c=s[u="$"+a.call(t,i[l],l,i)])?(r[l]=c,c.__data__=i[l],s[u]=null):n[l]=new bt(t,i[l]);for(l=0;l<f;++l)(c=e[l])&&s[p[l]]===c&&(o[l]=c)}function xt(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}var wt="http://www.w3.org/1999/xhtml",kt={svg:"http://www.w3.org/2000/svg",xhtml:wt,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},_t=function(t){var e=t+="",n=e.indexOf(":");return n>=0&&"xmlns"!==(e=t.slice(0,n))&&(t=t.slice(n+1)),kt.hasOwnProperty(e)?{space:kt[e],local:t}:t};function Et(t){return function(){this.removeAttribute(t)}}function St(t){return function(){this.removeAttributeNS(t.space,t.local)}}function Mt(t,e){return function(){this.setAttribute(t,e)}}function Tt(t,e){return function(){this.setAttributeNS(t.space,t.local,e)}}function Ct(t,e){return function(){var n=e.apply(this,arguments);null==n?this.removeAttribute(t):this.setAttribute(t,n)}}function Nt(t,e){return function(){var n=e.apply(this,arguments);null==n?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,n)}}var Pt=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function At(t){return function(){this.style.removeProperty(t)}}function Ot(t,e,n){return function(){this.style.setProperty(t,e,n)}}function zt(t,e,n){return function(){var r=e.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,n)}}function jt(t,e){return t.style.getPropertyValue(e)||Pt(t).getComputedStyle(t,null).getPropertyValue(e)}function Rt(t){return function(){delete this[t]}}function Dt(t,e){return function(){this[t]=e}}function Lt(t,e){return function(){var n=e.apply(this,arguments);null==n?delete this[t]:this[t]=n}}function It(t){return t.trim().split(/^|\s+/)}function Ut(t){return t.classList||new Ft(t)}function Ft(t){this._node=t,this._names=It(t.getAttribute("class")||"")}function Bt(t,e){for(var n=Ut(t),r=-1,o=e.length;++r<o;)n.add(e[r])}function qt(t,e){for(var n=Ut(t),r=-1,o=e.length;++r<o;)n.remove(e[r])}function Ht(t){return function(){Bt(this,t)}}function Wt(t){return function(){qt(this,t)}}function $t(t,e){return function(){(e.apply(this,arguments)?Bt:qt)(this,t)}}Ft.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var e=this._names.indexOf(t);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function Vt(){this.textContent=""}function Yt(t){return function(){this.textContent=t}}function Gt(t){return function(){var e=t.apply(this,arguments);this.textContent=null==e?"":e}}function Qt(){this.innerHTML=""}function Xt(t){return function(){this.innerHTML=t}}function Kt(t){return function(){var e=t.apply(this,arguments);this.innerHTML=null==e?"":e}}function Jt(){this.nextSibling&&this.parentNode.appendChild(this)}function Zt(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function te(t){return function(){var e=this.ownerDocument,n=this.namespaceURI;return n===wt&&e.documentElement.namespaceURI===wt?e.createElement(t):e.createElementNS(n,t)}}function ee(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}var ne=function(t){var e=_t(t);return(e.local?ee:te)(e)};function re(){return null}function oe(){var t=this.parentNode;t&&t.removeChild(this)}function ie(){var t=this.cloneNode(!1),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function ae(){var t=this.cloneNode(!0),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}var le={},ce=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(le={mouseenter:"mouseover",mouseleave:"mouseout"}));function ue(t,e,n){return t=se(t,e,n),function(e){var n=e.relatedTarget;n&&(n===this||8&n.compareDocumentPosition(this))||t.call(this,e)}}function se(t,e,n){return function(r){var o=ce;ce=r;try{t.call(this,this.__data__,e,n)}finally{ce=o}}}function fe(t){return t.trim().split(/^|\s+/).map((function(t){var e="",n=t.indexOf(".");return n>=0&&(e=t.slice(n+1),t=t.slice(0,n)),{type:t,name:e}}))}function de(t){return function(){var e=this.__on;if(e){for(var n,r=0,o=-1,i=e.length;r<i;++r)n=e[r],t.type&&n.type!==t.type||n.name!==t.name?e[++o]=n:this.removeEventListener(n.type,n.listener,n.capture);++o?e.length=o:delete this.__on}}}function pe(t,e,n){var r=le.hasOwnProperty(t.type)?ue:se;return function(o,i,a){var l,c=this.__on,u=r(e,i,a);if(c)for(var s=0,f=c.length;s<f;++s)if((l=c[s]).type===t.type&&l.name===t.name)return this.removeEventListener(l.type,l.listener,l.capture),this.addEventListener(l.type,l.listener=u,l.capture=n),void(l.value=e);this.addEventListener(t.type,u,n),l={type:t.type,name:t.name,value:e,listener:u,capture:n},c?c.push(l):this.__on=[l]}}function me(t,e,n,r){var o=ce;t.sourceEvent=ce,ce=t;try{return e.apply(n,r)}finally{ce=o}}function he(t,e,n){var r=Pt(t),o=r.CustomEvent;"function"==typeof o?o=new o(e,n):(o=r.document.createEvent("Event"),n?(o.initEvent(e,n.bubbles,n.cancelable),o.detail=n.detail):o.initEvent(e,!1,!1)),t.dispatchEvent(o)}function ge(t,e){return function(){return he(this,t,e)}}function be(t,e){return function(){return he(this,t,e.apply(this,arguments))}}var ve=[null];function ye(t,e){this._groups=t,this._parents=e}function xe(){return new ye([[document.documentElement]],ve)}ye.prototype=xe.prototype={constructor:ye,select:function(t){"function"!=typeof t&&(t=dt(t));for(var e=this._groups,n=e.length,r=new Array(n),o=0;o<n;++o)for(var i,a,l=e[o],c=l.length,u=r[o]=new Array(c),s=0;s<c;++s)(i=l[s])&&(a=t.call(i,i.__data__,s,l))&&("__data__"in i&&(a.__data__=i.__data__),u[s]=a);return new ye(r,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=mt(t));for(var e=this._groups,n=e.length,r=[],o=[],i=0;i<n;++i)for(var a,l=e[i],c=l.length,u=0;u<c;++u)(a=l[u])&&(r.push(t.call(a,a.__data__,u,l)),o.push(a));return new ye(r,o)},filter:function(t){"function"!=typeof t&&(t=ht(t));for(var e=this._groups,n=e.length,r=new Array(n),o=0;o<n;++o)for(var i,a=e[o],l=a.length,c=r[o]=[],u=0;u<l;++u)(i=a[u])&&t.call(i,i.__data__,u,a)&&c.push(i);return new ye(r,this._parents)},data:function(t,e){if(!t)return m=new Array(this.size()),s=-1,this.each((function(t){m[++s]=t})),m;var n,r=e?yt:vt,o=this._parents,i=this._groups;"function"!=typeof t&&(n=t,t=function(){return n});for(var a=i.length,l=new Array(a),c=new Array(a),u=new Array(a),s=0;s<a;++s){var f=o[s],d=i[s],p=d.length,m=t.call(f,f&&f.__data__,s,o),h=m.length,g=c[s]=new Array(h),b=l[s]=new Array(h);r(f,d,g,b,u[s]=new Array(p),m,e);for(var v,y,x=0,w=0;x<h;++x)if(v=g[x]){for(x>=w&&(w=x+1);!(y=b[w])&&++w<h;);v._next=y||null}}return(l=new ye(l,o))._enter=c,l._exit=u,l},enter:function(){return new ye(this._enter||this._groups.map(gt),this._parents)},exit:function(){return new ye(this._exit||this._groups.map(gt),this._parents)},join:function(t,e,n){var r=this.enter(),o=this,i=this.exit();return r="function"==typeof t?t(r):r.append(t+""),null!=e&&(o=e(o)),null==n?i.remove():n(i),r&&o?r.merge(o).order():o},merge:function(t){for(var e=this._groups,n=t._groups,r=e.length,o=n.length,i=Math.min(r,o),a=new Array(r),l=0;l<i;++l)for(var c,u=e[l],s=n[l],f=u.length,d=a[l]=new Array(f),p=0;p<f;++p)(c=u[p]||s[p])&&(d[p]=c);for(;l<r;++l)a[l]=e[l];return new ye(a,this._parents)},order:function(){for(var t=this._groups,e=-1,n=t.length;++e<n;)for(var r,o=t[e],i=o.length-1,a=o[i];--i>=0;)(r=o[i])&&(a&&4^r.compareDocumentPosition(a)&&a.parentNode.insertBefore(r,a),a=r);return this},sort:function(t){function e(e,n){return e&&n?t(e.__data__,n.__data__):!e-!n}t||(t=xt);for(var n=this._groups,r=n.length,o=new Array(r),i=0;i<r;++i){for(var a,l=n[i],c=l.length,u=o[i]=new Array(c),s=0;s<c;++s)(a=l[s])&&(u[s]=a);u.sort(e)}return new ye(o,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),e=-1;return this.each((function(){t[++e]=this})),t},node:function(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var r=t[e],o=0,i=r.length;o<i;++o){var a=r[o];if(a)return a}return null},size:function(){var t=0;return this.each((function(){++t})),t},empty:function(){return!this.node()},each:function(t){for(var e=this._groups,n=0,r=e.length;n<r;++n)for(var o,i=e[n],a=0,l=i.length;a<l;++a)(o=i[a])&&t.call(o,o.__data__,a,i);return this},attr:function(t,e){var n=_t(t);if(arguments.length<2){var r=this.node();return n.local?r.getAttributeNS(n.space,n.local):r.getAttribute(n)}return this.each((null==e?n.local?St:Et:"function"==typeof e?n.local?Nt:Ct:n.local?Tt:Mt)(n,e))},style:function(t,e,n){return arguments.length>1?this.each((null==e?At:"function"==typeof e?zt:Ot)(t,e,null==n?"":n)):jt(this.node(),t)},property:function(t,e){return arguments.length>1?this.each((null==e?Rt:"function"==typeof e?Lt:Dt)(t,e)):this.node()[t]},classed:function(t,e){var n=It(t+"");if(arguments.length<2){for(var r=Ut(this.node()),o=-1,i=n.length;++o<i;)if(!r.contains(n[o]))return!1;return!0}return this.each(("function"==typeof e?$t:e?Ht:Wt)(n,e))},text:function(t){return arguments.length?this.each(null==t?Vt:("function"==typeof t?Gt:Yt)(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?Qt:("function"==typeof t?Kt:Xt)(t)):this.node().innerHTML},raise:function(){return this.each(Jt)},lower:function(){return this.each(Zt)},append:function(t){var e="function"==typeof t?t:ne(t);return this.select((function(){return this.appendChild(e.apply(this,arguments))}))},insert:function(t,e){var n="function"==typeof t?t:ne(t),r=null==e?re:"function"==typeof e?e:dt(e);return this.select((function(){return this.insertBefore(n.apply(this,arguments),r.apply(this,arguments)||null)}))},remove:function(){return this.each(oe)},clone:function(t){return this.select(t?ae:ie)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,e,n){var r,o,i=fe(t+""),a=i.length;if(!(arguments.length<2)){for(l=e?pe:de,null==n&&(n=!1),r=0;r<a;++r)this.each(l(i[r],e,n));return this}var l=this.node().__on;if(l)for(var c,u=0,s=l.length;u<s;++u)for(r=0,c=l[u];r<a;++r)if((o=i[r]).type===c.type&&o.name===c.name)return c.value},dispatch:function(t,e){return this.each(("function"==typeof e?be:ge)(t,e))}};var we=xe,ke=function(t){return"string"==typeof t?new ye([[document.querySelector(t)]],[document.documentElement]):new ye([[t]],ve)};function _e(){ce.stopImmediatePropagation()}var Ee=function(){ce.preventDefault(),ce.stopImmediatePropagation()},Se=function(t){var e=t.document.documentElement,n=ke(t).on("dragstart.drag",Ee,!0);"onselectstart"in e?n.on("selectstart.drag",Ee,!0):(e.__noselect=e.style.MozUserSelect,e.style.MozUserSelect="none")};function Me(t,e){var n=t.document.documentElement,r=ke(t).on("dragstart.drag",null);e&&(r.on("click.drag",Ee,!0),setTimeout((function(){r.on("click.drag",null)}),0)),"onselectstart"in n?r.on("selectstart.drag",null):(n.style.MozUserSelect=n.__noselect,delete n.__noselect)}var Te=function(t,e,n){t.prototype=e.prototype=n,n.constructor=t};function Ce(t,e){var n=Object.create(t.prototype);for(var r in e)n[r]=e[r];return n}function Ne(){}var Pe="\\s*([+-]?\\d+)\\s*",Ae="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Oe="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",ze=/^#([0-9a-f]{3,8})$/,je=new RegExp("^rgb\\("+[Pe,Pe,Pe]+"\\)$"),Re=new RegExp("^rgb\\("+[Oe,Oe,Oe]+"\\)$"),De=new RegExp("^rgba\\("+[Pe,Pe,Pe,Ae]+"\\)$"),Le=new RegExp("^rgba\\("+[Oe,Oe,Oe,Ae]+"\\)$"),Ie=new RegExp("^hsl\\("+[Ae,Oe,Oe]+"\\)$"),Ue=new RegExp("^hsla\\("+[Ae,Oe,Oe,Ae]+"\\)$"),Fe={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Be(){return this.rgb().formatHex()}function qe(){return this.rgb().formatRgb()}function He(t){var e,n;return t=(t+"").trim().toLowerCase(),(e=ze.exec(t))?(n=e[1].length,e=parseInt(e[1],16),6===n?We(e):3===n?new Ge(e>>8&15|e>>4&240,e>>4&15|240&e,(15&e)<<4|15&e,1):8===n?new Ge(e>>24&255,e>>16&255,e>>8&255,(255&e)/255):4===n?new Ge(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|240&e,((15&e)<<4|15&e)/255):null):(e=je.exec(t))?new Ge(e[1],e[2],e[3],1):(e=Re.exec(t))?new Ge(255*e[1]/100,255*e[2]/100,255*e[3]/100,1):(e=De.exec(t))?$e(e[1],e[2],e[3],e[4]):(e=Le.exec(t))?$e(255*e[1]/100,255*e[2]/100,255*e[3]/100,e[4]):(e=Ie.exec(t))?Je(e[1],e[2]/100,e[3]/100,1):(e=Ue.exec(t))?Je(e[1],e[2]/100,e[3]/100,e[4]):Fe.hasOwnProperty(t)?We(Fe[t]):"transparent"===t?new Ge(NaN,NaN,NaN,0):null}function We(t){return new Ge(t>>16&255,t>>8&255,255&t,1)}function $e(t,e,n,r){return r<=0&&(t=e=n=NaN),new Ge(t,e,n,r)}function Ve(t){return t instanceof Ne||(t=He(t)),t?new Ge((t=t.rgb()).r,t.g,t.b,t.opacity):new Ge}function Ye(t,e,n,r){return 1===arguments.length?Ve(t):new Ge(t,e,n,null==r?1:r)}function Ge(t,e,n,r){this.r=+t,this.g=+e,this.b=+n,this.opacity=+r}function Qe(){return"#"+Ke(this.r)+Ke(this.g)+Ke(this.b)}function Xe(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}function Ke(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function Je(t,e,n,r){return r<=0?t=e=n=NaN:n<=0||n>=1?t=e=NaN:e<=0&&(t=NaN),new en(t,e,n,r)}function Ze(t){if(t instanceof en)return new en(t.h,t.s,t.l,t.opacity);if(t instanceof Ne||(t=He(t)),!t)return new en;if(t instanceof en)return t;var e=(t=t.rgb()).r/255,n=t.g/255,r=t.b/255,o=Math.min(e,n,r),i=Math.max(e,n,r),a=NaN,l=i-o,c=(i+o)/2;return l?(a=e===i?(n-r)/l+6*(n<r):n===i?(r-e)/l+2:(e-n)/l+4,l/=c<.5?i+o:2-i-o,a*=60):l=c>0&&c<1?0:a,new en(a,l,c,t.opacity)}function tn(t,e,n,r){return 1===arguments.length?Ze(t):new en(t,e,n,null==r?1:r)}function en(t,e,n,r){this.h=+t,this.s=+e,this.l=+n,this.opacity=+r}function nn(t,e,n){return 255*(t<60?e+(n-e)*t/60:t<180?n:t<240?e+(n-e)*(240-t)/60:e)}function rn(t,e,n,r,o){var i=t*t,a=i*t;return((1-3*t+3*i-a)*e+(4-6*i+3*a)*n+(1+3*t+3*i-3*a)*r+a*o)/6}Te(Ne,He,{copy:function(t){return Object.assign(new this.constructor,this,t)},displayable:function(){return this.rgb().displayable()},hex:Be,formatHex:Be,formatHsl:function(){return Ze(this).formatHsl()},formatRgb:qe,toString:qe}),Te(Ge,Ye,Ce(Ne,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Ge(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Ge(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:Qe,formatHex:Qe,formatRgb:Xe,toString:Xe})),Te(en,tn,Ce(Ne,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new en(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new en(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),e=isNaN(t)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*e,o=2*n-r;return new Ge(nn(t>=240?t-240:t+120,o,r),nn(t,o,r),nn(t<120?t+240:t-120,o,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===t?")":", "+t+")")}}));var on=function(t){var e=t.length-1;return function(n){var r=n<=0?n=0:n>=1?(n=1,e-1):Math.floor(n*e),o=t[r],i=t[r+1],a=r>0?t[r-1]:2*o-i,l=r<e-1?t[r+2]:2*i-o;return rn((n-r/e)*e,a,o,i,l)}},an=function(t){var e=t.length;return function(n){var r=Math.floor(((n%=1)<0?++n:n)*e),o=t[(r+e-1)%e],i=t[r%e],a=t[(r+1)%e],l=t[(r+2)%e];return rn((n-r/e)*e,o,i,a,l)}},ln=function(t){return function(){return t}};function cn(t,e){return function(n){return t+n*e}}function un(t,e){var n=e-t;return n?cn(t,n>180||n<-180?n-360*Math.round(n/360):n):ln(isNaN(t)?e:t)}function sn(t){return 1==(t=+t)?fn:function(e,n){return n-e?function(t,e,n){return t=Math.pow(t,n),e=Math.pow(e,n)-t,n=1/n,function(r){return Math.pow(t+r*e,n)}}(e,n,t):ln(isNaN(e)?n:e)}}function fn(t,e){var n=e-t;return n?cn(t,n):ln(isNaN(t)?e:t)}var dn=function t(e){var n=sn(e);function r(t,e){var r=n((t=Ye(t)).r,(e=Ye(e)).r),o=n(t.g,e.g),i=n(t.b,e.b),a=fn(t.opacity,e.opacity);return function(e){return t.r=r(e),t.g=o(e),t.b=i(e),t.opacity=a(e),t+""}}return r.gamma=t,r}(1);function pn(t){return function(e){var n,r,o=e.length,i=new Array(o),a=new Array(o),l=new Array(o);for(n=0;n<o;++n)r=Ye(e[n]),i[n]=r.r||0,a[n]=r.g||0,l[n]=r.b||0;return i=t(i),a=t(a),l=t(l),r.opacity=1,function(t){return r.r=i(t),r.g=a(t),r.b=l(t),r+""}}}var mn=pn(on),hn=pn(an),gn=function(t,e){e||(e=[]);var n,r=t?Math.min(e.length,t.length):0,o=e.slice();return function(i){for(n=0;n<r;++n)o[n]=t[n]*(1-i)+e[n]*i;return o}};function bn(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}var vn=function(t,e){return(bn(e)?gn:yn)(t,e)};function yn(t,e){var n,r=e?e.length:0,o=t?Math.min(r,t.length):0,i=new Array(o),a=new Array(r);for(n=0;n<o;++n)i[n]=Cn(t[n],e[n]);for(;n<r;++n)a[n]=e[n];return function(t){for(n=0;n<o;++n)a[n]=i[n](t);return a}}var xn=function(t,e){var n=new Date;return t=+t,e=+e,function(r){return n.setTime(t*(1-r)+e*r),n}},wn=function(t,e){return t=+t,e=+e,function(n){return t*(1-n)+e*n}},kn=function(t,e){var n,r={},o={};for(n in null!==t&&"object"==typeof t||(t={}),null!==e&&"object"==typeof e||(e={}),e)n in t?r[n]=Cn(t[n],e[n]):o[n]=e[n];return function(t){for(n in r)o[n]=r[n](t);return o}},_n=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,En=new RegExp(_n.source,"g");var Sn,Mn,Tn=function(t,e){var n,r,o,i=_n.lastIndex=En.lastIndex=0,a=-1,l=[],c=[];for(t+="",e+="";(n=_n.exec(t))&&(r=En.exec(e));)(o=r.index)>i&&(o=e.slice(i,o),l[a]?l[a]+=o:l[++a]=o),(n=n[0])===(r=r[0])?l[a]?l[a]+=r:l[++a]=r:(l[++a]=null,c.push({i:a,x:wn(n,r)})),i=En.lastIndex;return i<e.length&&(o=e.slice(i),l[a]?l[a]+=o:l[++a]=o),l.length<2?c[0]?function(t){return function(e){return t(e)+""}}(c[0].x):function(t){return function(){return t}}(e):(e=c.length,function(t){for(var n,r=0;r<e;++r)l[(n=c[r]).i]=n.x(t);return l.join("")})},Cn=function(t,e){var n,r=typeof e;return null==e||"boolean"===r?ln(e):("number"===r?wn:"string"===r?(n=He(e))?(e=n,dn):Tn:e instanceof He?dn:e instanceof Date?xn:bn(e)?gn:Array.isArray(e)?yn:"function"!=typeof e.valueOf&&"function"!=typeof e.toString||isNaN(e)?kn:wn)(t,e)},Nn=function(){for(var t,e=ce;t=e.sourceEvent;)e=t;return e},Pn=function(t,e){var n=t.ownerSVGElement||t;if(n.createSVGPoint){var r=n.createSVGPoint();return r.x=e.clientX,r.y=e.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}var o=t.getBoundingClientRect();return[e.clientX-o.left-t.clientLeft,e.clientY-o.top-t.clientTop]},An=function(t,e,n){arguments.length<3&&(n=e,e=Nn().changedTouches);for(var r,o=0,i=e?e.length:0;o<i;++o)if((r=e[o]).identifier===n)return Pn(t,r);return null},On=function(t){var e=Nn();return e.changedTouches&&(e=e.changedTouches[0]),Pn(t,e)},zn=0,jn=0,Rn=0,Dn=0,Ln=0,In=0,Un="object"==typeof performance&&performance.now?performance:Date,Fn="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function Bn(){return Ln||(Fn(qn),Ln=Un.now()+In)}function qn(){Ln=0}function Hn(){this._call=this._time=this._next=null}function Wn(t,e,n){var r=new Hn;return r.restart(t,e,n),r}function $n(){Bn(),++zn;for(var t,e=Sn;e;)(t=Ln-e._time)>=0&&e._call.call(null,t),e=e._next;--zn}function Vn(){Ln=(Dn=Un.now())+In,zn=jn=0;try{$n()}finally{zn=0,function(){var t,e,n=Sn,r=1/0;for(;n;)n._call?(r>n._time&&(r=n._time),t=n,n=n._next):(e=n._next,n._next=null,n=t?t._next=e:Sn=e);Mn=t,Gn(r)}(),Ln=0}}function Yn(){var t=Un.now(),e=t-Dn;e>1e3&&(In-=e,Dn=t)}function Gn(t){zn||(jn&&(jn=clearTimeout(jn)),t-Ln>24?(t<1/0&&(jn=setTimeout(Vn,t-Un.now()-In)),Rn&&(Rn=clearInterval(Rn))):(Rn||(Dn=Un.now(),Rn=setInterval(Yn,1e3)),zn=1,Fn(Vn)))}Hn.prototype=Wn.prototype={constructor:Hn,restart:function(t,e,n){if("function"!=typeof t)throw new TypeError("callback is not a function");n=(null==n?Bn():+n)+(null==e?0:+e),this._next||Mn===this||(Mn?Mn._next=this:Sn=this,Mn=this),this._call=t,this._time=n,Gn()},stop:function(){this._call&&(this._call=null,this._time=1/0,Gn())}};var Qn=function(t,e,n){var r=new Hn;return e=null==e?0:+e,r.restart((function(n){r.stop(),t(n+e)}),e,n),r},Xn=st("start","end","cancel","interrupt"),Kn=[],Jn=function(t,e,n,r,o,i){var a=t.__transition;if(a){if(n in a)return}else t.__transition={};!function(t,e,n){var r,o=t.__transition;function i(c){var u,s,f,d;if(1!==n.state)return l();for(u in o)if((d=o[u]).name===n.name){if(3===d.state)return Qn(i);4===d.state?(d.state=6,d.timer.stop(),d.on.call("interrupt",t,t.__data__,d.index,d.group),delete o[u]):+u<e&&(d.state=6,d.timer.stop(),d.on.call("cancel",t,t.__data__,d.index,d.group),delete o[u])}if(Qn((function(){3===n.state&&(n.state=4,n.timer.restart(a,n.delay,n.time),a(c))})),n.state=2,n.on.call("start",t,t.__data__,n.index,n.group),2===n.state){for(n.state=3,r=new Array(f=n.tween.length),u=0,s=-1;u<f;++u)(d=n.tween[u].value.call(t,t.__data__,n.index,n.group))&&(r[++s]=d);r.length=s+1}}function a(e){for(var o=e<n.duration?n.ease.call(null,e/n.duration):(n.timer.restart(l),n.state=5,1),i=-1,a=r.length;++i<a;)r[i].call(t,o);5===n.state&&(n.on.call("end",t,t.__data__,n.index,n.group),l())}function l(){for(var r in n.state=6,n.timer.stop(),delete o[e],o)return;delete t.__transition}o[e]=n,n.timer=Wn((function(t){n.state=1,n.timer.restart(i,n.delay,n.time),n.delay<=t&&i(t-n.delay)}),0,n.time)}(t,n,{name:e,index:r,group:o,on:Xn,tween:Kn,time:i.time,delay:i.delay,duration:i.duration,ease:i.ease,timer:null,state:0})};function Zn(t,e){var n=er(t,e);if(n.state>0)throw new Error("too late; already scheduled");return n}function tr(t,e){var n=er(t,e);if(n.state>3)throw new Error("too late; already running");return n}function er(t,e){var n=t.__transition;if(!n||!(n=n[e]))throw new Error("transition not found");return n}var nr,rr,or,ir,ar=function(t,e){var n,r,o,i=t.__transition,a=!0;if(i){for(o in e=null==e?null:e+"",i)(n=i[o]).name===e?(r=n.state>2&&n.state<5,n.state=6,n.timer.stop(),n.on.call(r?"interrupt":"cancel",t,t.__data__,n.index,n.group),delete i[o]):a=!1;a&&delete t.__transition}},lr=180/Math.PI,cr={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},ur=function(t,e,n,r,o,i){var a,l,c;return(a=Math.sqrt(t*t+e*e))&&(t/=a,e/=a),(c=t*n+e*r)&&(n-=t*c,r-=e*c),(l=Math.sqrt(n*n+r*r))&&(n/=l,r/=l,c/=l),t*r<e*n&&(t=-t,e=-e,c=-c,a=-a),{translateX:o,translateY:i,rotate:Math.atan2(e,t)*lr,skewX:Math.atan(c)*lr,scaleX:a,scaleY:l}};function sr(t,e,n,r){function o(t){return t.length?t.pop()+" ":""}return function(i,a){var l=[],c=[];return i=t(i),a=t(a),function(t,r,o,i,a,l){if(t!==o||r!==i){var c=a.push("translate(",null,e,null,n);l.push({i:c-4,x:wn(t,o)},{i:c-2,x:wn(r,i)})}else(o||i)&&a.push("translate("+o+e+i+n)}(i.translateX,i.translateY,a.translateX,a.translateY,l,c),function(t,e,n,i){t!==e?(t-e>180?e+=360:e-t>180&&(t+=360),i.push({i:n.push(o(n)+"rotate(",null,r)-2,x:wn(t,e)})):e&&n.push(o(n)+"rotate("+e+r)}(i.rotate,a.rotate,l,c),function(t,e,n,i){t!==e?i.push({i:n.push(o(n)+"skewX(",null,r)-2,x:wn(t,e)}):e&&n.push(o(n)+"skewX("+e+r)}(i.skewX,a.skewX,l,c),function(t,e,n,r,i,a){if(t!==n||e!==r){var l=i.push(o(i)+"scale(",null,",",null,")");a.push({i:l-4,x:wn(t,n)},{i:l-2,x:wn(e,r)})}else 1===n&&1===r||i.push(o(i)+"scale("+n+","+r+")")}(i.scaleX,i.scaleY,a.scaleX,a.scaleY,l,c),i=a=null,function(t){for(var e,n=-1,r=c.length;++n<r;)l[(e=c[n]).i]=e.x(t);return l.join("")}}}var fr=sr((function(t){return"none"===t?cr:(nr||(nr=document.createElement("DIV"),rr=document.documentElement,or=document.defaultView),nr.style.transform=t,t=or.getComputedStyle(rr.appendChild(nr),null).getPropertyValue("transform"),rr.removeChild(nr),t=t.slice(7,-1).split(","),ur(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))}),"px, ","px)","deg)"),dr=sr((function(t){return null==t?cr:(ir||(ir=document.createElementNS("http://www.w3.org/2000/svg","g")),ir.setAttribute("transform",t),(t=ir.transform.baseVal.consolidate())?(t=t.matrix,ur(t.a,t.b,t.c,t.d,t.e,t.f)):cr)}),", ",")",")");function pr(t,e){var n,r;return function(){var o=tr(this,t),i=o.tween;if(i!==n)for(var a=0,l=(r=n=i).length;a<l;++a)if(r[a].name===e){(r=r.slice()).splice(a,1);break}o.tween=r}}function mr(t,e,n){var r,o;if("function"!=typeof n)throw new Error;return function(){var i=tr(this,t),a=i.tween;if(a!==r){o=(r=a).slice();for(var l={name:e,value:n},c=0,u=o.length;c<u;++c)if(o[c].name===e){o[c]=l;break}c===u&&o.push(l)}i.tween=o}}function hr(t,e,n){var r=t._id;return t.each((function(){var t=tr(this,r);(t.value||(t.value={}))[e]=n.apply(this,arguments)})),function(t){return er(t,r).value[e]}}var gr=function(t,e){var n;return("number"==typeof e?wn:e instanceof He?dn:(n=He(e))?(e=n,dn):Tn)(t,e)};function br(t){return function(){this.removeAttribute(t)}}function vr(t){return function(){this.removeAttributeNS(t.space,t.local)}}function yr(t,e,n){var r,o,i=n+"";return function(){var a=this.getAttribute(t);return a===i?null:a===r?o:o=e(r=a,n)}}function xr(t,e,n){var r,o,i=n+"";return function(){var a=this.getAttributeNS(t.space,t.local);return a===i?null:a===r?o:o=e(r=a,n)}}function wr(t,e,n){var r,o,i;return function(){var a,l,c=n(this);if(null!=c)return(a=this.getAttribute(t))===(l=c+"")?null:a===r&&l===o?i:(o=l,i=e(r=a,c));this.removeAttribute(t)}}function kr(t,e,n){var r,o,i;return function(){var a,l,c=n(this);if(null!=c)return(a=this.getAttributeNS(t.space,t.local))===(l=c+"")?null:a===r&&l===o?i:(o=l,i=e(r=a,c));this.removeAttributeNS(t.space,t.local)}}function _r(t,e){return function(n){this.setAttribute(t,e.call(this,n))}}function Er(t,e){return function(n){this.setAttributeNS(t.space,t.local,e.call(this,n))}}function Sr(t,e){var n,r;function o(){var o=e.apply(this,arguments);return o!==r&&(n=(r=o)&&Er(t,o)),n}return o._value=e,o}function Mr(t,e){var n,r;function o(){var o=e.apply(this,arguments);return o!==r&&(n=(r=o)&&_r(t,o)),n}return o._value=e,o}function Tr(t,e){return function(){Zn(this,t).delay=+e.apply(this,arguments)}}function Cr(t,e){return e=+e,function(){Zn(this,t).delay=e}}function Nr(t,e){return function(){tr(this,t).duration=+e.apply(this,arguments)}}function Pr(t,e){return e=+e,function(){tr(this,t).duration=e}}function Ar(t,e){if("function"!=typeof e)throw new Error;return function(){tr(this,t).ease=e}}function Or(t,e,n){var r,o,i=function(t){return(t+"").trim().split(/^|\s+/).every((function(t){var e=t.indexOf(".");return e>=0&&(t=t.slice(0,e)),!t||"start"===t}))}(e)?Zn:tr;return function(){var a=i(this,t),l=a.on;l!==r&&(o=(r=l).copy()).on(e,n),a.on=o}}var zr=we.prototype.constructor;function jr(t){return function(){this.style.removeProperty(t)}}function Rr(t,e,n){return function(r){this.style.setProperty(t,e.call(this,r),n)}}function Dr(t,e,n){var r,o;function i(){var i=e.apply(this,arguments);return i!==o&&(r=(o=i)&&Rr(t,i,n)),r}return i._value=e,i}function Lr(t){return function(e){this.textContent=t.call(this,e)}}function Ir(t){var e,n;function r(){var r=t.apply(this,arguments);return r!==n&&(e=(n=r)&&Lr(r)),e}return r._value=t,r}var Ur=0;function Fr(t,e,n,r){this._groups=t,this._parents=e,this._name=n,this._id=r}function Br(t){return we().transition(t)}function qr(){return++Ur}var Hr=we.prototype;function Wr(t){return t*t*t}function $r(t){return--t*t*t+1}function Vr(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}Fr.prototype=Br.prototype={constructor:Fr,select:function(t){var e=this._name,n=this._id;"function"!=typeof t&&(t=dt(t));for(var r=this._groups,o=r.length,i=new Array(o),a=0;a<o;++a)for(var l,c,u=r[a],s=u.length,f=i[a]=new Array(s),d=0;d<s;++d)(l=u[d])&&(c=t.call(l,l.__data__,d,u))&&("__data__"in l&&(c.__data__=l.__data__),f[d]=c,Jn(f[d],e,n,d,f,er(l,n)));return new Fr(i,this._parents,e,n)},selectAll:function(t){var e=this._name,n=this._id;"function"!=typeof t&&(t=mt(t));for(var r=this._groups,o=r.length,i=[],a=[],l=0;l<o;++l)for(var c,u=r[l],s=u.length,f=0;f<s;++f)if(c=u[f]){for(var d,p=t.call(c,c.__data__,f,u),m=er(c,n),h=0,g=p.length;h<g;++h)(d=p[h])&&Jn(d,e,n,h,p,m);i.push(p),a.push(c)}return new Fr(i,a,e,n)},filter:function(t){"function"!=typeof t&&(t=ht(t));for(var e=this._groups,n=e.length,r=new Array(n),o=0;o<n;++o)for(var i,a=e[o],l=a.length,c=r[o]=[],u=0;u<l;++u)(i=a[u])&&t.call(i,i.__data__,u,a)&&c.push(i);return new Fr(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var e=this._groups,n=t._groups,r=e.length,o=n.length,i=Math.min(r,o),a=new Array(r),l=0;l<i;++l)for(var c,u=e[l],s=n[l],f=u.length,d=a[l]=new Array(f),p=0;p<f;++p)(c=u[p]||s[p])&&(d[p]=c);for(;l<r;++l)a[l]=e[l];return new Fr(a,this._parents,this._name,this._id)},selection:function(){return new zr(this._groups,this._parents)},transition:function(){for(var t=this._name,e=this._id,n=qr(),r=this._groups,o=r.length,i=0;i<o;++i)for(var a,l=r[i],c=l.length,u=0;u<c;++u)if(a=l[u]){var s=er(a,e);Jn(a,t,n,u,l,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new Fr(r,this._parents,t,n)},call:Hr.call,nodes:Hr.nodes,node:Hr.node,size:Hr.size,empty:Hr.empty,each:Hr.each,on:function(t,e){var n=this._id;return arguments.length<2?er(this.node(),n).on.on(t):this.each(Or(n,t,e))},attr:function(t,e){var n=_t(t),r="transform"===n?dr:gr;return this.attrTween(t,"function"==typeof e?(n.local?kr:wr)(n,r,hr(this,"attr."+t,e)):null==e?(n.local?vr:br)(n):(n.local?xr:yr)(n,r,e))},attrTween:function(t,e){var n="attr."+t;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(null==e)return this.tween(n,null);if("function"!=typeof e)throw new Error;var r=_t(t);return this.tween(n,(r.local?Sr:Mr)(r,e))},style:function(t,e,n){var r="transform"==(t+="")?fr:gr;return null==e?this.styleTween(t,function(t,e){var n,r,o;return function(){var i=jt(this,t),a=(this.style.removeProperty(t),jt(this,t));return i===a?null:i===n&&a===r?o:o=e(n=i,r=a)}}(t,r)).on("end.style."+t,jr(t)):"function"==typeof e?this.styleTween(t,function(t,e,n){var r,o,i;return function(){var a=jt(this,t),l=n(this),c=l+"";return null==l&&(this.style.removeProperty(t),c=l=jt(this,t)),a===c?null:a===r&&c===o?i:(o=c,i=e(r=a,l))}}(t,r,hr(this,"style."+t,e))).each(function(t,e){var n,r,o,i,a="style."+e,l="end."+a;return function(){var c=tr(this,t),u=c.on,s=null==c.value[a]?i||(i=jr(e)):void 0;u===n&&o===s||(r=(n=u).copy()).on(l,o=s),c.on=r}}(this._id,t)):this.styleTween(t,function(t,e,n){var r,o,i=n+"";return function(){var a=jt(this,t);return a===i?null:a===r?o:o=e(r=a,n)}}(t,r,e),n).on("end.style."+t,null)},styleTween:function(t,e,n){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==e)return this.tween(r,null);if("function"!=typeof e)throw new Error;return this.tween(r,Dr(t,e,null==n?"":n))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var e=t(this);this.textContent=null==e?"":e}}(hr(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},textTween:function(t){var e="text";if(arguments.length<1)return(e=this.tween(e))&&e._value;if(null==t)return this.tween(e,null);if("function"!=typeof t)throw new Error;return this.tween(e,Ir(t))},remove:function(){return this.on("end.remove",(t=this._id,function(){var e=this.parentNode;for(var n in this.__transition)if(+n!==t)return;e&&e.removeChild(this)}));var t},tween:function(t,e){var n=this._id;if(t+="",arguments.length<2){for(var r,o=er(this.node(),n).tween,i=0,a=o.length;i<a;++i)if((r=o[i]).name===t)return r.value;return null}return this.each((null==e?pr:mr)(n,t,e))},delay:function(t){var e=this._id;return arguments.length?this.each(("function"==typeof t?Tr:Cr)(e,t)):er(this.node(),e).delay},duration:function(t){var e=this._id;return arguments.length?this.each(("function"==typeof t?Nr:Pr)(e,t)):er(this.node(),e).duration},ease:function(t){var e=this._id;return arguments.length?this.each(Ar(e,t)):er(this.node(),e).ease},end:function(){var t,e,n=this,r=n._id,o=n.size();return new Promise((function(i,a){var l={value:a},c={value:function(){0==--o&&i()}};n.each((function(){var n=tr(this,r),o=n.on;o!==t&&((e=(t=o).copy())._.cancel.push(l),e._.interrupt.push(l),e._.end.push(c)),n.on=e}))}))}};var Yr={time:null,delay:0,duration:250,ease:Vr};function Gr(t,e){for(var n;!(n=t.__transition)||!(n=n[e]);)if(!(t=t.parentNode))return Yr.time=Bn(),Yr;return n}we.prototype.interrupt=function(t){return this.each((function(){ar(this,t)}))},we.prototype.transition=function(t){var e,n;t instanceof Fr?(e=t._id,t=t._name):(e=qr(),(n=Yr).time=Bn(),t=null==t?null:t+"");for(var r=this._groups,o=r.length,i=0;i<o;++i)for(var a,l=r[i],c=l.length,u=0;u<c;++u)(a=l[u])&&Jn(a,t,e,u,l,n||Gr(a,e));return new Fr(r,this._parents,t,e)};var Qr=[null],Xr=function(t,e){var n,r,o=t.__transition;if(o)for(r in e=null==e?null:e+"",o)if((n=o[r]).state>1&&n.name===e)return new Fr([[t]],Qr,e,+r);return null},Kr=function(t){return function(){return t}},Jr=function(t,e,n){this.target=t,this.type=e,this.selection=n};function Zr(){ce.stopImmediatePropagation()}var to=function(){ce.preventDefault(),ce.stopImmediatePropagation()},eo={name:"drag"},no={name:"space"},ro={name:"handle"},oo={name:"center"};function io(t){return[+t[0],+t[1]]}function ao(t){return[io(t[0]),io(t[1])]}function lo(t){return function(e){return An(e,ce.touches,t)}}var co={name:"x",handles:["w","e"].map(bo),input:function(t,e){return null==t?null:[[+t[0],e[0][1]],[+t[1],e[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},uo={name:"y",handles:["n","s"].map(bo),input:function(t,e){return null==t?null:[[e[0][0],+t[0]],[e[1][0],+t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},so={name:"xy",handles:["n","w","e","s","nw","ne","sw","se"].map(bo),input:function(t){return null==t?null:ao(t)},output:function(t){return t}},fo={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},po={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},mo={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},ho={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},go={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function bo(t){return{type:t}}function vo(){return!ce.ctrlKey&&!ce.button}function yo(){var t=this.ownerSVGElement||this;return t.hasAttribute("viewBox")?[[(t=t.viewBox.baseVal).x,t.y],[t.x+t.width,t.y+t.height]]:[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function xo(){return navigator.maxTouchPoints||"ontouchstart"in this}function wo(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function ko(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}function _o(t){var e=t.__brush;return e?e.dim.output(e.selection):null}function Eo(){return To(co)}function So(){return To(uo)}var Mo=function(){return To(so)};function To(t){var e,n=yo,r=vo,o=xo,i=!0,a=st("start","brush","end"),l=6;function c(e){var n=e.property("__brush",h).selectAll(".overlay").data([bo("overlay")]);n.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",fo.overlay).merge(n).each((function(){var t=wo(this).extent;ke(this).attr("x",t[0][0]).attr("y",t[0][1]).attr("width",t[1][0]-t[0][0]).attr("height",t[1][1]-t[0][1])})),e.selectAll(".selection").data([bo("selection")]).enter().append("rect").attr("class","selection").attr("cursor",fo.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var r=e.selectAll(".handle").data(t.handles,(function(t){return t.type}));r.exit().remove(),r.enter().append("rect").attr("class",(function(t){return"handle handle--"+t.type})).attr("cursor",(function(t){return fo[t.type]})),e.each(u).attr("fill","none").attr("pointer-events","all").on("mousedown.brush",d).filter(o).on("touchstart.brush",d).on("touchmove.brush",p).on("touchend.brush touchcancel.brush",m).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function u(){var t=ke(this),e=wo(this).selection;e?(t.selectAll(".selection").style("display",null).attr("x",e[0][0]).attr("y",e[0][1]).attr("width",e[1][0]-e[0][0]).attr("height",e[1][1]-e[0][1]),t.selectAll(".handle").style("display",null).attr("x",(function(t){return"e"===t.type[t.type.length-1]?e[1][0]-l/2:e[0][0]-l/2})).attr("y",(function(t){return"s"===t.type[0]?e[1][1]-l/2:e[0][1]-l/2})).attr("width",(function(t){return"n"===t.type||"s"===t.type?e[1][0]-e[0][0]+l:l})).attr("height",(function(t){return"e"===t.type||"w"===t.type?e[1][1]-e[0][1]+l:l}))):t.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function s(t,e,n){return!n&&t.__brush.emitter||new f(t,e)}function f(t,e){this.that=t,this.args=e,this.state=t.__brush,this.active=0}function d(){if((!e||ce.touches)&&r.apply(this,arguments)){var n,o,a,l,c,f,d,p,m,h,g,b=this,v=ce.target.__data__.type,y="selection"===(i&&ce.metaKey?v="overlay":v)?eo:i&&ce.altKey?oo:ro,x=t===uo?null:ho[v],w=t===co?null:go[v],k=wo(b),_=k.extent,E=k.selection,S=_[0][0],M=_[0][1],T=_[1][0],C=_[1][1],N=0,P=0,A=x&&w&&i&&ce.shiftKey,O=ce.touches?lo(ce.changedTouches[0].identifier):On,z=O(b),j=z,R=s(b,arguments,!0).beforestart();"overlay"===v?(E&&(m=!0),k.selection=E=[[n=t===uo?S:z[0],a=t===co?M:z[1]],[c=t===uo?T:n,d=t===co?C:a]]):(n=E[0][0],a=E[0][1],c=E[1][0],d=E[1][1]),o=n,l=a,f=c,p=d;var D=ke(b).attr("pointer-events","none"),L=D.selectAll(".overlay").attr("cursor",fo[v]);if(ce.touches)R.moved=U,R.ended=B;else{var I=ke(ce.view).on("mousemove.brush",U,!0).on("mouseup.brush",B,!0);i&&I.on("keydown.brush",q,!0).on("keyup.brush",H,!0),Se(ce.view)}Zr(),ar(b),u.call(b),R.start()}function U(){var t=O(b);!A||h||g||(Math.abs(t[0]-j[0])>Math.abs(t[1]-j[1])?g=!0:h=!0),j=t,m=!0,to(),F()}function F(){var t;switch(N=j[0]-z[0],P=j[1]-z[1],y){case no:case eo:x&&(N=Math.max(S-n,Math.min(T-c,N)),o=n+N,f=c+N),w&&(P=Math.max(M-a,Math.min(C-d,P)),l=a+P,p=d+P);break;case ro:x<0?(N=Math.max(S-n,Math.min(T-n,N)),o=n+N,f=c):x>0&&(N=Math.max(S-c,Math.min(T-c,N)),o=n,f=c+N),w<0?(P=Math.max(M-a,Math.min(C-a,P)),l=a+P,p=d):w>0&&(P=Math.max(M-d,Math.min(C-d,P)),l=a,p=d+P);break;case oo:x&&(o=Math.max(S,Math.min(T,n-N*x)),f=Math.max(S,Math.min(T,c+N*x))),w&&(l=Math.max(M,Math.min(C,a-P*w)),p=Math.max(M,Math.min(C,d+P*w)))}f<o&&(x*=-1,t=n,n=c,c=t,t=o,o=f,f=t,v in po&&L.attr("cursor",fo[v=po[v]])),p<l&&(w*=-1,t=a,a=d,d=t,t=l,l=p,p=t,v in mo&&L.attr("cursor",fo[v=mo[v]])),k.selection&&(E=k.selection),h&&(o=E[0][0],f=E[1][0]),g&&(l=E[0][1],p=E[1][1]),E[0][0]===o&&E[0][1]===l&&E[1][0]===f&&E[1][1]===p||(k.selection=[[o,l],[f,p]],u.call(b),R.brush())}function B(){if(Zr(),ce.touches){if(ce.touches.length)return;e&&clearTimeout(e),e=setTimeout((function(){e=null}),500)}else Me(ce.view,m),I.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);D.attr("pointer-events","all"),L.attr("cursor",fo.overlay),k.selection&&(E=k.selection),ko(E)&&(k.selection=null,u.call(b)),R.end()}function q(){switch(ce.keyCode){case 16:A=x&&w;break;case 18:y===ro&&(x&&(c=f-N*x,n=o+N*x),w&&(d=p-P*w,a=l+P*w),y=oo,F());break;case 32:y!==ro&&y!==oo||(x<0?c=f-N:x>0&&(n=o-N),w<0?d=p-P:w>0&&(a=l-P),y=no,L.attr("cursor",fo.selection),F());break;default:return}to()}function H(){switch(ce.keyCode){case 16:A&&(h=g=A=!1,F());break;case 18:y===oo&&(x<0?c=f:x>0&&(n=o),w<0?d=p:w>0&&(a=l),y=ro,F());break;case 32:y===no&&(ce.altKey?(x&&(c=f-N*x,n=o+N*x),w&&(d=p-P*w,a=l+P*w),y=oo):(x<0?c=f:x>0&&(n=o),w<0?d=p:w>0&&(a=l),y=ro),L.attr("cursor",fo[v]),F());break;default:return}to()}}function p(){s(this,arguments).moved()}function m(){s(this,arguments).ended()}function h(){var e=this.__brush||{selection:null};return e.extent=ao(n.apply(this,arguments)),e.dim=t,e}return c.move=function(e,n){e.selection?e.on("start.brush",(function(){s(this,arguments).beforestart().start()})).on("interrupt.brush end.brush",(function(){s(this,arguments).end()})).tween("brush",(function(){var e=this,r=e.__brush,o=s(e,arguments),i=r.selection,a=t.input("function"==typeof n?n.apply(this,arguments):n,r.extent),l=Cn(i,a);function c(t){r.selection=1===t&&null===a?null:l(t),u.call(e),o.brush()}return null!==i&&null!==a?c:c(1)})):e.each((function(){var e=this,r=arguments,o=e.__brush,i=t.input("function"==typeof n?n.apply(e,r):n,o.extent),a=s(e,r).beforestart();ar(e),o.selection=null===i?null:i,u.call(e),a.start().brush().end()}))},c.clear=function(t){c.move(t,null)},f.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting?(this.starting=!1,this.emit("start")):this.emit("brush"),this},brush:function(){return this.emit("brush"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(e){me(new Jr(c,e,t.output(this.state.selection)),a.apply,a,[e,this.that,this.args])}},c.extent=function(t){return arguments.length?(n="function"==typeof t?t:Kr(ao(t)),c):n},c.filter=function(t){return arguments.length?(r="function"==typeof t?t:Kr(!!t),c):r},c.touchable=function(t){return arguments.length?(o="function"==typeof t?t:Kr(!!t),c):o},c.handleSize=function(t){return arguments.length?(l=+t,c):l},c.keyModifiers=function(t){return arguments.length?(i=!!t,c):i},c.on=function(){var t=a.on.apply(a,arguments);return t===a?c:t},c}var Co=Math.cos,No=Math.sin,Po=Math.PI,Ao=Po/2,Oo=2*Po,zo=Math.max;function jo(t){return function(e,n){return t(e.source.value+e.target.value,n.source.value+n.target.value)}}var Ro=function(){var t=0,e=null,n=null,r=null;function o(o){var i,a,l,c,u,s,f=o.length,d=[],p=k(f),m=[],h=[],g=h.groups=new Array(f),b=new Array(f*f);for(i=0,u=-1;++u<f;){for(a=0,s=-1;++s<f;)a+=o[u][s];d.push(a),m.push(k(f)),i+=a}for(e&&p.sort((function(t,n){return e(d[t],d[n])})),n&&m.forEach((function(t,e){t.sort((function(t,r){return n(o[e][t],o[e][r])}))})),c=(i=zo(0,Oo-t*f)/i)?t:Oo/f,a=0,u=-1;++u<f;){for(l=a,s=-1;++s<f;){var v=p[u],y=m[v][s],x=o[v][y],w=a,_=a+=x*i;b[y*f+v]={index:v,subindex:y,startAngle:w,endAngle:_,value:x}}g[v]={index:v,startAngle:l,endAngle:a,value:d[v]},a+=c}for(u=-1;++u<f;)for(s=u-1;++s<f;){var E=b[s*f+u],S=b[u*f+s];(E.value||S.value)&&h.push(E.value<S.value?{source:S,target:E}:{source:E,target:S})}return r?h.sort(r):h}return o.padAngle=function(e){return arguments.length?(t=zo(0,e),o):t},o.sortGroups=function(t){return arguments.length?(e=t,o):e},o.sortSubgroups=function(t){return arguments.length?(n=t,o):n},o.sortChords=function(t){return arguments.length?(null==t?r=null:(r=jo(t))._=t,o):r&&r._},o},Do=Array.prototype.slice,Lo=function(t){return function(){return t}},Io=Math.PI,Uo=2*Io,Fo=Uo-1e-6;function Bo(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function qo(){return new Bo}Bo.prototype=qo.prototype={constructor:Bo,moveTo:function(t,e){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+e)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,e){this._+="L"+(this._x1=+t)+","+(this._y1=+e)},quadraticCurveTo:function(t,e,n,r){this._+="Q"+ +t+","+ +e+","+(this._x1=+n)+","+(this._y1=+r)},bezierCurveTo:function(t,e,n,r,o,i){this._+="C"+ +t+","+ +e+","+ +n+","+ +r+","+(this._x1=+o)+","+(this._y1=+i)},arcTo:function(t,e,n,r,o){t=+t,e=+e,n=+n,r=+r,o=+o;var i=this._x1,a=this._y1,l=n-t,c=r-e,u=i-t,s=a-e,f=u*u+s*s;if(o<0)throw new Error("negative radius: "+o);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=e);else if(f>1e-6)if(Math.abs(s*l-c*u)>1e-6&&o){var d=n-i,p=r-a,m=l*l+c*c,h=d*d+p*p,g=Math.sqrt(m),b=Math.sqrt(f),v=o*Math.tan((Io-Math.acos((m+f-h)/(2*g*b)))/2),y=v/b,x=v/g;Math.abs(y-1)>1e-6&&(this._+="L"+(t+y*u)+","+(e+y*s)),this._+="A"+o+","+o+",0,0,"+ +(s*d>u*p)+","+(this._x1=t+x*l)+","+(this._y1=e+x*c)}else this._+="L"+(this._x1=t)+","+(this._y1=e);else;},arc:function(t,e,n,r,o,i){t=+t,e=+e,i=!!i;var a=(n=+n)*Math.cos(r),l=n*Math.sin(r),c=t+a,u=e+l,s=1^i,f=i?r-o:o-r;if(n<0)throw new Error("negative radius: "+n);null===this._x1?this._+="M"+c+","+u:(Math.abs(this._x1-c)>1e-6||Math.abs(this._y1-u)>1e-6)&&(this._+="L"+c+","+u),n&&(f<0&&(f=f%Uo+Uo),f>Fo?this._+="A"+n+","+n+",0,1,"+s+","+(t-a)+","+(e-l)+"A"+n+","+n+",0,1,"+s+","+(this._x1=c)+","+(this._y1=u):f>1e-6&&(this._+="A"+n+","+n+",0,"+ +(f>=Io)+","+s+","+(this._x1=t+n*Math.cos(o))+","+(this._y1=e+n*Math.sin(o))))},rect:function(t,e,n,r){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+e)+"h"+ +n+"v"+ +r+"h"+-n+"Z"},toString:function(){return this._}};var Ho=qo;function Wo(t){return t.source}function $o(t){return t.target}function Vo(t){return t.radius}function Yo(t){return t.startAngle}function Go(t){return t.endAngle}var Qo=function(){var t=Wo,e=$o,n=Vo,r=Yo,o=Go,i=null;function a(){var a,l=Do.call(arguments),c=t.apply(this,l),u=e.apply(this,l),s=+n.apply(this,(l[0]=c,l)),f=r.apply(this,l)-Ao,d=o.apply(this,l)-Ao,p=s*Co(f),m=s*No(f),h=+n.apply(this,(l[0]=u,l)),g=r.apply(this,l)-Ao,b=o.apply(this,l)-Ao;if(i||(i=a=Ho()),i.moveTo(p,m),i.arc(0,0,s,f,d),f===g&&d===b||(i.quadraticCurveTo(0,0,h*Co(g),h*No(g)),i.arc(0,0,h,g,b)),i.quadraticCurveTo(0,0,p,m),i.closePath(),a)return i=null,a+""||null}return a.radius=function(t){return arguments.length?(n="function"==typeof t?t:Lo(+t),a):n},a.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:Lo(+t),a):r},a.endAngle=function(t){return arguments.length?(o="function"==typeof t?t:Lo(+t),a):o},a.source=function(e){return arguments.length?(t=e,a):t},a.target=function(t){return arguments.length?(e=t,a):e},a.context=function(t){return arguments.length?(i=null==t?null:t,a):i},a};function Xo(){}function Ko(t,e){var n=new Xo;if(t instanceof Xo)t.each((function(t,e){n.set(e,t)}));else if(Array.isArray(t)){var r,o=-1,i=t.length;if(null==e)for(;++o<i;)n.set(o,t[o]);else for(;++o<i;)n.set(e(r=t[o],o,t),r)}else if(t)for(var a in t)n.set(a,t[a]);return n}Xo.prototype=Ko.prototype={constructor:Xo,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,e){return this["$"+t]=e,this},remove:function(t){var e="$"+t;return e in this&&delete this[e]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var e in this)"$"===e[0]&&t.push(e.slice(1));return t},values:function(){var t=[];for(var e in this)"$"===e[0]&&t.push(this[e]);return t},entries:function(){var t=[];for(var e in this)"$"===e[0]&&t.push({key:e.slice(1),value:this[e]});return t},size:function(){var t=0;for(var e in this)"$"===e[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var e in this)"$"===e[0]&&t(this[e],e.slice(1),this)}};var Jo=Ko,Zo=function(){var t,e,n,r=[],o=[];function i(n,o,a,l){if(o>=r.length)return null!=t&&n.sort(t),null!=e?e(n):n;for(var c,u,s,f=-1,d=n.length,p=r[o++],m=Jo(),h=a();++f<d;)(s=m.get(c=p(u=n[f])+""))?s.push(u):m.set(c,[u]);return m.each((function(t,e){l(h,e,i(t,o,a,l))})),h}return n={object:function(t){return i(t,0,ti,ei)},map:function(t){return i(t,0,ni,ri)},entries:function(t){return function t(n,i){if(++i>r.length)return n;var a,l=o[i-1];return null!=e&&i>=r.length?a=n.entries():(a=[],n.each((function(e,n){a.push({key:n,values:t(e,i)})}))),null!=l?a.sort((function(t,e){return l(t.key,e.key)})):a}(i(t,0,ni,ri),0)},key:function(t){return r.push(t),n},sortKeys:function(t){return o[r.length-1]=t,n},sortValues:function(e){return t=e,n},rollup:function(t){return e=t,n}}};function ti(){return{}}function ei(t,e,n){t[e]=n}function ni(){return Jo()}function ri(t,e,n){t.set(e,n)}function oi(){}var ii=Jo.prototype;function ai(t,e){var n=new oi;if(t instanceof oi)t.each((function(t){n.add(t)}));else if(t){var r=-1,o=t.length;if(null==e)for(;++r<o;)n.add(t[r]);else for(;++r<o;)n.add(e(t[r],r,t))}return n}oi.prototype=ai.prototype={constructor:oi,has:ii.has,add:function(t){return this["$"+(t+="")]=t,this},remove:ii.remove,clear:ii.clear,values:ii.keys,size:ii.size,empty:ii.empty,each:ii.each};var li=ai,ci=function(t){var e=[];for(var n in t)e.push(n);return e},ui=function(t){var e=[];for(var n in t)e.push(t[n]);return e},si=function(t){var e=[];for(var n in t)e.push({key:n,value:t[n]});return e},fi=Math.PI/180,di=180/Math.PI;function pi(t){if(t instanceof gi)return new gi(t.l,t.a,t.b,t.opacity);if(t instanceof Ei)return Si(t);t instanceof Ge||(t=Ve(t));var e,n,r=xi(t.r),o=xi(t.g),i=xi(t.b),a=bi((.2225045*r+.7168786*o+.0606169*i)/1);return r===o&&o===i?e=n=a:(e=bi((.4360747*r+.3850649*o+.1430804*i)/.96422),n=bi((.0139322*r+.0971045*o+.7141733*i)/.82521)),new gi(116*a-16,500*(e-a),200*(a-n),t.opacity)}function mi(t,e){return new gi(t,0,0,null==e?1:e)}function hi(t,e,n,r){return 1===arguments.length?pi(t):new gi(t,e,n,null==r?1:r)}function gi(t,e,n,r){this.l=+t,this.a=+e,this.b=+n,this.opacity=+r}function bi(t){return t>6/29*(6/29)*(6/29)?Math.pow(t,1/3):t/(6/29*3*(6/29))+4/29}function vi(t){return t>6/29?t*t*t:6/29*3*(6/29)*(t-4/29)}function yi(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function xi(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function wi(t){if(t instanceof Ei)return new Ei(t.h,t.c,t.l,t.opacity);if(t instanceof gi||(t=pi(t)),0===t.a&&0===t.b)return new Ei(NaN,0<t.l&&t.l<100?0:NaN,t.l,t.opacity);var e=Math.atan2(t.b,t.a)*di;return new Ei(e<0?e+360:e,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function ki(t,e,n,r){return 1===arguments.length?wi(t):new Ei(n,e,t,null==r?1:r)}function _i(t,e,n,r){return 1===arguments.length?wi(t):new Ei(t,e,n,null==r?1:r)}function Ei(t,e,n,r){this.h=+t,this.c=+e,this.l=+n,this.opacity=+r}function Si(t){if(isNaN(t.h))return new gi(t.l,0,0,t.opacity);var e=t.h*fi;return new gi(t.l,Math.cos(e)*t.c,Math.sin(e)*t.c,t.opacity)}Te(gi,hi,Ce(Ne,{brighter:function(t){return new gi(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new gi(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,e=isNaN(this.a)?t:t+this.a/500,n=isNaN(this.b)?t:t-this.b/200;return new Ge(yi(3.1338561*(e=.96422*vi(e))-1.6168667*(t=1*vi(t))-.4906146*(n=.82521*vi(n))),yi(-.9787684*e+1.9161415*t+.033454*n),yi(.0719453*e-.2289914*t+1.4052427*n),this.opacity)}})),Te(Ei,_i,Ce(Ne,{brighter:function(t){return new Ei(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new Ei(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return Si(this).rgb()}}));var Mi=-.29227,Ti=-1.7884503806,Ci=3.5172982438,Ni=-.6557636667999999;function Pi(t){if(t instanceof Oi)return new Oi(t.h,t.s,t.l,t.opacity);t instanceof Ge||(t=Ve(t));var e=t.r/255,n=t.g/255,r=t.b/255,o=(Ni*r+Ti*e-Ci*n)/(Ni+Ti-Ci),i=r-o,a=(1.97294*(n-o)-Mi*i)/-.90649,l=Math.sqrt(a*a+i*i)/(1.97294*o*(1-o)),c=l?Math.atan2(a,i)*di-120:NaN;return new Oi(c<0?c+360:c,l,o,t.opacity)}function Ai(t,e,n,r){return 1===arguments.length?Pi(t):new Oi(t,e,n,null==r?1:r)}function Oi(t,e,n,r){this.h=+t,this.s=+e,this.l=+n,this.opacity=+r}Te(Oi,Ai,Ce(Ne,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Oi(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Oi(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*fi,e=+this.l,n=isNaN(this.s)?0:this.s*e*(1-e),r=Math.cos(t),o=Math.sin(t);return new Ge(255*(e+n*(-.14861*r+1.78277*o)),255*(e+n*(Mi*r+-.90649*o)),255*(e+n*(1.97294*r)),this.opacity)}}));var zi=Array.prototype.slice,ji=function(t,e){return t-e},Ri=function(t){return function(){return t}},Di=function(t,e){for(var n,r=-1,o=e.length;++r<o;)if(n=Li(t,e[r]))return n;return 0};function Li(t,e){for(var n=e[0],r=e[1],o=-1,i=0,a=t.length,l=a-1;i<a;l=i++){var c=t[i],u=c[0],s=c[1],f=t[l],d=f[0],p=f[1];if(Ii(c,f,e))return 0;s>r!=p>r&&n<(d-u)*(r-s)/(p-s)+u&&(o=-o)}return o}function Ii(t,e,n){var r,o,i,a;return function(t,e,n){return(e[0]-t[0])*(n[1]-t[1])==(n[0]-t[0])*(e[1]-t[1])}(t,e,n)&&(o=t[r=+(t[0]===e[0])],i=n[r],a=e[r],o<=i&&i<=a||a<=i&&i<=o)}var Ui=function(){},Fi=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]],Bi=function(){var t=1,e=1,n=N,r=l;function o(t){var e=n(t);if(Array.isArray(e))e=e.slice().sort(ji);else{var r=g(t),o=r[0],a=r[1];e=C(o,a,e),e=k(Math.floor(o/e)*e,Math.floor(a/e)*e,e)}return e.map((function(e){return i(t,e)}))}function i(n,o){var i=[],l=[];return function(n,r,o){var i,l,c,u,s,f,d=new Array,p=new Array;i=l=-1,u=n[0]>=r,Fi[u<<1].forEach(m);for(;++i<t-1;)c=u,u=n[i+1]>=r,Fi[c|u<<1].forEach(m);Fi[u<<0].forEach(m);for(;++l<e-1;){for(i=-1,u=n[l*t+t]>=r,s=n[l*t]>=r,Fi[u<<1|s<<2].forEach(m);++i<t-1;)c=u,u=n[l*t+t+i+1]>=r,f=s,s=n[l*t+i+1]>=r,Fi[c|u<<1|s<<2|f<<3].forEach(m);Fi[u|s<<3].forEach(m)}i=-1,s=n[l*t]>=r,Fi[s<<2].forEach(m);for(;++i<t-1;)f=s,s=n[l*t+i+1]>=r,Fi[s<<2|f<<3].forEach(m);function m(t){var e,n,r=[t[0][0]+i,t[0][1]+l],c=[t[1][0]+i,t[1][1]+l],u=a(r),s=a(c);(e=p[u])?(n=d[s])?(delete p[e.end],delete d[n.start],e===n?(e.ring.push(c),o(e.ring)):d[e.start]=p[n.end]={start:e.start,end:n.end,ring:e.ring.concat(n.ring)}):(delete p[e.end],e.ring.push(c),p[e.end=s]=e):(e=d[s])?(n=p[u])?(delete d[e.start],delete p[n.end],e===n?(e.ring.push(c),o(e.ring)):d[n.start]=p[e.end]={start:n.start,end:e.end,ring:n.ring.concat(e.ring)}):(delete d[e.start],e.ring.unshift(r),d[e.start=u]=e):d[u]=p[s]={start:u,end:s,ring:[r,c]}}Fi[s<<3].forEach(m)}(n,o,(function(t){r(t,n,o),function(t){for(var e=0,n=t.length,r=t[n-1][1]*t[0][0]-t[n-1][0]*t[0][1];++e<n;)r+=t[e-1][1]*t[e][0]-t[e-1][0]*t[e][1];return r}(t)>0?i.push([t]):l.push(t)})),l.forEach((function(t){for(var e,n=0,r=i.length;n<r;++n)if(-1!==Di((e=i[n])[0],t))return void e.push(t)})),{type:"MultiPolygon",value:o,coordinates:i}}function a(e){return 2*e[0]+e[1]*(t+1)*4}function l(n,r,o){n.forEach((function(n){var i,a=n[0],l=n[1],c=0|a,u=0|l,s=r[u*t+c];a>0&&a<t&&c===a&&(i=r[u*t+c-1],n[0]=a+(o-i)/(s-i)-.5),l>0&&l<e&&u===l&&(i=r[(u-1)*t+c],n[1]=l+(o-i)/(s-i)-.5)}))}return o.contour=i,o.size=function(n){if(!arguments.length)return[t,e];var r=Math.ceil(n[0]),i=Math.ceil(n[1]);if(!(r>0&&i>0))throw new Error("invalid size");return t=r,e=i,o},o.thresholds=function(t){return arguments.length?(n="function"==typeof t?t:Array.isArray(t)?Ri(zi.call(t)):Ri(t),o):n},o.smooth=function(t){return arguments.length?(r=t?l:Ui,o):r===l},o};function qi(t,e,n){for(var r=t.width,o=t.height,i=1+(n<<1),a=0;a<o;++a)for(var l=0,c=0;l<r+n;++l)l<r&&(c+=t.data[l+a*r]),l>=n&&(l>=i&&(c-=t.data[l-i+a*r]),e.data[l-n+a*r]=c/Math.min(l+1,r-1+i-l,i))}function Hi(t,e,n){for(var r=t.width,o=t.height,i=1+(n<<1),a=0;a<r;++a)for(var l=0,c=0;l<o+n;++l)l<o&&(c+=t.data[a+l*r]),l>=n&&(l>=i&&(c-=t.data[a+(l-i)*r]),e.data[a+(l-n)*r]=c/Math.min(l+1,o-1+i-l,i))}function Wi(t){return t[0]}function $i(t){return t[1]}function Vi(){return 1}var Yi=function(){var t=Wi,e=$i,n=Vi,r=960,o=500,i=20,a=2,l=3*i,c=r+2*l>>a,u=o+2*l>>a,s=Ri(20);function f(r){var o=new Float32Array(c*u),f=new Float32Array(c*u);r.forEach((function(r,i,s){var f=+t(r,i,s)+l>>a,d=+e(r,i,s)+l>>a,p=+n(r,i,s);f>=0&&f<c&&d>=0&&d<u&&(o[f+d*c]+=p)})),qi({width:c,height:u,data:o},{width:c,height:u,data:f},i>>a),Hi({width:c,height:u,data:f},{width:c,height:u,data:o},i>>a),qi({width:c,height:u,data:o},{width:c,height:u,data:f},i>>a),Hi({width:c,height:u,data:f},{width:c,height:u,data:o},i>>a),qi({width:c,height:u,data:o},{width:c,height:u,data:f},i>>a),Hi({width:c,height:u,data:f},{width:c,height:u,data:o},i>>a);var p=s(o);if(!Array.isArray(p)){var m=j(o);p=C(0,m,p),(p=k(0,Math.floor(m/p)*p,p)).shift()}return Bi().thresholds(p).size([c,u])(o).map(d)}function d(t){return t.value*=Math.pow(2,-2*a),t.coordinates.forEach(p),t}function p(t){t.forEach(m)}function m(t){t.forEach(h)}function h(t){t[0]=t[0]*Math.pow(2,a)-l,t[1]=t[1]*Math.pow(2,a)-l}function g(){return c=r+2*(l=3*i)>>a,u=o+2*l>>a,f}return f.x=function(e){return arguments.length?(t="function"==typeof e?e:Ri(+e),f):t},f.y=function(t){return arguments.length?(e="function"==typeof t?t:Ri(+t),f):e},f.weight=function(t){return arguments.length?(n="function"==typeof t?t:Ri(+t),f):n},f.size=function(t){if(!arguments.length)return[r,o];var e=Math.ceil(t[0]),n=Math.ceil(t[1]);if(!(e>=0||e>=0))throw new Error("invalid size");return r=e,o=n,g()},f.cellSize=function(t){if(!arguments.length)return 1<<a;if(!((t=+t)>=1))throw new Error("invalid cell size");return a=Math.floor(Math.log(t)/Math.LN2),g()},f.thresholds=function(t){return arguments.length?(s="function"==typeof t?t:Array.isArray(t)?Ri(zi.call(t)):Ri(t),f):s},f.bandwidth=function(t){if(!arguments.length)return Math.sqrt(i*(i+1));if(!((t=+t)>=0))throw new Error("invalid bandwidth");return i=Math.round((Math.sqrt(4*t*t+1)-1)/2),g()},f},Gi=function(t){return function(){return t}};function Qi(t,e,n,r,o,i,a,l,c,u){this.target=t,this.type=e,this.subject=n,this.identifier=r,this.active=o,this.x=i,this.y=a,this.dx=l,this.dy=c,this._=u}function Xi(){return!ce.ctrlKey&&!ce.button}function Ki(){return this.parentNode}function Ji(t){return null==t?{x:ce.x,y:ce.y}:t}function Zi(){return navigator.maxTouchPoints||"ontouchstart"in this}Qi.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};var ta=function(){var t,e,n,r,o=Xi,i=Ki,a=Ji,l=Zi,c={},u=st("start","drag","end"),s=0,f=0;function d(t){t.on("mousedown.drag",p).filter(l).on("touchstart.drag",g).on("touchmove.drag",b).on("touchend.drag touchcancel.drag",v).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function p(){if(!r&&o.apply(this,arguments)){var a=y("mouse",i.apply(this,arguments),On,this,arguments);a&&(ke(ce.view).on("mousemove.drag",m,!0).on("mouseup.drag",h,!0),Se(ce.view),_e(),n=!1,t=ce.clientX,e=ce.clientY,a("start"))}}function m(){if(Ee(),!n){var r=ce.clientX-t,o=ce.clientY-e;n=r*r+o*o>f}c.mouse("drag")}function h(){ke(ce.view).on("mousemove.drag mouseup.drag",null),Me(ce.view,n),Ee(),c.mouse("end")}function g(){if(o.apply(this,arguments)){var t,e,n=ce.changedTouches,r=i.apply(this,arguments),a=n.length;for(t=0;t<a;++t)(e=y(n[t].identifier,r,An,this,arguments))&&(_e(),e("start"))}}function b(){var t,e,n=ce.changedTouches,r=n.length;for(t=0;t<r;++t)(e=c[n[t].identifier])&&(Ee(),e("drag"))}function v(){var t,e,n=ce.changedTouches,o=n.length;for(r&&clearTimeout(r),r=setTimeout((function(){r=null}),500),t=0;t<o;++t)(e=c[n[t].identifier])&&(_e(),e("end"))}function y(t,e,n,r,o){var i,l,f,p=n(e,t),m=u.copy();if(me(new Qi(d,"beforestart",i,t,s,p[0],p[1],0,0,m),(function(){return null!=(ce.subject=i=a.apply(r,o))&&(l=i.x-p[0]||0,f=i.y-p[1]||0,!0)})))return function a(u){var h,g=p;switch(u){case"start":c[t]=a,h=s++;break;case"end":delete c[t],--s;case"drag":p=n(e,t),h=s}me(new Qi(d,u,i,t,h,p[0]+l,p[1]+f,p[0]-g[0],p[1]-g[1],m),m.apply,m,[u,r,o])}}return d.filter=function(t){return arguments.length?(o="function"==typeof t?t:Gi(!!t),d):o},d.container=function(t){return arguments.length?(i="function"==typeof t?t:Gi(t),d):i},d.subject=function(t){return arguments.length?(a="function"==typeof t?t:Gi(t),d):a},d.touchable=function(t){return arguments.length?(l="function"==typeof t?t:Gi(!!t),d):l},d.on=function(){var t=u.on.apply(u,arguments);return t===u?d:t},d.clickDistance=function(t){return arguments.length?(f=(t=+t)*t,d):Math.sqrt(f)},d},ea={},na={};function ra(t){return new Function("d","return {"+t.map((function(t,e){return JSON.stringify(t)+": d["+e+'] || ""'})).join(",")+"}")}function oa(t){var e=Object.create(null),n=[];return t.forEach((function(t){for(var r in t)r in e||n.push(e[r]=r)})),n}function ia(t,e){var n=t+"",r=n.length;return r<e?new Array(e-r+1).join(0)+n:n}function aa(t){var e,n=t.getUTCHours(),r=t.getUTCMinutes(),o=t.getUTCSeconds(),i=t.getUTCMilliseconds();return isNaN(t)?"Invalid Date":((e=t.getUTCFullYear())<0?"-"+ia(-e,6):e>9999?"+"+ia(e,6):ia(e,4))+"-"+ia(t.getUTCMonth()+1,2)+"-"+ia(t.getUTCDate(),2)+(i?"T"+ia(n,2)+":"+ia(r,2)+":"+ia(o,2)+"."+ia(i,3)+"Z":o?"T"+ia(n,2)+":"+ia(r,2)+":"+ia(o,2)+"Z":r||n?"T"+ia(n,2)+":"+ia(r,2)+"Z":"")}var la=function(t){var e=new RegExp('["'+t+"\n\r]"),n=t.charCodeAt(0);function r(t,e){var r,o=[],i=t.length,a=0,l=0,c=i<=0,u=!1;function s(){if(c)return na;if(u)return u=!1,ea;var e,r,o=a;if(34===t.charCodeAt(o)){for(;a++<i&&34!==t.charCodeAt(a)||34===t.charCodeAt(++a););return(e=a)>=i?c=!0:10===(r=t.charCodeAt(a++))?u=!0:13===r&&(u=!0,10===t.charCodeAt(a)&&++a),t.slice(o+1,e-1).replace(/""/g,'"')}for(;a<i;){if(10===(r=t.charCodeAt(e=a++)))u=!0;else if(13===r)u=!0,10===t.charCodeAt(a)&&++a;else if(r!==n)continue;return t.slice(o,e)}return c=!0,t.slice(o,i)}for(10===t.charCodeAt(i-1)&&--i,13===t.charCodeAt(i-1)&&--i;(r=s())!==na;){for(var f=[];r!==ea&&r!==na;)f.push(r),r=s();e&&null==(f=e(f,l++))||o.push(f)}return o}function o(e,n){return e.map((function(e){return n.map((function(t){return a(e[t])})).join(t)}))}function i(e){return e.map(a).join(t)}function a(t){return null==t?"":t instanceof Date?aa(t):e.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,e){var n,o,i=r(t,(function(t,r){if(n)return n(t,r-1);o=t,n=e?function(t,e){var n=ra(t);return function(r,o){return e(n(r),o,t)}}(t,e):ra(t)}));return i.columns=o||[],i},parseRows:r,format:function(e,n){return null==n&&(n=oa(e)),[n.map(a).join(t)].concat(o(e,n)).join("\n")},formatBody:function(t,e){return null==e&&(e=oa(t)),o(t,e).join("\n")},formatRows:function(t){return t.map(i).join("\n")},formatRow:i,formatValue:a}},ca=la(","),ua=ca.parse,sa=ca.parseRows,fa=ca.format,da=ca.formatBody,pa=ca.formatRows,ma=ca.formatRow,ha=ca.formatValue,ga=la("\t"),ba=ga.parse,va=ga.parseRows,ya=ga.format,xa=ga.formatBody,wa=ga.formatRows,ka=ga.formatRow,_a=ga.formatValue;function Ea(t){for(var e in t){var n,r,o=t[e].trim();if(o)if("true"===o)o=!0;else if("false"===o)o=!1;else if("NaN"===o)o=NaN;else if(isNaN(n=+o)){if(!(r=o.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/)))continue;Sa&&r[4]&&!r[7]&&(o=o.replace(/-/g,"/").replace(/T/," ")),o=new Date(o)}else o=n;else o=null;t[e]=o}return t}var Sa=new Date("2019-01-01T00:00").getHours()||new Date("2019-07-01T00:00").getHours();function Ma(t){return+t}function Ta(t){return t*t}function Ca(t){return t*(2-t)}function Na(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}var Pa=function t(e){function n(t){return Math.pow(t,e)}return e=+e,n.exponent=t,n}(3),Aa=function t(e){function n(t){return 1-Math.pow(1-t,e)}return e=+e,n.exponent=t,n}(3),Oa=function t(e){function n(t){return((t*=2)<=1?Math.pow(t,e):2-Math.pow(2-t,e))/2}return e=+e,n.exponent=t,n}(3),za=Math.PI,ja=za/2;function Ra(t){return 1-Math.cos(t*ja)}function Da(t){return Math.sin(t*ja)}function La(t){return(1-Math.cos(za*t))/2}function Ia(t){return Math.pow(2,10*t-10)}function Ua(t){return 1-Math.pow(2,-10*t)}function Fa(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}function Ba(t){return 1-Math.sqrt(1-t*t)}function qa(t){return Math.sqrt(1- --t*t)}function Ha(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}function Wa(t){return 1-$a(1-t)}function $a(t){return(t=+t)<4/11?7.5625*t*t:t<8/11?7.5625*(t-=6/11)*t+.75:t<10/11?7.5625*(t-=9/11)*t+.9375:7.5625*(t-=21/22)*t+63/64}function Va(t){return((t*=2)<=1?1-$a(1-t):$a(t-1)+1)/2}var Ya=function t(e){function n(t){return t*t*((e+1)*t-e)}return e=+e,n.overshoot=t,n}(1.70158),Ga=function t(e){function n(t){return--t*t*((e+1)*t+e)+1}return e=+e,n.overshoot=t,n}(1.70158),Qa=function t(e){function n(t){return((t*=2)<1?t*t*((e+1)*t-e):(t-=2)*t*((e+1)*t+e)+2)/2}return e=+e,n.overshoot=t,n}(1.70158),Xa=2*Math.PI,Ka=function t(e,n){var r=Math.asin(1/(e=Math.max(1,e)))*(n/=Xa);function o(t){return e*Math.pow(2,10*--t)*Math.sin((r-t)/n)}return o.amplitude=function(e){return t(e,n*Xa)},o.period=function(n){return t(e,n)},o}(1,.3),Ja=function t(e,n){var r=Math.asin(1/(e=Math.max(1,e)))*(n/=Xa);function o(t){return 1-e*Math.pow(2,-10*(t=+t))*Math.sin((t+r)/n)}return o.amplitude=function(e){return t(e,n*Xa)},o.period=function(n){return t(e,n)},o}(1,.3),Za=function t(e,n){var r=Math.asin(1/(e=Math.max(1,e)))*(n/=Xa);function o(t){return((t=2*t-1)<0?e*Math.pow(2,10*t)*Math.sin((r-t)/n):2-e*Math.pow(2,-10*t)*Math.sin((r+t)/n))/2}return o.amplitude=function(e){return t(e,n*Xa)},o.period=function(n){return t(e,n)},o}(1,.3);function tl(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.blob()}var el=function(t,e){return fetch(t,e).then(tl)};function nl(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.arrayBuffer()}var rl=function(t,e){return fetch(t,e).then(nl)};function ol(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}var il=function(t,e){return fetch(t,e).then(ol)};function al(t){return function(e,n,r){return 2===arguments.length&&"function"==typeof n&&(r=n,n=void 0),il(e,n).then((function(e){return t(e,r)}))}}function ll(t,e,n,r){3===arguments.length&&"function"==typeof n&&(r=n,n=void 0);var o=la(t);return il(e,n).then((function(t){return o.parse(t,r)}))}var cl=al(ua),ul=al(ba),sl=function(t,e){return new Promise((function(n,r){var o=new Image;for(var i in e)o[i]=e[i];o.onerror=r,o.onload=function(){n(o)},o.src=t}))};function fl(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.json()}var dl=function(t,e){return fetch(t,e).then(fl)};function pl(t){return function(e,n){return il(e,n).then((function(e){return(new DOMParser).parseFromString(e,t)}))}}var ml=pl("application/xml"),hl=pl("text/html"),gl=pl("image/svg+xml"),bl=function(t,e){var n;function r(){var r,o,i=n.length,a=0,l=0;for(r=0;r<i;++r)a+=(o=n[r]).x,l+=o.y;for(a=a/i-t,l=l/i-e,r=0;r<i;++r)(o=n[r]).x-=a,o.y-=l}return null==t&&(t=0),null==e&&(e=0),r.initialize=function(t){n=t},r.x=function(e){return arguments.length?(t=+e,r):t},r.y=function(t){return arguments.length?(e=+t,r):e},r},vl=function(t){return function(){return t}},yl=function(){return 1e-6*(Math.random()-.5)};function xl(t,e,n,r){if(isNaN(e)||isNaN(n))return t;var o,i,a,l,c,u,s,f,d,p=t._root,m={data:r},h=t._x0,g=t._y0,b=t._x1,v=t._y1;if(!p)return t._root=m,t;for(;p.length;)if((u=e>=(i=(h+b)/2))?h=i:b=i,(s=n>=(a=(g+v)/2))?g=a:v=a,o=p,!(p=p[f=s<<1|u]))return o[f]=m,t;if(l=+t._x.call(null,p.data),c=+t._y.call(null,p.data),e===l&&n===c)return m.next=p,o?o[f]=m:t._root=m,t;do{o=o?o[f]=new Array(4):t._root=new Array(4),(u=e>=(i=(h+b)/2))?h=i:b=i,(s=n>=(a=(g+v)/2))?g=a:v=a}while((f=s<<1|u)==(d=(c>=a)<<1|l>=i));return o[d]=p,o[f]=m,t}var wl=function(t,e,n,r,o){this.node=t,this.x0=e,this.y0=n,this.x1=r,this.y1=o};function kl(t){return t[0]}function _l(t){return t[1]}function El(t,e,n){var r=new Sl(null==e?kl:e,null==n?_l:n,NaN,NaN,NaN,NaN);return null==t?r:r.addAll(t)}function Sl(t,e,n,r,o,i){this._x=t,this._y=e,this._x0=n,this._y0=r,this._x1=o,this._y1=i,this._root=void 0}function Ml(t){for(var e={data:t.data},n=e;t=t.next;)n=n.next={data:t.data};return e}var Tl=El.prototype=Sl.prototype;function Cl(t){return t.x+t.vx}function Nl(t){return t.y+t.vy}Tl.copy=function(){var t,e,n=new Sl(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return n;if(!r.length)return n._root=Ml(r),n;for(t=[{source:r,target:n._root=new Array(4)}];r=t.pop();)for(var o=0;o<4;++o)(e=r.source[o])&&(e.length?t.push({source:e,target:r.target[o]=new Array(4)}):r.target[o]=Ml(e));return n},Tl.add=function(t){var e=+this._x.call(null,t),n=+this._y.call(null,t);return xl(this.cover(e,n),e,n,t)},Tl.addAll=function(t){var e,n,r,o,i=t.length,a=new Array(i),l=new Array(i),c=1/0,u=1/0,s=-1/0,f=-1/0;for(n=0;n<i;++n)isNaN(r=+this._x.call(null,e=t[n]))||isNaN(o=+this._y.call(null,e))||(a[n]=r,l[n]=o,r<c&&(c=r),r>s&&(s=r),o<u&&(u=o),o>f&&(f=o));if(c>s||u>f)return this;for(this.cover(c,u).cover(s,f),n=0;n<i;++n)xl(this,a[n],l[n],t[n]);return this},Tl.cover=function(t,e){if(isNaN(t=+t)||isNaN(e=+e))return this;var n=this._x0,r=this._y0,o=this._x1,i=this._y1;if(isNaN(n))o=(n=Math.floor(t))+1,i=(r=Math.floor(e))+1;else{for(var a,l,c=o-n,u=this._root;n>t||t>=o||r>e||e>=i;)switch(l=(e<r)<<1|t<n,(a=new Array(4))[l]=u,u=a,c*=2,l){case 0:o=n+c,i=r+c;break;case 1:n=o-c,i=r+c;break;case 2:o=n+c,r=i-c;break;case 3:n=o-c,r=i-c}this._root&&this._root.length&&(this._root=u)}return this._x0=n,this._y0=r,this._x1=o,this._y1=i,this},Tl.data=function(){var t=[];return this.visit((function(e){if(!e.length)do{t.push(e.data)}while(e=e.next)})),t},Tl.extent=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},Tl.find=function(t,e,n){var r,o,i,a,l,c,u,s=this._x0,f=this._y0,d=this._x1,p=this._y1,m=[],h=this._root;for(h&&m.push(new wl(h,s,f,d,p)),null==n?n=1/0:(s=t-n,f=e-n,d=t+n,p=e+n,n*=n);c=m.pop();)if(!(!(h=c.node)||(o=c.x0)>d||(i=c.y0)>p||(a=c.x1)<s||(l=c.y1)<f))if(h.length){var g=(o+a)/2,b=(i+l)/2;m.push(new wl(h[3],g,b,a,l),new wl(h[2],o,b,g,l),new wl(h[1],g,i,a,b),new wl(h[0],o,i,g,b)),(u=(e>=b)<<1|t>=g)&&(c=m[m.length-1],m[m.length-1]=m[m.length-1-u],m[m.length-1-u]=c)}else{var v=t-+this._x.call(null,h.data),y=e-+this._y.call(null,h.data),x=v*v+y*y;if(x<n){var w=Math.sqrt(n=x);s=t-w,f=e-w,d=t+w,p=e+w,r=h.data}}return r},Tl.remove=function(t){if(isNaN(i=+this._x.call(null,t))||isNaN(a=+this._y.call(null,t)))return this;var e,n,r,o,i,a,l,c,u,s,f,d,p=this._root,m=this._x0,h=this._y0,g=this._x1,b=this._y1;if(!p)return this;if(p.length)for(;;){if((u=i>=(l=(m+g)/2))?m=l:g=l,(s=a>=(c=(h+b)/2))?h=c:b=c,e=p,!(p=p[f=s<<1|u]))return this;if(!p.length)break;(e[f+1&3]||e[f+2&3]||e[f+3&3])&&(n=e,d=f)}for(;p.data!==t;)if(r=p,!(p=p.next))return this;return(o=p.next)&&delete p.next,r?(o?r.next=o:delete r.next,this):e?(o?e[f]=o:delete e[f],(p=e[0]||e[1]||e[2]||e[3])&&p===(e[3]||e[2]||e[1]||e[0])&&!p.length&&(n?n[d]=p:this._root=p),this):(this._root=o,this)},Tl.removeAll=function(t){for(var e=0,n=t.length;e<n;++e)this.remove(t[e]);return this},Tl.root=function(){return this._root},Tl.size=function(){var t=0;return this.visit((function(e){if(!e.length)do{++t}while(e=e.next)})),t},Tl.visit=function(t){var e,n,r,o,i,a,l=[],c=this._root;for(c&&l.push(new wl(c,this._x0,this._y0,this._x1,this._y1));e=l.pop();)if(!t(c=e.node,r=e.x0,o=e.y0,i=e.x1,a=e.y1)&&c.length){var u=(r+i)/2,s=(o+a)/2;(n=c[3])&&l.push(new wl(n,u,s,i,a)),(n=c[2])&&l.push(new wl(n,r,s,u,a)),(n=c[1])&&l.push(new wl(n,u,o,i,s)),(n=c[0])&&l.push(new wl(n,r,o,u,s))}return this},Tl.visitAfter=function(t){var e,n=[],r=[];for(this._root&&n.push(new wl(this._root,this._x0,this._y0,this._x1,this._y1));e=n.pop();){var o=e.node;if(o.length){var i,a=e.x0,l=e.y0,c=e.x1,u=e.y1,s=(a+c)/2,f=(l+u)/2;(i=o[0])&&n.push(new wl(i,a,l,s,f)),(i=o[1])&&n.push(new wl(i,s,l,c,f)),(i=o[2])&&n.push(new wl(i,a,f,s,u)),(i=o[3])&&n.push(new wl(i,s,f,c,u))}r.push(e)}for(;e=r.pop();)t(e.node,e.x0,e.y0,e.x1,e.y1);return this},Tl.x=function(t){return arguments.length?(this._x=t,this):this._x},Tl.y=function(t){return arguments.length?(this._y=t,this):this._y};var Pl=function(t){var e,n,r=1,o=1;function i(){for(var t,i,l,c,u,s,f,d=e.length,p=0;p<o;++p)for(i=El(e,Cl,Nl).visitAfter(a),t=0;t<d;++t)l=e[t],s=n[l.index],f=s*s,c=l.x+l.vx,u=l.y+l.vy,i.visit(m);function m(t,e,n,o,i){var a=t.data,d=t.r,p=s+d;if(!a)return e>c+p||o<c-p||n>u+p||i<u-p;if(a.index>l.index){var m=c-a.x-a.vx,h=u-a.y-a.vy,g=m*m+h*h;g<p*p&&(0===m&&(g+=(m=yl())*m),0===h&&(g+=(h=yl())*h),g=(p-(g=Math.sqrt(g)))/g*r,l.vx+=(m*=g)*(p=(d*=d)/(f+d)),l.vy+=(h*=g)*p,a.vx-=m*(p=1-p),a.vy-=h*p)}}}function a(t){if(t.data)return t.r=n[t.data.index];for(var e=t.r=0;e<4;++e)t[e]&&t[e].r>t.r&&(t.r=t[e].r)}function l(){if(e){var r,o,i=e.length;for(n=new Array(i),r=0;r<i;++r)o=e[r],n[o.index]=+t(o,r,e)}}return"function"!=typeof t&&(t=vl(null==t?1:+t)),i.initialize=function(t){e=t,l()},i.iterations=function(t){return arguments.length?(o=+t,i):o},i.strength=function(t){return arguments.length?(r=+t,i):r},i.radius=function(e){return arguments.length?(t="function"==typeof e?e:vl(+e),l(),i):t},i};function Al(t){return t.index}function Ol(t,e){var n=t.get(e);if(!n)throw new Error("missing: "+e);return n}var zl=function(t){var e,n,r,o,i,a=Al,l=function(t){return 1/Math.min(o[t.source.index],o[t.target.index])},c=vl(30),u=1;function s(r){for(var o=0,a=t.length;o<u;++o)for(var l,c,s,f,d,p,m,h=0;h<a;++h)c=(l=t[h]).source,f=(s=l.target).x+s.vx-c.x-c.vx||yl(),d=s.y+s.vy-c.y-c.vy||yl(),f*=p=((p=Math.sqrt(f*f+d*d))-n[h])/p*r*e[h],d*=p,s.vx-=f*(m=i[h]),s.vy-=d*m,c.vx+=f*(m=1-m),c.vy+=d*m}function f(){if(r){var l,c,u=r.length,s=t.length,f=Jo(r,a);for(l=0,o=new Array(u);l<s;++l)(c=t[l]).index=l,"object"!=typeof c.source&&(c.source=Ol(f,c.source)),"object"!=typeof c.target&&(c.target=Ol(f,c.target)),o[c.source.index]=(o[c.source.index]||0)+1,o[c.target.index]=(o[c.target.index]||0)+1;for(l=0,i=new Array(s);l<s;++l)c=t[l],i[l]=o[c.source.index]/(o[c.source.index]+o[c.target.index]);e=new Array(s),d(),n=new Array(s),p()}}function d(){if(r)for(var n=0,o=t.length;n<o;++n)e[n]=+l(t[n],n,t)}function p(){if(r)for(var e=0,o=t.length;e<o;++e)n[e]=+c(t[e],e,t)}return null==t&&(t=[]),s.initialize=function(t){r=t,f()},s.links=function(e){return arguments.length?(t=e,f(),s):t},s.id=function(t){return arguments.length?(a=t,s):a},s.iterations=function(t){return arguments.length?(u=+t,s):u},s.strength=function(t){return arguments.length?(l="function"==typeof t?t:vl(+t),d(),s):l},s.distance=function(t){return arguments.length?(c="function"==typeof t?t:vl(+t),p(),s):c},s};function jl(t){return t.x}function Rl(t){return t.y}var Dl=Math.PI*(3-Math.sqrt(5)),Ll=function(t){var e,n=1,r=.001,o=1-Math.pow(r,1/300),i=0,a=.6,l=Jo(),c=Wn(s),u=st("tick","end");function s(){f(),u.call("tick",e),n<r&&(c.stop(),u.call("end",e))}function f(r){var c,u,s=t.length;void 0===r&&(r=1);for(var f=0;f<r;++f)for(n+=(i-n)*o,l.each((function(t){t(n)})),c=0;c<s;++c)null==(u=t[c]).fx?u.x+=u.vx*=a:(u.x=u.fx,u.vx=0),null==u.fy?u.y+=u.vy*=a:(u.y=u.fy,u.vy=0);return e}function d(){for(var e,n=0,r=t.length;n<r;++n){if((e=t[n]).index=n,null!=e.fx&&(e.x=e.fx),null!=e.fy&&(e.y=e.fy),isNaN(e.x)||isNaN(e.y)){var o=10*Math.sqrt(n),i=n*Dl;e.x=o*Math.cos(i),e.y=o*Math.sin(i)}(isNaN(e.vx)||isNaN(e.vy))&&(e.vx=e.vy=0)}}function p(e){return e.initialize&&e.initialize(t),e}return null==t&&(t=[]),d(),e={tick:f,restart:function(){return c.restart(s),e},stop:function(){return c.stop(),e},nodes:function(n){return arguments.length?(t=n,d(),l.each(p),e):t},alpha:function(t){return arguments.length?(n=+t,e):n},alphaMin:function(t){return arguments.length?(r=+t,e):r},alphaDecay:function(t){return arguments.length?(o=+t,e):+o},alphaTarget:function(t){return arguments.length?(i=+t,e):i},velocityDecay:function(t){return arguments.length?(a=1-t,e):1-a},force:function(t,n){return arguments.length>1?(null==n?l.remove(t):l.set(t,p(n)),e):l.get(t)},find:function(e,n,r){var o,i,a,l,c,u=0,s=t.length;for(null==r?r=1/0:r*=r,u=0;u<s;++u)(a=(o=e-(l=t[u]).x)*o+(i=n-l.y)*i)<r&&(c=l,r=a);return c},on:function(t,n){return arguments.length>1?(u.on(t,n),e):u.on(t)}}},Il=function(){var t,e,n,r,o=vl(-30),i=1,a=1/0,l=.81;function c(r){var o,i=t.length,a=El(t,jl,Rl).visitAfter(s);for(n=r,o=0;o<i;++o)e=t[o],a.visit(f)}function u(){if(t){var e,n,i=t.length;for(r=new Array(i),e=0;e<i;++e)n=t[e],r[n.index]=+o(n,e,t)}}function s(t){var e,n,o,i,a,l=0,c=0;if(t.length){for(o=i=a=0;a<4;++a)(e=t[a])&&(n=Math.abs(e.value))&&(l+=e.value,c+=n,o+=n*e.x,i+=n*e.y);t.x=o/c,t.y=i/c}else{(e=t).x=e.data.x,e.y=e.data.y;do{l+=r[e.data.index]}while(e=e.next)}t.value=l}function f(t,o,c,u){if(!t.value)return!0;var s=t.x-e.x,f=t.y-e.y,d=u-o,p=s*s+f*f;if(d*d/l<p)return p<a&&(0===s&&(p+=(s=yl())*s),0===f&&(p+=(f=yl())*f),p<i&&(p=Math.sqrt(i*p)),e.vx+=s*t.value*n/p,e.vy+=f*t.value*n/p),!0;if(!(t.length||p>=a)){(t.data!==e||t.next)&&(0===s&&(p+=(s=yl())*s),0===f&&(p+=(f=yl())*f),p<i&&(p=Math.sqrt(i*p)));do{t.data!==e&&(d=r[t.data.index]*n/p,e.vx+=s*d,e.vy+=f*d)}while(t=t.next)}}return c.initialize=function(e){t=e,u()},c.strength=function(t){return arguments.length?(o="function"==typeof t?t:vl(+t),u(),c):o},c.distanceMin=function(t){return arguments.length?(i=t*t,c):Math.sqrt(i)},c.distanceMax=function(t){return arguments.length?(a=t*t,c):Math.sqrt(a)},c.theta=function(t){return arguments.length?(l=t*t,c):Math.sqrt(l)},c},Ul=function(t,e,n){var r,o,i,a=vl(.1);function l(t){for(var a=0,l=r.length;a<l;++a){var c=r[a],u=c.x-e||1e-6,s=c.y-n||1e-6,f=Math.sqrt(u*u+s*s),d=(i[a]-f)*o[a]*t/f;c.vx+=u*d,c.vy+=s*d}}function c(){if(r){var e,n=r.length;for(o=new Array(n),i=new Array(n),e=0;e<n;++e)i[e]=+t(r[e],e,r),o[e]=isNaN(i[e])?0:+a(r[e],e,r)}}return"function"!=typeof t&&(t=vl(+t)),null==e&&(e=0),null==n&&(n=0),l.initialize=function(t){r=t,c()},l.strength=function(t){return arguments.length?(a="function"==typeof t?t:vl(+t),c(),l):a},l.radius=function(e){return arguments.length?(t="function"==typeof e?e:vl(+e),c(),l):t},l.x=function(t){return arguments.length?(e=+t,l):e},l.y=function(t){return arguments.length?(n=+t,l):n},l},Fl=function(t){var e,n,r,o=vl(.1);function i(t){for(var o,i=0,a=e.length;i<a;++i)(o=e[i]).vx+=(r[i]-o.x)*n[i]*t}function a(){if(e){var i,a=e.length;for(n=new Array(a),r=new Array(a),i=0;i<a;++i)n[i]=isNaN(r[i]=+t(e[i],i,e))?0:+o(e[i],i,e)}}return"function"!=typeof t&&(t=vl(null==t?0:+t)),i.initialize=function(t){e=t,a()},i.strength=function(t){return arguments.length?(o="function"==typeof t?t:vl(+t),a(),i):o},i.x=function(e){return arguments.length?(t="function"==typeof e?e:vl(+e),a(),i):t},i},Bl=function(t){var e,n,r,o=vl(.1);function i(t){for(var o,i=0,a=e.length;i<a;++i)(o=e[i]).vy+=(r[i]-o.y)*n[i]*t}function a(){if(e){var i,a=e.length;for(n=new Array(a),r=new Array(a),i=0;i<a;++i)n[i]=isNaN(r[i]=+t(e[i],i,e))?0:+o(e[i],i,e)}}return"function"!=typeof t&&(t=vl(null==t?0:+t)),i.initialize=function(t){e=t,a()},i.strength=function(t){return arguments.length?(o="function"==typeof t?t:vl(+t),a(),i):o},i.y=function(e){return arguments.length?(t="function"==typeof e?e:vl(+e),a(),i):t},i},ql=function(t,e){if((n=(t=e?t.toExponential(e-1):t.toExponential()).indexOf("e"))<0)return null;var n,r=t.slice(0,n);return[r.length>1?r[0]+r.slice(2):r,+t.slice(n+1)]},Hl=function(t){return(t=ql(Math.abs(t)))?t[1]:NaN},Wl=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function $l(t){if(!(e=Wl.exec(t)))throw new Error("invalid format: "+t);var e;return new Vl({fill:e[1],align:e[2],sign:e[3],symbol:e[4],zero:e[5],width:e[6],comma:e[7],precision:e[8]&&e[8].slice(1),trim:e[9],type:e[10]})}function Vl(t){this.fill=void 0===t.fill?" ":t.fill+"",this.align=void 0===t.align?">":t.align+"",this.sign=void 0===t.sign?"-":t.sign+"",this.symbol=void 0===t.symbol?"":t.symbol+"",this.zero=!!t.zero,this.width=void 0===t.width?void 0:+t.width,this.comma=!!t.comma,this.precision=void 0===t.precision?void 0:+t.precision,this.trim=!!t.trim,this.type=void 0===t.type?"":t.type+""}$l.prototype=Vl.prototype,Vl.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var Yl,Gl,Ql,Xl,Kl=function(t,e){var n=ql(t,e);if(!n)return t+"";var r=n[0],o=n[1];return o<0?"0."+new Array(-o).join("0")+r:r.length>o+1?r.slice(0,o+1)+"."+r.slice(o+1):r+new Array(o-r.length+2).join("0")},Jl={"%":function(t,e){return(100*t).toFixed(e)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,e){return t.toExponential(e)},f:function(t,e){return t.toFixed(e)},g:function(t,e){return t.toPrecision(e)},o:function(t){return Math.round(t).toString(8)},p:function(t,e){return Kl(100*t,e)},r:Kl,s:function(t,e){var n=ql(t,e);if(!n)return t+"";var r=n[0],o=n[1],i=o-(Yl=3*Math.max(-8,Math.min(8,Math.floor(o/3))))+1,a=r.length;return i===a?r:i>a?r+new Array(i-a+1).join("0"):i>0?r.slice(0,i)+"."+r.slice(i):"0."+new Array(1-i).join("0")+ql(t,Math.max(0,e+i-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},Zl=function(t){return t},tc=Array.prototype.map,ec=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"],nc=function(t){var e,n,r=void 0===t.grouping||void 0===t.thousands?Zl:(e=tc.call(t.grouping,Number),n=t.thousands+"",function(t,r){for(var o=t.length,i=[],a=0,l=e[0],c=0;o>0&&l>0&&(c+l+1>r&&(l=Math.max(1,r-c)),i.push(t.substring(o-=l,o+l)),!((c+=l+1)>r));)l=e[a=(a+1)%e.length];return i.reverse().join(n)}),o=void 0===t.currency?"":t.currency[0]+"",i=void 0===t.currency?"":t.currency[1]+"",a=void 0===t.decimal?".":t.decimal+"",l=void 0===t.numerals?Zl:function(t){return function(e){return e.replace(/[0-9]/g,(function(e){return t[+e]}))}}(tc.call(t.numerals,String)),c=void 0===t.percent?"%":t.percent+"",u=void 0===t.minus?"-":t.minus+"",s=void 0===t.nan?"NaN":t.nan+"";function f(t){var e=(t=$l(t)).fill,n=t.align,f=t.sign,d=t.symbol,p=t.zero,m=t.width,h=t.comma,g=t.precision,b=t.trim,v=t.type;"n"===v?(h=!0,v="g"):Jl[v]||(void 0===g&&(g=12),b=!0,v="g"),(p||"0"===e&&"="===n)&&(p=!0,e="0",n="=");var y="$"===d?o:"#"===d&&/[boxX]/.test(v)?"0"+v.toLowerCase():"",x="$"===d?i:/[%p]/.test(v)?c:"",w=Jl[v],k=/[defgprs%]/.test(v);function _(t){var o,i,c,d=y,_=x;if("c"===v)_=w(t)+_,t="";else{var E=(t=+t)<0;if(t=isNaN(t)?s:w(Math.abs(t),g),b&&(t=function(t){t:for(var e,n=t.length,r=1,o=-1;r<n;++r)switch(t[r]){case".":o=e=r;break;case"0":0===o&&(o=r),e=r;break;default:if(!+t[r])break t;o>0&&(o=0)}return o>0?t.slice(0,o)+t.slice(e+1):t}(t)),E&&0==+t&&(E=!1),d=(E?"("===f?f:u:"-"===f||"("===f?"":f)+d,_=("s"===v?ec[8+Yl/3]:"")+_+(E&&"("===f?")":""),k)for(o=-1,i=t.length;++o<i;)if(48>(c=t.charCodeAt(o))||c>57){_=(46===c?a+t.slice(o+1):t.slice(o))+_,t=t.slice(0,o);break}}h&&!p&&(t=r(t,1/0));var S=d.length+t.length+_.length,M=S<m?new Array(m-S+1).join(e):"";switch(h&&p&&(t=r(M+t,M.length?m-_.length:1/0),M=""),n){case"<":t=d+t+_+M;break;case"=":t=d+M+t+_;break;case"^":t=M.slice(0,S=M.length>>1)+d+t+_+M.slice(S);break;default:t=M+d+t+_}return l(t)}return g=void 0===g?6:/[gprs]/.test(v)?Math.max(1,Math.min(21,g)):Math.max(0,Math.min(20,g)),_.toString=function(){return t+""},_}return{format:f,formatPrefix:function(t,e){var n=f(((t=$l(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(Hl(e)/3))),o=Math.pow(10,-r),i=ec[8+r/3];return function(t){return n(o*t)+i}}}};function rc(t){return Gl=nc(t),Ql=Gl.format,Xl=Gl.formatPrefix,Gl}rc({decimal:".",thousands:",",grouping:[3],currency:["$",""],minus:"-"});var oc=function(t){return Math.max(0,-Hl(Math.abs(t)))},ic=function(t,e){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Hl(e)/3)))-Hl(Math.abs(t)))},ac=function(t,e){return t=Math.abs(t),e=Math.abs(e)-t,Math.max(0,Hl(e)-Hl(t))+1},lc=function(){return new cc};function cc(){this.reset()}cc.prototype={constructor:cc,reset:function(){this.s=this.t=0},add:function(t){sc(uc,t,this.t),sc(this,uc.s,this.s),this.s?this.t+=uc.t:this.s=uc.t},valueOf:function(){return this.s}};var uc=new cc;function sc(t,e,n){var r=t.s=e+n,o=r-e,i=r-o;t.t=e-i+(n-o)}var fc=Math.PI,dc=fc/2,pc=fc/4,mc=2*fc,hc=180/fc,gc=fc/180,bc=Math.abs,vc=Math.atan,yc=Math.atan2,xc=Math.cos,wc=Math.ceil,kc=Math.exp,_c=(Math.floor,Math.log),Ec=Math.pow,Sc=Math.sin,Mc=Math.sign||function(t){return t>0?1:t<0?-1:0},Tc=Math.sqrt,Cc=Math.tan;function Nc(t){return t>1?0:t<-1?fc:Math.acos(t)}function Pc(t){return t>1?dc:t<-1?-dc:Math.asin(t)}function Ac(t){return(t=Sc(t/2))*t}function Oc(){}function zc(t,e){t&&Rc.hasOwnProperty(t.type)&&Rc[t.type](t,e)}var jc={Feature:function(t,e){zc(t.geometry,e)},FeatureCollection:function(t,e){for(var n=t.features,r=-1,o=n.length;++r<o;)zc(n[r].geometry,e)}},Rc={Sphere:function(t,e){e.sphere()},Point:function(t,e){t=t.coordinates,e.point(t[0],t[1],t[2])},MultiPoint:function(t,e){for(var n=t.coordinates,r=-1,o=n.length;++r<o;)t=n[r],e.point(t[0],t[1],t[2])},LineString:function(t,e){Dc(t.coordinates,e,0)},MultiLineString:function(t,e){for(var n=t.coordinates,r=-1,o=n.length;++r<o;)Dc(n[r],e,0)},Polygon:function(t,e){Lc(t.coordinates,e)},MultiPolygon:function(t,e){for(var n=t.coordinates,r=-1,o=n.length;++r<o;)Lc(n[r],e)},GeometryCollection:function(t,e){for(var n=t.geometries,r=-1,o=n.length;++r<o;)zc(n[r],e)}};function Dc(t,e,n){var r,o=-1,i=t.length-n;for(e.lineStart();++o<i;)r=t[o],e.point(r[0],r[1],r[2]);e.lineEnd()}function Lc(t,e){var n=-1,r=t.length;for(e.polygonStart();++n<r;)Dc(t[n],e,1);e.polygonEnd()}var Ic,Uc,Fc,Bc,qc,Hc=function(t,e){t&&jc.hasOwnProperty(t.type)?jc[t.type](t,e):zc(t,e)},Wc=lc(),$c=lc(),Vc={point:Oc,lineStart:Oc,lineEnd:Oc,polygonStart:function(){Wc.reset(),Vc.lineStart=Yc,Vc.lineEnd=Gc},polygonEnd:function(){var t=+Wc;$c.add(t<0?mc+t:t),this.lineStart=this.lineEnd=this.point=Oc},sphere:function(){$c.add(mc)}};function Yc(){Vc.point=Qc}function Gc(){Xc(Ic,Uc)}function Qc(t,e){Vc.point=Xc,Ic=t,Uc=e,Fc=t*=gc,Bc=xc(e=(e*=gc)/2+pc),qc=Sc(e)}function Xc(t,e){var n=(t*=gc)-Fc,r=n>=0?1:-1,o=r*n,i=xc(e=(e*=gc)/2+pc),a=Sc(e),l=qc*a,c=Bc*i+l*xc(o),u=l*r*Sc(o);Wc.add(yc(u,c)),Fc=t,Bc=i,qc=a}var Kc=function(t){return $c.reset(),Hc(t,Vc),2*$c};function Jc(t){return[yc(t[1],t[0]),Pc(t[2])]}function Zc(t){var e=t[0],n=t[1],r=xc(n);return[r*xc(e),r*Sc(e),Sc(n)]}function tu(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}function eu(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}function nu(t,e){t[0]+=e[0],t[1]+=e[1],t[2]+=e[2]}function ru(t,e){return[t[0]*e,t[1]*e,t[2]*e]}function ou(t){var e=Tc(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=e,t[1]/=e,t[2]/=e}var iu,au,lu,cu,uu,su,fu,du,pu,mu,hu=lc(),gu={point:bu,lineStart:yu,lineEnd:xu,polygonStart:function(){gu.point=wu,gu.lineStart=ku,gu.lineEnd=_u,hu.reset(),Vc.polygonStart()},polygonEnd:function(){Vc.polygonEnd(),gu.point=bu,gu.lineStart=yu,gu.lineEnd=xu,Wc<0?(iu=-(lu=180),au=-(cu=90)):hu>1e-6?cu=90:hu<-1e-6&&(au=-90),mu[0]=iu,mu[1]=lu},sphere:function(){iu=-(lu=180),au=-(cu=90)}};function bu(t,e){pu.push(mu=[iu=t,lu=t]),e<au&&(au=e),e>cu&&(cu=e)}function vu(t,e){var n=Zc([t*gc,e*gc]);if(du){var r=eu(du,n),o=eu([r[1],-r[0],0],r);ou(o),o=Jc(o);var i,a=t-uu,l=a>0?1:-1,c=o[0]*hc*l,u=bc(a)>180;u^(l*uu<c&&c<l*t)?(i=o[1]*hc)>cu&&(cu=i):u^(l*uu<(c=(c+360)%360-180)&&c<l*t)?(i=-o[1]*hc)<au&&(au=i):(e<au&&(au=e),e>cu&&(cu=e)),u?t<uu?Eu(iu,t)>Eu(iu,lu)&&(lu=t):Eu(t,lu)>Eu(iu,lu)&&(iu=t):lu>=iu?(t<iu&&(iu=t),t>lu&&(lu=t)):t>uu?Eu(iu,t)>Eu(iu,lu)&&(lu=t):Eu(t,lu)>Eu(iu,lu)&&(iu=t)}else pu.push(mu=[iu=t,lu=t]);e<au&&(au=e),e>cu&&(cu=e),du=n,uu=t}function yu(){gu.point=vu}function xu(){mu[0]=iu,mu[1]=lu,gu.point=bu,du=null}function wu(t,e){if(du){var n=t-uu;hu.add(bc(n)>180?n+(n>0?360:-360):n)}else su=t,fu=e;Vc.point(t,e),vu(t,e)}function ku(){Vc.lineStart()}function _u(){wu(su,fu),Vc.lineEnd(),bc(hu)>1e-6&&(iu=-(lu=180)),mu[0]=iu,mu[1]=lu,du=null}function Eu(t,e){return(e-=t)<0?e+360:e}function Su(t,e){return t[0]-e[0]}function Mu(t,e){return t[0]<=t[1]?t[0]<=e&&e<=t[1]:e<t[0]||t[1]<e}var Tu,Cu,Nu,Pu,Au,Ou,zu,ju,Ru,Du,Lu,Iu,Uu,Fu,Bu,qu,Hu=function(t){var e,n,r,o,i,a,l;if(cu=lu=-(iu=au=1/0),pu=[],Hc(t,gu),n=pu.length){for(pu.sort(Su),e=1,i=[r=pu[0]];e<n;++e)Mu(r,(o=pu[e])[0])||Mu(r,o[1])?(Eu(r[0],o[1])>Eu(r[0],r[1])&&(r[1]=o[1]),Eu(o[0],r[1])>Eu(r[0],r[1])&&(r[0]=o[0])):i.push(r=o);for(a=-1/0,e=0,r=i[n=i.length-1];e<=n;r=o,++e)o=i[e],(l=Eu(r[1],o[0]))>a&&(a=l,iu=o[0],lu=r[1])}return pu=mu=null,iu===1/0||au===1/0?[[NaN,NaN],[NaN,NaN]]:[[iu,au],[lu,cu]]},Wu={sphere:Oc,point:$u,lineStart:Yu,lineEnd:Xu,polygonStart:function(){Wu.lineStart=Ku,Wu.lineEnd=Ju},polygonEnd:function(){Wu.lineStart=Yu,Wu.lineEnd=Xu}};function $u(t,e){t*=gc;var n=xc(e*=gc);Vu(n*xc(t),n*Sc(t),Sc(e))}function Vu(t,e,n){++Tu,Nu+=(t-Nu)/Tu,Pu+=(e-Pu)/Tu,Au+=(n-Au)/Tu}function Yu(){Wu.point=Gu}function Gu(t,e){t*=gc;var n=xc(e*=gc);Fu=n*xc(t),Bu=n*Sc(t),qu=Sc(e),Wu.point=Qu,Vu(Fu,Bu,qu)}function Qu(t,e){t*=gc;var n=xc(e*=gc),r=n*xc(t),o=n*Sc(t),i=Sc(e),a=yc(Tc((a=Bu*i-qu*o)*a+(a=qu*r-Fu*i)*a+(a=Fu*o-Bu*r)*a),Fu*r+Bu*o+qu*i);Cu+=a,Ou+=a*(Fu+(Fu=r)),zu+=a*(Bu+(Bu=o)),ju+=a*(qu+(qu=i)),Vu(Fu,Bu,qu)}function Xu(){Wu.point=$u}function Ku(){Wu.point=Zu}function Ju(){ts(Iu,Uu),Wu.point=$u}function Zu(t,e){Iu=t,Uu=e,t*=gc,e*=gc,Wu.point=ts;var n=xc(e);Fu=n*xc(t),Bu=n*Sc(t),qu=Sc(e),Vu(Fu,Bu,qu)}function ts(t,e){t*=gc;var n=xc(e*=gc),r=n*xc(t),o=n*Sc(t),i=Sc(e),a=Bu*i-qu*o,l=qu*r-Fu*i,c=Fu*o-Bu*r,u=Tc(a*a+l*l+c*c),s=Pc(u),f=u&&-s/u;Ru+=f*a,Du+=f*l,Lu+=f*c,Cu+=s,Ou+=s*(Fu+(Fu=r)),zu+=s*(Bu+(Bu=o)),ju+=s*(qu+(qu=i)),Vu(Fu,Bu,qu)}var es=function(t){Tu=Cu=Nu=Pu=Au=Ou=zu=ju=Ru=Du=Lu=0,Hc(t,Wu);var e=Ru,n=Du,r=Lu,o=e*e+n*n+r*r;return o<1e-12&&(e=Ou,n=zu,r=ju,Cu<1e-6&&(e=Nu,n=Pu,r=Au),(o=e*e+n*n+r*r)<1e-12)?[NaN,NaN]:[yc(n,e)*hc,Pc(r/Tc(o))*hc]},ns=function(t){return function(){return t}},rs=function(t,e){function n(n,r){return n=t(n,r),e(n[0],n[1])}return t.invert&&e.invert&&(n.invert=function(n,r){return(n=e.invert(n,r))&&t.invert(n[0],n[1])}),n};function os(t,e){return[bc(t)>fc?t+Math.round(-t/mc)*mc:t,e]}function is(t,e,n){return(t%=mc)?e||n?rs(ls(t),cs(e,n)):ls(t):e||n?cs(e,n):os}function as(t){return function(e,n){return[(e+=t)>fc?e-mc:e<-fc?e+mc:e,n]}}function ls(t){var e=as(t);return e.invert=as(-t),e}function cs(t,e){var n=xc(t),r=Sc(t),o=xc(e),i=Sc(e);function a(t,e){var a=xc(e),l=xc(t)*a,c=Sc(t)*a,u=Sc(e),s=u*n+l*r;return[yc(c*o-s*i,l*n-u*r),Pc(s*o+c*i)]}return a.invert=function(t,e){var a=xc(e),l=xc(t)*a,c=Sc(t)*a,u=Sc(e),s=u*o-c*i;return[yc(c*o+u*i,l*n+s*r),Pc(s*n-l*r)]},a}os.invert=os;var us=function(t){function e(e){return(e=t(e[0]*gc,e[1]*gc))[0]*=hc,e[1]*=hc,e}return t=is(t[0]*gc,t[1]*gc,t.length>2?t[2]*gc:0),e.invert=function(e){return(e=t.invert(e[0]*gc,e[1]*gc))[0]*=hc,e[1]*=hc,e},e};function ss(t,e,n,r,o,i){if(n){var a=xc(e),l=Sc(e),c=r*n;null==o?(o=e+r*mc,i=e-c/2):(o=fs(a,o),i=fs(a,i),(r>0?o<i:o>i)&&(o+=r*mc));for(var u,s=o;r>0?s>i:s<i;s-=c)u=Jc([a,-l*xc(s),-l*Sc(s)]),t.point(u[0],u[1])}}function fs(t,e){(e=Zc(e))[0]-=t,ou(e);var n=Nc(-e[1]);return((-e[2]<0?-n:n)+mc-1e-6)%mc}var ds=function(){var t,e,n=ns([0,0]),r=ns(90),o=ns(6),i={point:function(n,r){t.push(n=e(n,r)),n[0]*=hc,n[1]*=hc}};function a(){var a=n.apply(this,arguments),l=r.apply(this,arguments)*gc,c=o.apply(this,arguments)*gc;return t=[],e=is(-a[0]*gc,-a[1]*gc,0).invert,ss(i,l,c,1),a={type:"Polygon",coordinates:[t]},t=e=null,a}return a.center=function(t){return arguments.length?(n="function"==typeof t?t:ns([+t[0],+t[1]]),a):n},a.radius=function(t){return arguments.length?(r="function"==typeof t?t:ns(+t),a):r},a.precision=function(t){return arguments.length?(o="function"==typeof t?t:ns(+t),a):o},a},ps=function(){var t,e=[];return{point:function(e,n){t.push([e,n])},lineStart:function(){e.push(t=[])},lineEnd:Oc,rejoin:function(){e.length>1&&e.push(e.pop().concat(e.shift()))},result:function(){var n=e;return e=[],t=null,n}}},ms=function(t,e){return bc(t[0]-e[0])<1e-6&&bc(t[1]-e[1])<1e-6};function hs(t,e,n,r){this.x=t,this.z=e,this.o=n,this.e=r,this.v=!1,this.n=this.p=null}var gs=function(t,e,n,r,o){var i,a,l=[],c=[];if(t.forEach((function(t){if(!((e=t.length-1)<=0)){var e,n,r=t[0],a=t[e];if(ms(r,a)){for(o.lineStart(),i=0;i<e;++i)o.point((r=t[i])[0],r[1]);o.lineEnd()}else l.push(n=new hs(r,t,null,!0)),c.push(n.o=new hs(r,null,n,!1)),l.push(n=new hs(a,t,null,!1)),c.push(n.o=new hs(a,null,n,!0))}})),l.length){for(c.sort(e),bs(l),bs(c),i=0,a=c.length;i<a;++i)c[i].e=n=!n;for(var u,s,f=l[0];;){for(var d=f,p=!0;d.v;)if((d=d.n)===f)return;u=d.z,o.lineStart();do{if(d.v=d.o.v=!0,d.e){if(p)for(i=0,a=u.length;i<a;++i)o.point((s=u[i])[0],s[1]);else r(d.x,d.n.x,1,o);d=d.n}else{if(p)for(u=d.p.z,i=u.length-1;i>=0;--i)o.point((s=u[i])[0],s[1]);else r(d.x,d.p.x,-1,o);d=d.p}u=(d=d.o).z,p=!p}while(!d.v);o.lineEnd()}}};function bs(t){if(e=t.length){for(var e,n,r=0,o=t[0];++r<e;)o.n=n=t[r],n.p=o,o=n;o.n=n=t[0],n.p=o}}var vs=lc();function ys(t){return bc(t[0])<=fc?t[0]:Mc(t[0])*((bc(t[0])+fc)%mc-fc)}var xs=function(t,e){var n=ys(e),r=e[1],o=Sc(r),i=[Sc(n),-xc(n),0],a=0,l=0;vs.reset(),1===o?r=dc+1e-6:-1===o&&(r=-dc-1e-6);for(var c=0,u=t.length;c<u;++c)if(f=(s=t[c]).length)for(var s,f,d=s[f-1],p=ys(d),m=d[1]/2+pc,h=Sc(m),g=xc(m),b=0;b<f;++b,p=y,h=w,g=k,d=v){var v=s[b],y=ys(v),x=v[1]/2+pc,w=Sc(x),k=xc(x),_=y-p,E=_>=0?1:-1,S=E*_,M=S>fc,T=h*w;if(vs.add(yc(T*E*Sc(S),g*k+T*xc(S))),a+=M?_+E*mc:_,M^p>=n^y>=n){var C=eu(Zc(d),Zc(v));ou(C);var N=eu(i,C);ou(N);var P=(M^_>=0?-1:1)*Pc(N[2]);(r>P||r===P&&(C[0]||C[1]))&&(l+=M^_>=0?1:-1)}}return(a<-1e-6||a<1e-6&&vs<-1e-6)^1&l},ws=function(t,e,n,r){return function(o){var i,a,l,c=e(o),u=ps(),s=e(u),f=!1,d={point:p,lineStart:h,lineEnd:g,polygonStart:function(){d.point=b,d.lineStart=v,d.lineEnd=y,a=[],i=[]},polygonEnd:function(){d.point=p,d.lineStart=h,d.lineEnd=g,a=L(a);var t=xs(i,r);a.length?(f||(o.polygonStart(),f=!0),gs(a,_s,t,n,o)):t&&(f||(o.polygonStart(),f=!0),o.lineStart(),n(null,null,1,o),o.lineEnd()),f&&(o.polygonEnd(),f=!1),a=i=null},sphere:function(){o.polygonStart(),o.lineStart(),n(null,null,1,o),o.lineEnd(),o.polygonEnd()}};function p(e,n){t(e,n)&&o.point(e,n)}function m(t,e){c.point(t,e)}function h(){d.point=m,c.lineStart()}function g(){d.point=p,c.lineEnd()}function b(t,e){l.push([t,e]),s.point(t,e)}function v(){s.lineStart(),l=[]}function y(){b(l[0][0],l[0][1]),s.lineEnd();var t,e,n,r,c=s.clean(),d=u.result(),p=d.length;if(l.pop(),i.push(l),l=null,p)if(1&c){if((e=(n=d[0]).length-1)>0){for(f||(o.polygonStart(),f=!0),o.lineStart(),t=0;t<e;++t)o.point((r=n[t])[0],r[1]);o.lineEnd()}}else p>1&&2&c&&d.push(d.pop().concat(d.shift())),a.push(d.filter(ks))}return d}};function ks(t){return t.length>1}function _s(t,e){return((t=t.x)[0]<0?t[1]-dc-1e-6:dc-t[1])-((e=e.x)[0]<0?e[1]-dc-1e-6:dc-e[1])}var Es=ws((function(){return!0}),(function(t){var e,n=NaN,r=NaN,o=NaN;return{lineStart:function(){t.lineStart(),e=1},point:function(i,a){var l=i>0?fc:-fc,c=bc(i-n);bc(c-fc)<1e-6?(t.point(n,r=(r+a)/2>0?dc:-dc),t.point(o,r),t.lineEnd(),t.lineStart(),t.point(l,r),t.point(i,r),e=0):o!==l&&c>=fc&&(bc(n-o)<1e-6&&(n-=1e-6*o),bc(i-l)<1e-6&&(i-=1e-6*l),r=function(t,e,n,r){var o,i,a=Sc(t-n);return bc(a)>1e-6?vc((Sc(e)*(i=xc(r))*Sc(n)-Sc(r)*(o=xc(e))*Sc(t))/(o*i*a)):(e+r)/2}(n,r,i,a),t.point(o,r),t.lineEnd(),t.lineStart(),t.point(l,r),e=0),t.point(n=i,r=a),o=l},lineEnd:function(){t.lineEnd(),n=r=NaN},clean:function(){return 2-e}}}),(function(t,e,n,r){var o;if(null==t)o=n*dc,r.point(-fc,o),r.point(0,o),r.point(fc,o),r.point(fc,0),r.point(fc,-o),r.point(0,-o),r.point(-fc,-o),r.point(-fc,0),r.point(-fc,o);else if(bc(t[0]-e[0])>1e-6){var i=t[0]<e[0]?fc:-fc;o=n*i/2,r.point(-i,o),r.point(0,o),r.point(i,o)}else r.point(e[0],e[1])}),[-fc,-dc]);var Ss=function(t){var e=xc(t),n=6*gc,r=e>0,o=bc(e)>1e-6;function i(t,n){return xc(t)*xc(n)>e}function a(t,n,r){var o=[1,0,0],i=eu(Zc(t),Zc(n)),a=tu(i,i),l=i[0],c=a-l*l;if(!c)return!r&&t;var u=e*a/c,s=-e*l/c,f=eu(o,i),d=ru(o,u);nu(d,ru(i,s));var p=f,m=tu(d,p),h=tu(p,p),g=m*m-h*(tu(d,d)-1);if(!(g<0)){var b=Tc(g),v=ru(p,(-m-b)/h);if(nu(v,d),v=Jc(v),!r)return v;var y,x=t[0],w=n[0],k=t[1],_=n[1];w<x&&(y=x,x=w,w=y);var E=w-x,S=bc(E-fc)<1e-6;if(!S&&_<k&&(y=k,k=_,_=y),S||E<1e-6?S?k+_>0^v[1]<(bc(v[0]-x)<1e-6?k:_):k<=v[1]&&v[1]<=_:E>fc^(x<=v[0]&&v[0]<=w)){var M=ru(p,(-m+b)/h);return nu(M,d),[v,Jc(M)]}}}function l(e,n){var o=r?t:fc-t,i=0;return e<-o?i|=1:e>o&&(i|=2),n<-o?i|=4:n>o&&(i|=8),i}return ws(i,(function(t){var e,n,c,u,s;return{lineStart:function(){u=c=!1,s=1},point:function(f,d){var p,m=[f,d],h=i(f,d),g=r?h?0:l(f,d):h?l(f+(f<0?fc:-fc),d):0;if(!e&&(u=c=h)&&t.lineStart(),h!==c&&(!(p=a(e,m))||ms(e,p)||ms(m,p))&&(m[0]+=1e-6,m[1]+=1e-6,h=i(m[0],m[1])),h!==c)s=0,h?(t.lineStart(),p=a(m,e),t.point(p[0],p[1])):(p=a(e,m),t.point(p[0],p[1]),t.lineEnd()),e=p;else if(o&&e&&r^h){var b;g&n||!(b=a(m,e,!0))||(s=0,r?(t.lineStart(),t.point(b[0][0],b[0][1]),t.point(b[1][0],b[1][1]),t.lineEnd()):(t.point(b[1][0],b[1][1]),t.lineEnd(),t.lineStart(),t.point(b[0][0],b[0][1])))}!h||e&&ms(e,m)||t.point(m[0],m[1]),e=m,c=h,n=g},lineEnd:function(){c&&t.lineEnd(),e=null},clean:function(){return s|(u&&c)<<1}}}),(function(e,r,o,i){ss(i,t,n,o,e,r)}),r?[0,-t]:[-fc,t-fc])};function Ms(t,e,n,r){function o(o,i){return t<=o&&o<=n&&e<=i&&i<=r}function i(o,i,l,u){var s=0,f=0;if(null==o||(s=a(o,l))!==(f=a(i,l))||c(o,i)<0^l>0)do{u.point(0===s||3===s?t:n,s>1?r:e)}while((s=(s+l+4)%4)!==f);else u.point(i[0],i[1])}function a(r,o){return bc(r[0]-t)<1e-6?o>0?0:3:bc(r[0]-n)<1e-6?o>0?2:1:bc(r[1]-e)<1e-6?o>0?1:0:o>0?3:2}function l(t,e){return c(t.x,e.x)}function c(t,e){var n=a(t,1),r=a(e,1);return n!==r?n-r:0===n?e[1]-t[1]:1===n?t[0]-e[0]:2===n?t[1]-e[1]:e[0]-t[0]}return function(a){var c,u,s,f,d,p,m,h,g,b,v,y=a,x=ps(),w={point:k,lineStart:function(){w.point=_,u&&u.push(s=[]);b=!0,g=!1,m=h=NaN},lineEnd:function(){c&&(_(f,d),p&&g&&x.rejoin(),c.push(x.result()));w.point=k,g&&y.lineEnd()},polygonStart:function(){y=x,c=[],u=[],v=!0},polygonEnd:function(){var e=function(){for(var e=0,n=0,o=u.length;n<o;++n)for(var i,a,l=u[n],c=1,s=l.length,f=l[0],d=f[0],p=f[1];c<s;++c)i=d,a=p,f=l[c],d=f[0],p=f[1],a<=r?p>r&&(d-i)*(r-a)>(p-a)*(t-i)&&++e:p<=r&&(d-i)*(r-a)<(p-a)*(t-i)&&--e;return e}(),n=v&&e,o=(c=L(c)).length;(n||o)&&(a.polygonStart(),n&&(a.lineStart(),i(null,null,1,a),a.lineEnd()),o&&gs(c,l,e,i,a),a.polygonEnd());y=a,c=u=s=null}};function k(t,e){o(t,e)&&y.point(t,e)}function _(i,a){var l=o(i,a);if(u&&s.push([i,a]),b)f=i,d=a,p=l,b=!1,l&&(y.lineStart(),y.point(i,a));else if(l&&g)y.point(i,a);else{var c=[m=Math.max(-1e9,Math.min(1e9,m)),h=Math.max(-1e9,Math.min(1e9,h))],x=[i=Math.max(-1e9,Math.min(1e9,i)),a=Math.max(-1e9,Math.min(1e9,a))];!function(t,e,n,r,o,i){var a,l=t[0],c=t[1],u=0,s=1,f=e[0]-l,d=e[1]-c;if(a=n-l,f||!(a>0)){if(a/=f,f<0){if(a<u)return;a<s&&(s=a)}else if(f>0){if(a>s)return;a>u&&(u=a)}if(a=o-l,f||!(a<0)){if(a/=f,f<0){if(a>s)return;a>u&&(u=a)}else if(f>0){if(a<u)return;a<s&&(s=a)}if(a=r-c,d||!(a>0)){if(a/=d,d<0){if(a<u)return;a<s&&(s=a)}else if(d>0){if(a>s)return;a>u&&(u=a)}if(a=i-c,d||!(a<0)){if(a/=d,d<0){if(a>s)return;a>u&&(u=a)}else if(d>0){if(a<u)return;a<s&&(s=a)}return u>0&&(t[0]=l+u*f,t[1]=c+u*d),s<1&&(e[0]=l+s*f,e[1]=c+s*d),!0}}}}}(c,x,t,e,n,r)?l&&(y.lineStart(),y.point(i,a),v=!1):(g||(y.lineStart(),y.point(c[0],c[1])),y.point(x[0],x[1]),l||y.lineEnd(),v=!1)}m=i,h=a,g=l}return w}}var Ts,Cs,Ns,Ps=function(){var t,e,n,r=0,o=0,i=960,a=500;return n={stream:function(n){return t&&e===n?t:t=Ms(r,o,i,a)(e=n)},extent:function(l){return arguments.length?(r=+l[0][0],o=+l[0][1],i=+l[1][0],a=+l[1][1],t=e=null,n):[[r,o],[i,a]]}}},As=lc(),Os={sphere:Oc,point:Oc,lineStart:function(){Os.point=js,Os.lineEnd=zs},lineEnd:Oc,polygonStart:Oc,polygonEnd:Oc};function zs(){Os.point=Os.lineEnd=Oc}function js(t,e){Ts=t*=gc,Cs=Sc(e*=gc),Ns=xc(e),Os.point=Rs}function Rs(t,e){t*=gc;var n=Sc(e*=gc),r=xc(e),o=bc(t-Ts),i=xc(o),a=r*Sc(o),l=Ns*n-Cs*r*i,c=Cs*n+Ns*r*i;As.add(yc(Tc(a*a+l*l),c)),Ts=t,Cs=n,Ns=r}var Ds=function(t){return As.reset(),Hc(t,Os),+As},Ls=[null,null],Is={type:"LineString",coordinates:Ls},Us=function(t,e){return Ls[0]=t,Ls[1]=e,Ds(Is)},Fs={Feature:function(t,e){return qs(t.geometry,e)},FeatureCollection:function(t,e){for(var n=t.features,r=-1,o=n.length;++r<o;)if(qs(n[r].geometry,e))return!0;return!1}},Bs={Sphere:function(){return!0},Point:function(t,e){return Hs(t.coordinates,e)},MultiPoint:function(t,e){for(var n=t.coordinates,r=-1,o=n.length;++r<o;)if(Hs(n[r],e))return!0;return!1},LineString:function(t,e){return Ws(t.coordinates,e)},MultiLineString:function(t,e){for(var n=t.coordinates,r=-1,o=n.length;++r<o;)if(Ws(n[r],e))return!0;return!1},Polygon:function(t,e){return $s(t.coordinates,e)},MultiPolygon:function(t,e){for(var n=t.coordinates,r=-1,o=n.length;++r<o;)if($s(n[r],e))return!0;return!1},GeometryCollection:function(t,e){for(var n=t.geometries,r=-1,o=n.length;++r<o;)if(qs(n[r],e))return!0;return!1}};function qs(t,e){return!(!t||!Bs.hasOwnProperty(t.type))&&Bs[t.type](t,e)}function Hs(t,e){return 0===Us(t,e)}function Ws(t,e){for(var n,r,o,i=0,a=t.length;i<a;i++){if(0===(r=Us(t[i],e)))return!0;if(i>0&&(o=Us(t[i],t[i-1]))>0&&n<=o&&r<=o&&(n+r-o)*(1-Math.pow((n-r)/o,2))<1e-12*o)return!0;n=r}return!1}function $s(t,e){return!!xs(t.map(Vs),Ys(e))}function Vs(t){return(t=t.map(Ys)).pop(),t}function Ys(t){return[t[0]*gc,t[1]*gc]}var Gs=function(t,e){return(t&&Fs.hasOwnProperty(t.type)?Fs[t.type]:qs)(t,e)};function Qs(t,e,n){var r=k(t,e-1e-6,n).concat(e);return function(t){return r.map((function(e){return[t,e]}))}}function Xs(t,e,n){var r=k(t,e-1e-6,n).concat(e);return function(t){return r.map((function(e){return[e,t]}))}}function Ks(){var t,e,n,r,o,i,a,l,c,u,s,f,d=10,p=d,m=90,h=360,g=2.5;function b(){return{type:"MultiLineString",coordinates:v()}}function v(){return k(wc(r/m)*m,n,m).map(s).concat(k(wc(l/h)*h,a,h).map(f)).concat(k(wc(e/d)*d,t,d).filter((function(t){return bc(t%m)>1e-6})).map(c)).concat(k(wc(i/p)*p,o,p).filter((function(t){return bc(t%h)>1e-6})).map(u))}return b.lines=function(){return v().map((function(t){return{type:"LineString",coordinates:t}}))},b.outline=function(){return{type:"Polygon",coordinates:[s(r).concat(f(a).slice(1),s(n).reverse().slice(1),f(l).reverse().slice(1))]}},b.extent=function(t){return arguments.length?b.extentMajor(t).extentMinor(t):b.extentMinor()},b.extentMajor=function(t){return arguments.length?(r=+t[0][0],n=+t[1][0],l=+t[0][1],a=+t[1][1],r>n&&(t=r,r=n,n=t),l>a&&(t=l,l=a,a=t),b.precision(g)):[[r,l],[n,a]]},b.extentMinor=function(n){return arguments.length?(e=+n[0][0],t=+n[1][0],i=+n[0][1],o=+n[1][1],e>t&&(n=e,e=t,t=n),i>o&&(n=i,i=o,o=n),b.precision(g)):[[e,i],[t,o]]},b.step=function(t){return arguments.length?b.stepMajor(t).stepMinor(t):b.stepMinor()},b.stepMajor=function(t){return arguments.length?(m=+t[0],h=+t[1],b):[m,h]},b.stepMinor=function(t){return arguments.length?(d=+t[0],p=+t[1],b):[d,p]},b.precision=function(d){return arguments.length?(g=+d,c=Qs(i,o,90),u=Xs(e,t,g),s=Qs(l,a,90),f=Xs(r,n,g),b):g},b.extentMajor([[-180,1e-6-90],[180,90-1e-6]]).extentMinor([[-180,-80-1e-6],[180,80+1e-6]])}function Js(){return Ks()()}var Zs,tf,ef,nf,rf=function(t,e){var n=t[0]*gc,r=t[1]*gc,o=e[0]*gc,i=e[1]*gc,a=xc(r),l=Sc(r),c=xc(i),u=Sc(i),s=a*xc(n),f=a*Sc(n),d=c*xc(o),p=c*Sc(o),m=2*Pc(Tc(Ac(i-r)+a*c*Ac(o-n))),h=Sc(m),g=m?function(t){var e=Sc(t*=m)/h,n=Sc(m-t)/h,r=n*s+e*d,o=n*f+e*p,i=n*l+e*u;return[yc(o,r)*hc,yc(i,Tc(r*r+o*o))*hc]}:function(){return[n*hc,r*hc]};return g.distance=m,g},of=function(t){return t},af=lc(),lf=lc(),cf={point:Oc,lineStart:Oc,lineEnd:Oc,polygonStart:function(){cf.lineStart=uf,cf.lineEnd=df},polygonEnd:function(){cf.lineStart=cf.lineEnd=cf.point=Oc,af.add(bc(lf)),lf.reset()},result:function(){var t=af/2;return af.reset(),t}};function uf(){cf.point=sf}function sf(t,e){cf.point=ff,Zs=ef=t,tf=nf=e}function ff(t,e){lf.add(nf*t-ef*e),ef=t,nf=e}function df(){ff(Zs,tf)}var pf=cf,mf=1/0,hf=mf,gf=-mf,bf=gf;var vf,yf,xf,wf,kf={point:function(t,e){t<mf&&(mf=t);t>gf&&(gf=t);e<hf&&(hf=e);e>bf&&(bf=e)},lineStart:Oc,lineEnd:Oc,polygonStart:Oc,polygonEnd:Oc,result:function(){var t=[[mf,hf],[gf,bf]];return gf=bf=-(hf=mf=1/0),t}},_f=0,Ef=0,Sf=0,Mf=0,Tf=0,Cf=0,Nf=0,Pf=0,Af=0,Of={point:zf,lineStart:jf,lineEnd:Lf,polygonStart:function(){Of.lineStart=If,Of.lineEnd=Uf},polygonEnd:function(){Of.point=zf,Of.lineStart=jf,Of.lineEnd=Lf},result:function(){var t=Af?[Nf/Af,Pf/Af]:Cf?[Mf/Cf,Tf/Cf]:Sf?[_f/Sf,Ef/Sf]:[NaN,NaN];return _f=Ef=Sf=Mf=Tf=Cf=Nf=Pf=Af=0,t}};function zf(t,e){_f+=t,Ef+=e,++Sf}function jf(){Of.point=Rf}function Rf(t,e){Of.point=Df,zf(xf=t,wf=e)}function Df(t,e){var n=t-xf,r=e-wf,o=Tc(n*n+r*r);Mf+=o*(xf+t)/2,Tf+=o*(wf+e)/2,Cf+=o,zf(xf=t,wf=e)}function Lf(){Of.point=zf}function If(){Of.point=Ff}function Uf(){Bf(vf,yf)}function Ff(t,e){Of.point=Bf,zf(vf=xf=t,yf=wf=e)}function Bf(t,e){var n=t-xf,r=e-wf,o=Tc(n*n+r*r);Mf+=o*(xf+t)/2,Tf+=o*(wf+e)/2,Cf+=o,Nf+=(o=wf*t-xf*e)*(xf+t),Pf+=o*(wf+e),Af+=3*o,zf(xf=t,wf=e)}var qf=Of;function Hf(t){this._context=t}Hf.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(t,e){switch(this._point){case 0:this._context.moveTo(t,e),this._point=1;break;case 1:this._context.lineTo(t,e);break;default:this._context.moveTo(t+this._radius,e),this._context.arc(t,e,this._radius,0,mc)}},result:Oc};var Wf,$f,Vf,Yf,Gf,Qf=lc(),Xf={point:Oc,lineStart:function(){Xf.point=Kf},lineEnd:function(){Wf&&Jf($f,Vf),Xf.point=Oc},polygonStart:function(){Wf=!0},polygonEnd:function(){Wf=null},result:function(){var t=+Qf;return Qf.reset(),t}};function Kf(t,e){Xf.point=Jf,$f=Yf=t,Vf=Gf=e}function Jf(t,e){Yf-=t,Gf-=e,Qf.add(Tc(Yf*Yf+Gf*Gf)),Yf=t,Gf=e}var Zf=Xf;function td(){this._string=[]}function ed(t){return"m0,"+t+"a"+t+","+t+" 0 1,1 0,"+-2*t+"a"+t+","+t+" 0 1,1 0,"+2*t+"z"}td.prototype={_radius:4.5,_circle:ed(4.5),pointRadius:function(t){return(t=+t)!==this._radius&&(this._radius=t,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(t,e){switch(this._point){case 0:this._string.push("M",t,",",e),this._point=1;break;case 1:this._string.push("L",t,",",e);break;default:null==this._circle&&(this._circle=ed(this._radius)),this._string.push("M",t,",",e,this._circle)}},result:function(){if(this._string.length){var t=this._string.join("");return this._string=[],t}return null}};var nd=function(t,e){var n,r,o=4.5;function i(t){return t&&("function"==typeof o&&r.pointRadius(+o.apply(this,arguments)),Hc(t,n(r))),r.result()}return i.area=function(t){return Hc(t,n(pf)),pf.result()},i.measure=function(t){return Hc(t,n(Zf)),Zf.result()},i.bounds=function(t){return Hc(t,n(kf)),kf.result()},i.centroid=function(t){return Hc(t,n(qf)),qf.result()},i.projection=function(e){return arguments.length?(n=null==e?(t=null,of):(t=e).stream,i):t},i.context=function(t){return arguments.length?(r=null==t?(e=null,new td):new Hf(e=t),"function"!=typeof o&&r.pointRadius(o),i):e},i.pointRadius=function(t){return arguments.length?(o="function"==typeof t?t:(r.pointRadius(+t),+t),i):o},i.projection(t).context(e)},rd=function(t){return{stream:od(t)}};function od(t){return function(e){var n=new id;for(var r in t)n[r]=t[r];return n.stream=e,n}}function id(){}function ad(t,e,n){var r=t.clipExtent&&t.clipExtent();return t.scale(150).translate([0,0]),null!=r&&t.clipExtent(null),Hc(n,t.stream(kf)),e(kf.result()),null!=r&&t.clipExtent(r),t}function ld(t,e,n){return ad(t,(function(n){var r=e[1][0]-e[0][0],o=e[1][1]-e[0][1],i=Math.min(r/(n[1][0]-n[0][0]),o/(n[1][1]-n[0][1])),a=+e[0][0]+(r-i*(n[1][0]+n[0][0]))/2,l=+e[0][1]+(o-i*(n[1][1]+n[0][1]))/2;t.scale(150*i).translate([a,l])}),n)}function cd(t,e,n){return ld(t,[[0,0],e],n)}function ud(t,e,n){return ad(t,(function(n){var r=+e,o=r/(n[1][0]-n[0][0]),i=(r-o*(n[1][0]+n[0][0]))/2,a=-o*n[0][1];t.scale(150*o).translate([i,a])}),n)}function sd(t,e,n){return ad(t,(function(n){var r=+e,o=r/(n[1][1]-n[0][1]),i=-o*n[0][0],a=(r-o*(n[1][1]+n[0][1]))/2;t.scale(150*o).translate([i,a])}),n)}id.prototype={constructor:id,point:function(t,e){this.stream.point(t,e)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var fd=xc(30*gc),dd=function(t,e){return+e?function(t,e){function n(r,o,i,a,l,c,u,s,f,d,p,m,h,g){var b=u-r,v=s-o,y=b*b+v*v;if(y>4*e&&h--){var x=a+d,w=l+p,k=c+m,_=Tc(x*x+w*w+k*k),E=Pc(k/=_),S=bc(bc(k)-1)<1e-6||bc(i-f)<1e-6?(i+f)/2:yc(w,x),M=t(S,E),T=M[0],C=M[1],N=T-r,P=C-o,A=v*N-b*P;(A*A/y>e||bc((b*N+v*P)/y-.5)>.3||a*d+l*p+c*m<fd)&&(n(r,o,i,a,l,c,T,C,S,x/=_,w/=_,k,h,g),g.point(T,C),n(T,C,S,x,w,k,u,s,f,d,p,m,h,g))}}return function(e){var r,o,i,a,l,c,u,s,f,d,p,m,h={point:g,lineStart:b,lineEnd:y,polygonStart:function(){e.polygonStart(),h.lineStart=x},polygonEnd:function(){e.polygonEnd(),h.lineStart=b}};function g(n,r){n=t(n,r),e.point(n[0],n[1])}function b(){s=NaN,h.point=v,e.lineStart()}function v(r,o){var i=Zc([r,o]),a=t(r,o);n(s,f,u,d,p,m,s=a[0],f=a[1],u=r,d=i[0],p=i[1],m=i[2],16,e),e.point(s,f)}function y(){h.point=g,e.lineEnd()}function x(){b(),h.point=w,h.lineEnd=k}function w(t,e){v(r=t,e),o=s,i=f,a=d,l=p,c=m,h.point=v}function k(){n(s,f,u,d,p,m,o,i,r,a,l,c,16,e),h.lineEnd=y,y()}return h}}(t,e):function(t){return od({point:function(e,n){e=t(e,n),this.stream.point(e[0],e[1])}})}(t)};var pd=od({point:function(t,e){this.stream.point(t*gc,e*gc)}});function md(t,e,n){function r(r,o){return[e+t*r,n-t*o]}return r.invert=function(r,o){return[(r-e)/t,(n-o)/t]},r}function hd(t,e,n,r){var o=xc(r),i=Sc(r),a=o*t,l=i*t,c=o/t,u=i/t,s=(i*n-o*e)/t,f=(i*e+o*n)/t;function d(t,r){return[a*t-l*r+e,n-l*t-a*r]}return d.invert=function(t,e){return[c*t-u*e+s,f-u*t-c*e]},d}function gd(t){return bd((function(){return t}))()}function bd(t){var e,n,r,o,i,a,l,c,u,s,f=150,d=480,p=250,m=0,h=0,g=0,b=0,v=0,y=0,x=null,w=Es,k=null,_=of,E=.5;function S(t){return c(t[0]*gc,t[1]*gc)}function M(t){return(t=c.invert(t[0],t[1]))&&[t[0]*hc,t[1]*hc]}function T(){var t=hd(f,0,0,y).apply(null,e(m,h)),r=(y?hd:md)(f,d-t[0],p-t[1],y);return n=is(g,b,v),l=rs(e,r),c=rs(n,l),a=dd(l,E),C()}function C(){return u=s=null,S}return S.stream=function(t){return u&&s===t?u:u=pd(function(t){return od({point:function(e,n){var r=t(e,n);return this.stream.point(r[0],r[1])}})}(n)(w(a(_(s=t)))))},S.preclip=function(t){return arguments.length?(w=t,x=void 0,C()):w},S.postclip=function(t){return arguments.length?(_=t,k=r=o=i=null,C()):_},S.clipAngle=function(t){return arguments.length?(w=+t?Ss(x=t*gc):(x=null,Es),C()):x*hc},S.clipExtent=function(t){return arguments.length?(_=null==t?(k=r=o=i=null,of):Ms(k=+t[0][0],r=+t[0][1],o=+t[1][0],i=+t[1][1]),C()):null==k?null:[[k,r],[o,i]]},S.scale=function(t){return arguments.length?(f=+t,T()):f},S.translate=function(t){return arguments.length?(d=+t[0],p=+t[1],T()):[d,p]},S.center=function(t){return arguments.length?(m=t[0]%360*gc,h=t[1]%360*gc,T()):[m*hc,h*hc]},S.rotate=function(t){return arguments.length?(g=t[0]%360*gc,b=t[1]%360*gc,v=t.length>2?t[2]%360*gc:0,T()):[g*hc,b*hc,v*hc]},S.angle=function(t){return arguments.length?(y=t%360*gc,T()):y*hc},S.precision=function(t){return arguments.length?(a=dd(l,E=t*t),C()):Tc(E)},S.fitExtent=function(t,e){return ld(S,t,e)},S.fitSize=function(t,e){return cd(S,t,e)},S.fitWidth=function(t,e){return ud(S,t,e)},S.fitHeight=function(t,e){return sd(S,t,e)},function(){return e=t.apply(this,arguments),S.invert=e.invert&&M,T()}}function vd(t){var e=0,n=fc/3,r=bd(t),o=r(e,n);return o.parallels=function(t){return arguments.length?r(e=t[0]*gc,n=t[1]*gc):[e*hc,n*hc]},o}function yd(t,e){var n=Sc(t),r=(n+Sc(e))/2;if(bc(r)<1e-6)return function(t){var e=xc(t);function n(t,n){return[t*e,Sc(n)/e]}return n.invert=function(t,n){return[t/e,Pc(n*e)]},n}(t);var o=1+n*(2*r-n),i=Tc(o)/r;function a(t,e){var n=Tc(o-2*r*Sc(e))/r;return[n*Sc(t*=r),i-n*xc(t)]}return a.invert=function(t,e){var n=i-e;return[yc(t,bc(n))/r*Mc(n),Pc((o-(t*t+n*n)*r*r)/(2*r))]},a}var xd=function(){return vd(yd).scale(155.424).center([0,33.6442])},wd=function(){return xd().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])};var kd=function(){var t,e,n,r,o,i,a=wd(),l=xd().rotate([154,0]).center([-2,58.5]).parallels([55,65]),c=xd().rotate([157,0]).center([-3,19.9]).parallels([8,18]),u={point:function(t,e){i=[t,e]}};function s(t){var e=t[0],a=t[1];return i=null,n.point(e,a),i||(r.point(e,a),i)||(o.point(e,a),i)}function f(){return t=e=null,s}return s.invert=function(t){var e=a.scale(),n=a.translate(),r=(t[0]-n[0])/e,o=(t[1]-n[1])/e;return(o>=.12&&o<.234&&r>=-.425&&r<-.214?l:o>=.166&&o<.234&&r>=-.214&&r<-.115?c:a).invert(t)},s.stream=function(n){return t&&e===n?t:(r=[a.stream(e=n),l.stream(n),c.stream(n)],o=r.length,t={point:function(t,e){for(var n=-1;++n<o;)r[n].point(t,e)},sphere:function(){for(var t=-1;++t<o;)r[t].sphere()},lineStart:function(){for(var t=-1;++t<o;)r[t].lineStart()},lineEnd:function(){for(var t=-1;++t<o;)r[t].lineEnd()},polygonStart:function(){for(var t=-1;++t<o;)r[t].polygonStart()},polygonEnd:function(){for(var t=-1;++t<o;)r[t].polygonEnd()}});var r,o},s.precision=function(t){return arguments.length?(a.precision(t),l.precision(t),c.precision(t),f()):a.precision()},s.scale=function(t){return arguments.length?(a.scale(t),l.scale(.35*t),c.scale(t),s.translate(a.translate())):a.scale()},s.translate=function(t){if(!arguments.length)return a.translate();var e=a.scale(),i=+t[0],s=+t[1];return n=a.translate(t).clipExtent([[i-.455*e,s-.238*e],[i+.455*e,s+.238*e]]).stream(u),r=l.translate([i-.307*e,s+.201*e]).clipExtent([[i-.425*e+1e-6,s+.12*e+1e-6],[i-.214*e-1e-6,s+.234*e-1e-6]]).stream(u),o=c.translate([i-.205*e,s+.212*e]).clipExtent([[i-.214*e+1e-6,s+.166*e+1e-6],[i-.115*e-1e-6,s+.234*e-1e-6]]).stream(u),f()},s.fitExtent=function(t,e){return ld(s,t,e)},s.fitSize=function(t,e){return cd(s,t,e)},s.fitWidth=function(t,e){return ud(s,t,e)},s.fitHeight=function(t,e){return sd(s,t,e)},s.scale(1070)};function _d(t){return function(e,n){var r=xc(e),o=xc(n),i=t(r*o);return[i*o*Sc(e),i*Sc(n)]}}function Ed(t){return function(e,n){var r=Tc(e*e+n*n),o=t(r),i=Sc(o),a=xc(o);return[yc(e*i,r*a),Pc(r&&n*i/r)]}}var Sd=_d((function(t){return Tc(2/(1+t))}));Sd.invert=Ed((function(t){return 2*Pc(t/2)}));var Md=function(){return gd(Sd).scale(124.75).clipAngle(179.999)},Td=_d((function(t){return(t=Nc(t))&&t/Sc(t)}));Td.invert=Ed((function(t){return t}));var Cd=function(){return gd(Td).scale(79.4188).clipAngle(179.999)};function Nd(t,e){return[t,_c(Cc((dc+e)/2))]}Nd.invert=function(t,e){return[t,2*vc(kc(e))-dc]};var Pd=function(){return Ad(Nd).scale(961/mc)};function Ad(t){var e,n,r,o=gd(t),i=o.center,a=o.scale,l=o.translate,c=o.clipExtent,u=null;function s(){var i=fc*a(),l=o(us(o.rotate()).invert([0,0]));return c(null==u?[[l[0]-i,l[1]-i],[l[0]+i,l[1]+i]]:t===Nd?[[Math.max(l[0]-i,u),e],[Math.min(l[0]+i,n),r]]:[[u,Math.max(l[1]-i,e)],[n,Math.min(l[1]+i,r)]])}return o.scale=function(t){return arguments.length?(a(t),s()):a()},o.translate=function(t){return arguments.length?(l(t),s()):l()},o.center=function(t){return arguments.length?(i(t),s()):i()},o.clipExtent=function(t){return arguments.length?(null==t?u=e=n=r=null:(u=+t[0][0],e=+t[0][1],n=+t[1][0],r=+t[1][1]),s()):null==u?null:[[u,e],[n,r]]},s()}function Od(t){return Cc((dc+t)/2)}function zd(t,e){var n=xc(t),r=t===e?Sc(t):_c(n/xc(e))/_c(Od(e)/Od(t)),o=n*Ec(Od(t),r)/r;if(!r)return Nd;function i(t,e){o>0?e<1e-6-dc&&(e=1e-6-dc):e>dc-1e-6&&(e=dc-1e-6);var n=o/Ec(Od(e),r);return[n*Sc(r*t),o-n*xc(r*t)]}return i.invert=function(t,e){var n=o-e,i=Mc(r)*Tc(t*t+n*n);return[yc(t,bc(n))/r*Mc(n),2*vc(Ec(o/i,1/r))-dc]},i}var jd=function(){return vd(zd).scale(109.5).parallels([30,30])};function Rd(t,e){return[t,e]}Rd.invert=Rd;var Dd=function(){return gd(Rd).scale(152.63)};function Ld(t,e){var n=xc(t),r=t===e?Sc(t):(n-xc(e))/(e-t),o=n/r+t;if(bc(r)<1e-6)return Rd;function i(t,e){var n=o-e,i=r*t;return[n*Sc(i),o-n*xc(i)]}return i.invert=function(t,e){var n=o-e;return[yc(t,bc(n))/r*Mc(n),o-Mc(r)*Tc(t*t+n*n)]},i}var Id=function(){return vd(Ld).scale(131.154).center([0,13.9389])},Ud=1.340264,Fd=-.081106,Bd=893e-6,qd=.003796,Hd=Tc(3)/2;function Wd(t,e){var n=Pc(Hd*Sc(e)),r=n*n,o=r*r*r;return[t*xc(n)/(Hd*(Ud+3*Fd*r+o*(7*Bd+9*qd*r))),n*(Ud+Fd*r+o*(Bd+qd*r))]}Wd.invert=function(t,e){for(var n,r=e,o=r*r,i=o*o*o,a=0;a<12&&(i=(o=(r-=n=(r*(Ud+Fd*o+i*(Bd+qd*o))-e)/(Ud+3*Fd*o+i*(7*Bd+9*qd*o)))*r)*o*o,!(bc(n)<1e-12));++a);return[Hd*t*(Ud+3*Fd*o+i*(7*Bd+9*qd*o))/xc(r),Pc(Sc(r)/Hd)]};var $d=function(){return gd(Wd).scale(177.158)};function Vd(t,e){var n=xc(e),r=xc(t)*n;return[n*Sc(t)/r,Sc(e)/r]}Vd.invert=Ed(vc);var Yd=function(){return gd(Vd).scale(144.049).clipAngle(60)};function Gd(t,e,n,r){return 1===t&&1===e&&0===n&&0===r?of:od({point:function(o,i){this.stream.point(o*t+n,i*e+r)}})}var Qd=function(){var t,e,n,r,o,i,a=1,l=0,c=0,u=1,s=1,f=of,d=null,p=of;function m(){return r=o=null,i}return i={stream:function(t){return r&&o===t?r:r=f(p(o=t))},postclip:function(r){return arguments.length?(p=r,d=t=e=n=null,m()):p},clipExtent:function(r){return arguments.length?(p=null==r?(d=t=e=n=null,of):Ms(d=+r[0][0],t=+r[0][1],e=+r[1][0],n=+r[1][1]),m()):null==d?null:[[d,t],[e,n]]},scale:function(t){return arguments.length?(f=Gd((a=+t)*u,a*s,l,c),m()):a},translate:function(t){return arguments.length?(f=Gd(a*u,a*s,l=+t[0],c=+t[1]),m()):[l,c]},reflectX:function(t){return arguments.length?(f=Gd(a*(u=t?-1:1),a*s,l,c),m()):u<0},reflectY:function(t){return arguments.length?(f=Gd(a*u,a*(s=t?-1:1),l,c),m()):s<0},fitExtent:function(t,e){return ld(i,t,e)},fitSize:function(t,e){return cd(i,t,e)},fitWidth:function(t,e){return ud(i,t,e)},fitHeight:function(t,e){return sd(i,t,e)}}};function Xd(t,e){var n=e*e,r=n*n;return[t*(.8707-.131979*n+r*(r*(.003971*n-.001529*r)-.013791)),e*(1.007226+n*(.015085+r*(.028874*n-.044475-.005916*r)))]}Xd.invert=function(t,e){var n,r=e,o=25;do{var i=r*r,a=i*i;r-=n=(r*(1.007226+i*(.015085+a*(.028874*i-.044475-.005916*a)))-e)/(1.007226+i*(.045255+a*(.259866*i-.311325-.005916*11*a)))}while(bc(n)>1e-6&&--o>0);return[t/(.8707+(i=r*r)*(i*(i*i*i*(.003971-.001529*i)-.013791)-.131979)),r]};var Kd=function(){return gd(Xd).scale(175.295)};function Jd(t,e){return[xc(e)*Sc(t),Sc(e)]}Jd.invert=Ed(Pc);var Zd=function(){return gd(Jd).scale(249.5).clipAngle(90+1e-6)};function tp(t,e){var n=xc(e),r=1+xc(t)*n;return[n*Sc(t)/r,Sc(e)/r]}tp.invert=Ed((function(t){return 2*vc(t)}));var ep=function(){return gd(tp).scale(250).clipAngle(142)};function np(t,e){return[_c(Cc((dc+e)/2)),-t]}np.invert=function(t,e){return[-e,2*vc(kc(t))-dc]};var rp=function(){var t=Ad(np),e=t.center,n=t.rotate;return t.center=function(t){return arguments.length?e([-t[1],t[0]]):[(t=e())[1],-t[0]]},t.rotate=function(t){return arguments.length?n([t[0],t[1],t.length>2?t[2]+90:90]):[(t=n())[0],t[1],t[2]-90]},n([0,0,90]).scale(159.155)};function op(t,e){return t.parent===e.parent?1:2}function ip(t,e){return t+e.x}function ap(t,e){return Math.max(t,e.y)}var lp=function(){var t=op,e=1,n=1,r=!1;function o(o){var i,a=0;o.eachAfter((function(e){var n=e.children;n?(e.x=function(t){return t.reduce(ip,0)/t.length}(n),e.y=function(t){return 1+t.reduce(ap,0)}(n)):(e.x=i?a+=t(e,i):0,e.y=0,i=e)}));var l=function(t){for(var e;e=t.children;)t=e[0];return t}(o),c=function(t){for(var e;e=t.children;)t=e[e.length-1];return t}(o),u=l.x-t(l,c)/2,s=c.x+t(c,l)/2;return o.eachAfter(r?function(t){t.x=(t.x-o.x)*e,t.y=(o.y-t.y)*n}:function(t){t.x=(t.x-u)/(s-u)*e,t.y=(1-(o.y?t.y/o.y:1))*n})}return o.separation=function(e){return arguments.length?(t=e,o):t},o.size=function(t){return arguments.length?(r=!1,e=+t[0],n=+t[1],o):r?null:[e,n]},o.nodeSize=function(t){return arguments.length?(r=!0,e=+t[0],n=+t[1],o):r?[e,n]:null},o};function cp(t){var e=0,n=t.children,r=n&&n.length;if(r)for(;--r>=0;)e+=n[r].value;else e=1;t.value=e}function up(t,e){var n,r,o,i,a,l=new pp(t),c=+t.value&&(l.value=t.value),u=[l];for(null==e&&(e=sp);n=u.pop();)if(c&&(n.value=+n.data.value),(o=e(n.data))&&(a=o.length))for(n.children=new Array(a),i=a-1;i>=0;--i)u.push(r=n.children[i]=new pp(o[i])),r.parent=n,r.depth=n.depth+1;return l.eachBefore(dp)}function sp(t){return t.children}function fp(t){t.data=t.data.data}function dp(t){var e=0;do{t.height=e}while((t=t.parent)&&t.height<++e)}function pp(t){this.data=t,this.depth=this.height=0,this.parent=null}pp.prototype=up.prototype={constructor:pp,count:function(){return this.eachAfter(cp)},each:function(t){var e,n,r,o,i=this,a=[i];do{for(e=a.reverse(),a=[];i=e.pop();)if(t(i),n=i.children)for(r=0,o=n.length;r<o;++r)a.push(n[r])}while(a.length);return this},eachAfter:function(t){for(var e,n,r,o=this,i=[o],a=[];o=i.pop();)if(a.push(o),e=o.children)for(n=0,r=e.length;n<r;++n)i.push(e[n]);for(;o=a.pop();)t(o);return this},eachBefore:function(t){for(var e,n,r=this,o=[r];r=o.pop();)if(t(r),e=r.children)for(n=e.length-1;n>=0;--n)o.push(e[n]);return this},sum:function(t){return this.eachAfter((function(e){for(var n=+t(e.data)||0,r=e.children,o=r&&r.length;--o>=0;)n+=r[o].value;e.value=n}))},sort:function(t){return this.eachBefore((function(e){e.children&&e.children.sort(t)}))},path:function(t){for(var e=this,n=function(t,e){if(t===e)return t;var n=t.ancestors(),r=e.ancestors(),o=null;t=n.pop(),e=r.pop();for(;t===e;)o=t,t=n.pop(),e=r.pop();return o}(e,t),r=[e];e!==n;)e=e.parent,r.push(e);for(var o=r.length;t!==n;)r.splice(o,0,t),t=t.parent;return r},ancestors:function(){for(var t=this,e=[t];t=t.parent;)e.push(t);return e},descendants:function(){var t=[];return this.each((function(e){t.push(e)})),t},leaves:function(){var t=[];return this.eachBefore((function(e){e.children||t.push(e)})),t},links:function(){var t=this,e=[];return t.each((function(n){n!==t&&e.push({source:n.parent,target:n})})),e},copy:function(){return up(this).eachBefore(fp)}};var mp=Array.prototype.slice;var hp=function(t){for(var e,n,r=0,o=(t=function(t){for(var e,n,r=t.length;r;)n=Math.random()*r--|0,e=t[r],t[r]=t[n],t[n]=e;return t}(mp.call(t))).length,i=[];r<o;)e=t[r],n&&vp(n,e)?++r:(n=xp(i=gp(i,e)),r=0);return n};function gp(t,e){var n,r;if(yp(e,t))return[e];for(n=0;n<t.length;++n)if(bp(e,t[n])&&yp(wp(t[n],e),t))return[t[n],e];for(n=0;n<t.length-1;++n)for(r=n+1;r<t.length;++r)if(bp(wp(t[n],t[r]),e)&&bp(wp(t[n],e),t[r])&&bp(wp(t[r],e),t[n])&&yp(kp(t[n],t[r],e),t))return[t[n],t[r],e];throw new Error}function bp(t,e){var n=t.r-e.r,r=e.x-t.x,o=e.y-t.y;return n<0||n*n<r*r+o*o}function vp(t,e){var n=t.r-e.r+1e-6,r=e.x-t.x,o=e.y-t.y;return n>0&&n*n>r*r+o*o}function yp(t,e){for(var n=0;n<e.length;++n)if(!vp(t,e[n]))return!1;return!0}function xp(t){switch(t.length){case 1:return{x:(e=t[0]).x,y:e.y,r:e.r};case 2:return wp(t[0],t[1]);case 3:return kp(t[0],t[1],t[2])}var e}function wp(t,e){var n=t.x,r=t.y,o=t.r,i=e.x,a=e.y,l=e.r,c=i-n,u=a-r,s=l-o,f=Math.sqrt(c*c+u*u);return{x:(n+i+c/f*s)/2,y:(r+a+u/f*s)/2,r:(f+o+l)/2}}function kp(t,e,n){var r=t.x,o=t.y,i=t.r,a=e.x,l=e.y,c=e.r,u=n.x,s=n.y,f=n.r,d=r-a,p=r-u,m=o-l,h=o-s,g=c-i,b=f-i,v=r*r+o*o-i*i,y=v-a*a-l*l+c*c,x=v-u*u-s*s+f*f,w=p*m-d*h,k=(m*x-h*y)/(2*w)-r,_=(h*g-m*b)/w,E=(p*y-d*x)/(2*w)-o,S=(d*b-p*g)/w,M=_*_+S*S-1,T=2*(i+k*_+E*S),C=k*k+E*E-i*i,N=-(M?(T+Math.sqrt(T*T-4*M*C))/(2*M):C/T);return{x:r+k+_*N,y:o+E+S*N,r:N}}function _p(t,e,n){var r,o,i,a,l=t.x-e.x,c=t.y-e.y,u=l*l+c*c;u?(o=e.r+n.r,o*=o,a=t.r+n.r,o>(a*=a)?(r=(u+a-o)/(2*u),i=Math.sqrt(Math.max(0,a/u-r*r)),n.x=t.x-r*l-i*c,n.y=t.y-r*c+i*l):(r=(u+o-a)/(2*u),i=Math.sqrt(Math.max(0,o/u-r*r)),n.x=e.x+r*l-i*c,n.y=e.y+r*c+i*l)):(n.x=e.x+n.r,n.y=e.y)}function Ep(t,e){var n=t.r+e.r-1e-6,r=e.x-t.x,o=e.y-t.y;return n>0&&n*n>r*r+o*o}function Sp(t){var e=t._,n=t.next._,r=e.r+n.r,o=(e.x*n.r+n.x*e.r)/r,i=(e.y*n.r+n.y*e.r)/r;return o*o+i*i}function Mp(t){this._=t,this.next=null,this.previous=null}function Tp(t){if(!(o=t.length))return 0;var e,n,r,o,i,a,l,c,u,s,f;if((e=t[0]).x=0,e.y=0,!(o>1))return e.r;if(n=t[1],e.x=-n.r,n.x=e.r,n.y=0,!(o>2))return e.r+n.r;_p(n,e,r=t[2]),e=new Mp(e),n=new Mp(n),r=new Mp(r),e.next=r.previous=n,n.next=e.previous=r,r.next=n.previous=e;t:for(l=3;l<o;++l){_p(e._,n._,r=t[l]),r=new Mp(r),c=n.next,u=e.previous,s=n._.r,f=e._.r;do{if(s<=f){if(Ep(c._,r._)){n=c,e.next=n,n.previous=e,--l;continue t}s+=c._.r,c=c.next}else{if(Ep(u._,r._)){(e=u).next=n,n.previous=e,--l;continue t}f+=u._.r,u=u.previous}}while(c!==u.next);for(r.previous=e,r.next=n,e.next=n.previous=n=r,i=Sp(e);(r=r.next)!==n;)(a=Sp(r))<i&&(e=r,i=a);n=e.next}for(e=[n._],r=n;(r=r.next)!==n;)e.push(r._);for(r=hp(e),l=0;l<o;++l)(e=t[l]).x-=r.x,e.y-=r.y;return r.r}var Cp=function(t){return Tp(t),t};function Np(t){return null==t?null:Pp(t)}function Pp(t){if("function"!=typeof t)throw new Error;return t}function Ap(){return 0}var Op=function(t){return function(){return t}};function zp(t){return Math.sqrt(t.value)}var jp=function(){var t=null,e=1,n=1,r=Ap;function o(o){return o.x=e/2,o.y=n/2,t?o.eachBefore(Rp(t)).eachAfter(Dp(r,.5)).eachBefore(Lp(1)):o.eachBefore(Rp(zp)).eachAfter(Dp(Ap,1)).eachAfter(Dp(r,o.r/Math.min(e,n))).eachBefore(Lp(Math.min(e,n)/(2*o.r))),o}return o.radius=function(e){return arguments.length?(t=Np(e),o):t},o.size=function(t){return arguments.length?(e=+t[0],n=+t[1],o):[e,n]},o.padding=function(t){return arguments.length?(r="function"==typeof t?t:Op(+t),o):r},o};function Rp(t){return function(e){e.children||(e.r=Math.max(0,+t(e)||0))}}function Dp(t,e){return function(n){if(r=n.children){var r,o,i,a=r.length,l=t(n)*e||0;if(l)for(o=0;o<a;++o)r[o].r+=l;if(i=Tp(r),l)for(o=0;o<a;++o)r[o].r-=l;n.r=i+l}}}function Lp(t){return function(e){var n=e.parent;e.r*=t,n&&(e.x=n.x+t*e.x,e.y=n.y+t*e.y)}}var Ip=function(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)},Up=function(t,e,n,r,o){for(var i,a=t.children,l=-1,c=a.length,u=t.value&&(r-e)/t.value;++l<c;)(i=a[l]).y0=n,i.y1=o,i.x0=e,i.x1=e+=i.value*u},Fp=function(){var t=1,e=1,n=0,r=!1;function o(o){var i=o.height+1;return o.x0=o.y0=n,o.x1=t,o.y1=e/i,o.eachBefore(function(t,e){return function(r){r.children&&Up(r,r.x0,t*(r.depth+1)/e,r.x1,t*(r.depth+2)/e);var o=r.x0,i=r.y0,a=r.x1-n,l=r.y1-n;a<o&&(o=a=(o+a)/2),l<i&&(i=l=(i+l)/2),r.x0=o,r.y0=i,r.x1=a,r.y1=l}}(e,i)),r&&o.eachBefore(Ip),o}return o.round=function(t){return arguments.length?(r=!!t,o):r},o.size=function(n){return arguments.length?(t=+n[0],e=+n[1],o):[t,e]},o.padding=function(t){return arguments.length?(n=+t,o):n},o},Bp={depth:-1},qp={};function Hp(t){return t.id}function Wp(t){return t.parentId}var $p=function(){var t=Hp,e=Wp;function n(n){var r,o,i,a,l,c,u,s=n.length,f=new Array(s),d={};for(o=0;o<s;++o)r=n[o],l=f[o]=new pp(r),null!=(c=t(r,o,n))&&(c+="")&&(d[u="$"+(l.id=c)]=u in d?qp:l);for(o=0;o<s;++o)if(l=f[o],null!=(c=e(n[o],o,n))&&(c+="")){if(!(a=d["$"+c]))throw new Error("missing: "+c);if(a===qp)throw new Error("ambiguous: "+c);a.children?a.children.push(l):a.children=[l],l.parent=a}else{if(i)throw new Error("multiple roots");i=l}if(!i)throw new Error("no root");if(i.parent=Bp,i.eachBefore((function(t){t.depth=t.parent.depth+1,--s})).eachBefore(dp),i.parent=null,s>0)throw new Error("cycle");return i}return n.id=function(e){return arguments.length?(t=Pp(e),n):t},n.parentId=function(t){return arguments.length?(e=Pp(t),n):e},n};function Vp(t,e){return t.parent===e.parent?1:2}function Yp(t){var e=t.children;return e?e[0]:t.t}function Gp(t){var e=t.children;return e?e[e.length-1]:t.t}function Qp(t,e,n){var r=n/(e.i-t.i);e.c-=r,e.s+=n,t.c+=r,e.z+=n,e.m+=n}function Xp(t,e,n){return t.a.parent===e.parent?t.a:n}function Kp(t,e){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=e}Kp.prototype=Object.create(pp.prototype);var Jp=function(){var t=Vp,e=1,n=1,r=null;function o(o){var c=function(t){for(var e,n,r,o,i,a=new Kp(t,0),l=[a];e=l.pop();)if(r=e._.children)for(e.children=new Array(i=r.length),o=i-1;o>=0;--o)l.push(n=e.children[o]=new Kp(r[o],o)),n.parent=e;return(a.parent=new Kp(null,0)).children=[a],a}(o);if(c.eachAfter(i),c.parent.m=-c.z,c.eachBefore(a),r)o.eachBefore(l);else{var u=o,s=o,f=o;o.eachBefore((function(t){t.x<u.x&&(u=t),t.x>s.x&&(s=t),t.depth>f.depth&&(f=t)}));var d=u===s?1:t(u,s)/2,p=d-u.x,m=e/(s.x+d+p),h=n/(f.depth||1);o.eachBefore((function(t){t.x=(t.x+p)*m,t.y=t.depth*h}))}return o}function i(e){var n=e.children,r=e.parent.children,o=e.i?r[e.i-1]:null;if(n){!function(t){for(var e,n=0,r=0,o=t.children,i=o.length;--i>=0;)(e=o[i]).z+=n,e.m+=n,n+=e.s+(r+=e.c)}(e);var i=(n[0].z+n[n.length-1].z)/2;o?(e.z=o.z+t(e._,o._),e.m=e.z-i):e.z=i}else o&&(e.z=o.z+t(e._,o._));e.parent.A=function(e,n,r){if(n){for(var o,i=e,a=e,l=n,c=i.parent.children[0],u=i.m,s=a.m,f=l.m,d=c.m;l=Gp(l),i=Yp(i),l&&i;)c=Yp(c),(a=Gp(a)).a=e,(o=l.z+f-i.z-u+t(l._,i._))>0&&(Qp(Xp(l,e,r),e,o),u+=o,s+=o),f+=l.m,u+=i.m,d+=c.m,s+=a.m;l&&!Gp(a)&&(a.t=l,a.m+=f-s),i&&!Yp(c)&&(c.t=i,c.m+=u-d,r=e)}return r}(e,o,e.parent.A||r[0])}function a(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function l(t){t.x*=e,t.y=t.depth*n}return o.separation=function(e){return arguments.length?(t=e,o):t},o.size=function(t){return arguments.length?(r=!1,e=+t[0],n=+t[1],o):r?null:[e,n]},o.nodeSize=function(t){return arguments.length?(r=!0,e=+t[0],n=+t[1],o):r?[e,n]:null},o},Zp=function(t,e,n,r,o){for(var i,a=t.children,l=-1,c=a.length,u=t.value&&(o-n)/t.value;++l<c;)(i=a[l]).x0=e,i.x1=r,i.y0=n,i.y1=n+=i.value*u},tm=(1+Math.sqrt(5))/2;function em(t,e,n,r,o,i){for(var a,l,c,u,s,f,d,p,m,h,g,b=[],v=e.children,y=0,x=0,w=v.length,k=e.value;y<w;){c=o-n,u=i-r;do{s=v[x++].value}while(!s&&x<w);for(f=d=s,g=s*s*(h=Math.max(u/c,c/u)/(k*t)),m=Math.max(d/g,g/f);x<w;++x){if(s+=l=v[x].value,l<f&&(f=l),l>d&&(d=l),g=s*s*h,(p=Math.max(d/g,g/f))>m){s-=l;break}m=p}b.push(a={value:s,dice:c<u,children:v.slice(y,x)}),a.dice?Up(a,n,r,o,k?r+=u*s/k:i):Zp(a,n,r,k?n+=c*s/k:o,i),k-=s,y=x}return b}var nm=function t(e){function n(t,n,r,o,i){em(e,t,n,r,o,i)}return n.ratio=function(e){return t((e=+e)>1?e:1)},n}(tm),rm=function(){var t=nm,e=!1,n=1,r=1,o=[0],i=Ap,a=Ap,l=Ap,c=Ap,u=Ap;function s(t){return t.x0=t.y0=0,t.x1=n,t.y1=r,t.eachBefore(f),o=[0],e&&t.eachBefore(Ip),t}function f(e){var n=o[e.depth],r=e.x0+n,s=e.y0+n,f=e.x1-n,d=e.y1-n;f<r&&(r=f=(r+f)/2),d<s&&(s=d=(s+d)/2),e.x0=r,e.y0=s,e.x1=f,e.y1=d,e.children&&(n=o[e.depth+1]=i(e)/2,r+=u(e)-n,s+=a(e)-n,(f-=l(e)-n)<r&&(r=f=(r+f)/2),(d-=c(e)-n)<s&&(s=d=(s+d)/2),t(e,r,s,f,d))}return s.round=function(t){return arguments.length?(e=!!t,s):e},s.size=function(t){return arguments.length?(n=+t[0],r=+t[1],s):[n,r]},s.tile=function(e){return arguments.length?(t=Pp(e),s):t},s.padding=function(t){return arguments.length?s.paddingInner(t).paddingOuter(t):s.paddingInner()},s.paddingInner=function(t){return arguments.length?(i="function"==typeof t?t:Op(+t),s):i},s.paddingOuter=function(t){return arguments.length?s.paddingTop(t).paddingRight(t).paddingBottom(t).paddingLeft(t):s.paddingTop()},s.paddingTop=function(t){return arguments.length?(a="function"==typeof t?t:Op(+t),s):a},s.paddingRight=function(t){return arguments.length?(l="function"==typeof t?t:Op(+t),s):l},s.paddingBottom=function(t){return arguments.length?(c="function"==typeof t?t:Op(+t),s):c},s.paddingLeft=function(t){return arguments.length?(u="function"==typeof t?t:Op(+t),s):u},s},om=function(t,e,n,r,o){var i,a,l=t.children,c=l.length,u=new Array(c+1);for(u[0]=a=i=0;i<c;++i)u[i+1]=a+=l[i].value;!function t(e,n,r,o,i,a,c){if(e>=n-1){var s=l[e];return s.x0=o,s.y0=i,s.x1=a,void(s.y1=c)}var f=u[e],d=r/2+f,p=e+1,m=n-1;for(;p<m;){var h=p+m>>>1;u[h]<d?p=h+1:m=h}d-u[p-1]<u[p]-d&&e+1<p&&--p;var g=u[p]-f,b=r-g;if(a-o>c-i){var v=(o*b+a*g)/r;t(e,p,g,o,i,v,c),t(p,n,b,v,i,a,c)}else{var y=(i*b+c*g)/r;t(e,p,g,o,i,a,y),t(p,n,b,o,y,a,c)}}(0,c,t.value,e,n,r,o)},im=function(t,e,n,r,o){(1&t.depth?Zp:Up)(t,e,n,r,o)},am=function t(e){function n(t,n,r,o,i){if((a=t._squarify)&&a.ratio===e)for(var a,l,c,u,s,f=-1,d=a.length,p=t.value;++f<d;){for(c=(l=a[f]).children,u=l.value=0,s=c.length;u<s;++u)l.value+=c[u].value;l.dice?Up(l,n,r,o,r+=(i-r)*l.value/p):Zp(l,n,r,n+=(o-n)*l.value/p,i),p-=l.value}else t._squarify=a=em(e,t,n,r,o,i),a.ratio=e}return n.ratio=function(e){return t((e=+e)>1?e:1)},n}(tm),lm=function(t){var e=t.length;return function(n){return t[Math.max(0,Math.min(e-1,Math.floor(n*e)))]}},cm=function(t,e){var n=un(+t,+e);return function(t){var e=n(t);return e-360*Math.floor(e/360)}},um=function(t,e){return t=+t,e=+e,function(n){return Math.round(t*(1-n)+e*n)}},sm=Math.SQRT2;function fm(t){return((t=Math.exp(t))+1/t)/2}var dm=function(t,e){var n,r,o=t[0],i=t[1],a=t[2],l=e[0],c=e[1],u=e[2],s=l-o,f=c-i,d=s*s+f*f;if(d<1e-12)r=Math.log(u/a)/sm,n=function(t){return[o+t*s,i+t*f,a*Math.exp(sm*t*r)]};else{var p=Math.sqrt(d),m=(u*u-a*a+4*d)/(2*a*2*p),h=(u*u-a*a-4*d)/(2*u*2*p),g=Math.log(Math.sqrt(m*m+1)-m),b=Math.log(Math.sqrt(h*h+1)-h);r=(b-g)/sm,n=function(t){var e,n=t*r,l=fm(g),c=a/(2*p)*(l*(e=sm*n+g,((e=Math.exp(2*e))-1)/(e+1))-function(t){return((t=Math.exp(t))-1/t)/2}(g));return[o+c*s,i+c*f,a*l/fm(sm*n+g)]}}return n.duration=1e3*r,n};function pm(t){return function(e,n){var r=t((e=tn(e)).h,(n=tn(n)).h),o=fn(e.s,n.s),i=fn(e.l,n.l),a=fn(e.opacity,n.opacity);return function(t){return e.h=r(t),e.s=o(t),e.l=i(t),e.opacity=a(t),e+""}}}var mm=pm(un),hm=pm(fn);function gm(t,e){var n=fn((t=hi(t)).l,(e=hi(e)).l),r=fn(t.a,e.a),o=fn(t.b,e.b),i=fn(t.opacity,e.opacity);return function(e){return t.l=n(e),t.a=r(e),t.b=o(e),t.opacity=i(e),t+""}}function bm(t){return function(e,n){var r=t((e=_i(e)).h,(n=_i(n)).h),o=fn(e.c,n.c),i=fn(e.l,n.l),a=fn(e.opacity,n.opacity);return function(t){return e.h=r(t),e.c=o(t),e.l=i(t),e.opacity=a(t),e+""}}}var vm=bm(un),ym=bm(fn);function xm(t){return function e(n){function r(e,r){var o=t((e=Ai(e)).h,(r=Ai(r)).h),i=fn(e.s,r.s),a=fn(e.l,r.l),l=fn(e.opacity,r.opacity);return function(t){return e.h=o(t),e.s=i(t),e.l=a(Math.pow(t,n)),e.opacity=l(t),e+""}}return n=+n,r.gamma=e,r}(1)}var wm=xm(un),km=xm(fn);function _m(t,e){for(var n=0,r=e.length-1,o=e[0],i=new Array(r<0?0:r);n<r;)i[n]=t(o,o=e[++n]);return function(t){var e=Math.max(0,Math.min(r-1,Math.floor(t*=r)));return i[e](t-e)}}var Em=function(t,e){for(var n=new Array(e),r=0;r<e;++r)n[r]=t(r/(e-1));return n},Sm=function(t){for(var e,n=-1,r=t.length,o=t[r-1],i=0;++n<r;)e=o,o=t[n],i+=e[1]*o[0]-e[0]*o[1];return i/2},Mm=function(t){for(var e,n,r=-1,o=t.length,i=0,a=0,l=t[o-1],c=0;++r<o;)e=l,l=t[r],c+=n=e[0]*l[1]-l[0]*e[1],i+=(e[0]+l[0])*n,a+=(e[1]+l[1])*n;return[i/(c*=3),a/c]};function Tm(t,e){return t[0]-e[0]||t[1]-e[1]}function Cm(t){for(var e,n,r,o=t.length,i=[0,1],a=2,l=2;l<o;++l){for(;a>1&&(e=t[i[a-2]],n=t[i[a-1]],r=t[l],(n[0]-e[0])*(r[1]-e[1])-(n[1]-e[1])*(r[0]-e[0])<=0);)--a;i[a++]=l}return i.slice(0,a)}var Nm=function(t){if((n=t.length)<3)return null;var e,n,r=new Array(n),o=new Array(n);for(e=0;e<n;++e)r[e]=[+t[e][0],+t[e][1],e];for(r.sort(Tm),e=0;e<n;++e)o[e]=[r[e][0],-r[e][1]];var i=Cm(r),a=Cm(o),l=a[0]===i[0],c=a[a.length-1]===i[i.length-1],u=[];for(e=i.length-1;e>=0;--e)u.push(t[r[i[e]][2]]);for(e=+l;e<a.length-c;++e)u.push(t[r[a[e]][2]]);return u},Pm=function(t,e){for(var n,r,o=t.length,i=t[o-1],a=e[0],l=e[1],c=i[0],u=i[1],s=!1,f=0;f<o;++f)n=(i=t[f])[0],(r=i[1])>l!=u>l&&a<(c-n)*(l-r)/(u-r)+n&&(s=!s),c=n,u=r;return s},Am=function(t){for(var e,n,r=-1,o=t.length,i=t[o-1],a=i[0],l=i[1],c=0;++r<o;)e=a,n=l,e-=a=(i=t[r])[0],n-=l=i[1],c+=Math.sqrt(e*e+n*n);return c},Om=function(){return Math.random()},zm=function t(e){function n(t,n){return t=null==t?0:+t,n=null==n?1:+n,1===arguments.length?(n=t,t=0):n-=t,function(){return e()*n+t}}return n.source=t,n}(Om),jm=function t(e){function n(t,n){var r,o;return t=null==t?0:+t,n=null==n?1:+n,function(){var i;if(null!=r)i=r,r=null;else do{r=2*e()-1,i=2*e()-1,o=r*r+i*i}while(!o||o>1);return t+n*i*Math.sqrt(-2*Math.log(o)/o)}}return n.source=t,n}(Om),Rm=function t(e){function n(){var t=jm.source(e).apply(this,arguments);return function(){return Math.exp(t())}}return n.source=t,n}(Om),Dm=function t(e){function n(t){return function(){for(var n=0,r=0;r<t;++r)n+=e();return n}}return n.source=t,n}(Om),Lm=function t(e){function n(t){var n=Dm.source(e)(t);return function(){return n()/t}}return n.source=t,n}(Om),Im=function t(e){function n(t){return function(){return-Math.log(1-e())/t}}return n.source=t,n}(Om);function Um(t,e){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(e).domain(t)}return this}function Fm(t,e){switch(arguments.length){case 0:break;case 1:this.interpolator(t);break;default:this.interpolator(e).domain(t)}return this}var Bm=Array.prototype,qm=Bm.map,Hm=Bm.slice,Wm={name:"implicit"};function $m(){var t=Jo(),e=[],n=[],r=Wm;function o(o){var i=o+"",a=t.get(i);if(!a){if(r!==Wm)return r;t.set(i,a=e.push(o))}return n[(a-1)%n.length]}return o.domain=function(n){if(!arguments.length)return e.slice();e=[],t=Jo();for(var r,i,a=-1,l=n.length;++a<l;)t.has(i=(r=n[a])+"")||t.set(i,e.push(r));return o},o.range=function(t){return arguments.length?(n=Hm.call(t),o):n.slice()},o.unknown=function(t){return arguments.length?(r=t,o):r},o.copy=function(){return $m(e,n).unknown(r)},Um.apply(o,arguments),o}function Vm(){var t,e,n=$m().unknown(void 0),r=n.domain,o=n.range,i=[0,1],a=!1,l=0,c=0,u=.5;function s(){var n=r().length,s=i[1]<i[0],f=i[s-0],d=i[1-s];t=(d-f)/Math.max(1,n-l+2*c),a&&(t=Math.floor(t)),f+=(d-f-t*(n-l))*u,e=t*(1-l),a&&(f=Math.round(f),e=Math.round(e));var p=k(n).map((function(e){return f+t*e}));return o(s?p.reverse():p)}return delete n.unknown,n.domain=function(t){return arguments.length?(r(t),s()):r()},n.range=function(t){return arguments.length?(i=[+t[0],+t[1]],s()):i.slice()},n.rangeRound=function(t){return i=[+t[0],+t[1]],a=!0,s()},n.bandwidth=function(){return e},n.step=function(){return t},n.round=function(t){return arguments.length?(a=!!t,s()):a},n.padding=function(t){return arguments.length?(l=Math.min(1,c=+t),s()):l},n.paddingInner=function(t){return arguments.length?(l=Math.min(1,t),s()):l},n.paddingOuter=function(t){return arguments.length?(c=+t,s()):c},n.align=function(t){return arguments.length?(u=Math.max(0,Math.min(1,t)),s()):u},n.copy=function(){return Vm(r(),i).round(a).paddingInner(l).paddingOuter(c).align(u)},Um.apply(s(),arguments)}function Ym(t){var e=t.copy;return t.padding=t.paddingOuter,delete t.paddingInner,delete t.paddingOuter,t.copy=function(){return Ym(e())},t}function Gm(){return Ym(Vm.apply(null,arguments).paddingInner(1))}var Qm=function(t){return+t},Xm=[0,1];function Km(t){return t}function Jm(t,e){return(e-=t=+t)?function(n){return(n-t)/e}:(n=isNaN(e)?NaN:.5,function(){return n});var n}function Zm(t){var e,n=t[0],r=t[t.length-1];return n>r&&(e=n,n=r,r=e),function(t){return Math.max(n,Math.min(r,t))}}function th(t,e,n){var r=t[0],o=t[1],i=e[0],a=e[1];return o<r?(r=Jm(o,r),i=n(a,i)):(r=Jm(r,o),i=n(i,a)),function(t){return i(r(t))}}function eh(t,e,n){var r=Math.min(t.length,e.length)-1,o=new Array(r),i=new Array(r),a=-1;for(t[r]<t[0]&&(t=t.slice().reverse(),e=e.slice().reverse());++a<r;)o[a]=Jm(t[a],t[a+1]),i[a]=n(e[a],e[a+1]);return function(e){var n=c(t,e,1,r)-1;return i[n](o[n](e))}}function nh(t,e){return e.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}function rh(){var t,e,n,r,o,i,a=Xm,l=Xm,c=Cn,u=Km;function s(){return r=Math.min(a.length,l.length)>2?eh:th,o=i=null,f}function f(e){return isNaN(e=+e)?n:(o||(o=r(a.map(t),l,c)))(t(u(e)))}return f.invert=function(n){return u(e((i||(i=r(l,a.map(t),wn)))(n)))},f.domain=function(t){return arguments.length?(a=qm.call(t,Qm),u===Km||(u=Zm(a)),s()):a.slice()},f.range=function(t){return arguments.length?(l=Hm.call(t),s()):l.slice()},f.rangeRound=function(t){return l=Hm.call(t),c=um,s()},f.clamp=function(t){return arguments.length?(u=t?Zm(a):Km,f):u!==Km},f.interpolate=function(t){return arguments.length?(c=t,s()):c},f.unknown=function(t){return arguments.length?(n=t,f):n},function(n,r){return t=n,e=r,s()}}function oh(t,e){return rh()(t,e)}var ih=function(t,e,n,r){var o,i=C(t,e,n);switch((r=$l(null==r?",f":r)).type){case"s":var a=Math.max(Math.abs(t),Math.abs(e));return null!=r.precision||isNaN(o=ic(i,a))||(r.precision=o),Xl(r,a);case"":case"e":case"g":case"p":case"r":null!=r.precision||isNaN(o=ac(i,Math.max(Math.abs(t),Math.abs(e))))||(r.precision=o-("e"===r.type));break;case"f":case"%":null!=r.precision||isNaN(o=oc(i))||(r.precision=o-2*("%"===r.type))}return Ql(r)};function ah(t){var e=t.domain;return t.ticks=function(t){var n=e();return M(n[0],n[n.length-1],null==t?10:t)},t.tickFormat=function(t,n){var r=e();return ih(r[0],r[r.length-1],null==t?10:t,n)},t.nice=function(n){null==n&&(n=10);var r,o=e(),i=0,a=o.length-1,l=o[i],c=o[a];return c<l&&(r=l,l=c,c=r,r=i,i=a,a=r),(r=T(l,c,n))>0?r=T(l=Math.floor(l/r)*r,c=Math.ceil(c/r)*r,n):r<0&&(r=T(l=Math.ceil(l*r)/r,c=Math.floor(c*r)/r,n)),r>0?(o[i]=Math.floor(l/r)*r,o[a]=Math.ceil(c/r)*r,e(o)):r<0&&(o[i]=Math.ceil(l*r)/r,o[a]=Math.floor(c*r)/r,e(o)),t},t}function lh(){var t=oh(Km,Km);return t.copy=function(){return nh(t,lh())},Um.apply(t,arguments),ah(t)}function ch(t){var e;function n(t){return isNaN(t=+t)?e:t}return n.invert=n,n.domain=n.range=function(e){return arguments.length?(t=qm.call(e,Qm),n):t.slice()},n.unknown=function(t){return arguments.length?(e=t,n):e},n.copy=function(){return ch(t).unknown(e)},t=arguments.length?qm.call(t,Qm):[0,1],ah(n)}var uh=function(t,e){var n,r=0,o=(t=t.slice()).length-1,i=t[r],a=t[o];return a<i&&(n=r,r=o,o=n,n=i,i=a,a=n),t[r]=e.floor(i),t[o]=e.ceil(a),t};function sh(t){return Math.log(t)}function fh(t){return Math.exp(t)}function dh(t){return-Math.log(-t)}function ph(t){return-Math.exp(-t)}function mh(t){return isFinite(t)?+("1e"+t):t<0?0:t}function hh(t){return function(e){return-t(-e)}}function gh(t){var e,n,r=t(sh,fh),o=r.domain,i=10;function a(){return e=function(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(e){return Math.log(e)/t})}(i),n=function(t){return 10===t?mh:t===Math.E?Math.exp:function(e){return Math.pow(t,e)}}(i),o()[0]<0?(e=hh(e),n=hh(n),t(dh,ph)):t(sh,fh),r}return r.base=function(t){return arguments.length?(i=+t,a()):i},r.domain=function(t){return arguments.length?(o(t),a()):o()},r.ticks=function(t){var r,a=o(),l=a[0],c=a[a.length-1];(r=c<l)&&(d=l,l=c,c=d);var u,s,f,d=e(l),p=e(c),m=null==t?10:+t,h=[];if(!(i%1)&&p-d<m){if(d=Math.round(d)-1,p=Math.round(p)+1,l>0){for(;d<p;++d)for(s=1,u=n(d);s<i;++s)if(!((f=u*s)<l)){if(f>c)break;h.push(f)}}else for(;d<p;++d)for(s=i-1,u=n(d);s>=1;--s)if(!((f=u*s)<l)){if(f>c)break;h.push(f)}}else h=M(d,p,Math.min(p-d,m)).map(n);return r?h.reverse():h},r.tickFormat=function(t,o){if(null==o&&(o=10===i?".0e":","),"function"!=typeof o&&(o=Ql(o)),t===1/0)return o;null==t&&(t=10);var a=Math.max(1,i*t/r.ticks().length);return function(t){var r=t/n(Math.round(e(t)));return r*i<i-.5&&(r*=i),r<=a?o(t):""}},r.nice=function(){return o(uh(o(),{floor:function(t){return n(Math.floor(e(t)))},ceil:function(t){return n(Math.ceil(e(t)))}}))},r}function bh(){var t=gh(rh()).domain([1,10]);return t.copy=function(){return nh(t,bh()).base(t.base())},Um.apply(t,arguments),t}function vh(t){return function(e){return Math.sign(e)*Math.log1p(Math.abs(e/t))}}function yh(t){return function(e){return Math.sign(e)*Math.expm1(Math.abs(e))*t}}function xh(t){var e=1,n=t(vh(e),yh(e));return n.constant=function(n){return arguments.length?t(vh(e=+n),yh(e)):e},ah(n)}function wh(){var t=xh(rh());return t.copy=function(){return nh(t,wh()).constant(t.constant())},Um.apply(t,arguments)}function kh(t){return function(e){return e<0?-Math.pow(-e,t):Math.pow(e,t)}}function _h(t){return t<0?-Math.sqrt(-t):Math.sqrt(t)}function Eh(t){return t<0?-t*t:t*t}function Sh(t){var e=t(Km,Km),n=1;function r(){return 1===n?t(Km,Km):.5===n?t(_h,Eh):t(kh(n),kh(1/n))}return e.exponent=function(t){return arguments.length?(n=+t,r()):n},ah(e)}function Mh(){var t=Sh(rh());return t.copy=function(){return nh(t,Mh()).exponent(t.exponent())},Um.apply(t,arguments),t}function Th(){return Mh.apply(null,arguments).exponent(.5)}function Ch(){var t,e=[],n=[],o=[];function i(){var t=0,r=Math.max(1,n.length);for(o=new Array(r-1);++t<r;)o[t-1]=A(e,t/r);return a}function a(e){return isNaN(e=+e)?t:n[c(o,e)]}return a.invertExtent=function(t){var r=n.indexOf(t);return r<0?[NaN,NaN]:[r>0?o[r-1]:e[0],r<o.length?o[r]:e[e.length-1]]},a.domain=function(t){if(!arguments.length)return e.slice();e=[];for(var n,o=0,a=t.length;o<a;++o)null==(n=t[o])||isNaN(n=+n)||e.push(n);return e.sort(r),i()},a.range=function(t){return arguments.length?(n=Hm.call(t),i()):n.slice()},a.unknown=function(e){return arguments.length?(t=e,a):t},a.quantiles=function(){return o.slice()},a.copy=function(){return Ch().domain(e).range(n).unknown(t)},Um.apply(a,arguments)}function Nh(){var t,e=0,n=1,r=1,o=[.5],i=[0,1];function a(e){return e<=e?i[c(o,e,0,r)]:t}function l(){var t=-1;for(o=new Array(r);++t<r;)o[t]=((t+1)*n-(t-r)*e)/(r+1);return a}return a.domain=function(t){return arguments.length?(e=+t[0],n=+t[1],l()):[e,n]},a.range=function(t){return arguments.length?(r=(i=Hm.call(t)).length-1,l()):i.slice()},a.invertExtent=function(t){var a=i.indexOf(t);return a<0?[NaN,NaN]:a<1?[e,o[0]]:a>=r?[o[r-1],n]:[o[a-1],o[a]]},a.unknown=function(e){return arguments.length?(t=e,a):a},a.thresholds=function(){return o.slice()},a.copy=function(){return Nh().domain([e,n]).range(i).unknown(t)},Um.apply(ah(a),arguments)}function Ph(){var t,e=[.5],n=[0,1],r=1;function o(o){return o<=o?n[c(e,o,0,r)]:t}return o.domain=function(t){return arguments.length?(e=Hm.call(t),r=Math.min(e.length,n.length-1),o):e.slice()},o.range=function(t){return arguments.length?(n=Hm.call(t),r=Math.min(e.length,n.length-1),o):n.slice()},o.invertExtent=function(t){var r=n.indexOf(t);return[e[r-1],e[r]]},o.unknown=function(e){return arguments.length?(t=e,o):t},o.copy=function(){return Ph().domain(e).range(n).unknown(t)},Um.apply(o,arguments)}var Ah=new Date,Oh=new Date;function zh(t,e,n,r){function o(e){return t(e=0===arguments.length?new Date:new Date(+e)),e}return o.floor=function(e){return t(e=new Date(+e)),e},o.ceil=function(n){return t(n=new Date(n-1)),e(n,1),t(n),n},o.round=function(t){var e=o(t),n=o.ceil(t);return t-e<n-t?e:n},o.offset=function(t,n){return e(t=new Date(+t),null==n?1:Math.floor(n)),t},o.range=function(n,r,i){var a,l=[];if(n=o.ceil(n),i=null==i?1:Math.floor(i),!(n<r&&i>0))return l;do{l.push(a=new Date(+n)),e(n,i),t(n)}while(a<n&&n<r);return l},o.filter=function(n){return zh((function(e){if(e>=e)for(;t(e),!n(e);)e.setTime(e-1)}),(function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;e(t,-1),!n(t););else for(;--r>=0;)for(;e(t,1),!n(t););}))},n&&(o.count=function(e,r){return Ah.setTime(+e),Oh.setTime(+r),t(Ah),t(Oh),Math.floor(n(Ah,Oh))},o.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?o.filter(r?function(e){return r(e)%t==0}:function(e){return o.count(0,e)%t==0}):o:null}),o}var jh=zh((function(t){t.setMonth(0,1),t.setHours(0,0,0,0)}),(function(t,e){t.setFullYear(t.getFullYear()+e)}),(function(t,e){return e.getFullYear()-t.getFullYear()}),(function(t){return t.getFullYear()}));jh.every=function(t){return isFinite(t=Math.floor(t))&&t>0?zh((function(e){e.setFullYear(Math.floor(e.getFullYear()/t)*t),e.setMonth(0,1),e.setHours(0,0,0,0)}),(function(e,n){e.setFullYear(e.getFullYear()+n*t)})):null};var Rh=jh,Dh=jh.range,Lh=zh((function(t){t.setDate(1),t.setHours(0,0,0,0)}),(function(t,e){t.setMonth(t.getMonth()+e)}),(function(t,e){return e.getMonth()-t.getMonth()+12*(e.getFullYear()-t.getFullYear())}),(function(t){return t.getMonth()})),Ih=Lh,Uh=Lh.range;function Fh(t){return zh((function(e){e.setDate(e.getDate()-(e.getDay()+7-t)%7),e.setHours(0,0,0,0)}),(function(t,e){t.setDate(t.getDate()+7*e)}),(function(t,e){return(e-t-6e4*(e.getTimezoneOffset()-t.getTimezoneOffset()))/6048e5}))}var Bh=Fh(0),qh=Fh(1),Hh=Fh(2),Wh=Fh(3),$h=Fh(4),Vh=Fh(5),Yh=Fh(6),Gh=Bh.range,Qh=qh.range,Xh=Hh.range,Kh=Wh.range,Jh=$h.range,Zh=Vh.range,tg=Yh.range,eg=zh((function(t){t.setHours(0,0,0,0)}),(function(t,e){t.setDate(t.getDate()+e)}),(function(t,e){return(e-t-6e4*(e.getTimezoneOffset()-t.getTimezoneOffset()))/864e5}),(function(t){return t.getDate()-1})),ng=eg,rg=eg.range,og=zh((function(t){t.setTime(t-t.getMilliseconds()-1e3*t.getSeconds()-6e4*t.getMinutes())}),(function(t,e){t.setTime(+t+36e5*e)}),(function(t,e){return(e-t)/36e5}),(function(t){return t.getHours()})),ig=og,ag=og.range,lg=zh((function(t){t.setTime(t-t.getMilliseconds()-1e3*t.getSeconds())}),(function(t,e){t.setTime(+t+6e4*e)}),(function(t,e){return(e-t)/6e4}),(function(t){return t.getMinutes()})),cg=lg,ug=lg.range,sg=zh((function(t){t.setTime(t-t.getMilliseconds())}),(function(t,e){t.setTime(+t+1e3*e)}),(function(t,e){return(e-t)/1e3}),(function(t){return t.getUTCSeconds()})),fg=sg,dg=sg.range,pg=zh((function(){}),(function(t,e){t.setTime(+t+e)}),(function(t,e){return e-t}));pg.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?zh((function(e){e.setTime(Math.floor(e/t)*t)}),(function(e,n){e.setTime(+e+n*t)}),(function(e,n){return(n-e)/t})):pg:null};var mg=pg,hg=pg.range;function gg(t){return zh((function(e){e.setUTCDate(e.getUTCDate()-(e.getUTCDay()+7-t)%7),e.setUTCHours(0,0,0,0)}),(function(t,e){t.setUTCDate(t.getUTCDate()+7*e)}),(function(t,e){return(e-t)/6048e5}))}var bg=gg(0),vg=gg(1),yg=gg(2),xg=gg(3),wg=gg(4),kg=gg(5),_g=gg(6),Eg=bg.range,Sg=vg.range,Mg=yg.range,Tg=xg.range,Cg=wg.range,Ng=kg.range,Pg=_g.range,Ag=zh((function(t){t.setUTCHours(0,0,0,0)}),(function(t,e){t.setUTCDate(t.getUTCDate()+e)}),(function(t,e){return(e-t)/864e5}),(function(t){return t.getUTCDate()-1})),Og=Ag,zg=Ag.range,jg=zh((function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)}),(function(t,e){t.setUTCFullYear(t.getUTCFullYear()+e)}),(function(t,e){return e.getUTCFullYear()-t.getUTCFullYear()}),(function(t){return t.getUTCFullYear()}));jg.every=function(t){return isFinite(t=Math.floor(t))&&t>0?zh((function(e){e.setUTCFullYear(Math.floor(e.getUTCFullYear()/t)*t),e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0)}),(function(e,n){e.setUTCFullYear(e.getUTCFullYear()+n*t)})):null};var Rg=jg,Dg=jg.range;function Lg(t){if(0<=t.y&&t.y<100){var e=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return e.setFullYear(t.y),e}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function Ig(t){if(0<=t.y&&t.y<100){var e=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return e.setUTCFullYear(t.y),e}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function Ug(t,e,n){return{y:t,m:e,d:n,H:0,M:0,S:0,L:0}}function Fg(t){var e=t.dateTime,n=t.date,r=t.time,o=t.periods,i=t.days,a=t.shortDays,l=t.months,c=t.shortMonths,u=Jg(o),s=Zg(o),f=Jg(i),d=Zg(i),p=Jg(a),m=Zg(a),h=Jg(l),g=Zg(l),b=Jg(c),v=Zg(c),y={a:function(t){return a[t.getDay()]},A:function(t){return i[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return l[t.getMonth()]},c:null,d:xb,e:xb,f:Sb,H:wb,I:kb,j:_b,L:Eb,m:Mb,M:Tb,p:function(t){return o[+(t.getHours()>=12)]},q:function(t){return 1+~~(t.getMonth()/3)},Q:ev,s:nv,S:Cb,u:Nb,U:Pb,V:Ab,w:Ob,W:zb,x:null,X:null,y:jb,Y:Rb,Z:Db,"%":tv},x={a:function(t){return a[t.getUTCDay()]},A:function(t){return i[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return l[t.getUTCMonth()]},c:null,d:Lb,e:Lb,f:qb,H:Ib,I:Ub,j:Fb,L:Bb,m:Hb,M:Wb,p:function(t){return o[+(t.getUTCHours()>=12)]},q:function(t){return 1+~~(t.getUTCMonth()/3)},Q:ev,s:nv,S:$b,u:Vb,U:Yb,V:Gb,w:Qb,W:Xb,x:null,X:null,y:Kb,Y:Jb,Z:Zb,"%":tv},w={a:function(t,e,n){var r=p.exec(e.slice(n));return r?(t.w=m[r[0].toLowerCase()],n+r[0].length):-1},A:function(t,e,n){var r=f.exec(e.slice(n));return r?(t.w=d[r[0].toLowerCase()],n+r[0].length):-1},b:function(t,e,n){var r=b.exec(e.slice(n));return r?(t.m=v[r[0].toLowerCase()],n+r[0].length):-1},B:function(t,e,n){var r=h.exec(e.slice(n));return r?(t.m=g[r[0].toLowerCase()],n+r[0].length):-1},c:function(t,n,r){return E(t,e,n,r)},d:sb,e:sb,f:gb,H:db,I:db,j:fb,L:hb,m:ub,M:pb,p:function(t,e,n){var r=u.exec(e.slice(n));return r?(t.p=s[r[0].toLowerCase()],n+r[0].length):-1},q:cb,Q:vb,s:yb,S:mb,u:eb,U:nb,V:rb,w:tb,W:ob,x:function(t,e,r){return E(t,n,e,r)},X:function(t,e,n){return E(t,r,e,n)},y:ab,Y:ib,Z:lb,"%":bb};function k(t,e){return function(n){var r,o,i,a=[],l=-1,c=0,u=t.length;for(n instanceof Date||(n=new Date(+n));++l<u;)37===t.charCodeAt(l)&&(a.push(t.slice(c,l)),null!=(o=Vg[r=t.charAt(++l)])?r=t.charAt(++l):o="e"===r?" ":"0",(i=e[r])&&(r=i(n,o)),a.push(r),c=l+1);return a.push(t.slice(c,l)),a.join("")}}function _(t,e){return function(n){var r,o,i=Ug(1900,void 0,1);if(E(i,t,n+="",0)!=n.length)return null;if("Q"in i)return new Date(i.Q);if("s"in i)return new Date(1e3*i.s+("L"in i?i.L:0));if(!e||"Z"in i||(i.Z=0),"p"in i&&(i.H=i.H%12+12*i.p),void 0===i.m&&(i.m="q"in i?i.q:0),"V"in i){if(i.V<1||i.V>53)return null;"w"in i||(i.w=1),"Z"in i?(o=(r=Ig(Ug(i.y,0,1))).getUTCDay(),r=o>4||0===o?vg.ceil(r):vg(r),r=Og.offset(r,7*(i.V-1)),i.y=r.getUTCFullYear(),i.m=r.getUTCMonth(),i.d=r.getUTCDate()+(i.w+6)%7):(o=(r=Lg(Ug(i.y,0,1))).getDay(),r=o>4||0===o?qh.ceil(r):qh(r),r=ng.offset(r,7*(i.V-1)),i.y=r.getFullYear(),i.m=r.getMonth(),i.d=r.getDate()+(i.w+6)%7)}else("W"in i||"U"in i)&&("w"in i||(i.w="u"in i?i.u%7:"W"in i?1:0),o="Z"in i?Ig(Ug(i.y,0,1)).getUTCDay():Lg(Ug(i.y,0,1)).getDay(),i.m=0,i.d="W"in i?(i.w+6)%7+7*i.W-(o+5)%7:i.w+7*i.U-(o+6)%7);return"Z"in i?(i.H+=i.Z/100|0,i.M+=i.Z%100,Ig(i)):Lg(i)}}function E(t,e,n,r){for(var o,i,a=0,l=e.length,c=n.length;a<l;){if(r>=c)return-1;if(37===(o=e.charCodeAt(a++))){if(o=e.charAt(a++),!(i=w[o in Vg?e.charAt(a++):o])||(r=i(t,n,r))<0)return-1}else if(o!=n.charCodeAt(r++))return-1}return r}return(y.x=k(n,y),y.X=k(r,y),y.c=k(e,y),x.x=k(n,x),x.X=k(r,x),x.c=k(e,x),{format:function(t){var e=k(t+="",y);return e.toString=function(){return t},e},parse:function(t){var e=_(t+="",!1);return e.toString=function(){return t},e},utcFormat:function(t){var e=k(t+="",x);return e.toString=function(){return t},e},utcParse:function(t){var e=_(t+="",!0);return e.toString=function(){return t},e}})}var Bg,qg,Hg,Wg,$g,Vg={"-":"",_:" ",0:"0"},Yg=/^\s*\d+/,Gg=/^%/,Qg=/[\\^$*+?|[\]().{}]/g;function Xg(t,e,n){var r=t<0?"-":"",o=(r?-t:t)+"",i=o.length;return r+(i<n?new Array(n-i+1).join(e)+o:o)}function Kg(t){return t.replace(Qg,"\\$&")}function Jg(t){return new RegExp("^(?:"+t.map(Kg).join("|")+")","i")}function Zg(t){for(var e={},n=-1,r=t.length;++n<r;)e[t[n].toLowerCase()]=n;return e}function tb(t,e,n){var r=Yg.exec(e.slice(n,n+1));return r?(t.w=+r[0],n+r[0].length):-1}function eb(t,e,n){var r=Yg.exec(e.slice(n,n+1));return r?(t.u=+r[0],n+r[0].length):-1}function nb(t,e,n){var r=Yg.exec(e.slice(n,n+2));return r?(t.U=+r[0],n+r[0].length):-1}function rb(t,e,n){var r=Yg.exec(e.slice(n,n+2));return r?(t.V=+r[0],n+r[0].length):-1}function ob(t,e,n){var r=Yg.exec(e.slice(n,n+2));return r?(t.W=+r[0],n+r[0].length):-1}function ib(t,e,n){var r=Yg.exec(e.slice(n,n+4));return r?(t.y=+r[0],n+r[0].length):-1}function ab(t,e,n){var r=Yg.exec(e.slice(n,n+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),n+r[0].length):-1}function lb(t,e,n){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(e.slice(n,n+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),n+r[0].length):-1}function cb(t,e,n){var r=Yg.exec(e.slice(n,n+1));return r?(t.q=3*r[0]-3,n+r[0].length):-1}function ub(t,e,n){var r=Yg.exec(e.slice(n,n+2));return r?(t.m=r[0]-1,n+r[0].length):-1}function sb(t,e,n){var r=Yg.exec(e.slice(n,n+2));return r?(t.d=+r[0],n+r[0].length):-1}function fb(t,e,n){var r=Yg.exec(e.slice(n,n+3));return r?(t.m=0,t.d=+r[0],n+r[0].length):-1}function db(t,e,n){var r=Yg.exec(e.slice(n,n+2));return r?(t.H=+r[0],n+r[0].length):-1}function pb(t,e,n){var r=Yg.exec(e.slice(n,n+2));return r?(t.M=+r[0],n+r[0].length):-1}function mb(t,e,n){var r=Yg.exec(e.slice(n,n+2));return r?(t.S=+r[0],n+r[0].length):-1}function hb(t,e,n){var r=Yg.exec(e.slice(n,n+3));return r?(t.L=+r[0],n+r[0].length):-1}function gb(t,e,n){var r=Yg.exec(e.slice(n,n+6));return r?(t.L=Math.floor(r[0]/1e3),n+r[0].length):-1}function bb(t,e,n){var r=Gg.exec(e.slice(n,n+1));return r?n+r[0].length:-1}function vb(t,e,n){var r=Yg.exec(e.slice(n));return r?(t.Q=+r[0],n+r[0].length):-1}function yb(t,e,n){var r=Yg.exec(e.slice(n));return r?(t.s=+r[0],n+r[0].length):-1}function xb(t,e){return Xg(t.getDate(),e,2)}function wb(t,e){return Xg(t.getHours(),e,2)}function kb(t,e){return Xg(t.getHours()%12||12,e,2)}function _b(t,e){return Xg(1+ng.count(Rh(t),t),e,3)}function Eb(t,e){return Xg(t.getMilliseconds(),e,3)}function Sb(t,e){return Eb(t,e)+"000"}function Mb(t,e){return Xg(t.getMonth()+1,e,2)}function Tb(t,e){return Xg(t.getMinutes(),e,2)}function Cb(t,e){return Xg(t.getSeconds(),e,2)}function Nb(t){var e=t.getDay();return 0===e?7:e}function Pb(t,e){return Xg(Bh.count(Rh(t)-1,t),e,2)}function Ab(t,e){var n=t.getDay();return t=n>=4||0===n?$h(t):$h.ceil(t),Xg($h.count(Rh(t),t)+(4===Rh(t).getDay()),e,2)}function Ob(t){return t.getDay()}function zb(t,e){return Xg(qh.count(Rh(t)-1,t),e,2)}function jb(t,e){return Xg(t.getFullYear()%100,e,2)}function Rb(t,e){return Xg(t.getFullYear()%1e4,e,4)}function Db(t){var e=t.getTimezoneOffset();return(e>0?"-":(e*=-1,"+"))+Xg(e/60|0,"0",2)+Xg(e%60,"0",2)}function Lb(t,e){return Xg(t.getUTCDate(),e,2)}function Ib(t,e){return Xg(t.getUTCHours(),e,2)}function Ub(t,e){return Xg(t.getUTCHours()%12||12,e,2)}function Fb(t,e){return Xg(1+Og.count(Rg(t),t),e,3)}function Bb(t,e){return Xg(t.getUTCMilliseconds(),e,3)}function qb(t,e){return Bb(t,e)+"000"}function Hb(t,e){return Xg(t.getUTCMonth()+1,e,2)}function Wb(t,e){return Xg(t.getUTCMinutes(),e,2)}function $b(t,e){return Xg(t.getUTCSeconds(),e,2)}function Vb(t){var e=t.getUTCDay();return 0===e?7:e}function Yb(t,e){return Xg(bg.count(Rg(t)-1,t),e,2)}function Gb(t,e){var n=t.getUTCDay();return t=n>=4||0===n?wg(t):wg.ceil(t),Xg(wg.count(Rg(t),t)+(4===Rg(t).getUTCDay()),e,2)}function Qb(t){return t.getUTCDay()}function Xb(t,e){return Xg(vg.count(Rg(t)-1,t),e,2)}function Kb(t,e){return Xg(t.getUTCFullYear()%100,e,2)}function Jb(t,e){return Xg(t.getUTCFullYear()%1e4,e,4)}function Zb(){return"+0000"}function tv(){return"%"}function ev(t){return+t}function nv(t){return Math.floor(+t/1e3)}function rv(t){return Bg=Fg(t),qg=Bg.format,Hg=Bg.parse,Wg=Bg.utcFormat,$g=Bg.utcParse,Bg}rv({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});function ov(t){return new Date(t)}function iv(t){return t instanceof Date?+t:+new Date(+t)}function av(t,e,n,r,i,a,l,c,u){var s=oh(Km,Km),f=s.invert,d=s.domain,p=u(".%L"),m=u(":%S"),h=u("%I:%M"),g=u("%I %p"),b=u("%a %d"),v=u("%b %d"),y=u("%B"),x=u("%Y"),w=[[l,1,1e3],[l,5,5e3],[l,15,15e3],[l,30,3e4],[a,1,6e4],[a,5,3e5],[a,15,9e5],[a,30,18e5],[i,1,36e5],[i,3,108e5],[i,6,216e5],[i,12,432e5],[r,1,864e5],[r,2,1728e5],[n,1,6048e5],[e,1,2592e6],[e,3,7776e6],[t,1,31536e6]];function k(o){return(l(o)<o?p:a(o)<o?m:i(o)<o?h:r(o)<o?g:e(o)<o?n(o)<o?b:v:t(o)<o?y:x)(o)}function _(e,n,r,i){if(null==e&&(e=10),"number"==typeof e){var a=Math.abs(r-n)/e,l=o((function(t){return t[2]})).right(w,a);l===w.length?(i=C(n/31536e6,r/31536e6,e),e=t):l?(i=(l=w[a/w[l-1][2]<w[l][2]/a?l-1:l])[1],e=l[0]):(i=Math.max(C(n,r,e),1),e=c)}return null==i?e:e.every(i)}return s.invert=function(t){return new Date(f(t))},s.domain=function(t){return arguments.length?d(qm.call(t,iv)):d().map(ov)},s.ticks=function(t,e){var n,r=d(),o=r[0],i=r[r.length-1],a=i<o;return a&&(n=o,o=i,i=n),n=(n=_(t,o,i,e))?n.range(o,i+1):[],a?n.reverse():n},s.tickFormat=function(t,e){return null==e?k:u(e)},s.nice=function(t,e){var n=d();return(t=_(t,n[0],n[n.length-1],e))?d(uh(n,t)):s},s.copy=function(){return nh(s,av(t,e,n,r,i,a,l,c,u))},s}var lv=function(){return Um.apply(av(Rh,Ih,Bh,ng,ig,cg,fg,mg,qg).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments)},cv=zh((function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)}),(function(t,e){t.setUTCMonth(t.getUTCMonth()+e)}),(function(t,e){return e.getUTCMonth()-t.getUTCMonth()+12*(e.getUTCFullYear()-t.getUTCFullYear())}),(function(t){return t.getUTCMonth()})),uv=cv,sv=cv.range,fv=zh((function(t){t.setUTCMinutes(0,0,0)}),(function(t,e){t.setTime(+t+36e5*e)}),(function(t,e){return(e-t)/36e5}),(function(t){return t.getUTCHours()})),dv=fv,pv=fv.range,mv=zh((function(t){t.setUTCSeconds(0,0)}),(function(t,e){t.setTime(+t+6e4*e)}),(function(t,e){return(e-t)/6e4}),(function(t){return t.getUTCMinutes()})),hv=mv,gv=mv.range,bv=function(){return Um.apply(av(Rg,uv,bg,Og,dv,hv,fg,mg,Wg).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)]),arguments)};function vv(){var t,e,n,r,o,i=0,a=1,l=Km,c=!1;function u(e){return isNaN(e=+e)?o:l(0===n?.5:(e=(r(e)-t)*n,c?Math.max(0,Math.min(1,e)):e))}return u.domain=function(o){return arguments.length?(t=r(i=+o[0]),e=r(a=+o[1]),n=t===e?0:1/(e-t),u):[i,a]},u.clamp=function(t){return arguments.length?(c=!!t,u):c},u.interpolator=function(t){return arguments.length?(l=t,u):l},u.unknown=function(t){return arguments.length?(o=t,u):o},function(o){return r=o,t=o(i),e=o(a),n=t===e?0:1/(e-t),u}}function yv(t,e){return e.domain(t.domain()).interpolator(t.interpolator()).clamp(t.clamp()).unknown(t.unknown())}function xv(){var t=ah(vv()(Km));return t.copy=function(){return yv(t,xv())},Fm.apply(t,arguments)}function wv(){var t=gh(vv()).domain([1,10]);return t.copy=function(){return yv(t,wv()).base(t.base())},Fm.apply(t,arguments)}function kv(){var t=xh(vv());return t.copy=function(){return yv(t,kv()).constant(t.constant())},Fm.apply(t,arguments)}function _v(){var t=Sh(vv());return t.copy=function(){return yv(t,_v()).exponent(t.exponent())},Fm.apply(t,arguments)}function Ev(){return _v.apply(null,arguments).exponent(.5)}function Sv(){var t=[],e=Km;function n(n){if(!isNaN(n=+n))return e((c(t,n)-1)/(t.length-1))}return n.domain=function(e){if(!arguments.length)return t.slice();t=[];for(var o,i=0,a=e.length;i<a;++i)null==(o=e[i])||isNaN(o=+o)||t.push(o);return t.sort(r),n},n.interpolator=function(t){return arguments.length?(e=t,n):e},n.copy=function(){return Sv(e).domain(t)},Fm.apply(n,arguments)}function Mv(){var t,e,n,r,o,i,a,l=0,c=.5,u=1,s=Km,f=!1;function d(t){return isNaN(t=+t)?a:(t=.5+((t=+i(t))-e)*(t<e?r:o),s(f?Math.max(0,Math.min(1,t)):t))}return d.domain=function(a){return arguments.length?(t=i(l=+a[0]),e=i(c=+a[1]),n=i(u=+a[2]),r=t===e?0:.5/(e-t),o=e===n?0:.5/(n-e),d):[l,c,u]},d.clamp=function(t){return arguments.length?(f=!!t,d):f},d.interpolator=function(t){return arguments.length?(s=t,d):s},d.unknown=function(t){return arguments.length?(a=t,d):a},function(a){return i=a,t=a(l),e=a(c),n=a(u),r=t===e?0:.5/(e-t),o=e===n?0:.5/(n-e),d}}function Tv(){var t=ah(Mv()(Km));return t.copy=function(){return yv(t,Tv())},Fm.apply(t,arguments)}function Cv(){var t=gh(Mv()).domain([.1,1,10]);return t.copy=function(){return yv(t,Cv()).base(t.base())},Fm.apply(t,arguments)}function Nv(){var t=xh(Mv());return t.copy=function(){return yv(t,Nv()).constant(t.constant())},Fm.apply(t,arguments)}function Pv(){var t=Sh(Mv());return t.copy=function(){return yv(t,Pv()).exponent(t.exponent())},Fm.apply(t,arguments)}function Av(){return Pv.apply(null,arguments).exponent(.5)}var Ov=function(t){for(var e=t.length/6|0,n=new Array(e),r=0;r<e;)n[r]="#"+t.slice(6*r,6*++r);return n},zv=Ov("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),jv=Ov("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),Rv=Ov("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),Dv=Ov("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),Lv=Ov("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),Iv=Ov("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),Uv=Ov("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),Fv=Ov("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),Bv=Ov("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"),qv=Ov("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab"),Hv=function(t){return mn(t[t.length-1])},Wv=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(Ov),$v=Hv(Wv),Vv=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(Ov),Yv=Hv(Vv),Gv=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(Ov),Qv=Hv(Gv),Xv=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(Ov),Kv=Hv(Xv),Jv=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(Ov),Zv=Hv(Jv),ty=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(Ov),ey=Hv(ty),ny=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(Ov),ry=Hv(ny),oy=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(Ov),iy=Hv(oy),ay=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(Ov),ly=Hv(ay),cy=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(Ov),uy=Hv(cy),sy=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(Ov),fy=Hv(sy),dy=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(Ov),py=Hv(dy),my=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(Ov),hy=Hv(my),gy=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(Ov),by=Hv(gy),vy=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(Ov),yy=Hv(vy),xy=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(Ov),wy=Hv(xy),ky=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(Ov),_y=Hv(ky),Ey=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(Ov),Sy=Hv(Ey),My=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(Ov),Ty=Hv(My),Cy=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(Ov),Ny=Hv(Cy),Py=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(Ov),Ay=Hv(Py),Oy=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(Ov),zy=Hv(Oy),jy=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(Ov),Ry=Hv(jy),Dy=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(Ov),Ly=Hv(Dy),Iy=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(Ov),Uy=Hv(Iy),Fy=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(Ov),By=Hv(Fy),qy=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(Ov),Hy=Hv(qy),Wy=function(t){return t=Math.max(0,Math.min(1,t)),"rgb("+Math.max(0,Math.min(255,Math.round(-4.54-t*(35.34-t*(2381.73-t*(6402.7-t*(7024.72-2710.57*t)))))))+", "+Math.max(0,Math.min(255,Math.round(32.49+t*(170.73+t*(52.82-t*(131.46-t*(176.58-67.37*t)))))))+", "+Math.max(0,Math.min(255,Math.round(81.24+t*(442.36-t*(2482.43-t*(6167.24-t*(6614.94-2475.67*t)))))))+")"},$y=km(Ai(300,.5,0),Ai(-240,.5,1)),Vy=km(Ai(-100,.75,.35),Ai(80,1.5,.8)),Yy=km(Ai(260,.75,.35),Ai(80,1.5,.8)),Gy=Ai(),Qy=function(t){(t<0||t>1)&&(t-=Math.floor(t));var e=Math.abs(t-.5);return Gy.h=360*t-100,Gy.s=1.5-1.5*e,Gy.l=.8-.9*e,Gy+""},Xy=Ye(),Ky=Math.PI/3,Jy=2*Math.PI/3,Zy=function(t){var e;return t=(.5-t)*Math.PI,Xy.r=255*(e=Math.sin(t))*e,Xy.g=255*(e=Math.sin(t+Ky))*e,Xy.b=255*(e=Math.sin(t+Jy))*e,Xy+""},tx=function(t){return t=Math.max(0,Math.min(1,t)),"rgb("+Math.max(0,Math.min(255,Math.round(34.61+t*(1172.33-t*(10793.56-t*(33300.12-t*(38394.49-14825.05*t)))))))+", "+Math.max(0,Math.min(255,Math.round(23.31+t*(557.33+t*(1225.33-t*(3574.96-t*(1073.77+707.56*t)))))))+", "+Math.max(0,Math.min(255,Math.round(27.2+t*(3211.1-t*(15327.97-t*(27814-t*(22569.18-6838.66*t)))))))+")"};function ex(t){var e=t.length;return function(n){return t[Math.max(0,Math.min(e-1,Math.floor(n*e)))]}}var nx=ex(Ov("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),rx=ex(Ov("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),ox=ex(Ov("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),ix=ex(Ov("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921")),ax=function(t){return ke(ne(t).call(document.documentElement))},lx=0;function cx(){return new ux}function ux(){this._="@"+(++lx).toString(36)}ux.prototype=cx.prototype={constructor:ux,get:function(t){for(var e=this._;!(e in t);)if(!(t=t.parentNode))return;return t[e]},set:function(t,e){return t[this._]=e},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var sx=function(t){return"string"==typeof t?new ye([document.querySelectorAll(t)],[document.documentElement]):new ye([null==t?[]:t],ve)},fx=function(t,e){null==e&&(e=Nn().touches);for(var n=0,r=e?e.length:0,o=new Array(r);n<r;++n)o[n]=Pn(t,e[n]);return o},dx=function(t){return function(){return t}},px=Math.abs,mx=Math.atan2,hx=Math.cos,gx=Math.max,bx=Math.min,vx=Math.sin,yx=Math.sqrt,xx=Math.PI,wx=xx/2,kx=2*xx;function _x(t){return t>1?0:t<-1?xx:Math.acos(t)}function Ex(t){return t>=1?wx:t<=-1?-wx:Math.asin(t)}function Sx(t){return t.innerRadius}function Mx(t){return t.outerRadius}function Tx(t){return t.startAngle}function Cx(t){return t.endAngle}function Nx(t){return t&&t.padAngle}function Px(t,e,n,r,o,i,a,l){var c=n-t,u=r-e,s=a-o,f=l-i,d=f*c-s*u;if(!(d*d<1e-12))return[t+(d=(s*(e-i)-f*(t-o))/d)*c,e+d*u]}function Ax(t,e,n,r,o,i,a){var l=t-n,c=e-r,u=(a?i:-i)/yx(l*l+c*c),s=u*c,f=-u*l,d=t+s,p=e+f,m=n+s,h=r+f,g=(d+m)/2,b=(p+h)/2,v=m-d,y=h-p,x=v*v+y*y,w=o-i,k=d*h-m*p,_=(y<0?-1:1)*yx(gx(0,w*w*x-k*k)),E=(k*y-v*_)/x,S=(-k*v-y*_)/x,M=(k*y+v*_)/x,T=(-k*v+y*_)/x,C=E-g,N=S-b,P=M-g,A=T-b;return C*C+N*N>P*P+A*A&&(E=M,S=T),{cx:E,cy:S,x01:-s,y01:-f,x11:E*(o/w-1),y11:S*(o/w-1)}}var Ox=function(){var t=Sx,e=Mx,n=dx(0),r=null,o=Tx,i=Cx,a=Nx,l=null;function c(){var c,u,s=+t.apply(this,arguments),f=+e.apply(this,arguments),d=o.apply(this,arguments)-wx,p=i.apply(this,arguments)-wx,m=px(p-d),h=p>d;if(l||(l=c=Ho()),f<s&&(u=f,f=s,s=u),f>1e-12)if(m>kx-1e-12)l.moveTo(f*hx(d),f*vx(d)),l.arc(0,0,f,d,p,!h),s>1e-12&&(l.moveTo(s*hx(p),s*vx(p)),l.arc(0,0,s,p,d,h));else{var g,b,v=d,y=p,x=d,w=p,k=m,_=m,E=a.apply(this,arguments)/2,S=E>1e-12&&(r?+r.apply(this,arguments):yx(s*s+f*f)),M=bx(px(f-s)/2,+n.apply(this,arguments)),T=M,C=M;if(S>1e-12){var N=Ex(S/s*vx(E)),P=Ex(S/f*vx(E));(k-=2*N)>1e-12?(x+=N*=h?1:-1,w-=N):(k=0,x=w=(d+p)/2),(_-=2*P)>1e-12?(v+=P*=h?1:-1,y-=P):(_=0,v=y=(d+p)/2)}var A=f*hx(v),O=f*vx(v),z=s*hx(w),j=s*vx(w);if(M>1e-12){var R,D=f*hx(y),L=f*vx(y),I=s*hx(x),U=s*vx(x);if(m<xx&&(R=Px(A,O,I,U,D,L,z,j))){var F=A-R[0],B=O-R[1],q=D-R[0],H=L-R[1],W=1/vx(_x((F*q+B*H)/(yx(F*F+B*B)*yx(q*q+H*H)))/2),$=yx(R[0]*R[0]+R[1]*R[1]);T=bx(M,(s-$)/(W-1)),C=bx(M,(f-$)/(W+1))}}_>1e-12?C>1e-12?(g=Ax(I,U,A,O,f,C,h),b=Ax(D,L,z,j,f,C,h),l.moveTo(g.cx+g.x01,g.cy+g.y01),C<M?l.arc(g.cx,g.cy,C,mx(g.y01,g.x01),mx(b.y01,b.x01),!h):(l.arc(g.cx,g.cy,C,mx(g.y01,g.x01),mx(g.y11,g.x11),!h),l.arc(0,0,f,mx(g.cy+g.y11,g.cx+g.x11),mx(b.cy+b.y11,b.cx+b.x11),!h),l.arc(b.cx,b.cy,C,mx(b.y11,b.x11),mx(b.y01,b.x01),!h))):(l.moveTo(A,O),l.arc(0,0,f,v,y,!h)):l.moveTo(A,O),s>1e-12&&k>1e-12?T>1e-12?(g=Ax(z,j,D,L,s,-T,h),b=Ax(A,O,I,U,s,-T,h),l.lineTo(g.cx+g.x01,g.cy+g.y01),T<M?l.arc(g.cx,g.cy,T,mx(g.y01,g.x01),mx(b.y01,b.x01),!h):(l.arc(g.cx,g.cy,T,mx(g.y01,g.x01),mx(g.y11,g.x11),!h),l.arc(0,0,s,mx(g.cy+g.y11,g.cx+g.x11),mx(b.cy+b.y11,b.cx+b.x11),h),l.arc(b.cx,b.cy,T,mx(b.y11,b.x11),mx(b.y01,b.x01),!h))):l.arc(0,0,s,w,x,h):l.lineTo(z,j)}else l.moveTo(0,0);if(l.closePath(),c)return l=null,c+""||null}return c.centroid=function(){var n=(+t.apply(this,arguments)+ +e.apply(this,arguments))/2,r=(+o.apply(this,arguments)+ +i.apply(this,arguments))/2-xx/2;return[hx(r)*n,vx(r)*n]},c.innerRadius=function(e){return arguments.length?(t="function"==typeof e?e:dx(+e),c):t},c.outerRadius=function(t){return arguments.length?(e="function"==typeof t?t:dx(+t),c):e},c.cornerRadius=function(t){return arguments.length?(n="function"==typeof t?t:dx(+t),c):n},c.padRadius=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:dx(+t),c):r},c.startAngle=function(t){return arguments.length?(o="function"==typeof t?t:dx(+t),c):o},c.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:dx(+t),c):i},c.padAngle=function(t){return arguments.length?(a="function"==typeof t?t:dx(+t),c):a},c.context=function(t){return arguments.length?(l=null==t?null:t,c):l},c};function zx(t){this._context=t}zx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;default:this._context.lineTo(t,e)}}};var jx=function(t){return new zx(t)};function Rx(t){return t[0]}function Dx(t){return t[1]}var Lx=function(){var t=Rx,e=Dx,n=dx(!0),r=null,o=jx,i=null;function a(a){var l,c,u,s=a.length,f=!1;for(null==r&&(i=o(u=Ho())),l=0;l<=s;++l)!(l<s&&n(c=a[l],l,a))===f&&((f=!f)?i.lineStart():i.lineEnd()),f&&i.point(+t(c,l,a),+e(c,l,a));if(u)return i=null,u+""||null}return a.x=function(e){return arguments.length?(t="function"==typeof e?e:dx(+e),a):t},a.y=function(t){return arguments.length?(e="function"==typeof t?t:dx(+t),a):e},a.defined=function(t){return arguments.length?(n="function"==typeof t?t:dx(!!t),a):n},a.curve=function(t){return arguments.length?(o=t,null!=r&&(i=o(r)),a):o},a.context=function(t){return arguments.length?(null==t?r=i=null:i=o(r=t),a):r},a},Ix=function(){var t=Rx,e=null,n=dx(0),r=Dx,o=dx(!0),i=null,a=jx,l=null;function c(c){var u,s,f,d,p,m=c.length,h=!1,g=new Array(m),b=new Array(m);for(null==i&&(l=a(p=Ho())),u=0;u<=m;++u){if(!(u<m&&o(d=c[u],u,c))===h)if(h=!h)s=u,l.areaStart(),l.lineStart();else{for(l.lineEnd(),l.lineStart(),f=u-1;f>=s;--f)l.point(g[f],b[f]);l.lineEnd(),l.areaEnd()}h&&(g[u]=+t(d,u,c),b[u]=+n(d,u,c),l.point(e?+e(d,u,c):g[u],r?+r(d,u,c):b[u]))}if(p)return l=null,p+""||null}function u(){return Lx().defined(o).curve(a).context(i)}return c.x=function(n){return arguments.length?(t="function"==typeof n?n:dx(+n),e=null,c):t},c.x0=function(e){return arguments.length?(t="function"==typeof e?e:dx(+e),c):t},c.x1=function(t){return arguments.length?(e=null==t?null:"function"==typeof t?t:dx(+t),c):e},c.y=function(t){return arguments.length?(n="function"==typeof t?t:dx(+t),r=null,c):n},c.y0=function(t){return arguments.length?(n="function"==typeof t?t:dx(+t),c):n},c.y1=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:dx(+t),c):r},c.lineX0=c.lineY0=function(){return u().x(t).y(n)},c.lineY1=function(){return u().x(t).y(r)},c.lineX1=function(){return u().x(e).y(n)},c.defined=function(t){return arguments.length?(o="function"==typeof t?t:dx(!!t),c):o},c.curve=function(t){return arguments.length?(a=t,null!=i&&(l=a(i)),c):a},c.context=function(t){return arguments.length?(null==t?i=l=null:l=a(i=t),c):i},c},Ux=function(t,e){return e<t?-1:e>t?1:e>=t?0:NaN},Fx=function(t){return t},Bx=function(){var t=Fx,e=Ux,n=null,r=dx(0),o=dx(kx),i=dx(0);function a(a){var l,c,u,s,f,d=a.length,p=0,m=new Array(d),h=new Array(d),g=+r.apply(this,arguments),b=Math.min(kx,Math.max(-kx,o.apply(this,arguments)-g)),v=Math.min(Math.abs(b)/d,i.apply(this,arguments)),y=v*(b<0?-1:1);for(l=0;l<d;++l)(f=h[m[l]=l]=+t(a[l],l,a))>0&&(p+=f);for(null!=e?m.sort((function(t,n){return e(h[t],h[n])})):null!=n&&m.sort((function(t,e){return n(a[t],a[e])})),l=0,u=p?(b-d*y)/p:0;l<d;++l,g=s)c=m[l],s=g+((f=h[c])>0?f*u:0)+y,h[c]={data:a[c],index:l,value:f,startAngle:g,endAngle:s,padAngle:v};return h}return a.value=function(e){return arguments.length?(t="function"==typeof e?e:dx(+e),a):t},a.sortValues=function(t){return arguments.length?(e=t,n=null,a):e},a.sort=function(t){return arguments.length?(n=t,e=null,a):n},a.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:dx(+t),a):r},a.endAngle=function(t){return arguments.length?(o="function"==typeof t?t:dx(+t),a):o},a.padAngle=function(t){return arguments.length?(i="function"==typeof t?t:dx(+t),a):i},a},qx=Wx(jx);function Hx(t){this._curve=t}function Wx(t){function e(e){return new Hx(t(e))}return e._curve=t,e}function $x(t){var e=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?e(Wx(t)):e()._curve},t}Hx.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,e){this._curve.point(e*Math.sin(t),e*-Math.cos(t))}};var Vx=function(){return $x(Lx().curve(qx))},Yx=function(){var t=Ix().curve(qx),e=t.curve,n=t.lineX0,r=t.lineX1,o=t.lineY0,i=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return $x(n())},delete t.lineX0,t.lineEndAngle=function(){return $x(r())},delete t.lineX1,t.lineInnerRadius=function(){return $x(o())},delete t.lineY0,t.lineOuterRadius=function(){return $x(i())},delete t.lineY1,t.curve=function(t){return arguments.length?e(Wx(t)):e()._curve},t},Gx=function(t,e){return[(e=+e)*Math.cos(t-=Math.PI/2),e*Math.sin(t)]},Qx=Array.prototype.slice;function Xx(t){return t.source}function Kx(t){return t.target}function Jx(t){var e=Xx,n=Kx,r=Rx,o=Dx,i=null;function a(){var a,l=Qx.call(arguments),c=e.apply(this,l),u=n.apply(this,l);if(i||(i=a=Ho()),t(i,+r.apply(this,(l[0]=c,l)),+o.apply(this,l),+r.apply(this,(l[0]=u,l)),+o.apply(this,l)),a)return i=null,a+""||null}return a.source=function(t){return arguments.length?(e=t,a):e},a.target=function(t){return arguments.length?(n=t,a):n},a.x=function(t){return arguments.length?(r="function"==typeof t?t:dx(+t),a):r},a.y=function(t){return arguments.length?(o="function"==typeof t?t:dx(+t),a):o},a.context=function(t){return arguments.length?(i=null==t?null:t,a):i},a}function Zx(t,e,n,r,o){t.moveTo(e,n),t.bezierCurveTo(e=(e+r)/2,n,e,o,r,o)}function tw(t,e,n,r,o){t.moveTo(e,n),t.bezierCurveTo(e,n=(n+o)/2,r,n,r,o)}function ew(t,e,n,r,o){var i=Gx(e,n),a=Gx(e,n=(n+o)/2),l=Gx(r,n),c=Gx(r,o);t.moveTo(i[0],i[1]),t.bezierCurveTo(a[0],a[1],l[0],l[1],c[0],c[1])}function nw(){return Jx(Zx)}function rw(){return Jx(tw)}function ow(){var t=Jx(ew);return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t}var iw={draw:function(t,e){var n=Math.sqrt(e/xx);t.moveTo(n,0),t.arc(0,0,n,0,kx)}},aw={draw:function(t,e){var n=Math.sqrt(e/5)/2;t.moveTo(-3*n,-n),t.lineTo(-n,-n),t.lineTo(-n,-3*n),t.lineTo(n,-3*n),t.lineTo(n,-n),t.lineTo(3*n,-n),t.lineTo(3*n,n),t.lineTo(n,n),t.lineTo(n,3*n),t.lineTo(-n,3*n),t.lineTo(-n,n),t.lineTo(-3*n,n),t.closePath()}},lw=Math.sqrt(1/3),cw=2*lw,uw={draw:function(t,e){var n=Math.sqrt(e/cw),r=n*lw;t.moveTo(0,-n),t.lineTo(r,0),t.lineTo(0,n),t.lineTo(-r,0),t.closePath()}},sw=Math.sin(xx/10)/Math.sin(7*xx/10),fw=Math.sin(kx/10)*sw,dw=-Math.cos(kx/10)*sw,pw={draw:function(t,e){var n=Math.sqrt(.8908130915292852*e),r=fw*n,o=dw*n;t.moveTo(0,-n),t.lineTo(r,o);for(var i=1;i<5;++i){var a=kx*i/5,l=Math.cos(a),c=Math.sin(a);t.lineTo(c*n,-l*n),t.lineTo(l*r-c*o,c*r+l*o)}t.closePath()}},mw={draw:function(t,e){var n=Math.sqrt(e),r=-n/2;t.rect(r,r,n,n)}},hw=Math.sqrt(3),gw={draw:function(t,e){var n=-Math.sqrt(e/(3*hw));t.moveTo(0,2*n),t.lineTo(-hw*n,-n),t.lineTo(hw*n,-n),t.closePath()}},bw=Math.sqrt(3)/2,vw=1/Math.sqrt(12),yw=3*(vw/2+1),xw={draw:function(t,e){var n=Math.sqrt(e/yw),r=n/2,o=n*vw,i=r,a=n*vw+n,l=-i,c=a;t.moveTo(r,o),t.lineTo(i,a),t.lineTo(l,c),t.lineTo(-.5*r-bw*o,bw*r+-.5*o),t.lineTo(-.5*i-bw*a,bw*i+-.5*a),t.lineTo(-.5*l-bw*c,bw*l+-.5*c),t.lineTo(-.5*r+bw*o,-.5*o-bw*r),t.lineTo(-.5*i+bw*a,-.5*a-bw*i),t.lineTo(-.5*l+bw*c,-.5*c-bw*l),t.closePath()}},ww=[iw,aw,uw,mw,pw,gw,xw],kw=function(){var t=dx(iw),e=dx(64),n=null;function r(){var r;if(n||(n=r=Ho()),t.apply(this,arguments).draw(n,+e.apply(this,arguments)),r)return n=null,r+""||null}return r.type=function(e){return arguments.length?(t="function"==typeof e?e:dx(e),r):t},r.size=function(t){return arguments.length?(e="function"==typeof t?t:dx(+t),r):e},r.context=function(t){return arguments.length?(n=null==t?null:t,r):n},r},_w=function(){};function Ew(t,e,n){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+e)/6,(t._y0+4*t._y1+n)/6)}function Sw(t){this._context=t}Sw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:Ew(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:Ew(this,t,e)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e}};var Mw=function(t){return new Sw(t)};function Tw(t){this._context=t}Tw.prototype={areaStart:_w,areaEnd:_w,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._x2=t,this._y2=e;break;case 1:this._point=2,this._x3=t,this._y3=e;break;case 2:this._point=3,this._x4=t,this._y4=e,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+e)/6);break;default:Ew(this,t,e)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e}};var Cw=function(t){return new Tw(t)};function Nw(t){this._context=t}Nw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var n=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+e)/6;this._line?this._context.lineTo(n,r):this._context.moveTo(n,r);break;case 3:this._point=4;default:Ew(this,t,e)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e}};var Pw=function(t){return new Nw(t)};function Aw(t,e){this._basis=new Sw(t),this._beta=e}Aw.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,e=this._y,n=t.length-1;if(n>0)for(var r,o=t[0],i=e[0],a=t[n]-o,l=e[n]-i,c=-1;++c<=n;)r=c/n,this._basis.point(this._beta*t[c]+(1-this._beta)*(o+r*a),this._beta*e[c]+(1-this._beta)*(i+r*l));this._x=this._y=null,this._basis.lineEnd()},point:function(t,e){this._x.push(+t),this._y.push(+e)}};var Ow=function t(e){function n(t){return 1===e?new Sw(t):new Aw(t,e)}return n.beta=function(e){return t(+e)},n}(.85);function zw(t,e,n){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-e),t._y2+t._k*(t._y1-n),t._x2,t._y2)}function jw(t,e){this._context=t,this._k=(1-e)/6}jw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:zw(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2,this._x1=t,this._y1=e;break;case 2:this._point=3;default:zw(this,t,e)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};var Rw=function t(e){function n(t){return new jw(t,e)}return n.tension=function(e){return t(+e)},n}(0);function Dw(t,e){this._context=t,this._k=(1-e)/6}Dw.prototype={areaStart:_w,areaEnd:_w,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._x3=t,this._y3=e;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=e);break;case 2:this._point=3,this._x5=t,this._y5=e;break;default:zw(this,t,e)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};var Lw=function t(e){function n(t){return new Dw(t,e)}return n.tension=function(e){return t(+e)},n}(0);function Iw(t,e){this._context=t,this._k=(1-e)/6}Iw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:zw(this,t,e)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};var Uw=function t(e){function n(t){return new Iw(t,e)}return n.tension=function(e){return t(+e)},n}(0);function Fw(t,e,n){var r=t._x1,o=t._y1,i=t._x2,a=t._y2;if(t._l01_a>1e-12){var l=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,c=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*l-t._x0*t._l12_2a+t._x2*t._l01_2a)/c,o=(o*l-t._y0*t._l12_2a+t._y2*t._l01_2a)/c}if(t._l23_a>1e-12){var u=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,s=3*t._l23_a*(t._l23_a+t._l12_a);i=(i*u+t._x1*t._l23_2a-e*t._l12_2a)/s,a=(a*u+t._y1*t._l23_2a-n*t._l12_2a)/s}t._context.bezierCurveTo(r,o,i,a,t._x2,t._y2)}function Bw(t,e){this._context=t,this._alpha=e}Bw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){if(t=+t,e=+e,this._point){var n=this._x2-t,r=this._y2-e;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;break;case 2:this._point=3;default:Fw(this,t,e)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};var qw=function t(e){function n(t){return e?new Bw(t,e):new jw(t,0)}return n.alpha=function(e){return t(+e)},n}(.5);function Hw(t,e){this._context=t,this._alpha=e}Hw.prototype={areaStart:_w,areaEnd:_w,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,e){if(t=+t,e=+e,this._point){var n=this._x2-t,r=this._y2-e;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=e;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=e);break;case 2:this._point=3,this._x5=t,this._y5=e;break;default:Fw(this,t,e)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};var Ww=function t(e){function n(t){return e?new Hw(t,e):new Dw(t,0)}return n.alpha=function(e){return t(+e)},n}(.5);function $w(t,e){this._context=t,this._alpha=e}$w.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){if(t=+t,e=+e,this._point){var n=this._x2-t,r=this._y2-e;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Fw(this,t,e)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};var Vw=function t(e){function n(t){return e?new $w(t,e):new Iw(t,0)}return n.alpha=function(e){return t(+e)},n}(.5);function Yw(t){this._context=t}Yw.prototype={areaStart:_w,areaEnd:_w,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,e){t=+t,e=+e,this._point?this._context.lineTo(t,e):(this._point=1,this._context.moveTo(t,e))}};var Gw=function(t){return new Yw(t)};function Qw(t){return t<0?-1:1}function Xw(t,e,n){var r=t._x1-t._x0,o=e-t._x1,i=(t._y1-t._y0)/(r||o<0&&-0),a=(n-t._y1)/(o||r<0&&-0),l=(i*o+a*r)/(r+o);return(Qw(i)+Qw(a))*Math.min(Math.abs(i),Math.abs(a),.5*Math.abs(l))||0}function Kw(t,e){var n=t._x1-t._x0;return n?(3*(t._y1-t._y0)/n-e)/2:e}function Jw(t,e,n){var r=t._x0,o=t._y0,i=t._x1,a=t._y1,l=(i-r)/3;t._context.bezierCurveTo(r+l,o+l*e,i-l,a-l*n,i,a)}function Zw(t){this._context=t}function tk(t){this._context=new ek(t)}function ek(t){this._context=t}function nk(t){return new Zw(t)}function rk(t){return new tk(t)}function ok(t){this._context=t}function ik(t){var e,n,r=t.length-1,o=new Array(r),i=new Array(r),a=new Array(r);for(o[0]=0,i[0]=2,a[0]=t[0]+2*t[1],e=1;e<r-1;++e)o[e]=1,i[e]=4,a[e]=4*t[e]+2*t[e+1];for(o[r-1]=2,i[r-1]=7,a[r-1]=8*t[r-1]+t[r],e=1;e<r;++e)n=o[e]/i[e-1],i[e]-=n,a[e]-=n*a[e-1];for(o[r-1]=a[r-1]/i[r-1],e=r-2;e>=0;--e)o[e]=(a[e]-o[e+1])/i[e];for(i[r-1]=(t[r]+o[r-1])/2,e=0;e<r-1;++e)i[e]=2*t[e+1]-o[e+1];return[o,i]}Zw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:Jw(this,this._t0,Kw(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){var n=NaN;if(e=+e,(t=+t)!==this._x1||e!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;break;case 2:this._point=3,Jw(this,Kw(this,n=Xw(this,t,e)),n);break;default:Jw(this,this._t0,n=Xw(this,t,e))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e,this._t0=n}}},(tk.prototype=Object.create(Zw.prototype)).point=function(t,e){Zw.prototype.point.call(this,e,t)},ek.prototype={moveTo:function(t,e){this._context.moveTo(e,t)},closePath:function(){this._context.closePath()},lineTo:function(t,e){this._context.lineTo(e,t)},bezierCurveTo:function(t,e,n,r,o,i){this._context.bezierCurveTo(e,t,r,n,i,o)}},ok.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,e=this._y,n=t.length;if(n)if(this._line?this._context.lineTo(t[0],e[0]):this._context.moveTo(t[0],e[0]),2===n)this._context.lineTo(t[1],e[1]);else for(var r=ik(t),o=ik(e),i=0,a=1;a<n;++i,++a)this._context.bezierCurveTo(r[0][i],o[0][i],r[1][i],o[1][i],t[a],e[a]);(this._line||0!==this._line&&1===n)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,e){this._x.push(+t),this._y.push(+e)}};var ak=function(t){return new ok(t)};function lk(t,e){this._context=t,this._t=e}lk.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,e),this._context.lineTo(t,e);else{var n=this._x*(1-this._t)+t*this._t;this._context.lineTo(n,this._y),this._context.lineTo(n,e)}}this._x=t,this._y=e}};var ck=function(t){return new lk(t,.5)};function uk(t){return new lk(t,0)}function sk(t){return new lk(t,1)}var fk=function(t,e){if((o=t.length)>1)for(var n,r,o,i=1,a=t[e[0]],l=a.length;i<o;++i)for(r=a,a=t[e[i]],n=0;n<l;++n)a[n][1]+=a[n][0]=isNaN(r[n][1])?r[n][0]:r[n][1]},dk=function(t){for(var e=t.length,n=new Array(e);--e>=0;)n[e]=e;return n};function pk(t,e){return t[e]}var mk=function(){var t=dx([]),e=dk,n=fk,r=pk;function o(o){var i,a,l=t.apply(this,arguments),c=o.length,u=l.length,s=new Array(u);for(i=0;i<u;++i){for(var f,d=l[i],p=s[i]=new Array(c),m=0;m<c;++m)p[m]=f=[0,+r(o[m],d,m,o)],f.data=o[m];p.key=d}for(i=0,a=e(s);i<u;++i)s[a[i]].index=i;return n(s,a),s}return o.keys=function(e){return arguments.length?(t="function"==typeof e?e:dx(Qx.call(e)),o):t},o.value=function(t){return arguments.length?(r="function"==typeof t?t:dx(+t),o):r},o.order=function(t){return arguments.length?(e=null==t?dk:"function"==typeof t?t:dx(Qx.call(t)),o):e},o.offset=function(t){return arguments.length?(n=null==t?fk:t,o):n},o},hk=function(t,e){if((r=t.length)>0){for(var n,r,o,i=0,a=t[0].length;i<a;++i){for(o=n=0;n<r;++n)o+=t[n][i][1]||0;if(o)for(n=0;n<r;++n)t[n][i][1]/=o}fk(t,e)}},gk=function(t,e){if((l=t.length)>0)for(var n,r,o,i,a,l,c=0,u=t[e[0]].length;c<u;++c)for(i=a=0,n=0;n<l;++n)(o=(r=t[e[n]][c])[1]-r[0])>0?(r[0]=i,r[1]=i+=o):o<0?(r[1]=a,r[0]=a+=o):(r[0]=0,r[1]=o)},bk=function(t,e){if((n=t.length)>0){for(var n,r=0,o=t[e[0]],i=o.length;r<i;++r){for(var a=0,l=0;a<n;++a)l+=t[a][r][1]||0;o[r][1]+=o[r][0]=-l/2}fk(t,e)}},vk=function(t,e){if((o=t.length)>0&&(r=(n=t[e[0]]).length)>0){for(var n,r,o,i=0,a=1;a<r;++a){for(var l=0,c=0,u=0;l<o;++l){for(var s=t[e[l]],f=s[a][1]||0,d=(f-(s[a-1][1]||0))/2,p=0;p<l;++p){var m=t[e[p]];d+=(m[a][1]||0)-(m[a-1][1]||0)}c+=f,u+=d*f}n[a-1][1]+=n[a-1][0]=i,c&&(i-=u/c)}n[a-1][1]+=n[a-1][0]=i,fk(t,e)}},yk=function(t){var e=t.map(xk);return dk(t).sort((function(t,n){return e[t]-e[n]}))};function xk(t){for(var e,n=-1,r=0,o=t.length,i=-1/0;++n<o;)(e=+t[n][1])>i&&(i=e,r=n);return r}var wk=function(t){var e=t.map(kk);return dk(t).sort((function(t,n){return e[t]-e[n]}))};function kk(t){for(var e,n=0,r=-1,o=t.length;++r<o;)(e=+t[r][1])&&(n+=e);return n}var _k=function(t){return wk(t).reverse()},Ek=function(t){var e,n,r=t.length,o=t.map(kk),i=yk(t),a=0,l=0,c=[],u=[];for(e=0;e<r;++e)n=i[e],a<l?(a+=o[n],c.push(n)):(l+=o[n],u.push(n));return u.reverse().concat(c)},Sk=function(t){return dk(t).reverse()};var Mk=Date.prototype.toISOString?function(t){return t.toISOString()}:Wg("%Y-%m-%dT%H:%M:%S.%LZ");var Tk=+new Date("2000-01-01T00:00:00.000Z")?function(t){var e=new Date(t);return isNaN(e)?null:e}:$g("%Y-%m-%dT%H:%M:%S.%LZ"),Ck=function(t,e,n){var r=new Hn,o=e;return null==e?(r.restart(t,e,n),r):(e=+e,n=null==n?Bn():+n,r.restart((function i(a){a+=o,r.restart(i,o+=e,n),t(a)}),e,n),r)},Nk=function(t){return function(){return t}};function Pk(t){return t[0]}function Ak(t){return t[1]}function Ok(){this._=null}function zk(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function jk(t,e){var n=e,r=e.R,o=n.U;o?o.L===n?o.L=r:o.R=r:t._=r,r.U=o,n.U=r,n.R=r.L,n.R&&(n.R.U=n),r.L=n}function Rk(t,e){var n=e,r=e.L,o=n.U;o?o.L===n?o.L=r:o.R=r:t._=r,r.U=o,n.U=r,n.L=r.R,n.L&&(n.L.U=n),r.R=n}function Dk(t){for(;t.L;)t=t.L;return t}Ok.prototype={constructor:Ok,insert:function(t,e){var n,r,o;if(t){if(e.P=t,e.N=t.N,t.N&&(t.N.P=e),t.N=e,t.R){for(t=t.R;t.L;)t=t.L;t.L=e}else t.R=e;n=t}else this._?(t=Dk(this._),e.P=null,e.N=t,t.P=t.L=e,n=t):(e.P=e.N=null,this._=e,n=null);for(e.L=e.R=null,e.U=n,e.C=!0,t=e;n&&n.C;)n===(r=n.U).L?(o=r.R)&&o.C?(n.C=o.C=!1,r.C=!0,t=r):(t===n.R&&(jk(this,n),n=(t=n).U),n.C=!1,r.C=!0,Rk(this,r)):(o=r.L)&&o.C?(n.C=o.C=!1,r.C=!0,t=r):(t===n.L&&(Rk(this,n),n=(t=n).U),n.C=!1,r.C=!0,jk(this,r)),n=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var e,n,r,o=t.U,i=t.L,a=t.R;if(n=i?a?Dk(a):i:a,o?o.L===t?o.L=n:o.R=n:this._=n,i&&a?(r=n.C,n.C=t.C,n.L=i,i.U=n,n!==a?(o=n.U,n.U=t.U,t=n.R,o.L=t,n.R=a,a.U=n):(n.U=o,o=n,t=n.R)):(r=t.C,t=n),t&&(t.U=o),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===o.L){if((e=o.R).C&&(e.C=!1,o.C=!0,jk(this,o),e=o.R),e.L&&e.L.C||e.R&&e.R.C){e.R&&e.R.C||(e.L.C=!1,e.C=!0,Rk(this,e),e=o.R),e.C=o.C,o.C=e.R.C=!1,jk(this,o),t=this._;break}}else if((e=o.L).C&&(e.C=!1,o.C=!0,Rk(this,o),e=o.L),e.L&&e.L.C||e.R&&e.R.C){e.L&&e.L.C||(e.R.C=!1,e.C=!0,jk(this,e),e=o.L),e.C=o.C,o.C=e.L.C=!1,Rk(this,o),t=this._;break}e.C=!0,t=o,o=o.U}while(!t.C);t&&(t.C=!1)}}};var Lk=Ok;function Ik(t,e,n,r){var o=[null,null],i=c_.push(o)-1;return o.left=t,o.right=e,n&&Fk(o,t,e,n),r&&Fk(o,e,t,r),a_[t.index].halfedges.push(i),a_[e.index].halfedges.push(i),o}function Uk(t,e,n){var r=[e,n];return r.left=t,r}function Fk(t,e,n,r){t[0]||t[1]?t.left===n?t[1]=r:t[0]=r:(t[0]=r,t.left=e,t.right=n)}function Bk(t,e,n,r,o){var i,a=t[0],l=t[1],c=a[0],u=a[1],s=0,f=1,d=l[0]-c,p=l[1]-u;if(i=e-c,d||!(i>0)){if(i/=d,d<0){if(i<s)return;i<f&&(f=i)}else if(d>0){if(i>f)return;i>s&&(s=i)}if(i=r-c,d||!(i<0)){if(i/=d,d<0){if(i>f)return;i>s&&(s=i)}else if(d>0){if(i<s)return;i<f&&(f=i)}if(i=n-u,p||!(i>0)){if(i/=p,p<0){if(i<s)return;i<f&&(f=i)}else if(p>0){if(i>f)return;i>s&&(s=i)}if(i=o-u,p||!(i<0)){if(i/=p,p<0){if(i>f)return;i>s&&(s=i)}else if(p>0){if(i<s)return;i<f&&(f=i)}return!(s>0||f<1)||(s>0&&(t[0]=[c+s*d,u+s*p]),f<1&&(t[1]=[c+f*d,u+f*p]),!0)}}}}}function qk(t,e,n,r,o){var i=t[1];if(i)return!0;var a,l,c=t[0],u=t.left,s=t.right,f=u[0],d=u[1],p=s[0],m=s[1],h=(f+p)/2,g=(d+m)/2;if(m===d){if(h<e||h>=r)return;if(f>p){if(c){if(c[1]>=o)return}else c=[h,n];i=[h,o]}else{if(c){if(c[1]<n)return}else c=[h,o];i=[h,n]}}else if(l=g-(a=(f-p)/(m-d))*h,a<-1||a>1)if(f>p){if(c){if(c[1]>=o)return}else c=[(n-l)/a,n];i=[(o-l)/a,o]}else{if(c){if(c[1]<n)return}else c=[(o-l)/a,o];i=[(n-l)/a,n]}else if(d<m){if(c){if(c[0]>=r)return}else c=[e,a*e+l];i=[r,a*r+l]}else{if(c){if(c[0]<e)return}else c=[r,a*r+l];i=[e,a*e+l]}return t[0]=c,t[1]=i,!0}function Hk(t,e){var n=t.site,r=e.left,o=e.right;return n===o&&(o=r,r=n),o?Math.atan2(o[1]-r[1],o[0]-r[0]):(n===r?(r=e[1],o=e[0]):(r=e[0],o=e[1]),Math.atan2(r[0]-o[0],o[1]-r[1]))}function Wk(t,e){return e[+(e.left!==t.site)]}function $k(t,e){return e[+(e.left===t.site)]}var Vk,Yk=[];function Gk(){zk(this),this.x=this.y=this.arc=this.site=this.cy=null}function Qk(t){var e=t.P,n=t.N;if(e&&n){var r=e.site,o=t.site,i=n.site;if(r!==i){var a=o[0],l=o[1],c=r[0]-a,u=r[1]-l,s=i[0]-a,f=i[1]-l,d=2*(c*f-u*s);if(!(d>=-s_)){var p=c*c+u*u,m=s*s+f*f,h=(f*p-u*m)/d,g=(c*m-s*p)/d,b=Yk.pop()||new Gk;b.arc=t,b.site=o,b.x=h+a,b.y=(b.cy=g+l)+Math.sqrt(h*h+g*g),t.circle=b;for(var v=null,y=l_._;y;)if(b.y<y.y||b.y===y.y&&b.x<=y.x){if(!y.L){v=y.P;break}y=y.L}else{if(!y.R){v=y;break}y=y.R}l_.insert(v,b),v||(Vk=b)}}}}function Xk(t){var e=t.circle;e&&(e.P||(Vk=e.N),l_.remove(e),Yk.push(e),zk(e),t.circle=null)}var Kk=[];function Jk(){zk(this),this.edge=this.site=this.circle=null}function Zk(t){var e=Kk.pop()||new Jk;return e.site=t,e}function t_(t){Xk(t),i_.remove(t),Kk.push(t),zk(t)}function e_(t){var e=t.circle,n=e.x,r=e.cy,o=[n,r],i=t.P,a=t.N,l=[t];t_(t);for(var c=i;c.circle&&Math.abs(n-c.circle.x)<u_&&Math.abs(r-c.circle.cy)<u_;)i=c.P,l.unshift(c),t_(c),c=i;l.unshift(c),Xk(c);for(var u=a;u.circle&&Math.abs(n-u.circle.x)<u_&&Math.abs(r-u.circle.cy)<u_;)a=u.N,l.push(u),t_(u),u=a;l.push(u),Xk(u);var s,f=l.length;for(s=1;s<f;++s)u=l[s],c=l[s-1],Fk(u.edge,c.site,u.site,o);c=l[0],(u=l[f-1]).edge=Ik(c.site,u.site,null,o),Qk(c),Qk(u)}function n_(t){for(var e,n,r,o,i=t[0],a=t[1],l=i_._;l;)if((r=r_(l,a)-i)>u_)l=l.L;else{if(!((o=i-o_(l,a))>u_)){r>-u_?(e=l.P,n=l):o>-u_?(e=l,n=l.N):e=n=l;break}if(!l.R){e=l;break}l=l.R}!function(t){a_[t.index]={site:t,halfedges:[]}}(t);var c=Zk(t);if(i_.insert(e,c),e||n){if(e===n)return Xk(e),n=Zk(e.site),i_.insert(c,n),c.edge=n.edge=Ik(e.site,c.site),Qk(e),void Qk(n);if(n){Xk(e),Xk(n);var u=e.site,s=u[0],f=u[1],d=t[0]-s,p=t[1]-f,m=n.site,h=m[0]-s,g=m[1]-f,b=2*(d*g-p*h),v=d*d+p*p,y=h*h+g*g,x=[(g*v-p*y)/b+s,(d*y-h*v)/b+f];Fk(n.edge,u,m,x),c.edge=Ik(u,t,null,x),n.edge=Ik(t,m,null,x),Qk(e),Qk(n)}else c.edge=Ik(e.site,c.site)}}function r_(t,e){var n=t.site,r=n[0],o=n[1],i=o-e;if(!i)return r;var a=t.P;if(!a)return-1/0;var l=(n=a.site)[0],c=n[1],u=c-e;if(!u)return l;var s=l-r,f=1/i-1/u,d=s/u;return f?(-d+Math.sqrt(d*d-2*f*(s*s/(-2*u)-c+u/2+o-i/2)))/f+r:(r+l)/2}function o_(t,e){var n=t.N;if(n)return r_(n,e);var r=t.site;return r[1]===e?r[0]:1/0}var i_,a_,l_,c_,u_=1e-6,s_=1e-12;function f_(t,e){return e[1]-t[1]||e[0]-t[0]}function d_(t,e){var n,r,o,i=t.sort(f_).pop();for(c_=[],a_=new Array(t.length),i_=new Lk,l_=new Lk;;)if(o=Vk,i&&(!o||i[1]<o.y||i[1]===o.y&&i[0]<o.x))i[0]===n&&i[1]===r||(n_(i),n=i[0],r=i[1]),i=t.pop();else{if(!o)break;e_(o.arc)}if(function(){for(var t,e,n,r,o=0,i=a_.length;o<i;++o)if((t=a_[o])&&(r=(e=t.halfedges).length)){var a=new Array(r),l=new Array(r);for(n=0;n<r;++n)a[n]=n,l[n]=Hk(t,c_[e[n]]);for(a.sort((function(t,e){return l[e]-l[t]})),n=0;n<r;++n)l[n]=e[a[n]];for(n=0;n<r;++n)e[n]=l[n]}}(),e){var a=+e[0][0],l=+e[0][1],c=+e[1][0],u=+e[1][1];!function(t,e,n,r){for(var o,i=c_.length;i--;)qk(o=c_[i],t,e,n,r)&&Bk(o,t,e,n,r)&&(Math.abs(o[0][0]-o[1][0])>u_||Math.abs(o[0][1]-o[1][1])>u_)||delete c_[i]}(a,l,c,u),function(t,e,n,r){var o,i,a,l,c,u,s,f,d,p,m,h,g=a_.length,b=!0;for(o=0;o<g;++o)if(i=a_[o]){for(a=i.site,l=(c=i.halfedges).length;l--;)c_[c[l]]||c.splice(l,1);for(l=0,u=c.length;l<u;)m=(p=$k(i,c_[c[l]]))[0],h=p[1],f=(s=Wk(i,c_[c[++l%u]]))[0],d=s[1],(Math.abs(m-f)>u_||Math.abs(h-d)>u_)&&(c.splice(l,0,c_.push(Uk(a,p,Math.abs(m-t)<u_&&r-h>u_?[t,Math.abs(f-t)<u_?d:r]:Math.abs(h-r)<u_&&n-m>u_?[Math.abs(d-r)<u_?f:n,r]:Math.abs(m-n)<u_&&h-e>u_?[n,Math.abs(f-n)<u_?d:e]:Math.abs(h-e)<u_&&m-t>u_?[Math.abs(d-e)<u_?f:t,e]:null))-1),++u);u&&(b=!1)}if(b){var v,y,x,w=1/0;for(o=0,b=null;o<g;++o)(i=a_[o])&&(x=(v=(a=i.site)[0]-t)*v+(y=a[1]-e)*y)<w&&(w=x,b=i);if(b){var k=[t,e],_=[t,r],E=[n,r],S=[n,e];b.halfedges.push(c_.push(Uk(a=b.site,k,_))-1,c_.push(Uk(a,_,E))-1,c_.push(Uk(a,E,S))-1,c_.push(Uk(a,S,k))-1)}}for(o=0;o<g;++o)(i=a_[o])&&(i.halfedges.length||delete a_[o])}(a,l,c,u)}this.edges=c_,this.cells=a_,i_=l_=c_=a_=null}d_.prototype={constructor:d_,polygons:function(){var t=this.edges;return this.cells.map((function(e){var n=e.halfedges.map((function(n){return Wk(e,t[n])}));return n.data=e.site.data,n}))},triangles:function(){var t=[],e=this.edges;return this.cells.forEach((function(n,r){if(i=(o=n.halfedges).length)for(var o,i,a,l,c,u,s=n.site,f=-1,d=e[o[i-1]],p=d.left===s?d.right:d.left;++f<i;)a=p,p=(d=e[o[f]]).left===s?d.right:d.left,a&&p&&r<a.index&&r<p.index&&(c=a,u=p,((l=s)[0]-u[0])*(c[1]-l[1])-(l[0]-c[0])*(u[1]-l[1])<0)&&t.push([s.data,a.data,p.data])})),t},links:function(){return this.edges.filter((function(t){return t.right})).map((function(t){return{source:t.left.data,target:t.right.data}}))},find:function(t,e,n){for(var r,o,i=this,a=i._found||0,l=i.cells.length;!(o=i.cells[a]);)if(++a>=l)return null;var c=t-o.site[0],u=e-o.site[1],s=c*c+u*u;do{o=i.cells[r=a],a=null,o.halfedges.forEach((function(n){var r=i.edges[n],l=r.left;if(l!==o.site&&l||(l=r.right)){var c=t-l[0],u=e-l[1],f=c*c+u*u;f<s&&(s=f,a=l.index)}}))}while(null!==a);return i._found=r,null==n||s<=n*n?o.site:null}};var p_=function(){var t=Pk,e=Ak,n=null;function r(r){return new d_(r.map((function(n,o){var i=[Math.round(t(n,o,r)/u_)*u_,Math.round(e(n,o,r)/u_)*u_];return i.index=o,i.data=n,i})),n)}return r.polygons=function(t){return r(t).polygons()},r.links=function(t){return r(t).links()},r.triangles=function(t){return r(t).triangles()},r.x=function(e){return arguments.length?(t="function"==typeof e?e:Nk(+e),r):t},r.y=function(t){return arguments.length?(e="function"==typeof t?t:Nk(+t),r):e},r.extent=function(t){return arguments.length?(n=null==t?null:[[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]],r):n&&[[n[0][0],n[0][1]],[n[1][0],n[1][1]]]},r.size=function(t){return arguments.length?(n=null==t?null:[[0,0],[+t[0],+t[1]]],r):n&&[n[1][0]-n[0][0],n[1][1]-n[0][1]]},r},m_=function(t){return function(){return t}};function h_(t,e,n){this.target=t,this.type=e,this.transform=n}function g_(t,e,n){this.k=t,this.x=e,this.y=n}g_.prototype={constructor:g_,scale:function(t){return 1===t?this:new g_(this.k*t,this.x,this.y)},translate:function(t,e){return 0===t&0===e?this:new g_(this.k,this.x+this.k*t,this.y+this.k*e)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var b_=new g_(1,0,0);function v_(t){for(;!t.__zoom;)if(!(t=t.parentNode))return b_;return t.__zoom}function y_(){ce.stopImmediatePropagation()}v_.prototype=g_.prototype;var x_=function(){ce.preventDefault(),ce.stopImmediatePropagation()};function w_(){return!ce.ctrlKey&&!ce.button}function k_(){var t=this;return t instanceof SVGElement?(t=t.ownerSVGElement||t).hasAttribute("viewBox")?[[(t=t.viewBox.baseVal).x,t.y],[t.x+t.width,t.y+t.height]]:[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]:[[0,0],[t.clientWidth,t.clientHeight]]}function __(){return this.__zoom||b_}function E_(){return-ce.deltaY*(1===ce.deltaMode?.05:ce.deltaMode?1:.002)}function S_(){return navigator.maxTouchPoints||"ontouchstart"in this}function M_(t,e,n){var r=t.invertX(e[0][0])-n[0][0],o=t.invertX(e[1][0])-n[1][0],i=t.invertY(e[0][1])-n[0][1],a=t.invertY(e[1][1])-n[1][1];return t.translate(o>r?(r+o)/2:Math.min(0,r)||Math.max(0,o),a>i?(i+a)/2:Math.min(0,i)||Math.max(0,a))}var T_=function(){var t,e,n=w_,r=k_,o=M_,i=E_,a=S_,l=[0,1/0],c=[[-1/0,-1/0],[1/0,1/0]],u=250,s=dm,f=st("start","zoom","end"),d=0;function p(t){t.property("__zoom",__).on("wheel.zoom",x).on("mousedown.zoom",w).on("dblclick.zoom",k).filter(a).on("touchstart.zoom",_).on("touchmove.zoom",E).on("touchend.zoom touchcancel.zoom",S).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function m(t,e){return(e=Math.max(l[0],Math.min(l[1],e)))===t.k?t:new g_(e,t.x,t.y)}function h(t,e,n){var r=e[0]-n[0]*t.k,o=e[1]-n[1]*t.k;return r===t.x&&o===t.y?t:new g_(t.k,r,o)}function g(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function b(t,e,n){t.on("start.zoom",(function(){v(this,arguments).start()})).on("interrupt.zoom end.zoom",(function(){v(this,arguments).end()})).tween("zoom",(function(){var t=this,o=arguments,i=v(t,o),a=r.apply(t,o),l=null==n?g(a):"function"==typeof n?n.apply(t,o):n,c=Math.max(a[1][0]-a[0][0],a[1][1]-a[0][1]),u=t.__zoom,f="function"==typeof e?e.apply(t,o):e,d=s(u.invert(l).concat(c/u.k),f.invert(l).concat(c/f.k));return function(t){if(1===t)t=f;else{var e=d(t),n=c/e[2];t=new g_(n,l[0]-e[0]*n,l[1]-e[1]*n)}i.zoom(null,t)}}))}function v(t,e,n){return!n&&t.__zooming||new y(t,e)}function y(t,e){this.that=t,this.args=e,this.active=0,this.extent=r.apply(t,e),this.taps=0}function x(){if(n.apply(this,arguments)){var t=v(this,arguments),e=this.__zoom,r=Math.max(l[0],Math.min(l[1],e.k*Math.pow(2,i.apply(this,arguments)))),a=On(this);if(t.wheel)t.mouse[0][0]===a[0]&&t.mouse[0][1]===a[1]||(t.mouse[1]=e.invert(t.mouse[0]=a)),clearTimeout(t.wheel);else{if(e.k===r)return;t.mouse=[a,e.invert(a)],ar(this),t.start()}x_(),t.wheel=setTimeout(u,150),t.zoom("mouse",o(h(m(e,r),t.mouse[0],t.mouse[1]),t.extent,c))}function u(){t.wheel=null,t.end()}}function w(){if(!e&&n.apply(this,arguments)){var t=v(this,arguments,!0),r=ke(ce.view).on("mousemove.zoom",u,!0).on("mouseup.zoom",s,!0),i=On(this),a=ce.clientX,l=ce.clientY;Se(ce.view),y_(),t.mouse=[i,this.__zoom.invert(i)],ar(this),t.start()}function u(){if(x_(),!t.moved){var e=ce.clientX-a,n=ce.clientY-l;t.moved=e*e+n*n>d}t.zoom("mouse",o(h(t.that.__zoom,t.mouse[0]=On(t.that),t.mouse[1]),t.extent,c))}function s(){r.on("mousemove.zoom mouseup.zoom",null),Me(ce.view,t.moved),x_(),t.end()}}function k(){if(n.apply(this,arguments)){var t=this.__zoom,e=On(this),i=t.invert(e),a=t.k*(ce.shiftKey?.5:2),l=o(h(m(t,a),e,i),r.apply(this,arguments),c);x_(),u>0?ke(this).transition().duration(u).call(b,l,e):ke(this).call(p.transform,l)}}function _(){if(n.apply(this,arguments)){var e,r,o,i,a=ce.touches,l=a.length,c=v(this,arguments,ce.changedTouches.length===l);for(y_(),r=0;r<l;++r)o=a[r],i=[i=An(this,a,o.identifier),this.__zoom.invert(i),o.identifier],c.touch0?c.touch1||c.touch0[2]===i[2]||(c.touch1=i,c.taps=0):(c.touch0=i,e=!0,c.taps=1+!!t);t&&(t=clearTimeout(t)),e&&(c.taps<2&&(t=setTimeout((function(){t=null}),500)),ar(this),c.start())}}function E(){if(this.__zooming){var e,n,r,i,a=v(this,arguments),l=ce.changedTouches,u=l.length;for(x_(),t&&(t=clearTimeout(t)),a.taps=0,e=0;e<u;++e)n=l[e],r=An(this,l,n.identifier),a.touch0&&a.touch0[2]===n.identifier?a.touch0[0]=r:a.touch1&&a.touch1[2]===n.identifier&&(a.touch1[0]=r);if(n=a.that.__zoom,a.touch1){var s=a.touch0[0],f=a.touch0[1],d=a.touch1[0],p=a.touch1[1],g=(g=d[0]-s[0])*g+(g=d[1]-s[1])*g,b=(b=p[0]-f[0])*b+(b=p[1]-f[1])*b;n=m(n,Math.sqrt(g/b)),r=[(s[0]+d[0])/2,(s[1]+d[1])/2],i=[(f[0]+p[0])/2,(f[1]+p[1])/2]}else{if(!a.touch0)return;r=a.touch0[0],i=a.touch0[1]}a.zoom("touch",o(h(n,r,i),a.extent,c))}}function S(){if(this.__zooming){var t,n,r=v(this,arguments),o=ce.changedTouches,i=o.length;for(y_(),e&&clearTimeout(e),e=setTimeout((function(){e=null}),500),t=0;t<i;++t)n=o[t],r.touch0&&r.touch0[2]===n.identifier?delete r.touch0:r.touch1&&r.touch1[2]===n.identifier&&delete r.touch1;if(r.touch1&&!r.touch0&&(r.touch0=r.touch1,delete r.touch1),r.touch0)r.touch0[1]=this.__zoom.invert(r.touch0[0]);else if(r.end(),2===r.taps){var a=ke(this).on("dblclick.zoom");a&&a.apply(this,arguments)}}}return p.transform=function(t,e,n){var r=t.selection?t.selection():t;r.property("__zoom",__),t!==r?b(t,e,n):r.interrupt().each((function(){v(this,arguments).start().zoom(null,"function"==typeof e?e.apply(this,arguments):e).end()}))},p.scaleBy=function(t,e,n){p.scaleTo(t,(function(){var t=this.__zoom.k,n="function"==typeof e?e.apply(this,arguments):e;return t*n}),n)},p.scaleTo=function(t,e,n){p.transform(t,(function(){var t=r.apply(this,arguments),i=this.__zoom,a=null==n?g(t):"function"==typeof n?n.apply(this,arguments):n,l=i.invert(a),u="function"==typeof e?e.apply(this,arguments):e;return o(h(m(i,u),a,l),t,c)}),n)},p.translateBy=function(t,e,n){p.transform(t,(function(){return o(this.__zoom.translate("function"==typeof e?e.apply(this,arguments):e,"function"==typeof n?n.apply(this,arguments):n),r.apply(this,arguments),c)}))},p.translateTo=function(t,e,n,i){p.transform(t,(function(){var t=r.apply(this,arguments),a=this.__zoom,l=null==i?g(t):"function"==typeof i?i.apply(this,arguments):i;return o(b_.translate(l[0],l[1]).scale(a.k).translate("function"==typeof e?-e.apply(this,arguments):-e,"function"==typeof n?-n.apply(this,arguments):-n),t,c)}),i)},y.prototype={start:function(){return 1==++this.active&&(this.that.__zooming=this,this.emit("start")),this},zoom:function(t,e){return this.mouse&&"mouse"!==t&&(this.mouse[1]=e.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=e.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=e.invert(this.touch1[0])),this.that.__zoom=e,this.emit("zoom"),this},end:function(){return 0==--this.active&&(delete this.that.__zooming,this.emit("end")),this},emit:function(t){me(new h_(p,t,this.that.__zoom),f.apply,f,[t,this.that,this.args])}},p.wheelDelta=function(t){return arguments.length?(i="function"==typeof t?t:m_(+t),p):i},p.filter=function(t){return arguments.length?(n="function"==typeof t?t:m_(!!t),p):n},p.touchable=function(t){return arguments.length?(a="function"==typeof t?t:m_(!!t),p):a},p.extent=function(t){return arguments.length?(r="function"==typeof t?t:m_([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),p):r},p.scaleExtent=function(t){return arguments.length?(l[0]=+t[0],l[1]=+t[1],p):[l[0],l[1]]},p.translateExtent=function(t){return arguments.length?(c[0][0]=+t[0][0],c[1][0]=+t[1][0],c[0][1]=+t[0][1],c[1][1]=+t[1][1],p):[[c[0][0],c[0][1]],[c[1][0],c[1][1]]]},p.constrain=function(t){return arguments.length?(o=t,p):o},p.duration=function(t){return arguments.length?(u=+t,p):u},p.interpolate=function(t){return arguments.length?(s=t,p):s},p.on=function(){var t=f.on.apply(f,arguments);return t===f?p:t},p.clickDistance=function(t){return arguments.length?(d=(t=+t)*t,p):Math.sqrt(d)},p};n.d(e,"version",(function(){return"5.15.0"})),n.d(e,"bisect",(function(){return c})),n.d(e,"bisectRight",(function(){return a})),n.d(e,"bisectLeft",(function(){return l})),n.d(e,"ascending",(function(){return r})),n.d(e,"bisector",(function(){return o})),n.d(e,"cross",(function(){return f})),n.d(e,"descending",(function(){return d})),n.d(e,"deviation",(function(){return h})),n.d(e,"extent",(function(){return g})),n.d(e,"histogram",(function(){return P})),n.d(e,"thresholdFreedmanDiaconis",(function(){return O})),n.d(e,"thresholdScott",(function(){return z})),n.d(e,"thresholdSturges",(function(){return N})),n.d(e,"max",(function(){return j})),n.d(e,"mean",(function(){return R})),n.d(e,"median",(function(){return D})),n.d(e,"merge",(function(){return L})),n.d(e,"min",(function(){return I})),n.d(e,"pairs",(function(){return u})),n.d(e,"permute",(function(){return U})),n.d(e,"quantile",(function(){return A})),n.d(e,"range",(function(){return k})),n.d(e,"scan",(function(){return F})),n.d(e,"shuffle",(function(){return B})),n.d(e,"sum",(function(){return q})),n.d(e,"ticks",(function(){return M})),n.d(e,"tickIncrement",(function(){return T})),n.d(e,"tickStep",(function(){return C})),n.d(e,"transpose",(function(){return H})),n.d(e,"variance",(function(){return m})),n.d(e,"zip",(function(){return $})),n.d(e,"axisTop",(function(){return tt})),n.d(e,"axisRight",(function(){return et})),n.d(e,"axisBottom",(function(){return nt})),n.d(e,"axisLeft",(function(){return rt})),n.d(e,"brush",(function(){return Mo})),n.d(e,"brushX",(function(){return Eo})),n.d(e,"brushY",(function(){return So})),n.d(e,"brushSelection",(function(){return _o})),n.d(e,"chord",(function(){return Ro})),n.d(e,"ribbon",(function(){return Qo})),n.d(e,"nest",(function(){return Zo})),n.d(e,"set",(function(){return li})),n.d(e,"map",(function(){return Jo})),n.d(e,"keys",(function(){return ci})),n.d(e,"values",(function(){return ui})),n.d(e,"entries",(function(){return si})),n.d(e,"color",(function(){return He})),n.d(e,"rgb",(function(){return Ye})),n.d(e,"hsl",(function(){return tn})),n.d(e,"lab",(function(){return hi})),n.d(e,"hcl",(function(){return _i})),n.d(e,"lch",(function(){return ki})),n.d(e,"gray",(function(){return mi})),n.d(e,"cubehelix",(function(){return Ai})),n.d(e,"contours",(function(){return Bi})),n.d(e,"contourDensity",(function(){return Yi})),n.d(e,"dispatch",(function(){return st})),n.d(e,"drag",(function(){return ta})),n.d(e,"dragDisable",(function(){return Se})),n.d(e,"dragEnable",(function(){return Me})),n.d(e,"dsvFormat",(function(){return la})),n.d(e,"csvParse",(function(){return ua})),n.d(e,"csvParseRows",(function(){return sa})),n.d(e,"csvFormat",(function(){return fa})),n.d(e,"csvFormatBody",(function(){return da})),n.d(e,"csvFormatRows",(function(){return pa})),n.d(e,"csvFormatRow",(function(){return ma})),n.d(e,"csvFormatValue",(function(){return ha})),n.d(e,"tsvParse",(function(){return ba})),n.d(e,"tsvParseRows",(function(){return va})),n.d(e,"tsvFormat",(function(){return ya})),n.d(e,"tsvFormatBody",(function(){return xa})),n.d(e,"tsvFormatRows",(function(){return wa})),n.d(e,"tsvFormatRow",(function(){return ka})),n.d(e,"tsvFormatValue",(function(){return _a})),n.d(e,"autoType",(function(){return Ea})),n.d(e,"easeLinear",(function(){return Ma})),n.d(e,"easeQuad",(function(){return Na})),n.d(e,"easeQuadIn",(function(){return Ta})),n.d(e,"easeQuadOut",(function(){return Ca})),n.d(e,"easeQuadInOut",(function(){return Na})),n.d(e,"easeCubic",(function(){return Vr})),n.d(e,"easeCubicIn",(function(){return Wr})),n.d(e,"easeCubicOut",(function(){return $r})),n.d(e,"easeCubicInOut",(function(){return Vr})),n.d(e,"easePoly",(function(){return Oa})),n.d(e,"easePolyIn",(function(){return Pa})),n.d(e,"easePolyOut",(function(){return Aa})),n.d(e,"easePolyInOut",(function(){return Oa})),n.d(e,"easeSin",(function(){return La})),n.d(e,"easeSinIn",(function(){return Ra})),n.d(e,"easeSinOut",(function(){return Da})),n.d(e,"easeSinInOut",(function(){return La})),n.d(e,"easeExp",(function(){return Fa})),n.d(e,"easeExpIn",(function(){return Ia})),n.d(e,"easeExpOut",(function(){return Ua})),n.d(e,"easeExpInOut",(function(){return Fa})),n.d(e,"easeCircle",(function(){return Ha})),n.d(e,"easeCircleIn",(function(){return Ba})),n.d(e,"easeCircleOut",(function(){return qa})),n.d(e,"easeCircleInOut",(function(){return Ha})),n.d(e,"easeBounce",(function(){return $a})),n.d(e,"easeBounceIn",(function(){return Wa})),n.d(e,"easeBounceOut",(function(){return $a})),n.d(e,"easeBounceInOut",(function(){return Va})),n.d(e,"easeBack",(function(){return Qa})),n.d(e,"easeBackIn",(function(){return Ya})),n.d(e,"easeBackOut",(function(){return Ga})),n.d(e,"easeBackInOut",(function(){return Qa})),n.d(e,"easeElastic",(function(){return Ja})),n.d(e,"easeElasticIn",(function(){return Ka})),n.d(e,"easeElasticOut",(function(){return Ja})),n.d(e,"easeElasticInOut",(function(){return Za})),n.d(e,"blob",(function(){return el})),n.d(e,"buffer",(function(){return rl})),n.d(e,"dsv",(function(){return ll})),n.d(e,"csv",(function(){return cl})),n.d(e,"tsv",(function(){return ul})),n.d(e,"image",(function(){return sl})),n.d(e,"json",(function(){return dl})),n.d(e,"text",(function(){return il})),n.d(e,"xml",(function(){return ml})),n.d(e,"html",(function(){return hl})),n.d(e,"svg",(function(){return gl})),n.d(e,"forceCenter",(function(){return bl})),n.d(e,"forceCollide",(function(){return Pl})),n.d(e,"forceLink",(function(){return zl})),n.d(e,"forceManyBody",(function(){return Il})),n.d(e,"forceRadial",(function(){return Ul})),n.d(e,"forceSimulation",(function(){return Ll})),n.d(e,"forceX",(function(){return Fl})),n.d(e,"forceY",(function(){return Bl})),n.d(e,"formatDefaultLocale",(function(){return rc})),n.d(e,"format",(function(){return Ql})),n.d(e,"formatPrefix",(function(){return Xl})),n.d(e,"formatLocale",(function(){return nc})),n.d(e,"formatSpecifier",(function(){return $l})),n.d(e,"FormatSpecifier",(function(){return Vl})),n.d(e,"precisionFixed",(function(){return oc})),n.d(e,"precisionPrefix",(function(){return ic})),n.d(e,"precisionRound",(function(){return ac})),n.d(e,"geoArea",(function(){return Kc})),n.d(e,"geoBounds",(function(){return Hu})),n.d(e,"geoCentroid",(function(){return es})),n.d(e,"geoCircle",(function(){return ds})),n.d(e,"geoClipAntimeridian",(function(){return Es})),n.d(e,"geoClipCircle",(function(){return Ss})),n.d(e,"geoClipExtent",(function(){return Ps})),n.d(e,"geoClipRectangle",(function(){return Ms})),n.d(e,"geoContains",(function(){return Gs})),n.d(e,"geoDistance",(function(){return Us})),n.d(e,"geoGraticule",(function(){return Ks})),n.d(e,"geoGraticule10",(function(){return Js})),n.d(e,"geoInterpolate",(function(){return rf})),n.d(e,"geoLength",(function(){return Ds})),n.d(e,"geoPath",(function(){return nd})),n.d(e,"geoAlbers",(function(){return wd})),n.d(e,"geoAlbersUsa",(function(){return kd})),n.d(e,"geoAzimuthalEqualArea",(function(){return Md})),n.d(e,"geoAzimuthalEqualAreaRaw",(function(){return Sd})),n.d(e,"geoAzimuthalEquidistant",(function(){return Cd})),n.d(e,"geoAzimuthalEquidistantRaw",(function(){return Td})),n.d(e,"geoConicConformal",(function(){return jd})),n.d(e,"geoConicConformalRaw",(function(){return zd})),n.d(e,"geoConicEqualArea",(function(){return xd})),n.d(e,"geoConicEqualAreaRaw",(function(){return yd})),n.d(e,"geoConicEquidistant",(function(){return Id})),n.d(e,"geoConicEquidistantRaw",(function(){return Ld})),n.d(e,"geoEqualEarth",(function(){return $d})),n.d(e,"geoEqualEarthRaw",(function(){return Wd})),n.d(e,"geoEquirectangular",(function(){return Dd})),n.d(e,"geoEquirectangularRaw",(function(){return Rd})),n.d(e,"geoGnomonic",(function(){return Yd})),n.d(e,"geoGnomonicRaw",(function(){return Vd})),n.d(e,"geoIdentity",(function(){return Qd})),n.d(e,"geoProjection",(function(){return gd})),n.d(e,"geoProjectionMutator",(function(){return bd})),n.d(e,"geoMercator",(function(){return Pd})),n.d(e,"geoMercatorRaw",(function(){return Nd})),n.d(e,"geoNaturalEarth1",(function(){return Kd})),n.d(e,"geoNaturalEarth1Raw",(function(){return Xd})),n.d(e,"geoOrthographic",(function(){return Zd})),n.d(e,"geoOrthographicRaw",(function(){return Jd})),n.d(e,"geoStereographic",(function(){return ep})),n.d(e,"geoStereographicRaw",(function(){return tp})),n.d(e,"geoTransverseMercator",(function(){return rp})),n.d(e,"geoTransverseMercatorRaw",(function(){return np})),n.d(e,"geoRotation",(function(){return us})),n.d(e,"geoStream",(function(){return Hc})),n.d(e,"geoTransform",(function(){return rd})),n.d(e,"cluster",(function(){return lp})),n.d(e,"hierarchy",(function(){return up})),n.d(e,"pack",(function(){return jp})),n.d(e,"packSiblings",(function(){return Cp})),n.d(e,"packEnclose",(function(){return hp})),n.d(e,"partition",(function(){return Fp})),n.d(e,"stratify",(function(){return $p})),n.d(e,"tree",(function(){return Jp})),n.d(e,"treemap",(function(){return rm})),n.d(e,"treemapBinary",(function(){return om})),n.d(e,"treemapDice",(function(){return Up})),n.d(e,"treemapSlice",(function(){return Zp})),n.d(e,"treemapSliceDice",(function(){return im})),n.d(e,"treemapSquarify",(function(){return nm})),n.d(e,"treemapResquarify",(function(){return am})),n.d(e,"interpolate",(function(){return Cn})),n.d(e,"interpolateArray",(function(){return vn})),n.d(e,"interpolateBasis",(function(){return on})),n.d(e,"interpolateBasisClosed",(function(){return an})),n.d(e,"interpolateDate",(function(){return xn})),n.d(e,"interpolateDiscrete",(function(){return lm})),n.d(e,"interpolateHue",(function(){return cm})),n.d(e,"interpolateNumber",(function(){return wn})),n.d(e,"interpolateNumberArray",(function(){return gn})),n.d(e,"interpolateObject",(function(){return kn})),n.d(e,"interpolateRound",(function(){return um})),n.d(e,"interpolateString",(function(){return Tn})),n.d(e,"interpolateTransformCss",(function(){return fr})),n.d(e,"interpolateTransformSvg",(function(){return dr})),n.d(e,"interpolateZoom",(function(){return dm})),n.d(e,"interpolateRgb",(function(){return dn})),n.d(e,"interpolateRgbBasis",(function(){return mn})),n.d(e,"interpolateRgbBasisClosed",(function(){return hn})),n.d(e,"interpolateHsl",(function(){return mm})),n.d(e,"interpolateHslLong",(function(){return hm})),n.d(e,"interpolateLab",(function(){return gm})),n.d(e,"interpolateHcl",(function(){return vm})),n.d(e,"interpolateHclLong",(function(){return ym})),n.d(e,"interpolateCubehelix",(function(){return wm})),n.d(e,"interpolateCubehelixLong",(function(){return km})),n.d(e,"piecewise",(function(){return _m})),n.d(e,"quantize",(function(){return Em})),n.d(e,"path",(function(){return Ho})),n.d(e,"polygonArea",(function(){return Sm})),n.d(e,"polygonCentroid",(function(){return Mm})),n.d(e,"polygonHull",(function(){return Nm})),n.d(e,"polygonContains",(function(){return Pm})),n.d(e,"polygonLength",(function(){return Am})),n.d(e,"quadtree",(function(){return El})),n.d(e,"randomUniform",(function(){return zm})),n.d(e,"randomNormal",(function(){return jm})),n.d(e,"randomLogNormal",(function(){return Rm})),n.d(e,"randomBates",(function(){return Lm})),n.d(e,"randomIrwinHall",(function(){return Dm})),n.d(e,"randomExponential",(function(){return Im})),n.d(e,"scaleBand",(function(){return Vm})),n.d(e,"scalePoint",(function(){return Gm})),n.d(e,"scaleIdentity",(function(){return ch})),n.d(e,"scaleLinear",(function(){return lh})),n.d(e,"scaleLog",(function(){return bh})),n.d(e,"scaleSymlog",(function(){return wh})),n.d(e,"scaleOrdinal",(function(){return $m})),n.d(e,"scaleImplicit",(function(){return Wm})),n.d(e,"scalePow",(function(){return Mh})),n.d(e,"scaleSqrt",(function(){return Th})),n.d(e,"scaleQuantile",(function(){return Ch})),n.d(e,"scaleQuantize",(function(){return Nh})),n.d(e,"scaleThreshold",(function(){return Ph})),n.d(e,"scaleTime",(function(){return lv})),n.d(e,"scaleUtc",(function(){return bv})),n.d(e,"scaleSequential",(function(){return xv})),n.d(e,"scaleSequentialLog",(function(){return wv})),n.d(e,"scaleSequentialPow",(function(){return _v})),n.d(e,"scaleSequentialSqrt",(function(){return Ev})),n.d(e,"scaleSequentialSymlog",(function(){return kv})),n.d(e,"scaleSequentialQuantile",(function(){return Sv})),n.d(e,"scaleDiverging",(function(){return Tv})),n.d(e,"scaleDivergingLog",(function(){return Cv})),n.d(e,"scaleDivergingPow",(function(){return Pv})),n.d(e,"scaleDivergingSqrt",(function(){return Av})),n.d(e,"scaleDivergingSymlog",(function(){return Nv})),n.d(e,"tickFormat",(function(){return ih})),n.d(e,"schemeCategory10",(function(){return zv})),n.d(e,"schemeAccent",(function(){return jv})),n.d(e,"schemeDark2",(function(){return Rv})),n.d(e,"schemePaired",(function(){return Dv})),n.d(e,"schemePastel1",(function(){return Lv})),n.d(e,"schemePastel2",(function(){return Iv})),n.d(e,"schemeSet1",(function(){return Uv})),n.d(e,"schemeSet2",(function(){return Fv})),n.d(e,"schemeSet3",(function(){return Bv})),n.d(e,"schemeTableau10",(function(){return qv})),n.d(e,"interpolateBrBG",(function(){return $v})),n.d(e,"schemeBrBG",(function(){return Wv})),n.d(e,"interpolatePRGn",(function(){return Yv})),n.d(e,"schemePRGn",(function(){return Vv})),n.d(e,"interpolatePiYG",(function(){return Qv})),n.d(e,"schemePiYG",(function(){return Gv})),n.d(e,"interpolatePuOr",(function(){return Kv})),n.d(e,"schemePuOr",(function(){return Xv})),n.d(e,"interpolateRdBu",(function(){return Zv})),n.d(e,"schemeRdBu",(function(){return Jv})),n.d(e,"interpolateRdGy",(function(){return ey})),n.d(e,"schemeRdGy",(function(){return ty})),n.d(e,"interpolateRdYlBu",(function(){return ry})),n.d(e,"schemeRdYlBu",(function(){return ny})),n.d(e,"interpolateRdYlGn",(function(){return iy})),n.d(e,"schemeRdYlGn",(function(){return oy})),n.d(e,"interpolateSpectral",(function(){return ly})),n.d(e,"schemeSpectral",(function(){return ay})),n.d(e,"interpolateBuGn",(function(){return uy})),n.d(e,"schemeBuGn",(function(){return cy})),n.d(e,"interpolateBuPu",(function(){return fy})),n.d(e,"schemeBuPu",(function(){return sy})),n.d(e,"interpolateGnBu",(function(){return py})),n.d(e,"schemeGnBu",(function(){return dy})),n.d(e,"interpolateOrRd",(function(){return hy})),n.d(e,"schemeOrRd",(function(){return my})),n.d(e,"interpolatePuBuGn",(function(){return by})),n.d(e,"schemePuBuGn",(function(){return gy})),n.d(e,"interpolatePuBu",(function(){return yy})),n.d(e,"schemePuBu",(function(){return vy})),n.d(e,"interpolatePuRd",(function(){return wy})),n.d(e,"schemePuRd",(function(){return xy})),n.d(e,"interpolateRdPu",(function(){return _y})),n.d(e,"schemeRdPu",(function(){return ky})),n.d(e,"interpolateYlGnBu",(function(){return Sy})),n.d(e,"schemeYlGnBu",(function(){return Ey})),n.d(e,"interpolateYlGn",(function(){return Ty})),n.d(e,"schemeYlGn",(function(){return My})),n.d(e,"interpolateYlOrBr",(function(){return Ny})),n.d(e,"schemeYlOrBr",(function(){return Cy})),n.d(e,"interpolateYlOrRd",(function(){return Ay})),n.d(e,"schemeYlOrRd",(function(){return Py})),n.d(e,"interpolateBlues",(function(){return zy})),n.d(e,"schemeBlues",(function(){return Oy})),n.d(e,"interpolateGreens",(function(){return Ry})),n.d(e,"schemeGreens",(function(){return jy})),n.d(e,"interpolateGreys",(function(){return Ly})),n.d(e,"schemeGreys",(function(){return Dy})),n.d(e,"interpolatePurples",(function(){return Uy})),n.d(e,"schemePurples",(function(){return Iy})),n.d(e,"interpolateReds",(function(){return By})),n.d(e,"schemeReds",(function(){return Fy})),n.d(e,"interpolateOranges",(function(){return Hy})),n.d(e,"schemeOranges",(function(){return qy})),n.d(e,"interpolateCividis",(function(){return Wy})),n.d(e,"interpolateCubehelixDefault",(function(){return $y})),n.d(e,"interpolateRainbow",(function(){return Qy})),n.d(e,"interpolateWarm",(function(){return Vy})),n.d(e,"interpolateCool",(function(){return Yy})),n.d(e,"interpolateSinebow",(function(){return Zy})),n.d(e,"interpolateTurbo",(function(){return tx})),n.d(e,"interpolateViridis",(function(){return nx})),n.d(e,"interpolateMagma",(function(){return rx})),n.d(e,"interpolateInferno",(function(){return ox})),n.d(e,"interpolatePlasma",(function(){return ix})),n.d(e,"create",(function(){return ax})),n.d(e,"creator",(function(){return ne})),n.d(e,"local",(function(){return cx})),n.d(e,"matcher",(function(){return ht})),n.d(e,"mouse",(function(){return On})),n.d(e,"namespace",(function(){return _t})),n.d(e,"namespaces",(function(){return kt})),n.d(e,"clientPoint",(function(){return Pn})),n.d(e,"select",(function(){return ke})),n.d(e,"selectAll",(function(){return sx})),n.d(e,"selection",(function(){return we})),n.d(e,"selector",(function(){return dt})),n.d(e,"selectorAll",(function(){return mt})),n.d(e,"style",(function(){return jt})),n.d(e,"touch",(function(){return An})),n.d(e,"touches",(function(){return fx})),n.d(e,"window",(function(){return Pt})),n.d(e,"event",(function(){return ce})),n.d(e,"customEvent",(function(){return me})),n.d(e,"arc",(function(){return Ox})),n.d(e,"area",(function(){return Ix})),n.d(e,"line",(function(){return Lx})),n.d(e,"pie",(function(){return Bx})),n.d(e,"areaRadial",(function(){return Yx})),n.d(e,"radialArea",(function(){return Yx})),n.d(e,"lineRadial",(function(){return Vx})),n.d(e,"radialLine",(function(){return Vx})),n.d(e,"pointRadial",(function(){return Gx})),n.d(e,"linkHorizontal",(function(){return nw})),n.d(e,"linkVertical",(function(){return rw})),n.d(e,"linkRadial",(function(){return ow})),n.d(e,"symbol",(function(){return kw})),n.d(e,"symbols",(function(){return ww})),n.d(e,"symbolCircle",(function(){return iw})),n.d(e,"symbolCross",(function(){return aw})),n.d(e,"symbolDiamond",(function(){return uw})),n.d(e,"symbolSquare",(function(){return mw})),n.d(e,"symbolStar",(function(){return pw})),n.d(e,"symbolTriangle",(function(){return gw})),n.d(e,"symbolWye",(function(){return xw})),n.d(e,"curveBasisClosed",(function(){return Cw})),n.d(e,"curveBasisOpen",(function(){return Pw})),n.d(e,"curveBasis",(function(){return Mw})),n.d(e,"curveBundle",(function(){return Ow})),n.d(e,"curveCardinalClosed",(function(){return Lw})),n.d(e,"curveCardinalOpen",(function(){return Uw})),n.d(e,"curveCardinal",(function(){return Rw})),n.d(e,"curveCatmullRomClosed",(function(){return Ww})),n.d(e,"curveCatmullRomOpen",(function(){return Vw})),n.d(e,"curveCatmullRom",(function(){return qw})),n.d(e,"curveLinearClosed",(function(){return Gw})),n.d(e,"curveLinear",(function(){return jx})),n.d(e,"curveMonotoneX",(function(){return nk})),n.d(e,"curveMonotoneY",(function(){return rk})),n.d(e,"curveNatural",(function(){return ak})),n.d(e,"curveStep",(function(){return ck})),n.d(e,"curveStepAfter",(function(){return sk})),n.d(e,"curveStepBefore",(function(){return uk})),n.d(e,"stack",(function(){return mk})),n.d(e,"stackOffsetExpand",(function(){return hk})),n.d(e,"stackOffsetDiverging",(function(){return gk})),n.d(e,"stackOffsetNone",(function(){return fk})),n.d(e,"stackOffsetSilhouette",(function(){return bk})),n.d(e,"stackOffsetWiggle",(function(){return vk})),n.d(e,"stackOrderAppearance",(function(){return yk})),n.d(e,"stackOrderAscending",(function(){return wk})),n.d(e,"stackOrderDescending",(function(){return _k})),n.d(e,"stackOrderInsideOut",(function(){return Ek})),n.d(e,"stackOrderNone",(function(){return dk})),n.d(e,"stackOrderReverse",(function(){return Sk})),n.d(e,"timeInterval",(function(){return zh})),n.d(e,"timeMillisecond",(function(){return mg})),n.d(e,"timeMilliseconds",(function(){return hg})),n.d(e,"utcMillisecond",(function(){return mg})),n.d(e,"utcMilliseconds",(function(){return hg})),n.d(e,"timeSecond",(function(){return fg})),n.d(e,"timeSeconds",(function(){return dg})),n.d(e,"utcSecond",(function(){return fg})),n.d(e,"utcSeconds",(function(){return dg})),n.d(e,"timeMinute",(function(){return cg})),n.d(e,"timeMinutes",(function(){return ug})),n.d(e,"timeHour",(function(){return ig})),n.d(e,"timeHours",(function(){return ag})),n.d(e,"timeDay",(function(){return ng})),n.d(e,"timeDays",(function(){return rg})),n.d(e,"timeWeek",(function(){return Bh})),n.d(e,"timeWeeks",(function(){return Gh})),n.d(e,"timeSunday",(function(){return Bh})),n.d(e,"timeSundays",(function(){return Gh})),n.d(e,"timeMonday",(function(){return qh})),n.d(e,"timeMondays",(function(){return Qh})),n.d(e,"timeTuesday",(function(){return Hh})),n.d(e,"timeTuesdays",(function(){return Xh})),n.d(e,"timeWednesday",(function(){return Wh})),n.d(e,"timeWednesdays",(function(){return Kh})),n.d(e,"timeThursday",(function(){return $h})),n.d(e,"timeThursdays",(function(){return Jh})),n.d(e,"timeFriday",(function(){return Vh})),n.d(e,"timeFridays",(function(){return Zh})),n.d(e,"timeSaturday",(function(){return Yh})),n.d(e,"timeSaturdays",(function(){return tg})),n.d(e,"timeMonth",(function(){return Ih})),n.d(e,"timeMonths",(function(){return Uh})),n.d(e,"timeYear",(function(){return Rh})),n.d(e,"timeYears",(function(){return Dh})),n.d(e,"utcMinute",(function(){return hv})),n.d(e,"utcMinutes",(function(){return gv})),n.d(e,"utcHour",(function(){return dv})),n.d(e,"utcHours",(function(){return pv})),n.d(e,"utcDay",(function(){return Og})),n.d(e,"utcDays",(function(){return zg})),n.d(e,"utcWeek",(function(){return bg})),n.d(e,"utcWeeks",(function(){return Eg})),n.d(e,"utcSunday",(function(){return bg})),n.d(e,"utcSundays",(function(){return Eg})),n.d(e,"utcMonday",(function(){return vg})),n.d(e,"utcMondays",(function(){return Sg})),n.d(e,"utcTuesday",(function(){return yg})),n.d(e,"utcTuesdays",(function(){return Mg})),n.d(e,"utcWednesday",(function(){return xg})),n.d(e,"utcWednesdays",(function(){return Tg})),n.d(e,"utcThursday",(function(){return wg})),n.d(e,"utcThursdays",(function(){return Cg})),n.d(e,"utcFriday",(function(){return kg})),n.d(e,"utcFridays",(function(){return Ng})),n.d(e,"utcSaturday",(function(){return _g})),n.d(e,"utcSaturdays",(function(){return Pg})),n.d(e,"utcMonth",(function(){return uv})),n.d(e,"utcMonths",(function(){return sv})),n.d(e,"utcYear",(function(){return Rg})),n.d(e,"utcYears",(function(){return Dg})),n.d(e,"timeFormatDefaultLocale",(function(){return rv})),n.d(e,"timeFormat",(function(){return qg})),n.d(e,"timeParse",(function(){return Hg})),n.d(e,"utcFormat",(function(){return Wg})),n.d(e,"utcParse",(function(){return $g})),n.d(e,"timeFormatLocale",(function(){return Fg})),n.d(e,"isoFormat",(function(){return Mk})),n.d(e,"isoParse",(function(){return Tk})),n.d(e,"now",(function(){return Bn})),n.d(e,"timer",(function(){return Wn})),n.d(e,"timerFlush",(function(){return $n})),n.d(e,"timeout",(function(){return Qn})),n.d(e,"interval",(function(){return Ck})),n.d(e,"transition",(function(){return Br})),n.d(e,"active",(function(){return Xr})),n.d(e,"interrupt",(function(){return ar})),n.d(e,"voronoi",(function(){return p_})),n.d(e,"zoom",(function(){return T_})),n.d(e,"zoomTransform",(function(){return v_})),n.d(e,"zoomIdentity",(function(){return b_}))},function(t,e,n){"use strict";var r=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.default=t,e},o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var i=n(34),a=r(n(0));n(5);var l=o(n(45));e.default=function(t){var e=[],n=[],r=[],o=a.default.createElement("div",null),c=a.useState([]),u=c[0],s=c[1],f=a.useState(!1),d=f[0],p=f[1];var m=a.useRef();return a.useEffect((function(){p(!1),s([]);var o=function(r){var o=0;e.push(r),t.dataCat[r].forEach((function(t){o+=t.timing[1]/1e9})),n.push(o/t.dataCat[r].length)};for(var a in t.dataCat)o(a);var l=i.select(m.current),c=1.5*Math.max.apply(Math,n),u=document.getElementById("chartArea"),f={yheight:u.clientHeight,xwidth:u.clientWidth};window.addEventListener("resize",(function(){f.yheight=u.clientHeight,f.xwidth=u.clientWidth,d.range([0,f.xwidth]),l.select(".y-axis").style("transform","translateX("+f.xwidth+"px)").call(x),y=i.axisBottom(d).ticks(n.length+1),l.select(".x-axis").call(y),l.selectAll(".bar").attr("x",(function(t,e){return d(e)})).attr("width",d.bandwidth())}));var d=i.scaleBand().domain(n.map((function(t,e){return e}))).range([0,f.xwidth]).padding(.5),h=i.scaleLinear().domain([0,c]).range([300,0]),g=i.scaleLinear().domain([.2*c,c]).range(["blue","red"]).clamp(!0),b=l.append("defs").append("filter").attr("id","glow");b.append("feGaussianBlur").attr("stdDeviation","3.5").attr("result","coloredBlur");var v=b.append("feMerge");v.append("feMergeNode").attr("in","coloredBlur"),v.append("feMergeNode").attr("in","SourceGraphic");var y=i.axisBottom(d).ticks(n.length);l.select(".x-axis").style("transform","translateY(300px)").call(y).style("filter","url(#glow)");var x=i.axisRight(h);l.select(".y-axis").style("transform","translateX("+f.xwidth+"px)").style("filter","url(#glow)").call(x),0!==n.length&&l.select(".y-axis").append("text").attr("class","yaxislabel").attr("transform","rotate(90)").attr("y",20).attr("dy","-3em").attr("x","3em").style("text-anchor","start").style("fill","white").attr("font-size","20px").text("Avg. Response Time(s)"),l.selectAll(".bar").data(n).join("rect").attr("class","bar").style("transform","scale(1, -1)").attr("x",(function(t,e){return d(e)})).attr("y",-300).attr("width",d.bandwidth()).on("mouseenter",(function(t,n){l.selectAll(".tooltip").append("div").data([t]).join((function(e){return e.append("text").attr("y",h(t)-50)})).attr("class","tooltip").text(""+e[n]).attr("x",d(n)+d.bandwidth()/2).attr("text-anchor","middle").transition().attr("y",h(t)-80).style("opacity",1)})).on("mouseleave",(function(){return l.select(".tooltip").remove()})).on("click",(function(t,n){var o;o=""+e[n],r.includes(o)?(r=[],s([]),p(!1)):((r=[]).push(o),s([]),s([o]),p(!0))})).transition().attr("fill",g).attr("height",(function(t){return 350-h(t)}))}),[t.dataCat]),!0===d&&(o=a.default.createElement(l.default,{key:"lineGraph",timeData:t.dataCat,selectedQueries:u})),a.default.createElement(a.default.Fragment,null,a.default.createElement("svg",{ref:m},a.default.createElement("g",{className:"x-axis"}),a.default.createElement("g",{className:"y-axis"})),a.default.createElement("div",null,o))}},function(t,e,n){"use strict";var r=n(25),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function c(t){return r.isMemo(t)?a:l[t.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=a;var u=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;t.exports=function t(e,n,r){if("string"!=typeof n){if(m){var o=p(n);o&&o!==m&&t(e,o,r)}var a=s(n);f&&(a=a.concat(f(n)));for(var l=c(e),h=c(n),g=0;g<a.length;++g){var b=a[g];if(!(i[b]||r&&r[b]||h&&h[b]||l&&l[b])){var v=d(n,b);try{u(e,b,v)}catch(t){}}}}return e}},function(t,e){t.exports=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}},function(t,e,n){var r=n(26),o=n(52),i=n(53),a=n(54),l=n(57),c=n(63),u=Date.prototype.getTime;function s(t,e,n){var p=n||{};return!(p.strict?!i(t,e):t!==e)||(!t||!e||"object"!=typeof t&&"object"!=typeof e?p.strict?i(t,e):t==e:function(t,e,n){var i,p;if(typeof t!=typeof e)return!1;if(f(t)||f(e))return!1;if(t.prototype!==e.prototype)return!1;if(o(t)!==o(e))return!1;var m=a(t),h=a(e);if(m!==h)return!1;if(m||h)return t.source===e.source&&l(t)===l(e);if(c(t)&&c(e))return u.call(t)===u.call(e);var g=d(t),b=d(e);if(g!==b)return!1;if(g||b){if(t.length!==e.length)return!1;for(i=0;i<t.length;i++)if(t[i]!==e[i])return!1;return!0}if(typeof t!=typeof e)return!1;try{var v=r(t),y=r(e)}catch(t){return!1}if(v.length!==y.length)return!1;for(v.sort(),y.sort(),i=v.length-1;i>=0;i--)if(v[i]!=y[i])return!1;for(i=v.length-1;i>=0;i--)if(p=v[i],!s(t[p],e[p],n))return!1;return!0}(t,e,p))}function f(t){return null==t}function d(t){return!(!t||"object"!=typeof t||"number"!=typeof t.length)&&("function"==typeof t.copy&&"function"==typeof t.slice&&!(t.length>0&&"number"!=typeof t[0]))}t.exports=s},function(t,e,n){"use strict";
/** @license React v16.12.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(22),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,c=o?Symbol.for("react.strict_mode"):60108,u=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113;o&&Symbol.for("react.suspense_list");var m=o?Symbol.for("react.memo"):60115,h=o?Symbol.for("react.lazy"):60116;o&&Symbol.for("react.fundamental"),o&&Symbol.for("react.responder"),o&&Symbol.for("react.scope");var g="function"==typeof Symbol&&Symbol.iterator;function b(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},y={};function x(t,e,n){this.props=t,this.context=e,this.refs=y,this.updater=n||v}function w(){}function k(t,e,n){this.props=t,this.context=e,this.refs=y,this.updater=n||v}x.prototype.isReactComponent={},x.prototype.setState=function(t,e){if("object"!=typeof t&&"function"!=typeof t&&null!=t)throw Error(b(85));this.updater.enqueueSetState(this,t,e,"setState")},x.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")},w.prototype=x.prototype;var _=k.prototype=new w;_.constructor=k,r(_,x.prototype),_.isPureReactComponent=!0;var E={current:null},S={current:null},M=Object.prototype.hasOwnProperty,T={key:!0,ref:!0,__self:!0,__source:!0};function C(t,e,n){var r,o={},a=null,l=null;if(null!=e)for(r in void 0!==e.ref&&(l=e.ref),void 0!==e.key&&(a=""+e.key),e)M.call(e,r)&&!T.hasOwnProperty(r)&&(o[r]=e[r]);var c=arguments.length-2;if(1===c)o.children=n;else if(1<c){for(var u=Array(c),s=0;s<c;s++)u[s]=arguments[s+2];o.children=u}if(t&&t.defaultProps)for(r in c=t.defaultProps)void 0===o[r]&&(o[r]=c[r]);return{$$typeof:i,type:t,key:a,ref:l,props:o,_owner:S.current}}function N(t){return"object"==typeof t&&null!==t&&t.$$typeof===i}var P=/\/+/g,A=[];function O(t,e,n,r){if(A.length){var o=A.pop();return o.result=t,o.keyPrefix=e,o.func=n,o.context=r,o.count=0,o}return{result:t,keyPrefix:e,func:n,context:r,count:0}}function z(t){t.result=null,t.keyPrefix=null,t.func=null,t.context=null,t.count=0,10>A.length&&A.push(t)}function j(t,e,n){return null==t?0:function t(e,n,r,o){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var c=!1;if(null===e)c=!0;else switch(l){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case i:case a:c=!0}}if(c)return r(o,e,""===n?"."+R(e,0):n),1;if(c=0,n=""===n?".":n+":",Array.isArray(e))for(var u=0;u<e.length;u++){var s=n+R(l=e[u],u);c+=t(l,s,r,o)}else if(null===e||"object"!=typeof e?s=null:s="function"==typeof(s=g&&e[g]||e["@@iterator"])?s:null,"function"==typeof s)for(e=s.call(e),u=0;!(l=e.next()).done;)c+=t(l=l.value,s=n+R(l,u++),r,o);else if("object"===l)throw r=""+e,Error(b(31,"[object Object]"===r?"object with keys {"+Object.keys(e).join(", ")+"}":r,""));return c}(t,"",e,n)}function R(t,e){return"object"==typeof t&&null!==t&&null!=t.key?function(t){var e={"=":"=0",":":"=2"};return"$"+(""+t).replace(/[=:]/g,(function(t){return e[t]}))}(t.key):e.toString(36)}function D(t,e){t.func.call(t.context,e,t.count++)}function L(t,e,n){var r=t.result,o=t.keyPrefix;t=t.func.call(t.context,e,t.count++),Array.isArray(t)?I(t,r,n,(function(t){return t})):null!=t&&(N(t)&&(t=function(t,e){return{$$typeof:i,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}(t,o+(!t.key||e&&e.key===t.key?"":(""+t.key).replace(P,"$&/")+"/")+n)),r.push(t))}function I(t,e,n,r,o){var i="";null!=n&&(i=(""+n).replace(P,"$&/")+"/"),j(t,L,e=O(e,i,r,o)),z(e)}function U(){var t=E.current;if(null===t)throw Error(b(321));return t}var F={Children:{map:function(t,e,n){if(null==t)return t;var r=[];return I(t,r,null,e,n),r},forEach:function(t,e,n){if(null==t)return t;j(t,D,e=O(null,null,e,n)),z(e)},count:function(t){return j(t,(function(){return null}),null)},toArray:function(t){var e=[];return I(t,e,null,(function(t){return t})),e},only:function(t){if(!N(t))throw Error(b(143));return t}},createRef:function(){return{current:null}},Component:x,PureComponent:k,createContext:function(t,e){return void 0===e&&(e=null),(t={$$typeof:f,_calculateChangedBits:e,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:t},t.Consumer=t},forwardRef:function(t){return{$$typeof:d,render:t}},lazy:function(t){return{$$typeof:h,_ctor:t,_status:-1,_result:null}},memo:function(t,e){return{$$typeof:m,type:t,compare:void 0===e?null:e}},useCallback:function(t,e){return U().useCallback(t,e)},useContext:function(t,e){return U().useContext(t,e)},useEffect:function(t,e){return U().useEffect(t,e)},useImperativeHandle:function(t,e,n){return U().useImperativeHandle(t,e,n)},useDebugValue:function(){},useLayoutEffect:function(t,e){return U().useLayoutEffect(t,e)},useMemo:function(t,e){return U().useMemo(t,e)},useReducer:function(t,e,n){return U().useReducer(t,e,n)},useRef:function(t){return U().useRef(t)},useState:function(t){return U().useState(t)},Fragment:l,Profiler:u,StrictMode:c,Suspense:p,createElement:C,cloneElement:function(t,e,n){if(null==t)throw Error(b(267,t));var o=r({},t.props),a=t.key,l=t.ref,c=t._owner;if(null!=e){if(void 0!==e.ref&&(l=e.ref,c=S.current),void 0!==e.key&&(a=""+e.key),t.type&&t.type.defaultProps)var u=t.type.defaultProps;for(s in e)M.call(e,s)&&!T.hasOwnProperty(s)&&(o[s]=void 0===e[s]&&void 0!==u?u[s]:e[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){u=Array(s);for(var f=0;f<s;f++)u[f]=arguments[f+2];o.children=u}return{$$typeof:i,type:t.type,key:a,ref:l,props:o,_owner:c}},createFactory:function(t){var e=C.bind(null,t);return e.type=t,e},isValidElement:N,version:"16.12.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:E,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:S,IsSomeRendererActing:{current:!1},assign:r}},B={default:F},q=B&&F||B;t.exports=q.default||q},function(t,e,n){"use strict";
/** @license React v16.12.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(22),i=n(41);function a(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(a(227));var l=null,c={};function u(){if(l)for(var t in c){var e=c[t],n=l.indexOf(t);if(!(-1<n))throw Error(a(96,t));if(!f[n]){if(!e.extractEvents)throw Error(a(97,t));for(var r in f[n]=e,n=e.eventTypes){var o=void 0,i=n[r],u=e,p=r;if(d.hasOwnProperty(p))throw Error(a(99,p));d[p]=i;var m=i.phasedRegistrationNames;if(m){for(o in m)m.hasOwnProperty(o)&&s(m[o],u,p);o=!0}else i.registrationName?(s(i.registrationName,u,p),o=!0):o=!1;if(!o)throw Error(a(98,r,t))}}}}function s(t,e,n){if(p[t])throw Error(a(100,t));p[t]=e,m[t]=e.eventTypes[n].dependencies}var f=[],d={},p={},m={};function h(t,e,n,r,o,i,a,l,c){var u=Array.prototype.slice.call(arguments,3);try{e.apply(n,u)}catch(t){this.onError(t)}}var g=!1,b=null,v=!1,y=null,x={onError:function(t){g=!0,b=t}};function w(t,e,n,r,o,i,a,l,c){g=!1,b=null,h.apply(x,arguments)}var k=null,_=null,E=null;function S(t,e,n){var r=t.type||"unknown-event";t.currentTarget=E(n),function(t,e,n,r,o,i,l,c,u){if(w.apply(this,arguments),g){if(!g)throw Error(a(198));var s=b;g=!1,b=null,v||(v=!0,y=s)}}(r,e,void 0,t),t.currentTarget=null}function M(t,e){if(null==e)throw Error(a(30));return null==t?e:Array.isArray(t)?Array.isArray(e)?(t.push.apply(t,e),t):(t.push(e),t):Array.isArray(e)?[t].concat(e):[t,e]}function T(t,e,n){Array.isArray(t)?t.forEach(e,n):t&&e.call(n,t)}var C=null;function N(t){if(t){var e=t._dispatchListeners,n=t._dispatchInstances;if(Array.isArray(e))for(var r=0;r<e.length&&!t.isPropagationStopped();r++)S(t,e[r],n[r]);else e&&S(t,e,n);t._dispatchListeners=null,t._dispatchInstances=null,t.isPersistent()||t.constructor.release(t)}}function P(t){if(null!==t&&(C=M(C,t)),t=C,C=null,t){if(T(t,N),C)throw Error(a(95));if(v)throw t=y,v=!1,y=null,t}}var A={injectEventPluginOrder:function(t){if(l)throw Error(a(101));l=Array.prototype.slice.call(t),u()},injectEventPluginsByName:function(t){var e,n=!1;for(e in t)if(t.hasOwnProperty(e)){var r=t[e];if(!c.hasOwnProperty(e)||c[e]!==r){if(c[e])throw Error(a(102,e));c[e]=r,n=!0}}n&&u()}};function O(t,e){var n=t.stateNode;if(!n)return null;var r=k(n);if(!r)return null;n=r[e];t:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(t=t.type)||"input"===t||"select"===t||"textarea"===t)),t=!r;break t;default:t=!1}if(t)return null;if(n&&"function"!=typeof n)throw Error(a(231,e,typeof n));return n}var z=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;z.hasOwnProperty("ReactCurrentDispatcher")||(z.ReactCurrentDispatcher={current:null}),z.hasOwnProperty("ReactCurrentBatchConfig")||(z.ReactCurrentBatchConfig={suspense:null});var j=/^(.*)[\\\/]/,R="function"==typeof Symbol&&Symbol.for,D=R?Symbol.for("react.element"):60103,L=R?Symbol.for("react.portal"):60106,I=R?Symbol.for("react.fragment"):60107,U=R?Symbol.for("react.strict_mode"):60108,F=R?Symbol.for("react.profiler"):60114,B=R?Symbol.for("react.provider"):60109,q=R?Symbol.for("react.context"):60110,H=R?Symbol.for("react.concurrent_mode"):60111,W=R?Symbol.for("react.forward_ref"):60112,$=R?Symbol.for("react.suspense"):60113,V=R?Symbol.for("react.suspense_list"):60120,Y=R?Symbol.for("react.memo"):60115,G=R?Symbol.for("react.lazy"):60116;R&&Symbol.for("react.fundamental"),R&&Symbol.for("react.responder"),R&&Symbol.for("react.scope");var Q="function"==typeof Symbol&&Symbol.iterator;function X(t){return null===t||"object"!=typeof t?null:"function"==typeof(t=Q&&t[Q]||t["@@iterator"])?t:null}function K(t){if(null==t)return null;if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t;switch(t){case I:return"Fragment";case L:return"Portal";case F:return"Profiler";case U:return"StrictMode";case $:return"Suspense";case V:return"SuspenseList"}if("object"==typeof t)switch(t.$$typeof){case q:return"Context.Consumer";case B:return"Context.Provider";case W:var e=t.render;return e=e.displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case Y:return K(t.type);case G:if(t=1===t._status?t._result:null)return K(t)}return null}function J(t){var e="";do{t:switch(t.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break t;default:var r=t._debugOwner,o=t._debugSource,i=K(t.type);n=null,r&&(n=K(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(j,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}e+=n,t=t.return}while(t);return e}var Z=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),tt=null,et=null,nt=null;function rt(t){if(t=_(t)){if("function"!=typeof tt)throw Error(a(280));var e=k(t.stateNode);tt(t.stateNode,t.type,e)}}function ot(t){et?nt?nt.push(t):nt=[t]:et=t}function it(){if(et){var t=et,e=nt;if(nt=et=null,rt(t),e)for(t=0;t<e.length;t++)rt(e[t])}}function at(t,e){return t(e)}function lt(t,e,n,r){return t(e,n,r)}function ct(){}var ut=at,st=!1,ft=!1;function dt(){null===et&&null===nt||(ct(),it())}new Map;var pt=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,mt=Object.prototype.hasOwnProperty,ht={},gt={};function bt(t,e,n,r,o,i){this.acceptsBooleans=2===e||3===e||4===e,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=t,this.type=e,this.sanitizeURL=i}var vt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(t){vt[t]=new bt(t,0,!1,t,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(t){var e=t[0];vt[e]=new bt(e,1,!1,t[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(t){vt[t]=new bt(t,2,!1,t.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(t){vt[t]=new bt(t,2,!1,t,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(t){vt[t]=new bt(t,3,!1,t.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(t){vt[t]=new bt(t,3,!0,t,null,!1)})),["capture","download"].forEach((function(t){vt[t]=new bt(t,4,!1,t,null,!1)})),["cols","rows","size","span"].forEach((function(t){vt[t]=new bt(t,6,!1,t,null,!1)})),["rowSpan","start"].forEach((function(t){vt[t]=new bt(t,5,!1,t.toLowerCase(),null,!1)}));var yt=/[\-:]([a-z])/g;function xt(t){return t[1].toUpperCase()}function wt(t){switch(typeof t){case"boolean":case"number":case"object":case"string":case"undefined":return t;default:return""}}function kt(t,e,n,r){var o=vt.hasOwnProperty(e)?vt[e]:null;(null!==o?0===o.type:!r&&(2<e.length&&("o"===e[0]||"O"===e[0])&&("n"===e[1]||"N"===e[1])))||(function(t,e,n,r){if(null==e||function(t,e,n,r){if(null!==n&&0===n.type)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(t=t.toLowerCase().slice(0,5))&&"aria-"!==t);default:return!1}}(t,e,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!e;case 4:return!1===e;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}(e,n,o,r)&&(n=null),r||null===o?function(t){return!!mt.call(gt,t)||!mt.call(ht,t)&&(pt.test(t)?gt[t]=!0:(ht[t]=!0,!1))}(e)&&(null===n?t.removeAttribute(e):t.setAttribute(e,""+n)):o.mustUseProperty?t[o.propertyName]=null===n?3!==o.type&&"":n:(e=o.attributeName,r=o.attributeNamespace,null===n?t.removeAttribute(e):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?t.setAttributeNS(r,e,n):t.setAttribute(e,n))))}function _t(t){var e=t.type;return(t=t.nodeName)&&"input"===t.toLowerCase()&&("checkbox"===e||"radio"===e)}function Et(t){t._valueTracker||(t._valueTracker=function(t){var e=_t(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),r=""+t[e];if(!t.hasOwnProperty(e)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return o.call(this)},set:function(t){r=""+t,i.call(this,t)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(t){r=""+t},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}(t))}function St(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),r="";return t&&(r=_t(t)?t.checked?"true":"false":t.value),(t=r)!==n&&(e.setValue(t),!0)}function Mt(t,e){var n=e.checked;return o({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:t._wrapperState.initialChecked})}function Tt(t,e){var n=null==e.defaultValue?"":e.defaultValue,r=null!=e.checked?e.checked:e.defaultChecked;n=wt(null!=e.value?e.value:n),t._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===e.type||"radio"===e.type?null!=e.checked:null!=e.value}}function Ct(t,e){null!=(e=e.checked)&&kt(t,"checked",e,!1)}function Nt(t,e){Ct(t,e);var n=wt(e.value),r=e.type;if(null!=n)"number"===r?(0===n&&""===t.value||t.value!=n)&&(t.value=""+n):t.value!==""+n&&(t.value=""+n);else if("submit"===r||"reset"===r)return void t.removeAttribute("value");e.hasOwnProperty("value")?At(t,e.type,n):e.hasOwnProperty("defaultValue")&&At(t,e.type,wt(e.defaultValue)),null==e.checked&&null!=e.defaultChecked&&(t.defaultChecked=!!e.defaultChecked)}function Pt(t,e,n){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var r=e.type;if(!("submit"!==r&&"reset"!==r||void 0!==e.value&&null!==e.value))return;e=""+t._wrapperState.initialValue,n||e===t.value||(t.value=e),t.defaultValue=e}""!==(n=t.name)&&(t.name=""),t.defaultChecked=!t.defaultChecked,t.defaultChecked=!!t._wrapperState.initialChecked,""!==n&&(t.name=n)}function At(t,e,n){"number"===e&&t.ownerDocument.activeElement===t||(null==n?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+n&&(t.defaultValue=""+n))}function Ot(t,e){return t=o({children:void 0},e),(e=function(t){var e="";return r.Children.forEach(t,(function(t){null!=t&&(e+=t)})),e}(e.children))&&(t.children=e),t}function zt(t,e,n,r){if(t=t.options,e){e={};for(var o=0;o<n.length;o++)e["$"+n[o]]=!0;for(n=0;n<t.length;n++)o=e.hasOwnProperty("$"+t[n].value),t[n].selected!==o&&(t[n].selected=o),o&&r&&(t[n].defaultSelected=!0)}else{for(n=""+wt(n),e=null,o=0;o<t.length;o++){if(t[o].value===n)return t[o].selected=!0,void(r&&(t[o].defaultSelected=!0));null!==e||t[o].disabled||(e=t[o])}null!==e&&(e.selected=!0)}}function jt(t,e){if(null!=e.dangerouslySetInnerHTML)throw Error(a(91));return o({},e,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function Rt(t,e){var n=e.value;if(null==n){if(n=e.defaultValue,null!=(e=e.children)){if(null!=n)throw Error(a(92));if(Array.isArray(e)){if(!(1>=e.length))throw Error(a(93));e=e[0]}n=e}null==n&&(n="")}t._wrapperState={initialValue:wt(n)}}function Dt(t,e){var n=wt(e.value),r=wt(e.defaultValue);null!=n&&((n=""+n)!==t.value&&(t.value=n),null==e.defaultValue&&t.defaultValue!==n&&(t.defaultValue=n)),null!=r&&(t.defaultValue=""+r)}function Lt(t){var e=t.textContent;e===t._wrapperState.initialValue&&""!==e&&null!==e&&(t.value=e)}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(t){var e=t.replace(yt,xt);vt[e]=new bt(e,1,!1,t,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(t){var e=t.replace(yt,xt);vt[e]=new bt(e,1,!1,t,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(t){var e=t.replace(yt,xt);vt[e]=new bt(e,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(t){vt[t]=new bt(t,1,!1,t.toLowerCase(),null,!1)})),vt.xlinkHref=new bt("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(t){vt[t]=new bt(t,1,!1,t.toLowerCase(),null,!0)}));var It="http://www.w3.org/1999/xhtml",Ut="http://www.w3.org/2000/svg";function Ft(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Bt(t,e){return null==t||"http://www.w3.org/1999/xhtml"===t?Ft(e):"http://www.w3.org/2000/svg"===t&&"foreignObject"===e?"http://www.w3.org/1999/xhtml":t}var qt,Ht=function(t){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,r,o){MSApp.execUnsafeLocalFunction((function(){return t(e,n)}))}:t}((function(t,e){if(t.namespaceURI!==Ut||"innerHTML"in t)t.innerHTML=e;else{for((qt=qt||document.createElement("div")).innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=qt.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}}));function Wt(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&3===n.nodeType)return void(n.nodeValue=e)}t.textContent=e}function $t(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var Vt={animationend:$t("Animation","AnimationEnd"),animationiteration:$t("Animation","AnimationIteration"),animationstart:$t("Animation","AnimationStart"),transitionend:$t("Transition","TransitionEnd")},Yt={},Gt={};function Qt(t){if(Yt[t])return Yt[t];if(!Vt[t])return t;var e,n=Vt[t];for(e in n)if(n.hasOwnProperty(e)&&e in Gt)return Yt[t]=n[e];return t}Z&&(Gt=document.createElement("div").style,"AnimationEvent"in window||(delete Vt.animationend.animation,delete Vt.animationiteration.animation,delete Vt.animationstart.animation),"TransitionEvent"in window||delete Vt.transitionend.transition);var Xt=Qt("animationend"),Kt=Qt("animationiteration"),Jt=Qt("animationstart"),Zt=Qt("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" ");function ee(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do{0!=(1026&(e=t).effectTag)&&(n=e.return),t=e.return}while(t)}return 3===e.tag?n:null}function ne(t){if(13===t.tag){var e=t.memoizedState;if(null===e&&(null!==(t=t.alternate)&&(e=t.memoizedState)),null!==e)return e.dehydrated}return null}function re(t){if(ee(t)!==t)throw Error(a(188))}function oe(t){if(!(t=function(t){var e=t.alternate;if(!e){if(null===(e=ee(t)))throw Error(a(188));return e!==t?null:t}for(var n=t,r=e;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return re(o),t;if(i===r)return re(o),e;i=i.sibling}throw Error(a(188))}if(n.return!==r.return)n=o,r=i;else{for(var l=!1,c=o.child;c;){if(c===n){l=!0,n=o,r=i;break}if(c===r){l=!0,r=o,n=i;break}c=c.sibling}if(!l){for(c=i.child;c;){if(c===n){l=!0,n=i,r=o;break}if(c===r){l=!0,r=i,n=o;break}c=c.sibling}if(!l)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?t:e}(t)))return null;for(var e=t;;){if(5===e.tag||6===e.tag)return e;if(e.child)e.child.return=e,e=e.child;else{if(e===t)break;for(;!e.sibling;){if(!e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}}return null}var ie,ae,le,ce=!1,ue=[],se=null,fe=null,de=null,pe=new Map,me=new Map,he=[],ge="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),be="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function ve(t,e,n,r){return{blockedOn:t,topLevelType:e,eventSystemFlags:32|n,nativeEvent:r}}function ye(t,e){switch(t){case"focus":case"blur":se=null;break;case"dragenter":case"dragleave":fe=null;break;case"mouseover":case"mouseout":de=null;break;case"pointerover":case"pointerout":pe.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":me.delete(e.pointerId)}}function xe(t,e,n,r,o){return null===t||t.nativeEvent!==o?(t=ve(e,n,r,o),null!==e&&(null!==(e=ur(e))&&ae(e)),t):(t.eventSystemFlags|=r,t)}function we(t){var e=cr(t.target);if(null!==e){var n=ee(e);if(null!==n)if(13===(e=n.tag)){if(null!==(e=ne(n)))return t.blockedOn=e,void i.unstable_runWithPriority(t.priority,(function(){le(n)}))}else if(3===e&&n.stateNode.hydrate)return void(t.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}t.blockedOn=null}function ke(t){if(null!==t.blockedOn)return!1;var e=An(t.topLevelType,t.eventSystemFlags,t.nativeEvent);if(null!==e){var n=ur(e);return null!==n&&ae(n),t.blockedOn=e,!1}return!0}function _e(t,e,n){ke(t)&&n.delete(e)}function Ee(){for(ce=!1;0<ue.length;){var t=ue[0];if(null!==t.blockedOn){null!==(t=ur(t.blockedOn))&&ie(t);break}var e=An(t.topLevelType,t.eventSystemFlags,t.nativeEvent);null!==e?t.blockedOn=e:ue.shift()}null!==se&&ke(se)&&(se=null),null!==fe&&ke(fe)&&(fe=null),null!==de&&ke(de)&&(de=null),pe.forEach(_e),me.forEach(_e)}function Se(t,e){t.blockedOn===e&&(t.blockedOn=null,ce||(ce=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,Ee)))}function Me(t){function e(e){return Se(e,t)}if(0<ue.length){Se(ue[0],t);for(var n=1;n<ue.length;n++){var r=ue[n];r.blockedOn===t&&(r.blockedOn=null)}}for(null!==se&&Se(se,t),null!==fe&&Se(fe,t),null!==de&&Se(de,t),pe.forEach(e),me.forEach(e),n=0;n<he.length;n++)(r=he[n]).blockedOn===t&&(r.blockedOn=null);for(;0<he.length&&null===(n=he[0]).blockedOn;)we(n),null===n.blockedOn&&he.shift()}function Te(t){return(t=t.target||t.srcElement||window).correspondingUseElement&&(t=t.correspondingUseElement),3===t.nodeType?t.parentNode:t}function Ce(t){do{t=t.return}while(t&&5!==t.tag);return t||null}function Ne(t,e,n){(e=O(t,n.dispatchConfig.phasedRegistrationNames[e]))&&(n._dispatchListeners=M(n._dispatchListeners,e),n._dispatchInstances=M(n._dispatchInstances,t))}function Pe(t){if(t&&t.dispatchConfig.phasedRegistrationNames){for(var e=t._targetInst,n=[];e;)n.push(e),e=Ce(e);for(e=n.length;0<e--;)Ne(n[e],"captured",t);for(e=0;e<n.length;e++)Ne(n[e],"bubbled",t)}}function Ae(t,e,n){t&&n&&n.dispatchConfig.registrationName&&(e=O(t,n.dispatchConfig.registrationName))&&(n._dispatchListeners=M(n._dispatchListeners,e),n._dispatchInstances=M(n._dispatchInstances,t))}function Oe(t){t&&t.dispatchConfig.registrationName&&Ae(t._targetInst,null,t)}function ze(t){T(t,Pe)}function je(){return!0}function Re(){return!1}function De(t,e,n,r){for(var o in this.dispatchConfig=t,this._targetInst=e,this.nativeEvent=n,t=this.constructor.Interface)t.hasOwnProperty(o)&&((e=t[o])?this[o]=e(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?je:Re,this.isPropagationStopped=Re,this}function Le(t,e,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,t,e,n,r),o}return new this(t,e,n,r)}function Ie(t){if(!(t instanceof this))throw Error(a(279));t.destructor(),10>this.eventPool.length&&this.eventPool.push(t)}function Ue(t){t.eventPool=[],t.getPooled=Le,t.release=Ie}o(De.prototype,{preventDefault:function(){this.defaultPrevented=!0;var t=this.nativeEvent;t&&(t.preventDefault?t.preventDefault():"unknown"!=typeof t.returnValue&&(t.returnValue=!1),this.isDefaultPrevented=je)},stopPropagation:function(){var t=this.nativeEvent;t&&(t.stopPropagation?t.stopPropagation():"unknown"!=typeof t.cancelBubble&&(t.cancelBubble=!0),this.isPropagationStopped=je)},persist:function(){this.isPersistent=je},isPersistent:Re,destructor:function(){var t,e=this.constructor.Interface;for(t in e)this[t]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Re,this._dispatchInstances=this._dispatchListeners=null}}),De.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},De.extend=function(t){function e(){}function n(){return r.apply(this,arguments)}var r=this;e.prototype=r.prototype;var i=new e;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,t),n.extend=r.extend,Ue(n),n},Ue(De);var Fe=De.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Be=De.extend({clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),qe=De.extend({view:null,detail:null}),He=qe.extend({relatedTarget:null});function We(t){var e=t.keyCode;return"charCode"in t?0===(t=t.charCode)&&13===e&&(t=13):t=e,10===t&&(t=13),32<=t||13===t?t:0}var $e={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Ve={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Ye={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Ge(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):!!(t=Ye[t])&&!!e[t]}function Qe(){return Ge}for(var Xe=qe.extend({key:function(t){if(t.key){var e=$e[t.key]||t.key;if("Unidentified"!==e)return e}return"keypress"===t.type?13===(t=We(t))?"Enter":String.fromCharCode(t):"keydown"===t.type||"keyup"===t.type?Ve[t.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Qe,charCode:function(t){return"keypress"===t.type?We(t):0},keyCode:function(t){return"keydown"===t.type||"keyup"===t.type?t.keyCode:0},which:function(t){return"keypress"===t.type?We(t):"keydown"===t.type||"keyup"===t.type?t.keyCode:0}}),Ke=0,Je=0,Ze=!1,tn=!1,en=qe.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Qe,button:null,buttons:null,relatedTarget:function(t){return t.relatedTarget||(t.fromElement===t.srcElement?t.toElement:t.fromElement)},movementX:function(t){if("movementX"in t)return t.movementX;var e=Ke;return Ke=t.screenX,Ze?"mousemove"===t.type?t.screenX-e:0:(Ze=!0,0)},movementY:function(t){if("movementY"in t)return t.movementY;var e=Je;return Je=t.screenY,tn?"mousemove"===t.type?t.screenY-e:0:(tn=!0,0)}}),nn=en.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),rn=en.extend({dataTransfer:null}),on=qe.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Qe}),an=De.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),ln=en.extend({deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:null,deltaMode:null}),cn=[["blur","blur",0],["cancel","cancel",0],["click","click",0],["close","close",0],["contextmenu","contextMenu",0],["copy","copy",0],["cut","cut",0],["auxclick","auxClick",0],["dblclick","doubleClick",0],["dragend","dragEnd",0],["dragstart","dragStart",0],["drop","drop",0],["focus","focus",0],["input","input",0],["invalid","invalid",0],["keydown","keyDown",0],["keypress","keyPress",0],["keyup","keyUp",0],["mousedown","mouseDown",0],["mouseup","mouseUp",0],["paste","paste",0],["pause","pause",0],["play","play",0],["pointercancel","pointerCancel",0],["pointerdown","pointerDown",0],["pointerup","pointerUp",0],["ratechange","rateChange",0],["reset","reset",0],["seeked","seeked",0],["submit","submit",0],["touchcancel","touchCancel",0],["touchend","touchEnd",0],["touchstart","touchStart",0],["volumechange","volumeChange",0],["drag","drag",1],["dragenter","dragEnter",1],["dragexit","dragExit",1],["dragleave","dragLeave",1],["dragover","dragOver",1],["mousemove","mouseMove",1],["mouseout","mouseOut",1],["mouseover","mouseOver",1],["pointermove","pointerMove",1],["pointerout","pointerOut",1],["pointerover","pointerOver",1],["scroll","scroll",1],["toggle","toggle",1],["touchmove","touchMove",1],["wheel","wheel",1],["abort","abort",2],[Xt,"animationEnd",2],[Kt,"animationIteration",2],[Jt,"animationStart",2],["canplay","canPlay",2],["canplaythrough","canPlayThrough",2],["durationchange","durationChange",2],["emptied","emptied",2],["encrypted","encrypted",2],["ended","ended",2],["error","error",2],["gotpointercapture","gotPointerCapture",2],["load","load",2],["loadeddata","loadedData",2],["loadedmetadata","loadedMetadata",2],["loadstart","loadStart",2],["lostpointercapture","lostPointerCapture",2],["playing","playing",2],["progress","progress",2],["seeking","seeking",2],["stalled","stalled",2],["suspend","suspend",2],["timeupdate","timeUpdate",2],[Zt,"transitionEnd",2],["waiting","waiting",2]],un={},sn={},fn=0;fn<cn.length;fn++){var dn=cn[fn],pn=dn[0],mn=dn[1],hn=dn[2],gn="on"+(mn[0].toUpperCase()+mn.slice(1)),bn={phasedRegistrationNames:{bubbled:gn,captured:gn+"Capture"},dependencies:[pn],eventPriority:hn};un[mn]=bn,sn[pn]=bn}var vn={eventTypes:un,getEventPriority:function(t){return void 0!==(t=sn[t])?t.eventPriority:2},extractEvents:function(t,e,n,r){var o=sn[t];if(!o)return null;switch(t){case"keypress":if(0===We(n))return null;case"keydown":case"keyup":t=Xe;break;case"blur":case"focus":t=He;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":t=en;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":t=rn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":t=on;break;case Xt:case Kt:case Jt:t=Fe;break;case Zt:t=an;break;case"scroll":t=qe;break;case"wheel":t=ln;break;case"copy":case"cut":case"paste":t=Be;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":t=nn;break;default:t=De}return ze(e=t.getPooled(o,e,n,r)),e}},yn=i.unstable_UserBlockingPriority,xn=i.unstable_runWithPriority,wn=vn.getEventPriority,kn=[];function _n(t){var e=t.targetInst,n=e;do{if(!n){t.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(e=n.tag)&&6!==e||t.ancestors.push(n),n=cr(r)}while(n);for(n=0;n<t.ancestors.length;n++){e=t.ancestors[n];var o=Te(t.nativeEvent);r=t.topLevelType;for(var i=t.nativeEvent,a=t.eventSystemFlags,l=null,c=0;c<f.length;c++){var u=f[c];u&&(u=u.extractEvents(r,e,i,o,a))&&(l=M(l,u))}P(l)}}var En=!0;function Sn(t,e){Mn(e,t,!1)}function Mn(t,e,n){switch(wn(e)){case 0:var r=Tn.bind(null,e,1);break;case 1:r=Cn.bind(null,e,1);break;default:r=Pn.bind(null,e,1)}n?t.addEventListener(e,r,!0):t.addEventListener(e,r,!1)}function Tn(t,e,n){st||ct();var r=Pn,o=st;st=!0;try{lt(r,t,e,n)}finally{(st=o)||dt()}}function Cn(t,e,n){xn(yn,Pn.bind(null,t,e,n))}function Nn(t,e,n,r){if(kn.length){var o=kn.pop();o.topLevelType=t,o.eventSystemFlags=e,o.nativeEvent=n,o.targetInst=r,t=o}else t={topLevelType:t,eventSystemFlags:e,nativeEvent:n,targetInst:r,ancestors:[]};try{if(e=_n,n=t,ft)e(n,void 0);else{ft=!0;try{ut(e,n,void 0)}finally{ft=!1,dt()}}}finally{t.topLevelType=null,t.nativeEvent=null,t.targetInst=null,t.ancestors.length=0,kn.length<10&&kn.push(t)}}function Pn(t,e,n){if(En)if(0<ue.length&&-1<ge.indexOf(t))t=ve(null,t,e,n),ue.push(t);else{var r=An(t,e,n);null===r?ye(t,n):-1<ge.indexOf(t)?(t=ve(r,t,e,n),ue.push(t)):function(t,e,n,r){switch(e){case"focus":return se=xe(se,t,e,n,r),!0;case"dragenter":return fe=xe(fe,t,e,n,r),!0;case"mouseover":return de=xe(de,t,e,n,r),!0;case"pointerover":var o=r.pointerId;return pe.set(o,xe(pe.get(o)||null,t,e,n,r)),!0;case"gotpointercapture":return o=r.pointerId,me.set(o,xe(me.get(o)||null,t,e,n,r)),!0}return!1}(r,t,e,n)||(ye(t,n),Nn(t,e,n,null))}}function An(t,e,n){var r=Te(n);if(null!==(r=cr(r))){var o=ee(r);if(null===o)r=null;else{var i=o.tag;if(13===i){if(null!==(r=ne(o)))return r;r=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;r=null}else o!==r&&(r=null)}}return Nn(t,e,n,r),null}function On(t){if(!Z)return!1;var e=(t="on"+t)in document;return e||((e=document.createElement("div")).setAttribute(t,"return;"),e="function"==typeof e[t]),e}var zn=new("function"==typeof WeakMap?WeakMap:Map);function jn(t){var e=zn.get(t);return void 0===e&&(e=new Set,zn.set(t,e)),e}function Rn(t,e,n){if(!n.has(t)){switch(t){case"scroll":Mn(e,"scroll",!0);break;case"focus":case"blur":Mn(e,"focus",!0),Mn(e,"blur",!0),n.add("blur"),n.add("focus");break;case"cancel":case"close":On(t)&&Mn(e,t,!0);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(t)&&Sn(t,e)}n.add(t)}}var Dn={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Ln=["Webkit","ms","Moz","O"];function In(t,e,n){return null==e||"boolean"==typeof e||""===e?"":n||"number"!=typeof e||0===e||Dn.hasOwnProperty(t)&&Dn[t]?(""+e).trim():e+"px"}function Un(t,e){for(var n in t=t.style,e)if(e.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=In(n,e[n],r);"float"===n&&(n="cssFloat"),r?t.setProperty(n,o):t[n]=o}}Object.keys(Dn).forEach((function(t){Ln.forEach((function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),Dn[e]=Dn[t]}))}));var Fn=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Bn(t,e){if(e){if(Fn[t]&&(null!=e.children||null!=e.dangerouslySetInnerHTML))throw Error(a(137,t,""));if(null!=e.dangerouslySetInnerHTML){if(null!=e.children)throw Error(a(60));if(!("object"==typeof e.dangerouslySetInnerHTML&&"__html"in e.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=e.style&&"object"!=typeof e.style)throw Error(a(62,""))}}function qn(t,e){if(-1===t.indexOf("-"))return"string"==typeof e.is;switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Hn(t,e){var n=jn(t=9===t.nodeType||11===t.nodeType?t:t.ownerDocument);e=m[e];for(var r=0;r<e.length;r++)Rn(e[r],t,n)}function Wn(){}function $n(t){if(void 0===(t=t||("undefined"!=typeof document?document:void 0)))return null;try{return t.activeElement||t.body}catch(e){return t.body}}function Vn(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function Yn(t,e){var n,r=Vn(t);for(t=0;r;){if(3===r.nodeType){if(n=t+r.textContent.length,t<=e&&n>=e)return{node:r,offset:e-t};t=n}t:{for(;r;){if(r.nextSibling){r=r.nextSibling;break t}r=r.parentNode}r=void 0}r=Vn(r)}}function Gn(){for(var t=window,e=$n();e instanceof t.HTMLIFrameElement;){try{var n="string"==typeof e.contentWindow.location.href}catch(t){n=!1}if(!n)break;e=$n((t=e.contentWindow).document)}return e}function Qn(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&("input"===e&&("text"===t.type||"search"===t.type||"tel"===t.type||"url"===t.type||"password"===t.type)||"textarea"===e||"true"===t.contentEditable)}var Xn=null,Kn=null;function Jn(t,e){switch(t){case"button":case"input":case"select":case"textarea":return!!e.autoFocus}return!1}function Zn(t,e){return"textarea"===t||"option"===t||"noscript"===t||"string"==typeof e.children||"number"==typeof e.children||"object"==typeof e.dangerouslySetInnerHTML&&null!==e.dangerouslySetInnerHTML&&null!=e.dangerouslySetInnerHTML.__html}var tr="function"==typeof setTimeout?setTimeout:void 0,er="function"==typeof clearTimeout?clearTimeout:void 0;function nr(t){for(;null!=t;t=t.nextSibling){var e=t.nodeType;if(1===e||3===e)break}return t}function rr(t){t=t.previousSibling;for(var e=0;t;){if(8===t.nodeType){var n=t.data;if("$"===n||"$!"===n||"$?"===n){if(0===e)return t;e--}else"/$"===n&&e++}t=t.previousSibling}return null}var or=Math.random().toString(36).slice(2),ir="__reactInternalInstance$"+or,ar="__reactEventHandlers$"+or,lr="__reactContainere$"+or;function cr(t){var e=t[ir];if(e)return e;for(var n=t.parentNode;n;){if(e=n[lr]||n[ir]){if(n=e.alternate,null!==e.child||null!==n&&null!==n.child)for(t=rr(t);null!==t;){if(n=t[ir])return n;t=rr(t)}return e}n=(t=n).parentNode}return null}function ur(t){return!(t=t[ir]||t[lr])||5!==t.tag&&6!==t.tag&&13!==t.tag&&3!==t.tag?null:t}function sr(t){if(5===t.tag||6===t.tag)return t.stateNode;throw Error(a(33))}function fr(t){return t[ar]||null}var dr=null,pr=null,mr=null;function hr(){if(mr)return mr;var t,e,n=pr,r=n.length,o="value"in dr?dr.value:dr.textContent,i=o.length;for(t=0;t<r&&n[t]===o[t];t++);var a=r-t;for(e=1;e<=a&&n[r-e]===o[i-e];e++);return mr=o.slice(t,1<e?1-e:void 0)}var gr=De.extend({data:null}),br=De.extend({data:null}),vr=[9,13,27,32],yr=Z&&"CompositionEvent"in window,xr=null;Z&&"documentMode"in document&&(xr=document.documentMode);var wr=Z&&"TextEvent"in window&&!xr,kr=Z&&(!yr||xr&&8<xr&&11>=xr),_r=String.fromCharCode(32),Er={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Sr=!1;function Mr(t,e){switch(t){case"keyup":return-1!==vr.indexOf(e.keyCode);case"keydown":return 229!==e.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Tr(t){return"object"==typeof(t=t.detail)&&"data"in t?t.data:null}var Cr=!1;var Nr={eventTypes:Er,extractEvents:function(t,e,n,r){var o;if(yr)t:{switch(t){case"compositionstart":var i=Er.compositionStart;break t;case"compositionend":i=Er.compositionEnd;break t;case"compositionupdate":i=Er.compositionUpdate;break t}i=void 0}else Cr?Mr(t,n)&&(i=Er.compositionEnd):"keydown"===t&&229===n.keyCode&&(i=Er.compositionStart);return i?(kr&&"ko"!==n.locale&&(Cr||i!==Er.compositionStart?i===Er.compositionEnd&&Cr&&(o=hr()):(pr="value"in(dr=r)?dr.value:dr.textContent,Cr=!0)),i=gr.getPooled(i,e,n,r),o?i.data=o:null!==(o=Tr(n))&&(i.data=o),ze(i),o=i):o=null,(t=wr?function(t,e){switch(t){case"compositionend":return Tr(e);case"keypress":return 32!==e.which?null:(Sr=!0,_r);case"textInput":return(t=e.data)===_r&&Sr?null:t;default:return null}}(t,n):function(t,e){if(Cr)return"compositionend"===t||!yr&&Mr(t,e)?(t=hr(),mr=pr=dr=null,Cr=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return kr&&"ko"!==e.locale?null:e.data;default:return null}}(t,n))?((e=br.getPooled(Er.beforeInput,e,n,r)).data=t,ze(e)):e=null,null===o?e:null===e?o:[o,e]}},Pr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ar(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return"input"===e?!!Pr[t.type]:"textarea"===e}var Or={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function zr(t,e,n){return(t=De.getPooled(Or.change,t,e,n)).type="change",ot(n),ze(t),t}var jr=null,Rr=null;function Dr(t){P(t)}function Lr(t){if(St(sr(t)))return t}function Ir(t,e){if("change"===t)return e}var Ur=!1;function Fr(){jr&&(jr.detachEvent("onpropertychange",Br),Rr=jr=null)}function Br(t){if("value"===t.propertyName&&Lr(Rr))if(t=zr(Rr,t,Te(t)),st)P(t);else{st=!0;try{at(Dr,t)}finally{st=!1,dt()}}}function qr(t,e,n){"focus"===t?(Fr(),Rr=n,(jr=e).attachEvent("onpropertychange",Br)):"blur"===t&&Fr()}function Hr(t){if("selectionchange"===t||"keyup"===t||"keydown"===t)return Lr(Rr)}function Wr(t,e){if("click"===t)return Lr(e)}function $r(t,e){if("input"===t||"change"===t)return Lr(e)}Z&&(Ur=On("input")&&(!document.documentMode||9<document.documentMode));var Vr,Yr={eventTypes:Or,_isInputEventSupported:Ur,extractEvents:function(t,e,n,r){var o=e?sr(e):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var a=Ir;else if(Ar(o))if(Ur)a=$r;else{a=Hr;var l=qr}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=Wr);if(a&&(a=a(t,e)))return zr(a,n,r);l&&l(t,o,e),"blur"===t&&(t=o._wrapperState)&&t.controlled&&"number"===o.type&&At(o,"number",o.value)}},Gr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Qr={eventTypes:Gr,extractEvents:function(t,e,n,r,o){var i="mouseover"===t||"pointerover"===t,a="mouseout"===t||"pointerout"===t;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!a&&!i)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=e,null!==(e=(e=n.relatedTarget||n.toElement)?cr(e):null)&&(e!==(i=ee(e))||5!==e.tag&&6!==e.tag)&&(e=null)):a=null,a===e)return null;if("mouseout"===t||"mouseover"===t)var l=en,c=Gr.mouseLeave,u=Gr.mouseEnter,s="mouse";else"pointerout"!==t&&"pointerover"!==t||(l=nn,c=Gr.pointerLeave,u=Gr.pointerEnter,s="pointer");if(t=null==a?o:sr(a),o=null==e?o:sr(e),(c=l.getPooled(c,a,n,r)).type=s+"leave",c.target=t,c.relatedTarget=o,(r=l.getPooled(u,e,n,r)).type=s+"enter",r.target=o,r.relatedTarget=t,s=e,(l=a)&&s)t:{for(t=s,a=0,e=u=l;e;e=Ce(e))a++;for(e=0,o=t;o;o=Ce(o))e++;for(;0<a-e;)u=Ce(u),a--;for(;0<e-a;)t=Ce(t),e--;for(;a--;){if(u===t||u===t.alternate)break t;u=Ce(u),t=Ce(t)}u=null}else u=null;for(t=u,u=[];l&&l!==t&&(null===(a=l.alternate)||a!==t);)u.push(l),l=Ce(l);for(l=[];s&&s!==t&&(null===(a=s.alternate)||a!==t);)l.push(s),s=Ce(s);for(s=0;s<u.length;s++)Ae(u[s],"bubbled",c);for(s=l.length;0<s--;)Ae(l[s],"captured",r);return n===Vr?(Vr=null,[c]):(Vr=n,[c,r])}};var Xr="function"==typeof Object.is?Object.is:function(t,e){return t===e&&(0!==t||1/t==1/e)||t!=t&&e!=e},Kr=Object.prototype.hasOwnProperty;function Jr(t,e){if(Xr(t,e))return!0;if("object"!=typeof t||null===t||"object"!=typeof e||null===e)return!1;var n=Object.keys(t),r=Object.keys(e);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Kr.call(e,n[r])||!Xr(t[n[r]],e[n[r]]))return!1;return!0}var Zr=Z&&"documentMode"in document&&11>=document.documentMode,to={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},eo=null,no=null,ro=null,oo=!1;function io(t,e){var n=e.window===e?e.document:9===e.nodeType?e:e.ownerDocument;return oo||null==eo||eo!==$n(n)?null:("selectionStart"in(n=eo)&&Qn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},ro&&Jr(ro,n)?null:(ro=n,(t=De.getPooled(to.select,no,t,e)).type="select",t.target=eo,ze(t),t))}var ao={eventTypes:to,extractEvents:function(t,e,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){t:{i=jn(i),o=m.onSelect;for(var a=0;a<o.length;a++)if(!i.has(o[a])){i=!1;break t}i=!0}o=!i}if(o)return null;switch(i=e?sr(e):window,t){case"focus":(Ar(i)||"true"===i.contentEditable)&&(eo=i,no=e,ro=null);break;case"blur":ro=no=eo=null;break;case"mousedown":oo=!0;break;case"contextmenu":case"mouseup":case"dragend":return oo=!1,io(n,r);case"selectionchange":if(Zr)break;case"keydown":case"keyup":return io(n,r)}return null}};A.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),k=fr,_=ur,E=sr,A.injectEventPluginsByName({SimpleEventPlugin:vn,EnterLeaveEventPlugin:Qr,ChangeEventPlugin:Yr,SelectEventPlugin:ao,BeforeInputEventPlugin:Nr}),new Set;var lo=[],co=-1;function uo(t){0>co||(t.current=lo[co],lo[co]=null,co--)}function so(t,e){co++,lo[co]=t.current,t.current=e}var fo={},po={current:fo},mo={current:!1},ho=fo;function go(t,e){var n=t.type.contextTypes;if(!n)return fo;var r=t.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===e)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=e[o];return r&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=i),i}function bo(t){return null!=(t=t.childContextTypes)}function vo(t){uo(mo),uo(po)}function yo(t){uo(mo),uo(po)}function xo(t,e,n){if(po.current!==fo)throw Error(a(168));so(po,e),so(mo,n)}function wo(t,e,n){var r=t.stateNode;if(t=e.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in t))throw Error(a(108,K(e)||"Unknown",i));return o({},n,{},r)}function ko(t){var e=t.stateNode;return e=e&&e.__reactInternalMemoizedMergedChildContext||fo,ho=po.current,so(po,e),so(mo,mo.current),!0}function _o(t,e,n){var r=t.stateNode;if(!r)throw Error(a(169));n?(e=wo(t,e,ho),r.__reactInternalMemoizedMergedChildContext=e,uo(mo),uo(po),so(po,e)):uo(mo),so(mo,n)}var Eo=i.unstable_runWithPriority,So=i.unstable_scheduleCallback,Mo=i.unstable_cancelCallback,To=i.unstable_shouldYield,Co=i.unstable_requestPaint,No=i.unstable_now,Po=i.unstable_getCurrentPriorityLevel,Ao=i.unstable_ImmediatePriority,Oo=i.unstable_UserBlockingPriority,zo=i.unstable_NormalPriority,jo=i.unstable_LowPriority,Ro=i.unstable_IdlePriority,Do={},Lo=void 0!==Co?Co:function(){},Io=null,Uo=null,Fo=!1,Bo=No(),qo=1e4>Bo?No:function(){return No()-Bo};function Ho(){switch(Po()){case Ao:return 99;case Oo:return 98;case zo:return 97;case jo:return 96;case Ro:return 95;default:throw Error(a(332))}}function Wo(t){switch(t){case 99:return Ao;case 98:return Oo;case 97:return zo;case 96:return jo;case 95:return Ro;default:throw Error(a(332))}}function $o(t,e){return t=Wo(t),Eo(t,e)}function Vo(t,e,n){return t=Wo(t),So(t,e,n)}function Yo(t){return null===Io?(Io=[t],Uo=So(Ao,Qo)):Io.push(t),Do}function Go(){if(null!==Uo){var t=Uo;Uo=null,Mo(t)}Qo()}function Qo(){if(!Fo&&null!==Io){Fo=!0;var t=0;try{var e=Io;$o(99,(function(){for(;t<e.length;t++){var n=e[t];do{n=n(!0)}while(null!==n)}})),Io=null}catch(e){throw null!==Io&&(Io=Io.slice(t+1)),So(Ao,Go),e}finally{Fo=!1}}}var Xo=3;function Ko(t,e,n){return 1073741821-(1+((1073741821-t+e/10)/(n/=10)|0))*n}function Jo(t,e){if(t&&t.defaultProps)for(var n in e=o({},e),t=t.defaultProps)void 0===e[n]&&(e[n]=t[n]);return e}var Zo={current:null},ti=null,ei=null,ni=null;function ri(){ni=ei=ti=null}function oi(t,e){var n=t.type._context;so(Zo,n._currentValue),n._currentValue=e}function ii(t){var e=Zo.current;uo(Zo),t.type._context._currentValue=e}function ai(t,e){for(;null!==t;){var n=t.alternate;if(t.childExpirationTime<e)t.childExpirationTime=e,null!==n&&n.childExpirationTime<e&&(n.childExpirationTime=e);else{if(!(null!==n&&n.childExpirationTime<e))break;n.childExpirationTime=e}t=t.return}}function li(t,e){ti=t,ni=ei=null,null!==(t=t.dependencies)&&null!==t.firstContext&&(t.expirationTime>=e&&(Ba=!0),t.firstContext=null)}function ci(t,e){if(ni!==t&&!1!==e&&0!==e)if("number"==typeof e&&1073741823!==e||(ni=t,e=1073741823),e={context:t,observedBits:e,next:null},null===ei){if(null===ti)throw Error(a(308));ei=e,ti.dependencies={expirationTime:0,firstContext:e,responders:null}}else ei=ei.next=e;return t._currentValue}var ui=!1;function si(t){return{baseState:t,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function fi(t){return{baseState:t.baseState,firstUpdate:t.firstUpdate,lastUpdate:t.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function di(t,e){return{expirationTime:t,suspenseConfig:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function pi(t,e){null===t.lastUpdate?t.firstUpdate=t.lastUpdate=e:(t.lastUpdate.next=e,t.lastUpdate=e)}function mi(t,e){var n=t.alternate;if(null===n){var r=t.updateQueue,o=null;null===r&&(r=t.updateQueue=si(t.memoizedState))}else r=t.updateQueue,o=n.updateQueue,null===r?null===o?(r=t.updateQueue=si(t.memoizedState),o=n.updateQueue=si(n.memoizedState)):r=t.updateQueue=fi(o):null===o&&(o=n.updateQueue=fi(r));null===o||r===o?pi(r,e):null===r.lastUpdate||null===o.lastUpdate?(pi(r,e),pi(o,e)):(pi(r,e),o.lastUpdate=e)}function hi(t,e){var n=t.updateQueue;null===(n=null===n?t.updateQueue=si(t.memoizedState):gi(t,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=e:(n.lastCapturedUpdate.next=e,n.lastCapturedUpdate=e)}function gi(t,e){var n=t.alternate;return null!==n&&e===n.updateQueue&&(e=t.updateQueue=fi(e)),e}function bi(t,e,n,r,i,a){switch(n.tag){case 1:return"function"==typeof(t=n.payload)?t.call(a,r,i):t;case 3:t.effectTag=-4097&t.effectTag|64;case 0:if(null==(i="function"==typeof(t=n.payload)?t.call(a,r,i):t))break;return o({},r,i);case 2:ui=!0}return r}function vi(t,e,n,r,o){ui=!1;for(var i=(e=gi(t,e)).baseState,a=null,l=0,c=e.firstUpdate,u=i;null!==c;){var s=c.expirationTime;s<o?(null===a&&(a=c,i=u),l<s&&(l=s)):(fc(s,c.suspenseConfig),u=bi(t,0,c,u,n,r),null!==c.callback&&(t.effectTag|=32,c.nextEffect=null,null===e.lastEffect?e.firstEffect=e.lastEffect=c:(e.lastEffect.nextEffect=c,e.lastEffect=c))),c=c.next}for(s=null,c=e.firstCapturedUpdate;null!==c;){var f=c.expirationTime;f<o?(null===s&&(s=c,null===a&&(i=u)),l<f&&(l=f)):(u=bi(t,0,c,u,n,r),null!==c.callback&&(t.effectTag|=32,c.nextEffect=null,null===e.lastCapturedEffect?e.firstCapturedEffect=e.lastCapturedEffect=c:(e.lastCapturedEffect.nextEffect=c,e.lastCapturedEffect=c))),c=c.next}null===a&&(e.lastUpdate=null),null===s?e.lastCapturedUpdate=null:t.effectTag|=32,null===a&&null===s&&(i=u),e.baseState=i,e.firstUpdate=a,e.firstCapturedUpdate=s,dc(l),t.expirationTime=l,t.memoizedState=u}function yi(t,e,n){null!==e.firstCapturedUpdate&&(null!==e.lastUpdate&&(e.lastUpdate.next=e.firstCapturedUpdate,e.lastUpdate=e.lastCapturedUpdate),e.firstCapturedUpdate=e.lastCapturedUpdate=null),xi(e.firstEffect,n),e.firstEffect=e.lastEffect=null,xi(e.firstCapturedEffect,n),e.firstCapturedEffect=e.lastCapturedEffect=null}function xi(t,e){for(;null!==t;){var n=t.callback;if(null!==n){t.callback=null;var r=e;if("function"!=typeof n)throw Error(a(191,n));n.call(r)}t=t.nextEffect}}var wi=z.ReactCurrentBatchConfig,ki=(new r.Component).refs;function _i(t,e,n,r){n=null==(n=n(r,e=t.memoizedState))?e:o({},e,n),t.memoizedState=n,null!==(r=t.updateQueue)&&0===t.expirationTime&&(r.baseState=n)}var Ei={isMounted:function(t){return!!(t=t._reactInternalFiber)&&ee(t)===t},enqueueSetState:function(t,e,n){t=t._reactInternalFiber;var r=Jl(),o=wi.suspense;(o=di(r=Zl(r,t,o),o)).payload=e,null!=n&&(o.callback=n),mi(t,o),tc(t,r)},enqueueReplaceState:function(t,e,n){t=t._reactInternalFiber;var r=Jl(),o=wi.suspense;(o=di(r=Zl(r,t,o),o)).tag=1,o.payload=e,null!=n&&(o.callback=n),mi(t,o),tc(t,r)},enqueueForceUpdate:function(t,e){t=t._reactInternalFiber;var n=Jl(),r=wi.suspense;(r=di(n=Zl(n,t,r),r)).tag=2,null!=e&&(r.callback=e),mi(t,r),tc(t,n)}};function Si(t,e,n,r,o,i,a){return"function"==typeof(t=t.stateNode).shouldComponentUpdate?t.shouldComponentUpdate(r,i,a):!e.prototype||!e.prototype.isPureReactComponent||(!Jr(n,r)||!Jr(o,i))}function Mi(t,e,n){var r=!1,o=fo,i=e.contextType;return"object"==typeof i&&null!==i?i=ci(i):(o=bo(e)?ho:po.current,i=(r=null!=(r=e.contextTypes))?go(t,o):fo),e=new e(n,i),t.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,e.updater=Ei,t.stateNode=e,e._reactInternalFiber=t,r&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,t.__reactInternalMemoizedMaskedChildContext=i),e}function Ti(t,e,n,r){t=e.state,"function"==typeof e.componentWillReceiveProps&&e.componentWillReceiveProps(n,r),"function"==typeof e.UNSAFE_componentWillReceiveProps&&e.UNSAFE_componentWillReceiveProps(n,r),e.state!==t&&Ei.enqueueReplaceState(e,e.state,null)}function Ci(t,e,n,r){var o=t.stateNode;o.props=n,o.state=t.memoizedState,o.refs=ki;var i=e.contextType;"object"==typeof i&&null!==i?o.context=ci(i):(i=bo(e)?ho:po.current,o.context=go(t,i)),null!==(i=t.updateQueue)&&(vi(t,i,n,o,r),o.state=t.memoizedState),"function"==typeof(i=e.getDerivedStateFromProps)&&(_i(t,e,i,n),o.state=t.memoizedState),"function"==typeof e.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(e=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),e!==o.state&&Ei.enqueueReplaceState(o,o.state,null),null!==(i=t.updateQueue)&&(vi(t,i,n,o,r),o.state=t.memoizedState)),"function"==typeof o.componentDidMount&&(t.effectTag|=4)}var Ni=Array.isArray;function Pi(t,e,n){if(null!==(t=n.ref)&&"function"!=typeof t&&"object"!=typeof t){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,t));var o=""+t;return null!==e&&null!==e.ref&&"function"==typeof e.ref&&e.ref._stringRef===o?e.ref:((e=function(t){var e=r.refs;e===ki&&(e=r.refs={}),null===t?delete e[o]:e[o]=t})._stringRef=o,e)}if("string"!=typeof t)throw Error(a(284));if(!n._owner)throw Error(a(290,t))}return t}function Ai(t,e){if("textarea"!==t.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(e)?"object with keys {"+Object.keys(e).join(", ")+"}":e,""))}function Oi(t){function e(e,n){if(t){var r=e.lastEffect;null!==r?(r.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!t)return null;for(;null!==r;)e(n,r),r=r.sibling;return null}function r(t,e){for(t=new Map;null!==e;)null!==e.key?t.set(e.key,e):t.set(e.index,e),e=e.sibling;return t}function o(t,e,n){return(t=Oc(t,e)).index=0,t.sibling=null,t}function i(e,n,r){return e.index=r,t?null!==(r=e.alternate)?(r=r.index)<n?(e.effectTag=2,n):r:(e.effectTag=2,n):n}function l(e){return t&&null===e.alternate&&(e.effectTag=2),e}function c(t,e,n,r){return null===e||6!==e.tag?((e=Rc(n,t.mode,r)).return=t,e):((e=o(e,n)).return=t,e)}function u(t,e,n,r){return null!==e&&e.elementType===n.type?((r=o(e,n.props)).ref=Pi(t,e,n),r.return=t,r):((r=zc(n.type,n.key,n.props,null,t.mode,r)).ref=Pi(t,e,n),r.return=t,r)}function s(t,e,n,r){return null===e||4!==e.tag||e.stateNode.containerInfo!==n.containerInfo||e.stateNode.implementation!==n.implementation?((e=Dc(n,t.mode,r)).return=t,e):((e=o(e,n.children||[])).return=t,e)}function f(t,e,n,r,i){return null===e||7!==e.tag?((e=jc(n,t.mode,r,i)).return=t,e):((e=o(e,n)).return=t,e)}function d(t,e,n){if("string"==typeof e||"number"==typeof e)return(e=Rc(""+e,t.mode,n)).return=t,e;if("object"==typeof e&&null!==e){switch(e.$$typeof){case D:return(n=zc(e.type,e.key,e.props,null,t.mode,n)).ref=Pi(t,null,e),n.return=t,n;case L:return(e=Dc(e,t.mode,n)).return=t,e}if(Ni(e)||X(e))return(e=jc(e,t.mode,n,null)).return=t,e;Ai(t,e)}return null}function p(t,e,n,r){var o=null!==e?e.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:c(t,e,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case D:return n.key===o?n.type===I?f(t,e,n.props.children,r,o):u(t,e,n,r):null;case L:return n.key===o?s(t,e,n,r):null}if(Ni(n)||X(n))return null!==o?null:f(t,e,n,r,null);Ai(t,n)}return null}function m(t,e,n,r,o){if("string"==typeof r||"number"==typeof r)return c(e,t=t.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case D:return t=t.get(null===r.key?n:r.key)||null,r.type===I?f(e,t,r.props.children,o,r.key):u(e,t,r,o);case L:return s(e,t=t.get(null===r.key?n:r.key)||null,r,o)}if(Ni(r)||X(r))return f(e,t=t.get(n)||null,r,o,null);Ai(e,r)}return null}function h(o,a,l,c){for(var u=null,s=null,f=a,h=a=0,g=null;null!==f&&h<l.length;h++){f.index>h?(g=f,f=null):g=f.sibling;var b=p(o,f,l[h],c);if(null===b){null===f&&(f=g);break}t&&f&&null===b.alternate&&e(o,f),a=i(b,a,h),null===s?u=b:s.sibling=b,s=b,f=g}if(h===l.length)return n(o,f),u;if(null===f){for(;h<l.length;h++)null!==(f=d(o,l[h],c))&&(a=i(f,a,h),null===s?u=f:s.sibling=f,s=f);return u}for(f=r(o,f);h<l.length;h++)null!==(g=m(f,o,h,l[h],c))&&(t&&null!==g.alternate&&f.delete(null===g.key?h:g.key),a=i(g,a,h),null===s?u=g:s.sibling=g,s=g);return t&&f.forEach((function(t){return e(o,t)})),u}function g(o,l,c,u){var s=X(c);if("function"!=typeof s)throw Error(a(150));if(null==(c=s.call(c)))throw Error(a(151));for(var f=s=null,h=l,g=l=0,b=null,v=c.next();null!==h&&!v.done;g++,v=c.next()){h.index>g?(b=h,h=null):b=h.sibling;var y=p(o,h,v.value,u);if(null===y){null===h&&(h=b);break}t&&h&&null===y.alternate&&e(o,h),l=i(y,l,g),null===f?s=y:f.sibling=y,f=y,h=b}if(v.done)return n(o,h),s;if(null===h){for(;!v.done;g++,v=c.next())null!==(v=d(o,v.value,u))&&(l=i(v,l,g),null===f?s=v:f.sibling=v,f=v);return s}for(h=r(o,h);!v.done;g++,v=c.next())null!==(v=m(h,o,g,v.value,u))&&(t&&null!==v.alternate&&h.delete(null===v.key?g:v.key),l=i(v,l,g),null===f?s=v:f.sibling=v,f=v);return t&&h.forEach((function(t){return e(o,t)})),s}return function(t,r,i,c){var u="object"==typeof i&&null!==i&&i.type===I&&null===i.key;u&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case D:t:{for(s=i.key,u=r;null!==u;){if(u.key===s){if(7===u.tag?i.type===I:u.elementType===i.type){n(t,u.sibling),(r=o(u,i.type===I?i.props.children:i.props)).ref=Pi(t,u,i),r.return=t,t=r;break t}n(t,u);break}e(t,u),u=u.sibling}i.type===I?((r=jc(i.props.children,t.mode,c,i.key)).return=t,t=r):((c=zc(i.type,i.key,i.props,null,t.mode,c)).ref=Pi(t,r,i),c.return=t,t=c)}return l(t);case L:t:{for(u=i.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(t,r.sibling),(r=o(r,i.children||[])).return=t,t=r;break t}n(t,r);break}e(t,r),r=r.sibling}(r=Dc(i,t.mode,c)).return=t,t=r}return l(t)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(t,r.sibling),(r=o(r,i)).return=t,t=r):(n(t,r),(r=Rc(i,t.mode,c)).return=t,t=r),l(t);if(Ni(i))return h(t,r,i,c);if(X(i))return g(t,r,i,c);if(s&&Ai(t,i),void 0===i&&!u)switch(t.tag){case 1:case 0:throw t=t.type,Error(a(152,t.displayName||t.name||"Component"))}return n(t,r)}}var zi=Oi(!0),ji=Oi(!1),Ri={},Di={current:Ri},Li={current:Ri},Ii={current:Ri};function Ui(t){if(t===Ri)throw Error(a(174));return t}function Fi(t,e){so(Ii,e),so(Li,t),so(Di,Ri);var n=e.nodeType;switch(n){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:Bt(null,"");break;default:e=Bt(e=(n=8===n?e.parentNode:e).namespaceURI||null,n=n.tagName)}uo(Di),so(Di,e)}function Bi(t){uo(Di),uo(Li),uo(Ii)}function qi(t){Ui(Ii.current);var e=Ui(Di.current),n=Bt(e,t.type);e!==n&&(so(Li,t),so(Di,n))}function Hi(t){Li.current===t&&(uo(Di),uo(Li))}var Wi={current:0};function $i(t){for(var e=t;null!==e;){if(13===e.tag){var n=e.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return e}else if(19===e.tag&&void 0!==e.memoizedProps.revealOrder){if(0!=(64&e.effectTag))return e}else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break;for(;null===e.sibling;){if(null===e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}function Vi(t,e){return{responder:t,props:e}}var Yi=z.ReactCurrentDispatcher,Gi=z.ReactCurrentBatchConfig,Qi=0,Xi=null,Ki=null,Ji=null,Zi=null,ta=null,ea=null,na=0,ra=null,oa=0,ia=!1,aa=null,la=0;function ca(){throw Error(a(321))}function ua(t,e){if(null===e)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!Xr(t[n],e[n]))return!1;return!0}function sa(t,e,n,r,o,i){if(Qi=i,Xi=e,Ji=null!==t?t.memoizedState:null,Yi.current=null===Ji?Na:Pa,e=n(r,o),ia){do{ia=!1,la+=1,Ji=null!==t?t.memoizedState:null,ea=Zi,ra=ta=Ki=null,Yi.current=Pa,e=n(r,o)}while(ia);aa=null,la=0}if(Yi.current=Ca,(t=Xi).memoizedState=Zi,t.expirationTime=na,t.updateQueue=ra,t.effectTag|=oa,t=null!==Ki&&null!==Ki.next,Qi=0,ea=ta=Zi=Ji=Ki=Xi=null,na=0,ra=null,oa=0,t)throw Error(a(300));return e}function fa(){Yi.current=Ca,Qi=0,ea=ta=Zi=Ji=Ki=Xi=null,na=0,ra=null,oa=0,ia=!1,aa=null,la=0}function da(){var t={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===ta?Zi=ta=t:ta=ta.next=t,ta}function pa(){if(null!==ea)ea=(ta=ea).next,Ji=null!==(Ki=Ji)?Ki.next:null;else{if(null===Ji)throw Error(a(310));var t={memoizedState:(Ki=Ji).memoizedState,baseState:Ki.baseState,queue:Ki.queue,baseUpdate:Ki.baseUpdate,next:null};ta=null===ta?Zi=t:ta.next=t,Ji=Ki.next}return ta}function ma(t,e){return"function"==typeof e?e(t):e}function ha(t){var e=pa(),n=e.queue;if(null===n)throw Error(a(311));if(n.lastRenderedReducer=t,0<la){var r=n.dispatch;if(null!==aa){var o=aa.get(n);if(void 0!==o){aa.delete(n);var i=e.memoizedState;do{i=t(i,o.action),o=o.next}while(null!==o);return Xr(i,e.memoizedState)||(Ba=!0),e.memoizedState=i,e.baseUpdate===n.last&&(e.baseState=i),n.lastRenderedState=i,[i,r]}}return[e.memoizedState,r]}r=n.last;var l=e.baseUpdate;if(i=e.baseState,null!==l?(null!==r&&(r.next=null),r=l.next):r=null!==r?r.next:null,null!==r){var c=o=null,u=r,s=!1;do{var f=u.expirationTime;f<Qi?(s||(s=!0,c=l,o=i),f>na&&dc(na=f)):(fc(f,u.suspenseConfig),i=u.eagerReducer===t?u.eagerState:t(i,u.action)),l=u,u=u.next}while(null!==u&&u!==r);s||(c=l,o=i),Xr(i,e.memoizedState)||(Ba=!0),e.memoizedState=i,e.baseUpdate=c,e.baseState=o,n.lastRenderedState=i}return[e.memoizedState,n.dispatch]}function ga(t){var e=da();return"function"==typeof t&&(t=t()),e.memoizedState=e.baseState=t,t=(t=e.queue={last:null,dispatch:null,lastRenderedReducer:ma,lastRenderedState:t}).dispatch=Ta.bind(null,Xi,t),[e.memoizedState,t]}function ba(t){return ha(ma)}function va(t,e,n,r){return t={tag:t,create:e,destroy:n,deps:r,next:null},null===ra?(ra={lastEffect:null}).lastEffect=t.next=t:null===(e=ra.lastEffect)?ra.lastEffect=t.next=t:(n=e.next,e.next=t,t.next=n,ra.lastEffect=t),t}function ya(t,e,n,r){var o=da();oa|=t,o.memoizedState=va(e,n,void 0,void 0===r?null:r)}function xa(t,e,n,r){var o=pa();r=void 0===r?null:r;var i=void 0;if(null!==Ki){var a=Ki.memoizedState;if(i=a.destroy,null!==r&&ua(r,a.deps))return void va(0,n,i,r)}oa|=t,o.memoizedState=va(e,n,i,r)}function wa(t,e){return ya(516,192,t,e)}function ka(t,e){return xa(516,192,t,e)}function _a(t,e){return"function"==typeof e?(t=t(),e(t),function(){e(null)}):null!=e?(t=t(),e.current=t,function(){e.current=null}):void 0}function Ea(){}function Sa(t,e){return da().memoizedState=[t,void 0===e?null:e],t}function Ma(t,e){var n=pa();e=void 0===e?null:e;var r=n.memoizedState;return null!==r&&null!==e&&ua(e,r[1])?r[0]:(n.memoizedState=[t,e],t)}function Ta(t,e,n){if(!(25>la))throw Error(a(301));var r=t.alternate;if(t===Xi||null!==r&&r===Xi)if(ia=!0,t={expirationTime:Qi,suspenseConfig:null,action:n,eagerReducer:null,eagerState:null,next:null},null===aa&&(aa=new Map),void 0===(n=aa.get(e)))aa.set(e,t);else{for(e=n;null!==e.next;)e=e.next;e.next=t}else{var o=Jl(),i=wi.suspense;i={expirationTime:o=Zl(o,t,i),suspenseConfig:i,action:n,eagerReducer:null,eagerState:null,next:null};var l=e.last;if(null===l)i.next=i;else{var c=l.next;null!==c&&(i.next=c),l.next=i}if(e.last=i,0===t.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=e.lastRenderedReducer))try{var u=e.lastRenderedState,s=r(u,n);if(i.eagerReducer=r,i.eagerState=s,Xr(s,u))return}catch(t){}tc(t,o)}}var Ca={readContext:ci,useCallback:ca,useContext:ca,useEffect:ca,useImperativeHandle:ca,useLayoutEffect:ca,useMemo:ca,useReducer:ca,useRef:ca,useState:ca,useDebugValue:ca,useResponder:ca,useDeferredValue:ca,useTransition:ca},Na={readContext:ci,useCallback:Sa,useContext:ci,useEffect:wa,useImperativeHandle:function(t,e,n){return n=null!=n?n.concat([t]):null,ya(4,36,_a.bind(null,e,t),n)},useLayoutEffect:function(t,e){return ya(4,36,t,e)},useMemo:function(t,e){var n=da();return e=void 0===e?null:e,t=t(),n.memoizedState=[t,e],t},useReducer:function(t,e,n){var r=da();return e=void 0!==n?n(e):e,r.memoizedState=r.baseState=e,t=(t=r.queue={last:null,dispatch:null,lastRenderedReducer:t,lastRenderedState:e}).dispatch=Ta.bind(null,Xi,t),[r.memoizedState,t]},useRef:function(t){return t={current:t},da().memoizedState=t},useState:ga,useDebugValue:Ea,useResponder:Vi,useDeferredValue:function(t,e){var n=ga(t),r=n[0],o=n[1];return wa((function(){i.unstable_next((function(){var n=Gi.suspense;Gi.suspense=void 0===e?null:e;try{o(t)}finally{Gi.suspense=n}}))}),[t,e]),r},useTransition:function(t){var e=ga(!1),n=e[0],r=e[1];return[Sa((function(e){r(!0),i.unstable_next((function(){var n=Gi.suspense;Gi.suspense=void 0===t?null:t;try{r(!1),e()}finally{Gi.suspense=n}}))}),[t,n]),n]}},Pa={readContext:ci,useCallback:Ma,useContext:ci,useEffect:ka,useImperativeHandle:function(t,e,n){return n=null!=n?n.concat([t]):null,xa(4,36,_a.bind(null,e,t),n)},useLayoutEffect:function(t,e){return xa(4,36,t,e)},useMemo:function(t,e){var n=pa();e=void 0===e?null:e;var r=n.memoizedState;return null!==r&&null!==e&&ua(e,r[1])?r[0]:(t=t(),n.memoizedState=[t,e],t)},useReducer:ha,useRef:function(){return pa().memoizedState},useState:ba,useDebugValue:Ea,useResponder:Vi,useDeferredValue:function(t,e){var n=ba(),r=n[0],o=n[1];return ka((function(){i.unstable_next((function(){var n=Gi.suspense;Gi.suspense=void 0===e?null:e;try{o(t)}finally{Gi.suspense=n}}))}),[t,e]),r},useTransition:function(t){var e=ba(),n=e[0],r=e[1];return[Ma((function(e){r(!0),i.unstable_next((function(){var n=Gi.suspense;Gi.suspense=void 0===t?null:t;try{r(!1),e()}finally{Gi.suspense=n}}))}),[t,n]),n]}},Aa=null,Oa=null,za=!1;function ja(t,e){var n=Pc(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=e,n.return=t,n.effectTag=8,null!==t.lastEffect?(t.lastEffect.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n}function Ra(t,e){switch(t.tag){case 5:var n=t.type;return null!==(e=1!==e.nodeType||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e)&&(t.stateNode=e,!0);case 6:return null!==(e=""===t.pendingProps||3!==e.nodeType?null:e)&&(t.stateNode=e,!0);case 13:default:return!1}}function Da(t){if(za){var e=Oa;if(e){var n=e;if(!Ra(t,e)){if(!(e=nr(n.nextSibling))||!Ra(t,e))return t.effectTag=-1025&t.effectTag|2,za=!1,void(Aa=t);ja(Aa,n)}Aa=t,Oa=nr(e.firstChild)}else t.effectTag=-1025&t.effectTag|2,za=!1,Aa=t}}function La(t){for(t=t.return;null!==t&&5!==t.tag&&3!==t.tag&&13!==t.tag;)t=t.return;Aa=t}function Ia(t){if(t!==Aa)return!1;if(!za)return La(t),za=!0,!1;var e=t.type;if(5!==t.tag||"head"!==e&&"body"!==e&&!Zn(e,t.memoizedProps))for(e=Oa;e;)ja(t,e),e=nr(e.nextSibling);if(La(t),13===t.tag){if(!(t=null!==(t=t.memoizedState)?t.dehydrated:null))throw Error(a(317));t:{for(t=t.nextSibling,e=0;t;){if(8===t.nodeType){var n=t.data;if("/$"===n){if(0===e){Oa=nr(t.nextSibling);break t}e--}else"$"!==n&&"$!"!==n&&"$?"!==n||e++}t=t.nextSibling}Oa=null}}else Oa=Aa?nr(t.stateNode.nextSibling):null;return!0}function Ua(){Oa=Aa=null,za=!1}var Fa=z.ReactCurrentOwner,Ba=!1;function qa(t,e,n,r){e.child=null===t?ji(e,null,n,r):zi(e,t.child,n,r)}function Ha(t,e,n,r,o){n=n.render;var i=e.ref;return li(e,o),r=sa(t,e,n,r,i,o),null===t||Ba?(e.effectTag|=1,qa(t,e,r,o),e.child):(e.updateQueue=t.updateQueue,e.effectTag&=-517,t.expirationTime<=o&&(t.expirationTime=0),il(t,e,o))}function Wa(t,e,n,r,o,i){if(null===t){var a=n.type;return"function"!=typeof a||Ac(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((t=zc(n.type,null,r,null,e.mode,i)).ref=e.ref,t.return=e,e.child=t):(e.tag=15,e.type=a,$a(t,e,a,r,o,i))}return a=t.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:Jr)(o,r)&&t.ref===e.ref)?il(t,e,i):(e.effectTag|=1,(t=Oc(a,r)).ref=e.ref,t.return=e,e.child=t)}function $a(t,e,n,r,o,i){return null!==t&&Jr(t.memoizedProps,r)&&t.ref===e.ref&&(Ba=!1,o<i)?il(t,e,i):Ya(t,e,n,r,i)}function Va(t,e){var n=e.ref;(null===t&&null!==n||null!==t&&t.ref!==n)&&(e.effectTag|=128)}function Ya(t,e,n,r,o){var i=bo(n)?ho:po.current;return i=go(e,i),li(e,o),n=sa(t,e,n,r,i,o),null===t||Ba?(e.effectTag|=1,qa(t,e,n,o),e.child):(e.updateQueue=t.updateQueue,e.effectTag&=-517,t.expirationTime<=o&&(t.expirationTime=0),il(t,e,o))}function Ga(t,e,n,r,o){if(bo(n)){var i=!0;ko(e)}else i=!1;if(li(e,o),null===e.stateNode)null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),Mi(e,n,r),Ci(e,n,r,o),r=!0;else if(null===t){var a=e.stateNode,l=e.memoizedProps;a.props=l;var c=a.context,u=n.contextType;"object"==typeof u&&null!==u?u=ci(u):u=go(e,u=bo(n)?ho:po.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||c!==u)&&Ti(e,a,r,u),ui=!1;var d=e.memoizedState;c=a.state=d;var p=e.updateQueue;null!==p&&(vi(e,p,r,a,o),c=e.memoizedState),l!==r||d!==c||mo.current||ui?("function"==typeof s&&(_i(e,n,s,r),c=e.memoizedState),(l=ui||Si(e,n,l,r,d,c,u))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(e.effectTag|=4)):("function"==typeof a.componentDidMount&&(e.effectTag|=4),e.memoizedProps=r,e.memoizedState=c),a.props=r,a.state=c,a.context=u,r=l):("function"==typeof a.componentDidMount&&(e.effectTag|=4),r=!1)}else a=e.stateNode,l=e.memoizedProps,a.props=e.type===e.elementType?l:Jo(e.type,l),c=a.context,"object"==typeof(u=n.contextType)&&null!==u?u=ci(u):u=go(e,u=bo(n)?ho:po.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||c!==u)&&Ti(e,a,r,u),ui=!1,c=e.memoizedState,d=a.state=c,null!==(p=e.updateQueue)&&(vi(e,p,r,a,o),d=e.memoizedState),l!==r||c!==d||mo.current||ui?("function"==typeof s&&(_i(e,n,s,r),d=e.memoizedState),(s=ui||Si(e,n,l,r,c,d,u))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,d,u),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,d,u)),"function"==typeof a.componentDidUpdate&&(e.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(e.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=256),e.memoizedProps=r,e.memoizedState=d),a.props=r,a.state=d,a.context=u,r=s):("function"!=typeof a.componentDidUpdate||l===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=256),r=!1);return Qa(t,e,n,r,i,o)}function Qa(t,e,n,r,o,i){Va(t,e);var a=0!=(64&e.effectTag);if(!r&&!a)return o&&_o(e,n,!1),il(t,e,i);r=e.stateNode,Fa.current=e;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return e.effectTag|=1,null!==t&&a?(e.child=zi(e,t.child,null,i),e.child=zi(e,null,l,i)):qa(t,e,l,i),e.memoizedState=r.state,o&&_o(e,n,!0),e.child}function Xa(t){var e=t.stateNode;e.pendingContext?xo(0,e.pendingContext,e.pendingContext!==e.context):e.context&&xo(0,e.context,!1),Fi(t,e.containerInfo)}var Ka,Ja,Za,tl={dehydrated:null,retryTime:0};function el(t,e,n){var r,o=e.mode,i=e.pendingProps,a=Wi.current,l=!1;if((r=0!=(64&e.effectTag))||(r=0!=(2&a)&&(null===t||null!==t.memoizedState)),r?(l=!0,e.effectTag&=-65):null!==t&&null===t.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(a|=1),so(Wi,1&a),null===t){if(void 0!==i.fallback&&Da(e),l){if(l=i.fallback,(i=jc(null,o,0,null)).return=e,0==(2&e.mode))for(t=null!==e.memoizedState?e.child.child:e.child,i.child=t;null!==t;)t.return=i,t=t.sibling;return(n=jc(l,o,n,null)).return=e,i.sibling=n,e.memoizedState=tl,e.child=i,n}return o=i.children,e.memoizedState=null,e.child=ji(e,null,o,n)}if(null!==t.memoizedState){if(o=(t=t.child).sibling,l){if(i=i.fallback,(n=Oc(t,t.pendingProps)).return=e,0==(2&e.mode)&&(l=null!==e.memoizedState?e.child.child:e.child)!==t.child)for(n.child=l;null!==l;)l.return=n,l=l.sibling;return(o=Oc(o,i,o.expirationTime)).return=e,n.sibling=o,n.childExpirationTime=0,e.memoizedState=tl,e.child=n,o}return n=zi(e,t.child,i.children,n),e.memoizedState=null,e.child=n}if(t=t.child,l){if(l=i.fallback,(i=jc(null,o,0,null)).return=e,i.child=t,null!==t&&(t.return=i),0==(2&e.mode))for(t=null!==e.memoizedState?e.child.child:e.child,i.child=t;null!==t;)t.return=i,t=t.sibling;return(n=jc(l,o,n,null)).return=e,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,e.memoizedState=tl,e.child=i,n}return e.memoizedState=null,e.child=zi(e,t,i.children,n)}function nl(t,e){t.expirationTime<e&&(t.expirationTime=e);var n=t.alternate;null!==n&&n.expirationTime<e&&(n.expirationTime=e),ai(t.return,e)}function rl(t,e,n,r,o,i){var a=t.memoizedState;null===a?t.memoizedState={isBackwards:e,rendering:null,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(a.isBackwards=e,a.rendering=null,a.last=r,a.tail=n,a.tailExpiration=0,a.tailMode=o,a.lastEffect=i)}function ol(t,e,n){var r=e.pendingProps,o=r.revealOrder,i=r.tail;if(qa(t,e,r.children,n),0!=(2&(r=Wi.current)))r=1&r|2,e.effectTag|=64;else{if(null!==t&&0!=(64&t.effectTag))t:for(t=e.child;null!==t;){if(13===t.tag)null!==t.memoizedState&&nl(t,n);else if(19===t.tag)nl(t,n);else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break t;for(;null===t.sibling;){if(null===t.return||t.return===e)break t;t=t.return}t.sibling.return=t.return,t=t.sibling}r&=1}if(so(Wi,r),0==(2&e.mode))e.memoizedState=null;else switch(o){case"forwards":for(n=e.child,o=null;null!==n;)null!==(t=n.alternate)&&null===$i(t)&&(o=n),n=n.sibling;null===(n=o)?(o=e.child,e.child=null):(o=n.sibling,n.sibling=null),rl(e,!1,o,n,i,e.lastEffect);break;case"backwards":for(n=null,o=e.child,e.child=null;null!==o;){if(null!==(t=o.alternate)&&null===$i(t)){e.child=o;break}t=o.sibling,o.sibling=n,n=o,o=t}rl(e,!0,n,null,i,e.lastEffect);break;case"together":rl(e,!1,null,null,void 0,e.lastEffect);break;default:e.memoizedState=null}return e.child}function il(t,e,n){null!==t&&(e.dependencies=t.dependencies);var r=e.expirationTime;if(0!==r&&dc(r),e.childExpirationTime<n)return null;if(null!==t&&e.child!==t.child)throw Error(a(153));if(null!==e.child){for(n=Oc(t=e.child,t.pendingProps,t.expirationTime),e.child=n,n.return=e;null!==t.sibling;)t=t.sibling,(n=n.sibling=Oc(t,t.pendingProps,t.expirationTime)).return=e;n.sibling=null}return e.child}function al(t){t.effectTag|=4}function ll(t,e){switch(t.tailMode){case"hidden":e=t.tail;for(var n=null;null!==e;)null!==e.alternate&&(n=e),e=e.sibling;null===n?t.tail=null:n.sibling=null;break;case"collapsed":n=t.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?e||null===t.tail?t.tail=null:t.tail.sibling=null:r.sibling=null}}function cl(t){switch(t.tag){case 1:bo(t.type)&&vo();var e=t.effectTag;return 4096&e?(t.effectTag=-4097&e|64,t):null;case 3:if(Bi(),yo(),0!=(64&(e=t.effectTag)))throw Error(a(285));return t.effectTag=-4097&e|64,t;case 5:return Hi(t),null;case 13:return uo(Wi),4096&(e=t.effectTag)?(t.effectTag=-4097&e|64,t):null;case 19:return uo(Wi),null;case 4:return Bi(),null;case 10:return ii(t),null;default:return null}}function ul(t,e){return{value:t,source:e,stack:J(e)}}Ka=function(t,e){for(var n=e.child;null!==n;){if(5===n.tag||6===n.tag)t.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ja=function(t,e,n,r,i){var a=t.memoizedProps;if(a!==r){var l,c,u=e.stateNode;switch(Ui(Di.current),t=null,n){case"input":a=Mt(u,a),r=Mt(u,r),t=[];break;case"option":a=Ot(u,a),r=Ot(u,r),t=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),t=[];break;case"textarea":a=jt(u,a),r=jt(u,r),t=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(u.onclick=Wn)}for(l in Bn(n,r),n=null,a)if(!r.hasOwnProperty(l)&&a.hasOwnProperty(l)&&null!=a[l])if("style"===l)for(c in u=a[l])u.hasOwnProperty(c)&&(n||(n={}),n[c]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(p.hasOwnProperty(l)?t||(t=[]):(t=t||[]).push(l,null));for(l in r){var s=r[l];if(u=null!=a?a[l]:void 0,r.hasOwnProperty(l)&&s!==u&&(null!=s||null!=u))if("style"===l)if(u){for(c in u)!u.hasOwnProperty(c)||s&&s.hasOwnProperty(c)||(n||(n={}),n[c]="");for(c in s)s.hasOwnProperty(c)&&u[c]!==s[c]&&(n||(n={}),n[c]=s[c])}else n||(t||(t=[]),t.push(l,n)),n=s;else"dangerouslySetInnerHTML"===l?(s=s?s.__html:void 0,u=u?u.__html:void 0,null!=s&&u!==s&&(t=t||[]).push(l,""+s)):"children"===l?u===s||"string"!=typeof s&&"number"!=typeof s||(t=t||[]).push(l,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(p.hasOwnProperty(l)?(null!=s&&Hn(i,l),t||u===s||(t=[])):(t=t||[]).push(l,s))}n&&(t=t||[]).push("style",n),i=t,(e.updateQueue=i)&&al(e)}},Za=function(t,e,n,r){n!==r&&al(e)};var sl="function"==typeof WeakSet?WeakSet:Set;function fl(t,e){var n=e.source,r=e.stack;null===r&&null!==n&&(r=J(n)),null!==n&&K(n.type),e=e.value,null!==t&&1===t.tag&&K(t.type);try{console.error(e)}catch(t){setTimeout((function(){throw t}))}}function dl(t){var e=t.ref;if(null!==e)if("function"==typeof e)try{e(null)}catch(e){Ec(t,e)}else e.current=null}function pl(t,e){switch(e.tag){case 0:case 11:case 15:ml(2,0,e);break;case 1:if(256&e.effectTag&&null!==t){var n=t.memoizedProps,r=t.memoizedState;e=(t=e.stateNode).getSnapshotBeforeUpdate(e.elementType===e.type?n:Jo(e.type,n),r),t.__reactInternalSnapshotBeforeUpdate=e}break;case 3:case 5:case 6:case 4:case 17:break;default:throw Error(a(163))}}function ml(t,e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if(0!=(r.tag&t)){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}0!=(r.tag&e)&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function hl(t,e,n){switch("function"==typeof Cc&&Cc(e),e.tag){case 0:case 11:case 14:case 15:if(null!==(t=e.updateQueue)&&null!==(t=t.lastEffect)){var r=t.next;$o(97<n?97:n,(function(){var t=r;do{var n=t.destroy;if(void 0!==n){var o=e;try{n()}catch(t){Ec(o,t)}}t=t.next}while(t!==r)}))}break;case 1:dl(e),"function"==typeof(n=e.stateNode).componentWillUnmount&&function(t,e){try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Ec(t,e)}}(e,n);break;case 5:dl(e);break;case 4:yl(t,e,n)}}function gl(t){var e=t.alternate;t.return=null,t.child=null,t.memoizedState=null,t.updateQueue=null,t.dependencies=null,t.alternate=null,t.firstEffect=null,t.lastEffect=null,t.pendingProps=null,t.memoizedProps=null,null!==e&&gl(e)}function bl(t){return 5===t.tag||3===t.tag||4===t.tag}function vl(t){t:{for(var e=t.return;null!==e;){if(bl(e)){var n=e;break t}e=e.return}throw Error(a(160))}switch(e=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:e=e.containerInfo,r=!0;break;default:throw Error(a(161))}16&n.effectTag&&(Wt(e,""),n.effectTag&=-17);t:e:for(n=t;;){for(;null===n.sibling;){if(null===n.return||bl(n.return)){n=null;break t}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue e;if(null===n.child||4===n.tag)continue e;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break t}}for(var o=t;;){var i=5===o.tag||6===o.tag;if(i){var l=i?o.stateNode:o.stateNode.instance;if(n)if(r){var c=l;l=n,8===(i=e).nodeType?i.parentNode.insertBefore(c,l):i.insertBefore(c,l)}else e.insertBefore(l,n);else r?(8===(c=e).nodeType?(i=c.parentNode).insertBefore(l,c):(i=c).appendChild(l),null!=(c=c._reactRootContainer)||null!==i.onclick||(i.onclick=Wn)):e.appendChild(l)}else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function yl(t,e,n){for(var r,o,i=e,l=!1;;){if(!l){l=i.return;t:for(;;){if(null===l)throw Error(a(160));switch(r=l.stateNode,l.tag){case 5:o=!1;break t;case 3:case 4:r=r.containerInfo,o=!0;break t}l=l.return}l=!0}if(5===i.tag||6===i.tag){t:for(var c=t,u=i,s=n,f=u;;)if(hl(c,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===u)break;for(;null===f.sibling;){if(null===f.return||f.return===u)break t;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(c=r,u=i.stateNode,8===c.nodeType?c.parentNode.removeChild(u):c.removeChild(u)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(hl(t,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===e)break;for(;null===i.sibling;){if(null===i.return||i.return===e)return;4===(i=i.return).tag&&(l=!1)}i.sibling.return=i.return,i=i.sibling}}function xl(t,e){switch(e.tag){case 0:case 11:case 14:case 15:ml(4,8,e);break;case 1:break;case 5:var n=e.stateNode;if(null!=n){var r=e.memoizedProps,o=null!==t?t.memoizedProps:r;t=e.type;var i=e.updateQueue;if(e.updateQueue=null,null!==i){for(n[ar]=r,"input"===t&&"radio"===r.type&&null!=r.name&&Ct(n,r),qn(t,o),e=qn(t,r),o=0;o<i.length;o+=2){var l=i[o],c=i[o+1];"style"===l?Un(n,c):"dangerouslySetInnerHTML"===l?Ht(n,c):"children"===l?Wt(n,c):kt(n,l,c,e)}switch(t){case"input":Nt(n,r);break;case"textarea":Dt(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(t=r.value)?zt(n,!!r.multiple,t,!1):e!==!!r.multiple&&(null!=r.defaultValue?zt(n,!!r.multiple,r.defaultValue,!0):zt(n,!!r.multiple,r.multiple?[]:"",!1))}}}break;case 6:if(null===e.stateNode)throw Error(a(162));e.stateNode.nodeValue=e.memoizedProps;break;case 3:(e=e.stateNode).hydrate&&(e.hydrate=!1,Me(e.containerInfo));break;case 12:break;case 13:if(n=e,null===e.memoizedState?r=!1:(r=!0,n=e.child,Fl=qo()),null!==n)t:for(t=n;;){if(5===t.tag)i=t.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=t.stateNode,o=null!=(o=t.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=In("display",o));else if(6===t.tag)t.stateNode.nodeValue=r?"":t.memoizedProps;else{if(13===t.tag&&null!==t.memoizedState&&null===t.memoizedState.dehydrated){(i=t.child.sibling).return=t,t=i;continue}if(null!==t.child){t.child.return=t,t=t.child;continue}}if(t===n)break t;for(;null===t.sibling;){if(null===t.return||t.return===n)break t;t=t.return}t.sibling.return=t.return,t=t.sibling}wl(e);break;case 19:wl(e);break;case 17:case 20:case 21:break;default:throw Error(a(163))}}function wl(t){var e=t.updateQueue;if(null!==e){t.updateQueue=null;var n=t.stateNode;null===n&&(n=t.stateNode=new sl),e.forEach((function(e){var r=Mc.bind(null,t,e);n.has(e)||(n.add(e),e.then(r,r))}))}}var kl="function"==typeof WeakMap?WeakMap:Map;function _l(t,e,n){(n=di(n,null)).tag=3,n.payload={element:null};var r=e.value;return n.callback=function(){ql||(ql=!0,Hl=r),fl(t,e)},n}function El(t,e,n){(n=di(n,null)).tag=3;var r=t.type.getDerivedStateFromError;if("function"==typeof r){var o=e.value;n.payload=function(){return fl(t,e),r(o)}}var i=t.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Wl?Wl=new Set([this]):Wl.add(this),fl(t,e));var n=e.stack;this.componentDidCatch(e.value,{componentStack:null!==n?n:""})}),n}var Sl,Ml=Math.ceil,Tl=z.ReactCurrentDispatcher,Cl=z.ReactCurrentOwner,Nl=0,Pl=null,Al=null,Ol=0,zl=0,jl=null,Rl=1073741823,Dl=1073741823,Ll=null,Il=0,Ul=!1,Fl=0,Bl=null,ql=!1,Hl=null,Wl=null,$l=!1,Vl=null,Yl=90,Gl=null,Ql=0,Xl=null,Kl=0;function Jl(){return 0!=(48&Nl)?1073741821-(qo()/10|0):0!==Kl?Kl:Kl=1073741821-(qo()/10|0)}function Zl(t,e,n){if(0==(2&(e=e.mode)))return 1073741823;var r=Ho();if(0==(4&e))return 99===r?1073741823:1073741822;if(0!=(16&Nl))return Ol;if(null!==n)t=Ko(t,0|n.timeoutMs||5e3,250);else switch(r){case 99:t=1073741823;break;case 98:t=Ko(t,150,100);break;case 97:case 96:t=Ko(t,5e3,250);break;case 95:t=2;break;default:throw Error(a(326))}return null!==Pl&&t===Ol&&--t,t}function tc(t,e){if(50<Ql)throw Ql=0,Xl=null,Error(a(185));if(null!==(t=ec(t,e))){var n=Ho();1073741823===e?0!=(8&Nl)&&0==(48&Nl)?ic(t):(rc(t),0===Nl&&Go()):rc(t),0==(4&Nl)||98!==n&&99!==n||(null===Gl?Gl=new Map([[t,e]]):(void 0===(n=Gl.get(t))||n>e)&&Gl.set(t,e))}}function ec(t,e){t.expirationTime<e&&(t.expirationTime=e);var n=t.alternate;null!==n&&n.expirationTime<e&&(n.expirationTime=e);var r=t.return,o=null;if(null===r&&3===t.tag)o=t.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<e&&(r.childExpirationTime=e),null!==n&&n.childExpirationTime<e&&(n.childExpirationTime=e),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Pl===o&&(dc(e),4===zl&&Uc(o,Ol)),Fc(o,e)),o}function nc(t){var e=t.lastExpiredTime;return 0!==e?e:Ic(t,e=t.firstPendingTime)?(e=t.lastPingedTime)>(t=t.nextKnownPendingLevel)?e:t:e}function rc(t){if(0!==t.lastExpiredTime)t.callbackExpirationTime=1073741823,t.callbackPriority=99,t.callbackNode=Yo(ic.bind(null,t));else{var e=nc(t),n=t.callbackNode;if(0===e)null!==n&&(t.callbackNode=null,t.callbackExpirationTime=0,t.callbackPriority=90);else{var r=Jl();if(1073741823===e?r=99:1===e||2===e?r=95:r=0>=(r=10*(1073741821-e)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=t.callbackPriority;if(t.callbackExpirationTime===e&&o>=r)return;n!==Do&&Mo(n)}t.callbackExpirationTime=e,t.callbackPriority=r,e=1073741823===e?Yo(ic.bind(null,t)):Vo(r,oc.bind(null,t),{timeout:10*(1073741821-e)-qo()}),t.callbackNode=e}}}function oc(t,e){if(Kl=0,e)return Bc(t,e=Jl()),rc(t),null;var n=nc(t);if(0!==n){if(e=t.callbackNode,0!=(48&Nl))throw Error(a(327));if(wc(),t===Pl&&n===Ol||cc(t,n),null!==Al){var r=Nl;Nl|=16;for(var o=sc();;)try{mc();break}catch(e){uc(t,e)}if(ri(),Nl=r,Tl.current=o,1===zl)throw e=jl,cc(t,n),Uc(t,n),rc(t),e;if(null===Al)switch(o=t.finishedWork=t.current.alternate,t.finishedExpirationTime=n,r=zl,Pl=null,r){case 0:case 1:throw Error(a(345));case 2:Bc(t,2<n?2:n);break;case 3:if(Uc(t,n),n===(r=t.lastSuspendedTime)&&(t.nextKnownPendingLevel=bc(o)),1073741823===Rl&&10<(o=Fl+500-qo())){if(Ul){var i=t.lastPingedTime;if(0===i||i>=n){t.lastPingedTime=n,cc(t,n);break}}if(0!==(i=nc(t))&&i!==n)break;if(0!==r&&r!==n){t.lastPingedTime=r;break}t.timeoutHandle=tr(vc.bind(null,t),o);break}vc(t);break;case 4:if(Uc(t,n),n===(r=t.lastSuspendedTime)&&(t.nextKnownPendingLevel=bc(o)),Ul&&(0===(o=t.lastPingedTime)||o>=n)){t.lastPingedTime=n,cc(t,n);break}if(0!==(o=nc(t))&&o!==n)break;if(0!==r&&r!==n){t.lastPingedTime=r;break}if(1073741823!==Dl?r=10*(1073741821-Dl)-qo():1073741823===Rl?r=0:(r=10*(1073741821-Rl)-5e3,0>(r=(o=qo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Ml(r/1960))-r)&&(r=n)),10<r){t.timeoutHandle=tr(vc.bind(null,t),r);break}vc(t);break;case 5:if(1073741823!==Rl&&null!==Ll){i=Rl;var l=Ll;if(0>=(r=0|l.busyMinDurationMs)?r=0:(o=0|l.busyDelayMs,r=(i=qo()-(10*(1073741821-i)-(0|l.timeoutMs||5e3)))<=o?0:o+r-i),10<r){Uc(t,n),t.timeoutHandle=tr(vc.bind(null,t),r);break}}vc(t);break;default:throw Error(a(329))}if(rc(t),t.callbackNode===e)return oc.bind(null,t)}}return null}function ic(t){var e=t.lastExpiredTime;if(e=0!==e?e:1073741823,t.finishedExpirationTime===e)vc(t);else{if(0!=(48&Nl))throw Error(a(327));if(wc(),t===Pl&&e===Ol||cc(t,e),null!==Al){var n=Nl;Nl|=16;for(var r=sc();;)try{pc();break}catch(e){uc(t,e)}if(ri(),Nl=n,Tl.current=r,1===zl)throw n=jl,cc(t,e),Uc(t,e),rc(t),n;if(null!==Al)throw Error(a(261));t.finishedWork=t.current.alternate,t.finishedExpirationTime=e,Pl=null,vc(t),rc(t)}}return null}function ac(t,e){var n=Nl;Nl|=1;try{return t(e)}finally{0===(Nl=n)&&Go()}}function lc(t,e){var n=Nl;Nl&=-2,Nl|=8;try{return t(e)}finally{0===(Nl=n)&&Go()}}function cc(t,e){t.finishedWork=null,t.finishedExpirationTime=0;var n=t.timeoutHandle;if(-1!==n&&(t.timeoutHandle=-1,er(n)),null!==Al)for(n=Al.return;null!==n;){var r=n;switch(r.tag){case 1:var o=r.type.childContextTypes;null!=o&&vo();break;case 3:Bi(),yo();break;case 5:Hi(r);break;case 4:Bi();break;case 13:case 19:uo(Wi);break;case 10:ii(r)}n=n.return}Pl=t,Al=Oc(t.current,null),Ol=e,zl=0,jl=null,Dl=Rl=1073741823,Ll=null,Il=0,Ul=!1}function uc(t,e){for(;;){try{if(ri(),fa(),null===Al||null===Al.return)return zl=1,jl=e,null;t:{var n=t,r=Al.return,o=Al,i=e;if(e=Ol,o.effectTag|=2048,o.firstEffect=o.lastEffect=null,null!==i&&"object"==typeof i&&"function"==typeof i.then){var a=i,l=0!=(1&Wi.current),c=r;do{var u;if(u=13===c.tag){var s=c.memoizedState;if(null!==s)u=null!==s.dehydrated;else{var f=c.memoizedProps;u=void 0!==f.fallback&&(!0!==f.unstable_avoidThisFallback||!l)}}if(u){var d=c.updateQueue;if(null===d){var p=new Set;p.add(a),c.updateQueue=p}else d.add(a);if(0==(2&c.mode)){if(c.effectTag|=64,o.effectTag&=-2981,1===o.tag)if(null===o.alternate)o.tag=17;else{var m=di(1073741823,null);m.tag=2,mi(o,m)}o.expirationTime=1073741823;break t}i=void 0,o=e;var h=n.pingCache;if(null===h?(h=n.pingCache=new kl,i=new Set,h.set(a,i)):void 0===(i=h.get(a))&&(i=new Set,h.set(a,i)),!i.has(o)){i.add(o);var g=Sc.bind(null,n,a,o);a.then(g,g)}c.effectTag|=4096,c.expirationTime=e;break t}c=c.return}while(null!==c);i=Error((K(o.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+J(o))}5!==zl&&(zl=2),i=ul(i,o),c=r;do{switch(c.tag){case 3:a=i,c.effectTag|=4096,c.expirationTime=e,hi(c,_l(c,a,e));break t;case 1:a=i;var b=c.type,v=c.stateNode;if(0==(64&c.effectTag)&&("function"==typeof b.getDerivedStateFromError||null!==v&&"function"==typeof v.componentDidCatch&&(null===Wl||!Wl.has(v)))){c.effectTag|=4096,c.expirationTime=e,hi(c,El(c,a,e));break t}}c=c.return}while(null!==c)}Al=gc(Al)}catch(t){e=t;continue}break}}function sc(){var t=Tl.current;return Tl.current=Ca,null===t?Ca:t}function fc(t,e){t<Rl&&2<t&&(Rl=t),null!==e&&t<Dl&&2<t&&(Dl=t,Ll=e)}function dc(t){t>Il&&(Il=t)}function pc(){for(;null!==Al;)Al=hc(Al)}function mc(){for(;null!==Al&&!To();)Al=hc(Al)}function hc(t){var e=Sl(t.alternate,t,Ol);return t.memoizedProps=t.pendingProps,null===e&&(e=gc(t)),Cl.current=null,e}function gc(t){Al=t;do{var e=Al.alternate;if(t=Al.return,0==(2048&Al.effectTag)){t:{var n=e,r=Ol,i=(e=Al).pendingProps;switch(e.tag){case 2:case 16:break;case 15:case 0:break;case 1:bo(e.type)&&vo();break;case 3:Bi(),yo(),(i=e.stateNode).pendingContext&&(i.context=i.pendingContext,i.pendingContext=null),(null===n||null===n.child)&&Ia(e)&&al(e);break;case 5:Hi(e),r=Ui(Ii.current);var l=e.type;if(null!==n&&null!=e.stateNode)Ja(n,e,l,i,r),n.ref!==e.ref&&(e.effectTag|=128);else if(i){var c=Ui(Di.current);if(Ia(e)){var u=(i=e).stateNode;n=i.type;var s=i.memoizedProps,f=r;switch(u[ir]=i,u[ar]=s,l=void 0,r=u,n){case"iframe":case"object":case"embed":Sn("load",r);break;case"video":case"audio":for(u=0;u<te.length;u++)Sn(te[u],r);break;case"source":Sn("error",r);break;case"img":case"image":case"link":Sn("error",r),Sn("load",r);break;case"form":Sn("reset",r),Sn("submit",r);break;case"details":Sn("toggle",r);break;case"input":Tt(r,s),Sn("invalid",r),Hn(f,"onChange");break;case"select":r._wrapperState={wasMultiple:!!s.multiple},Sn("invalid",r),Hn(f,"onChange");break;case"textarea":Rt(r,s),Sn("invalid",r),Hn(f,"onChange")}for(l in Bn(n,s),u=null,s)s.hasOwnProperty(l)&&(c=s[l],"children"===l?"string"==typeof c?r.textContent!==c&&(u=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(u=["children",""+c]):p.hasOwnProperty(l)&&null!=c&&Hn(f,l));switch(n){case"input":Et(r),Pt(r,s,!0);break;case"textarea":Et(r),Lt(r);break;case"select":case"option":break;default:"function"==typeof s.onClick&&(r.onclick=Wn)}l=u,i.updateQueue=l,(i=null!==l)&&al(e)}else{n=e,f=l,s=i,u=9===r.nodeType?r:r.ownerDocument,c===It&&(c=Ft(f)),c===It?"script"===f?((s=u.createElement("div")).innerHTML="<script><\/script>",u=s.removeChild(s.firstChild)):"string"==typeof s.is?u=u.createElement(f,{is:s.is}):(u=u.createElement(f),"select"===f&&(f=u,s.multiple?f.multiple=!0:s.size&&(f.size=s.size))):u=u.createElementNS(c,f),(s=u)[ir]=n,s[ar]=i,Ka(s,e),e.stateNode=s;var d=r,m=qn(f=l,n=i);switch(f){case"iframe":case"object":case"embed":Sn("load",s),r=n;break;case"video":case"audio":for(r=0;r<te.length;r++)Sn(te[r],s);r=n;break;case"source":Sn("error",s),r=n;break;case"img":case"image":case"link":Sn("error",s),Sn("load",s),r=n;break;case"form":Sn("reset",s),Sn("submit",s),r=n;break;case"details":Sn("toggle",s),r=n;break;case"input":Tt(s,n),r=Mt(s,n),Sn("invalid",s),Hn(d,"onChange");break;case"option":r=Ot(s,n);break;case"select":s._wrapperState={wasMultiple:!!n.multiple},r=o({},n,{value:void 0}),Sn("invalid",s),Hn(d,"onChange");break;case"textarea":Rt(s,n),r=jt(s,n),Sn("invalid",s),Hn(d,"onChange");break;default:r=n}Bn(f,r),u=void 0,c=f;var h=s,g=r;for(u in g)if(g.hasOwnProperty(u)){var b=g[u];"style"===u?Un(h,b):"dangerouslySetInnerHTML"===u?null!=(b=b?b.__html:void 0)&&Ht(h,b):"children"===u?"string"==typeof b?("textarea"!==c||""!==b)&&Wt(h,b):"number"==typeof b&&Wt(h,""+b):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(p.hasOwnProperty(u)?null!=b&&Hn(d,u):null!=b&&kt(h,u,b,m))}switch(f){case"input":Et(s),Pt(s,n,!1);break;case"textarea":Et(s),Lt(s);break;case"option":null!=n.value&&s.setAttribute("value",""+wt(n.value));break;case"select":(r=s).multiple=!!n.multiple,null!=(s=n.value)?zt(r,!!n.multiple,s,!1):null!=n.defaultValue&&zt(r,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof r.onClick&&(s.onclick=Wn)}(i=Jn(l,i))&&al(e)}null!==e.ref&&(e.effectTag|=128)}else if(null===e.stateNode)throw Error(a(166));break;case 6:if(n&&null!=e.stateNode)Za(0,e,n.memoizedProps,i);else{if("string"!=typeof i&&null===e.stateNode)throw Error(a(166));r=Ui(Ii.current),Ui(Di.current),Ia(e)?(l=(i=e).stateNode,r=i.memoizedProps,l[ir]=i,(i=l.nodeValue!==r)&&al(e)):(l=e,(i=(9===r.nodeType?r:r.ownerDocument).createTextNode(i))[ir]=l,e.stateNode=i)}break;case 11:break;case 13:if(uo(Wi),i=e.memoizedState,0!=(64&e.effectTag)){e.expirationTime=r;break t}i=null!==i,l=!1,null===n?void 0!==e.memoizedProps.fallback&&Ia(e):(l=null!==(r=n.memoizedState),i||null===r||null!==(r=n.child.sibling)&&(null!==(s=e.firstEffect)?(e.firstEffect=r,r.nextEffect=s):(e.firstEffect=e.lastEffect=r,r.nextEffect=null),r.effectTag=8)),i&&!l&&0!=(2&e.mode)&&(null===n&&!0!==e.memoizedProps.unstable_avoidThisFallback||0!=(1&Wi.current)?0===zl&&(zl=3):(0!==zl&&3!==zl||(zl=4),0!==Il&&null!==Pl&&(Uc(Pl,Ol),Fc(Pl,Il)))),(i||l)&&(e.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Bi();break;case 10:ii(e);break;case 9:case 14:break;case 17:bo(e.type)&&vo();break;case 19:if(uo(Wi),null===(i=e.memoizedState))break;if(l=0!=(64&e.effectTag),null===(s=i.rendering)){if(l)ll(i,!1);else if(0!==zl||null!==n&&0!=(64&n.effectTag))for(n=e.child;null!==n;){if(null!==(s=$i(n))){for(e.effectTag|=64,ll(i,!1),null!==(l=s.updateQueue)&&(e.updateQueue=l,e.effectTag|=4),null===i.lastEffect&&(e.firstEffect=null),e.lastEffect=i.lastEffect,i=r,l=e.child;null!==l;)n=i,(r=l).effectTag&=2,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null,null===(s=r.alternate)?(r.childExpirationTime=0,r.expirationTime=n,r.child=null,r.memoizedProps=null,r.memoizedState=null,r.updateQueue=null,r.dependencies=null):(r.childExpirationTime=s.childExpirationTime,r.expirationTime=s.expirationTime,r.child=s.child,r.memoizedProps=s.memoizedProps,r.memoizedState=s.memoizedState,r.updateQueue=s.updateQueue,n=s.dependencies,r.dependencies=null===n?null:{expirationTime:n.expirationTime,firstContext:n.firstContext,responders:n.responders}),l=l.sibling;so(Wi,1&Wi.current|2),e=e.child;break t}n=n.sibling}}else{if(!l)if(null!==(n=$i(s))){if(e.effectTag|=64,l=!0,null!==(r=n.updateQueue)&&(e.updateQueue=r,e.effectTag|=4),ll(i,!0),null===i.tail&&"hidden"===i.tailMode&&!s.alternate){null!==(e=e.lastEffect=i.lastEffect)&&(e.nextEffect=null);break}}else qo()>i.tailExpiration&&1<r&&(e.effectTag|=64,l=!0,ll(i,!1),e.expirationTime=e.childExpirationTime=r-1);i.isBackwards?(s.sibling=e.child,e.child=s):(null!==(r=i.last)?r.sibling=s:e.child=s,i.last=s)}if(null!==i.tail){0===i.tailExpiration&&(i.tailExpiration=qo()+500),r=i.tail,i.rendering=r,i.tail=r.sibling,i.lastEffect=e.lastEffect,r.sibling=null,i=Wi.current,so(Wi,i=l?1&i|2:1&i),e=r;break t}break;case 20:case 21:break;default:throw Error(a(156,e.tag))}e=null}if(i=Al,1===Ol||1!==i.childExpirationTime){for(l=0,r=i.child;null!==r;)(n=r.expirationTime)>l&&(l=n),(s=r.childExpirationTime)>l&&(l=s),r=r.sibling;i.childExpirationTime=l}if(null!==e)return e;null!==t&&0==(2048&t.effectTag)&&(null===t.firstEffect&&(t.firstEffect=Al.firstEffect),null!==Al.lastEffect&&(null!==t.lastEffect&&(t.lastEffect.nextEffect=Al.firstEffect),t.lastEffect=Al.lastEffect),1<Al.effectTag&&(null!==t.lastEffect?t.lastEffect.nextEffect=Al:t.firstEffect=Al,t.lastEffect=Al))}else{if(null!==(e=cl(Al)))return e.effectTag&=2047,e;null!==t&&(t.firstEffect=t.lastEffect=null,t.effectTag|=2048)}if(null!==(e=Al.sibling))return e;Al=t}while(null!==Al);return 0===zl&&(zl=5),null}function bc(t){var e=t.expirationTime;return e>(t=t.childExpirationTime)?e:t}function vc(t){var e=Ho();return $o(99,yc.bind(null,t,e)),null}function yc(t,e){do{wc()}while(null!==Vl);if(0!=(48&Nl))throw Error(a(327));var n=t.finishedWork,r=t.finishedExpirationTime;if(null===n)return null;if(t.finishedWork=null,t.finishedExpirationTime=0,n===t.current)throw Error(a(177));t.callbackNode=null,t.callbackExpirationTime=0,t.callbackPriority=90,t.nextKnownPendingLevel=0;var o=bc(n);if(t.firstPendingTime=o,r<=t.lastSuspendedTime?t.firstSuspendedTime=t.lastSuspendedTime=t.nextKnownPendingLevel=0:r<=t.firstSuspendedTime&&(t.firstSuspendedTime=r-1),r<=t.lastPingedTime&&(t.lastPingedTime=0),r<=t.lastExpiredTime&&(t.lastExpiredTime=0),t===Pl&&(Al=Pl=null,Ol=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=Nl;Nl|=32,Cl.current=null,Xn=En;var l=Gn();if(Qn(l)){if("selectionStart"in l)var c={start:l.selectionStart,end:l.selectionEnd};else t:{var u=(c=(c=l.ownerDocument)&&c.defaultView||window).getSelection&&c.getSelection();if(u&&0!==u.rangeCount){c=u.anchorNode;var s=u.anchorOffset,f=u.focusNode;u=u.focusOffset;try{c.nodeType,f.nodeType}catch(t){c=null;break t}var d=0,p=-1,m=-1,h=0,g=0,b=l,v=null;e:for(;;){for(var y;b!==c||0!==s&&3!==b.nodeType||(p=d+s),b!==f||0!==u&&3!==b.nodeType||(m=d+u),3===b.nodeType&&(d+=b.nodeValue.length),null!==(y=b.firstChild);)v=b,b=y;for(;;){if(b===l)break e;if(v===c&&++h===s&&(p=d),v===f&&++g===u&&(m=d),null!==(y=b.nextSibling))break;v=(b=v).parentNode}b=y}c=-1===p||-1===m?null:{start:p,end:m}}else c=null}c=c||{start:0,end:0}}else c=null;Kn={focusedElem:l,selectionRange:c},En=!1,Bl=o;do{try{xc()}catch(t){if(null===Bl)throw Error(a(330));Ec(Bl,t),Bl=Bl.nextEffect}}while(null!==Bl);Bl=o;do{try{for(l=t,c=e;null!==Bl;){var x=Bl.effectTag;if(16&x&&Wt(Bl.stateNode,""),128&x){var w=Bl.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&x){case 2:vl(Bl),Bl.effectTag&=-3;break;case 6:vl(Bl),Bl.effectTag&=-3,xl(Bl.alternate,Bl);break;case 1024:Bl.effectTag&=-1025;break;case 1028:Bl.effectTag&=-1025,xl(Bl.alternate,Bl);break;case 4:xl(Bl.alternate,Bl);break;case 8:yl(l,s=Bl,c),gl(s)}Bl=Bl.nextEffect}}catch(t){if(null===Bl)throw Error(a(330));Ec(Bl,t),Bl=Bl.nextEffect}}while(null!==Bl);if(k=Kn,w=Gn(),x=k.focusedElem,c=k.selectionRange,w!==x&&x&&x.ownerDocument&&function t(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?t(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}(x.ownerDocument.documentElement,x)){null!==c&&Qn(x)&&(w=c.start,void 0===(k=c.end)&&(k=w),"selectionStart"in x?(x.selectionStart=w,x.selectionEnd=Math.min(k,x.value.length)):(k=(w=x.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),s=x.textContent.length,l=Math.min(c.start,s),c=void 0===c.end?l:Math.min(c.end,s),!k.extend&&l>c&&(s=c,c=l,l=s),s=Yn(x,l),f=Yn(x,c),s&&f&&(1!==k.rangeCount||k.anchorNode!==s.node||k.anchorOffset!==s.offset||k.focusNode!==f.node||k.focusOffset!==f.offset)&&((w=w.createRange()).setStart(s.node,s.offset),k.removeAllRanges(),l>c?(k.addRange(w),k.extend(f.node,f.offset)):(w.setEnd(f.node,f.offset),k.addRange(w))))),w=[];for(k=x;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof x.focus&&x.focus(),x=0;x<w.length;x++)(k=w[x]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Kn=null,En=!!Xn,Xn=null,t.current=n,Bl=o;do{try{for(x=r;null!==Bl;){var _=Bl.effectTag;if(36&_){var E=Bl.alternate;switch(k=x,(w=Bl).tag){case 0:case 11:case 15:ml(16,32,w);break;case 1:var S=w.stateNode;if(4&w.effectTag)if(null===E)S.componentDidMount();else{var M=w.elementType===w.type?E.memoizedProps:Jo(w.type,E.memoizedProps);S.componentDidUpdate(M,E.memoizedState,S.__reactInternalSnapshotBeforeUpdate)}var T=w.updateQueue;null!==T&&yi(0,T,S);break;case 3:var C=w.updateQueue;if(null!==C){if(l=null,null!==w.child)switch(w.child.tag){case 5:l=w.child.stateNode;break;case 1:l=w.child.stateNode}yi(0,C,l)}break;case 5:var N=w.stateNode;null===E&&4&w.effectTag&&Jn(w.type,w.memoizedProps)&&N.focus();break;case 6:case 4:case 12:break;case 13:if(null===w.memoizedState){var P=w.alternate;if(null!==P){var A=P.memoizedState;if(null!==A){var O=A.dehydrated;null!==O&&Me(O)}}}break;case 19:case 17:case 20:case 21:break;default:throw Error(a(163))}}if(128&_){w=void 0;var z=Bl.ref;if(null!==z){var j=Bl.stateNode;switch(Bl.tag){case 5:w=j;break;default:w=j}"function"==typeof z?z(w):z.current=w}}Bl=Bl.nextEffect}}catch(t){if(null===Bl)throw Error(a(330));Ec(Bl,t),Bl=Bl.nextEffect}}while(null!==Bl);Bl=null,Lo(),Nl=i}else t.current=n;if($l)$l=!1,Vl=t,Yl=e;else for(Bl=o;null!==Bl;)e=Bl.nextEffect,Bl.nextEffect=null,Bl=e;if(0===(e=t.firstPendingTime)&&(Wl=null),1073741823===e?t===Xl?Ql++:(Ql=0,Xl=t):Ql=0,"function"==typeof Tc&&Tc(n.stateNode,r),rc(t),ql)throw ql=!1,t=Hl,Hl=null,t;return 0!=(8&Nl)?null:(Go(),null)}function xc(){for(;null!==Bl;){var t=Bl.effectTag;0!=(256&t)&&pl(Bl.alternate,Bl),0==(512&t)||$l||($l=!0,Vo(97,(function(){return wc(),null}))),Bl=Bl.nextEffect}}function wc(){if(90!==Yl){var t=97<Yl?97:Yl;return Yl=90,$o(t,kc)}}function kc(){if(null===Vl)return!1;var t=Vl;if(Vl=null,0!=(48&Nl))throw Error(a(331));var e=Nl;for(Nl|=32,t=t.current.firstEffect;null!==t;){try{var n=t;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:ml(128,0,n),ml(0,64,n)}}catch(e){if(null===t)throw Error(a(330));Ec(t,e)}n=t.nextEffect,t.nextEffect=null,t=n}return Nl=e,Go(),!0}function _c(t,e,n){mi(t,e=_l(t,e=ul(n,e),1073741823)),null!==(t=ec(t,1073741823))&&rc(t)}function Ec(t,e){if(3===t.tag)_c(t,t,e);else for(var n=t.return;null!==n;){if(3===n.tag){_c(n,t,e);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Wl||!Wl.has(r))){mi(n,t=El(n,t=ul(e,t),1073741823)),null!==(n=ec(n,1073741823))&&rc(n);break}}n=n.return}}function Sc(t,e,n){var r=t.pingCache;null!==r&&r.delete(e),Pl===t&&Ol===n?4===zl||3===zl&&1073741823===Rl&&qo()-Fl<500?cc(t,Ol):Ul=!0:Ic(t,n)&&(0!==(e=t.lastPingedTime)&&e<n||(t.lastPingedTime=n,t.finishedExpirationTime===n&&(t.finishedExpirationTime=0,t.finishedWork=null),rc(t)))}function Mc(t,e){var n=t.stateNode;null!==n&&n.delete(e),0===(e=0)&&(e=Zl(e=Jl(),t,null)),null!==(t=ec(t,e))&&rc(t)}Sl=function(t,e,n){var r=e.expirationTime;if(null!==t){var o=e.pendingProps;if(t.memoizedProps!==o||mo.current)Ba=!0;else{if(r<n){switch(Ba=!1,e.tag){case 3:Xa(e),Ua();break;case 5:if(qi(e),4&e.mode&&1!==n&&o.hidden)return e.expirationTime=e.childExpirationTime=1,null;break;case 1:bo(e.type)&&ko(e);break;case 4:Fi(e,e.stateNode.containerInfo);break;case 10:oi(e,e.memoizedProps.value);break;case 13:if(null!==e.memoizedState)return 0!==(r=e.child.childExpirationTime)&&r>=n?el(t,e,n):(so(Wi,1&Wi.current),null!==(e=il(t,e,n))?e.sibling:null);so(Wi,1&Wi.current);break;case 19:if(r=e.childExpirationTime>=n,0!=(64&t.effectTag)){if(r)return ol(t,e,n);e.effectTag|=64}if(null!==(o=e.memoizedState)&&(o.rendering=null,o.tail=null),so(Wi,Wi.current),!r)return null}return il(t,e,n)}Ba=!1}}else Ba=!1;switch(e.expirationTime=0,e.tag){case 2:if(r=e.type,null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),t=e.pendingProps,o=go(e,po.current),li(e,n),o=sa(null,e,r,t,o,n),e.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(e.tag=1,fa(),bo(r)){var i=!0;ko(e)}else i=!1;e.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&_i(e,r,l,t),o.updater=Ei,e.stateNode=o,o._reactInternalFiber=e,Ci(e,r,t,n),e=Qa(null,e,r,!0,i,n)}else e.tag=0,qa(null,e,o,n),e=e.child;return e;case 16:if(o=e.elementType,null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),t=e.pendingProps,function(t){if(-1===t._status){t._status=0;var e=t._ctor;e=e(),t._result=e,e.then((function(e){0===t._status&&(e=e.default,t._status=1,t._result=e)}),(function(e){0===t._status&&(t._status=2,t._result=e)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,e.type=o,i=e.tag=function(t){if("function"==typeof t)return Ac(t)?1:0;if(null!=t){if((t=t.$$typeof)===W)return 11;if(t===Y)return 14}return 2}(o),t=Jo(o,t),i){case 0:e=Ya(null,e,o,t,n);break;case 1:e=Ga(null,e,o,t,n);break;case 11:e=Ha(null,e,o,t,n);break;case 14:e=Wa(null,e,o,Jo(o.type,t),r,n);break;default:throw Error(a(306,o,""))}return e;case 0:return r=e.type,o=e.pendingProps,Ya(t,e,r,o=e.elementType===r?o:Jo(r,o),n);case 1:return r=e.type,o=e.pendingProps,Ga(t,e,r,o=e.elementType===r?o:Jo(r,o),n);case 3:if(Xa(e),null===(r=e.updateQueue))throw Error(a(282));if(o=null!==(o=e.memoizedState)?o.element:null,vi(e,r,e.pendingProps,null,n),(r=e.memoizedState.element)===o)Ua(),e=il(t,e,n);else{if((o=e.stateNode.hydrate)&&(Oa=nr(e.stateNode.containerInfo.firstChild),Aa=e,o=za=!0),o)for(n=ji(e,null,r,n),e.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else qa(t,e,r,n),Ua();e=e.child}return e;case 5:return qi(e),null===t&&Da(e),r=e.type,o=e.pendingProps,i=null!==t?t.memoizedProps:null,l=o.children,Zn(r,o)?l=null:null!==i&&Zn(r,i)&&(e.effectTag|=16),Va(t,e),4&e.mode&&1!==n&&o.hidden?(e.expirationTime=e.childExpirationTime=1,e=null):(qa(t,e,l,n),e=e.child),e;case 6:return null===t&&Da(e),null;case 13:return el(t,e,n);case 4:return Fi(e,e.stateNode.containerInfo),r=e.pendingProps,null===t?e.child=zi(e,null,r,n):qa(t,e,r,n),e.child;case 11:return r=e.type,o=e.pendingProps,Ha(t,e,r,o=e.elementType===r?o:Jo(r,o),n);case 7:return qa(t,e,e.pendingProps,n),e.child;case 8:case 12:return qa(t,e,e.pendingProps.children,n),e.child;case 10:t:{if(r=e.type._context,o=e.pendingProps,l=e.memoizedProps,oi(e,i=o.value),null!==l){var c=l.value;if(0===(i=Xr(c,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(c,i):1073741823))){if(l.children===o.children&&!mo.current){e=il(t,e,n);break t}}else for(null!==(c=e.child)&&(c.return=e);null!==c;){var u=c.dependencies;if(null!==u){l=c.child;for(var s=u.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===c.tag&&((s=di(n,null)).tag=2,mi(c,s)),c.expirationTime<n&&(c.expirationTime=n),null!==(s=c.alternate)&&s.expirationTime<n&&(s.expirationTime=n),ai(c.return,n),u.expirationTime<n&&(u.expirationTime=n);break}s=s.next}}else l=10===c.tag&&c.type===e.type?null:c.child;if(null!==l)l.return=c;else for(l=c;null!==l;){if(l===e){l=null;break}if(null!==(c=l.sibling)){c.return=l.return,l=c;break}l=l.return}c=l}}qa(t,e,o.children,n),e=e.child}return e;case 9:return o=e.type,r=(i=e.pendingProps).children,li(e,n),r=r(o=ci(o,i.unstable_observedBits)),e.effectTag|=1,qa(t,e,r,n),e.child;case 14:return i=Jo(o=e.type,e.pendingProps),Wa(t,e,o,i=Jo(o.type,i),r,n);case 15:return $a(t,e,e.type,e.pendingProps,r,n);case 17:return r=e.type,o=e.pendingProps,o=e.elementType===r?o:Jo(r,o),null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),e.tag=1,bo(r)?(t=!0,ko(e)):t=!1,li(e,n),Mi(e,r,o),Ci(e,r,o,n),Qa(null,e,r,!0,t,n);case 19:return ol(t,e,n)}throw Error(a(156,e.tag))};var Tc=null,Cc=null;function Nc(t,e,n,r){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Pc(t,e,n,r){return new Nc(t,e,n,r)}function Ac(t){return!(!(t=t.prototype)||!t.isReactComponent)}function Oc(t,e){var n=t.alternate;return null===n?((n=Pc(t.tag,e,t.key,t.mode)).elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=t.childExpirationTime,n.expirationTime=t.expirationTime,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=null===e?null:{expirationTime:e.expirationTime,firstContext:e.firstContext,responders:e.responders},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n}function zc(t,e,n,r,o,i){var l=2;if(r=t,"function"==typeof t)Ac(t)&&(l=1);else if("string"==typeof t)l=5;else t:switch(t){case I:return jc(n.children,o,i,e);case H:l=8,o|=7;break;case U:l=8,o|=1;break;case F:return(t=Pc(12,n,e,8|o)).elementType=F,t.type=F,t.expirationTime=i,t;case $:return(t=Pc(13,n,e,o)).type=$,t.elementType=$,t.expirationTime=i,t;case V:return(t=Pc(19,n,e,o)).elementType=V,t.expirationTime=i,t;default:if("object"==typeof t&&null!==t)switch(t.$$typeof){case B:l=10;break t;case q:l=9;break t;case W:l=11;break t;case Y:l=14;break t;case G:l=16,r=null;break t}throw Error(a(130,null==t?t:typeof t,""))}return(e=Pc(l,n,e,o)).elementType=t,e.type=r,e.expirationTime=i,e}function jc(t,e,n,r){return(t=Pc(7,t,r,e)).expirationTime=n,t}function Rc(t,e,n){return(t=Pc(6,t,null,e)).expirationTime=n,t}function Dc(t,e,n){return(e=Pc(4,null!==t.children?t.children:[],t.key,e)).expirationTime=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function Lc(t,e,n){this.tag=e,this.current=null,this.containerInfo=t,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Ic(t,e){var n=t.firstSuspendedTime;return t=t.lastSuspendedTime,0!==n&&n>=e&&t<=e}function Uc(t,e){var n=t.firstSuspendedTime,r=t.lastSuspendedTime;n<e&&(t.firstSuspendedTime=e),(r>e||0===n)&&(t.lastSuspendedTime=e),e<=t.lastPingedTime&&(t.lastPingedTime=0),e<=t.lastExpiredTime&&(t.lastExpiredTime=0)}function Fc(t,e){e>t.firstPendingTime&&(t.firstPendingTime=e);var n=t.firstSuspendedTime;0!==n&&(e>=n?t.firstSuspendedTime=t.lastSuspendedTime=t.nextKnownPendingLevel=0:e>=t.lastSuspendedTime&&(t.lastSuspendedTime=e+1),e>t.nextKnownPendingLevel&&(t.nextKnownPendingLevel=e))}function Bc(t,e){var n=t.lastExpiredTime;(0===n||n>e)&&(t.lastExpiredTime=e)}function qc(t,e,n,r){var o=e.current,i=Jl(),l=wi.suspense;i=Zl(i,o,l);t:if(n){e:{if(ee(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(a(170));var c=n;do{switch(c.tag){case 3:c=c.stateNode.context;break e;case 1:if(bo(c.type)){c=c.stateNode.__reactInternalMemoizedMergedChildContext;break e}}c=c.return}while(null!==c);throw Error(a(171))}if(1===n.tag){var u=n.type;if(bo(u)){n=wo(n,u,c);break t}}n=c}else n=fo;return null===e.context?e.context=n:e.pendingContext=n,(e=di(i,l)).payload={element:t},null!==(r=void 0===r?null:r)&&(e.callback=r),mi(o,e),tc(o,i),i}function Hc(t){if(!(t=t.current).child)return null;switch(t.child.tag){case 5:default:return t.child.stateNode}}function Wc(t,e){null!==(t=t.memoizedState)&&null!==t.dehydrated&&t.retryTime<e&&(t.retryTime=e)}function $c(t,e){Wc(t,e),(t=t.alternate)&&Wc(t,e)}function Vc(t,e,n){var r=new Lc(t,e,n=null!=n&&!0===n.hydrate),o=Pc(3,null,null,2===e?7:1===e?3:0);r.current=o,o.stateNode=r,t[lr]=r.current,n&&0!==e&&function(t){var e=jn(t);ge.forEach((function(n){Rn(n,t,e)})),be.forEach((function(n){Rn(n,t,e)}))}(9===t.nodeType?t:t.ownerDocument),this._internalRoot=r}function Yc(t){return!(!t||1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType&&(8!==t.nodeType||" react-mount-point-unstable "!==t.nodeValue))}function Gc(t,e,n,r,o){var i=n._reactRootContainer;if(i){var a=i._internalRoot;if("function"==typeof o){var l=o;o=function(){var t=Hc(a);l.call(t)}}qc(e,a,t,o)}else{if(i=n._reactRootContainer=function(t,e){if(e||(e=!(!(e=t?9===t.nodeType?t.documentElement:t.firstChild:null)||1!==e.nodeType||!e.hasAttribute("data-reactroot"))),!e)for(var n;n=t.lastChild;)t.removeChild(n);return new Vc(t,0,e?{hydrate:!0}:void 0)}(n,r),a=i._internalRoot,"function"==typeof o){var c=o;o=function(){var t=Hc(a);c.call(t)}}lc((function(){qc(e,a,t,o)}))}return Hc(a)}function Qc(t,e,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:L,key:null==r?null:""+r,children:t,containerInfo:e,implementation:n}}function Xc(t,e){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Yc(e))throw Error(a(200));return Qc(t,e,null,n)}Vc.prototype.render=function(t,e){qc(t,this._internalRoot,null,void 0===e?null:e)},Vc.prototype.unmount=function(t){var e=this._internalRoot,n=void 0===t?null:t,r=e.containerInfo;qc(null,e,null,(function(){r[lr]=null,null!==n&&n()}))},ie=function(t){if(13===t.tag){var e=Ko(Jl(),150,100);tc(t,e),$c(t,e)}},ae=function(t){if(13===t.tag){Jl();var e=Xo++;tc(t,e),$c(t,e)}},le=function(t){if(13===t.tag){var e=Jl();tc(t,e=Zl(e,t,null)),$c(t,e)}},tt=function(t,e,n){switch(e){case"input":if(Nt(t,n),e=n.name,"radio"===n.type&&null!=e){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<n.length;e++){var r=n[e];if(r!==t&&r.form===t.form){var o=fr(r);if(!o)throw Error(a(90));St(r),Nt(r,o)}}}break;case"textarea":Dt(t,n);break;case"select":null!=(e=n.value)&&zt(t,!!n.multiple,e,!1)}},at=ac,lt=function(t,e,n,r){var o=Nl;Nl|=4;try{return $o(98,t.bind(null,e,n,r))}finally{0===(Nl=o)&&Go()}},ct=function(){0==(49&Nl)&&(function(){if(null!==Gl){var t=Gl;Gl=null,t.forEach((function(t,e){Bc(e,t),rc(e)})),Go()}}(),wc())},ut=function(t,e){var n=Nl;Nl|=2;try{return t(e)}finally{0===(Nl=n)&&Go()}};var Kc,Jc,Zc={createPortal:Xc,findDOMNode:function(t){if(null==t)return null;if(1===t.nodeType)return t;var e=t._reactInternalFiber;if(void 0===e){if("function"==typeof t.render)throw Error(a(188));throw Error(a(268,Object.keys(t)))}return t=null===(t=oe(e))?null:t.stateNode},hydrate:function(t,e,n){if(!Yc(e))throw Error(a(200));return Gc(null,t,e,!0,n)},render:function(t,e,n){if(!Yc(e))throw Error(a(200));return Gc(null,t,e,!1,n)},unstable_renderSubtreeIntoContainer:function(t,e,n,r){if(!Yc(n))throw Error(a(200));if(null==t||void 0===t._reactInternalFiber)throw Error(a(38));return Gc(t,e,n,!1,r)},unmountComponentAtNode:function(t){if(!Yc(t))throw Error(a(40));return!!t._reactRootContainer&&(lc((function(){Gc(null,null,t,!1,(function(){t._reactRootContainer=null,t[lr]=null}))})),!0)},unstable_createPortal:function(){return Xc.apply(void 0,arguments)},unstable_batchedUpdates:ac,flushSync:function(t,e){if(0!=(48&Nl))throw Error(a(187));var n=Nl;Nl|=1;try{return $o(99,t.bind(null,e))}finally{Nl=n,Go()}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[ur,sr,fr,A.injectEventPluginsByName,d,ze,function(t){T(t,Oe)},ot,it,Pn,P,wc,{current:!1}]}};Jc=(Kc={findFiberByHostInstance:cr,bundleType:0,version:"16.12.0",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(t){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var e=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(e.isDisabled||!e.supportsFiber)return!0;try{var n=e.inject(t);Tc=function(t){try{e.onCommitFiberRoot(n,t,void 0,64==(64&t.current.effectTag))}catch(t){}},Cc=function(t){try{e.onCommitFiberUnmount(n,t)}catch(t){}}}catch(t){}}(o({},Kc,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:z.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return null===(t=oe(t))?null:t.stateNode},findFiberByHostInstance:function(t){return Jc?Jc(t):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}));var tu={default:Zc},eu=tu&&Zc||tu;t.exports=eu.default||eu},function(t,e,n){"use strict";t.exports=n(42)},function(t,e,n){"use strict";
/** @license React v0.18.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,o,i,a,l;if(Object.defineProperty(e,"__esModule",{value:!0}),"undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,u=null,s=function(){if(null!==c)try{var t=e.unstable_now();c(!0,t),c=null}catch(t){throw setTimeout(s,0),t}},f=Date.now();e.unstable_now=function(){return Date.now()-f},r=function(t){null!==c?setTimeout(r,0,t):(c=t,setTimeout(s,0))},o=function(t,e){u=setTimeout(t,e)},i=function(){clearTimeout(u)},a=function(){return!1},l=e.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,m=window.setTimeout,h=window.clearTimeout;if("undefined"!=typeof console){var g=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof g&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)e.unstable_now=function(){return d.now()};else{var b=p.now();e.unstable_now=function(){return p.now()-b}}var v=!1,y=null,x=-1,w=5,k=0;a=function(){return e.unstable_now()>=k},l=function(){},e.unstable_forceFrameRate=function(t){0>t||125<t?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):w=0<t?Math.floor(1e3/t):5};var _=new MessageChannel,E=_.port2;_.port1.onmessage=function(){if(null!==y){var t=e.unstable_now();k=t+w;try{y(!0,t)?E.postMessage(null):(v=!1,y=null)}catch(t){throw E.postMessage(null),t}}else v=!1},r=function(t){y=t,v||(v=!0,E.postMessage(null))},o=function(t,n){x=m((function(){t(e.unstable_now())}),n)},i=function(){h(x),x=-1}}function S(t,e){var n=t.length;t.push(e);t:for(;;){var r=Math.floor((n-1)/2),o=t[r];if(!(void 0!==o&&0<C(o,e)))break t;t[r]=e,t[n]=o,n=r}}function M(t){return void 0===(t=t[0])?null:t}function T(t){var e=t[0];if(void 0!==e){var n=t.pop();if(n!==e){t[0]=n;t:for(var r=0,o=t.length;r<o;){var i=2*(r+1)-1,a=t[i],l=i+1,c=t[l];if(void 0!==a&&0>C(a,n))void 0!==c&&0>C(c,a)?(t[r]=c,t[l]=n,r=l):(t[r]=a,t[i]=n,r=i);else{if(!(void 0!==c&&0>C(c,n)))break t;t[r]=c,t[l]=n,r=l}}}return e}return null}function C(t,e){var n=t.sortIndex-e.sortIndex;return 0!==n?n:t.id-e.id}var N=[],P=[],A=1,O=null,z=3,j=!1,R=!1,D=!1;function L(t){for(var e=M(P);null!==e;){if(null===e.callback)T(P);else{if(!(e.startTime<=t))break;T(P),e.sortIndex=e.expirationTime,S(N,e)}e=M(P)}}function I(t){if(D=!1,L(t),!R)if(null!==M(N))R=!0,r(U);else{var e=M(P);null!==e&&o(I,e.startTime-t)}}function U(t,n){R=!1,D&&(D=!1,i()),j=!0;var r=z;try{for(L(n),O=M(N);null!==O&&(!(O.expirationTime>n)||t&&!a());){var l=O.callback;if(null!==l){O.callback=null,z=O.priorityLevel;var c=l(O.expirationTime<=n);n=e.unstable_now(),"function"==typeof c?O.callback=c:O===M(N)&&T(N),L(n)}else T(N);O=M(N)}if(null!==O)var u=!0;else{var s=M(P);null!==s&&o(I,s.startTime-n),u=!1}return u}finally{O=null,z=r,j=!1}}function F(t){switch(t){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var B=l;e.unstable_ImmediatePriority=1,e.unstable_UserBlockingPriority=2,e.unstable_NormalPriority=3,e.unstable_IdlePriority=5,e.unstable_LowPriority=4,e.unstable_runWithPriority=function(t,e){switch(t){case 1:case 2:case 3:case 4:case 5:break;default:t=3}var n=z;z=t;try{return e()}finally{z=n}},e.unstable_next=function(t){switch(z){case 1:case 2:case 3:var e=3;break;default:e=z}var n=z;z=e;try{return t()}finally{z=n}},e.unstable_scheduleCallback=function(t,n,a){var l=e.unstable_now();if("object"==typeof a&&null!==a){var c=a.delay;c="number"==typeof c&&0<c?l+c:l,a="number"==typeof a.timeout?a.timeout:F(t)}else a=F(t),c=l;return t={id:A++,callback:n,priorityLevel:t,startTime:c,expirationTime:a=c+a,sortIndex:-1},c>l?(t.sortIndex=c,S(P,t),null===M(N)&&t===M(P)&&(D?i():D=!0,o(I,c-l))):(t.sortIndex=a,S(N,t),R||j||(R=!0,r(U))),t},e.unstable_cancelCallback=function(t){t.callback=null},e.unstable_wrapCallback=function(t){var e=z;return function(){var n=z;z=e;try{return t.apply(this,arguments)}finally{z=n}}},e.unstable_getCurrentPriorityLevel=function(){return z},e.unstable_shouldYield=function(){var t=e.unstable_now();L(t);var n=M(N);return n!==O&&null!==O&&null!==n&&null!==n.callback&&n.startTime<=t&&n.expirationTime<O.expirationTime||a()},e.unstable_requestPaint=B,e.unstable_continueExecution=function(){R||j||(R=!0,r(U))},e.unstable_pauseExecution=function(){},e.unstable_getFirstCallbackNode=function(){return M(N)},e.unstable_Profiling=null},function(t,e,n){(e=n(24)(!1)).push([t.i,'/*!\n * Bootstrap v4.4.1 (https://getbootstrap.com/)\n * Copyright 2011-2019 The Bootstrap Authors\n * Copyright 2011-2019 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n */:root{--blue: #007bff;--indigo: #6610f2;--purple: #6f42c1;--pink: #e83e8c;--red: #dc3545;--orange: #fd7e14;--yellow: #ffc107;--green: #28a745;--teal: #20c997;--cyan: #17a2b8;--white: #fff;--gray: #6c757d;--gray-dark: #343a40;--primary: #007bff;--secondary: #6c757d;--success: #28a745;--info: #17a2b8;--warning: #ffc107;--danger: #dc3545;--light: #f8f9fa;--dark: #343a40;--breakpoint-xs: 0;--breakpoint-sm: 576px;--breakpoint-md: 768px;--breakpoint-lg: 992px;--breakpoint-xl: 1200px;--font-family-sans-serif: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";--font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace}*,*::before,*::after{box-sizing:border-box}html{font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0,0,0,0)}article,aside,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}body{margin:0;font-family:-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-size:1rem;font-weight:400;line-height:1.5;color:#212529;text-align:left;background-color:#fff}[tabindex="-1"]:focus:not(:focus-visible){outline:0 !important}hr{box-sizing:content-box;height:0;overflow:visible}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:0.5rem}p{margin-top:0;margin-bottom:1rem}abbr[title],abbr[data-original-title]{text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;cursor:help;border-bottom:0;-webkit-text-decoration-skip-ink:none;text-decoration-skip-ink:none}address{margin-bottom:1rem;font-style:normal;line-height:inherit}ol,ul,dl{margin-top:0;margin-bottom:1rem}ol ol,ul ul,ol ul,ul ol{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:#007bff;text-decoration:none;background-color:transparent}a:hover{color:#0056b3;text-decoration:underline}a:not([href]){color:inherit;text-decoration:none}a:not([href]):hover{color:inherit;text-decoration:none}pre,code,kbd,samp{font-family:SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;font-size:1em}pre{margin-top:0;margin-bottom:1rem;overflow:auto}figure{margin:0 0 1rem}img{vertical-align:middle;border-style:none}svg{overflow:hidden;vertical-align:middle}table{border-collapse:collapse}caption{padding-top:0.75rem;padding-bottom:0.75rem;color:#6c757d;text-align:left;caption-side:bottom}th{text-align:inherit}label{display:inline-block;margin-bottom:0.5rem}button{border-radius:0}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}input,button,select,optgroup,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}select{word-wrap:normal}button,[type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button:not(:disabled),[type="button"]:not(:disabled),[type="reset"]:not(:disabled),[type="submit"]:not(:disabled){cursor:pointer}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{padding:0;border-style:none}input[type="radio"],input[type="checkbox"]{box-sizing:border-box;padding:0}input[type="date"],input[type="time"],input[type="datetime-local"],input[type="month"]{-webkit-appearance:listbox}textarea{overflow:auto;resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;max-width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit;color:inherit;white-space:normal}progress{vertical-align:baseline}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{outline-offset:-2px;-webkit-appearance:none}[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}output{display:inline-block}summary{display:list-item;cursor:pointer}template{display:none}[hidden]{display:none !important}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{margin-bottom:0.5rem;font-weight:500;line-height:1.2}h1,.h1{font-size:2.5rem}h2,.h2{font-size:2rem}h3,.h3{font-size:1.75rem}h4,.h4{font-size:1.5rem}h5,.h5{font-size:1.25rem}h6,.h6{font-size:1rem}.lead{font-size:1.25rem;font-weight:300}.display-1{font-size:6rem;font-weight:300;line-height:1.2}.display-2{font-size:5.5rem;font-weight:300;line-height:1.2}.display-3{font-size:4.5rem;font-weight:300;line-height:1.2}.display-4{font-size:3.5rem;font-weight:300;line-height:1.2}hr{margin-top:1rem;margin-bottom:1rem;border:0;border-top:1px solid rgba(0,0,0,0.1)}small,.small{font-size:80%;font-weight:400}mark,.mark{padding:0.2em;background-color:#fcf8e3}.list-unstyled{padding-left:0;list-style:none}.list-inline{padding-left:0;list-style:none}.list-inline-item{display:inline-block}.list-inline-item:not(:last-child){margin-right:0.5rem}.initialism{font-size:90%;text-transform:uppercase}.blockquote{margin-bottom:1rem;font-size:1.25rem}.blockquote-footer{display:block;font-size:80%;color:#6c757d}.blockquote-footer::before{content:"\\2014\\00A0"}.img-fluid{max-width:100%;height:auto}.img-thumbnail{padding:0.25rem;background-color:#fff;border:1px solid #dee2e6;border-radius:0.25rem;max-width:100%;height:auto}.figure{display:inline-block}.figure-img{margin-bottom:0.5rem;line-height:1}.figure-caption{font-size:90%;color:#6c757d}code{font-size:87.5%;color:#e83e8c;word-wrap:break-word}a>code{color:inherit}kbd{padding:0.2rem 0.4rem;font-size:87.5%;color:#fff;background-color:#212529;border-radius:0.2rem}kbd kbd{padding:0;font-size:100%;font-weight:700}pre{display:block;font-size:87.5%;color:#212529}pre code{font-size:inherit;color:inherit;word-break:normal}.pre-scrollable{max-height:340px;overflow-y:scroll}.container{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}@media (min-width: 576px){.container{max-width:540px}}@media (min-width: 768px){.container{max-width:720px}}@media (min-width: 992px){.container{max-width:960px}}@media (min-width: 1200px){.container{max-width:1140px}}.container-fluid,.container-sm,.container-md,.container-lg,.container-xl{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}@media (min-width: 576px){.container,.container-sm{max-width:540px}}@media (min-width: 768px){.container,.container-sm,.container-md{max-width:720px}}@media (min-width: 992px){.container,.container-sm,.container-md,.container-lg{max-width:960px}}@media (min-width: 1200px){.container,.container-sm,.container-md,.container-lg,.container-xl{max-width:1140px}}.row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-15px;margin-left:-15px}.no-gutters{margin-right:0;margin-left:0}.no-gutters>.col,.no-gutters>[class*="col-"]{padding-right:0;padding-left:0}.col-1,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-10,.col-11,.col-12,.col,.col-auto,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm,.col-sm-auto,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12,.col-md,.col-md-auto,.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg,.col-lg-auto,.col-xl-1,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-10,.col-xl-11,.col-xl-12,.col-xl,.col-xl-auto{position:relative;width:100%;padding-right:15px;padding-left:15px}.col{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-first{-ms-flex-order:-1;order:-1}.order-last{-ms-flex-order:13;order:13}.order-0{-ms-flex-order:0;order:0}.order-1{-ms-flex-order:1;order:1}.order-2{-ms-flex-order:2;order:2}.order-3{-ms-flex-order:3;order:3}.order-4{-ms-flex-order:4;order:4}.order-5{-ms-flex-order:5;order:5}.order-6{-ms-flex-order:6;order:6}.order-7{-ms-flex-order:7;order:7}.order-8{-ms-flex-order:8;order:8}.order-9{-ms-flex-order:9;order:9}.order-10{-ms-flex-order:10;order:10}.order-11{-ms-flex-order:11;order:11}.order-12{-ms-flex-order:12;order:12}.offset-1{margin-left:8.333333%}.offset-2{margin-left:16.666667%}.offset-3{margin-left:25%}.offset-4{margin-left:33.333333%}.offset-5{margin-left:41.666667%}.offset-6{margin-left:50%}.offset-7{margin-left:58.333333%}.offset-8{margin-left:66.666667%}.offset-9{margin-left:75%}.offset-10{margin-left:83.333333%}.offset-11{margin-left:91.666667%}@media (min-width: 576px){.col-sm{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-sm-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-sm-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-sm-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-sm-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-sm-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-sm-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-sm-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-sm-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-sm-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-sm-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-sm-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-sm-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-sm-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-sm-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-sm-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-sm-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-sm-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-sm-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-sm-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-sm-first{-ms-flex-order:-1;order:-1}.order-sm-last{-ms-flex-order:13;order:13}.order-sm-0{-ms-flex-order:0;order:0}.order-sm-1{-ms-flex-order:1;order:1}.order-sm-2{-ms-flex-order:2;order:2}.order-sm-3{-ms-flex-order:3;order:3}.order-sm-4{-ms-flex-order:4;order:4}.order-sm-5{-ms-flex-order:5;order:5}.order-sm-6{-ms-flex-order:6;order:6}.order-sm-7{-ms-flex-order:7;order:7}.order-sm-8{-ms-flex-order:8;order:8}.order-sm-9{-ms-flex-order:9;order:9}.order-sm-10{-ms-flex-order:10;order:10}.order-sm-11{-ms-flex-order:11;order:11}.order-sm-12{-ms-flex-order:12;order:12}.offset-sm-0{margin-left:0}.offset-sm-1{margin-left:8.333333%}.offset-sm-2{margin-left:16.666667%}.offset-sm-3{margin-left:25%}.offset-sm-4{margin-left:33.333333%}.offset-sm-5{margin-left:41.666667%}.offset-sm-6{margin-left:50%}.offset-sm-7{margin-left:58.333333%}.offset-sm-8{margin-left:66.666667%}.offset-sm-9{margin-left:75%}.offset-sm-10{margin-left:83.333333%}.offset-sm-11{margin-left:91.666667%}}@media (min-width: 768px){.col-md{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-md-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-md-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-md-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-md-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-md-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-md-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-md-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-md-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-md-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-md-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-md-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-md-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-md-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-md-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-md-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-md-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-md-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-md-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-md-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-md-first{-ms-flex-order:-1;order:-1}.order-md-last{-ms-flex-order:13;order:13}.order-md-0{-ms-flex-order:0;order:0}.order-md-1{-ms-flex-order:1;order:1}.order-md-2{-ms-flex-order:2;order:2}.order-md-3{-ms-flex-order:3;order:3}.order-md-4{-ms-flex-order:4;order:4}.order-md-5{-ms-flex-order:5;order:5}.order-md-6{-ms-flex-order:6;order:6}.order-md-7{-ms-flex-order:7;order:7}.order-md-8{-ms-flex-order:8;order:8}.order-md-9{-ms-flex-order:9;order:9}.order-md-10{-ms-flex-order:10;order:10}.order-md-11{-ms-flex-order:11;order:11}.order-md-12{-ms-flex-order:12;order:12}.offset-md-0{margin-left:0}.offset-md-1{margin-left:8.333333%}.offset-md-2{margin-left:16.666667%}.offset-md-3{margin-left:25%}.offset-md-4{margin-left:33.333333%}.offset-md-5{margin-left:41.666667%}.offset-md-6{margin-left:50%}.offset-md-7{margin-left:58.333333%}.offset-md-8{margin-left:66.666667%}.offset-md-9{margin-left:75%}.offset-md-10{margin-left:83.333333%}.offset-md-11{margin-left:91.666667%}}@media (min-width: 992px){.col-lg{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-lg-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-lg-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-lg-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-lg-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-lg-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-lg-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-lg-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-lg-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-lg-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-lg-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-lg-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-lg-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-lg-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-lg-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-lg-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-lg-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-lg-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-lg-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-lg-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-lg-first{-ms-flex-order:-1;order:-1}.order-lg-last{-ms-flex-order:13;order:13}.order-lg-0{-ms-flex-order:0;order:0}.order-lg-1{-ms-flex-order:1;order:1}.order-lg-2{-ms-flex-order:2;order:2}.order-lg-3{-ms-flex-order:3;order:3}.order-lg-4{-ms-flex-order:4;order:4}.order-lg-5{-ms-flex-order:5;order:5}.order-lg-6{-ms-flex-order:6;order:6}.order-lg-7{-ms-flex-order:7;order:7}.order-lg-8{-ms-flex-order:8;order:8}.order-lg-9{-ms-flex-order:9;order:9}.order-lg-10{-ms-flex-order:10;order:10}.order-lg-11{-ms-flex-order:11;order:11}.order-lg-12{-ms-flex-order:12;order:12}.offset-lg-0{margin-left:0}.offset-lg-1{margin-left:8.333333%}.offset-lg-2{margin-left:16.666667%}.offset-lg-3{margin-left:25%}.offset-lg-4{margin-left:33.333333%}.offset-lg-5{margin-left:41.666667%}.offset-lg-6{margin-left:50%}.offset-lg-7{margin-left:58.333333%}.offset-lg-8{margin-left:66.666667%}.offset-lg-9{margin-left:75%}.offset-lg-10{margin-left:83.333333%}.offset-lg-11{margin-left:91.666667%}}@media (min-width: 1200px){.col-xl{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-xl-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-xl-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-xl-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-xl-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-xl-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-xl-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-xl-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-xl-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-xl-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-xl-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-xl-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-xl-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-xl-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-xl-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-xl-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-xl-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-xl-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-xl-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-xl-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-xl-first{-ms-flex-order:-1;order:-1}.order-xl-last{-ms-flex-order:13;order:13}.order-xl-0{-ms-flex-order:0;order:0}.order-xl-1{-ms-flex-order:1;order:1}.order-xl-2{-ms-flex-order:2;order:2}.order-xl-3{-ms-flex-order:3;order:3}.order-xl-4{-ms-flex-order:4;order:4}.order-xl-5{-ms-flex-order:5;order:5}.order-xl-6{-ms-flex-order:6;order:6}.order-xl-7{-ms-flex-order:7;order:7}.order-xl-8{-ms-flex-order:8;order:8}.order-xl-9{-ms-flex-order:9;order:9}.order-xl-10{-ms-flex-order:10;order:10}.order-xl-11{-ms-flex-order:11;order:11}.order-xl-12{-ms-flex-order:12;order:12}.offset-xl-0{margin-left:0}.offset-xl-1{margin-left:8.333333%}.offset-xl-2{margin-left:16.666667%}.offset-xl-3{margin-left:25%}.offset-xl-4{margin-left:33.333333%}.offset-xl-5{margin-left:41.666667%}.offset-xl-6{margin-left:50%}.offset-xl-7{margin-left:58.333333%}.offset-xl-8{margin-left:66.666667%}.offset-xl-9{margin-left:75%}.offset-xl-10{margin-left:83.333333%}.offset-xl-11{margin-left:91.666667%}}.table{width:100%;margin-bottom:1rem;color:#212529}.table th,.table td{padding:0.75rem;vertical-align:top;border-top:1px solid #dee2e6}.table thead th{vertical-align:bottom;border-bottom:2px solid #dee2e6}.table tbody+tbody{border-top:2px solid #dee2e6}.table-sm th,.table-sm td{padding:0.3rem}.table-bordered{border:1px solid #dee2e6}.table-bordered th,.table-bordered td{border:1px solid #dee2e6}.table-bordered thead th,.table-bordered thead td{border-bottom-width:2px}.table-borderless th,.table-borderless td,.table-borderless thead th,.table-borderless tbody+tbody{border:0}.table-striped tbody tr:nth-of-type(odd){background-color:rgba(0,0,0,0.05)}.table-hover tbody tr:hover{color:#212529;background-color:rgba(0,0,0,0.075)}.table-primary,.table-primary>th,.table-primary>td{background-color:#b8daff}.table-primary th,.table-primary td,.table-primary thead th,.table-primary tbody+tbody{border-color:#7abaff}.table-hover .table-primary:hover{background-color:#9fcdff}.table-hover .table-primary:hover>td,.table-hover .table-primary:hover>th{background-color:#9fcdff}.table-secondary,.table-secondary>th,.table-secondary>td{background-color:#d6d8db}.table-secondary th,.table-secondary td,.table-secondary thead th,.table-secondary tbody+tbody{border-color:#b3b7bb}.table-hover .table-secondary:hover{background-color:#c8cbcf}.table-hover .table-secondary:hover>td,.table-hover .table-secondary:hover>th{background-color:#c8cbcf}.table-success,.table-success>th,.table-success>td{background-color:#c3e6cb}.table-success th,.table-success td,.table-success thead th,.table-success tbody+tbody{border-color:#8fd19e}.table-hover .table-success:hover{background-color:#b1dfbb}.table-hover .table-success:hover>td,.table-hover .table-success:hover>th{background-color:#b1dfbb}.table-info,.table-info>th,.table-info>td{background-color:#bee5eb}.table-info th,.table-info td,.table-info thead th,.table-info tbody+tbody{border-color:#86cfda}.table-hover .table-info:hover{background-color:#abdde5}.table-hover .table-info:hover>td,.table-hover .table-info:hover>th{background-color:#abdde5}.table-warning,.table-warning>th,.table-warning>td{background-color:#ffeeba}.table-warning th,.table-warning td,.table-warning thead th,.table-warning tbody+tbody{border-color:#ffdf7e}.table-hover .table-warning:hover{background-color:#ffe8a1}.table-hover .table-warning:hover>td,.table-hover .table-warning:hover>th{background-color:#ffe8a1}.table-danger,.table-danger>th,.table-danger>td{background-color:#f5c6cb}.table-danger th,.table-danger td,.table-danger thead th,.table-danger tbody+tbody{border-color:#ed969e}.table-hover .table-danger:hover{background-color:#f1b0b7}.table-hover .table-danger:hover>td,.table-hover .table-danger:hover>th{background-color:#f1b0b7}.table-light,.table-light>th,.table-light>td{background-color:#fdfdfe}.table-light th,.table-light td,.table-light thead th,.table-light tbody+tbody{border-color:#fbfcfc}.table-hover .table-light:hover{background-color:#ececf6}.table-hover .table-light:hover>td,.table-hover .table-light:hover>th{background-color:#ececf6}.table-dark,.table-dark>th,.table-dark>td{background-color:#c6c8ca}.table-dark th,.table-dark td,.table-dark thead th,.table-dark tbody+tbody{border-color:#95999c}.table-hover .table-dark:hover{background-color:#b9bbbe}.table-hover .table-dark:hover>td,.table-hover .table-dark:hover>th{background-color:#b9bbbe}.table-active,.table-active>th,.table-active>td{background-color:rgba(0,0,0,0.075)}.table-hover .table-active:hover{background-color:rgba(0,0,0,0.075)}.table-hover .table-active:hover>td,.table-hover .table-active:hover>th{background-color:rgba(0,0,0,0.075)}.table .thead-dark th{color:#fff;background-color:#343a40;border-color:#454d55}.table .thead-light th{color:#495057;background-color:#e9ecef;border-color:#dee2e6}.table-dark{color:#fff;background-color:#343a40}.table-dark th,.table-dark td,.table-dark thead th{border-color:#454d55}.table-dark.table-bordered{border:0}.table-dark.table-striped tbody tr:nth-of-type(odd){background-color:rgba(255,255,255,0.05)}.table-dark.table-hover tbody tr:hover{color:#fff;background-color:rgba(255,255,255,0.075)}@media (max-width: 575.98px){.table-responsive-sm{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-sm>.table-bordered{border:0}}@media (max-width: 767.98px){.table-responsive-md{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-md>.table-bordered{border:0}}@media (max-width: 991.98px){.table-responsive-lg{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-lg>.table-bordered{border:0}}@media (max-width: 1199.98px){.table-responsive-xl{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-xl>.table-bordered{border:0}}.table-responsive{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive>.table-bordered{border:0}.form-control{display:block;width:100%;height:calc(1.5em + 0.75rem + 2px);padding:0.375rem 0.75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;border-radius:0.25rem;transition:border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.form-control{transition:none}}.form-control::-ms-expand{background-color:transparent;border:0}.form-control:-moz-focusring{color:transparent;text-shadow:0 0 0 #495057}.form-control:focus{color:#495057;background-color:#fff;border-color:#80bdff;outline:0;box-shadow:0 0 0 0.2rem rgba(0,123,255,0.25)}.form-control::-webkit-input-placeholder{color:#6c757d;opacity:1}.form-control::-moz-placeholder{color:#6c757d;opacity:1}.form-control:-ms-input-placeholder{color:#6c757d;opacity:1}.form-control::-ms-input-placeholder{color:#6c757d;opacity:1}.form-control::placeholder{color:#6c757d;opacity:1}.form-control:disabled,.form-control[readonly]{background-color:#e9ecef;opacity:1}select.form-control:focus::-ms-value{color:#495057;background-color:#fff}.form-control-file,.form-control-range{display:block;width:100%}.col-form-label{padding-top:calc(0.375rem + 1px);padding-bottom:calc(0.375rem + 1px);margin-bottom:0;font-size:inherit;line-height:1.5}.col-form-label-lg{padding-top:calc(0.5rem + 1px);padding-bottom:calc(0.5rem + 1px);font-size:1.25rem;line-height:1.5}.col-form-label-sm{padding-top:calc(0.25rem + 1px);padding-bottom:calc(0.25rem + 1px);font-size:0.875rem;line-height:1.5}.form-control-plaintext{display:block;width:100%;padding:0.375rem 0;margin-bottom:0;font-size:1rem;line-height:1.5;color:#212529;background-color:transparent;border:solid transparent;border-width:1px 0}.form-control-plaintext.form-control-sm,.form-control-plaintext.form-control-lg{padding-right:0;padding-left:0}.form-control-sm{height:calc(1.5em + 0.5rem + 2px);padding:0.25rem 0.5rem;font-size:0.875rem;line-height:1.5;border-radius:0.2rem}.form-control-lg{height:calc(1.5em + 1rem + 2px);padding:0.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:0.3rem}select.form-control[size],select.form-control[multiple]{height:auto}textarea.form-control{height:auto}.form-group{margin-bottom:1rem}.form-text{display:block;margin-top:0.25rem}.form-row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-5px;margin-left:-5px}.form-row>.col,.form-row>[class*="col-"]{padding-right:5px;padding-left:5px}.form-check{position:relative;display:block;padding-left:1.25rem}.form-check-input{position:absolute;margin-top:0.3rem;margin-left:-1.25rem}.form-check-input[disabled] ~ .form-check-label,.form-check-input:disabled ~ .form-check-label{color:#6c757d}.form-check-label{margin-bottom:0}.form-check-inline{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;padding-left:0;margin-right:0.75rem}.form-check-inline .form-check-input{position:static;margin-top:0;margin-right:0.3125rem;margin-left:0}.valid-feedback{display:none;width:100%;margin-top:0.25rem;font-size:80%;color:#28a745}.valid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:0.25rem 0.5rem;margin-top:.1rem;font-size:0.875rem;line-height:1.5;color:#fff;background-color:rgba(40,167,69,0.9);border-radius:0.25rem}.was-validated :valid ~ .valid-feedback,.was-validated :valid ~ .valid-tooltip,.is-valid ~ .valid-feedback,.is-valid ~ .valid-tooltip{display:block}.was-validated .form-control:valid,.form-control.is-valid{border-color:#28a745;padding-right:calc(1.5em + 0.75rem);background-image:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'8\' height=\'8\' viewBox=\'0 0 8 8\'%3e%3cpath fill=\'%2328a745\' d=\'M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z\'/%3e%3c/svg%3e");background-repeat:no-repeat;background-position:right calc(0.375em + 0.1875rem) center;background-size:calc(0.75em + 0.375rem) calc(0.75em + 0.375rem)}.was-validated .form-control:valid:focus,.form-control.is-valid:focus{border-color:#28a745;box-shadow:0 0 0 0.2rem rgba(40,167,69,0.25)}.was-validated textarea.form-control:valid,textarea.form-control.is-valid{padding-right:calc(1.5em + 0.75rem);background-position:top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem)}.was-validated .custom-select:valid,.custom-select.is-valid{border-color:#28a745;padding-right:calc(0.75em + 2.3125rem);background:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'4\' height=\'5\' viewBox=\'0 0 4 5\'%3e%3cpath fill=\'%23343a40\' d=\'M2 0L0 2h4zm0 5L0 3h4z\'/%3e%3c/svg%3e") no-repeat right 0.75rem center/8px 10px,url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'8\' height=\'8\' viewBox=\'0 0 8 8\'%3e%3cpath fill=\'%2328a745\' d=\'M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z\'/%3e%3c/svg%3e") #fff no-repeat center right 1.75rem/calc(0.75em + 0.375rem) calc(0.75em + 0.375rem)}.was-validated .custom-select:valid:focus,.custom-select.is-valid:focus{border-color:#28a745;box-shadow:0 0 0 0.2rem rgba(40,167,69,0.25)}.was-validated .form-check-input:valid ~ .form-check-label,.form-check-input.is-valid ~ .form-check-label{color:#28a745}.was-validated .form-check-input:valid ~ .valid-feedback,.was-validated .form-check-input:valid ~ .valid-tooltip,.form-check-input.is-valid ~ .valid-feedback,.form-check-input.is-valid ~ .valid-tooltip{display:block}.was-validated .custom-control-input:valid ~ .custom-control-label,.custom-control-input.is-valid ~ .custom-control-label{color:#28a745}.was-validated .custom-control-input:valid ~ .custom-control-label::before,.custom-control-input.is-valid ~ .custom-control-label::before{border-color:#28a745}.was-validated .custom-control-input:valid:checked ~ .custom-control-label::before,.custom-control-input.is-valid:checked ~ .custom-control-label::before{border-color:#34ce57;background-color:#34ce57}.was-validated .custom-control-input:valid:focus ~ .custom-control-label::before,.custom-control-input.is-valid:focus ~ .custom-control-label::before{box-shadow:0 0 0 0.2rem rgba(40,167,69,0.25)}.was-validated .custom-control-input:valid:focus:not(:checked) ~ .custom-control-label::before,.custom-control-input.is-valid:focus:not(:checked) ~ .custom-control-label::before{border-color:#28a745}.was-validated .custom-file-input:valid ~ .custom-file-label,.custom-file-input.is-valid ~ .custom-file-label{border-color:#28a745}.was-validated .custom-file-input:valid:focus ~ .custom-file-label,.custom-file-input.is-valid:focus ~ .custom-file-label{border-color:#28a745;box-shadow:0 0 0 0.2rem rgba(40,167,69,0.25)}.invalid-feedback{display:none;width:100%;margin-top:0.25rem;font-size:80%;color:#dc3545}.invalid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:0.25rem 0.5rem;margin-top:.1rem;font-size:0.875rem;line-height:1.5;color:#fff;background-color:rgba(220,53,69,0.9);border-radius:0.25rem}.was-validated :invalid ~ .invalid-feedback,.was-validated :invalid ~ .invalid-tooltip,.is-invalid ~ .invalid-feedback,.is-invalid ~ .invalid-tooltip{display:block}.was-validated .form-control:invalid,.form-control.is-invalid{border-color:#dc3545;padding-right:calc(1.5em + 0.75rem);background-image:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'12\' height=\'12\' fill=\'none\' stroke=\'%23dc3545\' viewBox=\'0 0 12 12\'%3e%3ccircle cx=\'6\' cy=\'6\' r=\'4.5\'/%3e%3cpath stroke-linejoin=\'round\' d=\'M5.8 3.6h.4L6 6.5z\'/%3e%3ccircle cx=\'6\' cy=\'8.2\' r=\'.6\' fill=\'%23dc3545\' stroke=\'none\'/%3e%3c/svg%3e");background-repeat:no-repeat;background-position:right calc(0.375em + 0.1875rem) center;background-size:calc(0.75em + 0.375rem) calc(0.75em + 0.375rem)}.was-validated .form-control:invalid:focus,.form-control.is-invalid:focus{border-color:#dc3545;box-shadow:0 0 0 0.2rem rgba(220,53,69,0.25)}.was-validated textarea.form-control:invalid,textarea.form-control.is-invalid{padding-right:calc(1.5em + 0.75rem);background-position:top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem)}.was-validated .custom-select:invalid,.custom-select.is-invalid{border-color:#dc3545;padding-right:calc(0.75em + 2.3125rem);background:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'4\' height=\'5\' viewBox=\'0 0 4 5\'%3e%3cpath fill=\'%23343a40\' d=\'M2 0L0 2h4zm0 5L0 3h4z\'/%3e%3c/svg%3e") no-repeat right 0.75rem center/8px 10px,url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'12\' height=\'12\' fill=\'none\' stroke=\'%23dc3545\' viewBox=\'0 0 12 12\'%3e%3ccircle cx=\'6\' cy=\'6\' r=\'4.5\'/%3e%3cpath stroke-linejoin=\'round\' d=\'M5.8 3.6h.4L6 6.5z\'/%3e%3ccircle cx=\'6\' cy=\'8.2\' r=\'.6\' fill=\'%23dc3545\' stroke=\'none\'/%3e%3c/svg%3e") #fff no-repeat center right 1.75rem/calc(0.75em + 0.375rem) calc(0.75em + 0.375rem)}.was-validated .custom-select:invalid:focus,.custom-select.is-invalid:focus{border-color:#dc3545;box-shadow:0 0 0 0.2rem rgba(220,53,69,0.25)}.was-validated .form-check-input:invalid ~ .form-check-label,.form-check-input.is-invalid ~ .form-check-label{color:#dc3545}.was-validated .form-check-input:invalid ~ .invalid-feedback,.was-validated .form-check-input:invalid ~ .invalid-tooltip,.form-check-input.is-invalid ~ .invalid-feedback,.form-check-input.is-invalid ~ .invalid-tooltip{display:block}.was-validated .custom-control-input:invalid ~ .custom-control-label,.custom-control-input.is-invalid ~ .custom-control-label{color:#dc3545}.was-validated .custom-control-input:invalid ~ .custom-control-label::before,.custom-control-input.is-invalid ~ .custom-control-label::before{border-color:#dc3545}.was-validated .custom-control-input:invalid:checked ~ .custom-control-label::before,.custom-control-input.is-invalid:checked ~ .custom-control-label::before{border-color:#e4606d;background-color:#e4606d}.was-validated .custom-control-input:invalid:focus ~ .custom-control-label::before,.custom-control-input.is-invalid:focus ~ .custom-control-label::before{box-shadow:0 0 0 0.2rem rgba(220,53,69,0.25)}.was-validated .custom-control-input:invalid:focus:not(:checked) ~ .custom-control-label::before,.custom-control-input.is-invalid:focus:not(:checked) ~ .custom-control-label::before{border-color:#dc3545}.was-validated .custom-file-input:invalid ~ .custom-file-label,.custom-file-input.is-invalid ~ .custom-file-label{border-color:#dc3545}.was-validated .custom-file-input:invalid:focus ~ .custom-file-label,.custom-file-input.is-invalid:focus ~ .custom-file-label{border-color:#dc3545;box-shadow:0 0 0 0.2rem rgba(220,53,69,0.25)}.form-inline{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center}.form-inline .form-check{width:100%}@media (min-width: 576px){.form-inline label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin-bottom:0}.form-inline .form-group{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center;margin-bottom:0}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-plaintext{display:inline-block}.form-inline .input-group,.form-inline .custom-select{width:auto}.form-inline .form-check{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:auto;padding-left:0}.form-inline .form-check-input{position:relative;-ms-flex-negative:0;flex-shrink:0;margin-top:0;margin-right:0.25rem;margin-left:0}.form-inline .custom-control{-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.form-inline .custom-control-label{margin-bottom:0}}.btn{display:inline-block;font-weight:400;color:#212529;text-align:center;vertical-align:middle;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;border:1px solid transparent;padding:0.375rem 0.75rem;font-size:1rem;line-height:1.5;border-radius:0.25rem;transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.btn{transition:none}}.btn:hover{color:#212529;text-decoration:none}.btn:focus,.btn.focus{outline:0;box-shadow:0 0 0 0.2rem rgba(0,123,255,0.25)}.btn.disabled,.btn:disabled{opacity:0.65}a.btn.disabled,fieldset:disabled a.btn{pointer-events:none}.btn-primary{color:#fff;background-color:#007bff;border-color:#007bff}.btn-primary:hover{color:#fff;background-color:#0069d9;border-color:#0062cc}.btn-primary:focus,.btn-primary.focus{color:#fff;background-color:#0069d9;border-color:#0062cc;box-shadow:0 0 0 0.2rem rgba(38,143,255,0.5)}.btn-primary.disabled,.btn-primary:disabled{color:#fff;background-color:#007bff;border-color:#007bff}.btn-primary:not(:disabled):not(.disabled):active,.btn-primary:not(:disabled):not(.disabled).active,.show>.btn-primary.dropdown-toggle{color:#fff;background-color:#0062cc;border-color:#005cbf}.btn-primary:not(:disabled):not(.disabled):active:focus,.btn-primary:not(:disabled):not(.disabled).active:focus,.show>.btn-primary.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(38,143,255,0.5)}.btn-secondary{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:hover{color:#fff;background-color:#5a6268;border-color:#545b62}.btn-secondary:focus,.btn-secondary.focus{color:#fff;background-color:#5a6268;border-color:#545b62;box-shadow:0 0 0 0.2rem rgba(130,138,145,0.5)}.btn-secondary.disabled,.btn-secondary:disabled{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:not(:disabled):not(.disabled):active,.btn-secondary:not(:disabled):not(.disabled).active,.show>.btn-secondary.dropdown-toggle{color:#fff;background-color:#545b62;border-color:#4e555b}.btn-secondary:not(:disabled):not(.disabled):active:focus,.btn-secondary:not(:disabled):not(.disabled).active:focus,.show>.btn-secondary.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(130,138,145,0.5)}.btn-success{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:hover{color:#fff;background-color:#218838;border-color:#1e7e34}.btn-success:focus,.btn-success.focus{color:#fff;background-color:#218838;border-color:#1e7e34;box-shadow:0 0 0 0.2rem rgba(72,180,97,0.5)}.btn-success.disabled,.btn-success:disabled{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:not(:disabled):not(.disabled):active,.btn-success:not(:disabled):not(.disabled).active,.show>.btn-success.dropdown-toggle{color:#fff;background-color:#1e7e34;border-color:#1c7430}.btn-success:not(:disabled):not(.disabled):active:focus,.btn-success:not(:disabled):not(.disabled).active:focus,.show>.btn-success.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(72,180,97,0.5)}.btn-info{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:hover{color:#fff;background-color:#138496;border-color:#117a8b}.btn-info:focus,.btn-info.focus{color:#fff;background-color:#138496;border-color:#117a8b;box-shadow:0 0 0 0.2rem rgba(58,176,195,0.5)}.btn-info.disabled,.btn-info:disabled{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:not(:disabled):not(.disabled):active,.btn-info:not(:disabled):not(.disabled).active,.show>.btn-info.dropdown-toggle{color:#fff;background-color:#117a8b;border-color:#10707f}.btn-info:not(:disabled):not(.disabled):active:focus,.btn-info:not(:disabled):not(.disabled).active:focus,.show>.btn-info.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(58,176,195,0.5)}.btn-warning{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-warning:hover{color:#212529;background-color:#e0a800;border-color:#d39e00}.btn-warning:focus,.btn-warning.focus{color:#212529;background-color:#e0a800;border-color:#d39e00;box-shadow:0 0 0 0.2rem rgba(222,170,12,0.5)}.btn-warning.disabled,.btn-warning:disabled{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-warning:not(:disabled):not(.disabled):active,.btn-warning:not(:disabled):not(.disabled).active,.show>.btn-warning.dropdown-toggle{color:#212529;background-color:#d39e00;border-color:#c69500}.btn-warning:not(:disabled):not(.disabled):active:focus,.btn-warning:not(:disabled):not(.disabled).active:focus,.show>.btn-warning.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(222,170,12,0.5)}.btn-danger{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:hover{color:#fff;background-color:#c82333;border-color:#bd2130}.btn-danger:focus,.btn-danger.focus{color:#fff;background-color:#c82333;border-color:#bd2130;box-shadow:0 0 0 0.2rem rgba(225,83,97,0.5)}.btn-danger.disabled,.btn-danger:disabled{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:not(:disabled):not(.disabled):active,.btn-danger:not(:disabled):not(.disabled).active,.show>.btn-danger.dropdown-toggle{color:#fff;background-color:#bd2130;border-color:#b21f2d}.btn-danger:not(:disabled):not(.disabled):active:focus,.btn-danger:not(:disabled):not(.disabled).active:focus,.show>.btn-danger.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(225,83,97,0.5)}.btn-light{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:hover{color:#212529;background-color:#e2e6ea;border-color:#dae0e5}.btn-light:focus,.btn-light.focus{color:#212529;background-color:#e2e6ea;border-color:#dae0e5;box-shadow:0 0 0 0.2rem rgba(216,217,219,0.5)}.btn-light.disabled,.btn-light:disabled{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:not(:disabled):not(.disabled):active,.btn-light:not(:disabled):not(.disabled).active,.show>.btn-light.dropdown-toggle{color:#212529;background-color:#dae0e5;border-color:#d3d9df}.btn-light:not(:disabled):not(.disabled):active:focus,.btn-light:not(:disabled):not(.disabled).active:focus,.show>.btn-light.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(216,217,219,0.5)}.btn-dark{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:hover{color:#fff;background-color:#23272b;border-color:#1d2124}.btn-dark:focus,.btn-dark.focus{color:#fff;background-color:#23272b;border-color:#1d2124;box-shadow:0 0 0 0.2rem rgba(82,88,93,0.5)}.btn-dark.disabled,.btn-dark:disabled{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:not(:disabled):not(.disabled):active,.btn-dark:not(:disabled):not(.disabled).active,.show>.btn-dark.dropdown-toggle{color:#fff;background-color:#1d2124;border-color:#171a1d}.btn-dark:not(:disabled):not(.disabled):active:focus,.btn-dark:not(:disabled):not(.disabled).active:focus,.show>.btn-dark.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(82,88,93,0.5)}.btn-outline-primary{color:#007bff;border-color:#007bff}.btn-outline-primary:hover{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary:focus,.btn-outline-primary.focus{box-shadow:0 0 0 0.2rem rgba(0,123,255,0.5)}.btn-outline-primary.disabled,.btn-outline-primary:disabled{color:#007bff;background-color:transparent}.btn-outline-primary:not(:disabled):not(.disabled):active,.btn-outline-primary:not(:disabled):not(.disabled).active,.show>.btn-outline-primary.dropdown-toggle{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary:not(:disabled):not(.disabled):active:focus,.btn-outline-primary:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-primary.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(0,123,255,0.5)}.btn-outline-secondary{color:#6c757d;border-color:#6c757d}.btn-outline-secondary:hover{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary:focus,.btn-outline-secondary.focus{box-shadow:0 0 0 0.2rem rgba(108,117,125,0.5)}.btn-outline-secondary.disabled,.btn-outline-secondary:disabled{color:#6c757d;background-color:transparent}.btn-outline-secondary:not(:disabled):not(.disabled):active,.btn-outline-secondary:not(:disabled):not(.disabled).active,.show>.btn-outline-secondary.dropdown-toggle{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary:not(:disabled):not(.disabled):active:focus,.btn-outline-secondary:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-secondary.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(108,117,125,0.5)}.btn-outline-success{color:#28a745;border-color:#28a745}.btn-outline-success:hover{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success:focus,.btn-outline-success.focus{box-shadow:0 0 0 0.2rem rgba(40,167,69,0.5)}.btn-outline-success.disabled,.btn-outline-success:disabled{color:#28a745;background-color:transparent}.btn-outline-success:not(:disabled):not(.disabled):active,.btn-outline-success:not(:disabled):not(.disabled).active,.show>.btn-outline-success.dropdown-toggle{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success:not(:disabled):not(.disabled):active:focus,.btn-outline-success:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-success.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(40,167,69,0.5)}.btn-outline-info{color:#17a2b8;border-color:#17a2b8}.btn-outline-info:hover{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info:focus,.btn-outline-info.focus{box-shadow:0 0 0 0.2rem rgba(23,162,184,0.5)}.btn-outline-info.disabled,.btn-outline-info:disabled{color:#17a2b8;background-color:transparent}.btn-outline-info:not(:disabled):not(.disabled):active,.btn-outline-info:not(:disabled):not(.disabled).active,.show>.btn-outline-info.dropdown-toggle{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info:not(:disabled):not(.disabled):active:focus,.btn-outline-info:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-info.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(23,162,184,0.5)}.btn-outline-warning{color:#ffc107;border-color:#ffc107}.btn-outline-warning:hover{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning:focus,.btn-outline-warning.focus{box-shadow:0 0 0 0.2rem rgba(255,193,7,0.5)}.btn-outline-warning.disabled,.btn-outline-warning:disabled{color:#ffc107;background-color:transparent}.btn-outline-warning:not(:disabled):not(.disabled):active,.btn-outline-warning:not(:disabled):not(.disabled).active,.show>.btn-outline-warning.dropdown-toggle{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning:not(:disabled):not(.disabled):active:focus,.btn-outline-warning:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-warning.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(255,193,7,0.5)}.btn-outline-danger{color:#dc3545;border-color:#dc3545}.btn-outline-danger:hover{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger:focus,.btn-outline-danger.focus{box-shadow:0 0 0 0.2rem rgba(220,53,69,0.5)}.btn-outline-danger.disabled,.btn-outline-danger:disabled{color:#dc3545;background-color:transparent}.btn-outline-danger:not(:disabled):not(.disabled):active,.btn-outline-danger:not(:disabled):not(.disabled).active,.show>.btn-outline-danger.dropdown-toggle{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger:not(:disabled):not(.disabled):active:focus,.btn-outline-danger:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-danger.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(220,53,69,0.5)}.btn-outline-light{color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:hover{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:focus,.btn-outline-light.focus{box-shadow:0 0 0 0.2rem rgba(248,249,250,0.5)}.btn-outline-light.disabled,.btn-outline-light:disabled{color:#f8f9fa;background-color:transparent}.btn-outline-light:not(:disabled):not(.disabled):active,.btn-outline-light:not(:disabled):not(.disabled).active,.show>.btn-outline-light.dropdown-toggle{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:not(:disabled):not(.disabled):active:focus,.btn-outline-light:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-light.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(248,249,250,0.5)}.btn-outline-dark{color:#343a40;border-color:#343a40}.btn-outline-dark:hover{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark:focus,.btn-outline-dark.focus{box-shadow:0 0 0 0.2rem rgba(52,58,64,0.5)}.btn-outline-dark.disabled,.btn-outline-dark:disabled{color:#343a40;background-color:transparent}.btn-outline-dark:not(:disabled):not(.disabled):active,.btn-outline-dark:not(:disabled):not(.disabled).active,.show>.btn-outline-dark.dropdown-toggle{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark:not(:disabled):not(.disabled):active:focus,.btn-outline-dark:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-dark.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(52,58,64,0.5)}.btn-link{font-weight:400;color:#007bff;text-decoration:none}.btn-link:hover{color:#0056b3;text-decoration:underline}.btn-link:focus,.btn-link.focus{text-decoration:underline;box-shadow:none}.btn-link:disabled,.btn-link.disabled{color:#6c757d;pointer-events:none}.btn-lg,.btn-group-lg>.btn{padding:0.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:0.3rem}.btn-sm,.btn-group-sm>.btn{padding:0.25rem 0.5rem;font-size:0.875rem;line-height:1.5;border-radius:0.2rem}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:0.5rem}input[type="submit"].btn-block,input[type="reset"].btn-block,input[type="button"].btn-block{width:100%}.fade{transition:opacity 0.15s linear}@media (prefers-reduced-motion: reduce){.fade{transition:none}}.fade:not(.show){opacity:0}.collapse:not(.show){display:none}.collapsing{position:relative;height:0;overflow:hidden;transition:height 0.35s ease}@media (prefers-reduced-motion: reduce){.collapsing{transition:none}}.dropup,.dropright,.dropdown,.dropleft{position:relative}.dropdown-toggle{white-space:nowrap}.dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:"";border-top:0.3em solid;border-right:0.3em solid transparent;border-bottom:0;border-left:0.3em solid transparent}.dropdown-toggle:empty::after{margin-left:0}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:10rem;padding:0.5rem 0;margin:0.125rem 0 0;font-size:1rem;color:#212529;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,0.15);border-radius:0.25rem}.dropdown-menu-left{right:auto;left:0}.dropdown-menu-right{right:0;left:auto}@media (min-width: 576px){.dropdown-menu-sm-left{right:auto;left:0}.dropdown-menu-sm-right{right:0;left:auto}}@media (min-width: 768px){.dropdown-menu-md-left{right:auto;left:0}.dropdown-menu-md-right{right:0;left:auto}}@media (min-width: 992px){.dropdown-menu-lg-left{right:auto;left:0}.dropdown-menu-lg-right{right:0;left:auto}}@media (min-width: 1200px){.dropdown-menu-xl-left{right:auto;left:0}.dropdown-menu-xl-right{right:0;left:auto}}.dropup .dropdown-menu{top:auto;bottom:100%;margin-top:0;margin-bottom:0.125rem}.dropup .dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:"";border-top:0;border-right:0.3em solid transparent;border-bottom:0.3em solid;border-left:0.3em solid transparent}.dropup .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-menu{top:0;right:auto;left:100%;margin-top:0;margin-left:0.125rem}.dropright .dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:"";border-top:0.3em solid transparent;border-right:0;border-bottom:0.3em solid transparent;border-left:0.3em solid}.dropright .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-toggle::after{vertical-align:0}.dropleft .dropdown-menu{top:0;right:100%;left:auto;margin-top:0;margin-right:0.125rem}.dropleft .dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:""}.dropleft .dropdown-toggle::after{display:none}.dropleft .dropdown-toggle::before{display:inline-block;margin-right:0.255em;vertical-align:0.255em;content:"";border-top:0.3em solid transparent;border-right:0.3em solid;border-bottom:0.3em solid transparent}.dropleft .dropdown-toggle:empty::after{margin-left:0}.dropleft .dropdown-toggle::before{vertical-align:0}.dropdown-menu[x-placement^="top"],.dropdown-menu[x-placement^="right"],.dropdown-menu[x-placement^="bottom"],.dropdown-menu[x-placement^="left"]{right:auto;bottom:auto}.dropdown-divider{height:0;margin:0.5rem 0;overflow:hidden;border-top:1px solid #e9ecef}.dropdown-item{display:block;width:100%;padding:0.25rem 1.5rem;clear:both;font-weight:400;color:#212529;text-align:inherit;white-space:nowrap;background-color:transparent;border:0}.dropdown-item:hover,.dropdown-item:focus{color:#16181b;text-decoration:none;background-color:#f8f9fa}.dropdown-item.active,.dropdown-item:active{color:#fff;text-decoration:none;background-color:#007bff}.dropdown-item.disabled,.dropdown-item:disabled{color:#6c757d;pointer-events:none;background-color:transparent}.dropdown-menu.show{display:block}.dropdown-header{display:block;padding:0.5rem 1.5rem;margin-bottom:0;font-size:0.875rem;color:#6c757d;white-space:nowrap}.dropdown-item-text{display:block;padding:0.25rem 1.5rem;color:#212529}.btn-group,.btn-group-vertical{position:relative;display:-ms-inline-flexbox;display:inline-flex;vertical-align:middle}.btn-group>.btn,.btn-group-vertical>.btn{position:relative;-ms-flex:1 1 auto;flex:1 1 auto}.btn-group>.btn:hover,.btn-group-vertical>.btn:hover{z-index:1}.btn-group>.btn:focus,.btn-group>.btn:active,.btn-group>.btn.active,.btn-group-vertical>.btn:focus,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn.active{z-index:1}.btn-toolbar{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}.btn-toolbar .input-group{width:auto}.btn-group>.btn:not(:first-child),.btn-group>.btn-group:not(:first-child){margin-left:-1px}.btn-group>.btn:not(:last-child):not(.dropdown-toggle),.btn-group>.btn-group:not(:last-child)>.btn{border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn:not(:first-child),.btn-group>.btn-group:not(:first-child)>.btn{border-top-left-radius:0;border-bottom-left-radius:0}.dropdown-toggle-split{padding-right:0.5625rem;padding-left:0.5625rem}.dropdown-toggle-split::after,.dropup .dropdown-toggle-split::after,.dropright .dropdown-toggle-split::after{margin-left:0}.dropleft .dropdown-toggle-split::before{margin-right:0}.btn-sm+.dropdown-toggle-split,.btn-group-sm>.btn+.dropdown-toggle-split{padding-right:0.375rem;padding-left:0.375rem}.btn-lg+.dropdown-toggle-split,.btn-group-lg>.btn+.dropdown-toggle-split{padding-right:0.75rem;padding-left:0.75rem}.btn-group-vertical{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:center;justify-content:center}.btn-group-vertical>.btn,.btn-group-vertical>.btn-group{width:100%}.btn-group-vertical>.btn:not(:first-child),.btn-group-vertical>.btn-group:not(:first-child){margin-top:-1px}.btn-group-vertical>.btn:not(:last-child):not(.dropdown-toggle),.btn-group-vertical>.btn-group:not(:last-child)>.btn{border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn:not(:first-child),.btn-group-vertical>.btn-group:not(:first-child)>.btn{border-top-left-radius:0;border-top-right-radius:0}.btn-group-toggle>.btn,.btn-group-toggle>.btn-group>.btn{margin-bottom:0}.btn-group-toggle>.btn input[type="radio"],.btn-group-toggle>.btn input[type="checkbox"],.btn-group-toggle>.btn-group>.btn input[type="radio"],.btn-group-toggle>.btn-group>.btn input[type="checkbox"]{position:absolute;clip:rect(0, 0, 0, 0);pointer-events:none}.input-group{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:stretch;align-items:stretch;width:100%}.input-group>.form-control,.input-group>.form-control-plaintext,.input-group>.custom-select,.input-group>.custom-file{position:relative;-ms-flex:1 1 0%;flex:1 1 0%;min-width:0;margin-bottom:0}.input-group>.form-control+.form-control,.input-group>.form-control+.custom-select,.input-group>.form-control+.custom-file,.input-group>.form-control-plaintext+.form-control,.input-group>.form-control-plaintext+.custom-select,.input-group>.form-control-plaintext+.custom-file,.input-group>.custom-select+.form-control,.input-group>.custom-select+.custom-select,.input-group>.custom-select+.custom-file,.input-group>.custom-file+.form-control,.input-group>.custom-file+.custom-select,.input-group>.custom-file+.custom-file{margin-left:-1px}.input-group>.form-control:focus,.input-group>.custom-select:focus,.input-group>.custom-file .custom-file-input:focus ~ .custom-file-label{z-index:3}.input-group>.custom-file .custom-file-input:focus{z-index:4}.input-group>.form-control:not(:last-child),.input-group>.custom-select:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.form-control:not(:first-child),.input-group>.custom-select:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.input-group>.custom-file{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.input-group>.custom-file:not(:last-child) .custom-file-label,.input-group>.custom-file:not(:last-child) .custom-file-label::after{border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.custom-file:not(:first-child) .custom-file-label{border-top-left-radius:0;border-bottom-left-radius:0}.input-group-prepend,.input-group-append{display:-ms-flexbox;display:flex}.input-group-prepend .btn,.input-group-append .btn{position:relative;z-index:2}.input-group-prepend .btn:focus,.input-group-append .btn:focus{z-index:3}.input-group-prepend .btn+.btn,.input-group-prepend .btn+.input-group-text,.input-group-prepend .input-group-text+.input-group-text,.input-group-prepend .input-group-text+.btn,.input-group-append .btn+.btn,.input-group-append .btn+.input-group-text,.input-group-append .input-group-text+.input-group-text,.input-group-append .input-group-text+.btn{margin-left:-1px}.input-group-prepend{margin-right:-1px}.input-group-append{margin-left:-1px}.input-group-text{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:0.375rem 0.75rem;margin-bottom:0;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;text-align:center;white-space:nowrap;background-color:#e9ecef;border:1px solid #ced4da;border-radius:0.25rem}.input-group-text input[type="radio"],.input-group-text input[type="checkbox"]{margin-top:0}.input-group-lg>.form-control:not(textarea),.input-group-lg>.custom-select{height:calc(1.5em + 1rem + 2px)}.input-group-lg>.form-control,.input-group-lg>.custom-select,.input-group-lg>.input-group-prepend>.input-group-text,.input-group-lg>.input-group-append>.input-group-text,.input-group-lg>.input-group-prepend>.btn,.input-group-lg>.input-group-append>.btn{padding:0.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:0.3rem}.input-group-sm>.form-control:not(textarea),.input-group-sm>.custom-select{height:calc(1.5em + 0.5rem + 2px)}.input-group-sm>.form-control,.input-group-sm>.custom-select,.input-group-sm>.input-group-prepend>.input-group-text,.input-group-sm>.input-group-append>.input-group-text,.input-group-sm>.input-group-prepend>.btn,.input-group-sm>.input-group-append>.btn{padding:0.25rem 0.5rem;font-size:0.875rem;line-height:1.5;border-radius:0.2rem}.input-group-lg>.custom-select,.input-group-sm>.custom-select{padding-right:1.75rem}.input-group>.input-group-prepend>.btn,.input-group>.input-group-prepend>.input-group-text,.input-group>.input-group-append:not(:last-child)>.btn,.input-group>.input-group-append:not(:last-child)>.input-group-text,.input-group>.input-group-append:last-child>.btn:not(:last-child):not(.dropdown-toggle),.input-group>.input-group-append:last-child>.input-group-text:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.input-group-append>.btn,.input-group>.input-group-append>.input-group-text,.input-group>.input-group-prepend:not(:first-child)>.btn,.input-group>.input-group-prepend:not(:first-child)>.input-group-text,.input-group>.input-group-prepend:first-child>.btn:not(:first-child),.input-group>.input-group-prepend:first-child>.input-group-text:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.custom-control{position:relative;display:block;min-height:1.5rem;padding-left:1.5rem}.custom-control-inline{display:-ms-inline-flexbox;display:inline-flex;margin-right:1rem}.custom-control-input{position:absolute;left:0;z-index:-1;width:1rem;height:1.25rem;opacity:0}.custom-control-input:checked ~ .custom-control-label::before{color:#fff;border-color:#007bff;background-color:#007bff}.custom-control-input:focus ~ .custom-control-label::before{box-shadow:0 0 0 0.2rem rgba(0,123,255,0.25)}.custom-control-input:focus:not(:checked) ~ .custom-control-label::before{border-color:#80bdff}.custom-control-input:not(:disabled):active ~ .custom-control-label::before{color:#fff;background-color:#b3d7ff;border-color:#b3d7ff}.custom-control-input[disabled] ~ .custom-control-label,.custom-control-input:disabled ~ .custom-control-label{color:#6c757d}.custom-control-input[disabled] ~ .custom-control-label::before,.custom-control-input:disabled ~ .custom-control-label::before{background-color:#e9ecef}.custom-control-label{position:relative;margin-bottom:0;vertical-align:top}.custom-control-label::before{position:absolute;top:0.25rem;left:-1.5rem;display:block;width:1rem;height:1rem;pointer-events:none;content:"";background-color:#fff;border:#adb5bd solid 1px}.custom-control-label::after{position:absolute;top:0.25rem;left:-1.5rem;display:block;width:1rem;height:1rem;content:"";background:no-repeat 50% / 50% 50%}.custom-checkbox .custom-control-label::before{border-radius:0.25rem}.custom-checkbox .custom-control-input:checked ~ .custom-control-label::after{background-image:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'8\' height=\'8\' viewBox=\'0 0 8 8\'%3e%3cpath fill=\'%23fff\' d=\'M6.564.75l-3.59 3.612-1.538-1.55L0 4.26l2.974 2.99L8 2.193z\'/%3e%3c/svg%3e")}.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-label::before{border-color:#007bff;background-color:#007bff}.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-label::after{background-image:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'4\' height=\'4\' viewBox=\'0 0 4 4\'%3e%3cpath stroke=\'%23fff\' d=\'M0 2h4\'/%3e%3c/svg%3e")}.custom-checkbox .custom-control-input:disabled:checked ~ .custom-control-label::before{background-color:rgba(0,123,255,0.5)}.custom-checkbox .custom-control-input:disabled:indeterminate ~ .custom-control-label::before{background-color:rgba(0,123,255,0.5)}.custom-radio .custom-control-label::before{border-radius:50%}.custom-radio .custom-control-input:checked ~ .custom-control-label::after{background-image:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'12\' height=\'12\' viewBox=\'-4 -4 8 8\'%3e%3ccircle r=\'3\' fill=\'%23fff\'/%3e%3c/svg%3e")}.custom-radio .custom-control-input:disabled:checked ~ .custom-control-label::before{background-color:rgba(0,123,255,0.5)}.custom-switch{padding-left:2.25rem}.custom-switch .custom-control-label::before{left:-2.25rem;width:1.75rem;pointer-events:all;border-radius:0.5rem}.custom-switch .custom-control-label::after{top:calc(0.25rem + 2px);left:calc(-2.25rem + 2px);width:calc(1rem - 4px);height:calc(1rem - 4px);background-color:#adb5bd;border-radius:0.5rem;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-transform 0.15s ease-in-out;transition:transform 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:transform 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-transform 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.custom-switch .custom-control-label::after{transition:none}}.custom-switch .custom-control-input:checked ~ .custom-control-label::after{background-color:#fff;-webkit-transform:translateX(0.75rem);transform:translateX(0.75rem)}.custom-switch .custom-control-input:disabled:checked ~ .custom-control-label::before{background-color:rgba(0,123,255,0.5)}.custom-select{display:inline-block;width:100%;height:calc(1.5em + 0.75rem + 2px);padding:0.375rem 1.75rem 0.375rem 0.75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;vertical-align:middle;background:#fff url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'4\' height=\'5\' viewBox=\'0 0 4 5\'%3e%3cpath fill=\'%23343a40\' d=\'M2 0L0 2h4zm0 5L0 3h4z\'/%3e%3c/svg%3e") no-repeat right 0.75rem center/8px 10px;border:1px solid #ced4da;border-radius:0.25rem;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-select:focus{border-color:#80bdff;outline:0;box-shadow:0 0 0 0.2rem rgba(0,123,255,0.25)}.custom-select:focus::-ms-value{color:#495057;background-color:#fff}.custom-select[multiple],.custom-select[size]:not([size="1"]){height:auto;padding-right:0.75rem;background-image:none}.custom-select:disabled{color:#6c757d;background-color:#e9ecef}.custom-select::-ms-expand{display:none}.custom-select:-moz-focusring{color:transparent;text-shadow:0 0 0 #495057}.custom-select-sm{height:calc(1.5em + 0.5rem + 2px);padding-top:0.25rem;padding-bottom:0.25rem;padding-left:0.5rem;font-size:0.875rem}.custom-select-lg{height:calc(1.5em + 1rem + 2px);padding-top:0.5rem;padding-bottom:0.5rem;padding-left:1rem;font-size:1.25rem}.custom-file{position:relative;display:inline-block;width:100%;height:calc(1.5em + 0.75rem + 2px);margin-bottom:0}.custom-file-input{position:relative;z-index:2;width:100%;height:calc(1.5em + 0.75rem + 2px);margin:0;opacity:0}.custom-file-input:focus ~ .custom-file-label{border-color:#80bdff;box-shadow:0 0 0 0.2rem rgba(0,123,255,0.25)}.custom-file-input[disabled] ~ .custom-file-label,.custom-file-input:disabled ~ .custom-file-label{background-color:#e9ecef}.custom-file-input:lang(en) ~ .custom-file-label::after{content:"Browse"}.custom-file-input ~ .custom-file-label[data-browse]::after{content:attr(data-browse)}.custom-file-label{position:absolute;top:0;right:0;left:0;z-index:1;height:calc(1.5em + 0.75rem + 2px);padding:0.375rem 0.75rem;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;border:1px solid #ced4da;border-radius:0.25rem}.custom-file-label::after{position:absolute;top:0;right:0;bottom:0;z-index:3;display:block;height:calc(1.5em + 0.75rem);padding:0.375rem 0.75rem;line-height:1.5;color:#495057;content:"Browse";background-color:#e9ecef;border-left:inherit;border-radius:0 0.25rem 0.25rem 0}.custom-range{width:100%;height:1.4rem;padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-range:focus{outline:none}.custom-range:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 0.2rem rgba(0,123,255,0.25)}.custom-range:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 0.2rem rgba(0,123,255,0.25)}.custom-range:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 0.2rem rgba(0,123,255,0.25)}.custom-range::-moz-focus-outer{border:0}.custom-range::-webkit-slider-thumb{width:1rem;height:1rem;margin-top:-0.25rem;background-color:#007bff;border:0;border-radius:1rem;-webkit-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;-webkit-appearance:none;appearance:none}@media (prefers-reduced-motion: reduce){.custom-range::-webkit-slider-thumb{-webkit-transition:none;transition:none}}.custom-range::-webkit-slider-thumb:active{background-color:#b3d7ff}.custom-range::-webkit-slider-runnable-track{width:100%;height:0.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.custom-range::-moz-range-thumb{width:1rem;height:1rem;background-color:#007bff;border:0;border-radius:1rem;-moz-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;-moz-appearance:none;appearance:none}@media (prefers-reduced-motion: reduce){.custom-range::-moz-range-thumb{-moz-transition:none;transition:none}}.custom-range::-moz-range-thumb:active{background-color:#b3d7ff}.custom-range::-moz-range-track{width:100%;height:0.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.custom-range::-ms-thumb{width:1rem;height:1rem;margin-top:0;margin-right:0.2rem;margin-left:0.2rem;background-color:#007bff;border:0;border-radius:1rem;-ms-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;appearance:none}@media (prefers-reduced-motion: reduce){.custom-range::-ms-thumb{-ms-transition:none;transition:none}}.custom-range::-ms-thumb:active{background-color:#b3d7ff}.custom-range::-ms-track{width:100%;height:0.5rem;color:transparent;cursor:pointer;background-color:transparent;border-color:transparent;border-width:0.5rem}.custom-range::-ms-fill-lower{background-color:#dee2e6;border-radius:1rem}.custom-range::-ms-fill-upper{margin-right:15px;background-color:#dee2e6;border-radius:1rem}.custom-range:disabled::-webkit-slider-thumb{background-color:#adb5bd}.custom-range:disabled::-webkit-slider-runnable-track{cursor:default}.custom-range:disabled::-moz-range-thumb{background-color:#adb5bd}.custom-range:disabled::-moz-range-track{cursor:default}.custom-range:disabled::-ms-thumb{background-color:#adb5bd}.custom-control-label::before,.custom-file-label,.custom-select{transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.custom-control-label::before,.custom-file-label,.custom-select{transition:none}}.nav{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:block;padding:0.5rem 1rem}.nav-link:hover,.nav-link:focus{text-decoration:none}.nav-link.disabled{color:#6c757d;pointer-events:none;cursor:default}.nav-tabs{border-bottom:1px solid #dee2e6}.nav-tabs .nav-item{margin-bottom:-1px}.nav-tabs .nav-link{border:1px solid transparent;border-top-left-radius:0.25rem;border-top-right-radius:0.25rem}.nav-tabs .nav-link:hover,.nav-tabs .nav-link:focus{border-color:#e9ecef #e9ecef #dee2e6}.nav-tabs .nav-link.disabled{color:#6c757d;background-color:transparent;border-color:transparent}.nav-tabs .nav-link.active,.nav-tabs .nav-item.show .nav-link{color:#495057;background-color:#fff;border-color:#dee2e6 #dee2e6 #fff}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.nav-pills .nav-link{border-radius:0.25rem}.nav-pills .nav-link.active,.nav-pills .show>.nav-link{color:#fff;background-color:#007bff}.nav-fill .nav-item{-ms-flex:1 1 auto;flex:1 1 auto;text-align:center}.nav-justified .nav-item{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;text-align:center}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.navbar{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;padding:0.5rem 1rem}.navbar .container,.navbar .container-fluid,.navbar .container-sm,.navbar .container-md,.navbar .container-lg,.navbar .container-xl{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.navbar-brand{display:inline-block;padding-top:0.3125rem;padding-bottom:0.3125rem;margin-right:1rem;font-size:1.25rem;line-height:inherit;white-space:nowrap}.navbar-brand:hover,.navbar-brand:focus{text-decoration:none}.navbar-nav{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.navbar-nav .nav-link{padding-right:0;padding-left:0}.navbar-nav .dropdown-menu{position:static;float:none}.navbar-text{display:inline-block;padding-top:0.5rem;padding-bottom:0.5rem}.navbar-collapse{-ms-flex-preferred-size:100%;flex-basis:100%;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center}.navbar-toggler{padding:0.25rem 0.75rem;font-size:1.25rem;line-height:1;background-color:transparent;border:1px solid transparent;border-radius:0.25rem}.navbar-toggler:hover,.navbar-toggler:focus{text-decoration:none}.navbar-toggler-icon{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;content:"";background:no-repeat center center;background-size:100% 100%}@media (max-width: 575.98px){.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid,.navbar-expand-sm>.container-sm,.navbar-expand-sm>.container-md,.navbar-expand-sm>.container-lg,.navbar-expand-sm>.container-xl{padding-right:0;padding-left:0}}@media (min-width: 576px){.navbar-expand-sm{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-sm .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-sm .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-sm .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid,.navbar-expand-sm>.container-sm,.navbar-expand-sm>.container-md,.navbar-expand-sm>.container-lg,.navbar-expand-sm>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-sm .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-sm .navbar-toggler{display:none}}@media (max-width: 767.98px){.navbar-expand-md>.container,.navbar-expand-md>.container-fluid,.navbar-expand-md>.container-sm,.navbar-expand-md>.container-md,.navbar-expand-md>.container-lg,.navbar-expand-md>.container-xl{padding-right:0;padding-left:0}}@media (min-width: 768px){.navbar-expand-md{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-md .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-md .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-md .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-md>.container,.navbar-expand-md>.container-fluid,.navbar-expand-md>.container-sm,.navbar-expand-md>.container-md,.navbar-expand-md>.container-lg,.navbar-expand-md>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-md .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-md .navbar-toggler{display:none}}@media (max-width: 991.98px){.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid,.navbar-expand-lg>.container-sm,.navbar-expand-lg>.container-md,.navbar-expand-lg>.container-lg,.navbar-expand-lg>.container-xl{padding-right:0;padding-left:0}}@media (min-width: 992px){.navbar-expand-lg{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-lg .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-lg .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-lg .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid,.navbar-expand-lg>.container-sm,.navbar-expand-lg>.container-md,.navbar-expand-lg>.container-lg,.navbar-expand-lg>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-lg .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-lg .navbar-toggler{display:none}}@media (max-width: 1199.98px){.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid,.navbar-expand-xl>.container-sm,.navbar-expand-xl>.container-md,.navbar-expand-xl>.container-lg,.navbar-expand-xl>.container-xl{padding-right:0;padding-left:0}}@media (min-width: 1200px){.navbar-expand-xl{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-xl .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-xl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xl .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid,.navbar-expand-xl>.container-sm,.navbar-expand-xl>.container-md,.navbar-expand-xl>.container-lg,.navbar-expand-xl>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-xl .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-xl .navbar-toggler{display:none}}.navbar-expand{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand>.container,.navbar-expand>.container-fluid,.navbar-expand>.container-sm,.navbar-expand>.container-md,.navbar-expand>.container-lg,.navbar-expand>.container-xl{padding-right:0;padding-left:0}.navbar-expand .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand .navbar-nav .dropdown-menu{position:absolute}.navbar-expand .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand>.container,.navbar-expand>.container-fluid,.navbar-expand>.container-sm,.navbar-expand>.container-md,.navbar-expand>.container-lg,.navbar-expand>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand .navbar-toggler{display:none}.navbar-light .navbar-brand{color:rgba(0,0,0,0.9)}.navbar-light .navbar-brand:hover,.navbar-light .navbar-brand:focus{color:rgba(0,0,0,0.9)}.navbar-light .navbar-nav .nav-link{color:rgba(0,0,0,0.5)}.navbar-light .navbar-nav .nav-link:hover,.navbar-light .navbar-nav .nav-link:focus{color:rgba(0,0,0,0.7)}.navbar-light .navbar-nav .nav-link.disabled{color:rgba(0,0,0,0.3)}.navbar-light .navbar-nav .show>.nav-link,.navbar-light .navbar-nav .active>.nav-link,.navbar-light .navbar-nav .nav-link.show,.navbar-light .navbar-nav .nav-link.active{color:rgba(0,0,0,0.9)}.navbar-light .navbar-toggler{color:rgba(0,0,0,0.5);border-color:rgba(0,0,0,0.1)}.navbar-light .navbar-toggler-icon{background-image:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'30\' height=\'30\' viewBox=\'0 0 30 30\'%3e%3cpath stroke=\'rgba(0, 0, 0, 0.5)\' stroke-linecap=\'round\' stroke-miterlimit=\'10\' stroke-width=\'2\' d=\'M4 7h22M4 15h22M4 23h22\'/%3e%3c/svg%3e")}.navbar-light .navbar-text{color:rgba(0,0,0,0.5)}.navbar-light .navbar-text a{color:rgba(0,0,0,0.9)}.navbar-light .navbar-text a:hover,.navbar-light .navbar-text a:focus{color:rgba(0,0,0,0.9)}.navbar-dark .navbar-brand{color:#fff}.navbar-dark .navbar-brand:hover,.navbar-dark .navbar-brand:focus{color:#fff}.navbar-dark .navbar-nav .nav-link{color:rgba(255,255,255,0.5)}.navbar-dark .navbar-nav .nav-link:hover,.navbar-dark .navbar-nav .nav-link:focus{color:rgba(255,255,255,0.75)}.navbar-dark .navbar-nav .nav-link.disabled{color:rgba(255,255,255,0.25)}.navbar-dark .navbar-nav .show>.nav-link,.navbar-dark .navbar-nav .active>.nav-link,.navbar-dark .navbar-nav .nav-link.show,.navbar-dark .navbar-nav .nav-link.active{color:#fff}.navbar-dark .navbar-toggler{color:rgba(255,255,255,0.5);border-color:rgba(255,255,255,0.1)}.navbar-dark .navbar-toggler-icon{background-image:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'30\' height=\'30\' viewBox=\'0 0 30 30\'%3e%3cpath stroke=\'rgba(255, 255, 255, 0.5)\' stroke-linecap=\'round\' stroke-miterlimit=\'10\' stroke-width=\'2\' d=\'M4 7h22M4 15h22M4 23h22\'/%3e%3c/svg%3e")}.navbar-dark .navbar-text{color:rgba(255,255,255,0.5)}.navbar-dark .navbar-text a{color:#fff}.navbar-dark .navbar-text a:hover,.navbar-dark .navbar-text a:focus{color:#fff}.card{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:1px solid rgba(0,0,0,0.125);border-radius:0.25rem}.card>hr{margin-right:0;margin-left:0}.card>.list-group:first-child .list-group-item:first-child{border-top-left-radius:0.25rem;border-top-right-radius:0.25rem}.card>.list-group:last-child .list-group-item:last-child{border-bottom-right-radius:0.25rem;border-bottom-left-radius:0.25rem}.card-body{-ms-flex:1 1 auto;flex:1 1 auto;min-height:1px;padding:1.25rem}.card-title{margin-bottom:0.75rem}.card-subtitle{margin-top:-0.375rem;margin-bottom:0}.card-text:last-child{margin-bottom:0}.card-link:hover{text-decoration:none}.card-link+.card-link{margin-left:1.25rem}.card-header{padding:0.75rem 1.25rem;margin-bottom:0;background-color:rgba(0,0,0,0.03);border-bottom:1px solid rgba(0,0,0,0.125)}.card-header:first-child{border-radius:calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0}.card-header+.list-group .list-group-item:first-child{border-top:0}.card-footer{padding:0.75rem 1.25rem;background-color:rgba(0,0,0,0.03);border-top:1px solid rgba(0,0,0,0.125)}.card-footer:last-child{border-radius:0 0 calc(0.25rem - 1px) calc(0.25rem - 1px)}.card-header-tabs{margin-right:-0.625rem;margin-bottom:-0.75rem;margin-left:-0.625rem;border-bottom:0}.card-header-pills{margin-right:-0.625rem;margin-left:-0.625rem}.card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:1.25rem}.card-img,.card-img-top,.card-img-bottom{-ms-flex-negative:0;flex-shrink:0;width:100%}.card-img,.card-img-top{border-top-left-radius:calc(0.25rem - 1px);border-top-right-radius:calc(0.25rem - 1px)}.card-img,.card-img-bottom{border-bottom-right-radius:calc(0.25rem - 1px);border-bottom-left-radius:calc(0.25rem - 1px)}.card-deck .card{margin-bottom:15px}@media (min-width: 576px){.card-deck{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap;margin-right:-15px;margin-left:-15px}.card-deck .card{-ms-flex:1 0 0%;flex:1 0 0%;margin-right:15px;margin-bottom:0;margin-left:15px}}.card-group>.card{margin-bottom:15px}@media (min-width: 576px){.card-group{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap}.card-group>.card{-ms-flex:1 0 0%;flex:1 0 0%;margin-bottom:0}.card-group>.card+.card{margin-left:0;border-left:0}.card-group>.card:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.card-group>.card:not(:last-child) .card-img-top,.card-group>.card:not(:last-child) .card-header{border-top-right-radius:0}.card-group>.card:not(:last-child) .card-img-bottom,.card-group>.card:not(:last-child) .card-footer{border-bottom-right-radius:0}.card-group>.card:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.card-group>.card:not(:first-child) .card-img-top,.card-group>.card:not(:first-child) .card-header{border-top-left-radius:0}.card-group>.card:not(:first-child) .card-img-bottom,.card-group>.card:not(:first-child) .card-footer{border-bottom-left-radius:0}}.card-columns .card{margin-bottom:0.75rem}@media (min-width: 576px){.card-columns{-webkit-column-count:3;-moz-column-count:3;column-count:3;-webkit-column-gap:1.25rem;-moz-column-gap:1.25rem;column-gap:1.25rem;orphans:1;widows:1}.card-columns .card{display:inline-block;width:100%}}.accordion>.card{overflow:hidden}.accordion>.card:not(:last-of-type){border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.accordion>.card:not(:first-of-type){border-top-left-radius:0;border-top-right-radius:0}.accordion>.card>.card-header{border-radius:0;margin-bottom:-1px}.breadcrumb{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:0.75rem 1rem;margin-bottom:1rem;list-style:none;background-color:#e9ecef;border-radius:0.25rem}.breadcrumb-item+.breadcrumb-item{padding-left:0.5rem}.breadcrumb-item+.breadcrumb-item::before{display:inline-block;padding-right:0.5rem;color:#6c757d;content:"/"}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:underline}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:none}.breadcrumb-item.active{color:#6c757d}.pagination{display:-ms-flexbox;display:flex;padding-left:0;list-style:none;border-radius:0.25rem}.page-link{position:relative;display:block;padding:0.5rem 0.75rem;margin-left:-1px;line-height:1.25;color:#007bff;background-color:#fff;border:1px solid #dee2e6}.page-link:hover{z-index:2;color:#0056b3;text-decoration:none;background-color:#e9ecef;border-color:#dee2e6}.page-link:focus{z-index:3;outline:0;box-shadow:0 0 0 0.2rem rgba(0,123,255,0.25)}.page-item:first-child .page-link{margin-left:0;border-top-left-radius:0.25rem;border-bottom-left-radius:0.25rem}.page-item:last-child .page-link{border-top-right-radius:0.25rem;border-bottom-right-radius:0.25rem}.page-item.active .page-link{z-index:3;color:#fff;background-color:#007bff;border-color:#007bff}.page-item.disabled .page-link{color:#6c757d;pointer-events:none;cursor:auto;background-color:#fff;border-color:#dee2e6}.pagination-lg .page-link{padding:0.75rem 1.5rem;font-size:1.25rem;line-height:1.5}.pagination-lg .page-item:first-child .page-link{border-top-left-radius:0.3rem;border-bottom-left-radius:0.3rem}.pagination-lg .page-item:last-child .page-link{border-top-right-radius:0.3rem;border-bottom-right-radius:0.3rem}.pagination-sm .page-link{padding:0.25rem 0.5rem;font-size:0.875rem;line-height:1.5}.pagination-sm .page-item:first-child .page-link{border-top-left-radius:0.2rem;border-bottom-left-radius:0.2rem}.pagination-sm .page-item:last-child .page-link{border-top-right-radius:0.2rem;border-bottom-right-radius:0.2rem}.badge{display:inline-block;padding:0.25em 0.4em;font-size:75%;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:0.25rem;transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.badge{transition:none}}a.badge:hover,a.badge:focus{text-decoration:none}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.badge-pill{padding-right:0.6em;padding-left:0.6em;border-radius:10rem}.badge-primary{color:#fff;background-color:#007bff}a.badge-primary:hover,a.badge-primary:focus{color:#fff;background-color:#0062cc}a.badge-primary:focus,a.badge-primary.focus{outline:0;box-shadow:0 0 0 0.2rem rgba(0,123,255,0.5)}.badge-secondary{color:#fff;background-color:#6c757d}a.badge-secondary:hover,a.badge-secondary:focus{color:#fff;background-color:#545b62}a.badge-secondary:focus,a.badge-secondary.focus{outline:0;box-shadow:0 0 0 0.2rem rgba(108,117,125,0.5)}.badge-success{color:#fff;background-color:#28a745}a.badge-success:hover,a.badge-success:focus{color:#fff;background-color:#1e7e34}a.badge-success:focus,a.badge-success.focus{outline:0;box-shadow:0 0 0 0.2rem rgba(40,167,69,0.5)}.badge-info{color:#fff;background-color:#17a2b8}a.badge-info:hover,a.badge-info:focus{color:#fff;background-color:#117a8b}a.badge-info:focus,a.badge-info.focus{outline:0;box-shadow:0 0 0 0.2rem rgba(23,162,184,0.5)}.badge-warning{color:#212529;background-color:#ffc107}a.badge-warning:hover,a.badge-warning:focus{color:#212529;background-color:#d39e00}a.badge-warning:focus,a.badge-warning.focus{outline:0;box-shadow:0 0 0 0.2rem rgba(255,193,7,0.5)}.badge-danger{color:#fff;background-color:#dc3545}a.badge-danger:hover,a.badge-danger:focus{color:#fff;background-color:#bd2130}a.badge-danger:focus,a.badge-danger.focus{outline:0;box-shadow:0 0 0 0.2rem rgba(220,53,69,0.5)}.badge-light{color:#212529;background-color:#f8f9fa}a.badge-light:hover,a.badge-light:focus{color:#212529;background-color:#dae0e5}a.badge-light:focus,a.badge-light.focus{outline:0;box-shadow:0 0 0 0.2rem rgba(248,249,250,0.5)}.badge-dark{color:#fff;background-color:#343a40}a.badge-dark:hover,a.badge-dark:focus{color:#fff;background-color:#1d2124}a.badge-dark:focus,a.badge-dark.focus{outline:0;box-shadow:0 0 0 0.2rem rgba(52,58,64,0.5)}.jumbotron{padding:2rem 1rem;margin-bottom:2rem;background-color:#e9ecef;border-radius:0.3rem}@media (min-width: 576px){.jumbotron{padding:4rem 2rem}}.jumbotron-fluid{padding-right:0;padding-left:0;border-radius:0}.alert{position:relative;padding:0.75rem 1.25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:0.25rem}.alert-heading{color:inherit}.alert-link{font-weight:700}.alert-dismissible{padding-right:4rem}.alert-dismissible .close{position:absolute;top:0;right:0;padding:0.75rem 1.25rem;color:inherit}.alert-primary{color:#004085;background-color:#cce5ff;border-color:#b8daff}.alert-primary hr{border-top-color:#9fcdff}.alert-primary .alert-link{color:#002752}.alert-secondary{color:#383d41;background-color:#e2e3e5;border-color:#d6d8db}.alert-secondary hr{border-top-color:#c8cbcf}.alert-secondary .alert-link{color:#202326}.alert-success{color:#155724;background-color:#d4edda;border-color:#c3e6cb}.alert-success hr{border-top-color:#b1dfbb}.alert-success .alert-link{color:#0b2e13}.alert-info{color:#0c5460;background-color:#d1ecf1;border-color:#bee5eb}.alert-info hr{border-top-color:#abdde5}.alert-info .alert-link{color:#062c33}.alert-warning{color:#856404;background-color:#fff3cd;border-color:#ffeeba}.alert-warning hr{border-top-color:#ffe8a1}.alert-warning .alert-link{color:#533f03}.alert-danger{color:#721c24;background-color:#f8d7da;border-color:#f5c6cb}.alert-danger hr{border-top-color:#f1b0b7}.alert-danger .alert-link{color:#491217}.alert-light{color:#818182;background-color:#fefefe;border-color:#fdfdfe}.alert-light hr{border-top-color:#ececf6}.alert-light .alert-link{color:#686868}.alert-dark{color:#1b1e21;background-color:#d6d8d9;border-color:#c6c8ca}.alert-dark hr{border-top-color:#b9bbbe}.alert-dark .alert-link{color:#040505}@-webkit-keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}@keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}.progress{display:-ms-flexbox;display:flex;height:1rem;overflow:hidden;font-size:0.75rem;background-color:#e9ecef;border-radius:0.25rem}.progress-bar{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;overflow:hidden;color:#fff;text-align:center;white-space:nowrap;background-color:#007bff;transition:width 0.6s ease}@media (prefers-reduced-motion: reduce){.progress-bar{transition:none}}.progress-bar-striped{background-image:linear-gradient(45deg, rgba(255,255,255,0.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,0.15) 50%, rgba(255,255,255,0.15) 75%, transparent 75%, transparent);background-size:1rem 1rem}.progress-bar-animated{-webkit-animation:progress-bar-stripes 1s linear infinite;animation:progress-bar-stripes 1s linear infinite}@media (prefers-reduced-motion: reduce){.progress-bar-animated{-webkit-animation:none;animation:none}}.media{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start}.media-body{-ms-flex:1;flex:1}.list-group{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0}.list-group-item-action{width:100%;color:#495057;text-align:inherit}.list-group-item-action:hover,.list-group-item-action:focus{z-index:1;color:#495057;text-decoration:none;background-color:#f8f9fa}.list-group-item-action:active{color:#212529;background-color:#e9ecef}.list-group-item{position:relative;display:block;padding:0.75rem 1.25rem;background-color:#fff;border:1px solid rgba(0,0,0,0.125)}.list-group-item:first-child{border-top-left-radius:0.25rem;border-top-right-radius:0.25rem}.list-group-item:last-child{border-bottom-right-radius:0.25rem;border-bottom-left-radius:0.25rem}.list-group-item.disabled,.list-group-item:disabled{color:#6c757d;pointer-events:none;background-color:#fff}.list-group-item.active{z-index:2;color:#fff;background-color:#007bff;border-color:#007bff}.list-group-item+.list-group-item{border-top-width:0}.list-group-item+.list-group-item.active{margin-top:-1px;border-top-width:1px}.list-group-horizontal{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal .list-group-item:first-child{border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal .list-group-item:last-child{border-top-right-radius:0.25rem;border-bottom-left-radius:0}.list-group-horizontal .list-group-item.active{margin-top:0}.list-group-horizontal .list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal .list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}@media (min-width: 576px){.list-group-horizontal-sm{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-sm .list-group-item:first-child{border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-sm .list-group-item:last-child{border-top-right-radius:0.25rem;border-bottom-left-radius:0}.list-group-horizontal-sm .list-group-item.active{margin-top:0}.list-group-horizontal-sm .list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-sm .list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width: 768px){.list-group-horizontal-md{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-md .list-group-item:first-child{border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-md .list-group-item:last-child{border-top-right-radius:0.25rem;border-bottom-left-radius:0}.list-group-horizontal-md .list-group-item.active{margin-top:0}.list-group-horizontal-md .list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-md .list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width: 992px){.list-group-horizontal-lg{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-lg .list-group-item:first-child{border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-lg .list-group-item:last-child{border-top-right-radius:0.25rem;border-bottom-left-radius:0}.list-group-horizontal-lg .list-group-item.active{margin-top:0}.list-group-horizontal-lg .list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-lg .list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width: 1200px){.list-group-horizontal-xl{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-xl .list-group-item:first-child{border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-xl .list-group-item:last-child{border-top-right-radius:0.25rem;border-bottom-left-radius:0}.list-group-horizontal-xl .list-group-item.active{margin-top:0}.list-group-horizontal-xl .list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-xl .list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}.list-group-flush .list-group-item{border-right-width:0;border-left-width:0;border-radius:0}.list-group-flush .list-group-item:first-child{border-top-width:0}.list-group-flush:last-child .list-group-item:last-child{border-bottom-width:0}.list-group-item-primary{color:#004085;background-color:#b8daff}.list-group-item-primary.list-group-item-action:hover,.list-group-item-primary.list-group-item-action:focus{color:#004085;background-color:#9fcdff}.list-group-item-primary.list-group-item-action.active{color:#fff;background-color:#004085;border-color:#004085}.list-group-item-secondary{color:#383d41;background-color:#d6d8db}.list-group-item-secondary.list-group-item-action:hover,.list-group-item-secondary.list-group-item-action:focus{color:#383d41;background-color:#c8cbcf}.list-group-item-secondary.list-group-item-action.active{color:#fff;background-color:#383d41;border-color:#383d41}.list-group-item-success{color:#155724;background-color:#c3e6cb}.list-group-item-success.list-group-item-action:hover,.list-group-item-success.list-group-item-action:focus{color:#155724;background-color:#b1dfbb}.list-group-item-success.list-group-item-action.active{color:#fff;background-color:#155724;border-color:#155724}.list-group-item-info{color:#0c5460;background-color:#bee5eb}.list-group-item-info.list-group-item-action:hover,.list-group-item-info.list-group-item-action:focus{color:#0c5460;background-color:#abdde5}.list-group-item-info.list-group-item-action.active{color:#fff;background-color:#0c5460;border-color:#0c5460}.list-group-item-warning{color:#856404;background-color:#ffeeba}.list-group-item-warning.list-group-item-action:hover,.list-group-item-warning.list-group-item-action:focus{color:#856404;background-color:#ffe8a1}.list-group-item-warning.list-group-item-action.active{color:#fff;background-color:#856404;border-color:#856404}.list-group-item-danger{color:#721c24;background-color:#f5c6cb}.list-group-item-danger.list-group-item-action:hover,.list-group-item-danger.list-group-item-action:focus{color:#721c24;background-color:#f1b0b7}.list-group-item-danger.list-group-item-action.active{color:#fff;background-color:#721c24;border-color:#721c24}.list-group-item-light{color:#818182;background-color:#fdfdfe}.list-group-item-light.list-group-item-action:hover,.list-group-item-light.list-group-item-action:focus{color:#818182;background-color:#ececf6}.list-group-item-light.list-group-item-action.active{color:#fff;background-color:#818182;border-color:#818182}.list-group-item-dark{color:#1b1e21;background-color:#c6c8ca}.list-group-item-dark.list-group-item-action:hover,.list-group-item-dark.list-group-item-action:focus{color:#1b1e21;background-color:#b9bbbe}.list-group-item-dark.list-group-item-action.active{color:#fff;background-color:#1b1e21;border-color:#1b1e21}.close{float:right;font-size:1.5rem;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:.5}.close:hover{color:#000;text-decoration:none}.close:not(:disabled):not(.disabled):hover,.close:not(:disabled):not(.disabled):focus{opacity:.75}button.close{padding:0;background-color:transparent;border:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}a.close.disabled{pointer-events:none}.toast{max-width:350px;overflow:hidden;font-size:0.875rem;background-color:rgba(255,255,255,0.85);background-clip:padding-box;border:1px solid rgba(0,0,0,0.1);box-shadow:0 0.25rem 0.75rem rgba(0,0,0,0.1);-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);opacity:0;border-radius:0.25rem}.toast:not(:last-child){margin-bottom:0.75rem}.toast.showing{opacity:1}.toast.show{display:block;opacity:1}.toast.hide{display:none}.toast-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:0.25rem 0.75rem;color:#6c757d;background-color:rgba(255,255,255,0.85);background-clip:padding-box;border-bottom:1px solid rgba(0,0,0,0.05)}.toast-body{padding:0.75rem}.modal-open{overflow:hidden}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal{position:fixed;top:0;left:0;z-index:1050;display:none;width:100%;height:100%;overflow:hidden;outline:0}.modal-dialog{position:relative;width:auto;margin:0.5rem;pointer-events:none}.modal.fade .modal-dialog{transition:-webkit-transform 0.3s ease-out;transition:transform 0.3s ease-out;transition:transform 0.3s ease-out, -webkit-transform 0.3s ease-out;-webkit-transform:translate(0, -50px);transform:translate(0, -50px)}@media (prefers-reduced-motion: reduce){.modal.fade .modal-dialog{transition:none}}.modal.show .modal-dialog{-webkit-transform:none;transform:none}.modal.modal-static .modal-dialog{-webkit-transform:scale(1.02);transform:scale(1.02)}.modal-dialog-scrollable{display:-ms-flexbox;display:flex;max-height:calc(100% - 1rem)}.modal-dialog-scrollable .modal-content{max-height:calc(100vh - 1rem);overflow:hidden}.modal-dialog-scrollable .modal-header,.modal-dialog-scrollable .modal-footer{-ms-flex-negative:0;flex-shrink:0}.modal-dialog-scrollable .modal-body{overflow-y:auto}.modal-dialog-centered{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;min-height:calc(100% - 1rem)}.modal-dialog-centered::before{display:block;height:calc(100vh - 1rem);content:""}.modal-dialog-centered.modal-dialog-scrollable{-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.modal-dialog-centered.modal-dialog-scrollable .modal-content{max-height:none}.modal-dialog-centered.modal-dialog-scrollable::before{content:none}.modal-content{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;width:100%;pointer-events:auto;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,0.2);border-radius:0.3rem;outline:0}.modal-backdrop{position:fixed;top:0;left:0;z-index:1040;width:100vw;height:100vh;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop.show{opacity:0.5}.modal-header{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:justify;justify-content:space-between;padding:1rem 1rem;border-bottom:1px solid #dee2e6;border-top-left-radius:calc(0.3rem - 1px);border-top-right-radius:calc(0.3rem - 1px)}.modal-header .close{padding:1rem 1rem;margin:-1rem -1rem -1rem auto}.modal-title{margin-bottom:0;line-height:1.5}.modal-body{position:relative;-ms-flex:1 1 auto;flex:1 1 auto;padding:1rem}.modal-footer{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end;padding:0.75rem;border-top:1px solid #dee2e6;border-bottom-right-radius:calc(0.3rem - 1px);border-bottom-left-radius:calc(0.3rem - 1px)}.modal-footer>*{margin:0.25rem}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width: 576px){.modal-dialog{max-width:500px;margin:1.75rem auto}.modal-dialog-scrollable{max-height:calc(100% - 3.5rem)}.modal-dialog-scrollable .modal-content{max-height:calc(100vh - 3.5rem)}.modal-dialog-centered{min-height:calc(100% - 3.5rem)}.modal-dialog-centered::before{height:calc(100vh - 3.5rem)}.modal-sm{max-width:300px}}@media (min-width: 992px){.modal-lg,.modal-xl{max-width:800px}}@media (min-width: 1200px){.modal-xl{max-width:1140px}}.tooltip{position:absolute;z-index:1070;display:block;margin:0;font-family:-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:0.875rem;word-wrap:break-word;opacity:0}.tooltip.show{opacity:0.9}.tooltip .arrow{position:absolute;display:block;width:0.8rem;height:0.4rem}.tooltip .arrow::before{position:absolute;content:"";border-color:transparent;border-style:solid}.bs-tooltip-top,.bs-tooltip-auto[x-placement^="top"]{padding:0.4rem 0}.bs-tooltip-top .arrow,.bs-tooltip-auto[x-placement^="top"] .arrow{bottom:0}.bs-tooltip-top .arrow::before,.bs-tooltip-auto[x-placement^="top"] .arrow::before{top:0;border-width:0.4rem 0.4rem 0;border-top-color:#000}.bs-tooltip-right,.bs-tooltip-auto[x-placement^="right"]{padding:0 0.4rem}.bs-tooltip-right .arrow,.bs-tooltip-auto[x-placement^="right"] .arrow{left:0;width:0.4rem;height:0.8rem}.bs-tooltip-right .arrow::before,.bs-tooltip-auto[x-placement^="right"] .arrow::before{right:0;border-width:0.4rem 0.4rem 0.4rem 0;border-right-color:#000}.bs-tooltip-bottom,.bs-tooltip-auto[x-placement^="bottom"]{padding:0.4rem 0}.bs-tooltip-bottom .arrow,.bs-tooltip-auto[x-placement^="bottom"] .arrow{top:0}.bs-tooltip-bottom .arrow::before,.bs-tooltip-auto[x-placement^="bottom"] .arrow::before{bottom:0;border-width:0 0.4rem 0.4rem;border-bottom-color:#000}.bs-tooltip-left,.bs-tooltip-auto[x-placement^="left"]{padding:0 0.4rem}.bs-tooltip-left .arrow,.bs-tooltip-auto[x-placement^="left"] .arrow{right:0;width:0.4rem;height:0.8rem}.bs-tooltip-left .arrow::before,.bs-tooltip-auto[x-placement^="left"] .arrow::before{left:0;border-width:0.4rem 0 0.4rem 0.4rem;border-left-color:#000}.tooltip-inner{max-width:200px;padding:0.25rem 0.5rem;color:#fff;text-align:center;background-color:#000;border-radius:0.25rem}.popover{position:absolute;top:0;left:0;z-index:1060;display:block;max-width:276px;font-family:-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:0.875rem;word-wrap:break-word;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,0.2);border-radius:0.3rem}.popover .arrow{position:absolute;display:block;width:1rem;height:0.5rem;margin:0 0.3rem}.popover .arrow::before,.popover .arrow::after{position:absolute;display:block;content:"";border-color:transparent;border-style:solid}.bs-popover-top,.bs-popover-auto[x-placement^="top"]{margin-bottom:0.5rem}.bs-popover-top>.arrow,.bs-popover-auto[x-placement^="top"]>.arrow{bottom:calc(-0.5rem - 1px)}.bs-popover-top>.arrow::before,.bs-popover-auto[x-placement^="top"]>.arrow::before{bottom:0;border-width:0.5rem 0.5rem 0;border-top-color:rgba(0,0,0,0.25)}.bs-popover-top>.arrow::after,.bs-popover-auto[x-placement^="top"]>.arrow::after{bottom:1px;border-width:0.5rem 0.5rem 0;border-top-color:#fff}.bs-popover-right,.bs-popover-auto[x-placement^="right"]{margin-left:0.5rem}.bs-popover-right>.arrow,.bs-popover-auto[x-placement^="right"]>.arrow{left:calc(-0.5rem - 1px);width:0.5rem;height:1rem;margin:0.3rem 0}.bs-popover-right>.arrow::before,.bs-popover-auto[x-placement^="right"]>.arrow::before{left:0;border-width:0.5rem 0.5rem 0.5rem 0;border-right-color:rgba(0,0,0,0.25)}.bs-popover-right>.arrow::after,.bs-popover-auto[x-placement^="right"]>.arrow::after{left:1px;border-width:0.5rem 0.5rem 0.5rem 0;border-right-color:#fff}.bs-popover-bottom,.bs-popover-auto[x-placement^="bottom"]{margin-top:0.5rem}.bs-popover-bottom>.arrow,.bs-popover-auto[x-placement^="bottom"]>.arrow{top:calc(-0.5rem - 1px)}.bs-popover-bottom>.arrow::before,.bs-popover-auto[x-placement^="bottom"]>.arrow::before{top:0;border-width:0 0.5rem 0.5rem 0.5rem;border-bottom-color:rgba(0,0,0,0.25)}.bs-popover-bottom>.arrow::after,.bs-popover-auto[x-placement^="bottom"]>.arrow::after{top:1px;border-width:0 0.5rem 0.5rem 0.5rem;border-bottom-color:#fff}.bs-popover-bottom .popover-header::before,.bs-popover-auto[x-placement^="bottom"] .popover-header::before{position:absolute;top:0;left:50%;display:block;width:1rem;margin-left:-0.5rem;content:"";border-bottom:1px solid #f7f7f7}.bs-popover-left,.bs-popover-auto[x-placement^="left"]{margin-right:0.5rem}.bs-popover-left>.arrow,.bs-popover-auto[x-placement^="left"]>.arrow{right:calc(-0.5rem - 1px);width:0.5rem;height:1rem;margin:0.3rem 0}.bs-popover-left>.arrow::before,.bs-popover-auto[x-placement^="left"]>.arrow::before{right:0;border-width:0.5rem 0 0.5rem 0.5rem;border-left-color:rgba(0,0,0,0.25)}.bs-popover-left>.arrow::after,.bs-popover-auto[x-placement^="left"]>.arrow::after{right:1px;border-width:0.5rem 0 0.5rem 0.5rem;border-left-color:#fff}.popover-header{padding:0.5rem 0.75rem;margin-bottom:0;font-size:1rem;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-top-left-radius:calc(0.3rem - 1px);border-top-right-radius:calc(0.3rem - 1px)}.popover-header:empty{display:none}.popover-body{padding:0.5rem 0.75rem;color:#212529}.carousel{position:relative}.carousel.pointer-event{-ms-touch-action:pan-y;touch-action:pan-y}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-inner::after{display:block;clear:both;content:""}.carousel-item{position:relative;display:none;float:left;width:100%;margin-right:-100%;-webkit-backface-visibility:hidden;backface-visibility:hidden;transition:-webkit-transform 0.6s ease-in-out;transition:transform 0.6s ease-in-out;transition:transform 0.6s ease-in-out, -webkit-transform 0.6s ease-in-out}@media (prefers-reduced-motion: reduce){.carousel-item{transition:none}}.carousel-item.active,.carousel-item-next,.carousel-item-prev{display:block}.carousel-item-next:not(.carousel-item-left),.active.carousel-item-right{-webkit-transform:translateX(100%);transform:translateX(100%)}.carousel-item-prev:not(.carousel-item-right),.active.carousel-item-left{-webkit-transform:translateX(-100%);transform:translateX(-100%)}.carousel-fade .carousel-item{opacity:0;transition-property:opacity;-webkit-transform:none;transform:none}.carousel-fade .carousel-item.active,.carousel-fade .carousel-item-next.carousel-item-left,.carousel-fade .carousel-item-prev.carousel-item-right{z-index:1;opacity:1}.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right{z-index:0;opacity:0;transition:opacity 0s 0.6s}@media (prefers-reduced-motion: reduce){.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right{transition:none}}.carousel-control-prev,.carousel-control-next{position:absolute;top:0;bottom:0;z-index:1;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:15%;color:#fff;text-align:center;opacity:0.5;transition:opacity 0.15s ease}@media (prefers-reduced-motion: reduce){.carousel-control-prev,.carousel-control-next{transition:none}}.carousel-control-prev:hover,.carousel-control-prev:focus,.carousel-control-next:hover,.carousel-control-next:focus{color:#fff;text-decoration:none;outline:0;opacity:0.9}.carousel-control-prev{left:0}.carousel-control-next{right:0}.carousel-control-prev-icon,.carousel-control-next-icon{display:inline-block;width:20px;height:20px;background:no-repeat 50% / 100% 100%}.carousel-control-prev-icon{background-image:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' fill=\'%23fff\' width=\'8\' height=\'8\' viewBox=\'0 0 8 8\'%3e%3cpath d=\'M5.25 0l-4 4 4 4 1.5-1.5L4.25 4l2.5-2.5L5.25 0z\'/%3e%3c/svg%3e")}.carousel-control-next-icon{background-image:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' fill=\'%23fff\' width=\'8\' height=\'8\' viewBox=\'0 0 8 8\'%3e%3cpath d=\'M2.75 0l-1.5 1.5L3.75 4l-2.5 2.5L2.75 8l4-4-4-4z\'/%3e%3c/svg%3e")}.carousel-indicators{position:absolute;right:0;bottom:0;left:0;z-index:15;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;padding-left:0;margin-right:15%;margin-left:15%;list-style:none}.carousel-indicators li{box-sizing:content-box;-ms-flex:0 1 auto;flex:0 1 auto;width:30px;height:3px;margin-right:3px;margin-left:3px;text-indent:-999px;cursor:pointer;background-color:#fff;background-clip:padding-box;border-top:10px solid transparent;border-bottom:10px solid transparent;opacity:.5;transition:opacity 0.6s ease}@media (prefers-reduced-motion: reduce){.carousel-indicators li{transition:none}}.carousel-indicators .active{opacity:1}.carousel-caption{position:absolute;right:15%;bottom:20px;left:15%;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center}@-webkit-keyframes spinner-border{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-border{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.spinner-border{display:inline-block;width:2rem;height:2rem;vertical-align:text-bottom;border:0.25em solid currentColor;border-right-color:transparent;border-radius:50%;-webkit-animation:spinner-border .75s linear infinite;animation:spinner-border .75s linear infinite}.spinner-border-sm{width:1rem;height:1rem;border-width:0.2em}@-webkit-keyframes spinner-grow{0%{-webkit-transform:scale(0);transform:scale(0)}50%{opacity:1}}@keyframes spinner-grow{0%{-webkit-transform:scale(0);transform:scale(0)}50%{opacity:1}}.spinner-grow{display:inline-block;width:2rem;height:2rem;vertical-align:text-bottom;background-color:currentColor;border-radius:50%;opacity:0;-webkit-animation:spinner-grow .75s linear infinite;animation:spinner-grow .75s linear infinite}.spinner-grow-sm{width:1rem;height:1rem}.align-baseline{vertical-align:baseline !important}.align-top{vertical-align:top !important}.align-middle{vertical-align:middle !important}.align-bottom{vertical-align:bottom !important}.align-text-bottom{vertical-align:text-bottom !important}.align-text-top{vertical-align:text-top !important}.bg-primary{background-color:#007bff !important}a.bg-primary:hover,a.bg-primary:focus,button.bg-primary:hover,button.bg-primary:focus{background-color:#0062cc !important}.bg-secondary{background-color:#6c757d !important}a.bg-secondary:hover,a.bg-secondary:focus,button.bg-secondary:hover,button.bg-secondary:focus{background-color:#545b62 !important}.bg-success{background-color:#28a745 !important}a.bg-success:hover,a.bg-success:focus,button.bg-success:hover,button.bg-success:focus{background-color:#1e7e34 !important}.bg-info{background-color:#17a2b8 !important}a.bg-info:hover,a.bg-info:focus,button.bg-info:hover,button.bg-info:focus{background-color:#117a8b !important}.bg-warning{background-color:#ffc107 !important}a.bg-warning:hover,a.bg-warning:focus,button.bg-warning:hover,button.bg-warning:focus{background-color:#d39e00 !important}.bg-danger{background-color:#dc3545 !important}a.bg-danger:hover,a.bg-danger:focus,button.bg-danger:hover,button.bg-danger:focus{background-color:#bd2130 !important}.bg-light{background-color:#f8f9fa !important}a.bg-light:hover,a.bg-light:focus,button.bg-light:hover,button.bg-light:focus{background-color:#dae0e5 !important}.bg-dark{background-color:#343a40 !important}a.bg-dark:hover,a.bg-dark:focus,button.bg-dark:hover,button.bg-dark:focus{background-color:#1d2124 !important}.bg-white{background-color:#fff !important}.bg-transparent{background-color:transparent !important}.border{border:1px solid #dee2e6 !important}.border-top{border-top:1px solid #dee2e6 !important}.border-right{border-right:1px solid #dee2e6 !important}.border-bottom{border-bottom:1px solid #dee2e6 !important}.border-left{border-left:1px solid #dee2e6 !important}.border-0{border:0 !important}.border-top-0{border-top:0 !important}.border-right-0{border-right:0 !important}.border-bottom-0{border-bottom:0 !important}.border-left-0{border-left:0 !important}.border-primary{border-color:#007bff !important}.border-secondary{border-color:#6c757d !important}.border-success{border-color:#28a745 !important}.border-info{border-color:#17a2b8 !important}.border-warning{border-color:#ffc107 !important}.border-danger{border-color:#dc3545 !important}.border-light{border-color:#f8f9fa !important}.border-dark{border-color:#343a40 !important}.border-white{border-color:#fff !important}.rounded-sm{border-radius:0.2rem !important}.rounded{border-radius:0.25rem !important}.rounded-top{border-top-left-radius:0.25rem !important;border-top-right-radius:0.25rem !important}.rounded-right{border-top-right-radius:0.25rem !important;border-bottom-right-radius:0.25rem !important}.rounded-bottom{border-bottom-right-radius:0.25rem !important;border-bottom-left-radius:0.25rem !important}.rounded-left{border-top-left-radius:0.25rem !important;border-bottom-left-radius:0.25rem !important}.rounded-lg{border-radius:0.3rem !important}.rounded-circle{border-radius:50% !important}.rounded-pill{border-radius:50rem !important}.rounded-0{border-radius:0 !important}.clearfix::after{display:block;clear:both;content:""}.d-none{display:none !important}.d-inline{display:inline !important}.d-inline-block{display:inline-block !important}.d-block{display:block !important}.d-table{display:table !important}.d-table-row{display:table-row !important}.d-table-cell{display:table-cell !important}.d-flex{display:-ms-flexbox !important;display:flex !important}.d-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}@media (min-width: 576px){.d-sm-none{display:none !important}.d-sm-inline{display:inline !important}.d-sm-inline-block{display:inline-block !important}.d-sm-block{display:block !important}.d-sm-table{display:table !important}.d-sm-table-row{display:table-row !important}.d-sm-table-cell{display:table-cell !important}.d-sm-flex{display:-ms-flexbox !important;display:flex !important}.d-sm-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}@media (min-width: 768px){.d-md-none{display:none !important}.d-md-inline{display:inline !important}.d-md-inline-block{display:inline-block !important}.d-md-block{display:block !important}.d-md-table{display:table !important}.d-md-table-row{display:table-row !important}.d-md-table-cell{display:table-cell !important}.d-md-flex{display:-ms-flexbox !important;display:flex !important}.d-md-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}@media (min-width: 992px){.d-lg-none{display:none !important}.d-lg-inline{display:inline !important}.d-lg-inline-block{display:inline-block !important}.d-lg-block{display:block !important}.d-lg-table{display:table !important}.d-lg-table-row{display:table-row !important}.d-lg-table-cell{display:table-cell !important}.d-lg-flex{display:-ms-flexbox !important;display:flex !important}.d-lg-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}@media (min-width: 1200px){.d-xl-none{display:none !important}.d-xl-inline{display:inline !important}.d-xl-inline-block{display:inline-block !important}.d-xl-block{display:block !important}.d-xl-table{display:table !important}.d-xl-table-row{display:table-row !important}.d-xl-table-cell{display:table-cell !important}.d-xl-flex{display:-ms-flexbox !important;display:flex !important}.d-xl-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}@media print{.d-print-none{display:none !important}.d-print-inline{display:inline !important}.d-print-inline-block{display:inline-block !important}.d-print-block{display:block !important}.d-print-table{display:table !important}.d-print-table-row{display:table-row !important}.d-print-table-cell{display:table-cell !important}.d-print-flex{display:-ms-flexbox !important;display:flex !important}.d-print-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}.embed-responsive{position:relative;display:block;width:100%;padding:0;overflow:hidden}.embed-responsive::before{display:block;content:""}.embed-responsive .embed-responsive-item,.embed-responsive iframe,.embed-responsive embed,.embed-responsive object,.embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.embed-responsive-21by9::before{padding-top:42.857143%}.embed-responsive-16by9::before{padding-top:56.25%}.embed-responsive-4by3::before{padding-top:75%}.embed-responsive-1by1::before{padding-top:100%}.flex-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-center{-ms-flex-align:center !important;align-items:center !important}.align-items-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}@media (min-width: 576px){.flex-sm-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-sm-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-sm-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-sm-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-sm-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-sm-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-sm-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-sm-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-sm-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-sm-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-sm-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-sm-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-sm-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-sm-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-sm-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-sm-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-sm-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-sm-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-sm-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-sm-center{-ms-flex-align:center !important;align-items:center !important}.align-items-sm-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-sm-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-sm-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-sm-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-sm-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-sm-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-sm-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-sm-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-sm-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-sm-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-sm-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-sm-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-sm-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-sm-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}@media (min-width: 768px){.flex-md-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-md-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-md-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-md-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-md-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-md-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-md-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-md-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-md-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-md-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-md-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-md-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-md-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-md-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-md-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-md-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-md-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-md-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-md-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-md-center{-ms-flex-align:center !important;align-items:center !important}.align-items-md-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-md-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-md-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-md-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-md-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-md-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-md-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-md-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-md-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-md-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-md-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-md-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-md-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-md-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}@media (min-width: 992px){.flex-lg-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-lg-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-lg-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-lg-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-lg-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-lg-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-lg-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-lg-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-lg-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-lg-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-lg-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-lg-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-lg-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-lg-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-lg-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-lg-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-lg-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-lg-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-lg-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-lg-center{-ms-flex-align:center !important;align-items:center !important}.align-items-lg-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-lg-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-lg-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-lg-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-lg-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-lg-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-lg-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-lg-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-lg-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-lg-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-lg-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-lg-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-lg-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-lg-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}@media (min-width: 1200px){.flex-xl-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-xl-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-xl-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-xl-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-xl-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-xl-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-xl-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-xl-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-xl-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-xl-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-xl-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-xl-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-xl-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-xl-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-xl-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-xl-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-xl-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-xl-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-xl-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-xl-center{-ms-flex-align:center !important;align-items:center !important}.align-items-xl-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-xl-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-xl-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-xl-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-xl-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-xl-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-xl-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-xl-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-xl-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-xl-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-xl-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-xl-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-xl-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-xl-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}.float-left{float:left !important}.float-right{float:right !important}.float-none{float:none !important}@media (min-width: 576px){.float-sm-left{float:left !important}.float-sm-right{float:right !important}.float-sm-none{float:none !important}}@media (min-width: 768px){.float-md-left{float:left !important}.float-md-right{float:right !important}.float-md-none{float:none !important}}@media (min-width: 992px){.float-lg-left{float:left !important}.float-lg-right{float:right !important}.float-lg-none{float:none !important}}@media (min-width: 1200px){.float-xl-left{float:left !important}.float-xl-right{float:right !important}.float-xl-none{float:none !important}}.overflow-auto{overflow:auto !important}.overflow-hidden{overflow:hidden !important}.position-static{position:static !important}.position-relative{position:relative !important}.position-absolute{position:absolute !important}.position-fixed{position:fixed !important}.position-sticky{position:-webkit-sticky !important;position:sticky !important}.fixed-top{position:fixed;top:0;right:0;left:0;z-index:1030}.fixed-bottom{position:fixed;right:0;bottom:0;left:0;z-index:1030}@supports (position: -webkit-sticky) or (position: sticky){.sticky-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;overflow:visible;clip:auto;white-space:normal}.shadow-sm{box-shadow:0 0.125rem 0.25rem rgba(0,0,0,0.075) !important}.shadow{box-shadow:0 0.5rem 1rem rgba(0,0,0,0.15) !important}.shadow-lg{box-shadow:0 1rem 3rem rgba(0,0,0,0.175) !important}.shadow-none{box-shadow:none !important}.w-25{width:25% !important}.w-50{width:50% !important}.w-75{width:75% !important}.w-100{width:100% !important}.w-auto{width:auto !important}.h-25{height:25% !important}.h-50{height:50% !important}.h-75{height:75% !important}.h-100{height:100% !important}.h-auto{height:auto !important}.mw-100{max-width:100% !important}.mh-100{max-height:100% !important}.min-vw-100{min-width:100vw !important}.min-vh-100{min-height:100vh !important}.vw-100{width:100vw !important}.vh-100{height:100vh !important}.stretched-link::after{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;pointer-events:auto;content:"";background-color:rgba(0,0,0,0)}.m-0{margin:0 !important}.mt-0,.my-0{margin-top:0 !important}.mr-0,.mx-0{margin-right:0 !important}.mb-0,.my-0{margin-bottom:0 !important}.ml-0,.mx-0{margin-left:0 !important}.m-1{margin:0.25rem !important}.mt-1,.my-1{margin-top:0.25rem !important}.mr-1,.mx-1{margin-right:0.25rem !important}.mb-1,.my-1{margin-bottom:0.25rem !important}.ml-1,.mx-1{margin-left:0.25rem !important}.m-2{margin:0.5rem !important}.mt-2,.my-2{margin-top:0.5rem !important}.mr-2,.mx-2{margin-right:0.5rem !important}.mb-2,.my-2{margin-bottom:0.5rem !important}.ml-2,.mx-2{margin-left:0.5rem !important}.m-3{margin:1rem !important}.mt-3,.my-3{margin-top:1rem !important}.mr-3,.mx-3{margin-right:1rem !important}.mb-3,.my-3{margin-bottom:1rem !important}.ml-3,.mx-3{margin-left:1rem !important}.m-4{margin:1.5rem !important}.mt-4,.my-4{margin-top:1.5rem !important}.mr-4,.mx-4{margin-right:1.5rem !important}.mb-4,.my-4{margin-bottom:1.5rem !important}.ml-4,.mx-4{margin-left:1.5rem !important}.m-5{margin:3rem !important}.mt-5,.my-5{margin-top:3rem !important}.mr-5,.mx-5{margin-right:3rem !important}.mb-5,.my-5{margin-bottom:3rem !important}.ml-5,.mx-5{margin-left:3rem !important}.p-0{padding:0 !important}.pt-0,.py-0{padding-top:0 !important}.pr-0,.px-0{padding-right:0 !important}.pb-0,.py-0{padding-bottom:0 !important}.pl-0,.px-0{padding-left:0 !important}.p-1{padding:0.25rem !important}.pt-1,.py-1{padding-top:0.25rem !important}.pr-1,.px-1{padding-right:0.25rem !important}.pb-1,.py-1{padding-bottom:0.25rem !important}.pl-1,.px-1{padding-left:0.25rem !important}.p-2{padding:0.5rem !important}.pt-2,.py-2{padding-top:0.5rem !important}.pr-2,.px-2{padding-right:0.5rem !important}.pb-2,.py-2{padding-bottom:0.5rem !important}.pl-2,.px-2{padding-left:0.5rem !important}.p-3{padding:1rem !important}.pt-3,.py-3{padding-top:1rem !important}.pr-3,.px-3{padding-right:1rem !important}.pb-3,.py-3{padding-bottom:1rem !important}.pl-3,.px-3{padding-left:1rem !important}.p-4{padding:1.5rem !important}.pt-4,.py-4{padding-top:1.5rem !important}.pr-4,.px-4{padding-right:1.5rem !important}.pb-4,.py-4{padding-bottom:1.5rem !important}.pl-4,.px-4{padding-left:1.5rem !important}.p-5{padding:3rem !important}.pt-5,.py-5{padding-top:3rem !important}.pr-5,.px-5{padding-right:3rem !important}.pb-5,.py-5{padding-bottom:3rem !important}.pl-5,.px-5{padding-left:3rem !important}.m-n1{margin:-0.25rem !important}.mt-n1,.my-n1{margin-top:-0.25rem !important}.mr-n1,.mx-n1{margin-right:-0.25rem !important}.mb-n1,.my-n1{margin-bottom:-0.25rem !important}.ml-n1,.mx-n1{margin-left:-0.25rem !important}.m-n2{margin:-0.5rem !important}.mt-n2,.my-n2{margin-top:-0.5rem !important}.mr-n2,.mx-n2{margin-right:-0.5rem !important}.mb-n2,.my-n2{margin-bottom:-0.5rem !important}.ml-n2,.mx-n2{margin-left:-0.5rem !important}.m-n3{margin:-1rem !important}.mt-n3,.my-n3{margin-top:-1rem !important}.mr-n3,.mx-n3{margin-right:-1rem !important}.mb-n3,.my-n3{margin-bottom:-1rem !important}.ml-n3,.mx-n3{margin-left:-1rem !important}.m-n4{margin:-1.5rem !important}.mt-n4,.my-n4{margin-top:-1.5rem !important}.mr-n4,.mx-n4{margin-right:-1.5rem !important}.mb-n4,.my-n4{margin-bottom:-1.5rem !important}.ml-n4,.mx-n4{margin-left:-1.5rem !important}.m-n5{margin:-3rem !important}.mt-n5,.my-n5{margin-top:-3rem !important}.mr-n5,.mx-n5{margin-right:-3rem !important}.mb-n5,.my-n5{margin-bottom:-3rem !important}.ml-n5,.mx-n5{margin-left:-3rem !important}.m-auto{margin:auto !important}.mt-auto,.my-auto{margin-top:auto !important}.mr-auto,.mx-auto{margin-right:auto !important}.mb-auto,.my-auto{margin-bottom:auto !important}.ml-auto,.mx-auto{margin-left:auto !important}@media (min-width: 576px){.m-sm-0{margin:0 !important}.mt-sm-0,.my-sm-0{margin-top:0 !important}.mr-sm-0,.mx-sm-0{margin-right:0 !important}.mb-sm-0,.my-sm-0{margin-bottom:0 !important}.ml-sm-0,.mx-sm-0{margin-left:0 !important}.m-sm-1{margin:0.25rem !important}.mt-sm-1,.my-sm-1{margin-top:0.25rem !important}.mr-sm-1,.mx-sm-1{margin-right:0.25rem !important}.mb-sm-1,.my-sm-1{margin-bottom:0.25rem !important}.ml-sm-1,.mx-sm-1{margin-left:0.25rem !important}.m-sm-2{margin:0.5rem !important}.mt-sm-2,.my-sm-2{margin-top:0.5rem !important}.mr-sm-2,.mx-sm-2{margin-right:0.5rem !important}.mb-sm-2,.my-sm-2{margin-bottom:0.5rem !important}.ml-sm-2,.mx-sm-2{margin-left:0.5rem !important}.m-sm-3{margin:1rem !important}.mt-sm-3,.my-sm-3{margin-top:1rem !important}.mr-sm-3,.mx-sm-3{margin-right:1rem !important}.mb-sm-3,.my-sm-3{margin-bottom:1rem !important}.ml-sm-3,.mx-sm-3{margin-left:1rem !important}.m-sm-4{margin:1.5rem !important}.mt-sm-4,.my-sm-4{margin-top:1.5rem !important}.mr-sm-4,.mx-sm-4{margin-right:1.5rem !important}.mb-sm-4,.my-sm-4{margin-bottom:1.5rem !important}.ml-sm-4,.mx-sm-4{margin-left:1.5rem !important}.m-sm-5{margin:3rem !important}.mt-sm-5,.my-sm-5{margin-top:3rem !important}.mr-sm-5,.mx-sm-5{margin-right:3rem !important}.mb-sm-5,.my-sm-5{margin-bottom:3rem !important}.ml-sm-5,.mx-sm-5{margin-left:3rem !important}.p-sm-0{padding:0 !important}.pt-sm-0,.py-sm-0{padding-top:0 !important}.pr-sm-0,.px-sm-0{padding-right:0 !important}.pb-sm-0,.py-sm-0{padding-bottom:0 !important}.pl-sm-0,.px-sm-0{padding-left:0 !important}.p-sm-1{padding:0.25rem !important}.pt-sm-1,.py-sm-1{padding-top:0.25rem !important}.pr-sm-1,.px-sm-1{padding-right:0.25rem !important}.pb-sm-1,.py-sm-1{padding-bottom:0.25rem !important}.pl-sm-1,.px-sm-1{padding-left:0.25rem !important}.p-sm-2{padding:0.5rem !important}.pt-sm-2,.py-sm-2{padding-top:0.5rem !important}.pr-sm-2,.px-sm-2{padding-right:0.5rem !important}.pb-sm-2,.py-sm-2{padding-bottom:0.5rem !important}.pl-sm-2,.px-sm-2{padding-left:0.5rem !important}.p-sm-3{padding:1rem !important}.pt-sm-3,.py-sm-3{padding-top:1rem !important}.pr-sm-3,.px-sm-3{padding-right:1rem !important}.pb-sm-3,.py-sm-3{padding-bottom:1rem !important}.pl-sm-3,.px-sm-3{padding-left:1rem !important}.p-sm-4{padding:1.5rem !important}.pt-sm-4,.py-sm-4{padding-top:1.5rem !important}.pr-sm-4,.px-sm-4{padding-right:1.5rem !important}.pb-sm-4,.py-sm-4{padding-bottom:1.5rem !important}.pl-sm-4,.px-sm-4{padding-left:1.5rem !important}.p-sm-5{padding:3rem !important}.pt-sm-5,.py-sm-5{padding-top:3rem !important}.pr-sm-5,.px-sm-5{padding-right:3rem !important}.pb-sm-5,.py-sm-5{padding-bottom:3rem !important}.pl-sm-5,.px-sm-5{padding-left:3rem !important}.m-sm-n1{margin:-0.25rem !important}.mt-sm-n1,.my-sm-n1{margin-top:-0.25rem !important}.mr-sm-n1,.mx-sm-n1{margin-right:-0.25rem !important}.mb-sm-n1,.my-sm-n1{margin-bottom:-0.25rem !important}.ml-sm-n1,.mx-sm-n1{margin-left:-0.25rem !important}.m-sm-n2{margin:-0.5rem !important}.mt-sm-n2,.my-sm-n2{margin-top:-0.5rem !important}.mr-sm-n2,.mx-sm-n2{margin-right:-0.5rem !important}.mb-sm-n2,.my-sm-n2{margin-bottom:-0.5rem !important}.ml-sm-n2,.mx-sm-n2{margin-left:-0.5rem !important}.m-sm-n3{margin:-1rem !important}.mt-sm-n3,.my-sm-n3{margin-top:-1rem !important}.mr-sm-n3,.mx-sm-n3{margin-right:-1rem !important}.mb-sm-n3,.my-sm-n3{margin-bottom:-1rem !important}.ml-sm-n3,.mx-sm-n3{margin-left:-1rem !important}.m-sm-n4{margin:-1.5rem !important}.mt-sm-n4,.my-sm-n4{margin-top:-1.5rem !important}.mr-sm-n4,.mx-sm-n4{margin-right:-1.5rem !important}.mb-sm-n4,.my-sm-n4{margin-bottom:-1.5rem !important}.ml-sm-n4,.mx-sm-n4{margin-left:-1.5rem !important}.m-sm-n5{margin:-3rem !important}.mt-sm-n5,.my-sm-n5{margin-top:-3rem !important}.mr-sm-n5,.mx-sm-n5{margin-right:-3rem !important}.mb-sm-n5,.my-sm-n5{margin-bottom:-3rem !important}.ml-sm-n5,.mx-sm-n5{margin-left:-3rem !important}.m-sm-auto{margin:auto !important}.mt-sm-auto,.my-sm-auto{margin-top:auto !important}.mr-sm-auto,.mx-sm-auto{margin-right:auto !important}.mb-sm-auto,.my-sm-auto{margin-bottom:auto !important}.ml-sm-auto,.mx-sm-auto{margin-left:auto !important}}@media (min-width: 768px){.m-md-0{margin:0 !important}.mt-md-0,.my-md-0{margin-top:0 !important}.mr-md-0,.mx-md-0{margin-right:0 !important}.mb-md-0,.my-md-0{margin-bottom:0 !important}.ml-md-0,.mx-md-0{margin-left:0 !important}.m-md-1{margin:0.25rem !important}.mt-md-1,.my-md-1{margin-top:0.25rem !important}.mr-md-1,.mx-md-1{margin-right:0.25rem !important}.mb-md-1,.my-md-1{margin-bottom:0.25rem !important}.ml-md-1,.mx-md-1{margin-left:0.25rem !important}.m-md-2{margin:0.5rem !important}.mt-md-2,.my-md-2{margin-top:0.5rem !important}.mr-md-2,.mx-md-2{margin-right:0.5rem !important}.mb-md-2,.my-md-2{margin-bottom:0.5rem !important}.ml-md-2,.mx-md-2{margin-left:0.5rem !important}.m-md-3{margin:1rem !important}.mt-md-3,.my-md-3{margin-top:1rem !important}.mr-md-3,.mx-md-3{margin-right:1rem !important}.mb-md-3,.my-md-3{margin-bottom:1rem !important}.ml-md-3,.mx-md-3{margin-left:1rem !important}.m-md-4{margin:1.5rem !important}.mt-md-4,.my-md-4{margin-top:1.5rem !important}.mr-md-4,.mx-md-4{margin-right:1.5rem !important}.mb-md-4,.my-md-4{margin-bottom:1.5rem !important}.ml-md-4,.mx-md-4{margin-left:1.5rem !important}.m-md-5{margin:3rem !important}.mt-md-5,.my-md-5{margin-top:3rem !important}.mr-md-5,.mx-md-5{margin-right:3rem !important}.mb-md-5,.my-md-5{margin-bottom:3rem !important}.ml-md-5,.mx-md-5{margin-left:3rem !important}.p-md-0{padding:0 !important}.pt-md-0,.py-md-0{padding-top:0 !important}.pr-md-0,.px-md-0{padding-right:0 !important}.pb-md-0,.py-md-0{padding-bottom:0 !important}.pl-md-0,.px-md-0{padding-left:0 !important}.p-md-1{padding:0.25rem !important}.pt-md-1,.py-md-1{padding-top:0.25rem !important}.pr-md-1,.px-md-1{padding-right:0.25rem !important}.pb-md-1,.py-md-1{padding-bottom:0.25rem !important}.pl-md-1,.px-md-1{padding-left:0.25rem !important}.p-md-2{padding:0.5rem !important}.pt-md-2,.py-md-2{padding-top:0.5rem !important}.pr-md-2,.px-md-2{padding-right:0.5rem !important}.pb-md-2,.py-md-2{padding-bottom:0.5rem !important}.pl-md-2,.px-md-2{padding-left:0.5rem !important}.p-md-3{padding:1rem !important}.pt-md-3,.py-md-3{padding-top:1rem !important}.pr-md-3,.px-md-3{padding-right:1rem !important}.pb-md-3,.py-md-3{padding-bottom:1rem !important}.pl-md-3,.px-md-3{padding-left:1rem !important}.p-md-4{padding:1.5rem !important}.pt-md-4,.py-md-4{padding-top:1.5rem !important}.pr-md-4,.px-md-4{padding-right:1.5rem !important}.pb-md-4,.py-md-4{padding-bottom:1.5rem !important}.pl-md-4,.px-md-4{padding-left:1.5rem !important}.p-md-5{padding:3rem !important}.pt-md-5,.py-md-5{padding-top:3rem !important}.pr-md-5,.px-md-5{padding-right:3rem !important}.pb-md-5,.py-md-5{padding-bottom:3rem !important}.pl-md-5,.px-md-5{padding-left:3rem !important}.m-md-n1{margin:-0.25rem !important}.mt-md-n1,.my-md-n1{margin-top:-0.25rem !important}.mr-md-n1,.mx-md-n1{margin-right:-0.25rem !important}.mb-md-n1,.my-md-n1{margin-bottom:-0.25rem !important}.ml-md-n1,.mx-md-n1{margin-left:-0.25rem !important}.m-md-n2{margin:-0.5rem !important}.mt-md-n2,.my-md-n2{margin-top:-0.5rem !important}.mr-md-n2,.mx-md-n2{margin-right:-0.5rem !important}.mb-md-n2,.my-md-n2{margin-bottom:-0.5rem !important}.ml-md-n2,.mx-md-n2{margin-left:-0.5rem !important}.m-md-n3{margin:-1rem !important}.mt-md-n3,.my-md-n3{margin-top:-1rem !important}.mr-md-n3,.mx-md-n3{margin-right:-1rem !important}.mb-md-n3,.my-md-n3{margin-bottom:-1rem !important}.ml-md-n3,.mx-md-n3{margin-left:-1rem !important}.m-md-n4{margin:-1.5rem !important}.mt-md-n4,.my-md-n4{margin-top:-1.5rem !important}.mr-md-n4,.mx-md-n4{margin-right:-1.5rem !important}.mb-md-n4,.my-md-n4{margin-bottom:-1.5rem !important}.ml-md-n4,.mx-md-n4{margin-left:-1.5rem !important}.m-md-n5{margin:-3rem !important}.mt-md-n5,.my-md-n5{margin-top:-3rem !important}.mr-md-n5,.mx-md-n5{margin-right:-3rem !important}.mb-md-n5,.my-md-n5{margin-bottom:-3rem !important}.ml-md-n5,.mx-md-n5{margin-left:-3rem !important}.m-md-auto{margin:auto !important}.mt-md-auto,.my-md-auto{margin-top:auto !important}.mr-md-auto,.mx-md-auto{margin-right:auto !important}.mb-md-auto,.my-md-auto{margin-bottom:auto !important}.ml-md-auto,.mx-md-auto{margin-left:auto !important}}@media (min-width: 992px){.m-lg-0{margin:0 !important}.mt-lg-0,.my-lg-0{margin-top:0 !important}.mr-lg-0,.mx-lg-0{margin-right:0 !important}.mb-lg-0,.my-lg-0{margin-bottom:0 !important}.ml-lg-0,.mx-lg-0{margin-left:0 !important}.m-lg-1{margin:0.25rem !important}.mt-lg-1,.my-lg-1{margin-top:0.25rem !important}.mr-lg-1,.mx-lg-1{margin-right:0.25rem !important}.mb-lg-1,.my-lg-1{margin-bottom:0.25rem !important}.ml-lg-1,.mx-lg-1{margin-left:0.25rem !important}.m-lg-2{margin:0.5rem !important}.mt-lg-2,.my-lg-2{margin-top:0.5rem !important}.mr-lg-2,.mx-lg-2{margin-right:0.5rem !important}.mb-lg-2,.my-lg-2{margin-bottom:0.5rem !important}.ml-lg-2,.mx-lg-2{margin-left:0.5rem !important}.m-lg-3{margin:1rem !important}.mt-lg-3,.my-lg-3{margin-top:1rem !important}.mr-lg-3,.mx-lg-3{margin-right:1rem !important}.mb-lg-3,.my-lg-3{margin-bottom:1rem !important}.ml-lg-3,.mx-lg-3{margin-left:1rem !important}.m-lg-4{margin:1.5rem !important}.mt-lg-4,.my-lg-4{margin-top:1.5rem !important}.mr-lg-4,.mx-lg-4{margin-right:1.5rem !important}.mb-lg-4,.my-lg-4{margin-bottom:1.5rem !important}.ml-lg-4,.mx-lg-4{margin-left:1.5rem !important}.m-lg-5{margin:3rem !important}.mt-lg-5,.my-lg-5{margin-top:3rem !important}.mr-lg-5,.mx-lg-5{margin-right:3rem !important}.mb-lg-5,.my-lg-5{margin-bottom:3rem !important}.ml-lg-5,.mx-lg-5{margin-left:3rem !important}.p-lg-0{padding:0 !important}.pt-lg-0,.py-lg-0{padding-top:0 !important}.pr-lg-0,.px-lg-0{padding-right:0 !important}.pb-lg-0,.py-lg-0{padding-bottom:0 !important}.pl-lg-0,.px-lg-0{padding-left:0 !important}.p-lg-1{padding:0.25rem !important}.pt-lg-1,.py-lg-1{padding-top:0.25rem !important}.pr-lg-1,.px-lg-1{padding-right:0.25rem !important}.pb-lg-1,.py-lg-1{padding-bottom:0.25rem !important}.pl-lg-1,.px-lg-1{padding-left:0.25rem !important}.p-lg-2{padding:0.5rem !important}.pt-lg-2,.py-lg-2{padding-top:0.5rem !important}.pr-lg-2,.px-lg-2{padding-right:0.5rem !important}.pb-lg-2,.py-lg-2{padding-bottom:0.5rem !important}.pl-lg-2,.px-lg-2{padding-left:0.5rem !important}.p-lg-3{padding:1rem !important}.pt-lg-3,.py-lg-3{padding-top:1rem !important}.pr-lg-3,.px-lg-3{padding-right:1rem !important}.pb-lg-3,.py-lg-3{padding-bottom:1rem !important}.pl-lg-3,.px-lg-3{padding-left:1rem !important}.p-lg-4{padding:1.5rem !important}.pt-lg-4,.py-lg-4{padding-top:1.5rem !important}.pr-lg-4,.px-lg-4{padding-right:1.5rem !important}.pb-lg-4,.py-lg-4{padding-bottom:1.5rem !important}.pl-lg-4,.px-lg-4{padding-left:1.5rem !important}.p-lg-5{padding:3rem !important}.pt-lg-5,.py-lg-5{padding-top:3rem !important}.pr-lg-5,.px-lg-5{padding-right:3rem !important}.pb-lg-5,.py-lg-5{padding-bottom:3rem !important}.pl-lg-5,.px-lg-5{padding-left:3rem !important}.m-lg-n1{margin:-0.25rem !important}.mt-lg-n1,.my-lg-n1{margin-top:-0.25rem !important}.mr-lg-n1,.mx-lg-n1{margin-right:-0.25rem !important}.mb-lg-n1,.my-lg-n1{margin-bottom:-0.25rem !important}.ml-lg-n1,.mx-lg-n1{margin-left:-0.25rem !important}.m-lg-n2{margin:-0.5rem !important}.mt-lg-n2,.my-lg-n2{margin-top:-0.5rem !important}.mr-lg-n2,.mx-lg-n2{margin-right:-0.5rem !important}.mb-lg-n2,.my-lg-n2{margin-bottom:-0.5rem !important}.ml-lg-n2,.mx-lg-n2{margin-left:-0.5rem !important}.m-lg-n3{margin:-1rem !important}.mt-lg-n3,.my-lg-n3{margin-top:-1rem !important}.mr-lg-n3,.mx-lg-n3{margin-right:-1rem !important}.mb-lg-n3,.my-lg-n3{margin-bottom:-1rem !important}.ml-lg-n3,.mx-lg-n3{margin-left:-1rem !important}.m-lg-n4{margin:-1.5rem !important}.mt-lg-n4,.my-lg-n4{margin-top:-1.5rem !important}.mr-lg-n4,.mx-lg-n4{margin-right:-1.5rem !important}.mb-lg-n4,.my-lg-n4{margin-bottom:-1.5rem !important}.ml-lg-n4,.mx-lg-n4{margin-left:-1.5rem !important}.m-lg-n5{margin:-3rem !important}.mt-lg-n5,.my-lg-n5{margin-top:-3rem !important}.mr-lg-n5,.mx-lg-n5{margin-right:-3rem !important}.mb-lg-n5,.my-lg-n5{margin-bottom:-3rem !important}.ml-lg-n5,.mx-lg-n5{margin-left:-3rem !important}.m-lg-auto{margin:auto !important}.mt-lg-auto,.my-lg-auto{margin-top:auto !important}.mr-lg-auto,.mx-lg-auto{margin-right:auto !important}.mb-lg-auto,.my-lg-auto{margin-bottom:auto !important}.ml-lg-auto,.mx-lg-auto{margin-left:auto !important}}@media (min-width: 1200px){.m-xl-0{margin:0 !important}.mt-xl-0,.my-xl-0{margin-top:0 !important}.mr-xl-0,.mx-xl-0{margin-right:0 !important}.mb-xl-0,.my-xl-0{margin-bottom:0 !important}.ml-xl-0,.mx-xl-0{margin-left:0 !important}.m-xl-1{margin:0.25rem !important}.mt-xl-1,.my-xl-1{margin-top:0.25rem !important}.mr-xl-1,.mx-xl-1{margin-right:0.25rem !important}.mb-xl-1,.my-xl-1{margin-bottom:0.25rem !important}.ml-xl-1,.mx-xl-1{margin-left:0.25rem !important}.m-xl-2{margin:0.5rem !important}.mt-xl-2,.my-xl-2{margin-top:0.5rem !important}.mr-xl-2,.mx-xl-2{margin-right:0.5rem !important}.mb-xl-2,.my-xl-2{margin-bottom:0.5rem !important}.ml-xl-2,.mx-xl-2{margin-left:0.5rem !important}.m-xl-3{margin:1rem !important}.mt-xl-3,.my-xl-3{margin-top:1rem !important}.mr-xl-3,.mx-xl-3{margin-right:1rem !important}.mb-xl-3,.my-xl-3{margin-bottom:1rem !important}.ml-xl-3,.mx-xl-3{margin-left:1rem !important}.m-xl-4{margin:1.5rem !important}.mt-xl-4,.my-xl-4{margin-top:1.5rem !important}.mr-xl-4,.mx-xl-4{margin-right:1.5rem !important}.mb-xl-4,.my-xl-4{margin-bottom:1.5rem !important}.ml-xl-4,.mx-xl-4{margin-left:1.5rem !important}.m-xl-5{margin:3rem !important}.mt-xl-5,.my-xl-5{margin-top:3rem !important}.mr-xl-5,.mx-xl-5{margin-right:3rem !important}.mb-xl-5,.my-xl-5{margin-bottom:3rem !important}.ml-xl-5,.mx-xl-5{margin-left:3rem !important}.p-xl-0{padding:0 !important}.pt-xl-0,.py-xl-0{padding-top:0 !important}.pr-xl-0,.px-xl-0{padding-right:0 !important}.pb-xl-0,.py-xl-0{padding-bottom:0 !important}.pl-xl-0,.px-xl-0{padding-left:0 !important}.p-xl-1{padding:0.25rem !important}.pt-xl-1,.py-xl-1{padding-top:0.25rem !important}.pr-xl-1,.px-xl-1{padding-right:0.25rem !important}.pb-xl-1,.py-xl-1{padding-bottom:0.25rem !important}.pl-xl-1,.px-xl-1{padding-left:0.25rem !important}.p-xl-2{padding:0.5rem !important}.pt-xl-2,.py-xl-2{padding-top:0.5rem !important}.pr-xl-2,.px-xl-2{padding-right:0.5rem !important}.pb-xl-2,.py-xl-2{padding-bottom:0.5rem !important}.pl-xl-2,.px-xl-2{padding-left:0.5rem !important}.p-xl-3{padding:1rem !important}.pt-xl-3,.py-xl-3{padding-top:1rem !important}.pr-xl-3,.px-xl-3{padding-right:1rem !important}.pb-xl-3,.py-xl-3{padding-bottom:1rem !important}.pl-xl-3,.px-xl-3{padding-left:1rem !important}.p-xl-4{padding:1.5rem !important}.pt-xl-4,.py-xl-4{padding-top:1.5rem !important}.pr-xl-4,.px-xl-4{padding-right:1.5rem !important}.pb-xl-4,.py-xl-4{padding-bottom:1.5rem !important}.pl-xl-4,.px-xl-4{padding-left:1.5rem !important}.p-xl-5{padding:3rem !important}.pt-xl-5,.py-xl-5{padding-top:3rem !important}.pr-xl-5,.px-xl-5{padding-right:3rem !important}.pb-xl-5,.py-xl-5{padding-bottom:3rem !important}.pl-xl-5,.px-xl-5{padding-left:3rem !important}.m-xl-n1{margin:-0.25rem !important}.mt-xl-n1,.my-xl-n1{margin-top:-0.25rem !important}.mr-xl-n1,.mx-xl-n1{margin-right:-0.25rem !important}.mb-xl-n1,.my-xl-n1{margin-bottom:-0.25rem !important}.ml-xl-n1,.mx-xl-n1{margin-left:-0.25rem !important}.m-xl-n2{margin:-0.5rem !important}.mt-xl-n2,.my-xl-n2{margin-top:-0.5rem !important}.mr-xl-n2,.mx-xl-n2{margin-right:-0.5rem !important}.mb-xl-n2,.my-xl-n2{margin-bottom:-0.5rem !important}.ml-xl-n2,.mx-xl-n2{margin-left:-0.5rem !important}.m-xl-n3{margin:-1rem !important}.mt-xl-n3,.my-xl-n3{margin-top:-1rem !important}.mr-xl-n3,.mx-xl-n3{margin-right:-1rem !important}.mb-xl-n3,.my-xl-n3{margin-bottom:-1rem !important}.ml-xl-n3,.mx-xl-n3{margin-left:-1rem !important}.m-xl-n4{margin:-1.5rem !important}.mt-xl-n4,.my-xl-n4{margin-top:-1.5rem !important}.mr-xl-n4,.mx-xl-n4{margin-right:-1.5rem !important}.mb-xl-n4,.my-xl-n4{margin-bottom:-1.5rem !important}.ml-xl-n4,.mx-xl-n4{margin-left:-1.5rem !important}.m-xl-n5{margin:-3rem !important}.mt-xl-n5,.my-xl-n5{margin-top:-3rem !important}.mr-xl-n5,.mx-xl-n5{margin-right:-3rem !important}.mb-xl-n5,.my-xl-n5{margin-bottom:-3rem !important}.ml-xl-n5,.mx-xl-n5{margin-left:-3rem !important}.m-xl-auto{margin:auto !important}.mt-xl-auto,.my-xl-auto{margin-top:auto !important}.mr-xl-auto,.mx-xl-auto{margin-right:auto !important}.mb-xl-auto,.my-xl-auto{margin-bottom:auto !important}.ml-xl-auto,.mx-xl-auto{margin-left:auto !important}}.text-monospace{font-family:SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace !important}.text-justify{text-align:justify !important}.text-wrap{white-space:normal !important}.text-nowrap{white-space:nowrap !important}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.text-left{text-align:left !important}.text-right{text-align:right !important}.text-center{text-align:center !important}@media (min-width: 576px){.text-sm-left{text-align:left !important}.text-sm-right{text-align:right !important}.text-sm-center{text-align:center !important}}@media (min-width: 768px){.text-md-left{text-align:left !important}.text-md-right{text-align:right !important}.text-md-center{text-align:center !important}}@media (min-width: 992px){.text-lg-left{text-align:left !important}.text-lg-right{text-align:right !important}.text-lg-center{text-align:center !important}}@media (min-width: 1200px){.text-xl-left{text-align:left !important}.text-xl-right{text-align:right !important}.text-xl-center{text-align:center !important}}.text-lowercase{text-transform:lowercase !important}.text-uppercase{text-transform:uppercase !important}.text-capitalize{text-transform:capitalize !important}.font-weight-light{font-weight:300 !important}.font-weight-lighter{font-weight:lighter !important}.font-weight-normal{font-weight:400 !important}.font-weight-bold{font-weight:700 !important}.font-weight-bolder{font-weight:bolder !important}.font-italic{font-style:italic !important}.text-white{color:#fff !important}.text-primary{color:#007bff !important}a.text-primary:hover,a.text-primary:focus{color:#0056b3 !important}.text-secondary{color:#6c757d !important}a.text-secondary:hover,a.text-secondary:focus{color:#494f54 !important}.text-success{color:#28a745 !important}a.text-success:hover,a.text-success:focus{color:#19692c !important}.text-info{color:#17a2b8 !important}a.text-info:hover,a.text-info:focus{color:#0f6674 !important}.text-warning{color:#ffc107 !important}a.text-warning:hover,a.text-warning:focus{color:#ba8b00 !important}.text-danger{color:#dc3545 !important}a.text-danger:hover,a.text-danger:focus{color:#a71d2a !important}.text-light{color:#f8f9fa !important}a.text-light:hover,a.text-light:focus{color:#cbd3da !important}.text-dark{color:#343a40 !important}a.text-dark:hover,a.text-dark:focus{color:#121416 !important}.text-body{color:#212529 !important}.text-muted{color:#6c757d !important}.text-black-50{color:rgba(0,0,0,0.5) !important}.text-white-50{color:rgba(255,255,255,0.5) !important}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.text-decoration-none{text-decoration:none !important}.text-break{word-break:break-word !important;overflow-wrap:break-word !important}.text-reset{color:inherit !important}.visible{visibility:visible !important}.invisible{visibility:hidden !important}@media print{*,*::before,*::after{text-shadow:none !important;box-shadow:none !important}a:not(.btn){text-decoration:underline}abbr[title]::after{content:" (" attr(title) ")"}pre{white-space:pre-wrap !important}pre,blockquote{border:1px solid #adb5bd;page-break-inside:avoid}thead{display:table-header-group}tr,img{page-break-inside:avoid}p,h2,h3{orphans:3;widows:3}h2,h3{page-break-after:avoid}@page{size:a3}body{min-width:992px !important}.container{min-width:992px !important}.navbar{display:none}.badge{border:1px solid #000}.table{border-collapse:collapse !important}.table td,.table th{background-color:#fff !important}.table-bordered th,.table-bordered td{border:1px solid #dee2e6 !important}.table-dark{color:inherit}.table-dark th,.table-dark td,.table-dark thead th,.table-dark tbody+tbody{border-color:#dee2e6}.table .thead-dark th{color:inherit;border-color:#dee2e6}}\n',""]),t.exports=e},function(t,e,n){(e=n(24)(!1)).push([t.i,"footer{display:flex;justify-content:center}h1,h2{display:flex;justify-content:center;align-items:center}div a{width:100%;height:100%}.configButton{position:absolute;right:10px;top:15px}#catInput{width:100%}#UserDashboard{color:white;font-family:'Audiowide', cursive}#configDashboard{width:80%;color:black;font-family:'Audiowide', cursive}div#configHeader{background-color:lightgray;border-radius:5px}.router{width:100%;display:flex;flex-direction:row;align-items:center;justify-content:center}.categoriesDrop{display:flex;justify-content:center;align-items:center}.btn{width:100%}#chartArea{width:80%}svg{width:100%;height:300px;overflow:visible;margin-bottom:2rem;display:block;box-shadow:inset 1px 2000px rgba(208,208,208,0.75)}text{color:whitesmoke}span.querySpan.input{margin-right:10px}#root{font-family:'Audiowide', cursive;flex-basis:100%;display:flex;flex-direction:column;align-items:center;justify-content:center}#userDashboard{display:flex;flex-direction:column;align-items:center;justify-content:center;flex-basis:100%;height:100vh}#navBtn{display:flex;flex-direction:row;align-self:flex-end;align-items:center}div#navBtn{display:flex;flex-direction:row-reverse}span{display:flex;justify-content:space-evenly}button{margin-top:10px;margin-bottom:5px;width:100%}button:hover{color:#7278ab;box-shadow:0 5px 15px #7278ab}div .tooltip{background:lightsteelblue}text.tooltip{background:lightsteelblue}.tooltip{padding:5;font-size:20px;fill:black;font-weight:600}.bar:hover{fill:#ffb74b;fill-opacity:70%;box-shadow:0 5px 15px #7278ab}#endpointHeader{margin-left:10px}#categoriesHeader{margin-left:10px}#btnAddQuery button{width:100%}button.btnSecondary.btn.btn-outline-secondary{width:100%;background-color:whitesmoke;color:black}.deleteBtn{color:white;margin-left:10px;size:10%;height:50px;width:50px;border-radius:5px}span#navBtnSpan{width:100%;align-content:space-between;align-items:center}#navBtnGroup{width:100%;align-items:center}#btnContainer{width:100%}div.col-6{display:flex;flex-direction:column;align-items:center}button#navUserDash{margin:auto;margin-top:10px;margin-bottom:10px}button#navProjectSelect{margin:auto;margin-top:10px;margin-bottom:10px}button#navConfigDash{display:flex;flex-direction:column;align-items:center}a#navConfigLink{color:whitesmoke;text-decoration-line:none;width:100%}a#navUserDashLink{color:whitesmoke;text-decoration-line:none;width:100%}a#navProjLink{color:whitesmoke;text-decoration-line:none;width:100%}#projectSelect{display:flex;flex-direction:column;align-items:center}link{color:white;text-size-adjust:100%}.btn-primary{background-color:#073b66;border-color:#194779}.close{width:25%}.btn-danger{margin:auto}div#freqExamples{color:gray}@media only screen and (max-width: 700px){#navProjectSelect{width:max-content;max-width:230px;flex-wrap:wrap}.router{min-width:500}#navUserDash{width:max-content}link{color:white;min-width:230px;height:max-content;text-size-adjust:100%}}\n",""]),t.exports=e},function(t,e,n){"use strict";var r=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.default=t,e};Object.defineProperty(e,"__esModule",{value:!0});var o=n(34),i=r(n(0));n(5);e.default=function(t){var e,n=t.timeData,r=t.selectedQueries,a={},l=[],c=function(t){a[t]=[],n[t].forEach((function(e){l.push(e.timestamp),a[t].push(e.timing[0]+e.timing[1]/1e9)})),a[t].shift()};for(var u in n)c(u);e=a[r[0]]?a[r[0]]:[.1,.1,.1,.1,.1,.1,.1];var s=i.useRef();return i.useEffect((function(){var t=document.getElementById("chartArea"),n={yheight:t.clientHeight,xwidth:t.clientWidth};window.addEventListener("resize",(function(){n.yheight=t.clientHeight,n.xwidth=t.clientWidth,a.range([0,n.xwidth]),c=o.axisBottom(a).ticks(e.length),i.select(".x-axis").call(c),i.select(".y-axis").style("transform","translateX("+n.xwidth+"px)"),f=o.line().x((function(t,e){return a(e)})).y(l).curve(o.curveCardinal),i.select("rect").style("pointer-events","all").attr("width",""+n.xwidth),i.selectAll(".line").attr("d",f)}));var r=1.5*Math.max.apply(Math,e),i=o.select(s.current),a=o.scaleLinear().domain([0,e.length-1]).range([0,n.xwidth]),l=o.scaleLinear().domain([0,r]).range([300,0]),c=o.axisBottom(a).ticks(e.length);c.tickFormat((function(t){return Math.floor(t).toString()})),i.select(".x-axis").style("transform","translateY(300px)").style("filter","url(#glow)").call(c);var u=o.axisRight(l).ticks(20);u.tickFormat((function(t){return(Math.round(1e3*t)/1e3).toString()})),i.select(".y-axis").style("transform","translateX("+n.xwidth+"px)").style("filter","url(#glow)").call(u),i.select(".y-axis").append("text").attr("class","yaxislabel").attr("transform","rotate(90)").attr("y",20).attr("dy","-3em").attr("x","3.75em").style("text-anchor","start").style("fill","white").attr("font-size","20px").text("Response Time(s)");var f=o.line().x((function(t,e){return a(e)})).y(l).curve(o.curveCardinal),d=i.append("defs").append("filter").attr("id","glow");d.append("feGaussianBlur").attr("stdDeviation","3.5").attr("result","coloredBlur");var p=d.append("feMerge");p.append("feMergeNode").attr("in","coloredBlur"),p.append("feMergeNode").attr("in","SourceGraphic"),i.append("rect").style("fill","none").style("pointer-events","all").attr("width",""+n.xwidth).attr("height",300).on("mouseover",(function(){m.style("opacity",1),g.style("opacity",1),h.style("opacity",1)})).on("mousemove",(function(){var t=Math.ceil(a.invert(o.mouse(this)[0]))-1,n=e[t];m.attr("cx",a(t)).attr("cy",l(n)),g.html(t+"  : "+n+"s").attr("x",a(t)+15).attr("y",l(n)-25),h.attr("d",(function(){var e="M"+a(t)+",300";return e+=" "+a(t)+",0"}))})).on("mouseout",(function(){m.style("opacity",0),g.style("opacity",0),h.style("opacity",0)})),i.selectAll(".line").data([e]).join("path").attr("class","line").attr("d",f).attr("fill","none").attr("stroke","rgb(6, 75, 115)").style("filter","url(#glow)");var m=i.append("g").append("circle").style("fill","none").attr("stroke","black").attr("r",8.5).style("opacity",0),h=i.append("g").append("path").attr("class","mouse-line").style("stroke","black").style("stroke-width","1px").attr("height",300).style("opacity",0),g=i.append("g").append("text").style("opacity",0).attr("text-anchor","left").attr("alignment-baseline","middle")}),[e]),i.default.createElement(i.default.Fragment,null,i.default.createElement("svg",{ref:s},i.default.createElement("g",{className:"x-axis"}),i.default.createElement("g",{className:"y-axis"})),i.default.createElement("br",null))}},function(t,e,n){"use strict";var r=n(47);function o(){}function i(){}i.resetWarningCache=o,t.exports=function(){function t(t,e,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function e(){return t}t.isRequired=t;var n={array:t,bool:t,func:t,number:t,object:t,string:t,symbol:t,any:t,arrayOf:e,element:t,elementType:t,instanceOf:e,node:t,objectOf:e,oneOf:e,oneOfType:e,shape:e,exact:e,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(t,e,n){"use strict";t.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(t,e){t.exports=Array.isArray||function(t){return"[object Array]"==Object.prototype.toString.call(t)}},function(t,e,n){"use strict";
/** @license React v16.12.0
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(e,"__esModule",{value:!0});var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,c=r?Symbol.for("react.profiler"):60114,u=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,m=r?Symbol.for("react.suspense"):60113,h=r?Symbol.for("react.suspense_list"):60120,g=r?Symbol.for("react.memo"):60115,b=r?Symbol.for("react.lazy"):60116,v=r?Symbol.for("react.fundamental"):60117,y=r?Symbol.for("react.responder"):60118,x=r?Symbol.for("react.scope"):60119;function w(t){if("object"==typeof t&&null!==t){var e=t.$$typeof;switch(e){case o:switch(t=t.type){case f:case d:case a:case c:case l:case m:return t;default:switch(t=t&&t.$$typeof){case s:case p:case b:case g:case u:return t;default:return e}}case i:return e}}}function k(t){return w(t)===d}e.typeOf=w,e.AsyncMode=f,e.ConcurrentMode=d,e.ContextConsumer=s,e.ContextProvider=u,e.Element=o,e.ForwardRef=p,e.Fragment=a,e.Lazy=b,e.Memo=g,e.Portal=i,e.Profiler=c,e.StrictMode=l,e.Suspense=m,e.isValidElementType=function(t){return"string"==typeof t||"function"==typeof t||t===a||t===d||t===c||t===l||t===m||t===h||"object"==typeof t&&null!==t&&(t.$$typeof===b||t.$$typeof===g||t.$$typeof===u||t.$$typeof===s||t.$$typeof===p||t.$$typeof===v||t.$$typeof===y||t.$$typeof===x)},e.isAsyncMode=function(t){return k(t)||w(t)===f},e.isConcurrentMode=k,e.isContextConsumer=function(t){return w(t)===s},e.isContextProvider=function(t){return w(t)===u},e.isElement=function(t){return"object"==typeof t&&null!==t&&t.$$typeof===o},e.isForwardRef=function(t){return w(t)===p},e.isFragment=function(t){return w(t)===a},e.isLazy=function(t){return w(t)===b},e.isMemo=function(t){return w(t)===g},e.isPortal=function(t){return w(t)===i},e.isProfiler=function(t){return w(t)===c},e.isStrictMode=function(t){return w(t)===l},e.isSuspense=function(t){return w(t)===m}},function(t,e,n){"use strict";e.__esModule=!0;var r=n(0),o=(a(r),a(n(1))),i=a(n(16));a(n(17));function a(t){return t&&t.__esModule?t:{default:t}}function l(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function c(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function u(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function s(t){var e=[];return{on:function(t){e.push(t)},off:function(t){e=e.filter((function(e){return e!==t}))},get:function(){return t},set:function(n,r){t=n,e.forEach((function(e){return e(t,r)}))}}}e.default=function(t,e){var n,a,f="__create-react-context-"+(0,i.default)()+"__",d=function(t){function n(){var e,r;l(this,n);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return e=r=c(this,t.call.apply(t,[this].concat(i))),r.emitter=s(r.props.value),c(r,e)}return u(n,t),n.prototype.getChildContext=function(){var t;return(t={})[f]=this.emitter,t},n.prototype.componentWillReceiveProps=function(t){if(this.props.value!==t.value){var n=this.props.value,r=t.value,o=void 0;((i=n)===(a=r)?0!==i||1/i==1/a:i!=i&&a!=a)?o=0:(o="function"==typeof e?e(n,r):1073741823,0!==(o|=0)&&this.emitter.set(t.value,o))}var i,a},n.prototype.render=function(){return this.props.children},n}(r.Component);d.childContextTypes=((n={})[f]=o.default.object.isRequired,n);var p=function(e){function n(){var t,r;l(this,n);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return t=r=c(this,e.call.apply(e,[this].concat(i))),r.state={value:r.getValue()},r.onUpdate=function(t,e){0!=((0|r.observedBits)&e)&&r.setState({value:r.getValue()})},c(r,t)}return u(n,e),n.prototype.componentWillReceiveProps=function(t){var e=t.observedBits;this.observedBits=null==e?1073741823:e},n.prototype.componentDidMount=function(){this.context[f]&&this.context[f].on(this.onUpdate);var t=this.props.observedBits;this.observedBits=null==t?1073741823:t},n.prototype.componentWillUnmount=function(){this.context[f]&&this.context[f].off(this.onUpdate)},n.prototype.getValue=function(){return this.context[f]?this.context[f].get():t},n.prototype.render=function(){return(t=this.props.children,Array.isArray(t)?t[0]:t)(this.state.value);var t},n}(r.Component);return p.contextTypes=((a={})[f]=o.default.object,a),{Provider:d,Consumer:p}},t.exports=e.default},function(t,e,n){"use strict";var r;if(!Object.keys){var o=Object.prototype.hasOwnProperty,i=Object.prototype.toString,a=n(27),l=Object.prototype.propertyIsEnumerable,c=!l.call({toString:null},"toString"),u=l.call((function(){}),"prototype"),s=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],f=function(t){var e=t.constructor;return e&&e.prototype===t},d={$applicationCache:!0,$console:!0,$external:!0,$frame:!0,$frameElement:!0,$frames:!0,$innerHeight:!0,$innerWidth:!0,$onmozfullscreenchange:!0,$onmozfullscreenerror:!0,$outerHeight:!0,$outerWidth:!0,$pageXOffset:!0,$pageYOffset:!0,$parent:!0,$scrollLeft:!0,$scrollTop:!0,$scrollX:!0,$scrollY:!0,$self:!0,$webkitIndexedDB:!0,$webkitStorageInfo:!0,$window:!0},p=function(){if("undefined"==typeof window)return!1;for(var t in window)try{if(!d["$"+t]&&o.call(window,t)&&null!==window[t]&&"object"==typeof window[t])try{f(window[t])}catch(t){return!0}}catch(t){return!0}return!1}();r=function(t){var e=null!==t&&"object"==typeof t,n="[object Function]"===i.call(t),r=a(t),l=e&&"[object String]"===i.call(t),d=[];if(!e&&!n&&!r)throw new TypeError("Object.keys called on a non-object");var m=u&&n;if(l&&t.length>0&&!o.call(t,0))for(var h=0;h<t.length;++h)d.push(String(h));if(r&&t.length>0)for(var g=0;g<t.length;++g)d.push(String(g));else for(var b in t)m&&"prototype"===b||!o.call(t,b)||d.push(String(b));if(c)for(var v=function(t){if("undefined"==typeof window||!p)return f(t);try{return f(t)}catch(t){return!1}}(t),y=0;y<s.length;++y)v&&"constructor"===s[y]||!o.call(t,s[y])||d.push(s[y]);return d}}t.exports=r},function(t,e,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag,o=Object.prototype.toString,i=function(t){return!(r&&t&&"object"==typeof t&&Symbol.toStringTag in t)&&"[object Arguments]"===o.call(t)},a=function(t){return!!i(t)||null!==t&&"object"==typeof t&&"number"==typeof t.length&&t.length>=0&&"[object Array]"!==o.call(t)&&"[object Function]"===o.call(t.callee)},l=function(){return i(arguments)}();i.isLegacyArguments=a,t.exports=l?i:a},function(t,e,n){"use strict";var r=function(t){return t!=t};t.exports=function(t,e){return 0===t&&0===e?1/t==1/e:t===e||!(!r(t)||!r(e))}},function(t,e,n){"use strict";var r=n(55),o=RegExp.prototype.exec,i=Object.getOwnPropertyDescriptor,a=Object.prototype.toString,l="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;t.exports=function(t){if(!t||"object"!=typeof t)return!1;if(!l)return"[object RegExp]"===a.call(t);var e=i(t,"lastIndex");return!(!e||!r(e,"value"))&&function(t){try{var e=t.lastIndex;return t.lastIndex=0,o.call(t),!0}catch(t){return!1}finally{t.lastIndex=e}}(t)}},function(t,e,n){"use strict";var r=n(14);t.exports=r.call(Function.call,Object.prototype.hasOwnProperty)},function(t,e,n){"use strict";var r="Function.prototype.bind called on incompatible ",o=Array.prototype.slice,i=Object.prototype.toString;t.exports=function(t){var e=this;if("function"!=typeof e||"[object Function]"!==i.call(e))throw new TypeError(r+e);for(var n,a=o.call(arguments,1),l=function(){if(this instanceof n){var r=e.apply(this,a.concat(o.call(arguments)));return Object(r)===r?r:this}return e.apply(t,a.concat(o.call(arguments)))},c=Math.max(0,e.length-a.length),u=[],s=0;s<c;s++)u.push("$"+s);if(n=Function("binder","return function ("+u.join(",")+"){ return binder.apply(this,arguments); }")(l),e.prototype){var f=function(){};f.prototype=e.prototype,n.prototype=new f,f.prototype=null}return n}},function(t,e,n){"use strict";var r=n(15),o=n(58),i=n(28),a=n(29),l=n(62),c=o(i);r(c,{getPolyfill:a,implementation:i,shim:l}),t.exports=c},function(t,e,n){"use strict";var r=n(14),o=n(59)("%Function%"),i=o.apply,a=o.call;t.exports=function(){return r.apply(a,arguments)},t.exports.apply=function(){return r.apply(i,arguments)}},function(t,e,n){"use strict";var r=TypeError,o=Object.getOwnPropertyDescriptor;if(o)try{o({},"")}catch(t){o=null}var i=function(){throw new r},a=o?function(){try{return arguments.callee,i}catch(t){try{return o(arguments,"callee").get}catch(t){return i}}}():i,l=n(60)(),c=Object.getPrototypeOf||function(t){return t.__proto__},u=void 0,s="undefined"==typeof Uint8Array?void 0:c(Uint8Array),f={"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer,"%ArrayBufferPrototype%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer.prototype,"%ArrayIteratorPrototype%":l?c([][Symbol.iterator]()):void 0,"%ArrayPrototype%":Array.prototype,"%ArrayProto_entries%":Array.prototype.entries,"%ArrayProto_forEach%":Array.prototype.forEach,"%ArrayProto_keys%":Array.prototype.keys,"%ArrayProto_values%":Array.prototype.values,"%AsyncFromSyncIteratorPrototype%":void 0,"%AsyncFunction%":void 0,"%AsyncFunctionPrototype%":void 0,"%AsyncGenerator%":void 0,"%AsyncGeneratorFunction%":void 0,"%AsyncGeneratorPrototype%":void 0,"%AsyncIteratorPrototype%":u&&l&&Symbol.asyncIterator?u[Symbol.asyncIterator]():void 0,"%Atomics%":"undefined"==typeof Atomics?void 0:Atomics,"%Boolean%":Boolean,"%BooleanPrototype%":Boolean.prototype,"%DataView%":"undefined"==typeof DataView?void 0:DataView,"%DataViewPrototype%":"undefined"==typeof DataView?void 0:DataView.prototype,"%Date%":Date,"%DatePrototype%":Date.prototype,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%ErrorPrototype%":Error.prototype,"%eval%":eval,"%EvalError%":EvalError,"%EvalErrorPrototype%":EvalError.prototype,"%Float32Array%":"undefined"==typeof Float32Array?void 0:Float32Array,"%Float32ArrayPrototype%":"undefined"==typeof Float32Array?void 0:Float32Array.prototype,"%Float64Array%":"undefined"==typeof Float64Array?void 0:Float64Array,"%Float64ArrayPrototype%":"undefined"==typeof Float64Array?void 0:Float64Array.prototype,"%Function%":Function,"%FunctionPrototype%":Function.prototype,"%Generator%":void 0,"%GeneratorFunction%":void 0,"%GeneratorPrototype%":void 0,"%Int8Array%":"undefined"==typeof Int8Array?void 0:Int8Array,"%Int8ArrayPrototype%":"undefined"==typeof Int8Array?void 0:Int8Array.prototype,"%Int16Array%":"undefined"==typeof Int16Array?void 0:Int16Array,"%Int16ArrayPrototype%":"undefined"==typeof Int16Array?void 0:Int8Array.prototype,"%Int32Array%":"undefined"==typeof Int32Array?void 0:Int32Array,"%Int32ArrayPrototype%":"undefined"==typeof Int32Array?void 0:Int32Array.prototype,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":l?c(c([][Symbol.iterator]())):void 0,"%JSON%":"object"==typeof JSON?JSON:void 0,"%JSONParse%":"object"==typeof JSON?JSON.parse:void 0,"%Map%":"undefined"==typeof Map?void 0:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&l?c((new Map)[Symbol.iterator]()):void 0,"%MapPrototype%":"undefined"==typeof Map?void 0:Map.prototype,"%Math%":Math,"%Number%":Number,"%NumberPrototype%":Number.prototype,"%Object%":Object,"%ObjectPrototype%":Object.prototype,"%ObjProto_toString%":Object.prototype.toString,"%ObjProto_valueOf%":Object.prototype.valueOf,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?void 0:Promise,"%PromisePrototype%":"undefined"==typeof Promise?void 0:Promise.prototype,"%PromiseProto_then%":"undefined"==typeof Promise?void 0:Promise.prototype.then,"%Promise_all%":"undefined"==typeof Promise?void 0:Promise.all,"%Promise_reject%":"undefined"==typeof Promise?void 0:Promise.reject,"%Promise_resolve%":"undefined"==typeof Promise?void 0:Promise.resolve,"%Proxy%":"undefined"==typeof Proxy?void 0:Proxy,"%RangeError%":RangeError,"%RangeErrorPrototype%":RangeError.prototype,"%ReferenceError%":ReferenceError,"%ReferenceErrorPrototype%":ReferenceError.prototype,"%Reflect%":"undefined"==typeof Reflect?void 0:Reflect,"%RegExp%":RegExp,"%RegExpPrototype%":RegExp.prototype,"%Set%":"undefined"==typeof Set?void 0:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&l?c((new Set)[Symbol.iterator]()):void 0,"%SetPrototype%":"undefined"==typeof Set?void 0:Set.prototype,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer,"%SharedArrayBufferPrototype%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer.prototype,"%String%":String,"%StringIteratorPrototype%":l?c(""[Symbol.iterator]()):void 0,"%StringPrototype%":String.prototype,"%Symbol%":l?Symbol:void 0,"%SymbolPrototype%":l?Symbol.prototype:void 0,"%SyntaxError%":SyntaxError,"%SyntaxErrorPrototype%":SyntaxError.prototype,"%ThrowTypeError%":a,"%TypedArray%":s,"%TypedArrayPrototype%":s?s.prototype:void 0,"%TypeError%":r,"%TypeErrorPrototype%":r.prototype,"%Uint8Array%":"undefined"==typeof Uint8Array?void 0:Uint8Array,"%Uint8ArrayPrototype%":"undefined"==typeof Uint8Array?void 0:Uint8Array.prototype,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray,"%Uint8ClampedArrayPrototype%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray.prototype,"%Uint16Array%":"undefined"==typeof Uint16Array?void 0:Uint16Array,"%Uint16ArrayPrototype%":"undefined"==typeof Uint16Array?void 0:Uint16Array.prototype,"%Uint32Array%":"undefined"==typeof Uint32Array?void 0:Uint32Array,"%Uint32ArrayPrototype%":"undefined"==typeof Uint32Array?void 0:Uint32Array.prototype,"%URIError%":URIError,"%URIErrorPrototype%":URIError.prototype,"%WeakMap%":"undefined"==typeof WeakMap?void 0:WeakMap,"%WeakMapPrototype%":"undefined"==typeof WeakMap?void 0:WeakMap.prototype,"%WeakSet%":"undefined"==typeof WeakSet?void 0:WeakSet,"%WeakSetPrototype%":"undefined"==typeof WeakSet?void 0:WeakSet.prototype},d=n(14).call(Function.call,String.prototype.replace),p=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,m=/\\(\\)?/g,h=function(t){var e=[];return d(t,p,(function(t,n,r,o){e[e.length]=r?d(o,m,"$1"):n||t})),e},g=function(t,e){if(!(t in f))throw new SyntaxError("intrinsic "+t+" does not exist!");if(void 0===f[t]&&!e)throw new r("intrinsic "+t+" exists, but is not available. Please file an issue!");return f[t]};t.exports=function(t,e){if("string"!=typeof t||0===t.length)throw new TypeError("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof e)throw new TypeError('"allowMissing" argument must be a boolean');for(var n=h(t),i=g("%"+(n.length>0?n[0]:"")+"%",e),a=1;a<n.length;a+=1)if(null!=i)if(o&&a+1>=n.length){var l=o(i,n[a]);if(!(e||n[a]in i))throw new r("base intrinsic for "+t+" exists, but the property is not available.");i=l?l.get||l.value:i[n[a]]}else i=i[n[a]];return i}},function(t,e,n){"use strict";(function(e){var r=e.Symbol,o=n(61);t.exports=function(){return"function"==typeof r&&("function"==typeof Symbol&&("symbol"==typeof r("foo")&&("symbol"==typeof Symbol("bar")&&o())))}}).call(this,n(13))},function(t,e,n){"use strict";t.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var t={},e=Symbol("test"),n=Object(e);if("string"==typeof e)return!1;if("[object Symbol]"!==Object.prototype.toString.call(e))return!1;if("[object Symbol]"!==Object.prototype.toString.call(n))return!1;for(e in t[e]=42,t)return!1;if("function"==typeof Object.keys&&0!==Object.keys(t).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(t).length)return!1;var r=Object.getOwnPropertySymbols(t);if(1!==r.length||r[0]!==e)return!1;if(!Object.prototype.propertyIsEnumerable.call(t,e))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var o=Object.getOwnPropertyDescriptor(t,e);if(42!==o.value||!0!==o.enumerable)return!1}return!0}},function(t,e,n){"use strict";var r=n(15).supportsDescriptors,o=n(29),i=Object.getOwnPropertyDescriptor,a=Object.defineProperty,l=TypeError,c=Object.getPrototypeOf,u=/a/;t.exports=function(){if(!r||!c)throw new l("RegExp.prototype.flags requires a true ES5 environment that supports property descriptors");var t=o(),e=c(u),n=i(e,"flags");return n&&n.get===t||a(e,"flags",{configurable:!0,enumerable:!1,get:t}),t}},function(t,e,n){"use strict";var r=Date.prototype.getDay,o=Object.prototype.toString,i="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;t.exports=function(t){return"object"==typeof t&&null!==t&&(i?function(t){try{return r.call(t),!0}catch(t){return!1}}(t):"[object Date]"===o.call(t))}},function(t,e,n){var r=function(t){"use strict";var e=Object.prototype,n=e.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},o=r.iterator||"@@iterator",i=r.asyncIterator||"@@asyncIterator",a=r.toStringTag||"@@toStringTag";function l(t,e,n,r){var o=e&&e.prototype instanceof s?e:s,i=Object.create(o.prototype),a=new k(r||[]);return i._invoke=function(t,e,n){var r="suspendedStart";return function(o,i){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===o)throw i;return E()}for(n.method=o,n.arg=i;;){var a=n.delegate;if(a){var l=y(a,n);if(l){if(l===u)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var s=c(t,e,n);if("normal"===s.type){if(r=n.done?"completed":"suspendedYield",s.arg===u)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(r="completed",n.method="throw",n.arg=s.arg)}}}(t,n,a),i}function c(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}t.wrap=l;var u={};function s(){}function f(){}function d(){}var p={};p[o]=function(){return this};var m=Object.getPrototypeOf,h=m&&m(m(_([])));h&&h!==e&&n.call(h,o)&&(p=h);var g=d.prototype=s.prototype=Object.create(p);function b(t){["next","throw","return"].forEach((function(e){t[e]=function(t){return this._invoke(e,t)}}))}function v(t){var e;this._invoke=function(r,o){function i(){return new Promise((function(e,i){!function e(r,o,i,a){var l=c(t[r],t,o);if("throw"!==l.type){var u=l.arg,s=u.value;return s&&"object"==typeof s&&n.call(s,"__await")?Promise.resolve(s.__await).then((function(t){e("next",t,i,a)}),(function(t){e("throw",t,i,a)})):Promise.resolve(s).then((function(t){u.value=t,i(u)}),(function(t){return e("throw",t,i,a)}))}a(l.arg)}(r,o,e,i)}))}return e=e?e.then(i,i):i()}}function y(t,e){var n=t.iterator[e.method];if(void 0===n){if(e.delegate=null,"throw"===e.method){if(t.iterator.return&&(e.method="return",e.arg=void 0,y(t,e),"throw"===e.method))return u;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var r=c(n,t.iterator,e.arg);if("throw"===r.type)return e.method="throw",e.arg=r.arg,e.delegate=null,u;var o=r.arg;return o?o.done?(e[t.resultName]=o.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,u):o:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,u)}function x(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function w(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function k(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(x,this),this.reset(!0)}function _(t){if(t){var e=t[o];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var r=-1,i=function e(){for(;++r<t.length;)if(n.call(t,r))return e.value=t[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:E}}function E(){return{value:void 0,done:!0}}return f.prototype=g.constructor=d,d.constructor=f,d[a]=f.displayName="GeneratorFunction",t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===f||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,d):(t.__proto__=d,a in t||(t[a]="GeneratorFunction")),t.prototype=Object.create(g),t},t.awrap=function(t){return{__await:t}},b(v.prototype),v.prototype[i]=function(){return this},t.AsyncIterator=v,t.async=function(e,n,r,o){var i=new v(l(e,n,r,o));return t.isGeneratorFunction(n)?i:i.next().then((function(t){return t.done?t.value:i.next()}))},b(g),g[a]="Generator",g[o]=function(){return this},g.toString=function(){return"[object Generator]"},t.keys=function(t){var e=[];for(var n in t)e.push(n);return e.reverse(),function n(){for(;e.length;){var r=e.pop();if(r in t)return n.value=r,n.done=!1,n}return n.done=!0,n}},t.values=_,k.prototype={constructor:k,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(w),!t)for(var e in this)"t"===e.charAt(0)&&n.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function r(n,r){return a.type="throw",a.arg=t,e.next=n,r&&(e.method="next",e.arg=void 0),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var l=n.call(i,"catchLoc"),c=n.call(i,"finallyLoc");if(l&&c){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,u):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),u},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),w(n),u}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var o=r.arg;w(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,n){return this.delegate={iterator:_(t),resultName:e,nextLoc:n},"next"===this.method&&(this.arg=void 0),u}},t}(t.exports);try{regeneratorRuntime=r}catch(t){Function("r","regeneratorRuntime = r")(r)}},function(t,e,n){"use strict";e.__esModule=!0,e.default=void 0;!function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)if(Object.prototype.hasOwnProperty.call(t,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(t,n):{};r.get||r.set?Object.defineProperty(e,n,r):e[n]=t[n]}e.default=t}(n(1));var r=l(n(66)),o=l(n(69)),i=l(n(0)),a=l(n(30));n(32);function l(t){return t&&t.__esModule?t:{default:t}}function c(){return(c=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t}).apply(this,arguments)}var u=function(t,e){return t&&e&&e.split(" ").forEach((function(e){return(0,r.default)(t,e)}))},s=function(t,e){return t&&e&&e.split(" ").forEach((function(e){return(0,o.default)(t,e)}))},f=function(t){var e,n;function r(){for(var e,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(e=t.call.apply(t,[this].concat(r))||this).onEnter=function(t,n){var r=e.getClassNames(n?"appear":"enter").className;e.removeClasses(t,"exit"),u(t,r),e.props.onEnter&&e.props.onEnter(t,n)},e.onEntering=function(t,n){var r=e.getClassNames(n?"appear":"enter").activeClassName;e.reflowAndAddClass(t,r),e.props.onEntering&&e.props.onEntering(t,n)},e.onEntered=function(t,n){var r=e.getClassNames("appear").doneClassName,o=e.getClassNames("enter").doneClassName,i=n?r+" "+o:o;e.removeClasses(t,n?"appear":"enter"),u(t,i),e.props.onEntered&&e.props.onEntered(t,n)},e.onExit=function(t){var n=e.getClassNames("exit").className;e.removeClasses(t,"appear"),e.removeClasses(t,"enter"),u(t,n),e.props.onExit&&e.props.onExit(t)},e.onExiting=function(t){var n=e.getClassNames("exit").activeClassName;e.reflowAndAddClass(t,n),e.props.onExiting&&e.props.onExiting(t)},e.onExited=function(t){var n=e.getClassNames("exit").doneClassName;e.removeClasses(t,"exit"),u(t,n),e.props.onExited&&e.props.onExited(t)},e.getClassNames=function(t){var n=e.props.classNames,r="string"==typeof n,o=r?(r&&n?n+"-":"")+t:n[t];return{className:o,activeClassName:r?o+"-active":n[t+"Active"],doneClassName:r?o+"-done":n[t+"Done"]}},e}n=t,(e=r).prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n;var o=r.prototype;return o.removeClasses=function(t,e){var n=this.getClassNames(e),r=n.className,o=n.activeClassName,i=n.doneClassName;r&&s(t,r),o&&s(t,o),i&&s(t,i)},o.reflowAndAddClass=function(t,e){e&&(t&&t.scrollTop,u(t,e))},o.render=function(){var t=c({},this.props);return delete t.classNames,i.default.createElement(a.default,c({},t,{onEnter:this.onEnter,onEntered:this.onEntered,onEntering:this.onEntering,onExit:this.onExit,onExiting:this.onExiting,onExited:this.onExited}))},r}(i.default.Component);f.defaultProps={classNames:""},f.propTypes={};var d=f;e.default=d,t.exports=e.default},function(t,e,n){"use strict";var r=n(67);e.__esModule=!0,e.default=function(t,e){t.classList?t.classList.add(e):(0,o.default)(t,e)||("string"==typeof t.className?t.className=t.className+" "+e:t.setAttribute("class",(t.className&&t.className.baseVal||"")+" "+e))};var o=r(n(68));t.exports=e.default},function(t,e){t.exports=function(t){return t&&t.__esModule?t:{default:t}}},function(t,e,n){"use strict";e.__esModule=!0,e.default=function(t,e){return t.classList?!!e&&t.classList.contains(e):-1!==(" "+(t.className.baseVal||t.className)+" ").indexOf(" "+e+" ")},t.exports=e.default},function(t,e,n){"use strict";function r(t,e){return t.replace(new RegExp("(^|\\s)"+e+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,"")}t.exports=function(t,e){t.classList?t.classList.remove(e):"string"==typeof t.className?t.className=r(t.className,e):t.setAttribute("class",r(t.className&&t.className.baseVal||"",e))}},function(t,e,n){"use strict";e.__esModule=!0,e.default=void 0;a(n(1));var r=a(n(0)),o=n(8),i=a(n(33));function a(t){return t&&t.__esModule?t:{default:t}}var l=function(t){var e,n;function a(){for(var e,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(e=t.call.apply(t,[this].concat(r))||this).handleEnter=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return e.handleLifecycle("onEnter",0,n)},e.handleEntering=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return e.handleLifecycle("onEntering",0,n)},e.handleEntered=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return e.handleLifecycle("onEntered",0,n)},e.handleExit=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return e.handleLifecycle("onExit",1,n)},e.handleExiting=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return e.handleLifecycle("onExiting",1,n)},e.handleExited=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return e.handleLifecycle("onExited",1,n)},e}n=t,(e=a).prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n;var l=a.prototype;return l.handleLifecycle=function(t,e,n){var i,a=this.props.children,l=r.default.Children.toArray(a)[e];l.props[t]&&(i=l.props)[t].apply(i,n),this.props[t]&&this.props[t]((0,o.findDOMNode)(this))},l.render=function(){var t=this.props,e=t.children,n=t.in,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,["children","in"]),a=r.default.Children.toArray(e),l=a[0],c=a[1];return delete o.onEnter,delete o.onEntering,delete o.onEntered,delete o.onExit,delete o.onExiting,delete o.onExited,r.default.createElement(i.default,o,n?r.default.cloneElement(l,{key:"first",onEnter:this.handleEnter,onEntering:this.handleEntering,onEntered:this.handleEntered}):r.default.cloneElement(c,{key:"second",onEnter:this.handleExit,onEntering:this.handleExiting,onEntered:this.handleExited}))},a}(r.default.Component);l.propTypes={};var c=l;e.default=c,t.exports=e.default},function(t,e,n){"use strict";e.__esModule=!0,e.getChildMapping=o,e.mergeChildMappings=i,e.getInitialChildMapping=function(t,e){return o(t.children,(function(n){return(0,r.cloneElement)(n,{onExited:e.bind(null,n),in:!0,appear:a(n,"appear",t),enter:a(n,"enter",t),exit:a(n,"exit",t)})}))},e.getNextChildMapping=function(t,e,n){var l=o(t.children),c=i(e,l);return Object.keys(c).forEach((function(o){var i=c[o];if((0,r.isValidElement)(i)){var u=o in e,s=o in l,f=e[o],d=(0,r.isValidElement)(f)&&!f.props.in;!s||u&&!d?s||!u||d?s&&u&&(0,r.isValidElement)(f)&&(c[o]=(0,r.cloneElement)(i,{onExited:n.bind(null,i),in:f.props.in,exit:a(i,"exit",t),enter:a(i,"enter",t)})):c[o]=(0,r.cloneElement)(i,{in:!1}):c[o]=(0,r.cloneElement)(i,{onExited:n.bind(null,i),in:!0,exit:a(i,"exit",t),enter:a(i,"enter",t)})}})),c};var r=n(0);function o(t,e){var n=Object.create(null);return t&&r.Children.map(t,(function(t){return t})).forEach((function(t){n[t.key]=function(t){return e&&(0,r.isValidElement)(t)?e(t):t}(t)})),n}function i(t,e){function n(n){return n in e?e[n]:t[n]}t=t||{},e=e||{};var r,o=Object.create(null),i=[];for(var a in t)a in e?i.length&&(o[a]=i,i=[]):i.push(a);var l={};for(var c in e){if(o[c])for(r=0;r<o[c].length;r++){var u=o[c][r];l[o[c][r]]=n(u)}l[c]=n(c)}for(r=0;r<i.length;r++)l[i[r]]=n(i[r]);return l}function a(t,e,n){return null!=n[e]?n[e]:t.props[e]}},function(t,e,n){"use strict";n.r(e);var r=n(0),o=n.n(r),i=n(8),a=n.n(i);function l(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e}var c=n(1),u=n.n(c);function s(){return(s=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t}).apply(this,arguments)}function f(t){return"/"===t.charAt(0)}function d(t,e){for(var n=e,r=n+1,o=t.length;r<o;n+=1,r+=1)t[n]=t[r];t.pop()}var p=function(t,e){void 0===e&&(e="");var n,r=t&&t.split("/")||[],o=e&&e.split("/")||[],i=t&&f(t),a=e&&f(e),l=i||a;if(t&&f(t)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var c=o[o.length-1];n="."===c||".."===c||""===c}else n=!1;for(var u=0,s=o.length;s>=0;s--){var p=o[s];"."===p?d(o,s):".."===p?(d(o,s),u++):u&&(d(o,s),u--)}if(!l)for(;u--;u)o.unshift("..");!l||""===o[0]||o[0]&&f(o[0])||o.unshift("");var m=o.join("/");return n&&"/"!==m.substr(-1)&&(m+="/"),m};var m=function(t,e){if(!t)throw new Error("Invariant failed")};function h(t){return"/"===t.charAt(0)?t:"/"+t}function g(t){return"/"===t.charAt(0)?t.substr(1):t}function b(t,e){return function(t,e){return 0===t.toLowerCase().indexOf(e.toLowerCase())&&-1!=="/?#".indexOf(t.charAt(e.length))}(t,e)?t.substr(e.length):t}function v(t){return"/"===t.charAt(t.length-1)?t.slice(0,-1):t}function y(t){var e=t.pathname,n=t.search,r=t.hash,o=e||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function x(t,e,n,r){var o;"string"==typeof t?(o=function(t){var e=t||"/",n="",r="",o=e.indexOf("#");-1!==o&&(r=e.substr(o),e=e.substr(0,o));var i=e.indexOf("?");return-1!==i&&(n=e.substr(i),e=e.substr(0,i)),{pathname:e,search:"?"===n?"":n,hash:"#"===r?"":r}}(t)).state=e:(void 0===(o=s({},t)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==e&&void 0===o.state&&(o.state=e));try{o.pathname=decodeURI(o.pathname)}catch(t){throw t instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):t}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=p(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function w(){var t=null;var e=[];return{setPrompt:function(e){return t=e,function(){t===e&&(t=null)}},confirmTransitionTo:function(e,n,r,o){if(null!=t){var i="function"==typeof t?t(e,n):t;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(t){var n=!0;function r(){n&&t.apply(void 0,arguments)}return e.push(r),function(){n=!1,e=e.filter((function(t){return t!==r}))}},notifyListeners:function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];e.forEach((function(t){return t.apply(void 0,n)}))}}}var k=!("undefined"==typeof window||!window.document||!window.document.createElement);function _(t,e){e(window.confirm(t))}function E(){try{return window.history.state||{}}catch(t){return{}}}function S(t){void 0===t&&(t={}),k||m(!1);var e,n=window.history,r=(-1===(e=window.navigator.userAgent).indexOf("Android 2.")&&-1===e.indexOf("Android 4.0")||-1===e.indexOf("Mobile Safari")||-1!==e.indexOf("Chrome")||-1!==e.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=t,a=i.forceRefresh,l=void 0!==a&&a,c=i.getUserConfirmation,u=void 0===c?_:c,f=i.keyLength,d=void 0===f?6:f,p=t.basename?v(h(t.basename)):"";function g(t){var e=t||{},n=e.key,r=e.state,o=window.location,i=o.pathname+o.search+o.hash;return p&&(i=b(i,p)),x(i,r,n)}function S(){return Math.random().toString(36).substr(2,d)}var M=w();function T(t){s(U,t),U.length=n.length,M.notifyListeners(U.location,U.action)}function C(t){(function(t){return void 0===t.state&&-1===navigator.userAgent.indexOf("CriOS")})(t)||A(g(t.state))}function N(){A(g(E()))}var P=!1;function A(t){if(P)P=!1,T();else{M.confirmTransitionTo(t,"POP",u,(function(e){e?T({action:"POP",location:t}):function(t){var e=U.location,n=z.indexOf(e.key);-1===n&&(n=0);var r=z.indexOf(t.key);-1===r&&(r=0);var o=n-r;o&&(P=!0,R(o))}(t)}))}}var O=g(E()),z=[O.key];function j(t){return p+y(t)}function R(t){n.go(t)}var D=0;function L(t){1===(D+=t)&&1===t?(window.addEventListener("popstate",C),o&&window.addEventListener("hashchange",N)):0===D&&(window.removeEventListener("popstate",C),o&&window.removeEventListener("hashchange",N))}var I=!1;var U={length:n.length,action:"POP",location:O,createHref:j,push:function(t,e){var o=x(t,e,S(),U.location);M.confirmTransitionTo(o,"PUSH",u,(function(t){if(t){var e=j(o),i=o.key,a=o.state;if(r)if(n.pushState({key:i,state:a},null,e),l)window.location.href=e;else{var c=z.indexOf(U.location.key),u=z.slice(0,c+1);u.push(o.key),z=u,T({action:"PUSH",location:o})}else window.location.href=e}}))},replace:function(t,e){var o=x(t,e,S(),U.location);M.confirmTransitionTo(o,"REPLACE",u,(function(t){if(t){var e=j(o),i=o.key,a=o.state;if(r)if(n.replaceState({key:i,state:a},null,e),l)window.location.replace(e);else{var c=z.indexOf(U.location.key);-1!==c&&(z[c]=o.key),T({action:"REPLACE",location:o})}else window.location.replace(e)}}))},go:R,goBack:function(){R(-1)},goForward:function(){R(1)},block:function(t){void 0===t&&(t=!1);var e=M.setPrompt(t);return I||(L(1),I=!0),function(){return I&&(I=!1,L(-1)),e()}},listen:function(t){var e=M.appendListener(t);return L(1),function(){L(-1),e()}}};return U}var M={hashbang:{encodePath:function(t){return"!"===t.charAt(0)?t:"!/"+g(t)},decodePath:function(t){return"!"===t.charAt(0)?t.substr(1):t}},noslash:{encodePath:g,decodePath:h},slash:{encodePath:h,decodePath:h}};function T(t){var e=t.indexOf("#");return-1===e?t:t.slice(0,e)}function C(){var t=window.location.href,e=t.indexOf("#");return-1===e?"":t.substring(e+1)}function N(t){window.location.replace(T(window.location.href)+"#"+t)}function P(t){void 0===t&&(t={}),k||m(!1);var e=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),t),r=n.getUserConfirmation,o=void 0===r?_:r,i=n.hashType,a=void 0===i?"slash":i,l=t.basename?v(h(t.basename)):"",c=M[a],u=c.encodePath,f=c.decodePath;function d(){var t=f(C());return l&&(t=b(t,l)),x(t)}var p=w();function g(t){s(U,t),U.length=e.length,p.notifyListeners(U.location,U.action)}var E=!1,S=null;function P(){var t,e,n=C(),r=u(n);if(n!==r)N(r);else{var i=d(),a=U.location;if(!E&&(e=i,(t=a).pathname===e.pathname&&t.search===e.search&&t.hash===e.hash))return;if(S===y(i))return;S=null,function(t){if(E)E=!1,g();else{p.confirmTransitionTo(t,"POP",o,(function(e){e?g({action:"POP",location:t}):function(t){var e=U.location,n=j.lastIndexOf(y(e));-1===n&&(n=0);var r=j.lastIndexOf(y(t));-1===r&&(r=0);var o=n-r;o&&(E=!0,R(o))}(t)}))}}(i)}}var A=C(),O=u(A);A!==O&&N(O);var z=d(),j=[y(z)];function R(t){e.go(t)}var D=0;function L(t){1===(D+=t)&&1===t?window.addEventListener("hashchange",P):0===D&&window.removeEventListener("hashchange",P)}var I=!1;var U={length:e.length,action:"POP",location:z,createHref:function(t){var e=document.querySelector("base"),n="";return e&&e.getAttribute("href")&&(n=T(window.location.href)),n+"#"+u(l+y(t))},push:function(t,e){var n=x(t,void 0,void 0,U.location);p.confirmTransitionTo(n,"PUSH",o,(function(t){if(t){var e=y(n),r=u(l+e);if(C()!==r){S=e,function(t){window.location.hash=t}(r);var o=j.lastIndexOf(y(U.location)),i=j.slice(0,o+1);i.push(e),j=i,g({action:"PUSH",location:n})}else g()}}))},replace:function(t,e){var n=x(t,void 0,void 0,U.location);p.confirmTransitionTo(n,"REPLACE",o,(function(t){if(t){var e=y(n),r=u(l+e);C()!==r&&(S=e,N(r));var o=j.indexOf(y(U.location));-1!==o&&(j[o]=e),g({action:"REPLACE",location:n})}}))},go:R,goBack:function(){R(-1)},goForward:function(){R(1)},block:function(t){void 0===t&&(t=!1);var e=p.setPrompt(t);return I||(L(1),I=!0),function(){return I&&(I=!1,L(-1)),e()}},listen:function(t){var e=p.appendListener(t);return L(1),function(){L(-1),e()}}};return U}function A(t,e,n){return Math.min(Math.max(t,e),n)}function O(t){void 0===t&&(t={});var e=t,n=e.getUserConfirmation,r=e.initialEntries,o=void 0===r?["/"]:r,i=e.initialIndex,a=void 0===i?0:i,l=e.keyLength,c=void 0===l?6:l,u=w();function f(t){s(b,t),b.length=b.entries.length,u.notifyListeners(b.location,b.action)}function d(){return Math.random().toString(36).substr(2,c)}var p=A(a,0,o.length-1),m=o.map((function(t){return x(t,void 0,"string"==typeof t?d():t.key||d())})),h=y;function g(t){var e=A(b.index+t,0,b.entries.length-1),r=b.entries[e];u.confirmTransitionTo(r,"POP",n,(function(t){t?f({action:"POP",location:r,index:e}):f()}))}var b={length:m.length,action:"POP",location:m[p],index:p,entries:m,createHref:h,push:function(t,e){var r=x(t,e,d(),b.location);u.confirmTransitionTo(r,"PUSH",n,(function(t){if(t){var e=b.index+1,n=b.entries.slice(0);n.length>e?n.splice(e,n.length-e,r):n.push(r),f({action:"PUSH",location:r,index:e,entries:n})}}))},replace:function(t,e){var r=x(t,e,d(),b.location);u.confirmTransitionTo(r,"REPLACE",n,(function(t){t&&(b.entries[b.index]=r,f({action:"REPLACE",location:r}))}))},go:g,goBack:function(){g(-1)},goForward:function(){g(1)},canGo:function(t){var e=b.index+t;return e>=0&&e<b.entries.length},block:function(t){return void 0===t&&(t=!1),u.setPrompt(t)},listen:function(t){return u.appendListener(t)}};return b}var z=n(6),j=n.n(z),R=n(16),D=n.n(R);function L(t){var e=[];return{on:function(t){e.push(t)},off:function(t){e=e.filter((function(e){return e!==t}))},get:function(){return t},set:function(n,r){t=n,e.forEach((function(e){return e(t,r)}))}}}var I=o.a.createContext||function(t,e){var n,o,i="__create-react-context-"+D()()+"__",a=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).emitter=L(e.props.value),e}j()(n,t);var r=n.prototype;return r.getChildContext=function(){var t;return(t={})[i]=this.emitter,t},r.componentWillReceiveProps=function(t){if(this.props.value!==t.value){var n,r=this.props.value,o=t.value;((i=r)===(a=o)?0!==i||1/i==1/a:i!=i&&a!=a)?n=0:(n="function"==typeof e?e(r,o):1073741823,0!==(n|=0)&&this.emitter.set(t.value,n))}var i,a},r.render=function(){return this.props.children},n}(r.Component);a.childContextTypes=((n={})[i]=u.a.object.isRequired,n);var l=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).state={value:t.getValue()},t.onUpdate=function(e,n){0!=((0|t.observedBits)&n)&&t.setState({value:t.getValue()})},t}j()(n,e);var r=n.prototype;return r.componentWillReceiveProps=function(t){var e=t.observedBits;this.observedBits=null==e?1073741823:e},r.componentDidMount=function(){this.context[i]&&this.context[i].on(this.onUpdate);var t=this.props.observedBits;this.observedBits=null==t?1073741823:t},r.componentWillUnmount=function(){this.context[i]&&this.context[i].off(this.onUpdate)},r.getValue=function(){return this.context[i]?this.context[i].get():t},r.render=function(){return(t=this.props.children,Array.isArray(t)?t[0]:t)(this.state.value);var t},n}(r.Component);return l.contextTypes=((o={})[i]=u.a.object,o),{Provider:a,Consumer:l}},U=n(18),F=n.n(U);n(25);function B(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}n(36);var q=function(t){var e=I();return e.displayName=t,e}("Router"),H=function(t){function e(e){var n;return(n=t.call(this,e)||this).state={location:e.history.location},n._isMounted=!1,n._pendingLocation=null,e.staticContext||(n.unlisten=e.history.listen((function(t){n._isMounted?n.setState({location:t}):n._pendingLocation=t}))),n}l(e,t),e.computeRootMatch=function(t){return{path:"/",url:"/",params:{},isExact:"/"===t}};var n=e.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return o.a.createElement(q.Provider,{children:this.props.children||null,value:{history:this.props.history,location:this.state.location,match:e.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}})},e}(o.a.Component);o.a.Component;o.a.Component;var W={},$=0;function V(t,e){void 0===e&&(e={}),("string"==typeof e||Array.isArray(e))&&(e={path:e});var n=e,r=n.path,o=n.exact,i=void 0!==o&&o,a=n.strict,l=void 0!==a&&a,c=n.sensitive,u=void 0!==c&&c;return[].concat(r).reduce((function(e,n){if(!n&&""!==n)return null;if(e)return e;var r=function(t,e){var n=""+e.end+e.strict+e.sensitive,r=W[n]||(W[n]={});if(r[t])return r[t];var o=[],i={regexp:F()(t,o,e),keys:o};return $<1e4&&(r[t]=i,$++),i}(n,{end:i,strict:l,sensitive:u}),o=r.regexp,a=r.keys,c=o.exec(t);if(!c)return null;var s=c[0],f=c.slice(1),d=t===s;return i&&!d?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:d,params:a.reduce((function(t,e,n){return t[e.name]=f[n],t}),{})}}),null)}var Y=function(t){function e(){return t.apply(this,arguments)||this}return l(e,t),e.prototype.render=function(){var t=this;return o.a.createElement(q.Consumer,null,(function(e){e||m(!1);var n=t.props.location||e.location,r=s({},e,{location:n,match:t.props.computedMatch?t.props.computedMatch:t.props.path?V(n.pathname,t.props):e.match}),i=t.props,a=i.children,l=i.component,c=i.render;return Array.isArray(a)&&0===a.length&&(a=null),o.a.createElement(q.Provider,{value:r},r.match?a?"function"==typeof a?a(r):a:l?o.a.createElement(l,r):c?c(r):null:"function"==typeof a?a(r):null)}))},e}(o.a.Component);function G(t){return"/"===t.charAt(0)?t:"/"+t}function Q(t,e){if(!t)return e;var n=G(t);return 0!==e.pathname.indexOf(n)?e:s({},e,{pathname:e.pathname.substr(n.length)})}function X(t){return"string"==typeof t?t:y(t)}function K(t){return function(){m(!1)}}function J(){}o.a.Component;o.a.Component;o.a.useContext;var Z=function(t){function e(){for(var e,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(e=t.call.apply(t,[this].concat(r))||this).history=S(e.props),e}return l(e,t),e.prototype.render=function(){return o.a.createElement(H,{history:this.history,children:this.props.children})},e}(o.a.Component);o.a.Component;var tt=function(t,e){return"function"==typeof t?t(e):t},et=function(t,e){return"string"==typeof t?x(t,null,null,e):t},nt=function(t){return t},rt=o.a.forwardRef;void 0===rt&&(rt=nt);var ot=rt((function(t,e){var n=t.innerRef,r=t.navigate,i=t.onClick,a=B(t,["innerRef","navigate","onClick"]),l=a.target,c=s({},a,{onClick:function(t){try{i&&i(t)}catch(e){throw t.preventDefault(),e}t.defaultPrevented||0!==t.button||l&&"_self"!==l||function(t){return!!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)}(t)||(t.preventDefault(),r())}});return c.ref=nt!==rt&&e||n,o.a.createElement("a",c)}));var it=rt((function(t,e){var n=t.component,r=void 0===n?ot:n,i=t.replace,a=t.to,l=t.innerRef,c=B(t,["component","replace","to","innerRef"]);return o.a.createElement(q.Consumer,null,(function(t){t||m(!1);var n=t.history,u=et(tt(a,t.location),t.location),f=u?n.createHref(u):"",d=s({},c,{href:f,navigate:function(){var e=tt(a,t.location);(i?n.replace:n.push)(e)}});return nt!==rt?d.ref=e||l:d.innerRef=l,o.a.createElement(r,d)}))})),at=function(t){return t},lt=o.a.forwardRef;void 0===lt&&(lt=at);lt((function(t,e){var n=t["aria-current"],r=void 0===n?"page":n,i=t.activeClassName,a=void 0===i?"active":i,l=t.activeStyle,c=t.className,u=t.exact,f=t.isActive,d=t.location,p=t.strict,h=t.style,g=t.to,b=t.innerRef,v=B(t,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","strict","style","to","innerRef"]);return o.a.createElement(q.Consumer,null,(function(t){t||m(!1);var n=d||t.location,i=et(tt(g,n),n),y=i.pathname,x=y&&y.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),w=x?V(n.pathname,{path:x,exact:u,strict:p}):null,k=!!(f?f(w,n):w),_=k?function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return e.filter((function(t){return t})).join(" ")}(c,a):c,E=k?s({},h,{},l):h,S=s({"aria-current":k&&r||null,className:_,style:E,to:i},v);return at!==lt?S.ref=e||b:S.innerRef=b,o.a.createElement(it,S)}))}));function ct(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}var ut,st=n(2),ft=n.n(st),dt=o.a.createContext({});function pt(t){document.body.style.paddingRight=t>0?t+"px":null}function mt(){var t=function(){var t=document.createElement("div");t.style.position="absolute",t.style.top="-9999px",t.style.width="50px",t.style.height="50px",t.style.overflow="scroll",document.body.appendChild(t);var e=t.offsetWidth-t.clientWidth;return document.body.removeChild(t),e}(),e=document.querySelectorAll(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top")[0],n=e?parseInt(e.style.paddingRight||0,10):0;document.body.clientWidth<window.innerWidth&&pt(n+t)}function ht(t,e){return void 0===t&&(t=""),void 0===e&&(e=ut),e?t.split(" ").map((function(t){return e[t]||t})).join(" "):t}function gt(t,e){var n={};return Object.keys(t).forEach((function(r){-1===e.indexOf(r)&&(n[r]=t[r])})),n}var bt={};function vt(t){bt[t]||("undefined"!=typeof console&&console.error(t),bt[t]=!0)}var yt="object"==typeof window&&window.Element||function(){};u.a.oneOfType([u.a.string,u.a.func,function(t,e,n){if(!(t[e]instanceof yt))return new Error("Invalid prop `"+e+"` supplied to `"+n+"`. Expected prop to be an instance of Element. Validation failed.")},u.a.shape({current:u.a.any})]);var xt=u.a.oneOfType([u.a.func,u.a.string,u.a.shape({$$typeof:u.a.symbol,render:u.a.func}),u.a.arrayOf(u.a.oneOfType([u.a.func,u.a.string,u.a.shape({$$typeof:u.a.symbol,render:u.a.func})]))]),wt=150,kt=300,_t=["in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","onEnter","onEntering","onEntered","onExit","onExiting","onExited"],Et={esc:27,space:32,enter:13,tab:9,up:38,down:40,home:36,end:35,n:78,p:80},St=!("undefined"==typeof window||!window.document||!window.document.createElement);function Mt(t){var e=typeof t;return null!=t&&("object"===e||"function"===e)}var Tt=["a[href]","area[href]","input:not([disabled]):not([type=hidden])","select:not([disabled])","textarea:not([disabled])","button:not([disabled])","object","embed","[tabindex]:not(.modal)","audio[controls]","video[controls]",'[contenteditable]:not([contenteditable="false"])'],Ct={children:u.a.node,active:u.a.bool,disabled:u.a.bool,divider:u.a.bool,tag:xt,header:u.a.bool,onClick:u.a.func,className:u.a.string,cssModule:u.a.object,toggle:u.a.bool},Nt=function(t){function e(e){var n;return(n=t.call(this,e)||this).onClick=n.onClick.bind(ct(n)),n.getTabIndex=n.getTabIndex.bind(ct(n)),n}l(e,t);var n=e.prototype;return n.onClick=function(t){this.props.disabled||this.props.header||this.props.divider?t.preventDefault():(this.props.onClick&&this.props.onClick(t),this.props.toggle&&this.context.toggle(t))},n.getTabIndex=function(){return this.props.disabled||this.props.header||this.props.divider?"-1":"0"},n.render=function(){var t=this.getTabIndex(),e=t>-1?"menuitem":void 0,n=gt(this.props,["toggle"]),r=n.className,i=n.cssModule,a=n.divider,l=n.tag,c=n.header,u=n.active,f=B(n,["className","cssModule","divider","tag","header","active"]),d=ht(ft()(r,{disabled:f.disabled,"dropdown-item":!a&&!c,active:u,"dropdown-header":c,"dropdown-divider":a}),i);return"button"===l&&(c?l="h6":a?l="div":f.href&&(l="a")),o.a.createElement(l,s({type:"button"===l&&(f.onClick||this.props.toggle)?"button":void 0},f,{tabIndex:t,role:e,className:d,onClick:this.onClick}))},e}(o.a.Component);Nt.propTypes=Ct,Nt.defaultProps={tag:"button",toggle:!0},Nt.contextType=dt;var Pt=Nt,At={tag:xt,fluid:u.a.oneOfType([u.a.bool,u.a.string]),className:u.a.string,cssModule:u.a.object},Ot=function(t){var e=t.className,n=t.cssModule,r=t.fluid,i=t.tag,a=B(t,["className","cssModule","fluid","tag"]),l="container";!0===r?l="container-fluid":r&&(l="container-"+r);var c=ht(ft()(e,l),n);return o.a.createElement(i,s({},a,{className:c}))};Ot.propTypes=At,Ot.defaultProps={tag:"div"};var zt=Ot,jt=u.a.oneOfType([u.a.number,u.a.string]),Rt={tag:xt,noGutters:u.a.bool,className:u.a.string,cssModule:u.a.object,form:u.a.bool,xs:jt,sm:jt,md:jt,lg:jt,xl:jt},Dt={tag:"div",widths:["xs","sm","md","lg","xl"]},Lt=function(t){var e=t.className,n=t.cssModule,r=t.noGutters,i=t.tag,a=t.form,l=t.widths,c=B(t,["className","cssModule","noGutters","tag","form","widths"]),u=[];l.forEach((function(e,n){var r=t[e];if(delete c[e],r){var o=!n;u.push(o?"row-cols-"+r:"row-cols-"+e+"-"+r)}}));var f=ht(ft()(e,r?"no-gutters":null,a?"form-row":"row",u),n);return o.a.createElement(i,s({},c,{className:f}))};Lt.propTypes=Rt,Lt.defaultProps=Dt;var It=Lt,Ut=u.a.oneOfType([u.a.number,u.a.string]),Ft=u.a.oneOfType([u.a.bool,u.a.number,u.a.string,u.a.shape({size:u.a.oneOfType([u.a.bool,u.a.number,u.a.string]),order:Ut,offset:Ut})]),Bt={tag:xt,xs:Ft,sm:Ft,md:Ft,lg:Ft,xl:Ft,className:u.a.string,cssModule:u.a.object,widths:u.a.array},qt={tag:"div",widths:["xs","sm","md","lg","xl"]},Ht=function(t,e,n){return!0===n||""===n?t?"col":"col-"+e:"auto"===n?t?"col-auto":"col-"+e+"-auto":t?"col-"+n:"col-"+e+"-"+n},Wt=function(t){var e=t.className,n=t.cssModule,r=t.widths,i=t.tag,a=B(t,["className","cssModule","widths","tag"]),l=[];r.forEach((function(e,r){var o=t[e];if(delete a[e],o||""===o){var i=!r;if(Mt(o)){var c,u=i?"-":"-"+e+"-",s=Ht(i,e,o.size);l.push(ht(ft()(((c={})[s]=o.size||""===o.size,c["order"+u+o.order]=o.order||0===o.order,c["offset"+u+o.offset]=o.offset||0===o.offset,c)),n))}else{var f=Ht(i,e,o);l.push(f)}}})),l.length||l.push("col");var c=ht(ft()(e,l),n);return o.a.createElement(i,s({},a,{className:c}))};Wt.propTypes=Bt,Wt.defaultProps=qt;var $t=Wt,Vt={active:u.a.bool,"aria-label":u.a.string,block:u.a.bool,color:u.a.string,disabled:u.a.bool,outline:u.a.bool,tag:xt,innerRef:u.a.oneOfType([u.a.object,u.a.func,u.a.string]),onClick:u.a.func,size:u.a.string,children:u.a.node,className:u.a.string,cssModule:u.a.object,close:u.a.bool},Yt=function(t){function e(e){var n;return(n=t.call(this,e)||this).onClick=n.onClick.bind(ct(n)),n}l(e,t);var n=e.prototype;return n.onClick=function(t){this.props.disabled?t.preventDefault():this.props.onClick&&this.props.onClick(t)},n.render=function(){var t=this.props,e=t.active,n=t["aria-label"],r=t.block,i=t.className,a=t.close,l=t.cssModule,c=t.color,u=t.outline,f=t.size,d=t.tag,p=t.innerRef,m=B(t,["active","aria-label","block","className","close","cssModule","color","outline","size","tag","innerRef"]);a&&void 0===m.children&&(m.children=o.a.createElement("span",{"aria-hidden":!0},"×"));var h="btn"+(u?"-outline":"")+"-"+c,g=ht(ft()(i,{close:a},a||"btn",a||h,!!f&&"btn-"+f,!!r&&"btn-block",{active:e,disabled:this.props.disabled}),l);m.href&&"button"===d&&(d="a");var b=a?"Close":null;return o.a.createElement(d,s({type:"button"===d&&m.onClick?"button":void 0},m,{className:g,ref:p,onClick:this.onClick,"aria-label":n||b}))},e}(o.a.Component);Yt.propTypes=Vt,Yt.defaultProps={color:"secondary",tag:"button"};var Gt=Yt,Qt=n(3),Xt=n.n(Qt),Kt=n(4),Jt=n.n(Kt),Zt=n(19),te=n.n(Zt),ee=te()(),ne=te()(),re=function(t){function e(){for(var e,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return e=t.call.apply(t,[this].concat(r))||this,Jt()(Xt()(e),"referenceNode",void 0),Jt()(Xt()(e),"setReferenceNode",(function(t){t&&e.referenceNode!==t&&(e.referenceNode=t,e.forceUpdate())})),e}j()(e,t);var n=e.prototype;return n.componentWillUnmount=function(){this.referenceNode=null},n.render=function(){return r.createElement(ee.Provider,{value:this.referenceNode},r.createElement(ne.Provider,{value:this.setReferenceNode},this.props.children))},e}(r.Component),oe={a11y:u.a.bool,disabled:u.a.bool,direction:u.a.oneOf(["up","down","left","right"]),group:u.a.bool,isOpen:u.a.bool,nav:u.a.bool,active:u.a.bool,addonType:u.a.oneOfType([u.a.bool,u.a.oneOf(["prepend","append"])]),size:u.a.string,tag:xt,toggle:u.a.func,children:u.a.node,className:u.a.string,cssModule:u.a.object,inNavbar:u.a.bool,setActiveFromChild:u.a.bool},ie=[Et.space,Et.enter,Et.up,Et.down,Et.end,Et.home],ae=function(t){function e(e){var n;return(n=t.call(this,e)||this).addEvents=n.addEvents.bind(ct(n)),n.handleDocumentClick=n.handleDocumentClick.bind(ct(n)),n.handleKeyDown=n.handleKeyDown.bind(ct(n)),n.removeEvents=n.removeEvents.bind(ct(n)),n.toggle=n.toggle.bind(ct(n)),n.containerRef=o.a.createRef(),n}l(e,t);var n=e.prototype;return n.getContextValue=function(){return{toggle:this.toggle,isOpen:this.props.isOpen,direction:"down"===this.props.direction&&this.props.dropup?"up":this.props.direction,inNavbar:this.props.inNavbar,disabled:this.props.disabled}},n.componentDidMount=function(){this.handleProps()},n.componentDidUpdate=function(t){this.props.isOpen!==t.isOpen&&this.handleProps()},n.componentWillUnmount=function(){this.removeEvents()},n.getContainer=function(){return this.containerRef.current},n.getMenuCtrl=function(){return this._$menuCtrl?this._$menuCtrl:(this._$menuCtrl=this.getContainer().querySelector("[aria-expanded]"),this._$menuCtrl)},n.getMenuItems=function(){return[].slice.call(this.getContainer().querySelectorAll('[role="menuitem"]'))},n.addEvents=function(){var t=this;["click","touchstart","keyup"].forEach((function(e){return document.addEventListener(e,t.handleDocumentClick,!0)}))},n.removeEvents=function(){var t=this;["click","touchstart","keyup"].forEach((function(e){return document.removeEventListener(e,t.handleDocumentClick,!0)}))},n.handleDocumentClick=function(t){if(!t||3!==t.which&&("keyup"!==t.type||t.which===Et.tab)){var e=this.getContainer();(!e.contains(t.target)||e===t.target||"keyup"===t.type&&t.which!==Et.tab)&&this.toggle(t)}},n.handleKeyDown=function(t){var e=this;if(!/input|textarea/i.test(t.target.tagName)&&(Et.tab!==t.which||"menuitem"===t.target.getAttribute("role")&&this.props.a11y)&&((-1!==ie.indexOf(t.which)||t.which>=48&&t.which<=90)&&t.preventDefault(),!this.props.disabled&&(this.getMenuCtrl()===t.target&&(!this.props.isOpen&&[Et.space,Et.enter,Et.up,Et.down].indexOf(t.which)>-1?(this.toggle(t),setTimeout((function(){return e.getMenuItems()[0].focus()}))):this.props.isOpen&&t.which===Et.esc&&this.toggle(t)),this.props.isOpen&&"menuitem"===t.target.getAttribute("role"))))if([Et.tab,Et.esc].indexOf(t.which)>-1)this.toggle(t),this.getMenuCtrl().focus();else if([Et.space,Et.enter].indexOf(t.which)>-1)t.target.click(),this.getMenuCtrl().focus();else if([Et.down,Et.up].indexOf(t.which)>-1||[Et.n,Et.p].indexOf(t.which)>-1&&t.ctrlKey){var n=this.getMenuItems(),r=n.indexOf(t.target);Et.up===t.which||Et.p===t.which&&t.ctrlKey?r=0!==r?r-1:n.length-1:(Et.down===t.which||Et.n===t.which&&t.ctrlKey)&&(r=r===n.length-1?0:r+1),n[r].focus()}else if(Et.end===t.which){var o=this.getMenuItems();o[o.length-1].focus()}else if(Et.home===t.which){this.getMenuItems()[0].focus()}else if(t.which>=48&&t.which<=90)for(var i=this.getMenuItems(),a=String.fromCharCode(t.which).toLowerCase(),l=0;l<i.length;l+=1){if((i[l].textContent&&i[l].textContent[0].toLowerCase())===a){i[l].focus();break}}},n.handleProps=function(){this.props.isOpen?this.addEvents():this.removeEvents()},n.toggle=function(t){return this.props.disabled?t&&t.preventDefault():this.props.toggle(t)},n.render=function(){var t,e,n=gt(this.props,["toggle","disabled","inNavbar","a11y"]),r=n.className,i=n.cssModule,a=n.direction,l=n.isOpen,c=n.group,u=n.size,f=n.nav,d=n.setActiveFromChild,p=n.active,m=n.addonType,h=n.tag,g=B(n,["className","cssModule","direction","isOpen","group","size","nav","setActiveFromChild","active","addonType","tag"]),b=h||(f?"li":"div"),v=!1;d&&o.a.Children.map(this.props.children[1].props.children,(function(t){t&&t.props.active&&(v=!0)}));var y=ht(ft()(r,"down"!==a&&"drop"+a,!(!f||!p)&&"active",!(!d||!v)&&"active",((t={})["input-group-"+m]=m,t["btn-group"]=c,t["btn-group-"+u]=!!u,t.dropdown=!c&&!m,t.show=l,t["nav-item"]=f,t)),i);return o.a.createElement(dt.Provider,{value:this.getContextValue()},o.a.createElement(re,null,o.a.createElement(b,s({},g,((e={})["string"==typeof b?"ref":"innerRef"]=this.containerRef,e),{onKeyDown:this.handleKeyDown,className:y}))))},e}(o.a.Component);ae.propTypes=oe,ae.defaultProps={a11y:!0,isOpen:!1,direction:"down",nav:!1,active:!1,addonType:!1,inNavbar:!1,setActiveFromChild:!1};var le=ae,ce={children:u.a.node},ue=function(t){return o.a.createElement(le,s({group:!0},t))};ue.propTypes=ce;var se=ue,fe=n(9),de=n.n(fe),pe=n(17),me=n.n(pe),he=function(t){return Array.isArray(t)?t[0]:t},ge=function(t){if("function"==typeof t){for(var e=arguments.length,n=new Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];return t.apply(void 0,n)}},be=function(t,e){if("function"==typeof t)return ge(t,e);null!=t&&(t.current=e)},ve=function(t){function e(){for(var e,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return e=t.call.apply(t,[this].concat(r))||this,Jt()(Xt()(e),"refHandler",(function(t){be(e.props.innerRef,t),ge(e.props.setReferenceNode,t)})),e}j()(e,t);var n=e.prototype;return n.componentWillUnmount=function(){be(this.props.innerRef,null)},n.render=function(){return me()(Boolean(this.props.setReferenceNode),"`Reference` should not be used outside of a `Manager` component."),he(this.props.children)({ref:this.refHandler})},e}(r.Component);function ye(t){return r.createElement(ne.Consumer,null,(function(e){return r.createElement(ve,de()({setReferenceNode:e},t))}))}var xe={caret:u.a.bool,color:u.a.string,children:u.a.node,className:u.a.string,cssModule:u.a.object,disabled:u.a.bool,onClick:u.a.func,"aria-haspopup":u.a.bool,split:u.a.bool,tag:xt,nav:u.a.bool},we=function(t){function e(e){var n;return(n=t.call(this,e)||this).onClick=n.onClick.bind(ct(n)),n}l(e,t);var n=e.prototype;return n.onClick=function(t){this.props.disabled||this.context.disabled?t.preventDefault():(this.props.nav&&!this.props.tag&&t.preventDefault(),this.props.onClick&&this.props.onClick(t),this.context.toggle(t))},n.render=function(){var t,e=this,n=this.props,r=n.className,i=n.color,a=n.cssModule,l=n.caret,c=n.split,u=n.nav,f=n.tag,d=n.innerRef,p=B(n,["className","color","cssModule","caret","split","nav","tag","innerRef"]),m=p["aria-label"]||"Toggle Dropdown",h=ht(ft()(r,{"dropdown-toggle":l||c,"dropdown-toggle-split":c,"nav-link":u}),a),g=p.children||o.a.createElement("span",{className:"sr-only"},m);return u&&!f?(t="a",p.href="#"):f?t=f:(t=Gt,p.color=i,p.cssModule=a),this.context.inNavbar?o.a.createElement(t,s({},p,{className:h,onClick:this.onClick,"aria-expanded":this.context.isOpen,children:g})):o.a.createElement(ye,{innerRef:d},(function(n){var r,i=n.ref;return o.a.createElement(t,s({},p,((r={})["string"==typeof t?"ref":"innerRef"]=i,r),{className:h,onClick:e.onClick,"aria-expanded":e.context.isOpen,children:g}))}))},e}(o.a.Component);we.propTypes=xe,we.defaultProps={"aria-haspopup":!0,color:"secondary"},we.contextType=dt;var ke=we;function _e(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Ee(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?Object(arguments[e]):{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable})))),r.forEach((function(e){_e(t,e,n[e])}))}return t}var Se=n(37),Me=n.n(Se),Te=n(38),Ce=n.n(Te),Ne=n(20),Pe={position:"absolute",top:0,left:0,opacity:0,pointerEvents:"none"},Ae={},Oe=function(t){function e(){for(var e,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return e=t.call.apply(t,[this].concat(r))||this,Jt()(Xt()(e),"state",{data:void 0,placement:void 0}),Jt()(Xt()(e),"popperInstance",void 0),Jt()(Xt()(e),"popperNode",null),Jt()(Xt()(e),"arrowNode",null),Jt()(Xt()(e),"setPopperNode",(function(t){t&&e.popperNode!==t&&(be(e.props.innerRef,t),e.popperNode=t,e.updatePopperInstance())})),Jt()(Xt()(e),"setArrowNode",(function(t){e.arrowNode=t})),Jt()(Xt()(e),"updateStateModifier",{enabled:!0,order:900,fn:function(t){var n=t.placement;return e.setState({data:t,placement:n}),t}}),Jt()(Xt()(e),"getOptions",(function(){return{placement:e.props.placement,eventsEnabled:e.props.eventsEnabled,positionFixed:e.props.positionFixed,modifiers:de()({},e.props.modifiers,{arrow:de()({},e.props.modifiers&&e.props.modifiers.arrow,{enabled:!!e.arrowNode,element:e.arrowNode}),applyStyle:{enabled:!1},updateStateModifier:e.updateStateModifier})}})),Jt()(Xt()(e),"getPopperStyle",(function(){return e.popperNode&&e.state.data?de()({position:e.state.data.offsets.popper.position},e.state.data.styles):Pe})),Jt()(Xt()(e),"getPopperPlacement",(function(){return e.state.data?e.state.placement:void 0})),Jt()(Xt()(e),"getArrowStyle",(function(){return e.arrowNode&&e.state.data?e.state.data.arrowStyles:Ae})),Jt()(Xt()(e),"getOutOfBoundariesState",(function(){return e.state.data?e.state.data.hide:void 0})),Jt()(Xt()(e),"destroyPopperInstance",(function(){e.popperInstance&&(e.popperInstance.destroy(),e.popperInstance=null)})),Jt()(Xt()(e),"updatePopperInstance",(function(){e.destroyPopperInstance();var t=Xt()(e).popperNode,n=e.props.referenceElement;n&&t&&(e.popperInstance=new Ne.a(n,t,e.getOptions()))})),Jt()(Xt()(e),"scheduleUpdate",(function(){e.popperInstance&&e.popperInstance.scheduleUpdate()})),e}j()(e,t);var n=e.prototype;return n.componentDidUpdate=function(t,e){this.props.placement===t.placement&&this.props.referenceElement===t.referenceElement&&this.props.positionFixed===t.positionFixed&&Ce()(this.props.modifiers,t.modifiers,{strict:!0})?this.props.eventsEnabled!==t.eventsEnabled&&this.popperInstance&&(this.props.eventsEnabled?this.popperInstance.enableEventListeners():this.popperInstance.disableEventListeners()):this.updatePopperInstance(),e.placement!==this.state.placement&&this.scheduleUpdate()},n.componentWillUnmount=function(){be(this.props.innerRef,null),this.destroyPopperInstance()},n.render=function(){return he(this.props.children)({ref:this.setPopperNode,style:this.getPopperStyle(),placement:this.getPopperPlacement(),outOfBoundaries:this.getOutOfBoundariesState(),scheduleUpdate:this.scheduleUpdate,arrowProps:{ref:this.setArrowNode,style:this.getArrowStyle()}})},e}(r.Component);Jt()(Oe,"defaultProps",{placement:"bottom",eventsEnabled:!0,referenceElement:void 0,positionFixed:!1});Ne.a.placements;function ze(t){var e=t.referenceElement,n=Me()(t,["referenceElement"]);return r.createElement(ee.Consumer,null,(function(t){return r.createElement(Oe,de()({referenceElement:void 0!==e?e:t},n))}))}var je={tag:xt,children:u.a.node.isRequired,right:u.a.bool,flip:u.a.bool,modifiers:u.a.object,className:u.a.string,cssModule:u.a.object,persist:u.a.bool,positionFixed:u.a.bool},Re={flip:{enabled:!1}},De={up:"top",left:"left",right:"right",down:"bottom"},Le=function(t){function e(){return t.apply(this,arguments)||this}return l(e,t),e.prototype.render=function(){var t=this,e=this.props,n=e.className,r=e.cssModule,i=e.right,a=e.tag,l=e.flip,c=e.modifiers,u=e.persist,f=e.positionFixed,d=B(e,["className","cssModule","right","tag","flip","modifiers","persist","positionFixed"]),p=ht(ft()(n,"dropdown-menu",{"dropdown-menu-right":i,show:this.context.isOpen}),r),m=a;if(u||this.context.isOpen&&!this.context.inNavbar){var h=(De[this.context.direction]||"bottom")+"-"+(i?"end":"start"),g=l?c:Ee({},c,{},Re),b=!!f;return o.a.createElement(ze,{placement:h,modifiers:g,positionFixed:b},(function(e){var n=e.ref,r=e.style,i=e.placement;return o.a.createElement(m,s({tabIndex:"-1",role:"menu",ref:n,style:r},d,{"aria-hidden":!t.context.isOpen,className:p,"x-placement":i}))}))}return o.a.createElement(m,s({tabIndex:"-1",role:"menu"},d,{"aria-hidden":!this.context.isOpen,className:p,"x-placement":d.placement}))},e}(o.a.Component);Le.propTypes=je,Le.defaultProps={tag:"div",flip:!0},Le.contextType=dt;var Ie=Le,Ue=(n(12),n(35)),Fe=n.n(Ue);function Be(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(!(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=t[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==l.return||l.return()}finally{if(o)throw i}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var qe=Object(r.createContext)();function He(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(!(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=t[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==l.return||l.return()}finally{if(o)throw i}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var We=function(t){var e=He(Object(r.useState)(!1),2),n=e[0],i=e[1],a=He(Object(r.useState)([]),2),l=a[0],c=a[1],u=He(Object(r.useState)(!1),2),s=u[0],f=u[1],d=Object(r.useContext)(qe),p=d.project;d.updateProject,p.projects||t.history.push("/");var m=He(Object(r.useState)(""),2),h=m[0],g=m[1];Object(r.useEffect)((function(){s||(fetch("".concat(p.projects,"/parsedData.json")).then((function(t){return t.json()})).then((function(t){c(t)})).catch((function(t){return console.log(t)})),f(!0))}),[p]);var b=[],v=function(t){b.push(o.a.createElement(Pt,{key:t,onClick:function(){return g(t)}},t))};for(var y in l)v(y);return o.a.createElement("div",{id:"UserDashboard"},o.a.createElement(zt,null,o.a.createElement(It,{xs:"1"},o.a.createElement($t,{xs:"6"},o.a.createElement(it,{id:"navProjLink",to:"/"},o.a.createElement(Gt,{color:"secondary",id:"navProjSelect",block:!0},"Project Select"))),o.a.createElement($t,{xs:"6"},o.a.createElement(it,{id:"navConfigLink",to:"/configDash"},o.a.createElement(Gt,{id:"navConfigDash",color:"secondary",block:!0},"Config Dashboard"))))),o.a.createElement("h1",null," User Dashboard "),o.a.createElement("div",{className:"categoriesDrop"},o.a.createElement(se,{isOpen:n,toggle:function(){i(!n)}},o.a.createElement(ke,{caret:!0,color:"primary"},"Categories:"),o.a.createElement(Ie,null,b))),o.a.createElement("div",{id:"chartArea"},o.a.createElement(Fe.a,{dataCat:l[h]})))},$e={children:u.a.node,inline:u.a.bool,tag:xt,innerRef:u.a.oneOfType([u.a.object,u.a.func,u.a.string]),className:u.a.string,cssModule:u.a.object},Ve=function(t){function e(e){var n;return(n=t.call(this,e)||this).getRef=n.getRef.bind(ct(n)),n.submit=n.submit.bind(ct(n)),n}l(e,t);var n=e.prototype;return n.getRef=function(t){this.props.innerRef&&this.props.innerRef(t),this.ref=t},n.submit=function(){this.ref&&this.ref.submit()},n.render=function(){var t=this.props,e=t.className,n=t.cssModule,r=t.inline,i=t.tag,a=t.innerRef,l=B(t,["className","cssModule","inline","tag","innerRef"]),c=ht(ft()(e,!!r&&"form-inline"),n);return o.a.createElement(i,s({},l,{ref:a,className:c}))},e}(r.Component);Ve.propTypes=$e,Ve.defaultProps={tag:"form"};var Ye=Ve,Ge={children:u.a.node,row:u.a.bool,check:u.a.bool,inline:u.a.bool,disabled:u.a.bool,tag:xt,className:u.a.string,cssModule:u.a.object},Qe=function(t){var e=t.className,n=t.cssModule,r=t.row,i=t.disabled,a=t.check,l=t.inline,c=t.tag,u=B(t,["className","cssModule","row","disabled","check","inline","tag"]),f=ht(ft()(e,!!r&&"row",a?"form-check":"form-group",!(!a||!l)&&"form-check-inline",!(!a||!i)&&"disabled"),n);return"fieldset"===c&&(u.disabled=i),o.a.createElement(c,s({},u,{className:f}))};Qe.propTypes=Ge,Qe.defaultProps={tag:"div"};var Xe=Qe,Ke=u.a.oneOfType([u.a.number,u.a.string]),Je=u.a.oneOfType([u.a.string,u.a.number,u.a.shape({size:Ke,order:Ke,offset:Ke})]),Ze={children:u.a.node,hidden:u.a.bool,check:u.a.bool,size:u.a.string,for:u.a.string,tag:xt,className:u.a.string,cssModule:u.a.object,xs:Je,sm:Je,md:Je,lg:Je,xl:Je,widths:u.a.array},tn={tag:"label",widths:["xs","sm","md","lg","xl"]},en=function(t,e,n){return!0===n||""===n?t?"col":"col-"+e:"auto"===n?t?"col-auto":"col-"+e+"-auto":t?"col-"+n:"col-"+e+"-"+n},nn=function(t){var e=t.className,n=t.cssModule,r=t.hidden,i=t.widths,a=t.tag,l=t.check,c=t.size,u=t.for,f=B(t,["className","cssModule","hidden","widths","tag","check","size","for"]),d=[];i.forEach((function(e,r){var o=t[e];if(delete f[e],o||""===o){var i,a=!r;if(Mt(o)){var l,c=a?"-":"-"+e+"-";i=en(a,e,o.size),d.push(ht(ft()(((l={})[i]=o.size||""===o.size,l["order"+c+o.order]=o.order||0===o.order,l["offset"+c+o.offset]=o.offset||0===o.offset,l))),n)}else i=en(a,e,o),d.push(i)}}));var p=ht(ft()(e,!!r&&"sr-only",!!l&&"form-check-label",!!c&&"col-form-label-"+c,d,!!d.length&&"col-form-label"),n);return o.a.createElement(a,s({htmlFor:u},f,{className:p}))};nn.propTypes=Ze,nn.defaultProps=tn;var rn=nn,on={children:u.a.node,type:u.a.string,size:u.a.string,bsSize:u.a.string,valid:u.a.bool,invalid:u.a.bool,tag:xt,innerRef:u.a.oneOfType([u.a.object,u.a.func,u.a.string]),plaintext:u.a.bool,addon:u.a.bool,className:u.a.string,cssModule:u.a.object},an=function(t){function e(e){var n;return(n=t.call(this,e)||this).getRef=n.getRef.bind(ct(n)),n.focus=n.focus.bind(ct(n)),n}l(e,t);var n=e.prototype;return n.getRef=function(t){this.props.innerRef&&this.props.innerRef(t),this.ref=t},n.focus=function(){this.ref&&this.ref.focus()},n.render=function(){var t=this.props,e=t.className,n=t.cssModule,r=t.type,i=t.bsSize,a=t.valid,l=t.invalid,c=t.tag,u=t.addon,f=t.plaintext,d=t.innerRef,p=B(t,["className","cssModule","type","bsSize","valid","invalid","tag","addon","plaintext","innerRef"]),m=["radio","checkbox"].indexOf(r)>-1,h=new RegExp("\\D","g"),g=c||("select"===r||"textarea"===r?r:"input"),b="form-control";f?(b+="-plaintext",g=c||"input"):"file"===r?b+="-file":m&&(b=u?null:"form-check-input"),p.size&&h.test(p.size)&&(vt('Please use the prop "bsSize" instead of the "size" to bootstrap\'s input sizing.'),i=p.size,delete p.size);var v=ht(ft()(e,l&&"is-invalid",a&&"is-valid",!!i&&"form-control-"+i,b),n);return("input"===g||c&&"function"==typeof c)&&(p.type=r),p.children&&!f&&"select"!==r&&"string"==typeof g&&"select"!==g&&(vt('Input with a type of "'+r+'" cannot have children. Please use "value"/"defaultValue" instead.'),delete p.children),o.a.createElement(g,s({},p,{ref:d,className:v}))},e}(o.a.Component);an.propTypes=on,an.defaultProps={type:"text"};var ln=an,cn=(n(5),{tag:xt,inverse:u.a.bool,color:u.a.string,body:u.a.bool,outline:u.a.bool,className:u.a.string,cssModule:u.a.object,innerRef:u.a.oneOfType([u.a.object,u.a.string,u.a.func])}),un=function(t){var e=t.className,n=t.cssModule,r=t.color,i=t.body,a=t.inverse,l=t.outline,c=t.tag,u=t.innerRef,f=B(t,["className","cssModule","color","body","inverse","outline","tag","innerRef"]),d=ht(ft()(e,"card",!!a&&"text-white",!!i&&"card-body",!!r&&(l?"border":"bg")+"-"+r),n);return o.a.createElement(c,s({},f,{className:d,ref:u}))};un.propTypes=cn,un.defaultProps={tag:"div"};var sn=un,fn={tag:xt,className:u.a.string,cssModule:u.a.object,innerRef:u.a.oneOfType([u.a.object,u.a.string,u.a.func])},dn=function(t){var e=t.className,n=t.cssModule,r=t.innerRef,i=t.tag,a=B(t,["className","cssModule","innerRef","tag"]),l=ht(ft()(e,"card-body"),n);return o.a.createElement(i,s({},a,{className:l,ref:r}))};dn.propTypes=fn,dn.defaultProps={tag:"div"};var pn=dn,mn={tag:xt,className:u.a.string,cssModule:u.a.object},hn=function(t){var e=t.className,n=t.cssModule,r=t.tag,i=B(t,["className","cssModule","tag"]),a=ht(ft()(e,"card-title"),n);return o.a.createElement(r,s({},i,{className:a}))};hn.propTypes=mn,hn.defaultProps={tag:"div"};var gn=hn,bn={tag:xt,className:u.a.string,cssModule:u.a.object},vn=function(t){var e=t.className,n=t.cssModule,r=t.tag,i=B(t,["className","cssModule","tag"]),a=ht(ft()(e,"card-subtitle"),n);return o.a.createElement(r,s({},i,{className:a}))};vn.propTypes=bn,vn.defaultProps={tag:"div"};var yn=vn,xn=(n(64),function(t){return o.a.createElement("div",{key:"".concat(t.id,"-queryItem"),id:"".concat(t.id,"-queryItem")},o.a.createElement("span",{className:"querySpan"},o.a.createElement(ln,{type:"textarea",name:"queryString",id:"".concat(t.id,"-queries"),placeholder:"Input your GraphQL queries",value:t.queryItem,onChange:t.queryChange}),o.a.createElement(Gt,{key:"button-".concat(t.id),className:"deleteBtn",type:"button",size:"sm",id:"".concat(t.id,"-delete"),onClick:t.deleteQuery,color:"secondary"},"X")))}),wn=function(t){for(var e=[],n=0;n<t.queries.length;n+=1)e.push(o.a.createElement(xn,{key:n,id:"".concat(t.name,"-").concat(n),name:"".concat(t.name,"-queryItem"),queryItem:"".concat(t.queries[n]),queryChange:t.queryChange,deleteQuery:t.deleteQuery}));return o.a.createElement("div",null,o.a.createElement(Xe,null,e))},kn=function(t){return o.a.createElement("div",null,o.a.createElement(gn,null,o.a.createElement("h4",null,t.catData.name)),o.a.createElement(yn,null,"Frequency(ms): ",o.a.createElement("br",null)," ",o.a.createElement("div",{id:"freqExamples"},"(ex: 1 sec = 1000; 1 min = 60000; 30 min = 1800000; 1 hour = 3600000; 1 day = 86400000)")),o.a.createElement(ln,{type:"text",name:"frequency",id:"".concat(t.catData.name,"-freq"),placeholder:"Set frequency of query execution",value:t.catData.frequency,onChange:t.freqChange}),o.a.createElement("br",null),o.a.createElement(yn,null,"Queries:"),o.a.createElement(wn,{key:t.catData.name,name:t.catData.name,queries:t.catData.queries,deleteQuery:t.deleteQuery,queryChange:t.queryChange}),o.a.createElement("div",{id:"btnAddQuery"},o.a.createElement(Gt,{className:"addQueryBtn",color:"primary",size:"md",id:"".concat(t.catData.name,"-addQuery"),onClick:t.addQuery,block:!0},"Add Query")))},_n=function(t){var e=[];return function(n){var r=!0,i=!1,a=void 0;try{for(var l,c=n[Symbol.iterator]();!(r=(l=c.next()).done);r=!0){var u=l.value;e.push(o.a.createElement("div",{key:u.name},o.a.createElement(sn,{size:"md",name:u.name},o.a.createElement(pn,null,o.a.createElement(kn,{catData:u,queryChange:t.queryChange,addQuery:t.addQuery,deleteQuery:t.deleteQuery,freqChange:t.freqChange}))),o.a.createElement("br",null),o.a.createElement("br",null)))}}catch(t){i=!0,a=t}finally{try{r||null==c.return||c.return()}finally{if(i)throw a}}}(t.categories),e},En=function(t){var e=[];for(var n in t.configData.categories){var r={};r.name=n,r.queries=t.configData.categories[n].queries,r.frequency=t.configData.categories[n].frequency,e.push(r)}return o.a.createElement("div",{className:"category"},o.a.createElement("div",null,o.a.createElement(_n,{categories:e,configData:t.configData,queryChange:t.queryChange,addQuery:t.addQuery,deleteQuery:t.deleteQuery,freqChange:t.freqChange})),o.a.createElement("input",{type:"text",id:"catInput",placeholder:" Add/Select Category (lower case)",onChange:t.addTypedCat,value:t.typedCat}),o.a.createElement("button",{type:"button",onClick:t.addCategory},"Add Category"),o.a.createElement("button",{type:"button",onClick:t.delCategory},"Delete Category"))},Sn={children:u.a.node.isRequired,node:u.a.any},Mn=function(t){function e(){return t.apply(this,arguments)||this}l(e,t);var n=e.prototype;return n.componentWillUnmount=function(){this.defaultNode&&document.body.removeChild(this.defaultNode),this.defaultNode=null},n.render=function(){return St?(this.props.node||this.defaultNode||(this.defaultNode=document.createElement("div"),document.body.appendChild(this.defaultNode)),a.a.createPortal(this.props.children,this.props.node||this.defaultNode)):null},e}(o.a.Component);Mn.propTypes=Sn;var Tn=Mn,Cn=n(10),Nn=Ee({},Cn.Transition.propTypes,{children:u.a.oneOfType([u.a.arrayOf(u.a.node),u.a.node]),tag:xt,baseClass:u.a.string,baseClassActive:u.a.string,className:u.a.string,cssModule:u.a.object,innerRef:u.a.oneOfType([u.a.object,u.a.string,u.a.func])}),Pn=Ee({},Cn.Transition.defaultProps,{tag:"div",baseClass:"fade",baseClassActive:"show",timeout:wt,appear:!0,enter:!0,exit:!0,in:!0});function An(t){var e=t.tag,n=t.baseClass,r=t.baseClassActive,i=t.className,a=t.cssModule,l=t.children,c=t.innerRef,u=B(t,["tag","baseClass","baseClassActive","className","cssModule","children","innerRef"]),f=function(t,e){for(var n,r=Array.isArray(e)?e:[e],o=r.length,i={};o>0;)i[n=r[o-=1]]=t[n];return i}(u,_t),d=gt(u,_t);return o.a.createElement(Cn.Transition,f,(function(t){var u="entered"===t,f=ht(ft()(i,n,u&&r),a);return o.a.createElement(e,s({className:f},d,{ref:c}),l)}))}An.propTypes=Nn,An.defaultProps=Pn;var On=An;function zn(){}var jn=u.a.shape(On.propTypes),Rn={isOpen:u.a.bool,autoFocus:u.a.bool,centered:u.a.bool,scrollable:u.a.bool,size:u.a.string,toggle:u.a.func,keyboard:u.a.bool,role:u.a.string,labelledBy:u.a.string,backdrop:u.a.oneOfType([u.a.bool,u.a.oneOf(["static"])]),onEnter:u.a.func,onExit:u.a.func,onOpened:u.a.func,onClosed:u.a.func,children:u.a.node,className:u.a.string,wrapClassName:u.a.string,modalClassName:u.a.string,backdropClassName:u.a.string,contentClassName:u.a.string,external:u.a.node,fade:u.a.bool,cssModule:u.a.object,zIndex:u.a.oneOfType([u.a.number,u.a.string]),backdropTransition:jn,modalTransition:jn,innerRef:u.a.oneOfType([u.a.object,u.a.string,u.a.func]),unmountOnClose:u.a.bool,returnFocusAfterClose:u.a.bool},Dn=Object.keys(Rn),Ln={isOpen:!1,autoFocus:!0,centered:!1,scrollable:!1,role:"dialog",backdrop:!0,keyboard:!0,zIndex:1050,fade:!0,onOpened:zn,onClosed:zn,modalTransition:{timeout:kt},backdropTransition:{mountOnEnter:!0,timeout:wt},unmountOnClose:!0,returnFocusAfterClose:!0},In=function(t){function e(e){var n;return(n=t.call(this,e)||this)._element=null,n._originalBodyPadding=null,n.getFocusableChildren=n.getFocusableChildren.bind(ct(n)),n.handleBackdropClick=n.handleBackdropClick.bind(ct(n)),n.handleBackdropMouseDown=n.handleBackdropMouseDown.bind(ct(n)),n.handleEscape=n.handleEscape.bind(ct(n)),n.handleStaticBackdropAnimation=n.handleStaticBackdropAnimation.bind(ct(n)),n.handleTab=n.handleTab.bind(ct(n)),n.onOpened=n.onOpened.bind(ct(n)),n.onClosed=n.onClosed.bind(ct(n)),n.manageFocusAfterClose=n.manageFocusAfterClose.bind(ct(n)),n.clearBackdropAnimationTimeout=n.clearBackdropAnimationTimeout.bind(ct(n)),n.state={isOpen:!1,showStaticBackdropAnimation:!1},n}l(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=this.props,e=t.isOpen,n=t.autoFocus,r=t.onEnter;e&&(this.init(),this.setState({isOpen:!0}),n&&this.setFocus()),r&&r(),this._isMounted=!0},n.componentDidUpdate=function(t,e){if(this.props.isOpen&&!t.isOpen)return this.init(),void this.setState({isOpen:!0});this.props.autoFocus&&this.state.isOpen&&!e.isOpen&&this.setFocus(),this._element&&t.zIndex!==this.props.zIndex&&(this._element.style.zIndex=this.props.zIndex)},n.componentWillUnmount=function(){this.clearBackdropAnimationTimeout(),this.props.onExit&&this.props.onExit(),this._element&&(this.destroy(),this.props.isOpen&&this.close()),this._isMounted=!1},n.onOpened=function(t,e){this.props.onOpened(),(this.props.modalTransition.onEntered||zn)(t,e)},n.onClosed=function(t){var e=this.props.unmountOnClose;this.props.onClosed(),(this.props.modalTransition.onExited||zn)(t),e&&this.destroy(),this.close(),this._isMounted&&this.setState({isOpen:!1})},n.setFocus=function(){this._dialog&&this._dialog.parentNode&&"function"==typeof this._dialog.parentNode.focus&&this._dialog.parentNode.focus()},n.getFocusableChildren=function(){return this._element.querySelectorAll(Tt.join(", "))},n.getFocusedChild=function(){var t,e=this.getFocusableChildren();try{t=document.activeElement}catch(n){t=e[0]}return t},n.handleBackdropClick=function(t){if(t.target===this._mouseDownElement){t.stopPropagation();var e=this._dialog?this._dialog.parentNode:null;if(e&&t.target===e&&"static"===this.props.backdrop&&this.handleStaticBackdropAnimation(),!this.props.isOpen||!0!==this.props.backdrop)return;e&&t.target===e&&this.props.toggle&&this.props.toggle(t)}},n.handleTab=function(t){if(9===t.which){var e=this.getFocusableChildren(),n=e.length;if(0!==n){for(var r=this.getFocusedChild(),o=0,i=0;i<n;i+=1)if(e[i]===r){o=i;break}t.shiftKey&&0===o?(t.preventDefault(),e[n-1].focus()):t.shiftKey||o!==n-1||(t.preventDefault(),e[0].focus())}}},n.handleBackdropMouseDown=function(t){this._mouseDownElement=t.target},n.handleEscape=function(t){if(this.props.isOpen&&this.props.keyboard&&t.keyCode===Et.esc&&this.props.toggle){if(t.preventDefault(),t.stopPropagation(),"static"===this.props.backdrop)return void this.handleStaticBackdropAnimation();this.props.toggle(t)}},n.handleStaticBackdropAnimation=function(){var t=this;this.clearBackdropAnimationTimeout(),this.setState({showStaticBackdropAnimation:!0}),this._backdropAnimationTimeout=setTimeout((function(){t.setState({showStaticBackdropAnimation:!1})}),100)},n.init=function(){try{this._triggeringElement=document.activeElement}catch(t){this._triggeringElement=null}var t;this._element||(this._element=document.createElement("div"),this._element.setAttribute("tabindex","-1"),this._element.style.position="relative",this._element.style.zIndex=this.props.zIndex,document.body.appendChild(this._element)),this._originalBodyPadding=(t=window.getComputedStyle(document.body,null),parseInt(t&&t.getPropertyValue("padding-right")||0,10)),mt(),0===e.openCount&&(document.body.className=ft()(document.body.className,ht("modal-open",this.props.cssModule))),e.openCount+=1},n.destroy=function(){this._element&&(document.body.removeChild(this._element),this._element=null),this.manageFocusAfterClose()},n.manageFocusAfterClose=function(){if(this._triggeringElement){var t=this.props.returnFocusAfterClose;this._triggeringElement.focus&&t&&this._triggeringElement.focus(),this._triggeringElement=null}},n.close=function(){if(e.openCount<=1){var t=ht("modal-open",this.props.cssModule),n=new RegExp("(^| )"+t+"( |$)");document.body.className=document.body.className.replace(n," ").trim()}this.manageFocusAfterClose(),e.openCount=Math.max(0,e.openCount-1),pt(this._originalBodyPadding)},n.renderModalDialog=function(){var t,e=this,n=gt(this.props,Dn);return o.a.createElement("div",s({},n,{className:ht(ft()("modal-dialog",this.props.className,(t={},t["modal-"+this.props.size]=this.props.size,t["modal-dialog-centered"]=this.props.centered,t["modal-dialog-scrollable"]=this.props.scrollable,t)),this.props.cssModule),role:"document",ref:function(t){e._dialog=t}}),o.a.createElement("div",{className:ht(ft()("modal-content",this.props.contentClassName),this.props.cssModule)},this.props.children))},n.render=function(){var t=this.props.unmountOnClose;if(this._element&&(this.state.isOpen||!t)){var e=!!this._element&&!this.state.isOpen&&!t;this._element.style.display=e?"none":"block";var n=this.props,r=n.wrapClassName,i=n.modalClassName,a=n.backdropClassName,l=n.cssModule,c=n.isOpen,u=n.backdrop,f=n.role,d=n.labelledBy,p=n.external,m=n.innerRef,h={onClick:this.handleBackdropClick,onMouseDown:this.handleBackdropMouseDown,onKeyUp:this.handleEscape,onKeyDown:this.handleTab,style:{display:"block"},"aria-labelledby":d,role:f,tabIndex:"-1"},g=this.props.fade,b=Ee({},On.defaultProps,{},this.props.modalTransition,{baseClass:g?this.props.modalTransition.baseClass:"",timeout:g?this.props.modalTransition.timeout:0}),v=Ee({},On.defaultProps,{},this.props.backdropTransition,{baseClass:g?this.props.backdropTransition.baseClass:"",timeout:g?this.props.backdropTransition.timeout:0}),y=u&&(g?o.a.createElement(On,s({},v,{in:c&&!!u,cssModule:l,className:ht(ft()("modal-backdrop",a),l)})):o.a.createElement("div",{className:ht(ft()("modal-backdrop","show",a),l)}));return o.a.createElement(Tn,{node:this._element},o.a.createElement("div",{className:ht(r)},o.a.createElement(On,s({},h,b,{in:c,onEntered:this.onOpened,onExited:this.onClosed,cssModule:l,className:ht(ft()("modal",i,this.state.showStaticBackdropAnimation&&"modal-static"),l),innerRef:m}),p,this.renderModalDialog()),y))}return null},n.clearBackdropAnimationTimeout=function(){this._backdropAnimationTimeout&&(clearTimeout(this._backdropAnimationTimeout),this._backdropAnimationTimeout=void 0)},e}(o.a.Component);In.propTypes=Rn,In.defaultProps=Ln,In.openCount=0;var Un=In,Fn={tag:xt,wrapTag:xt,toggle:u.a.func,className:u.a.string,cssModule:u.a.object,children:u.a.node,closeAriaLabel:u.a.string,charCode:u.a.oneOfType([u.a.string,u.a.number]),close:u.a.object},Bn=function(t){var e,n=t.className,r=t.cssModule,i=t.children,a=t.toggle,l=t.tag,c=t.wrapTag,u=t.closeAriaLabel,f=t.charCode,d=t.close,p=B(t,["className","cssModule","children","toggle","tag","wrapTag","closeAriaLabel","charCode","close"]),m=ht(ft()(n,"modal-header"),r);if(!d&&a){var h="number"==typeof f?String.fromCharCode(f):f;e=o.a.createElement("button",{type:"button",onClick:a,className:ht("close",r),"aria-label":u},o.a.createElement("span",{"aria-hidden":"true"},h))}return o.a.createElement(c,s({},p,{className:m}),o.a.createElement(l,{className:ht("modal-title",r)},i),d||e)};Bn.propTypes=Fn,Bn.defaultProps={tag:"h5",wrapTag:"div",closeAriaLabel:"Close",charCode:215};var qn=Bn,Hn={tag:xt,className:u.a.string,cssModule:u.a.object},Wn=function(t){var e=t.className,n=t.cssModule,r=t.tag,i=B(t,["className","cssModule","tag"]),a=ht(ft()(e,"modal-body"),n);return o.a.createElement(r,s({},i,{className:a}))};Wn.propTypes=Hn,Wn.defaultProps={tag:"div"};var $n=Wn,Vn={tag:xt,className:u.a.string,cssModule:u.a.object},Yn=function(t){var e=t.className,n=t.cssModule,r=t.tag,i=B(t,["className","cssModule","tag"]),a=ht(ft()(e,"modal-footer"),n);return o.a.createElement(r,s({},i,{className:a}))};Yn.propTypes=Vn,Yn.defaultProps={tag:"div"};var Gn=Yn;function Qn(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(!(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=t[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==l.return||l.return()}finally{if(o)throw i}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var Xn=function(t){var e=t.buttonLabel,n=t.className,i=t.handleSubmit,a=Qn(Object(r.useState)(!1),2),l=a[0],c=a[1],u=function(){return c(!l)};return o.a.createElement("div",null,o.a.createElement(Gt,{color:"primary",onClick:u},e),o.a.createElement(Un,{centered:!0,isOpen:l,toggle:u,className:n},o.a.createElement(qn,{toggle:u},"Confirm Current Configuration"),o.a.createElement($n,null,"Saving will overwrite your existing configuration. Are you sure you want to do this?"),o.a.createElement(Gn,null,o.a.createElement(Gt,{color:"primary",onClick:function(){i(),u()}},"Save")," ",o.a.createElement(Gt,{color:"secondary",onClick:u},"Cancel"))))};function Kn(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(!(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=t[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==l.return||l.return()}finally{if(o)throw i}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var Jn=function(t){var e=t.buttonLabel,n=t.className,i=t.handleReset,a=Kn(Object(r.useState)(!1),2),l=a[0],c=a[1],u=function(){return c(!l)};return o.a.createElement("div",null,o.a.createElement(Gt,{color:"danger",onClick:u},e),o.a.createElement(Un,{centered:!0,isOpen:l,toggle:u,className:n},o.a.createElement(qn,{toggle:u},"Confirm Reset"),o.a.createElement($n,null,"Form data will revert to your last saved configuration. Are you sure you want to do this?"),o.a.createElement(Gn,null,o.a.createElement(Gt,{color:"primary",onClick:function(){i(),u()}},"Reset Form")," ",o.a.createElement(Gt,{color:"secondary",onClick:u},"Cancel Reset"))))};function Zn(t,e,n,r,o,i,a){try{var l=t[i](a),c=l.value}catch(t){return void n(t)}l.done?e(c):Promise.resolve(c).then(r,o)}function tr(t){return function(){var e=this,n=arguments;return new Promise((function(r,o){var i=t.apply(e,n);function a(t){Zn(i,r,o,a,l,"next",t)}function l(t){Zn(i,r,o,a,l,"throw",t)}a(void 0)}))}}function er(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(!(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=t[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==l.return||l.return()}finally{if(o)throw i}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var nr=function(t){var e=er(Object(r.useState)({}),2),n=e[0],i=e[1],a=er(Object(r.useState)({}),2),l=a[0],c=a[1],u=er(Object(r.useState)(""),2),s=u[0],f=u[1],d=er(Object(r.useState)(""),2),p=d[0],m=d[1],h=Object(r.useContext)(qe).project;function g(){return(g=tr(regeneratorRuntime.mark((function t(){var e;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,fetch("".concat(h.projects,"/config.json"));case 2:return e=t.sent,t.next=5,e.json().then((function(t){i(t),c(t),f(t.endpoint)}));case 5:t.sent;case 6:case"end":return t.stop()}}),t)})))).apply(this,arguments)}h.projects||t.history.push("/"),Object(r.useEffect)((function(){!function(){g.apply(this,arguments)}()}),[]);function b(){return(b=tr(regeneratorRuntime.mark((function t(){var e,n;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:e={project:h.projects,data:l},t.t0=regeneratorRuntime.keys(l.categories);case 2:if((t.t1=t.t0()).done){t.next=9;break}if(n=t.t1.value,!1!==/^\d+$/.test(l.categories[n].frequency)){t.next=7;break}return alert("Please ensure Frequencies are whole positive integers"),t.abrupt("return");case 7:t.next=2;break;case 9:return t.next=11,fetch("/api/configDash",{method:"post",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(e)});case 11:case"end":return t.stop()}}),t)})))).apply(this,arguments)}return o.a.createElement("div",{id:"configDashboard"},o.a.createElement("div",{id:"navBtn"},o.a.createElement(zt,null,o.a.createElement(It,{xs:"1"},o.a.createElement($t,{xs:"6"},o.a.createElement(it,{id:"navUserDashLink",to:"/userDashBoard"},o.a.createElement(Gt,{id:"navUserDash",type:"button",color:"secondary",className:"btnSecondary"},"Back to User Dashboard"))),o.a.createElement($t,{xs:"6"},o.a.createElement(it,{id:"navProjLink",to:"/"},o.a.createElement(Gt,{id:"navProjectSelect",type:"button",color:"secondary",className:"btnSecondary"},"Back to Project Select")))))),o.a.createElement("div",{id:"configHeader"},o.a.createElement("br",null),o.a.createElement("h1",null,"Config Dashboard"),o.a.createElement("hr",null),o.a.createElement(Ye,{id:"configForm"},o.a.createElement("div",{id:"categories"},o.a.createElement(Xe,null,o.a.createElement(rn,{for:"endpointLabel"},o.a.createElement("h4",{id:"endpointHeader"},"Endpoint")),o.a.createElement(ln,{type:"text",name:"endpoint",id:"endpoint",placeholder:"Input your GraphQL endpoint",value:s,onChange:function(t){var e=t.target.value,n=JSON.stringify(l),r=JSON.parse(n);r.endpoint=e,c(r),f(e)}}),o.a.createElement("hr",null),o.a.createElement(rn,{for:"categories"},o.a.createElement("h4",{id:"categoriesHeader"},"Categories")),o.a.createElement(En,{configData:l,addCategory:function(){var t=JSON.stringify(l),e=JSON.parse(t);e.categories[p]={},e.categories[p].queries=[""],e.categories[p].frequency="",m(""),c(e)},delCategory:function(){var t=JSON.stringify(l),e=JSON.parse(t);delete e.categories[p],m(""),c(e)},addTypedCat:function(t){m(t.target.value)},typedCat:p,queryChange:function(t){var e=t.target.id.split("-")[0],n=t.target.id.split("-")[1],r=JSON.stringify(l),o=JSON.parse(r);o.categories[e].queries[n]=t.target.value,c(o)},addQuery:function(t){var e=t.target.id.split("-")[0],n=JSON.stringify(l),r=JSON.parse(n);r.categories[e].queries.push(""),c(r)},deleteQuery:function(t){var e=t.target.id.split("-")[0],n=t.target.id.split("-")[1],r=JSON.stringify(l),o=JSON.parse(r);o.categories[e].queries.splice(n,1),c(o)},freqChange:function(t){var e=t.target.id.split("-")[0],n=JSON.stringify(l),r=JSON.parse(n);r.categories[e].frequency=t.target.value,c(r)}}))),o.a.createElement(Xn,{handleSubmit:function(){return b.apply(this,arguments)},buttonLabel:"Save Configuration",className:"saveConfig"}),o.a.createElement(Jn,{handleReset:function(){c(n),f(n.endpoint),t.history.push("/configDash")},buttonLabel:"Reset Configuration",className:"resetConfig"}))))};function rr(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(!(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=t[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==l.return||l.return()}finally{if(o)throw i}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var or=function(){var t=rr(Object(r.useState)(!1),2),e=t[0],n=t[1],i=Object(r.useContext)(qe),a=i.project,l=i.updateProject,c=rr(Object(r.useState)([1,2]),2),u=c[0],s=c[1],f=rr(Object(r.useState)(!1),2),d=f[0],p=f[1];Object(r.useEffect)((function(){d||(fetch("/projectNames.json").then((function(t){return t.json()})).then((function(t){s(t)})),p(!0))}),[u]);var m=[],h=!0,g=!1,b=void 0;try{for(var v,y=function(){var t=v.value;m.push(o.a.createElement(Pt,{key:t,onClick:function(){return l({projects:t})}},t))},x=u[Symbol.iterator]();!(h=(v=x.next()).done);h=!0)y()}catch(t){g=!0,b=t}finally{try{h||null==x.return||x.return()}finally{if(g)throw b}}return o.a.createElement("div",{id:"projectSelect"},o.a.createElement("div",{className:"projDrop"},o.a.createElement(se,{isOpen:e,toggle:function(){n(!e)}},o.a.createElement(ke,{caret:!0,color:"primary"},"Projects:"),o.a.createElement(Ie,null,m))),a.projects&&o.a.createElement("div",null,o.a.createElement("div",{id:"userDashBtn"},o.a.createElement(it,{to:"/userDashBoard"},o.a.createElement(Gt,{size:"md",type:"button",className:"btnSecondary"},"DASHBOARD"))),o.a.createElement("div",{id:"configBtn"},o.a.createElement(it,{to:"/configDash"},o.a.createElement(Gt,{type:"button",className:"btnSecondary"},"CONFIG")))))};i.render(r.createElement((function(t){var e=Be(Object(r.useState)({}),2),n=e[0],i=e[1];return o.a.createElement(qe.Provider,{value:{project:n,updateProject:function(t){i(t)}}},t.children)}),null,r.createElement((function(){return o.a.createElement("div",{className:"router"},o.a.createElement(Z,null,o.a.createElement(Y,{exact:!0,path:"/",component:or}),o.a.createElement(Y,{exact:!0,path:"/configDash",component:nr}),o.a.createElement(Y,{exact:!0,path:"/userDashBoard",component:We})))}),null)),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2Fzc2VydFRoaXNJbml0aWFsaXplZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9kZWZpbmVQcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvZGlzcGxheS9zdHlsZXNoZWV0cy9zdHlsZS5zY3NzP2I2NDAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNMb29zZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2V4dGVuZHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0c3RyYXAvbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9kaXN0L2Nzcy9ib290c3RyYXAuY3NzPzM0ZjYiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZnVuY3Rpb24tYmluZC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVmaW5lLXByb3BlcnRpZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2d1ZC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvd2FybmluZy93YXJuaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jcmVhdGUtcmVhY3QtY29udGV4dC9saWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BvcHBlci5qcy9kaXN0L2VzbS9wb3BwZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9vYmplY3Qta2V5cy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWtleXMvaXNBcmd1bWVudHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlZ2V4cC5wcm90b3R5cGUuZmxhZ3MvaW1wbGVtZW50YXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlZ2V4cC5wcm90b3R5cGUuZmxhZ3MvcG9seWZpbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0c3RyYXAvbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvVHJhbnNpdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbGlmZWN5Y2xlcy1jb21wYXQvcmVhY3QtbGlmZWN5Y2xlcy1jb21wYXQuZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0c3RyYXAvbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvdXRpbHMvUHJvcFR5cGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdHN0cmFwL25vZGVfbW9kdWxlcy9yZWFjdC10cmFuc2l0aW9uLWdyb3VwL1RyYW5zaXRpb25Hcm91cC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMvZGlzdC9wYWNrYWdlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvYXNjZW5kaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvYmlzZWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9iaXNlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9wYWlycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2Nyb3NzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvZGVzY2VuZGluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL251bWJlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3ZhcmlhbmNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvZGV2aWF0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvZXh0ZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9jb25zdGFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2lkZW50aXR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvcmFuZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy90aWNrcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3RocmVzaG9sZC9zdHVyZ2VzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvaGlzdG9ncmFtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvcXVhbnRpbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy90aHJlc2hvbGQvZnJlZWRtYW5EaWFjb25pcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3RocmVzaG9sZC9zY290dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL21heC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL21lYW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9tZWRpYW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9tZXJnZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL21pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3Blcm11dGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9zY2FuLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvc2h1ZmZsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3N1bS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3RyYW5zcG9zZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3ppcC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYXhpcy9zcmMvYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWF4aXMvc3JjL2lkZW50aXR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1heGlzL3NyYy9heGlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1kaXNwYXRjaC9zcmMvZGlzcGF0Y2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0b3JBbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvbWF0Y2hlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vc3BhcnNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9lbnRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vZGF0YS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vc29ydC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vY2FsbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9uYW1lc3BhY2VzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL25hbWVzcGFjZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vYXR0ci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy93aW5kb3cuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3N0eWxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vY2xhc3NlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vdGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vaHRtbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vcmFpc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2xvd2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL2NyZWF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2luc2VydC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vcmVtb3ZlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9jbG9uZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2Rpc3BhdGNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vc2VsZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zZWxlY3RBbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2ZpbHRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9jb25zdGFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vZXhpdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vam9pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vbWVyZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL29yZGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9ub2Rlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vbm9kZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vc2l6ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vZW1wdHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2VhY2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2FwcGVuZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vZGF0dW0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1kcmFnL3NyYy9ub2V2ZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1kcmFnL3NyYy9ub2RyYWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbG9yL3NyYy9kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbG9yL3NyYy9jb2xvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2Jhc2lzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvYmFzaXNDbG9zZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9jb25zdGFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2NvbG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvcmdiLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvbnVtYmVyQXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2RhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9udW1iZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWVyL3NyYy90aW1lci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3ZhbHVlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NvdXJjZUV2ZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3BvaW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3RvdWNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL21vdXNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lci9zcmMvdGltZW91dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9zY2hlZHVsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvaW50ZXJydXB0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvdHJhbnNmb3JtL3BhcnNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvdHJhbnNmb3JtL2RlY29tcG9zZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3RyYW5zZm9ybS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi90d2Vlbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9pbnRlcnBvbGF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9hdHRyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2F0dHJUd2Vlbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9kZWxheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9kdXJhdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9lYXNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL29uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3JlbW92ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9zZWxlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vc3R5bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vc3R5bGVUd2Vlbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi90ZXh0VHdlZW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL2N1YmljLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3NlbGVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9zZWxlY3RBbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vZmlsdGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL21lcmdlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3RyYW5zaXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vdGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9lbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3NlbGVjdGlvbi90cmFuc2l0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy9zZWxlY3Rpb24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3NlbGVjdGlvbi9pbnRlcnJ1cHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL2FjdGl2ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtYnJ1c2gvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1icnVzaC9zcmMvZXZlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWJydXNoL3NyYy9ub2V2ZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1icnVzaC9zcmMvYnJ1c2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNob3JkL3NyYy9tYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jaG9yZC9zcmMvY2hvcmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNob3JkL3NyYy9hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY2hvcmQvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1wYXRoL3NyYy9wYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jaG9yZC9zcmMvcmliYm9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jb2xsZWN0aW9uL3NyYy9tYXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbGxlY3Rpb24vc3JjL25lc3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbGxlY3Rpb24vc3JjL3NldC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY29sbGVjdGlvbi9zcmMva2V5cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY29sbGVjdGlvbi9zcmMvdmFsdWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jb2xsZWN0aW9uL3NyYy9lbnRyaWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jb2xvci9zcmMvbWF0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY29sb3Ivc3JjL2xhYi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY29sb3Ivc3JjL2N1YmVoZWxpeC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY29udG91ci9zcmMvYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2FzY2VuZGluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY29udG91ci9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2NvbnRhaW5zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jb250b3VyL3NyYy9ub29wLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1jb250b3VyL3NyYy9jb250b3Vycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY29udG91ci9zcmMvYXJlYS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY29udG91ci9zcmMvYmx1ci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtY29udG91ci9zcmMvZGVuc2l0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZHJhZy9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWRyYWcvc3JjL2V2ZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1kcmFnL3NyYy9kcmFnLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1kc3Yvc3JjL2Rzdi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZHN2L3NyYy9jc3YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWRzdi9zcmMvdHN2LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1kc3Yvc3JjL2F1dG9UeXBlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1lYXNlL3NyYy9saW5lYXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL3F1YWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL3BvbHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL3Npbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvZXhwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1lYXNlL3NyYy9jaXJjbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL2JvdW5jZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvYmFjay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvZWxhc3RpYy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZmV0Y2gvc3JjL2Jsb2IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZldGNoL3NyYy9idWZmZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZldGNoL3NyYy90ZXh0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mZXRjaC9zcmMvZHN2LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mZXRjaC9zcmMvaW1hZ2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZldGNoL3NyYy9qc29uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mZXRjaC9zcmMveG1sLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JjZS9zcmMvY2VudGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JjZS9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcmNlL3NyYy9qaWdnbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9hZGQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9jb3Zlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcXVhZHRyZWUvc3JjL3F1YWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy94LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMveS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcXVhZHRyZWUvc3JjL3F1YWR0cmVlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JjZS9zcmMvY29sbGlkZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcXVhZHRyZWUvc3JjL2RhdGEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9leHRlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9maW5kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMvcmVtb3ZlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMvcm9vdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcXVhZHRyZWUvc3JjL3NpemUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy92aXNpdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcXVhZHRyZWUvc3JjL3Zpc2l0QWZ0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcmNlL3NyYy9saW5rLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JjZS9zcmMvc2ltdWxhdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9yY2Uvc3JjL21hbnlCb2R5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JjZS9zcmMvcmFkaWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JjZS9zcmMveC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9yY2Uvc3JjL3kuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvZm9ybWF0RGVjaW1hbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9ybWF0L3NyYy9leHBvbmVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9ybWF0L3NyYy9mb3JtYXRTcGVjaWZpZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvZm9ybWF0VHJpbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9ybWF0L3NyYy9mb3JtYXRQcmVmaXhBdXRvLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL2RlZmF1bHRMb2NhbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvZm9ybWF0Um91bmRlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9ybWF0L3NyYy9mb3JtYXRUeXBlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9ybWF0L3NyYy9pZGVudGl0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZm9ybWF0L3NyYy9sb2NhbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvZm9ybWF0R3JvdXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvZm9ybWF0TnVtZXJhbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvcHJlY2lzaW9uRml4ZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvcHJlY2lzaW9uUHJlZml4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL3ByZWNpc2lvblJvdW5kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2FkZGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL21hdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvbm9vcC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9zdHJlYW0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvYXJlYS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9jYXJ0ZXNpYW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvYm91bmRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NlbnRyb2lkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NvbXBvc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcm90YXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY2lyY2xlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NsaXAvYnVmZmVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BvaW50RXF1YWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY2xpcC9yZWpvaW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcG9seWdvbkNvbnRhaW5zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NsaXAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY2xpcC9hbnRpbWVyaWRpYW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY2xpcC9jaXJjbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY2xpcC9yZWN0YW5nbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY2xpcC9saW5lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NsaXAvZXh0ZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2xlbmd0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9kaXN0YW5jZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9jb250YWlucy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9ncmF0aWN1bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvaW50ZXJwb2xhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcGF0aC9hcmVhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2lkZW50aXR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BhdGgvYm91bmRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BhdGgvY2VudHJvaWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcGF0aC9jb250ZXh0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BhdGgvbWVhc3VyZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wYXRoL3N0cmluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wYXRoL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL2ZpdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL3Jlc2FtcGxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9jb25pYy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL2NvbmljRXF1YWxBcmVhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vY3lsaW5kcmljYWxFcXVhbEFyZWEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9hbGJlcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9hbGJlcnNVc2EuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9hemltdXRoYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9hemltdXRoYWxFcXVhbEFyZWEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9hemltdXRoYWxFcXVpZGlzdGFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL21lcmNhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vY29uaWNDb25mb3JtYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9lcXVpcmVjdGFuZ3VsYXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9jb25pY0VxdWlkaXN0YW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vZXF1YWxFYXJ0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL2dub21vbmljLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vaWRlbnRpdHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9uYXR1cmFsRWFydGgxLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vb3J0aG9ncmFwaGljLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vc3RlcmVvZ3JhcGhpYy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL3RyYW5zdmVyc2VNZXJjYXRvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9jbHVzdGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9jb3VudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9oaWVyYXJjaHkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2VhY2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2VhY2hBZnRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9oaWVyYXJjaHkvZWFjaEJlZm9yZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9oaWVyYXJjaHkvc3VtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9zb3J0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9wYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9hbmNlc3RvcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2Rlc2NlbmRhbnRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9sZWF2ZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2xpbmtzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2FycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3BhY2svZW5jbG9zZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9wYWNrL3NpYmxpbmdzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2FjY2Vzc29ycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9jb25zdGFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9wYWNrL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3RyZWVtYXAvcm91bmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvdHJlZW1hcC9kaWNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3BhcnRpdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9zdHJhdGlmeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy90cmVlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3RyZWVtYXAvc2xpY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvdHJlZW1hcC9zcXVhcmlmeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy90cmVlbWFwL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3RyZWVtYXAvYmluYXJ5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3RyZWVtYXAvc2xpY2VEaWNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3RyZWVtYXAvcmVzcXVhcmlmeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2Rpc2NyZXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvaHVlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvcm91bmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy96b29tLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvaHNsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvbGFiLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvaGNsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvY3ViZWhlbGl4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvcGllY2V3aXNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvcXVhbnRpemUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXBvbHlnb24vc3JjL2FyZWEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXBvbHlnb24vc3JjL2NlbnRyb2lkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1wb2x5Z29uL3NyYy9odWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1wb2x5Z29uL3NyYy9jcm9zcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcG9seWdvbi9zcmMvY29udGFpbnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXBvbHlnb24vc3JjL2xlbmd0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcmFuZG9tL3NyYy9kZWZhdWx0U291cmNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1yYW5kb20vc3JjL3VuaWZvcm0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXJhbmRvbS9zcmMvbm9ybWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1yYW5kb20vc3JjL2xvZ05vcm1hbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtcmFuZG9tL3NyYy9pcndpbkhhbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXJhbmRvbS9zcmMvYmF0ZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXJhbmRvbS9zcmMvZXhwb25lbnRpYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9pbml0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9vcmRpbmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvYmFuZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvbnVtYmVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvY29udGludW91cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL3RpY2tGb3JtYXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9saW5lYXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9pZGVudGl0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL25pY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9sb2cuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9zeW1sb2cuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9wb3cuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9xdWFudGlsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL3F1YW50aXplLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvdGhyZXNob2xkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy9pbnRlcnZhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMveWVhci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvbW9udGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL3dlZWsuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL2R1cmF0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy9kYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL2hvdXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL21pbnV0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvc2Vjb25kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy9taWxsaXNlY29uZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvdXRjV2Vlay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvdXRjRGF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy91dGNZZWFyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lLWZvcm1hdC9zcmMvbG9jYWxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lLWZvcm1hdC9zcmMvZGVmYXVsdExvY2FsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL3RpbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL3V0Y01vbnRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy91dGNIb3VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy91dGNNaW51dGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy91dGNUaW1lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvc2VxdWVudGlhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL3NlcXVlbnRpYWxRdWFudGlsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL2RpdmVyZ2luZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9jb2xvcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvY2F0ZWdvcmljYWwvY2F0ZWdvcnkxMC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9jYXRlZ29yaWNhbC9BY2NlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvY2F0ZWdvcmljYWwvRGFyazIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvY2F0ZWdvcmljYWwvUGFpcmVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2NhdGVnb3JpY2FsL1Bhc3RlbDEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvY2F0ZWdvcmljYWwvUGFzdGVsMi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9jYXRlZ29yaWNhbC9TZXQxLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2NhdGVnb3JpY2FsL1NldDIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvY2F0ZWdvcmljYWwvU2V0My5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9jYXRlZ29yaWNhbC9UYWJsZWF1MTAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvcmFtcC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvQnJCRy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUFJHbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUGlZRy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUHVPci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUmRCdS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUmRHeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUmRZbEJ1LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2RpdmVyZ2luZy9SZFlsR24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvZGl2ZXJnaW5nL1NwZWN0cmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvQnVHbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL0J1UHUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1tdWx0aS9HbkJ1LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvT3JSZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL1B1QnVHbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL1B1QnUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1tdWx0aS9QdVJkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvUmRQdS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL1lsR25CdS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL1lsR24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1tdWx0aS9ZbE9yQnIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1tdWx0aS9ZbE9yUmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1zaW5nbGUvQmx1ZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1zaW5nbGUvR3JlZW5zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtc2luZ2xlL0dyZXlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtc2luZ2xlL1B1cnBsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1zaW5nbGUvUmVkcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLXNpbmdsZS9PcmFuZ2VzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvY2l2aWRpcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL2N1YmVoZWxpeC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL3JhaW5ib3cuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1tdWx0aS9zaW5lYm93LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvdHVyYm8uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1tdWx0aS92aXJpZGlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL2NyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9sb2NhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3RBbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvdG91Y2hlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvbWF0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2FyYy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2xpbmVhci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3BvaW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvbGluZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2FyZWEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9kZXNjZW5kaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvaWRlbnRpdHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9waWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9yYWRpYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9saW5lUmFkaWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvYXJlYVJhZGlhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3BvaW50UmFkaWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9saW5rL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvc3ltYm9sL2NpcmNsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC9jcm9zcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC9kaWFtb25kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvc3ltYm9sL3N0YXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9zeW1ib2wvc3F1YXJlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvc3ltYm9sL3RyaWFuZ2xlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvc3ltYm9sL3d5ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL25vb3AuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9iYXNpcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2Jhc2lzQ2xvc2VkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvYmFzaXNPcGVuLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvYnVuZGxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvY2FyZGluYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9jYXJkaW5hbENsb3NlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2NhcmRpbmFsT3Blbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2NhdG11bGxSb20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9jYXRtdWxsUm9tQ2xvc2VkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvY2F0bXVsbFJvbU9wZW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9saW5lYXJDbG9zZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9tb25vdG9uZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL25hdHVyYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9zdGVwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb2Zmc2V0L25vbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9vcmRlci9ub25lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvc3RhY2suanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9vZmZzZXQvZXhwYW5kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb2Zmc2V0L2RpdmVyZ2luZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL29mZnNldC9zaWxob3VldHRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb2Zmc2V0L3dpZ2dsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL29yZGVyL2FwcGVhcmFuY2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9vcmRlci9hc2NlbmRpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9vcmRlci9kZXNjZW5kaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb3JkZXIvaW5zaWRlT3V0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb3JkZXIvcmV2ZXJzZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZS1mb3JtYXQvc3JjL2lzb0Zvcm1hdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdGltZS1mb3JtYXQvc3JjL2lzb1BhcnNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy10aW1lci9zcmMvaW50ZXJ2YWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXZvcm9ub2kvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy12b3Jvbm9pL3NyYy9wb2ludC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtdm9yb25vaS9zcmMvUmVkQmxhY2tUcmVlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy12b3Jvbm9pL3NyYy9FZGdlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy12b3Jvbm9pL3NyYy9DZWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy12b3Jvbm9pL3NyYy9DaXJjbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXZvcm9ub2kvc3JjL0JlYWNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy12b3Jvbm9pL3NyYy9EaWFncmFtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy12b3Jvbm9pL3NyYy92b3Jvbm9pLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kMy16b29tL3NyYy9jb25zdGFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtem9vbS9zcmMvZXZlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2QzLXpvb20vc3JjL3RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtem9vbS9zcmMvbm9ldmVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMtem9vbS9zcmMvem9vbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZDMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Rpc3BsYXkvQ29tcG9uZW50cy9WZXJ0Q29sVml6dHN4LnRzeCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcC1lcXVhbC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2Rpc3QvY3NzL2Jvb3RzdHJhcC5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Rpc3BsYXkvc3R5bGVzaGVldHMvc3R5bGUuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvZGlzcGxheS9Db21wb25lbnRzL1RpbWVWaXp0c3gudHN4Iiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jcmVhdGUtcmVhY3QtY29udGV4dC9saWIvaW1wbGVtZW50YXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1rZXlzL2ltcGxlbWVudGF0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pcy1hcmd1bWVudHMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1pcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXMtcmVnZXgvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hhcy9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Z1bmN0aW9uLWJpbmQvaW1wbGVtZW50YXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlZ2V4cC5wcm90b3R5cGUuZmxhZ3MvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2VzLWFic3RyYWN0L2hlbHBlcnMvY2FsbEJpbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2VzLWFic3RyYWN0L0dldEludHJpbnNpYy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGFzLXN5bWJvbHMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hhcy1zeW1ib2xzL3NoYW1zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWdleHAucHJvdG90eXBlLmZsYWdzL3NoaW0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lzLWRhdGUtb2JqZWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0c3RyYXAvbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvQ1NTVHJhbnNpdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvY2xhc3MvYWRkQ2xhc3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy9jbGFzcy9oYXNDbGFzcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvY2xhc3MvcmVtb3ZlQ2xhc3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0c3RyYXAvbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvUmVwbGFjZVRyYW5zaXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0c3RyYXAvbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvdXRpbHMvQ2hpbGRNYXBwaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZXNvbHZlLXBhdGhuYW1lL2VzbS9yZXNvbHZlLXBhdGhuYW1lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90aW55LWludmFyaWFudC9kaXN0L3RpbnktaW52YXJpYW50LmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lc20vaGlzdG9yeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbWluaS1jcmVhdGUtcmVhY3QtY29udGV4dC9kaXN0L2VzbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzbS9yZWFjdC1yb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXNtL3JlYWN0LXJvdXRlci1kb20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2Fzc2VydFRoaXNJbml0aWFsaXplZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3RzdHJhcC9lcy91dGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3RzdHJhcC9lcy9Ecm9wZG93bkNvbnRleHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0c3RyYXAvZXMvRHJvcGRvd25JdGVtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdHN0cmFwL2VzL0NvbnRhaW5lci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3RzdHJhcC9lcy9Sb3cuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0c3RyYXAvZXMvQ29sLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdHN0cmFwL2VzL0J1dHRvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcG9wcGVyL2xpYi9lc20vTWFuYWdlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3RzdHJhcC9lcy9Ecm9wZG93bi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3RzdHJhcC9lcy9CdXR0b25Ecm9wZG93bi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcG9wcGVyL2xpYi9lc20vdXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXBvcHBlci9saWIvZXNtL1JlZmVyZW5jZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3RzdHJhcC9lcy9Ecm9wZG93blRvZ2dsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcG9wcGVyL2xpYi9lc20vUG9wcGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdHN0cmFwL2VzL0Ryb3Bkb3duTWVudS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvZGlzcGxheS9Db21wb25lbnRzL0NvbnRleHQvUHJvamVjdENvbnRleHQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Rpc3BsYXkvQ29tcG9uZW50cy9Vc2VyRGFzaGJvYXJkLmpzeCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3RzdHJhcC9lcy9Gb3JtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdHN0cmFwL2VzL0Zvcm1Hcm91cC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3RzdHJhcC9lcy9MYWJlbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3RzdHJhcC9lcy9JbnB1dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3RzdHJhcC9lcy9DYXJkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdHN0cmFwL2VzL0NhcmRCb2R5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdHN0cmFwL2VzL0NhcmRUaXRsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3RzdHJhcC9lcy9DYXJkU3VidGl0bGUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Rpc3BsYXkvQ29tcG9uZW50cy9RdWVyeUl0ZW0uanN4Iiwid2VicGFjazovLy8uL3NyYy9kaXNwbGF5L0NvbXBvbmVudHMvUXVlcnlMaXN0LmpzeCIsIndlYnBhY2s6Ly8vLi9zcmMvZGlzcGxheS9Db21wb25lbnRzL0NhdGVnb3J5RGF0YS5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2Rpc3BsYXkvQ29tcG9uZW50cy9DYXRlZ29yeS5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2Rpc3BsYXkvQ29tcG9uZW50cy9DYXRlZ29yaWVzQ29udGFpbmVyLmpzeCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3RzdHJhcC9lcy9Qb3J0YWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0c3RyYXAvZXMvRmFkZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3RzdHJhcC9lcy9Nb2RhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3RzdHJhcC9lcy9Nb2RhbEhlYWRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3RzdHJhcC9lcy9Nb2RhbEJvZHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0c3RyYXAvZXMvTW9kYWxGb290ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Rpc3BsYXkvQ29tcG9uZW50cy9Db25maWdTYXZlTW9kYWwuanN4Iiwid2VicGFjazovLy8uL3NyYy9kaXNwbGF5L0NvbXBvbmVudHMvQ29uZmlnUmVzZXRNb2RhbC5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2Rpc3BsYXkvQ29tcG9uZW50cy9Db25maWdEYXNoYm9hcmQuanN4Iiwid2VicGFjazovLy8uL3NyYy9kaXNwbGF5L0NvbXBvbmVudHMvUHJvamVjdFNlbGVjdC5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2Rpc3BsYXkvaW5kZXguanN4Iiwid2VicGFjazovLy8uL3NyYy9kaXNwbGF5L0NvbXBvbmVudHMvQXBwLmpzeCJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImhhc093biIsImNsYXNzTmFtZXMiLCJjbGFzc2VzIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiYXJnIiwiYXJnVHlwZSIsInB1c2giLCJBcnJheSIsImlzQXJyYXkiLCJpbm5lciIsImFwcGx5Iiwiam9pbiIsImRlZmF1bHQiLCJzZWxmIiwiUmVmZXJlbmNlRXJyb3IiLCJvYmoiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImFwaSIsImNvbnRlbnQiLCJvcHRpb25zIiwiZXhwb3J0ZWQiLCJsb2NhbHMiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJjb25zdHJ1Y3RvciIsIl9fcHJvdG9fXyIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwiX2V4dGVuZHMiLCJhc3NpZ24iLCJ0YXJnZXQiLCJzb3VyY2UiLCJ0aGlzIiwiX0NTU1RyYW5zaXRpb24iLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX1JlcGxhY2VUcmFuc2l0aW9uIiwiX1RyYW5zaXRpb25Hcm91cCIsIl9UcmFuc2l0aW9uIiwiVHJhbnNpdGlvbiIsIlRyYW5zaXRpb25Hcm91cCIsIlJlcGxhY2VUcmFuc2l0aW9uIiwiQ1NTVHJhbnNpdGlvbiIsImciLCJGdW5jdGlvbiIsImUiLCJ3aW5kb3ciLCJpbXBsZW1lbnRhdGlvbiIsImtleXMiLCJoYXNTeW1ib2xzIiwidG9TdHIiLCJ0b1N0cmluZyIsImNvbmNhdCIsIm9yaWdEZWZpbmVQcm9wZXJ0eSIsInN1cHBvcnRzRGVzY3JpcHRvcnMiLCJfIiwieCIsImFyZVByb3BlcnR5RGVzY3JpcHRvcnNTdXBwb3J0ZWQiLCJwcmVkaWNhdGUiLCJmbiIsImRlZmluZVByb3BlcnRpZXMiLCJtYXAiLCJwcmVkaWNhdGVzIiwicHJvcHMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJnbG9iYWwiLCJ3YXJuaW5nIiwiaXNhcnJheSIsInBhdGhUb1JlZ2V4cCIsInBhcnNlIiwiY29tcGlsZSIsInN0ciIsInRva2Vuc1RvRnVuY3Rpb24iLCJ0b2tlbnNUb1JlZ0V4cCIsIlBBVEhfUkVHRVhQIiwiUmVnRXhwIiwicmVzIiwidG9rZW5zIiwiaW5kZXgiLCJwYXRoIiwiZGVmYXVsdERlbGltaXRlciIsImRlbGltaXRlciIsImV4ZWMiLCJlc2NhcGVkIiwib2Zmc2V0Iiwic2xpY2UiLCJuZXh0IiwicHJlZml4IiwiY2FwdHVyZSIsImdyb3VwIiwibW9kaWZpZXIiLCJhc3RlcmlzayIsInBhcnRpYWwiLCJyZXBlYXQiLCJvcHRpb25hbCIsInBhdHRlcm4iLCJlc2NhcGVHcm91cCIsImVzY2FwZVN0cmluZyIsInN1YnN0ciIsImVuY29kZVVSSUNvbXBvbmVudFByZXR0eSIsImVuY29kZVVSSSIsInJlcGxhY2UiLCJjaGFyQ29kZUF0IiwidG9VcHBlckNhc2UiLCJtYXRjaGVzIiwiZmxhZ3MiLCJvcHRzIiwiZGF0YSIsImVuY29kZSIsInByZXR0eSIsImVuY29kZVVSSUNvbXBvbmVudCIsInRva2VuIiwic2VnbWVudCIsIlR5cGVFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJqIiwidGVzdCIsImF0dGFjaEtleXMiLCJyZSIsInNlbnNpdGl2ZSIsInN0cmljdCIsImVuZCIsInJvdXRlIiwiZW5kc1dpdGhEZWxpbWl0ZXIiLCJncm91cHMiLCJtYXRjaCIsInJlZ2V4cFRvUmVnZXhwIiwicGFydHMiLCJhcnJheVRvUmVnZXhwIiwic3RyaW5nVG9SZWdleHAiLCJfcmVhY3QyIiwiX2ltcGxlbWVudGF0aW9uMiIsImNyZWF0ZUNvbnRleHQiLCJpc0Jyb3dzZXIiLCJkb2N1bWVudCIsIm5hdmlnYXRvciIsInRpbWVvdXREdXJhdGlvbiIsImxvbmdlclRpbWVvdXRCcm93c2VycyIsInVzZXJBZ2VudCIsImluZGV4T2YiLCJkZWJvdW5jZSIsIlByb21pc2UiLCJjYWxsZWQiLCJyZXNvbHZlIiwidGhlbiIsInNjaGVkdWxlZCIsInNldFRpbWVvdXQiLCJpc0Z1bmN0aW9uIiwiZnVuY3Rpb25Ub0NoZWNrIiwiZ2V0U3R5bGVDb21wdXRlZFByb3BlcnR5IiwiZWxlbWVudCIsIm5vZGVUeXBlIiwiY3NzIiwib3duZXJEb2N1bWVudCIsImRlZmF1bHRWaWV3IiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImdldFBhcmVudE5vZGUiLCJub2RlTmFtZSIsInBhcmVudE5vZGUiLCJob3N0IiwiZ2V0U2Nyb2xsUGFyZW50IiwiYm9keSIsIl9nZXRTdHlsZUNvbXB1dGVkUHJvcCIsIm92ZXJmbG93Iiwib3ZlcmZsb3dYIiwib3ZlcmZsb3dZIiwiZ2V0UmVmZXJlbmNlTm9kZSIsInJlZmVyZW5jZSIsInJlZmVyZW5jZU5vZGUiLCJpc0lFMTEiLCJNU0lucHV0TWV0aG9kQ29udGV4dCIsImRvY3VtZW50TW9kZSIsImlzSUUxMCIsImlzSUUiLCJ2ZXJzaW9uIiwiZ2V0T2Zmc2V0UGFyZW50IiwiZG9jdW1lbnRFbGVtZW50Iiwibm9PZmZzZXRQYXJlbnQiLCJvZmZzZXRQYXJlbnQiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJnZXRSb290Iiwibm9kZSIsImZpbmRDb21tb25PZmZzZXRQYXJlbnQiLCJlbGVtZW50MSIsImVsZW1lbnQyIiwib3JkZXIiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsIk5vZGUiLCJET0NVTUVOVF9QT1NJVElPTl9GT0xMT1dJTkciLCJzdGFydCIsInJhbmdlIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInNldEVuZCIsImNvbW1vbkFuY2VzdG9yQ29udGFpbmVyIiwiY29udGFpbnMiLCJmaXJzdEVsZW1lbnRDaGlsZCIsImVsZW1lbnQxcm9vdCIsImdldFNjcm9sbCIsInNpZGUiLCJ1bmRlZmluZWQiLCJ1cHBlclNpZGUiLCJodG1sIiwic2Nyb2xsaW5nRWxlbWVudCIsImluY2x1ZGVTY3JvbGwiLCJyZWN0Iiwic3VidHJhY3QiLCJzY3JvbGxUb3AiLCJzY3JvbGxMZWZ0IiwidG9wIiwiYm90dG9tIiwibGVmdCIsInJpZ2h0IiwiZ2V0Qm9yZGVyc1NpemUiLCJzdHlsZXMiLCJheGlzIiwic2lkZUEiLCJzaWRlQiIsInBhcnNlRmxvYXQiLCJnZXRTaXplIiwiY29tcHV0ZWRTdHlsZSIsIk1hdGgiLCJtYXgiLCJwYXJzZUludCIsImdldFdpbmRvd1NpemVzIiwiaGVpZ2h0Iiwid2lkdGgiLCJjbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJjcmVhdGVDbGFzcyIsImRlc2NyaXB0b3IiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJnZXRDbGllbnRSZWN0Iiwib2Zmc2V0cyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInJlc3VsdCIsInNpemVzIiwiY2xpZW50V2lkdGgiLCJjbGllbnRIZWlnaHQiLCJob3JpelNjcm9sbGJhciIsIm9mZnNldFdpZHRoIiwidmVydFNjcm9sbGJhciIsIm9mZnNldEhlaWdodCIsImdldE9mZnNldFJlY3RSZWxhdGl2ZVRvQXJiaXRyYXJ5Tm9kZSIsImNoaWxkcmVuIiwicGFyZW50IiwiZml4ZWRQb3NpdGlvbiIsImlzSFRNTCIsImNoaWxkcmVuUmVjdCIsInBhcmVudFJlY3QiLCJzY3JvbGxQYXJlbnQiLCJib3JkZXJUb3BXaWR0aCIsImJvcmRlckxlZnRXaWR0aCIsIm1hcmdpblRvcCIsIm1hcmdpbkxlZnQiLCJnZXRWaWV3cG9ydE9mZnNldFJlY3RSZWxhdGl2ZVRvQXJ0Yml0cmFyeU5vZGUiLCJleGNsdWRlU2Nyb2xsIiwicmVsYXRpdmVPZmZzZXQiLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJpc0ZpeGVkIiwiZ2V0Rml4ZWRQb3NpdGlvbk9mZnNldFBhcmVudCIsInBhcmVudEVsZW1lbnQiLCJlbCIsImdldEJvdW5kYXJpZXMiLCJwb3BwZXIiLCJwYWRkaW5nIiwiYm91bmRhcmllc0VsZW1lbnQiLCJib3VuZGFyaWVzIiwiYm91bmRhcmllc05vZGUiLCJfZ2V0V2luZG93U2l6ZXMiLCJpc1BhZGRpbmdOdW1iZXIiLCJnZXRBcmVhIiwiX3JlZiIsImNvbXB1dGVBdXRvUGxhY2VtZW50IiwicGxhY2VtZW50IiwicmVmUmVjdCIsInJlY3RzIiwic29ydGVkQXJlYXMiLCJhcmVhIiwic29ydCIsImEiLCJiIiwiZmlsdGVyZWRBcmVhcyIsImZpbHRlciIsIl9yZWYyIiwiY29tcHV0ZWRQbGFjZW1lbnQiLCJ2YXJpYXRpb24iLCJzcGxpdCIsImdldFJlZmVyZW5jZU9mZnNldHMiLCJzdGF0ZSIsImNvbW1vbk9mZnNldFBhcmVudCIsImdldE91dGVyU2l6ZXMiLCJtYXJnaW5Cb3R0b20iLCJ5IiwibWFyZ2luUmlnaHQiLCJnZXRPcHBvc2l0ZVBsYWNlbWVudCIsImhhc2giLCJtYXRjaGVkIiwiZ2V0UG9wcGVyT2Zmc2V0cyIsInJlZmVyZW5jZU9mZnNldHMiLCJwb3BwZXJSZWN0IiwicG9wcGVyT2Zmc2V0cyIsImlzSG9yaXoiLCJtYWluU2lkZSIsInNlY29uZGFyeVNpZGUiLCJtZWFzdXJlbWVudCIsInNlY29uZGFyeU1lYXN1cmVtZW50IiwiZmluZCIsImFyciIsImNoZWNrIiwicnVuTW9kaWZpZXJzIiwibW9kaWZpZXJzIiwiZW5kcyIsInByb3AiLCJmaW5kSW5kZXgiLCJjdXIiLCJmb3JFYWNoIiwid2FybiIsImVuYWJsZWQiLCJ1cGRhdGUiLCJpc0Rlc3Ryb3llZCIsImFycm93U3R5bGVzIiwiYXR0cmlidXRlcyIsImZsaXBwZWQiLCJwb3NpdGlvbkZpeGVkIiwiZmxpcCIsIm9yaWdpbmFsUGxhY2VtZW50IiwicG9zaXRpb24iLCJpc0NyZWF0ZWQiLCJvblVwZGF0ZSIsIm9uQ3JlYXRlIiwiaXNNb2RpZmllckVuYWJsZWQiLCJtb2RpZmllck5hbWUiLCJzb21lIiwiZ2V0U3VwcG9ydGVkUHJvcGVydHlOYW1lIiwicHJlZml4ZXMiLCJ1cHBlclByb3AiLCJjaGFyQXQiLCJ0b0NoZWNrIiwic3R5bGUiLCJkZXN0cm95IiwicmVtb3ZlQXR0cmlidXRlIiwid2lsbENoYW5nZSIsImRpc2FibGVFdmVudExpc3RlbmVycyIsInJlbW92ZU9uRGVzdHJveSIsInJlbW92ZUNoaWxkIiwiZ2V0V2luZG93Iiwic2V0dXBFdmVudExpc3RlbmVycyIsInVwZGF0ZUJvdW5kIiwiYWRkRXZlbnRMaXN0ZW5lciIsInBhc3NpdmUiLCJzY3JvbGxFbGVtZW50IiwiYXR0YWNoVG9TY3JvbGxQYXJlbnRzIiwiZXZlbnQiLCJjYWxsYmFjayIsInNjcm9sbFBhcmVudHMiLCJpc0JvZHkiLCJldmVudHNFbmFibGVkIiwiZW5hYmxlRXZlbnRMaXN0ZW5lcnMiLCJzY2hlZHVsZVVwZGF0ZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImlzTnVtZXJpYyIsImlzTmFOIiwiaXNGaW5pdGUiLCJzZXRTdHlsZXMiLCJ1bml0IiwiaXNGaXJlZm94IiwiaXNNb2RpZmllclJlcXVpcmVkIiwicmVxdWVzdGluZ05hbWUiLCJyZXF1ZXN0ZWROYW1lIiwicmVxdWVzdGluZyIsImlzUmVxdWlyZWQiLCJfcmVxdWVzdGluZyIsInJlcXVlc3RlZCIsInBsYWNlbWVudHMiLCJ2YWxpZFBsYWNlbWVudHMiLCJjbG9ja3dpc2UiLCJjb3VudGVyIiwicmV2ZXJzZSIsIkJFSEFWSU9SUyIsInBhcnNlT2Zmc2V0IiwiYmFzZVBsYWNlbWVudCIsInVzZUhlaWdodCIsImZyYWdtZW50cyIsImZyYWciLCJ0cmltIiwiZGl2aWRlciIsInNlYXJjaCIsInNwbGl0UmVnZXgiLCJvcHMiLCJvcCIsIm1lcmdlV2l0aFByZXZpb3VzIiwicmVkdWNlIiwidG9WYWx1ZSIsImluZGV4MiIsIkRlZmF1bHRzIiwic2hpZnQiLCJzaGlmdHZhcmlhdGlvbiIsIl9kYXRhJG9mZnNldHMiLCJpc1ZlcnRpY2FsIiwic2hpZnRPZmZzZXRzIiwicHJldmVudE92ZXJmbG93IiwidHJhbnNmb3JtUHJvcCIsInBvcHBlclN0eWxlcyIsInRyYW5zZm9ybSIsInByaW9yaXR5IiwicHJpbWFyeSIsImVzY2FwZVdpdGhSZWZlcmVuY2UiLCJzZWNvbmRhcnkiLCJtaW4iLCJrZWVwVG9nZXRoZXIiLCJmbG9vciIsIm9wU2lkZSIsImFycm93IiwiX2RhdGEkb2Zmc2V0cyRhcnJvdyIsImFycm93RWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJsZW4iLCJzaWRlQ2FwaXRhbGl6ZWQiLCJ0b0xvd2VyQ2FzZSIsImFsdFNpZGUiLCJhcnJvd0VsZW1lbnRTaXplIiwiY2VudGVyIiwicG9wcGVyTWFyZ2luU2lkZSIsInBvcHBlckJvcmRlclNpZGUiLCJzaWRlVmFsdWUiLCJyb3VuZCIsInBsYWNlbWVudE9wcG9zaXRlIiwiZmxpcE9yZGVyIiwiYmVoYXZpb3IiLCJzdGVwIiwicmVmT2Zmc2V0cyIsIm92ZXJsYXBzUmVmIiwib3ZlcmZsb3dzTGVmdCIsIm92ZXJmbG93c1JpZ2h0Iiwib3ZlcmZsb3dzVG9wIiwib3ZlcmZsb3dzQm90dG9tIiwib3ZlcmZsb3dzQm91bmRhcmllcyIsImZsaXBwZWRWYXJpYXRpb25CeVJlZiIsImZsaXBWYXJpYXRpb25zIiwiZmxpcHBlZFZhcmlhdGlvbkJ5Q29udGVudCIsImZsaXBWYXJpYXRpb25zQnlDb250ZW50IiwiZmxpcHBlZFZhcmlhdGlvbiIsImdldE9wcG9zaXRlVmFyaWF0aW9uIiwic3VidHJhY3RMZW5ndGgiLCJoaWRlIiwiYm91bmQiLCJjb21wdXRlU3R5bGUiLCJsZWdhY3lHcHVBY2NlbGVyYXRpb25PcHRpb24iLCJncHVBY2NlbGVyYXRpb24iLCJvZmZzZXRQYXJlbnRSZWN0Iiwic2hvdWxkUm91bmQiLCJub1JvdW5kIiwidiIsInJlZmVyZW5jZVdpZHRoIiwicG9wcGVyV2lkdGgiLCJpc1ZhcmlhdGlvbiIsImhvcml6b250YWxUb0ludGVnZXIiLCJ2ZXJ0aWNhbFRvSW50ZWdlciIsImdldFJvdW5kZWRPZmZzZXRzIiwiZGV2aWNlUGl4ZWxSYXRpbyIsInByZWZpeGVkUHJvcGVydHkiLCJpbnZlcnRUb3AiLCJpbnZlcnRMZWZ0IiwiYXBwbHlTdHlsZSIsInNldEF0dHJpYnV0ZSIsIm9uTG9hZCIsIm1vZGlmaWVyT3B0aW9ucyIsIlBvcHBlciIsIl90aGlzIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwianF1ZXJ5IiwiVXRpbHMiLCJQb3BwZXJVdGlscyIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwidmFsIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJ0ZXN0MyIsImxldHRlciIsInNob3VsZFVzZU5hdGl2ZSIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJtZW1vIiwiaXNPbGRJRSIsIkJvb2xlYW4iLCJhbGwiLCJhdG9iIiwiZ2V0VGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJzdHlsZXNJbkRvbSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsIm1vZHVsZXNUb0RvbSIsImxpc3QiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJpdGVtIiwiaWQiLCJiYXNlIiwiY291bnQiLCJtZWRpYSIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkU3R5bGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwibm9uY2UiLCJpbnNlcnQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJyZXBsYWNlbWVudCIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJyZW1vdmUiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNzc05vZGUiLCJjcmVhdGVUZXh0Tm9kZSIsImNoaWxkTm9kZXMiLCJpbnNlcnRCZWZvcmUiLCJhcHBseVRvVGFnIiwiYnRvYSIsInVuZXNjYXBlIiwiZmlyc3RDaGlsZCIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJzdHlsZUluZGV4IiwicmVtb3ZlU3R5bGVFbGVtZW50IiwibmV3T2JqIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4Iiwic3BsaWNlIiwidXNlU291cmNlTWFwIiwiY3NzTWFwcGluZyIsInNvdXJjZU1hcHBpbmciLCJiYXNlNjQiLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZVJvb3QiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibWVkaWFRdWVyeSIsImRlZHVwZSIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJpc0FyZ3MiLCJvcmlnS2V5cyIsImtleXNTaGltIiwib3JpZ2luYWxLZXlzIiwic2hpbSIsImFyZ3MiLCJjYWxsZWUiLCIkT2JqZWN0IiwiJFR5cGVFcnJvciIsImlnbm9yZUNhc2UiLCJtdWx0aWxpbmUiLCJkb3RBbGwiLCJ1bmljb2RlIiwic3RpY2t5IiwiJGdPUEQiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJFWElUSU5HIiwiRU5URVJFRCIsIkVOVEVSSU5HIiwiRVhJVEVEIiwiVU5NT1VOVEVEIiwiUHJvcFR5cGVzIiwiZGVzYyIsInNldCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX3JlYWN0IiwiX3JlYWN0RG9tIiwiX3JlYWN0TGlmZWN5Y2xlc0NvbXBhdCIsIl9SZWFjdCRDb21wb25lbnQiLCJjb250ZXh0IiwiaW5pdGlhbFN0YXR1cyIsInBhcmVudEdyb3VwIiwidHJhbnNpdGlvbkdyb3VwIiwiYXBwZWFyIiwiaXNNb3VudGluZyIsImVudGVyIiwiYXBwZWFyU3RhdHVzIiwiaW4iLCJ1bm1vdW50T25FeGl0IiwibW91bnRPbkVudGVyIiwic3RhdHVzIiwibmV4dENhbGxiYWNrIiwiX3Byb3RvIiwiZ2V0Q2hpbGRDb250ZXh0IiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwicHJldlN0YXRlIiwiY29tcG9uZW50RGlkTW91bnQiLCJ1cGRhdGVTdGF0dXMiLCJjb21wb25lbnREaWRVcGRhdGUiLCJwcmV2UHJvcHMiLCJuZXh0U3RhdHVzIiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJjYW5jZWxOZXh0Q2FsbGJhY2siLCJnZXRUaW1lb3V0cyIsImV4aXQiLCJ0aW1lb3V0IiwibW91bnRpbmciLCJmaW5kRE9NTm9kZSIsInBlcmZvcm1FbnRlciIsInBlcmZvcm1FeGl0Iiwic2V0U3RhdGUiLCJfdGhpczIiLCJhcHBlYXJpbmciLCJ0aW1lb3V0cyIsImVudGVyVGltZW91dCIsIm9uRW50ZXIiLCJzYWZlU2V0U3RhdGUiLCJvbkVudGVyaW5nIiwib25UcmFuc2l0aW9uRW5kIiwib25FbnRlcmVkIiwiX3RoaXMzIiwib25FeGl0Iiwib25FeGl0aW5nIiwib25FeGl0ZWQiLCJjYW5jZWwiLCJuZXh0U3RhdGUiLCJzZXROZXh0Q2FsbGJhY2siLCJfdGhpczQiLCJhY3RpdmUiLCJoYW5kbGVyIiwiZG9lc05vdEhhdmVUaW1lb3V0T3JMaXN0ZW5lciIsImFkZEVuZExpc3RlbmVyIiwicmVuZGVyIiwiX3RoaXMkcHJvcHMiLCJjaGlsZFByb3BzIiwiZXhjbHVkZWQiLCJzb3VyY2VLZXlzIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJjaGlsZCIsIkNoaWxkcmVuIiwib25seSIsImNsb25lRWxlbWVudCIsIkNvbXBvbmVudCIsIm5vb3AiLCJjb250ZXh0VHlwZXMiLCJjaGlsZENvbnRleHRUeXBlcyIsInByb3BUeXBlcyIsImRlZmF1bHRQcm9wcyIsIl9kZWZhdWx0IiwicG9seWZpbGwiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwibmV4dFByb3BzIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90RmxhZyIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90IiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJpc1JlYWN0Q29tcG9uZW50IiwiZm91bmRXaWxsTW91bnROYW1lIiwiZm91bmRXaWxsUmVjZWl2ZVByb3BzTmFtZSIsImZvdW5kV2lsbFVwZGF0ZU5hbWUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudE5hbWUiLCJkaXNwbGF5TmFtZSIsIm5ld0FwaU5hbWUiLCJtYXliZVNuYXBzaG90Iiwic25hcHNob3QiLCJfX3N1cHByZXNzRGVwcmVjYXRpb25XYXJuaW5nIiwiY2xhc3NOYW1lc1NoYXBlIiwidGltZW91dHNTaGFwZSIsIl9wcm9wVHlwZXMiLCJfQ2hpbGRNYXBwaW5nIiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsInZhbHVlcyIsImsiLCJoYW5kbGVFeGl0ZWQiLCJmaXJzdFJlbmRlciIsImFwcGVhcmVkIiwibW91bnRlZCIsInByZXZDaGlsZE1hcHBpbmciLCJnZXRJbml0aWFsQ2hpbGRNYXBwaW5nIiwiZ2V0TmV4dENoaWxkTWFwcGluZyIsImN1cnJlbnRDaGlsZE1hcHBpbmciLCJnZXRDaGlsZE1hcHBpbmciLCJjb21wb25lbnQiLCJjaGlsZEZhY3RvcnkiLCJOYU4iLCJmIiwiY29tcGFyZSIsImFzY2VuZGluZyIsImxvIiwiaGkiLCJtaWQiLCJhc2NlbmRpbmdCaXNlY3QiLCJiaXNlY3RvciIsImJpc2VjdFJpZ2h0IiwiYmlzZWN0TGVmdCIsImJpc2VjdCIsInBhaXIiLCJhcnJheSIsInBhaXJzIiwiaTAiLCJpMSIsInZhbHVlMCIsIm4wIiwidmFsdWVzMCIsIm4xIiwidmFsdWVzMSIsImRlbHRhIiwibWVhbiIsInN1bSIsInZhbHVlb2YiLCJudW1iZXIiLCJ2YXJpYW5jZSIsInNxcnQiLCJzdG9wIiwiY2VpbCIsImUxMCIsImU1IiwiZTIiLCJ0aWNrcyIsInRpY2tJbmNyZW1lbnQiLCJwb3dlciIsImxvZyIsIkxOMTAiLCJwb3ciLCJ0aWNrU3RlcCIsInN0ZXAwIiwiYWJzIiwic3RlcDEiLCJMTjIiLCJpZGVudGl0eSIsImRvbWFpbiIsInRocmVzaG9sZCIsInN0dXJnZXMiLCJoaXN0b2dyYW0iLCJ4eiIsIngwIiwieDEiLCJ0eiIsInBvcCIsImJpbiIsImJpbnMiLCJjb25zdGFudCIsInRocmVzaG9sZHMiLCJxdWFudGlsZSIsImRldmlhdGlvbiIsIm51bWJlcnMiLCJtZXJnZWQiLCJhcnJheXMiLCJpbmRleGVzIiwicGVybXV0ZXMiLCJ4aSIsInhqIiwicmFuZG9tIiwibWF0cml4IiwidHJhbnNwb3NlIiwicm93IiwidHJhbnNsYXRlWCIsInRyYW5zbGF0ZVkiLCJzY2FsZSIsImJhbmR3aWR0aCIsImVudGVyaW5nIiwiX19heGlzIiwib3JpZW50IiwidGlja0FyZ3VtZW50cyIsInRpY2tWYWx1ZXMiLCJ0aWNrRm9ybWF0IiwidGlja1NpemVJbm5lciIsInRpY2tTaXplT3V0ZXIiLCJ0aWNrUGFkZGluZyIsImZvcm1hdCIsInNwYWNpbmciLCJyYW5nZTAiLCJyYW5nZTEiLCJjb3B5Iiwic2VsZWN0aW9uIiwic2VsZWN0QWxsIiwidGljayIsInRpY2tFeGl0IiwidGlja0VudGVyIiwiYXBwZW5kIiwiYXR0ciIsImxpbmUiLCJzZWxlY3QiLCJ0ZXh0IiwibWVyZ2UiLCJ0cmFuc2l0aW9uIiwiZ2V0QXR0cmlidXRlIiwiZWFjaCIsInRpY2tTaXplIiwiYXhpc1RvcCIsImF4aXNSaWdodCIsImF4aXNCb3R0b20iLCJheGlzTGVmdCIsImRpc3BhdGNoIiwiRGlzcGF0Y2giLCJwYXJzZVR5cGVuYW1lcyIsInR5cGVuYW1lcyIsInR5cGVzIiwidHlwZSIsIm9uIiwidHlwZW5hbWUiLCJUIiwidGhhdCIsIm5vbmUiLCJzZWxlY3RvciIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJFbnRlck5vZGUiLCJkYXR1bSIsIm5hbWVzcGFjZVVSSSIsIl9uZXh0IiwiX3BhcmVudCIsIl9fZGF0YV9fIiwiYmluZEluZGV4IiwiZ3JvdXBMZW5ndGgiLCJkYXRhTGVuZ3RoIiwiYmluZEtleSIsImtleVZhbHVlIiwibm9kZUJ5S2V5VmFsdWUiLCJrZXlWYWx1ZXMiLCJ4aHRtbCIsInN2ZyIsInhsaW5rIiwieG1sIiwieG1sbnMiLCJuYW1lc3BhY2VzIiwic3BhY2UiLCJsb2NhbCIsImF0dHJSZW1vdmUiLCJhdHRyUmVtb3ZlTlMiLCJmdWxsbmFtZSIsInJlbW92ZUF0dHJpYnV0ZU5TIiwiYXR0ckNvbnN0YW50IiwiYXR0ckNvbnN0YW50TlMiLCJzZXRBdHRyaWJ1dGVOUyIsImF0dHJGdW5jdGlvbiIsImF0dHJGdW5jdGlvbk5TIiwic3R5bGVSZW1vdmUiLCJyZW1vdmVQcm9wZXJ0eSIsInN0eWxlQ29uc3RhbnQiLCJzZXRQcm9wZXJ0eSIsInN0eWxlRnVuY3Rpb24iLCJzdHlsZVZhbHVlIiwiZ2V0UHJvcGVydHlWYWx1ZSIsInByb3BlcnR5UmVtb3ZlIiwicHJvcGVydHlDb25zdGFudCIsInByb3BlcnR5RnVuY3Rpb24iLCJjbGFzc0FycmF5Iiwic3RyaW5nIiwiY2xhc3NMaXN0IiwiQ2xhc3NMaXN0IiwiX25vZGUiLCJfbmFtZXMiLCJjbGFzc2VkQWRkIiwibmFtZXMiLCJhZGQiLCJjbGFzc2VkUmVtb3ZlIiwiY2xhc3NlZFRydWUiLCJjbGFzc2VkRmFsc2UiLCJjbGFzc2VkRnVuY3Rpb24iLCJ0ZXh0UmVtb3ZlIiwidGV4dENvbnRlbnQiLCJ0ZXh0Q29uc3RhbnQiLCJ0ZXh0RnVuY3Rpb24iLCJodG1sUmVtb3ZlIiwiaW5uZXJIVE1MIiwiaHRtbENvbnN0YW50IiwiaHRtbEZ1bmN0aW9uIiwicmFpc2UiLCJuZXh0U2libGluZyIsImxvd2VyIiwicHJldmlvdXNTaWJsaW5nIiwiY3JlYXRvckluaGVyaXQiLCJ1cmkiLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdG9yRml4ZWQiLCJuYW1lc3BhY2UiLCJjb25zdGFudE51bGwiLCJzZWxlY3Rpb25fY2xvbmVTaGFsbG93IiwiY2xvbmUiLCJjbG9uZU5vZGUiLCJzZWxlY3Rpb25fY2xvbmVEZWVwIiwiZmlsdGVyRXZlbnRzIiwibW91c2VlbnRlciIsIm1vdXNlbGVhdmUiLCJmaWx0ZXJDb250ZXh0TGlzdGVuZXIiLCJsaXN0ZW5lciIsImNvbnRleHRMaXN0ZW5lciIsInJlbGF0ZWQiLCJyZWxhdGVkVGFyZ2V0IiwiZXZlbnQxIiwiZXZlbnQwIiwib25SZW1vdmUiLCJfX29uIiwib25BZGQiLCJ3cmFwIiwiY3VzdG9tRXZlbnQiLCJzb3VyY2VFdmVudCIsImRpc3BhdGNoRXZlbnQiLCJwYXJhbXMiLCJDdXN0b21FdmVudCIsImNyZWF0ZUV2ZW50IiwiaW5pdEV2ZW50IiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJkZXRhaWwiLCJkaXNwYXRjaENvbnN0YW50IiwiZGlzcGF0Y2hGdW5jdGlvbiIsIlNlbGVjdGlvbiIsInBhcmVudHMiLCJfZ3JvdXBzIiwiX3BhcmVudHMiLCJzdWJncm91cHMiLCJzdWJub2RlIiwic3ViZ3JvdXAiLCJzZWxlY3RvckFsbCIsIm1hdGNoZXIiLCJzaXplIiwiZW50ZXJHcm91cCIsInVwZGF0ZUdyb3VwIiwicHJldmlvdXMiLCJfZW50ZXIiLCJfZXhpdCIsInNwYXJzZSIsIm9uZW50ZXIiLCJvbnVwZGF0ZSIsIm9uZXhpdCIsImdyb3VwczAiLCJncm91cHMxIiwibTAiLCJtMSIsIm1lcmdlcyIsImdyb3VwMCIsImdyb3VwMSIsImNvbXBhcmVOb2RlIiwic29ydGdyb3VwcyIsInNvcnRncm91cCIsIm5vZGVzIiwiZW1wdHkiLCJnZXRBdHRyaWJ1dGVOUyIsImNsYXNzZWQiLCJjcmVhdG9yIiwiYmVmb3JlIiwiZGVlcCIsIm5vcHJvcGFnYXRpb24iLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJwcmV2ZW50RGVmYXVsdCIsInJvb3QiLCJ2aWV3Iiwibm9ldmVudCIsIl9fbm9zZWxlY3QiLCJNb3pVc2VyU2VsZWN0IiwieWVzZHJhZyIsIm5vY2xpY2siLCJmYWN0b3J5IiwiZXh0ZW5kIiwiZGVmaW5pdGlvbiIsIkNvbG9yIiwicmVJIiwicmVOIiwicmVQIiwicmVIZXgiLCJyZVJnYkludGVnZXIiLCJyZVJnYlBlcmNlbnQiLCJyZVJnYmFJbnRlZ2VyIiwicmVSZ2JhUGVyY2VudCIsInJlSHNsUGVyY2VudCIsInJlSHNsYVBlcmNlbnQiLCJuYW1lZCIsImFsaWNlYmx1ZSIsImFudGlxdWV3aGl0ZSIsImFxdWEiLCJhcXVhbWFyaW5lIiwiYXp1cmUiLCJiZWlnZSIsImJpc3F1ZSIsImJsYWNrIiwiYmxhbmNoZWRhbG1vbmQiLCJibHVlIiwiYmx1ZXZpb2xldCIsImJyb3duIiwiYnVybHl3b29kIiwiY2FkZXRibHVlIiwiY2hhcnRyZXVzZSIsImNob2NvbGF0ZSIsImNvcmFsIiwiY29ybmZsb3dlcmJsdWUiLCJjb3Juc2lsayIsImNyaW1zb24iLCJjeWFuIiwiZGFya2JsdWUiLCJkYXJrY3lhbiIsImRhcmtnb2xkZW5yb2QiLCJkYXJrZ3JheSIsImRhcmtncmVlbiIsImRhcmtncmV5IiwiZGFya2toYWtpIiwiZGFya21hZ2VudGEiLCJkYXJrb2xpdmVncmVlbiIsImRhcmtvcmFuZ2UiLCJkYXJrb3JjaGlkIiwiZGFya3JlZCIsImRhcmtzYWxtb24iLCJkYXJrc2VhZ3JlZW4iLCJkYXJrc2xhdGVibHVlIiwiZGFya3NsYXRlZ3JheSIsImRhcmtzbGF0ZWdyZXkiLCJkYXJrdHVycXVvaXNlIiwiZGFya3Zpb2xldCIsImRlZXBwaW5rIiwiZGVlcHNreWJsdWUiLCJkaW1ncmF5IiwiZGltZ3JleSIsImRvZGdlcmJsdWUiLCJmaXJlYnJpY2siLCJmbG9yYWx3aGl0ZSIsImZvcmVzdGdyZWVuIiwiZnVjaHNpYSIsImdhaW5zYm9ybyIsImdob3N0d2hpdGUiLCJnb2xkIiwiZ29sZGVucm9kIiwiZ3JheSIsImdyZWVuIiwiZ3JlZW55ZWxsb3ciLCJncmV5IiwiaG9uZXlkZXciLCJob3RwaW5rIiwiaW5kaWFucmVkIiwiaW5kaWdvIiwiaXZvcnkiLCJraGFraSIsImxhdmVuZGVyIiwibGF2ZW5kZXJibHVzaCIsImxhd25ncmVlbiIsImxlbW9uY2hpZmZvbiIsImxpZ2h0Ymx1ZSIsImxpZ2h0Y29yYWwiLCJsaWdodGN5YW4iLCJsaWdodGdvbGRlbnJvZHllbGxvdyIsImxpZ2h0Z3JheSIsImxpZ2h0Z3JlZW4iLCJsaWdodGdyZXkiLCJsaWdodHBpbmsiLCJsaWdodHNhbG1vbiIsImxpZ2h0c2VhZ3JlZW4iLCJsaWdodHNreWJsdWUiLCJsaWdodHNsYXRlZ3JheSIsImxpZ2h0c2xhdGVncmV5IiwibGlnaHRzdGVlbGJsdWUiLCJsaWdodHllbGxvdyIsImxpbWUiLCJsaW1lZ3JlZW4iLCJsaW5lbiIsIm1hZ2VudGEiLCJtYXJvb24iLCJtZWRpdW1hcXVhbWFyaW5lIiwibWVkaXVtYmx1ZSIsIm1lZGl1bW9yY2hpZCIsIm1lZGl1bXB1cnBsZSIsIm1lZGl1bXNlYWdyZWVuIiwibWVkaXVtc2xhdGVibHVlIiwibWVkaXVtc3ByaW5nZ3JlZW4iLCJtZWRpdW10dXJxdW9pc2UiLCJtZWRpdW12aW9sZXRyZWQiLCJtaWRuaWdodGJsdWUiLCJtaW50Y3JlYW0iLCJtaXN0eXJvc2UiLCJtb2NjYXNpbiIsIm5hdmFqb3doaXRlIiwibmF2eSIsIm9sZGxhY2UiLCJvbGl2ZSIsIm9saXZlZHJhYiIsIm9yYW5nZSIsIm9yYW5nZXJlZCIsIm9yY2hpZCIsInBhbGVnb2xkZW5yb2QiLCJwYWxlZ3JlZW4iLCJwYWxldHVycXVvaXNlIiwicGFsZXZpb2xldHJlZCIsInBhcGF5YXdoaXAiLCJwZWFjaHB1ZmYiLCJwZXJ1IiwicGluayIsInBsdW0iLCJwb3dkZXJibHVlIiwicHVycGxlIiwicmViZWNjYXB1cnBsZSIsInJlZCIsInJvc3licm93biIsInJveWFsYmx1ZSIsInNhZGRsZWJyb3duIiwic2FsbW9uIiwic2FuZHlicm93biIsInNlYWdyZWVuIiwic2Vhc2hlbGwiLCJzaWVubmEiLCJzaWx2ZXIiLCJza3libHVlIiwic2xhdGVibHVlIiwic2xhdGVncmF5Iiwic2xhdGVncmV5Iiwic25vdyIsInNwcmluZ2dyZWVuIiwic3RlZWxibHVlIiwidGFuIiwidGVhbCIsInRoaXN0bGUiLCJ0b21hdG8iLCJ0dXJxdW9pc2UiLCJ2aW9sZXQiLCJ3aGVhdCIsIndoaXRlIiwid2hpdGVzbW9rZSIsInllbGxvdyIsInllbGxvd2dyZWVuIiwiY29sb3JfZm9ybWF0SGV4IiwicmdiIiwiZm9ybWF0SGV4IiwiY29sb3JfZm9ybWF0UmdiIiwiZm9ybWF0UmdiIiwicmdibiIsIlJnYiIsInJnYmEiLCJoc2xhIiwicmdiQ29udmVydCIsIm9wYWNpdHkiLCJyZ2JfZm9ybWF0SGV4IiwiaGV4IiwicmdiX2Zvcm1hdFJnYiIsImgiLCJIc2wiLCJoc2xDb252ZXJ0IiwiaHNsIiwiaHNsMnJnYiIsIm0yIiwiYmFzaXMiLCJ0MSIsInYwIiwidjEiLCJ2MiIsInYzIiwidDIiLCJ0MyIsImRlZmluZSIsImNoYW5uZWxzIiwiZGlzcGxheWFibGUiLCJmb3JtYXRIc2wiLCJicmlnaHRlciIsImRhcmtlciIsImxpbmVhciIsImdhbW1hIiwibm9nYW1tYSIsImV4cG9uZW50aWFsIiwiY29sb3IiLCJyZ2JHYW1tYSIsInJnYlNwbGluZSIsInNwbGluZSIsImNvbG9ycyIsInJnYkJhc2lzIiwicmdiQmFzaXNDbG9zZWQiLCJiYXNpc0Nsb3NlZCIsImlzTnVtYmVyQXJyYXkiLCJBcnJheUJ1ZmZlciIsImlzVmlldyIsIkRhdGFWaWV3IiwibnVtYmVyQXJyYXkiLCJnZW5lcmljQXJyYXkiLCJuYiIsIm5hIiwiRGF0ZSIsInNldFRpbWUiLCJyZUEiLCJyZUIiLCJ0YXNrSGVhZCIsInRhc2tUYWlsIiwiYW0iLCJibSIsImJzIiwiYmkiLCJsYXN0SW5kZXgiLCJxIiwib25lIiwidmFsdWVPZiIsImN1cnJlbnQiLCJvd25lclNWR0VsZW1lbnQiLCJjcmVhdGVTVkdQb2ludCIsInBvaW50IiwiY2xpZW50WCIsImNsaWVudFkiLCJtYXRyaXhUcmFuc2Zvcm0iLCJnZXRTY3JlZW5DVE0iLCJpbnZlcnNlIiwiY2xpZW50TGVmdCIsImNsaWVudFRvcCIsInRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsInRvdWNoIiwiY2xvY2tMYXN0IiwiY2xvY2tOb3ciLCJjbG9ja1NrZXciLCJjbG9jayIsInBlcmZvcm1hbmNlIiwibm93Iiwic2V0RnJhbWUiLCJjbGVhck5vdyIsIlRpbWVyIiwiX2NhbGwiLCJfdGltZSIsInRpbWVyIiwiZGVsYXkiLCJ0aW1lIiwicmVzdGFydCIsInRpbWVyRmx1c2giLCJ3YWtlIiwidDAiLCJJbmZpbml0eSIsInNsZWVwIiwibmFwIiwicG9rZSIsImNsZWFyVGltZW91dCIsImNsZWFySW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsImVsYXBzZWQiLCJlbXB0eU9uIiwiZW1wdHlUd2VlbiIsInNjaGVkdWxlcyIsIl9fdHJhbnNpdGlvbiIsInR3ZWVuIiwiZHVyYXRpb24iLCJlYXNlIiwidGltaW5nIiwic2NoZWR1bGUiLCJjc3NSb290IiwiY3NzVmlldyIsInN2Z05vZGUiLCJkZWdyZWVzIiwiUEkiLCJyb3RhdGUiLCJza2V3WCIsInNjYWxlWCIsInNjYWxlWSIsImF0YW4yIiwiYXRhbiIsImludGVycG9sYXRlVHJhbnNmb3JtIiwicHhDb21tYSIsInB4UGFyZW4iLCJkZWdQYXJlbiIsInhhIiwieWEiLCJ4YiIsInliIiwidHJhbnNsYXRlIiwiaW50ZXJwb2xhdGVUcmFuc2Zvcm1Dc3MiLCJkZWNvbXBvc2UiLCJpbnRlcnBvbGF0ZVRyYW5zZm9ybVN2ZyIsImJhc2VWYWwiLCJjb25zb2xpZGF0ZSIsInR3ZWVuUmVtb3ZlIiwidHdlZW4wIiwidHdlZW4xIiwidHdlZW5GdW5jdGlvbiIsInR3ZWVuVmFsdWUiLCJfaWQiLCJpbnRlcnBvbGF0ZSIsInZhbHVlMSIsInN0cmluZzAwIiwiaW50ZXJwb2xhdGUwIiwic3RyaW5nMSIsInN0cmluZzAiLCJzdHJpbmcxMCIsImF0dHJJbnRlcnBvbGF0ZSIsImF0dHJJbnRlcnBvbGF0ZU5TIiwiYXR0clR3ZWVuTlMiLCJfdmFsdWUiLCJhdHRyVHdlZW4iLCJkZWxheUZ1bmN0aW9uIiwiZGVsYXlDb25zdGFudCIsImR1cmF0aW9uRnVuY3Rpb24iLCJkdXJhdGlvbkNvbnN0YW50IiwiZWFzZUNvbnN0YW50Iiwib25GdW5jdGlvbiIsIm9uMCIsIm9uMSIsInNpdCIsImV2ZXJ5Iiwic3R5bGVJbnRlcnBvbGF0ZSIsInN0eWxlVHdlZW4iLCJ0ZXh0SW50ZXJwb2xhdGUiLCJ0ZXh0VHdlZW4iLCJfbmFtZSIsIm5ld0lkIiwic2VsZWN0aW9uX3Byb3RvdHlwZSIsImN1YmljSW4iLCJjdWJpY091dCIsImN1YmljSW5PdXQiLCJpbmhlcml0IiwiaWQwIiwiaWQxIiwic3R5bGVOdWxsIiwibGlzdGVuZXIwIiwic3R5bGVNYXliZVJlbW92ZSIsInJlamVjdCIsImludGVycnVwdCIsImRlZmF1bHRUaW1pbmciLCJNT0RFX0RSQUciLCJNT0RFX1NQQUNFIiwiTU9ERV9IQU5ETEUiLCJNT0RFX0NFTlRFUiIsIm51bWJlcjEiLCJudW1iZXIyIiwidG91Y2hlciIsImhhbmRsZXMiLCJpbnB1dCIsIm91dHB1dCIsInh5IiwiWFkiLCJjdXJzb3JzIiwib3ZlcmxheSIsInciLCJudyIsIm5lIiwic2UiLCJzdyIsImZsaXBYIiwiZmxpcFkiLCJzaWduc1giLCJzaWduc1kiLCJkZWZhdWx0RmlsdGVyIiwiY3RybEtleSIsImJ1dHRvbiIsImRlZmF1bHRFeHRlbnQiLCJoYXNBdHRyaWJ1dGUiLCJ2aWV3Qm94IiwiZGVmYXVsdFRvdWNoYWJsZSIsIm1heFRvdWNoUG9pbnRzIiwiX19icnVzaCIsImV4dGVudCIsImJydXNoU2VsZWN0aW9uIiwiZGltIiwiYnJ1c2hYIiwiYnJ1c2hZIiwidG91Y2hlbmRpbmciLCJ0b3VjaGFibGUiLCJsaXN0ZW5lcnMiLCJoYW5kbGVTaXplIiwiYnJ1c2giLCJpbml0aWFsaXplIiwiaGFuZGxlIiwicmVkcmF3Iiwic3RhcnRlZCIsInRvdWNobW92ZWQiLCJ0b3VjaGVuZGVkIiwiZW1pdHRlciIsImNsZWFuIiwiRW1pdHRlciIsIncwIiwidzEiLCJlMCIsImUxIiwiczAiLCJzMSIsIm1vdmluZyIsImxvY2tYIiwibG9ja1kiLCJtZXRhS2V5IiwiYWx0S2V5Iiwic2lnblgiLCJzaWduWSIsIlciLCJOIiwiRSIsIlMiLCJkeCIsImR5Iiwic2hpZnRpbmciLCJzaGlmdEtleSIsInBvaW50ZXIiLCJtb3VzZSIsInBvaW50MCIsImVtaXQiLCJiZWZvcmVzdGFydCIsIm1vdmVkIiwiZW5kZWQiLCJrZXlkb3duZWQiLCJrZXl1cHBlZCIsInBvaW50MSIsIm1vdmUiLCJrZXlDb2RlIiwic2VsZWN0aW9uMCIsInNlbGVjdGlvbjEiLCJjbGVhciIsInN0YXJ0aW5nIiwia2V5TW9kaWZpZXJzIiwiY29zIiwic2luIiwicGkiLCJoYWxmUGkiLCJ0YXUiLCJjb21wYXJlVmFsdWUiLCJwYWRBbmdsZSIsInNvcnRHcm91cHMiLCJzb3J0U3ViZ3JvdXBzIiwic29ydENob3JkcyIsImNob3JkIiwiZ3JvdXBTdW1zIiwiZ3JvdXBJbmRleCIsInN1Ymdyb3VwSW5kZXgiLCJjaG9yZHMiLCJkaSIsImRqIiwiYTAiLCJhMSIsInN1YmluZGV4Iiwic3RhcnRBbmdsZSIsImVuZEFuZ2xlIiwidGF1RXBzaWxvbiIsIlBhdGgiLCJfeDAiLCJfeTAiLCJfeDEiLCJfeTEiLCJtb3ZlVG8iLCJjbG9zZVBhdGgiLCJsaW5lVG8iLCJxdWFkcmF0aWNDdXJ2ZVRvIiwieTEiLCJiZXppZXJDdXJ2ZVRvIiwieDIiLCJ5MiIsImFyY1RvIiwieTAiLCJ4MjEiLCJ5MjEiLCJ4MDEiLCJ5MDEiLCJsMDFfMiIsIngyMCIsInkyMCIsImwyMV8yIiwibDIwXzIiLCJsMjEiLCJsMDEiLCJhY29zIiwidDAxIiwidDIxIiwiYXJjIiwiY2N3IiwiY3ciLCJkYSIsImRlZmF1bHRTb3VyY2UiLCJkZWZhdWx0VGFyZ2V0IiwiZGVmYXVsdFJhZGl1cyIsInJhZGl1cyIsImRlZmF1bHRTdGFydEFuZ2xlIiwiZGVmYXVsdEVuZEFuZ2xlIiwicmliYm9uIiwiYnVmZmVyIiwiYXJndiIsInNyIiwic2EwIiwic2ExIiwic3gwIiwic3kwIiwidHIiLCJ0YTAiLCJ0YTEiLCJNYXAiLCJoYXMiLCJlbnRyaWVzIiwic29ydFZhbHVlcyIsInJvbGx1cCIsIm5lc3QiLCJzb3J0S2V5cyIsImRlcHRoIiwiY3JlYXRlUmVzdWx0Iiwic2V0UmVzdWx0IiwidmFsdWVzQnlLZXkiLCJjcmVhdGVPYmplY3QiLCJzZXRPYmplY3QiLCJjcmVhdGVNYXAiLCJzZXRNYXAiLCJzb3J0S2V5IiwiU2V0IiwicHJvdG8iLCJkZWcycmFkIiwicmFkMmRlZyIsImxhYkNvbnZlcnQiLCJMYWIiLCJIY2wiLCJoY2wybGFiIiwieiIsInJnYjJscmdiIiwieHl6MmxhYiIsImxhYiIsImxhYjJ4eXoiLCJscmdiMnJnYiIsImhjbENvbnZlcnQiLCJsY2giLCJoY2wiLCJDIiwiRUQiLCJFQiIsIkJDX0RBIiwiY3ViZWhlbGl4Q29udmVydCIsIkN1YmVoZWxpeCIsImJsIiwiY29zaCIsInNpbmgiLCJob2xlIiwicmluZ0NvbnRhaW5zIiwicmluZyIsInlpIiwicGoiLCJ5aiIsInNlZ21lbnRDb250YWlucyIsImNvbGxpbmVhciIsImNhc2VzIiwic21vb3RoIiwic21vb3RoTGluZWFyIiwiY29udG91cnMiLCJjb250b3VyIiwicG9seWdvbnMiLCJob2xlcyIsImZyYWdtZW50QnlTdGFydCIsImZyYWdtZW50QnlFbmQiLCJzdGl0Y2giLCJzdGFydEluZGV4IiwiZW5kSW5kZXgiLCJ1bnNoaWZ0IiwiaXNvcmluZ3MiLCJwb2x5Z29uIiwiY29vcmRpbmF0ZXMiLCJ4dCIsInl0IiwiXzAiLCJfMSIsImJsdXJYIiwiYmx1clkiLCJkZWZhdWx0WCIsImRlZmF1bHRZIiwiZGVmYXVsdFdlaWdodCIsIndlaWdodCIsImRlbnNpdHkiLCJGbG9hdDMyQXJyYXkiLCJ3aSIsImdlb21ldHJ5IiwidHJhbnNmb3JtUG9seWdvbiIsInRyYW5zZm9ybVJpbmciLCJ0cmFuc2Zvcm1Qb2ludCIsInJlc2l6ZSIsImNlbGxTaXplIiwiRHJhZ0V2ZW50Iiwic3ViamVjdCIsImRlZmF1bHRDb250YWluZXIiLCJkZWZhdWx0U3ViamVjdCIsIm1vdXNlZG93bngiLCJtb3VzZWRvd255IiwibW91c2Vtb3ZpbmciLCJjb250YWluZXIiLCJnZXN0dXJlcyIsImNsaWNrRGlzdGFuY2UyIiwiZHJhZyIsIm1vdXNlZG93bmVkIiwidG91Y2hzdGFydGVkIiwiZ2VzdHVyZSIsIm1vdXNlbW92ZWQiLCJtb3VzZXVwcGVkIiwibm9kcmFnIiwic3VibGlzdGVuZXJzIiwicDAiLCJjbGlja0Rpc3RhbmNlIiwiRU9MIiwiRU9GIiwib2JqZWN0Q29udmVydGVyIiwiY29sdW1ucyIsImluZmVyQ29sdW1ucyIsInJvd3MiLCJjb2x1bW5TZXQiLCJjb2x1bW4iLCJwYWQiLCJmb3JtYXREYXRlIiwiZGF0ZSIsInllYXIiLCJob3VycyIsImdldFVUQ0hvdXJzIiwibWludXRlcyIsImdldFVUQ01pbnV0ZXMiLCJzZWNvbmRzIiwiZ2V0VVRDU2Vjb25kcyIsIm1pbGxpc2Vjb25kcyIsImdldFVUQ01pbGxpc2Vjb25kcyIsImdldFVUQ0Z1bGxZZWFyIiwiZ2V0VVRDTW9udGgiLCJnZXRVVENEYXRlIiwicmVGb3JtYXQiLCJERUxJTUlURVIiLCJwYXJzZVJvd3MiLCJJIiwiZW9mIiwiZW9sIiwicHJlZm9ybWF0Qm9keSIsImZvcm1hdFZhbHVlIiwiZm9ybWF0Um93IiwiY29udmVydCIsImN1c3RvbUNvbnZlcnRlciIsImZvcm1hdEJvZHkiLCJmb3JtYXRSb3dzIiwiY3N2IiwiZHN2IiwiY3N2UGFyc2UiLCJjc3ZQYXJzZVJvd3MiLCJjc3ZGb3JtYXQiLCJjc3ZGb3JtYXRCb2R5IiwiY3N2Rm9ybWF0Um93cyIsImNzdkZvcm1hdFJvdyIsImNzdkZvcm1hdFZhbHVlIiwidHN2IiwidHN2UGFyc2UiLCJ0c3ZQYXJzZVJvd3MiLCJ0c3ZGb3JtYXQiLCJ0c3ZGb3JtYXRCb2R5IiwidHN2Rm9ybWF0Um93cyIsInRzdkZvcm1hdFJvdyIsInRzdkZvcm1hdFZhbHVlIiwiYXV0b1R5cGUiLCJmaXh0eiIsImdldEhvdXJzIiwicXVhZEluIiwicXVhZE91dCIsInF1YWRJbk91dCIsInBvbHlJbiIsImN1c3RvbSIsImV4cG9uZW50IiwicG9seU91dCIsInBvbHlJbk91dCIsInNpbkluIiwic2luT3V0Iiwic2luSW5PdXQiLCJleHBJbiIsImV4cE91dCIsImV4cEluT3V0IiwiY2lyY2xlSW4iLCJjaXJjbGVPdXQiLCJjaXJjbGVJbk91dCIsImJvdW5jZUluIiwiYm91bmNlT3V0IiwiYm91bmNlSW5PdXQiLCJiYWNrSW4iLCJvdmVyc2hvb3QiLCJiYWNrT3V0IiwiYmFja0luT3V0IiwiZWxhc3RpY0luIiwiYXNpbiIsImFtcGxpdHVkZSIsInBlcmlvZCIsImVsYXN0aWNPdXQiLCJlbGFzdGljSW5PdXQiLCJyZXNwb25zZUJsb2IiLCJyZXNwb25zZSIsIm9rIiwic3RhdHVzVGV4dCIsImJsb2IiLCJmZXRjaCIsImluaXQiLCJyZXNwb25zZUFycmF5QnVmZmVyIiwiYXJyYXlCdWZmZXIiLCJyZXNwb25zZVRleHQiLCJkc3ZQYXJzZSIsImltYWdlIiwiSW1hZ2UiLCJvbmVycm9yIiwib25sb2FkIiwic3JjIiwicmVzcG9uc2VKc29uIiwianNvbiIsInBhcnNlciIsIkRPTVBhcnNlciIsInBhcnNlRnJvbVN0cmluZyIsImZvcmNlIiwic3giLCJzeSIsInRyZWUiLCJ4bSIsInltIiwieHAiLCJ5cCIsIl9yb290IiwibGVhZiIsIl94IiwiX3kiLCJxdWFkdHJlZSIsIlF1YWR0cmVlIiwiYWRkQWxsIiwibGVhZl9jb3B5IiwidHJlZVByb3RvIiwidngiLCJ2eSIsImNvdmVyIiwieXoiLCJ2aXNpdCIsIngzIiwieTMiLCJxdWFkcyIsImQyIiwicmV0YWluZXIiLCJyZW1vdmVBbGwiLCJ2aXNpdEFmdGVyIiwicmFkaWkiLCJzdHJlbmd0aCIsIml0ZXJhdGlvbnMiLCJyaSIsInJpMiIsInByZXBhcmUiLCJxdWFkIiwicmoiLCJqaWdnbGUiLCJub2RlQnlJZCIsIm5vZGVJZCIsInN0cmVuZ3RocyIsImRpc3RhbmNlcyIsImJpYXMiLCJsaW5rIiwiZGlzdGFuY2UiLCJhbHBoYSIsImxpbmtzIiwiaW5pdGlhbGl6ZVN0cmVuZ3RoIiwiaW5pdGlhbGl6ZURpc3RhbmNlIiwiaW5pdGlhbEFuZ2xlIiwic2ltdWxhdGlvbiIsImFscGhhTWluIiwiYWxwaGFEZWNheSIsImFscGhhVGFyZ2V0IiwidmVsb2NpdHlEZWNheSIsImZvcmNlcyIsInN0ZXBwZXIiLCJmeCIsImZ5IiwiaW5pdGlhbGl6ZU5vZGVzIiwiYW5nbGUiLCJpbml0aWFsaXplRm9yY2UiLCJjbG9zZXN0IiwiZGlzdGFuY2VNaW4yIiwiZGlzdGFuY2VNYXgyIiwidGhldGEyIiwiYWNjdW11bGF0ZSIsImRpc3RhbmNlTWluIiwiZGlzdGFuY2VNYXgiLCJ0aGV0YSIsInJhZGl1c2VzIiwidG9FeHBvbmVudGlhbCIsImNvZWZmaWNpZW50IiwiZm9ybWF0RGVjaW1hbCIsImZvcm1hdFNwZWNpZmllciIsInNwZWNpZmllciIsIkZvcm1hdFNwZWNpZmllciIsImZpbGwiLCJhbGlnbiIsInNpZ24iLCJzeW1ib2wiLCJ6ZXJvIiwiY29tbWEiLCJwcmVjaXNpb24iLCJwcmVmaXhFeHBvbmVudCIsInRvRml4ZWQiLCJ0b1ByZWNpc2lvbiIsImZvcm1hdFJvdW5kZWQiLCJsb2NhbGUiLCJncm91cGluZyIsInRob3VzYW5kcyIsIk51bWJlciIsInN1YnN0cmluZyIsImN1cnJlbmN5UHJlZml4IiwiY3VycmVuY3kiLCJjdXJyZW5jeVN1ZmZpeCIsImRlY2ltYWwiLCJudW1lcmFscyIsImZvcm1hdE51bWVyYWxzIiwicGVyY2VudCIsIm1pbnVzIiwibmFuIiwibmV3Rm9ybWF0IiwiZm9ybWF0VHlwZXMiLCJzdWZmaXgiLCJmb3JtYXRUeXBlIiwibWF5YmVTdWZmaXgiLCJ2YWx1ZVByZWZpeCIsInZhbHVlU3VmZml4IiwidmFsdWVOZWdhdGl2ZSIsIm91dCIsImZvcm1hdFRyaW0iLCJmb3JtYXRQcmVmaXgiLCJkZWZhdWx0TG9jYWxlIiwiQWRkZXIiLCJyZXNldCIsInRlbXAiLCJhZGRlciIsImJ2IiwiYXYiLCJxdWFydGVyUGkiLCJyYWRpYW5zIiwiZXhwIiwiaGF2ZXJzaW4iLCJzdHJlYW1HZW9tZXRyeSIsInN0cmVhbSIsInN0cmVhbUdlb21ldHJ5VHlwZSIsInN0cmVhbU9iamVjdFR5cGUiLCJGZWF0dXJlIiwiRmVhdHVyZUNvbGxlY3Rpb24iLCJmZWF0dXJlcyIsIlNwaGVyZSIsInNwaGVyZSIsIlBvaW50IiwiTXVsdGlQb2ludCIsIkxpbmVTdHJpbmciLCJzdHJlYW1MaW5lIiwiTXVsdGlMaW5lU3RyaW5nIiwiUG9seWdvbiIsInN0cmVhbVBvbHlnb24iLCJNdWx0aVBvbHlnb24iLCJHZW9tZXRyeUNvbGxlY3Rpb24iLCJnZW9tZXRyaWVzIiwiY2xvc2VkIiwiY29vcmRpbmF0ZSIsImxpbmVTdGFydCIsImxpbmVFbmQiLCJwb2x5Z29uU3RhcnQiLCJwb2x5Z29uRW5kIiwicGhpMDAiLCJhcmVhUmluZ1N1bSIsImFyZWFTdW0iLCJhcmVhU3RyZWFtIiwiYXJlYVJpbmdTdGFydCIsImFyZWFSaW5nRW5kIiwiYXJlYVJpbmciLCJhcmVhUG9pbnRGaXJzdCIsImFyZWFQb2ludCIsImxhbWJkYSIsInBoaSIsImRMYW1iZGEiLCJzZExhbWJkYSIsImFkTGFtYmRhIiwiY29zUGhpIiwic2luUGhpIiwidSIsImNhcnRlc2lhbiIsInNwaGVyaWNhbCIsImNhcnRlc2lhbkRvdCIsImNhcnRlc2lhbkNyb3NzIiwiY2FydGVzaWFuQWRkSW5QbGFjZSIsImNhcnRlc2lhblNjYWxlIiwidmVjdG9yIiwiY2FydGVzaWFuTm9ybWFsaXplSW5QbGFjZSIsInJhbmdlcyIsImRlbHRhU3VtIiwiYm91bmRzU3RyZWFtIiwiYm91bmRzUG9pbnQiLCJib3VuZHNMaW5lU3RhcnQiLCJib3VuZHNMaW5lRW5kIiwiYm91bmRzUmluZ1BvaW50IiwiYm91bmRzUmluZ1N0YXJ0IiwiYm91bmRzUmluZ0VuZCIsIm5vcm1hbCIsImluZmxlY3Rpb24iLCJwaGlpIiwibGFtYmRhaSIsImFudGltZXJpZGlhbiIsImxhbWJkYTAiLCJsYW1iZGExIiwicmFuZ2VDb21wYXJlIiwicmFuZ2VDb250YWlucyIsIlcwIiwiVzEiLCJaMCIsIloxIiwiWDIiLCJZMiIsIloyIiwiejAiLCJkZWx0YU1heCIsImZlYXR1cmUiLCJjZW50cm9pZFN0cmVhbSIsImNlbnRyb2lkUG9pbnQiLCJjZW50cm9pZExpbmVTdGFydCIsImNlbnRyb2lkTGluZUVuZCIsImNlbnRyb2lkUmluZ1N0YXJ0IiwiY2VudHJvaWRSaW5nRW5kIiwiY2VudHJvaWRQb2ludENhcnRlc2lhbiIsImNlbnRyb2lkTGluZVBvaW50Rmlyc3QiLCJjZW50cm9pZExpbmVQb2ludCIsImNlbnRyb2lkUmluZ1BvaW50Rmlyc3QiLCJjZW50cm9pZFJpbmdQb2ludCIsImN4IiwiY3kiLCJjeiIsImNvbXBvc2UiLCJpbnZlcnQiLCJyb3RhdGlvbklkZW50aXR5Iiwicm90YXRlUmFkaWFucyIsImRlbHRhTGFtYmRhIiwiZGVsdGFQaGkiLCJkZWx0YUdhbW1hIiwicm90YXRpb25MYW1iZGEiLCJyb3RhdGlvblBoaUdhbW1hIiwiZm9yd2FyZFJvdGF0aW9uTGFtYmRhIiwicm90YXRpb24iLCJjb3NEZWx0YVBoaSIsInNpbkRlbHRhUGhpIiwiY29zRGVsdGFHYW1tYSIsInNpbkRlbHRhR2FtbWEiLCJmb3J3YXJkIiwiY2lyY2xlU3RyZWFtIiwiZGlyZWN0aW9uIiwiY29zUmFkaXVzIiwic2luUmFkaXVzIiwiY2lyY2xlUmFkaXVzIiwiY2lyY2xlIiwibGluZXMiLCJyZWpvaW4iLCJJbnRlcnNlY3Rpb24iLCJwb2ludHMiLCJvdGhlciIsImVudHJ5IiwiY2xpcCIsInNlZ21lbnRzIiwicDEiLCJwb2ludEVxdWFsIiwiY29tcGFyZUludGVyc2VjdGlvbiIsInN0YXJ0SW5zaWRlIiwiaXNTdWJqZWN0IiwibG9uZ2l0dWRlIiwid2luZGluZyIsInBoaTAiLCJzaW5QaGkwIiwiY29zUGhpMCIsInNpblBoaTEiLCJjb3NQaGkxIiwicGhpMSIsImFic0RlbHRhIiwiaW50ZXJzZWN0aW9uIiwicGhpQXJjIiwic2luayIsImNsaXBMaW5lIiwicmluZ0J1ZmZlciIsInJpbmdTaW5rIiwicG9seWdvblN0YXJ0ZWQiLCJwb2ludFJpbmciLCJyaW5nU3RhcnQiLCJyaW5nRW5kIiwicG9seWdvbkNvbnRhaW5zIiwicG9pbnRWaXNpYmxlIiwicG9pbnRMaW5lIiwicmluZ1NlZ21lbnRzIiwidmFsaWRTZWdtZW50Iiwic2lnbjAiLCJzaWduMSIsInNpbkxhbWJkYTBMYW1iZGExIiwiY2xpcEFudGltZXJpZGlhbkludGVyc2VjdCIsImNyIiwic21hbGxSYWRpdXMiLCJub3RIZW1pc3BoZXJlIiwidmlzaWJsZSIsImludGVyc2VjdCIsInR3byIsIm4yIiwibjJuMiIsIm4xbjIiLCJkZXRlcm1pbmFudCIsImMxIiwiYzIiLCJuMXhuMiIsIkEiLCJ1dSIsInBvbGFyIiwicTEiLCJjb2RlIiwiYzAiLCJ2MDAiLCJwb2ludDIiLCJjbGlwUmVjdGFuZ2xlIiwiY29ybmVyIiwiY29tcGFyZVBvaW50IiwiY2EiLCJjYiIsInhfXyIsInlfXyIsInZfXyIsInhfIiwieV8iLCJ2XyIsImZpcnN0IiwiYWN0aXZlU3RyZWFtIiwiYnVmZmVyU3RyZWFtIiwiY2xpcFN0cmVhbSIsImxpbmVQb2ludCIsImIwIiwiYjEiLCJwb2x5Z29uSW5zaWRlIiwiY2xlYW5JbnNpZGUiLCJheCIsImF5IiwiY2FjaGUiLCJjYWNoZVN0cmVhbSIsImxlbmd0aFN1bSIsImxlbmd0aFN0cmVhbSIsImxlbmd0aFBvaW50Rmlyc3QiLCJsZW5ndGhMaW5lRW5kIiwibGVuZ3RoUG9pbnQiLCJjb3NEZWx0YSIsImNvbnRhaW5zT2JqZWN0VHlwZSIsImNvbnRhaW5zR2VvbWV0cnkiLCJjb250YWluc0dlb21ldHJ5VHlwZSIsImNvbnRhaW5zUG9pbnQiLCJjb250YWluc0xpbmUiLCJjb250YWluc1BvbHlnb24iLCJhbyIsImJvIiwiYWIiLCJyaW5nUmFkaWFucyIsInBvaW50UmFkaWFucyIsImdyYXRpY3VsZVgiLCJncmF0aWN1bGVZIiwiWDEiLCJYMCIsIlkxIiwiWTAiLCJYIiwiWSIsIkRYIiwiRFkiLCJncmF0aWN1bGUiLCJvdXRsaW5lIiwiZXh0ZW50TWFqb3IiLCJleHRlbnRNaW5vciIsInN0ZXBNYWpvciIsInN0ZXBNaW5vciIsImdyYXRpY3VsZTEwIiwiY3kwIiwiY3kxIiwic3kxIiwia3gwIiwia3kwIiwia3gxIiwia3kxIiwiQiIsImJvdW5kcyIsImNlbnRyb2lkIiwiY2VudHJvaWRQb2ludEZpcnN0TGluZSIsImNlbnRyb2lkUG9pbnRMaW5lIiwiY2VudHJvaWRQb2ludEZpcnN0UmluZyIsImNlbnRyb2lkUG9pbnRSaW5nIiwiUGF0aENvbnRleHQiLCJfY29udGV4dCIsIl9yYWRpdXMiLCJwb2ludFJhZGl1cyIsIl9saW5lIiwiX3BvaW50IiwibGVuZ3RoUmluZyIsIlBhdGhTdHJpbmciLCJfc3RyaW5nIiwiX2NpcmNsZSIsInByb2plY3Rpb25TdHJlYW0iLCJjb250ZXh0U3RyZWFtIiwibWVhc3VyZSIsInByb2plY3Rpb24iLCJ0cmFuc2Zvcm1lciIsIm1ldGhvZHMiLCJUcmFuc2Zvcm1TdHJlYW0iLCJmaXQiLCJmaXRCb3VuZHMiLCJjbGlwRXh0ZW50IiwiZml0RXh0ZW50IiwiZml0U2l6ZSIsImZpdFdpZHRoIiwiZml0SGVpZ2h0IiwiY29zTWluRGlzdGFuY2UiLCJkZWx0YTIiLCJwcm9qZWN0IiwicmVzYW1wbGVMaW5lVG8iLCJwaGkyIiwibGFtYmRhMiIsImR4MiIsImR5MiIsImR6IiwibGFtYmRhMDAiLCJ4MDAiLCJ5MDAiLCJhMDAiLCJiMDAiLCJjMDAiLCJyZXNhbXBsZVN0cmVhbSIsInJpbmdQb2ludCIsInJlc2FtcGxlTm9uZSIsInRyYW5zZm9ybVJhZGlhbnMiLCJzY2FsZVRyYW5zbGF0ZSIsInNjYWxlVHJhbnNsYXRlUm90YXRlIiwiY29zQWxwaGEiLCJzaW5BbHBoYSIsImFpIiwiY2kiLCJmaSIsInByb2plY3Rpb25NdXRhdG9yIiwicHJvamVjdEF0IiwicHJvamVjdFJlc2FtcGxlIiwicHJvamVjdFRyYW5zZm9ybSIsInByb2plY3RSb3RhdGVUcmFuc2Zvcm0iLCJwcmVjbGlwIiwicG9zdGNsaXAiLCJyZWNlbnRlciIsInJlc2FtcGxlIiwidHJhbnNmb3JtUm90YXRlIiwiY2xpcEFuZ2xlIiwiY29uaWNQcm9qZWN0aW9uIiwicGFyYWxsZWxzIiwiY29uaWNFcXVhbEFyZWFSYXciLCJjeWxpbmRyaWNhbEVxdWFsQXJlYVJhdyIsInIwIiwicjB5IiwiY29uaWNFcXVhbEFyZWEiLCJsb3dlcjQ4UG9pbnQiLCJhbGFza2FQb2ludCIsImhhd2FpaVBvaW50IiwibG93ZXI0OCIsImFsYmVycyIsImFsYXNrYSIsImhhd2FpaSIsInBvaW50U3RyZWFtIiwiYWxiZXJzVXNhIiwic3RyZWFtcyIsImF6aW11dGhhbFJhdyIsImF6aW11dGhhbEludmVydCIsInNjIiwiY2MiLCJhemltdXRoYWxFcXVhbEFyZWFSYXciLCJjeGN5IiwiYXppbXV0aGFsRXF1aWRpc3RhbnRSYXciLCJtZXJjYXRvclJhdyIsIm1lcmNhdG9yUHJvamVjdGlvbiIsInJlY2xpcCIsInRhbnkiLCJjb25pY0NvbmZvcm1hbFJhdyIsImVxdWlyZWN0YW5ndWxhclJhdyIsImNvbmljRXF1aWRpc3RhbnRSYXciLCJneSIsIm54IiwiQTEiLCJBMiIsIkEzIiwiQTQiLCJNIiwiZXF1YWxFYXJ0aFJhdyIsImwyIiwibDYiLCJnbm9tb25pY1JhdyIsImt4Iiwia3kiLCJ0eCIsInR5IiwicmVmbGVjdFgiLCJyZWZsZWN0WSIsIm5hdHVyYWxFYXJ0aDFSYXciLCJwaGk0Iiwib3J0aG9ncmFwaGljUmF3Iiwic3RlcmVvZ3JhcGhpY1JhdyIsInRyYW5zdmVyc2VNZXJjYXRvclJhdyIsImRlZmF1bHRTZXBhcmF0aW9uIiwibWVhblhSZWR1Y2UiLCJtYXhZUmVkdWNlIiwic2VwYXJhdGlvbiIsIm5vZGVTaXplIiwiY2x1c3RlciIsInByZXZpb3VzTm9kZSIsImVhY2hBZnRlciIsIm1lYW5YIiwibWF4WSIsImxlYWZMZWZ0IiwibGVhZlJpZ2h0IiwiaGllcmFyY2h5IiwiY2hpbGRzIiwidmFsdWVkIiwiZGVmYXVsdENoaWxkcmVuIiwiZWFjaEJlZm9yZSIsImNvbXB1dGVIZWlnaHQiLCJjb3B5RGF0YSIsImFuY2VzdG9yIiwiYU5vZGVzIiwiYW5jZXN0b3JzIiwiYk5vZGVzIiwibGVhc3RDb21tb25BbmNlc3RvciIsImRlc2NlbmRhbnRzIiwibGVhdmVzIiwiY2lyY2xlcyIsImVuY2xvc2VzV2VhayIsImVuY2xvc2VCYXNpcyIsImV4dGVuZEJhc2lzIiwiZW5jbG9zZXNXZWFrQWxsIiwiZW5jbG9zZXNOb3QiLCJlbmNsb3NlQmFzaXMyIiwiZW5jbG9zZUJhc2lzMyIsImRyIiwicjEiLCJyMiIsInIyMSIsInIzIiwiYTIiLCJhMyIsImIyIiwiYjMiLCJjMyIsImQxIiwiZDMiLCJwbGFjZSIsImludGVyc2VjdHMiLCJzY29yZSIsInBhY2tFbmNsb3NlIiwiYWEiLCJzaiIsInNrIiwicGFjayIsImVuY2xvc2UiLCJyZXF1aXJlZCIsImNvbnN0YW50WmVybyIsInJhZGl1c0xlYWYiLCJwYWNrQ2hpbGRyZW4iLCJ0cmFuc2xhdGVDaGlsZCIsInBhcnRpdGlvbiIsInBvc2l0aW9uTm9kZSIsInByZXJvb3QiLCJhbWJpZ3VvdXMiLCJkZWZhdWx0SWQiLCJkZWZhdWx0UGFyZW50SWQiLCJwYXJlbnRJZCIsInN0cmF0aWZ5Iiwibm9kZUtleSIsIm5vZGVCeUtleSIsIm5leHRMZWZ0IiwibmV4dFJpZ2h0IiwibW92ZVN1YnRyZWUiLCJ3bSIsIndwIiwiY2hhbmdlIiwibmV4dEFuY2VzdG9yIiwidmltIiwiVHJlZU5vZGUiLCJ0cmVlUm9vdCIsImZpcnN0V2FsayIsInNlY29uZFdhbGsiLCJzaXplTm9kZSIsInNpYmxpbmdzIiwiZXhlY3V0ZVNoaWZ0cyIsIm1pZHBvaW50IiwidmlwIiwidm9wIiwidm9tIiwic2lwIiwic29wIiwic2ltIiwic29tIiwiYXBwb3J0aW9uIiwic3F1YXJpZnlSYXRpbyIsInJhdGlvIiwibm9kZVZhbHVlIiwic3VtVmFsdWUiLCJtaW5WYWx1ZSIsIm1heFZhbHVlIiwibmV3UmF0aW8iLCJtaW5SYXRpbyIsImJldGEiLCJkaWNlIiwic3F1YXJpZnkiLCJ0aWxlIiwicGFkZGluZ1N0YWNrIiwicGFkZGluZ0lubmVyIiwicGFkZGluZ1RvcCIsInBhZGRpbmdSaWdodCIsInBhZGRpbmdCb3R0b20iLCJwYWRkaW5nTGVmdCIsInRyZWVtYXAiLCJwYWRkaW5nT3V0ZXIiLCJzdW1zIiwidmFsdWVPZmZzZXQiLCJ2YWx1ZVRhcmdldCIsInZhbHVlTGVmdCIsInZhbHVlUmlnaHQiLCJ4ayIsInlrIiwicmVzcXVhcmlmeSIsIl9zcXVhcmlmeSIsInJobyIsIlNRUlQyIiwidXgwIiwidXkwIiwidXgxIiwidXkxIiwiY29zaHIwIiwiaHVlIiwiaHNsTG9uZyIsImhjbExvbmciLCJjdWJlaGVsaXhHYW1tYSIsImN1YmVoZWxpeCIsImN1YmVoZWxpeExvbmciLCJzYW1wbGVzIiwiaW50ZXJwb2xhdG9yIiwibGV4aWNvZ3JhcGhpY09yZGVyIiwiY29tcHV0ZVVwcGVySHVsbEluZGV4ZXMiLCJzb3J0ZWRQb2ludHMiLCJmbGlwcGVkUG9pbnRzIiwidXBwZXJJbmRleGVzIiwibG93ZXJJbmRleGVzIiwic2tpcExlZnQiLCJza2lwUmlnaHQiLCJodWxsIiwiaW5zaWRlIiwicGVyaW1ldGVyIiwicmFuZG9tVW5pZm9ybSIsInNvdXJjZVJhbmRvbVVuaWZvcm0iLCJyYW5kb21Ob3JtYWwiLCJtdSIsInNpZ21hIiwic291cmNlUmFuZG9tTm9ybWFsIiwicmFuZG9tTG9nTm9ybWFsIiwic291cmNlUmFuZG9tTG9nTm9ybWFsIiwicmFuZG9tSXJ3aW5IYWxsIiwic291cmNlUmFuZG9tSXJ3aW5IYWxsIiwicmFuZG9tQmF0ZXMiLCJpcndpbkhhbGwiLCJzb3VyY2VSYW5kb21CYXRlcyIsInJhbmRvbUV4cG9uZW50aWFsIiwic291cmNlUmFuZG9tRXhwb25lbnRpYWwiLCJpbml0UmFuZ2UiLCJpbml0SW50ZXJwb2xhdG9yIiwiaW1wbGljaXQiLCJvcmRpbmFsIiwidW5rbm93biIsImJhbmQiLCJvcmRpbmFsUmFuZ2UiLCJyZXNjYWxlIiwicmFuZ2VSb3VuZCIsInBvaW50aXNoIiwibm9ybWFsaXplIiwiY2xhbXBlciIsImJpbWFwIiwiZDAiLCJwb2x5bWFwIiwiY2xhbXAiLCJ1bnRyYW5zZm9ybSIsInBpZWNld2lzZSIsImNvbnRpbnVvdXMiLCJwcmVjaXNpb25QcmVmaXgiLCJwcmVjaXNpb25Sb3VuZCIsInByZWNpc2lvbkZpeGVkIiwibGluZWFyaXNoIiwibmljZSIsImludGVydmFsIiwidHJhbnNmb3JtTG9nIiwidHJhbnNmb3JtRXhwIiwidHJhbnNmb3JtTG9nbiIsInRyYW5zZm9ybUV4cG4iLCJwb3cxMCIsInJlZmxlY3QiLCJsb2dnaXNoIiwibG9ncyIsInBvd3MiLCJsb2cxMCIsImxvZzIiLCJsb2dwIiwicG93cCIsInRyYW5zZm9ybVN5bWxvZyIsImxvZzFwIiwidHJhbnNmb3JtU3ltZXhwIiwiZXhwbTEiLCJzeW1sb2dpc2giLCJzeW1sb2ciLCJ0cmFuc2Zvcm1Qb3ciLCJ0cmFuc2Zvcm1TcXJ0IiwidHJhbnNmb3JtU3F1YXJlIiwicG93aXNoIiwiaW52ZXJ0RXh0ZW50IiwicXVhbnRpbGVzIiwibmV3SW50ZXJ2YWwiLCJmbG9vcmkiLCJvZmZzZXRpIiwiZmllbGQiLCJzZXRNb250aCIsInNldEhvdXJzIiwic2V0RnVsbFllYXIiLCJnZXRGdWxsWWVhciIsInllYXJzIiwic2V0RGF0ZSIsImdldE1vbnRoIiwibW9udGhzIiwid2Vla2RheSIsImdldERhdGUiLCJnZXREYXkiLCJnZXRUaW1lem9uZU9mZnNldCIsInN1bmRheSIsIm1vbmRheSIsInR1ZXNkYXkiLCJ3ZWRuZXNkYXkiLCJ0aHVyc2RheSIsImZyaWRheSIsInNhdHVyZGF5Iiwic3VuZGF5cyIsIm1vbmRheXMiLCJ0dWVzZGF5cyIsIndlZG5lc2RheXMiLCJ0aHVyc2RheXMiLCJmcmlkYXlzIiwic2F0dXJkYXlzIiwiZGF5cyIsImdldE1pbGxpc2Vjb25kcyIsImdldFNlY29uZHMiLCJnZXRNaW51dGVzIiwidXRjV2Vla2RheSIsInNldFVUQ0RhdGUiLCJnZXRVVENEYXkiLCJzZXRVVENIb3VycyIsInV0Y1N1bmRheSIsInV0Y01vbmRheSIsInV0Y1R1ZXNkYXkiLCJ1dGNXZWRuZXNkYXkiLCJ1dGNUaHVyc2RheSIsInV0Y0ZyaWRheSIsInV0Y1NhdHVyZGF5IiwidXRjU3VuZGF5cyIsInV0Y01vbmRheXMiLCJ1dGNUdWVzZGF5cyIsInV0Y1dlZG5lc2RheXMiLCJ1dGNUaHVyc2RheXMiLCJ1dGNGcmlkYXlzIiwidXRjU2F0dXJkYXlzIiwidXRjRGF5IiwidXRjRGF5cyIsInV0Y1llYXIiLCJzZXRVVENNb250aCIsInNldFVUQ0Z1bGxZZWFyIiwidXRjWWVhcnMiLCJsb2NhbERhdGUiLCJIIiwiTCIsInV0Y0RhdGUiLCJVVEMiLCJuZXdEYXRlIiwiZm9ybWF0TG9jYWxlIiwibG9jYWxlX2RhdGVUaW1lIiwiZGF0ZVRpbWUiLCJsb2NhbGVfZGF0ZSIsImxvY2FsZV90aW1lIiwibG9jYWxlX3BlcmlvZHMiLCJwZXJpb2RzIiwibG9jYWxlX3dlZWtkYXlzIiwibG9jYWxlX3Nob3J0V2Vla2RheXMiLCJzaG9ydERheXMiLCJsb2NhbGVfbW9udGhzIiwibG9jYWxlX3Nob3J0TW9udGhzIiwic2hvcnRNb250aHMiLCJwZXJpb2RSZSIsImZvcm1hdFJlIiwicGVyaW9kTG9va3VwIiwiZm9ybWF0TG9va3VwIiwid2Vla2RheVJlIiwid2Vla2RheUxvb2t1cCIsInNob3J0V2Vla2RheVJlIiwic2hvcnRXZWVrZGF5TG9va3VwIiwibW9udGhSZSIsIm1vbnRoTG9va3VwIiwic2hvcnRNb250aFJlIiwic2hvcnRNb250aExvb2t1cCIsImZvcm1hdHMiLCJmb3JtYXREYXlPZk1vbnRoIiwiZm9ybWF0TWljcm9zZWNvbmRzIiwiZm9ybWF0SG91cjI0IiwiZm9ybWF0SG91cjEyIiwiZm9ybWF0RGF5T2ZZZWFyIiwiZm9ybWF0TWlsbGlzZWNvbmRzIiwiZm9ybWF0TW9udGhOdW1iZXIiLCJmb3JtYXRNaW51dGVzIiwiZm9ybWF0VW5peFRpbWVzdGFtcCIsImZvcm1hdFVuaXhUaW1lc3RhbXBTZWNvbmRzIiwiZm9ybWF0U2Vjb25kcyIsImZvcm1hdFdlZWtkYXlOdW1iZXJNb25kYXkiLCJmb3JtYXRXZWVrTnVtYmVyU3VuZGF5IiwiZm9ybWF0V2Vla051bWJlcklTTyIsImZvcm1hdFdlZWtkYXlOdW1iZXJTdW5kYXkiLCJmb3JtYXRXZWVrTnVtYmVyTW9uZGF5IiwiZm9ybWF0RnVsbFllYXIiLCJmb3JtYXRab25lIiwiZm9ybWF0TGl0ZXJhbFBlcmNlbnQiLCJ1dGNGb3JtYXRzIiwiZm9ybWF0VVRDRGF5T2ZNb250aCIsImZvcm1hdFVUQ01pY3Jvc2Vjb25kcyIsImZvcm1hdFVUQ0hvdXIyNCIsImZvcm1hdFVUQ0hvdXIxMiIsImZvcm1hdFVUQ0RheU9mWWVhciIsImZvcm1hdFVUQ01pbGxpc2Vjb25kcyIsImZvcm1hdFVUQ01vbnRoTnVtYmVyIiwiZm9ybWF0VVRDTWludXRlcyIsImZvcm1hdFVUQ1NlY29uZHMiLCJmb3JtYXRVVENXZWVrZGF5TnVtYmVyTW9uZGF5IiwiZm9ybWF0VVRDV2Vla051bWJlclN1bmRheSIsImZvcm1hdFVUQ1dlZWtOdW1iZXJJU08iLCJmb3JtYXRVVENXZWVrZGF5TnVtYmVyU3VuZGF5IiwiZm9ybWF0VVRDV2Vla051bWJlck1vbmRheSIsImZvcm1hdFVUQ1llYXIiLCJmb3JtYXRVVENGdWxsWWVhciIsImZvcm1hdFVUQ1pvbmUiLCJwYXJzZXMiLCJwYXJzZVNwZWNpZmllciIsInBhcnNlRGF5T2ZNb250aCIsInBhcnNlTWljcm9zZWNvbmRzIiwicGFyc2VIb3VyMjQiLCJwYXJzZURheU9mWWVhciIsInBhcnNlTWlsbGlzZWNvbmRzIiwicGFyc2VNb250aE51bWJlciIsInBhcnNlTWludXRlcyIsInBhcnNlUXVhcnRlciIsInBhcnNlVW5peFRpbWVzdGFtcCIsInBhcnNlVW5peFRpbWVzdGFtcFNlY29uZHMiLCJwYXJzZVNlY29uZHMiLCJwYXJzZVdlZWtkYXlOdW1iZXJNb25kYXkiLCJwYXJzZVdlZWtOdW1iZXJTdW5kYXkiLCJwYXJzZVdlZWtOdW1iZXJJU08iLCJwYXJzZVdlZWtkYXlOdW1iZXJTdW5kYXkiLCJwYXJzZVdlZWtOdW1iZXJNb25kYXkiLCJwYXJzZVllYXIiLCJwYXJzZUZ1bGxZZWFyIiwicGFyc2Vab25lIiwicGFyc2VMaXRlcmFsUGVyY2VudCIsInBhZHMiLCJuZXdQYXJzZSIsIloiLCJ3ZWVrIiwiZGF5IiwiUSIsIlYiLCJVIiwidXRjRm9ybWF0IiwidXRjUGFyc2UiLCJ0aW1lRm9ybWF0IiwidGltZVBhcnNlIiwibnVtYmVyUmUiLCJwZXJjZW50UmUiLCJyZXF1b3RlUmUiLCJyZXF1b3RlIiwiZG93IiwiY2FsZW5kYXIiLCJtb250aCIsImhvdXIiLCJtaW51dGUiLCJzZWNvbmQiLCJtaWxsaXNlY29uZCIsImZvcm1hdE1pbGxpc2Vjb25kIiwiZm9ybWF0U2Vjb25kIiwiZm9ybWF0TWludXRlIiwiZm9ybWF0SG91ciIsImZvcm1hdERheSIsImZvcm1hdFdlZWsiLCJmb3JtYXRNb250aCIsImZvcm1hdFllYXIiLCJ0aWNrSW50ZXJ2YWxzIiwidGlja0ludGVydmFsIiwidXRjTW9udGgiLCJ1dGNNb250aHMiLCJ1dGNIb3VyIiwic2V0VVRDTWludXRlcyIsInV0Y0hvdXJzIiwidXRjTWludXRlIiwic2V0VVRDU2Vjb25kcyIsInV0Y01pbnV0ZXMiLCJrMTAiLCJzZXF1ZW50aWFsIiwic2VxdWVudGlhbExvZyIsInNlcXVlbnRpYWxTeW1sb2ciLCJzZXF1ZW50aWFsUG93Iiwic2VxdWVudGlhbFNxcnQiLCJzZXF1ZW50aWFsUXVhbnRpbGUiLCJrMjEiLCJkaXZlcmdpbmciLCJkaXZlcmdpbmdMb2ciLCJkaXZlcmdpbmdTeW1sb2ciLCJkaXZlcmdpbmdQb3ciLCJkaXZlcmdpbmdTcXJ0Iiwic2NoZW1lIiwicmFtcCIsIndhcm0iLCJjb29sIiwidHMiLCJwaV8xXzMiLCJwaV8yXzMiLCJtYWdtYSIsImluZmVybm8iLCJwbGFzbWEiLCJuZXh0SWQiLCJMb2NhbCIsImFyY0lubmVyUmFkaXVzIiwiaW5uZXJSYWRpdXMiLCJhcmNPdXRlclJhZGl1cyIsIm91dGVyUmFkaXVzIiwiYXJjU3RhcnRBbmdsZSIsImFyY0VuZEFuZ2xlIiwiYXJjUGFkQW5nbGUiLCJ4MTAiLCJ5MTAiLCJ4MzIiLCJ5MzIiLCJjb3JuZXJUYW5nZW50cyIsInJjIiwib3giLCJveSIsIngxMSIsInkxMSIsIkQiLCJjeDAiLCJjeDEiLCJkeDAiLCJkeTAiLCJkeDEiLCJkeTEiLCJjb3JuZXJSYWRpdXMiLCJwYWRSYWRpdXMiLCJhMDEiLCJhMTEiLCJhMTAiLCJkYTAiLCJkYTEiLCJhcCIsInJwIiwicmMwIiwicmMxIiwib2MiLCJieCIsImJ5Iiwia2MiLCJsYyIsIkxpbmVhciIsImFyZWFTdGFydCIsImFyZWFFbmQiLCJkZWZpbmVkIiwiY3VydmUiLCJkZWZpbmVkMCIsIngweiIsInkweiIsImFyZWFsaW5lIiwibGluZVgwIiwibGluZVkwIiwibGluZVkxIiwibGluZVgxIiwicGllIiwiYXJjcyIsInBhIiwiY3VydmVSYWRpYWxMaW5lYXIiLCJjdXJ2ZVJhZGlhbCIsIlJhZGlhbCIsIl9jdXJ2ZSIsInJhZGlhbCIsImxpbmVSYWRpYWwiLCJsaW5lU3RhcnRBbmdsZSIsImxpbmVFbmRBbmdsZSIsImxpbmVJbm5lclJhZGl1cyIsImxpbmVPdXRlclJhZGl1cyIsImxpbmtTb3VyY2UiLCJsaW5rVGFyZ2V0IiwiY3VydmVIb3Jpem9udGFsIiwiY3VydmVWZXJ0aWNhbCIsInBvaW50UmFkaWFsIiwicDIiLCJwMyIsImxpbmtIb3Jpem9udGFsIiwibGlua1ZlcnRpY2FsIiwibGlua1JhZGlhbCIsImRyYXciLCJ0YW4zMCIsInRhbjMwXzIiLCJrciIsInNxcnQzIiwiZGlhbW9uZCIsInNxdWFyZSIsInN0YXIiLCJ0cmlhbmdsZSIsInd5ZSIsIkJhc2lzIiwiQmFzaXNDbG9zZWQiLCJfeDIiLCJfeDMiLCJfeDQiLCJfeTIiLCJfeTMiLCJfeTQiLCJCYXNpc09wZW4iLCJCdW5kbGUiLCJfYmFzaXMiLCJfYmV0YSIsImJ1bmRsZSIsIl9rIiwiQ2FyZGluYWwiLCJ0ZW5zaW9uIiwiY2FyZGluYWwiLCJDYXJkaW5hbENsb3NlZCIsIl94NSIsIl95NSIsIkNhcmRpbmFsT3BlbiIsIl9sMDFfYSIsIl9sMDFfMmEiLCJfbDEyX2EiLCJfbDEyXzJhIiwiX2wyM19hIiwiX2wyM18yYSIsIkNhdG11bGxSb20iLCJfYWxwaGEiLCJ4MjMiLCJ5MjMiLCJjYXRtdWxsUm9tIiwiQ2F0bXVsbFJvbUNsb3NlZCIsIkNhdG11bGxSb21PcGVuIiwiTGluZWFyQ2xvc2VkIiwic2xvcGUzIiwiaDAiLCJoMSIsInNsb3BlMiIsIk1vbm90b25lWCIsIk1vbm90b25lWSIsIlJlZmxlY3RDb250ZXh0IiwibW9ub3RvbmVYIiwibW9ub3RvbmVZIiwiTmF0dXJhbCIsImNvbnRyb2xQb2ludHMiLCJfdDAiLCJweCIsInB5IiwiU3RlcCIsIl90Iiwic3RlcEJlZm9yZSIsInN0ZXBBZnRlciIsInNlcmllcyIsInN0YWNrVmFsdWUiLCJzdGFjayIsIm96Iiwia3oiLCJzeiIsInNpaiIsImtpIiwic2kiLCJ5biIsInMyIiwic2lqMCIsInMzIiwicGVha3MiLCJwZWFrIiwidmkiLCJ2aiIsImFwcGVhcmFuY2UiLCJ0b3BzIiwiYm90dG9tcyIsInRvSVNPU3RyaW5nIiwidG90YWwiLCJSZWRCbGFja1RyZWUiLCJSZWRCbGFja05vZGUiLCJSIiwiUCIsIlJlZEJsYWNrUm90YXRlTGVmdCIsIlJlZEJsYWNrUm90YXRlUmlnaHQiLCJSZWRCbGFja0ZpcnN0IiwiYWZ0ZXIiLCJncmFuZHBhIiwidW5jbGUiLCJzaWJsaW5nIiwiY3JlYXRlRWRnZSIsImVkZ2UiLCJzZXRFZGdlRW5kIiwiY2VsbHMiLCJoYWxmZWRnZXMiLCJjcmVhdGVCb3JkZXJFZGdlIiwidmVydGV4IiwiY2xpcEVkZ2UiLCJjb25uZWN0RWRnZSIsImZtIiwiZmIiLCJseCIsImx5IiwicngiLCJyeSIsImNlbGxIYWxmZWRnZUFuZ2xlIiwiY2VsbCIsInNpdGUiLCJ2YSIsInZiIiwiY2VsbEhhbGZlZGdlU3RhcnQiLCJjZWxsSGFsZmVkZ2VFbmQiLCJmaXJzdENpcmNsZSIsImNpcmNsZVBvb2wiLCJDaXJjbGUiLCJhdHRhY2hDaXJjbGUiLCJsQXJjIiwickFyYyIsImxTaXRlIiwiY1NpdGUiLCJyU2l0ZSIsImhhIiwiaGMiLCJkZXRhY2hDaXJjbGUiLCJiZWFjaFBvb2wiLCJCZWFjaCIsImNyZWF0ZUJlYWNoIiwiYmVhY2giLCJkZXRhY2hCZWFjaCIsImJlYWNoZXMiLCJyZW1vdmVCZWFjaCIsImRpc2FwcGVhcmluZyIsImlBcmMiLCJuQXJjcyIsImFkZEJlYWNoIiwiZHhsIiwiZHhyIiwiZGlyZWN0cml4IiwibGVmdEJyZWFrUG9pbnQiLCJyaWdodEJyZWFrUG9pbnQiLCJjcmVhdGVDZWxsIiwibmV3QXJjIiwiaGIiLCJyZm9jeCIsInJmb2N5IiwicGJ5MiIsImxmb2N4IiwibGZvY3kiLCJwbGJ5MiIsImhsIiwiYWJ5MiIsImxleGljb2dyYXBoaWMiLCJEaWFncmFtIiwic2l0ZXMiLCJzb3J0Q2VsbEhhbGZlZGdlcyIsImNsaXBFZGdlcyIsImlDZWxsIiwiaUhhbGZlZGdlIiwibkhhbGZlZGdlcyIsInN0YXJ0WCIsInN0YXJ0WSIsImVuZFgiLCJlbmRZIiwibkNlbGxzIiwiZGMiLCJ2MDEiLCJ2MTEiLCJ2MTAiLCJjbGlwQ2VsbHMiLCJlZGdlcyIsInRyaWFuZ2xlcyIsIl9mb3VuZCIsInZvcm9ub2kiLCJab29tRXZlbnQiLCJUcmFuc2Zvcm0iLCJhcHBseVgiLCJhcHBseVkiLCJsb2NhdGlvbiIsImludmVydFgiLCJpbnZlcnRZIiwicmVzY2FsZVgiLCJyZXNjYWxlWSIsIl9fem9vbSIsIlNWR0VsZW1lbnQiLCJkZWZhdWx0VHJhbnNmb3JtIiwiZGVmYXVsdFdoZWVsRGVsdGEiLCJkZWx0YVkiLCJkZWx0YU1vZGUiLCJkZWZhdWx0Q29uc3RyYWluIiwidHJhbnNsYXRlRXh0ZW50IiwidG91Y2hzdGFydGluZyIsImNvbnN0cmFpbiIsIndoZWVsRGVsdGEiLCJzY2FsZUV4dGVudCIsInpvb20iLCJ3aGVlbGVkIiwiZGJsY2xpY2tlZCIsIl9fem9vbWluZyIsIkdlc3R1cmUiLCJ0YXBzIiwid2hlZWwiLCJ3aGVlbGlkbGVkIiwiazEiLCJ0b3VjaDAiLCJ0b3VjaDEiLCJsMCIsImwxIiwiZHAiLCJkbCIsImNvbGxlY3Rpb24iLCJzY2FsZUJ5Iiwic2NhbGVUbyIsImswIiwidHJhbnNsYXRlQnkiLCJ0cmFuc2xhdGVUbyIsIl9faW1wb3J0U3RhciIsIm1vZCIsIl9faW1wb3J0RGVmYXVsdCIsImQzXzEiLCJyZWFjdF8xIiwiVGltZVZpenRzeF8xIiwicXVlcmllcyIsInJlc3BvbnNlcyIsImxvY2FsUXVlcnlTZWxlY3RlZCIsInRpbWVHcmFwaCIsIl9hIiwidXNlU3RhdGUiLCJzZWxlY3RlZFF1ZXJ5Iiwic2V0U2VsZWN0ZWRRdWVyeSIsIl9iIiwicmVuZGVyTGluZSIsInNldFJlbmRlckxpbmUiLCJzdmdSZWYiLCJ1c2VSZWYiLCJ1c2VFZmZlY3QiLCJfbG9vcF8xIiwicXVlcnkiLCJ0aW1lVG90IiwiZGF0YUNhdCIsInVwcGVyIiwiY2hhcnREaXYiLCJnZXRFbGVtZW50QnlJZCIsIm1hcmdpbiIsInloZWlnaHQiLCJ4d2lkdGgiLCJ4U2NhbGUiLCJ5QXhpcyIsInhBeGlzIiwic2NhbGVCYW5kIiwieVNjYWxlIiwic2NhbGVMaW5lYXIiLCJjb2xvclNjYWxlIiwiZmVNZXJnZSIsInF1ZXJ5SW4iLCJpbmNsdWRlcyIsInRpbWVEYXRhIiwic2VsZWN0ZWRRdWVyaWVzIiwiRnJhZ21lbnQiLCJyZWYiLCJjbGFzc05hbWUiLCJyZWFjdElzIiwiUkVBQ1RfU1RBVElDUyIsImNvbnRleHRUeXBlIiwiZ2V0RGVmYXVsdFByb3BzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwibWl4aW5zIiwiS05PV05fU1RBVElDUyIsImNhbGxlciIsImFyaXR5IiwiTUVNT19TVEFUSUNTIiwiVFlQRV9TVEFUSUNTIiwiZ2V0U3RhdGljcyIsImlzTWVtbyIsIkZvcndhcmRSZWYiLCJNZW1vIiwiZ2V0UHJvdG90eXBlT2YiLCJvYmplY3RQcm90b3R5cGUiLCJob2lzdE5vblJlYWN0U3RhdGljcyIsInRhcmdldENvbXBvbmVudCIsInNvdXJjZUNvbXBvbmVudCIsImJsYWNrbGlzdCIsImluaGVyaXRlZENvbXBvbmVudCIsInRhcmdldFN0YXRpY3MiLCJzb3VyY2VTdGF0aWNzIiwib2JqZWN0S2V5cyIsImlzQXJndW1lbnRzIiwiaXMiLCJpc1JlZ2V4IiwiaXNEYXRlIiwiZ2V0VGltZSIsImRlZXBFcXVhbCIsImFjdHVhbCIsImV4cGVjdGVkIiwiaXNVbmRlZmluZWRPck51bGwiLCJhSXNSZWdleCIsImJJc1JlZ2V4IiwiYUlzQnVmZmVyIiwiaXNCdWZmZXIiLCJiSXNCdWZmZXIiLCJrYSIsImtiIiwib2JqRXF1aXYiLCJmb3IiLCJpdGVyYXRvciIsImlzTW91bnRlZCIsImVucXVldWVGb3JjZVVwZGF0ZSIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlU2V0U3RhdGUiLCJyZWZzIiwiRiIsIkciLCJmb3JjZVVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiSiIsIksiLCJfX3NlbGYiLCJfX3NvdXJjZSIsIiQkdHlwZW9mIiwiX293bmVyIiwiTyIsImtleVByZWZpeCIsImZ1bmMiLCJkb25lIiwiZXNjYXBlIiwiYmEiLCJ0b0FycmF5IiwiY3JlYXRlUmVmIiwiUHVyZUNvbXBvbmVudCIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9jdXJyZW50VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIlByb3ZpZGVyIiwiQ29uc3VtZXIiLCJmb3J3YXJkUmVmIiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJ1c2VDYWxsYmFjayIsInVzZUNvbnRleHQiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwidXNlRGVidWdWYWx1ZSIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwiUHJvZmlsZXIiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJjcmVhdGVGYWN0b3J5IiwiaXNWYWxpZEVsZW1lbnQiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsInN1c3BlbnNlIiwiUmVhY3RDdXJyZW50T3duZXIiLCJJc1NvbWVSZW5kZXJlckFjdGluZyIsImVhIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJmYSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwicmVnaXN0cmF0aW9uTmFtZSIsImlhIiwiamEiLCJkZXBlbmRlbmNpZXMiLCJvbkVycm9yIiwibGEiLCJtYSIsIm9hIiwicWEiLCJzYSIsInVhIiwid2EiLCJjdXJyZW50VGFyZ2V0IiwicmEiLCJ6YSIsIkFhIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc1BlcnNpc3RlbnQiLCJyZWxlYXNlIiwiQmEiLCJDYSIsImluamVjdEV2ZW50UGx1Z2luT3JkZXIiLCJpbmplY3RFdmVudFBsdWdpbnNCeU5hbWUiLCJEYSIsInN0YXRlTm9kZSIsImRpc2FibGVkIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiS2EiLCJMYSIsIk1hIiwiTmEiLCJPYSIsIlBhIiwiUWEiLCJSYSIsIlNhIiwiVGEiLCJVYSIsIldhIiwiWGEiLCJ0YWciLCJfZGVidWdPd25lciIsIl9kZWJ1Z1NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsInJldHVybiIsIllhIiwiWmEiLCIkYSIsImJiIiwiZGIiLCJlYiIsImdiIiwiaWIiLCJqYiIsImxiIiwibWIiLCJvYiIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJzYW5pdGl6ZVVSTCIsInNiIiwidGIiLCJ1YiIsInFiIiwicmIiLCJwYiIsIndiIiwiX3ZhbHVlVHJhY2tlciIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJ6YiIsImNoZWNrZWQiLCJBYiIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiQmIiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiQ2IiLCJFYiIsIkZiIiwiR2IiLCJhY3RpdmVFbGVtZW50IiwiSWIiLCJIYiIsIkpiIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJLYiIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiTGIiLCJNYiIsIk5iIiwieGxpbmtIcmVmIiwiT2IiLCJQYiIsIlFiIiwiUmIiLCJTYiIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJUYiIsImxhc3RDaGlsZCIsIlViIiwiVmIiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJXYiIsIlhiIiwiWWIiLCJhbmltYXRpb24iLCJaYiIsIiRiIiwiYWMiLCJiYyIsImVjIiwiYWx0ZXJuYXRlIiwiZWZmZWN0VGFnIiwiZmMiLCJtZW1vaXplZFN0YXRlIiwiZGVoeWRyYXRlZCIsImdjIiwiaWMiLCJqYyIsIm1jIiwibmMiLCJwYyIsInFjIiwidGMiLCJ1YyIsInZjIiwiemMiLCJibG9ja2VkT24iLCJ0b3BMZXZlbFR5cGUiLCJldmVudFN5c3RlbUZsYWdzIiwibmF0aXZlRXZlbnQiLCJBYyIsImRlbGV0ZSIsInBvaW50ZXJJZCIsIkJjIiwiQ2MiLCJFYyIsIkZjIiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwiaHlkcmF0ZSIsImNvbnRhaW5lckluZm8iLCJHYyIsIkhjIiwiSWMiLCJKYyIsIktjIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiTGMiLCJNYyIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsIk5jIiwiT2MiLCJkaXNwYXRjaENvbmZpZyIsIlBjIiwiX3RhcmdldEluc3QiLCJRYyIsIlJjIiwiU2MiLCJUYyIsIlVjIiwiSW50ZXJmYWNlIiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiV2MiLCJldmVudFBvb2wiLCJYYyIsImRlc3RydWN0b3IiLCJWYyIsImdldFBvb2xlZCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJldmVudFBoYXNlIiwidGltZVN0YW1wIiwiaXNUcnVzdGVkIiwiWWMiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiWmMiLCJjbGlwYm9hcmREYXRhIiwiJGMiLCJhZCIsImJkIiwiY2hhckNvZGUiLCJjZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJkZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJlZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJnZCIsImdldE1vZGlmaWVyU3RhdGUiLCJoZCIsIndoaWNoIiwiamQiLCJrZCIsImxkIiwibWQiLCJuZCIsInNjcmVlblgiLCJzY3JlZW5ZIiwicGFnZVgiLCJwYWdlWSIsImJ1dHRvbnMiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIm9kIiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsInBkIiwiZGF0YVRyYW5zZmVyIiwicWQiLCJ0YXJnZXRUb3VjaGVzIiwicmQiLCJzZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwid2hlZWxEZWx0YVkiLCJkZWx0YVoiLCJ0ZCIsInVkIiwidmQiLCJ3ZCIsInlkIiwiemQiLCJBZCIsIkJkIiwiQ2QiLCJEZCIsImJ1YmJsZWQiLCJjYXB0dXJlZCIsImV2ZW50UHJpb3JpdHkiLCJFZCIsImdldEV2ZW50UHJpb3JpdHkiLCJGZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiR2QiLCJIZCIsIkpkIiwiS2QiLCJ0YXJnZXRJbnN0IiwiTGQiLCJNZCIsIk5kIiwiT2QiLCJQZCIsIlFkIiwiRGMiLCJSZCIsIlNkIiwiV2Vha01hcCIsInhjIiwieWMiLCJUZCIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsIlVkIiwiVmQiLCJXZCIsIlhkIiwibWVudWl0ZW0iLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJrZXlnZW4iLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsIllkIiwiWmQiLCIkZCIsImFlIiwiYmUiLCJjZSIsImRlIiwiZmUiLCJjb250ZW50V2luZG93IiwiaHJlZiIsImdlIiwiY29udGVudEVkaXRhYmxlIiwibGUiLCJtZSIsImF1dG9Gb2N1cyIsIm9lIiwiX19odG1sIiwicGUiLCJxZSIsInRlIiwidWUiLCJ2ZSIsIndlIiwieGUiLCJ5ZSIsInplIiwiQWUiLCJCZSIsIkNlIiwiRGUiLCJFZSIsIkZlIiwiR2UiLCJIZSIsIkllIiwiSmUiLCJLZSIsIkxlIiwiYmVmb3JlSW5wdXQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsIk1lIiwiTmUiLCJPZSIsIlBlIiwiU2UiLCJRZSIsImNoYXIiLCJSZSIsIlRlIiwiZGF0ZXRpbWUiLCJlbWFpbCIsInBhc3N3b3JkIiwidGVsIiwidXJsIiwiVWUiLCJWZSIsIldlIiwiWGUiLCJZZSIsIlplIiwiJGUiLCJhZiIsImJmIiwiY2YiLCJkZXRhY2hFdmVudCIsImRmIiwiZWYiLCJhdHRhY2hFdmVudCIsImZmIiwiZ2YiLCJoZiIsImxmIiwiamYiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwia2YiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInBvaW50ZXJFbnRlciIsInBvaW50ZXJMZWF2ZSIsIm1mIiwicGFyZW50V2luZG93Iiwib2YiLCJwZiIsInFmIiwicmYiLCJzZiIsInRmIiwidWYiLCJ2ZiIsIndmIiwieGYiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsImFuY2hvck5vZGUiLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsInlmIiwib25TZWxlY3QiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwiQWYiLCJCZiIsIkNmIiwiRGYiLCJFZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsIkZmIiwiR2YiLCJIZiIsIklmIiwiSmYiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsIktmIiwiTGYiLCJNZiIsIk5mIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJPZiIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiUGYiLCJ1bnN0YWJsZV9yZXF1ZXN0UGFpbnQiLCJRZiIsInVuc3RhYmxlX25vdyIsIlJmIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJTZiIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwiVGYiLCJVZiIsIlZmIiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJXZiIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsIlhmIiwiWWYiLCJaZiIsIiRmIiwiYWciLCJiZyIsImNnIiwiZGciLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsImxnIiwibWciLCJuZyIsIm9nIiwicGciLCJxZyIsInJnIiwic2ciLCJ0ZyIsInVnIiwiY2hpbGRFeHBpcmF0aW9uVGltZSIsInZnIiwiZmlyc3RDb250ZXh0IiwiZXhwaXJhdGlvblRpbWUiLCJ3ZyIsInhnIiwib2JzZXJ2ZWRCaXRzIiwicmVzcG9uZGVycyIsInlnIiwiemciLCJiYXNlU3RhdGUiLCJmaXJzdFVwZGF0ZSIsImxhc3RVcGRhdGUiLCJmaXJzdENhcHR1cmVkVXBkYXRlIiwibGFzdENhcHR1cmVkVXBkYXRlIiwiZmlyc3RFZmZlY3QiLCJsYXN0RWZmZWN0IiwiZmlyc3RDYXB0dXJlZEVmZmVjdCIsImxhc3RDYXB0dXJlZEVmZmVjdCIsIkFnIiwiQmciLCJzdXNwZW5zZUNvbmZpZyIsInBheWxvYWQiLCJuZXh0RWZmZWN0IiwiQ2ciLCJEZyIsInVwZGF0ZVF1ZXVlIiwiRWciLCJGZyIsIkdnIiwiSGciLCJJZyIsIkpnIiwiS2ciLCJMZyIsIk1nIiwiTmciLCJPZyIsIlNnIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsIlBnIiwiUWciLCJSZyIsIlRnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiVWciLCJWZyIsIldnIiwiWGciLCJZZyIsIl9zdHJpbmdSZWYiLCJaZyIsIiRnIiwiYWgiLCJiaCIsImVsZW1lbnRUeXBlIiwiY2giLCJkaCIsImVoIiwidGEiLCJmaCIsImdoIiwiaGgiLCJpaCIsImpoIiwia2giLCJsaCIsIm1oIiwidGFnTmFtZSIsIm5oIiwib2giLCJwaCIsInFoIiwibWVtb2l6ZWRQcm9wcyIsInJldmVhbE9yZGVyIiwicmgiLCJyZXNwb25kZXIiLCJzaCIsInRoIiwidWgiLCJ2aCIsIndoIiwieGgiLCJ5aCIsInpoIiwiQWgiLCJCaCIsIkNoIiwiR2giLCJIaCIsIkloIiwiSmgiLCJLaCIsIkxoIiwiTWgiLCJOaCIsInF1ZXVlIiwiYmFzZVVwZGF0ZSIsIk9oIiwiUGgiLCJRaCIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJhY3Rpb24iLCJsYXN0IiwibGFzdFJlbmRlcmVkU3RhdGUiLCJlYWdlclJlZHVjZXIiLCJlYWdlclN0YXRlIiwiUmgiLCJTaCIsIlRoIiwiVWgiLCJkZXBzIiwiVmgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwicmVhZENvbnRleHQiLCJ1c2VSZXNwb25kZXIiLCJ1c2VEZWZlcnJlZFZhbHVlIiwidXNlVHJhbnNpdGlvbiIsInVuc3RhYmxlX25leHQiLCJlaSIsImdpIiwicGVuZGluZ1Byb3BzIiwiaWkiLCJqaSIsImxpIiwibWkiLCJuaSIsIm9pIiwicWkiLCJ0aSIsInVpIiwicGVuZGluZ0NvbnRleHQiLCJIaSIsIkppIiwiS2kiLCJyZXRyeVRpbWUiLCJmYWxsYmFjayIsInVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrIiwiemkiLCJBaSIsImlzQmFja3dhcmRzIiwicmVuZGVyaW5nIiwidGFpbCIsInRhaWxFeHBpcmF0aW9uIiwidGFpbE1vZGUiLCJCaSIsIkNpIiwiTGkiLCJNaSIsIk5pIiwib25DbGljayIsIm9uY2xpY2siLCJPaSIsIldlYWtTZXQiLCJQaSIsIlNpIiwiUmkiLCJUaSIsIlVpIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJWaSIsIldpIiwiUWkiLCJYaSIsIllpIiwiWmkiLCIkaSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJhaiIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJiaiIsImRpc3BsYXkiLCJjaiIsImVqIiwiZmoiLCJnaiIsImhqIiwiaWoiLCJjb21wb25lbnREaWRDYXRjaCIsImpqIiwiY29tcG9uZW50U3RhY2siLCJnayIsImtqIiwibGoiLCJtaiIsIndqIiwiemoiLCJBaiIsIkJqIiwiRGoiLCJFaiIsIkZqIiwiR2oiLCJIaiIsIklqIiwiSmoiLCJ0aW1lb3V0TXMiLCJLaiIsIkxqIiwiTWoiLCJOaiIsIk9qIiwibGFzdEV4cGlyZWRUaW1lIiwiUGoiLCJmaXJzdFBlbmRpbmdUaW1lIiwibGFzdFBpbmdlZFRpbWUiLCJuZXh0S25vd25QZW5kaW5nTGV2ZWwiLCJjYWxsYmFja0V4cGlyYXRpb25UaW1lIiwiY2FsbGJhY2tQcmlvcml0eSIsImNhbGxiYWNrTm9kZSIsIlFqIiwiUmoiLCJTaiIsIlRqIiwiVWoiLCJWaiIsIldqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRFeHBpcmF0aW9uVGltZSIsImxhc3RTdXNwZW5kZWRUaW1lIiwiWGoiLCJ0aW1lb3V0SGFuZGxlIiwiWWoiLCJidXN5TWluRHVyYXRpb25NcyIsImJ1c3lEZWxheU1zIiwiWmoiLCJiayIsImNrIiwicGluZ0NhY2hlIiwiZGsiLCJlayIsImZrIiwiaWsiLCJmaXJzdFN1c3BlbmRlZFRpbWUiLCJyYW5nZUNvdW50IiwiRGIiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiamsiLCJlZSIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwiZm9jdXMiLCJEaCIsImZkIiwiaGsiLCJFaCIsIkZoIiwiRGkiLCJFaSIsIkZpIiwieGQiLCJHaSIsImtrIiwibGsiLCJtayIsImhpZGRlbiIsIlZhIiwibmsiLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJwayIsInBlbmRpbmdDaGlsZHJlbiIsInFrIiwicmsiLCJ0ayIsInVrIiwidmsiLCJ3YyIsIl9pbnRlcm5hbFJvb3QiLCJ3ayIsInprIiwiQWsiLCJCayIsInVubW91bnQiLCJmb3JtIiwiYWsiLCJDayIsImNyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwiZmx1c2hTeW5jIiwiRXZlbnRzIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJidW5kbGVUeXBlIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVQcm9wcyIsInNldFN1c3BlbnNlSGFuZGxlciIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsIkRrIiwiRWsiLCJNZXNzYWdlQ2hhbm5lbCIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwic29ydEluZGV4Iiwic3RhcnRUaW1lIiwicHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsInVuc3RhYmxlX1Byb2ZpbGluZyIsIl9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyIsInRpbWVTdGFtcHMiLCJxdWVyIiwidGltZXN0YW1wIiwibmV3TGluZSIsImN1cnZlQ2FyZGluYWwiLCJ1cHBlckxpbmUiLCJmb2N1c1RleHQiLCJtb3VzZUxpbmUiLCJzZWxlY3RlZERhdGFZIiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJlbXB0eUZ1bmN0aW9uIiwiZW1wdHlGdW5jdGlvbldpdGhSZXNldCIsInJlc2V0V2FybmluZ0NhY2hlIiwicHJvcE5hbWUiLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJnZXRTaGltIiwiUmVhY3RQcm9wVHlwZXMiLCJib29sIiwiYW55IiwiYXJyYXlPZiIsImluc3RhbmNlT2YiLCJvYmplY3RPZiIsIm9uZU9mIiwib25lT2ZUeXBlIiwic2hhcGUiLCJleGFjdCIsImNoZWNrUHJvcFR5cGVzIiwidHlwZU9mIiwiQXN5bmNNb2RlIiwiQ29uY3VycmVudE1vZGUiLCJDb250ZXh0Q29uc3VtZXIiLCJDb250ZXh0UHJvdmlkZXIiLCJFbGVtZW50IiwiTGF6eSIsIlBvcnRhbCIsImlzVmFsaWRFbGVtZW50VHlwZSIsImlzQXN5bmNNb2RlIiwiaXNDb25jdXJyZW50TW9kZSIsImlzQ29udGV4dENvbnN1bWVyIiwiaXNDb250ZXh0UHJvdmlkZXIiLCJpc0VsZW1lbnQiLCJpc0ZvcndhcmRSZWYiLCJpc0ZyYWdtZW50IiwiaXNMYXp5IiwiaXNQb3J0YWwiLCJpc1Byb2ZpbGVyIiwiaXNTdHJpY3RNb2RlIiwiaXNTdXNwZW5zZSIsIl9wcm9wVHlwZXMyIiwiX2d1ZDIiLCJfY2xhc3NDYWxsQ2hlY2siLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIl9pbmhlcml0cyIsInNldFByb3RvdHlwZU9mIiwiY3JlYXRlRXZlbnRFbWl0dGVyIiwiaGFuZGxlcnMiLCJvZmYiLCJuZXdWYWx1ZSIsImNoYW5nZWRCaXRzIiwiY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfUHJvdmlkZXIkY2hpbGRDb250ZXgiLCJfQ29uc3VtZXIkY29udGV4dFR5cGUiLCJjb250ZXh0UHJvcCIsIl9Db21wb25lbnQiLCJfdGVtcCIsIl9sZW4iLCJfa2V5Iiwib2xkVmFsdWUiLCJfQ29tcG9uZW50MiIsIl90ZW1wMiIsIl9sZW4yIiwiX2tleTIiLCJpc0VudW1lcmFibGUiLCJoYXNEb250RW51bUJ1ZyIsImhhc1Byb3RvRW51bUJ1ZyIsImRvbnRFbnVtcyIsImVxdWFsc0NvbnN0cnVjdG9yUHJvdG90eXBlIiwiY3RvciIsImV4Y2x1ZGVkS2V5cyIsIiRhcHBsaWNhdGlvbkNhY2hlIiwiJGNvbnNvbGUiLCIkZXh0ZXJuYWwiLCIkZnJhbWUiLCIkZnJhbWVFbGVtZW50IiwiJGZyYW1lcyIsIiRpbm5lckhlaWdodCIsIiRpbm5lcldpZHRoIiwiJG9ubW96ZnVsbHNjcmVlbmNoYW5nZSIsIiRvbm1vemZ1bGxzY3JlZW5lcnJvciIsIiRvdXRlckhlaWdodCIsIiRvdXRlcldpZHRoIiwiJHBhZ2VYT2Zmc2V0IiwiJHBhZ2VZT2Zmc2V0IiwiJHBhcmVudCIsIiRzY3JvbGxMZWZ0IiwiJHNjcm9sbFRvcCIsIiRzY3JvbGxYIiwiJHNjcm9sbFkiLCIkc2VsZiIsIiR3ZWJraXRJbmRleGVkREIiLCIkd2Via2l0U3RvcmFnZUluZm8iLCIkd2luZG93IiwiaGFzQXV0b21hdGlvbkVxdWFsaXR5QnVnIiwiaXNPYmplY3QiLCJpc1N0cmluZyIsInRoZUtleXMiLCJza2lwUHJvdG8iLCJza2lwQ29uc3RydWN0b3IiLCJlcXVhbHNDb25zdHJ1Y3RvclByb3RvdHlwZUlmTm90QnVnZ3kiLCJoYXNUb1N0cmluZ1RhZyIsImlzU3RhbmRhcmRBcmd1bWVudHMiLCJpc0xlZ2FjeUFyZ3VtZW50cyIsInN1cHBvcnRzU3RhbmRhcmRBcmd1bWVudHMiLCJudW1iZXJJc05hTiIsInJlZ2V4RXhlYyIsImdPUEQiLCJ0cnlSZWdleEV4ZWNDYWxsIiwiRVJST1JfTUVTU0FHRSIsImJpbmRlciIsImJvdW5kTGVuZ3RoIiwiYm91bmRBcmdzIiwiRW1wdHkiLCJjYWxsQmluZCIsImdldFBvbHlmaWxsIiwiZmxhZ3NCb3VuZCIsIiRGdW5jdGlvbiIsIkdldEludHJpbnNpYyIsIiRhcHBseSIsIiRjYWxsIiwidGhyb3dUeXBlRXJyb3IiLCJUaHJvd1R5cGVFcnJvciIsImNhbGxlZVRocm93cyIsImdPUER0aHJvd3MiLCJnZXRQcm90byIsImFzeW5jR2VuSXRlcmF0b3IiLCJUeXBlZEFycmF5IiwiVWludDhBcnJheSIsIklOVFJJTlNJQ1MiLCJhc3luY0l0ZXJhdG9yIiwiQXRvbWljcyIsImRlY29kZVVSSSIsImRlY29kZVVSSUNvbXBvbmVudCIsImV2YWwiLCJFdmFsRXJyb3IiLCJGbG9hdDY0QXJyYXkiLCJJbnQ4QXJyYXkiLCJJbnQxNkFycmF5IiwiSW50MzJBcnJheSIsIlByb3h5IiwiUmFuZ2VFcnJvciIsIlJlZmxlY3QiLCJTaGFyZWRBcnJheUJ1ZmZlciIsIlN5bnRheEVycm9yIiwiVWludDhDbGFtcGVkQXJyYXkiLCJVaW50MTZBcnJheSIsIlVpbnQzMkFycmF5IiwiVVJJRXJyb3IiLCIkcmVwbGFjZSIsInJlUHJvcE5hbWUiLCJyZUVzY2FwZUNoYXIiLCJzdHJpbmdUb1BhdGgiLCJxdW90ZSIsInN1YlN0cmluZyIsImdldEJhc2VJbnRyaW5zaWMiLCJhbGxvd01pc3NpbmciLCJvcmlnU3ltYm9sIiwiaGFzU3ltYm9sU2hhbSIsInN5bSIsInN5bU9iaiIsInN5bXMiLCJUeXBlRXJyIiwicmVnZXgiLCJ0cnlEYXRlT2JqZWN0IiwicnVudGltZSIsIk9wIiwiJFN5bWJvbCIsIml0ZXJhdG9yU3ltYm9sIiwiYXN5bmNJdGVyYXRvclN5bWJvbCIsInRvU3RyaW5nVGFnU3ltYm9sIiwiaW5uZXJGbiIsIm91dGVyRm4iLCJ0cnlMb2NzTGlzdCIsInByb3RvR2VuZXJhdG9yIiwiR2VuZXJhdG9yIiwiZ2VuZXJhdG9yIiwiQ29udGV4dCIsIl9pbnZva2UiLCJtZXRob2QiLCJkb25lUmVzdWx0IiwiZGVsZWdhdGUiLCJkZWxlZ2F0ZVJlc3VsdCIsIm1heWJlSW52b2tlRGVsZWdhdGUiLCJDb250aW51ZVNlbnRpbmVsIiwic2VudCIsIl9zZW50IiwiZGlzcGF0Y2hFeGNlcHRpb24iLCJhYnJ1cHQiLCJyZWNvcmQiLCJ0cnlDYXRjaCIsIm1ha2VJbnZva2VNZXRob2QiLCJHZW5lcmF0b3JGdW5jdGlvbiIsIkdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlIiwiSXRlcmF0b3JQcm90b3R5cGUiLCJOYXRpdmVJdGVyYXRvclByb3RvdHlwZSIsIkdwIiwiZGVmaW5lSXRlcmF0b3JNZXRob2RzIiwiQXN5bmNJdGVyYXRvciIsInByZXZpb3VzUHJvbWlzZSIsImNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnIiwiaW52b2tlIiwiX19hd2FpdCIsInVud3JhcHBlZCIsImluZm8iLCJyZXN1bHROYW1lIiwibmV4dExvYyIsInB1c2hUcnlFbnRyeSIsImxvY3MiLCJ0cnlMb2MiLCJjYXRjaExvYyIsImZpbmFsbHlMb2MiLCJhZnRlckxvYyIsInRyeUVudHJpZXMiLCJyZXNldFRyeUVudHJ5IiwiY29tcGxldGlvbiIsIml0ZXJhYmxlIiwiaXRlcmF0b3JNZXRob2QiLCJpc0dlbmVyYXRvckZ1bmN0aW9uIiwiZ2VuRnVuIiwibWFyayIsImF3cmFwIiwiYXN5bmMiLCJpdGVyIiwic2tpcFRlbXBSZXNldCIsInByZXYiLCJyb290UmVjb3JkIiwicnZhbCIsImV4Y2VwdGlvbiIsImxvYyIsImNhdWdodCIsImhhc0NhdGNoIiwiaGFzRmluYWxseSIsImZpbmFsbHlFbnRyeSIsImNvbXBsZXRlIiwiZmluaXNoIiwidGhyb3duIiwiZGVsZWdhdGVZaWVsZCIsInJlZ2VuZXJhdG9yUnVudGltZSIsImFjY2lkZW50YWxTdHJpY3RNb2RlIiwiX2FkZENsYXNzIiwiX3JlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJyZW1vdmVDbGFzcyIsImdldENsYXNzTmFtZXMiLCJyZW1vdmVDbGFzc2VzIiwiYWN0aXZlQ2xhc3NOYW1lIiwicmVmbG93QW5kQWRkQ2xhc3MiLCJhcHBlYXJDbGFzc05hbWUiLCJkb25lQ2xhc3NOYW1lIiwiZW50ZXJDbGFzc05hbWUiLCJpc1N0cmluZ0NsYXNzTmFtZXMiLCJfdGhpcyRnZXRDbGFzc05hbWVzNiIsIl9oYXNDbGFzcyIsInJlcGxhY2VDbGFzc05hbWUiLCJvcmlnQ2xhc3MiLCJjbGFzc1RvUmVtb3ZlIiwiX2FyZ3MiLCJoYW5kbGVFbnRlciIsImhhbmRsZUxpZmVjeWNsZSIsImhhbmRsZUVudGVyaW5nIiwiX2xlbjMiLCJfa2V5MyIsImhhbmRsZUVudGVyZWQiLCJfbGVuNCIsIl9rZXk0IiwiaGFuZGxlRXhpdCIsIl9sZW41IiwiX2tleTUiLCJoYW5kbGVFeGl0aW5nIiwiX2xlbjYiLCJfa2V5NiIsIl9sZW43IiwiX2tleTciLCJpZHgiLCJvcmlnaW5hbEFyZ3MiLCJfY2hpbGQkcHJvcHMiLCJpblByb3AiLCJfUmVhY3QkQ2hpbGRyZW4kdG9BcnIiLCJtZXJnZUNoaWxkTWFwcGluZ3MiLCJnZXRQcm9wIiwibmV4dENoaWxkTWFwcGluZyIsImhhc1ByZXYiLCJoYXNOZXh0IiwicHJldkNoaWxkIiwiaXNMZWF2aW5nIiwibWFwRm4iLCJtYXBwZXIiLCJnZXRWYWx1ZUZvcktleSIsIm5leHRLZXlzUGVuZGluZyIsInBlbmRpbmdLZXlzIiwicHJldktleSIsImNoaWxkTWFwcGluZyIsIm5leHRLZXkiLCJwZW5kaW5nTmV4dEtleSIsIl9pbmhlcml0c0xvb3NlIiwiaXNBYnNvbHV0ZSIsInBhdGhuYW1lIiwic3BsaWNlT25lIiwiaGFzVHJhaWxpbmdTbGFzaCIsInRvUGFydHMiLCJmcm9tUGFydHMiLCJpc1RvQWJzIiwiaXNGcm9tQWJzIiwibXVzdEVuZEFicyIsInVwIiwicGFydCIsImNvbmRpdGlvbiIsIm1lc3NhZ2UiLCJhZGRMZWFkaW5nU2xhc2giLCJzdHJpcExlYWRpbmdTbGFzaCIsInN0cmlwQmFzZW5hbWUiLCJoYXNCYXNlbmFtZSIsInN0cmlwVHJhaWxpbmdTbGFzaCIsImNyZWF0ZVBhdGgiLCJjcmVhdGVMb2NhdGlvbiIsImN1cnJlbnRMb2NhdGlvbiIsImhhc2hJbmRleCIsInNlYXJjaEluZGV4IiwicGFyc2VQYXRoIiwiY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIiLCJwcm9tcHQiLCJzZXRQcm9tcHQiLCJuZXh0UHJvbXB0IiwiY29uZmlybVRyYW5zaXRpb25UbyIsImdldFVzZXJDb25maXJtYXRpb24iLCJhcHBlbmRMaXN0ZW5lciIsImlzQWN0aXZlIiwibm90aWZ5TGlzdGVuZXJzIiwiY2FuVXNlRE9NIiwiZ2V0Q29uZmlybWF0aW9uIiwiY29uZmlybSIsImdldEhpc3RvcnlTdGF0ZSIsImhpc3RvcnkiLCJjcmVhdGVCcm93c2VySGlzdG9yeSIsImdsb2JhbEhpc3RvcnkiLCJjYW5Vc2VIaXN0b3J5IiwibmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIiLCJfcHJvcHMiLCJfcHJvcHMkZm9yY2VSZWZyZXNoIiwiZm9yY2VSZWZyZXNoIiwiX3Byb3BzJGdldFVzZXJDb25maXJtIiwiX3Byb3BzJGtleUxlbmd0aCIsImtleUxlbmd0aCIsImJhc2VuYW1lIiwiZ2V0RE9NTG9jYXRpb24iLCJoaXN0b3J5U3RhdGUiLCJfd2luZG93JGxvY2F0aW9uIiwiY3JlYXRlS2V5IiwidHJhbnNpdGlvbk1hbmFnZXIiLCJoYW5kbGVQb3BTdGF0ZSIsImlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQiLCJoYW5kbGVQb3AiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZm9yY2VOZXh0UG9wIiwiZnJvbUxvY2F0aW9uIiwidG9Mb2NhdGlvbiIsInRvSW5kZXgiLCJhbGxLZXlzIiwiZnJvbUluZGV4IiwiZ28iLCJyZXZlcnRQb3AiLCJpbml0aWFsTG9jYXRpb24iLCJjcmVhdGVIcmVmIiwibGlzdGVuZXJDb3VudCIsImNoZWNrRE9NTGlzdGVuZXJzIiwiaXNCbG9ja2VkIiwicHVzaFN0YXRlIiwicHJldkluZGV4IiwibmV4dEtleXMiLCJyZXBsYWNlU3RhdGUiLCJnb0JhY2siLCJnb0ZvcndhcmQiLCJibG9jayIsInVuYmxvY2siLCJsaXN0ZW4iLCJ1bmxpc3RlbiIsIkhhc2hQYXRoQ29kZXJzIiwiaGFzaGJhbmciLCJlbmNvZGVQYXRoIiwiZGVjb2RlUGF0aCIsIm5vc2xhc2giLCJzbGFzaCIsInN0cmlwSGFzaCIsImdldEhhc2hQYXRoIiwicmVwbGFjZUhhc2hQYXRoIiwiY3JlYXRlSGFzaEhpc3RvcnkiLCJfcHJvcHMkaGFzaFR5cGUiLCJoYXNoVHlwZSIsIl9IYXNoUGF0aENvZGVycyRoYXNoVCIsImlnbm9yZVBhdGgiLCJlbmNvZGVkUGF0aCIsInByZXZMb2NhdGlvbiIsImFsbFBhdGhzIiwibGFzdEluZGV4T2YiLCJiYXNlVGFnIiwicHVzaEhhc2hQYXRoIiwibmV4dFBhdGhzIiwibG93ZXJCb3VuZCIsInVwcGVyQm91bmQiLCJjcmVhdGVNZW1vcnlIaXN0b3J5IiwiX3Byb3BzJGluaXRpYWxFbnRyaWVzIiwiaW5pdGlhbEVudHJpZXMiLCJfcHJvcHMkaW5pdGlhbEluZGV4IiwiaW5pdGlhbEluZGV4IiwibmV4dEluZGV4IiwibmV4dEVudHJpZXMiLCJjYW5HbyIsIl9wcm90bzIiLCJSb3V0ZXIiLCJfaXNNb3VudGVkIiwiX3BlbmRpbmdMb2NhdGlvbiIsInN0YXRpY0NvbnRleHQiLCJjb21wdXRlUm9vdE1hdGNoIiwiaXNFeGFjdCIsImNhY2hlJDEiLCJjYWNoZUNvdW50JDEiLCJtYXRjaFBhdGgiLCJfb3B0aW9ucyIsIl9vcHRpb25zJGV4YWN0IiwiX29wdGlvbnMkc3RyaWN0IiwiX29wdGlvbnMkc2Vuc2l0aXZlIiwiX2NvbXBpbGVQYXRoIiwiY2FjaGVLZXkiLCJwYXRoQ2FjaGUiLCJyZWdleHAiLCJjb21waWxlUGF0aCQxIiwiUm91dGUiLCJjb250ZXh0JDEiLCJjb21wdXRlZE1hdGNoIiwiY3JlYXRlVVJMIiwic3RhdGljSGFuZGxlciIsIm1ldGhvZE5hbWUiLCJCcm93c2VyUm91dGVyIiwicmVzb2x2ZVRvTG9jYXRpb24iLCJmb3J3YXJkUmVmU2hpbSIsIkxpbmtBbmNob3IiLCJmb3J3YXJkZWRSZWYiLCJpbm5lclJlZiIsIm5hdmlnYXRlIiwiX29uQ2xpY2siLCJyZXN0IiwiZXgiLCJpc01vZGlmaWVkRXZlbnQiLCJMaW5rIiwiX3JlZjIkY29tcG9uZW50IiwiZm9yd2FyZFJlZlNoaW0kMSIsImZvcndhcmRSZWYkMSIsIl9yZWYkYXJpYUN1cnJlbnQiLCJhcmlhQ3VycmVudCIsIl9yZWYkYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlU3R5bGUiLCJjbGFzc05hbWVQcm9wIiwiaXNBY3RpdmVQcm9wIiwibG9jYXRpb25Qcm9wIiwic3R5bGVQcm9wIiwiZXNjYXBlZFBhdGgiLCJjbGFzc25hbWVzIiwiam9pbkNsYXNzbmFtZXMiLCJnbG9iYWxDc3NNb2R1bGUiLCJEcm9wZG93bkNvbnRleHQiLCJzZXRTY3JvbGxiYXJXaWR0aCIsImNvbmRpdGlvbmFsbHlVcGRhdGVTY3JvbGxiYXIiLCJzY3JvbGxiYXJXaWR0aCIsInNjcm9sbERpdiIsImdldFNjcm9sbGJhcldpZHRoIiwiZml4ZWRDb250ZW50IiwiYm9keVBhZGRpbmciLCJtYXBUb0Nzc01vZHVsZXMiLCJjc3NNb2R1bGUiLCJvbWl0Iiwib21pdEtleXMiLCJ3YXJuZWQiLCJ3YXJuT25jZSIsInRhZ1Byb3BUeXBlIiwiVHJhbnNpdGlvblRpbWVvdXRzIiwiVHJhbnNpdGlvblByb3BUeXBlS2V5cyIsImtleUNvZGVzIiwiZXNjIiwidGFiIiwiZG93biIsImhvbWUiLCJmb2N1c2FibGVFbGVtZW50cyIsImhlYWRlciIsInRvZ2dsZSIsIkRyb3Bkb3duSXRlbSIsImdldFRhYkluZGV4IiwidGFiSW5kZXgiLCJyb2xlIiwiX29taXQiLCJUYWciLCJmbHVpZCIsImNvbnRhaW5lckNsYXNzIiwicm93Q29sc1Byb3BUeXBlIiwibm9HdXR0ZXJzIiwieHMiLCJzbSIsInhsIiwid2lkdGhzIiwiY29sQ2xhc3NlcyIsImNvbFdpZHRoIiwiY29sU2l6ZSIsImlzWHMiLCJzdHJpbmdPck51bWJlclByb3AiLCJjb2x1bW5Qcm9wcyIsImdldENvbHVtblNpemVDbGFzcyIsImNvbHVtblByb3AiLCJfY2xhc3NOYW1lcyIsImNvbFNpemVJbnRlcmZpeCIsImNvbENsYXNzIiwiX2NvbENsYXNzIiwiY2xvc2UiLCJCdXR0b24iLCJhcmlhTGFiZWwiLCJidG5PdXRsaW5lQ29sb3IiLCJkZWZhdWx0QXJpYUxhYmVsIiwiTWFuYWdlclJlZmVyZW5jZU5vZGVDb250ZXh0IiwiTWFuYWdlclJlZmVyZW5jZU5vZGVTZXR0ZXJDb250ZXh0IiwiTWFuYWdlciIsIm5ld1JlZmVyZW5jZU5vZGUiLCJzZXRSZWZlcmVuY2VOb2RlIiwiYTExeSIsImlzT3BlbiIsIm5hdiIsImFkZG9uVHlwZSIsImluTmF2YmFyIiwic2V0QWN0aXZlRnJvbUNoaWxkIiwicHJldmVudERlZmF1bHRLZXlzIiwiRHJvcGRvd24iLCJhZGRFdmVudHMiLCJoYW5kbGVEb2N1bWVudENsaWNrIiwiaGFuZGxlS2V5RG93biIsInJlbW92ZUV2ZW50cyIsImNvbnRhaW5lclJlZiIsImdldENvbnRleHRWYWx1ZSIsImRyb3B1cCIsImhhbmRsZVByb3BzIiwiZ2V0Q29udGFpbmVyIiwiZ2V0TWVudUN0cmwiLCJfJG1lbnVDdHJsIiwiZ2V0TWVudUl0ZW1zIiwiY2xpY2siLCIkbWVudWl0ZW1zIiwiXyRtZW51aXRlbXMiLCJfJG1lbnVpdGVtczMiLCJjaGFyUHJlc3NlZCIsImF0dHJzIiwic3ViSXRlbUlzQWN0aXZlIiwiZHJvcGRvd25JdGVtIiwiZHJvcGRvd24iLCJzaG93Iiwib25LZXlEb3duIiwidW53cmFwQXJyYXkiLCJzYWZlSW52b2tlIiwic2V0UmVmIiwiSW5uZXJSZWZlcmVuY2UiLCJyZWZIYW5kbGVyIiwiUmVmZXJlbmNlIiwiY2FyZXQiLCJEcm9wZG93blRvZ2dsZSIsIl9kZWZpbmVQcm9wZXJ0eSIsIl9vYmplY3RTcHJlYWQiLCJvd25LZXlzIiwiaW5pdGlhbFN0eWxlIiwicG9pbnRlckV2ZW50cyIsImluaXRpYWxBcnJvd1N0eWxlIiwiSW5uZXJQb3BwZXIiLCJwb3BwZXJOb2RlIiwidXBkYXRlUG9wcGVySW5zdGFuY2UiLCJhcnJvd05vZGUiLCJ1cGRhdGVTdGF0ZU1vZGlmaWVyIiwicG9wcGVySW5zdGFuY2UiLCJkZXN0cm95UG9wcGVySW5zdGFuY2UiLCJyZWZlcmVuY2VFbGVtZW50IiwiZ2V0T3B0aW9ucyIsInNldFBvcHBlck5vZGUiLCJnZXRQb3BwZXJTdHlsZSIsImdldFBvcHBlclBsYWNlbWVudCIsIm91dE9mQm91bmRhcmllcyIsImdldE91dE9mQm91bmRhcmllc1N0YXRlIiwiYXJyb3dQcm9wcyIsInNldEFycm93Tm9kZSIsImdldEFycm93U3R5bGUiLCJub0ZsaXBNb2RpZmllciIsImRpcmVjdGlvblBvc2l0aW9uTWFwIiwiRHJvcGRvd25NZW51IiwicG9wZXJQbGFjZW1lbnQiLCJwb3Blck1vZGlmaWVycyIsInBvcHBlclBvc2l0aW9uRml4ZWQiLCJQcm9qZWN0Q29udGV4dCIsIlVzZXJEYXNoYm9hcmQiLCJkcm9wZG93bkNhdE9wZW4iLCJzZXRDYXRPcGVuIiwiZGF0YUZyb21TZXJ2ZXIiLCJzZXREYXRhRnJvbVNlcnZlciIsImRhdGFHYWluZWQiLCJzZXREYXRhR2FpbmVkIiwidXBkYXRlUHJvamVjdCIsInByb2plY3RzIiwiY3VycmVudENhdCIsInNldEN1cnJlbnRDYXQiLCJwYXJzZWQiLCJjYXRlZ29yaWVzSW5Ecm9wRG93biIsImNhdGVnb3J5IiwiaW5saW5lIiwiRm9ybSIsImdldFJlZiIsInN1Ym1pdCIsImh0bWxGb3IiLCJic1NpemUiLCJ2YWxpZCIsImludmFsaWQiLCJwbGFpbnRleHQiLCJhZGRvbiIsIklucHV0IiwiY2hlY2tJbnB1dCIsImlzTm90YU51bWJlciIsImZvcm1Db250cm9sQ2xhc3MiLCJRdWVyeUl0ZW0iLCJwbGFjZWhvbGRlciIsInF1ZXJ5SXRlbSIsIm9uQ2hhbmdlIiwicXVlcnlDaGFuZ2UiLCJkZWxldGVRdWVyeSIsIlF1ZXJ5TGlzdCIsInF1ZXJ5SXRlbXMiLCJDYXRlZ29yeURhdGEiLCJjYXREYXRhIiwiZnJlcXVlbmN5IiwiZnJlcUNoYW5nZSIsImFkZFF1ZXJ5IiwiQ2F0ZWdvcnkiLCJjYXRlZ29yeUNhcmRzIiwiY2F0RGF0YVBhcmFtIiwiY2F0ZWdvcnlCdWlsZGVyIiwiY2F0ZWdvcmllcyIsIkNhdGVnb3JpZXNDb250YWluZXIiLCJsb2NhbENhdHMiLCJjb25maWdEYXRhIiwibGlsQ2F0cyIsImFkZFR5cGVkQ2F0IiwidHlwZWRDYXQiLCJhZGRDYXRlZ29yeSIsImRlbENhdGVnb3J5IiwiZGVmYXVsdE5vZGUiLCJiYXNlQ2xhc3MiLCJiYXNlQ2xhc3NBY3RpdmUiLCJGYWRlIiwib3RoZXJQcm9wcyIsInRyYW5zaXRpb25Qcm9wcyIsInBpY2tLZXlzIiwicGljayIsIkZhZGVQcm9wVHlwZXMiLCJjZW50ZXJlZCIsInNjcm9sbGFibGUiLCJrZXlib2FyZCIsImxhYmVsbGVkQnkiLCJiYWNrZHJvcCIsIm9uT3BlbmVkIiwib25DbG9zZWQiLCJ3cmFwQ2xhc3NOYW1lIiwibW9kYWxDbGFzc05hbWUiLCJiYWNrZHJvcENsYXNzTmFtZSIsImNvbnRlbnRDbGFzc05hbWUiLCJleHRlcm5hbCIsImZhZGUiLCJiYWNrZHJvcFRyYW5zaXRpb24iLCJtb2RhbFRyYW5zaXRpb24iLCJ1bm1vdW50T25DbG9zZSIsInJldHVybkZvY3VzQWZ0ZXJDbG9zZSIsInByb3BzVG9PbWl0IiwiTW9kYWwiLCJfZWxlbWVudCIsIl9vcmlnaW5hbEJvZHlQYWRkaW5nIiwiZ2V0Rm9jdXNhYmxlQ2hpbGRyZW4iLCJoYW5kbGVCYWNrZHJvcENsaWNrIiwiaGFuZGxlQmFja2Ryb3BNb3VzZURvd24iLCJoYW5kbGVFc2NhcGUiLCJoYW5kbGVTdGF0aWNCYWNrZHJvcEFuaW1hdGlvbiIsImhhbmRsZVRhYiIsIm1hbmFnZUZvY3VzQWZ0ZXJDbG9zZSIsImNsZWFyQmFja2Ryb3BBbmltYXRpb25UaW1lb3V0Iiwic2hvd1N0YXRpY0JhY2tkcm9wQW5pbWF0aW9uIiwic2V0Rm9jdXMiLCJpc0FwcGVhcmluZyIsIl9kaWFsb2ciLCJnZXRGb2N1c2VkQ2hpbGQiLCJjdXJyZW50Rm9jdXMiLCJmb2N1c2FibGVDaGlsZHJlbiIsIl9tb3VzZURvd25FbGVtZW50IiwidG90YWxGb2N1c2FibGUiLCJmb2N1c2VkSW5kZXgiLCJfYmFja2Ryb3BBbmltYXRpb25UaW1lb3V0IiwiX3RyaWdnZXJpbmdFbGVtZW50Iiwib3BlbkNvdW50IiwibW9kYWxPcGVuQ2xhc3NOYW1lIiwibW9kYWxPcGVuQ2xhc3NOYW1lUmVnZXgiLCJyZW5kZXJNb2RhbERpYWxvZyIsImRpYWxvZ0Jhc2VDbGFzcyIsImlzTW9kYWxIaWRkZW4iLCJfdGhpcyRwcm9wczIiLCJtb2RhbEF0dHJpYnV0ZXMiLCJvbk1vdXNlRG93biIsIm9uS2V5VXAiLCJoYXNUcmFuc2l0aW9uIiwiQmFja2Ryb3AiLCJ3cmFwVGFnIiwiY2xvc2VBcmlhTGFiZWwiLCJjbG9zZUJ1dHRvbiIsIldyYXBUYWciLCJjbG9zZUljb24iLCJDb25maWdTYXZlTW9kYWwiLCJidXR0b25MYWJlbCIsImhhbmRsZVN1Ym1pdCIsIm1vZGFsIiwic2V0TW9kYWwiLCJDb25maWdSZXNldE1vZGFsIiwiaGFuZGxlUmVzZXQiLCJDb25maWdEYXNoYm9hcmQiLCJvcmlnQ29uZmlnIiwic2V0T3JpZ0NvbmZpZyIsImRhdGFGcm9tQ29uZmlnIiwic2V0RGF0YUZyb21Db25maWciLCJlbmRwb2ludENvbmZpZyIsInNldEVuZHBvaW50Q29uZmlnIiwic2V0VHlwZWRDYXQiLCJlbmRwb2ludCIsImZldGNoRGF0YSIsImNhdE5hbWUiLCJhbGVydCIsImhlYWRlcnMiLCJBY2NlcHQiLCJKU09OaWZpZWQiLCJuZXdEYXRhRnJvbUNvbmZpZyIsInF1ZXJ5SWR4IiwiUHJvamVjdFNlbGVjdCIsImRyb3Bkb3duUHJvak9wZW4iLCJzZXRQcm9qT3BlbiIsInByb2pzRnJvbVNlcnZlciIsInNldFByb2pzRnJvbVNlcnZlciIsInByb2pHYWluZWQiLCJwcm9qY2F0ZWdvcmllc0luRHJvcERvd24iLCJSZWFjdERvbSIsInNldFByb2plY3QiLCJuZXdQcm9qIl0sIm1hcHBpbmdzIjoiYUFDRSxJQUFJQSxFQUFtQixHQUd2QixTQUFTQyxFQUFv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Q0EsaUNBQ0EsdUNBQ0EsNkNBQ0EsbURBQ0EseURBQ0EsK0RBQ0Esc0VBQ0FTLElBQUksSUFFUyxHQUFBMitFLEdBQUssSUNaVCxHQUFTLElBQUlwaUYsTUFBTSxHQUFHZ0QsT0FDL0IscUJBQ0EsMkJBQ0EsaUNBQ0EsdUNBQ0EsNkNBQ0EsbURBQ0EseURBQ0EsK0RBQ0Esc0VBQ0FTLElBQUksSUFFUyxHQUFBMitFLEdBQUssSUNaVCxHQUFTLElBQUlwaUYsTUFBTSxHQUFHZ0QsT0FDL0IscUJBQ0EsMkJBQ0EsaUNBQ0EsdUNBQ0EsNkNBQ0EsbURBQ0EseURBQ0EsK0RBQ0Esc0VBQ0FTLElBQUksSUFFUyxHQUFBMitFLEdBQUssSUNaVCxHQUFTLElBQUlwaUYsTUFBTSxHQUFHZ0QsT0FDL0IscUJBQ0EsMkJBQ0EsaUNBQ0EsdUNBQ0EsNkNBQ0EsbURBQ0EseURBQ0EsK0RBQ0Esc0VBQ0FTLElBQUksSUFFUyxHQUFBMitFLEdBQUssSUNaVCxHQUFTLElBQUlwaUYsTUFBTSxHQUFHZ0QsT0FDL0IscUJBQ0EsMkJBQ0EsaUNBQ0EsdUNBQ0EsNkNBQ0EsbURBQ0EseURBQ0EsK0RBQ0Esc0VBQ0FTLElBQUksSUFFUyxHQUFBMitFLEdBQUssSUNaVCxHQUFTLElBQUlwaUYsTUFBTSxHQUFHZ0QsT0FDL0IscUJBQ0EsMkJBQ0EsaUNBQ0EsdUNBQ0EsNkNBQ0EsbURBQ0EseURBQ0EsK0RBQ0Esc0VBQ0FTLElBQUksSUFFUyxHQUFBMitFLEdBQUssSUNaVCxHQUFTLElBQUlwaUYsTUFBTSxHQUFHZ0QsT0FDL0IscUJBQ0EsMkJBQ0EsaUNBQ0EsdUNBQ0EsNkNBQ0EsbURBQ0EsMERBQ0FTLElBQUksSUFFUyxHQUFBMitFLEdBQUssSUNWVCxHQUFTLElBQUlwaUYsTUFBTSxHQUFHZ0QsT0FDL0IscUJBQ0EsMkJBQ0EsaUNBQ0EsdUNBQ0EsNkNBQ0EsbURBQ0EsMERBQ0FTLElBQUksSUFFUyxHQUFBMitFLEdBQUssSUNWVCxHQUFTLElBQUlwaUYsTUFBTSxHQUFHZ0QsT0FDL0IscUJBQ0EsMkJBQ0EsaUNBQ0EsdUNBQ0EsNkNBQ0EsbURBQ0EsMERBQ0FTLElBQUksSUFFUyxHQUFBMitFLEdBQUssSUNWVCxHQUFTLElBQUlwaUYsTUFBTSxHQUFHZ0QsT0FDL0IscUJBQ0EsMkJBQ0EsaUNBQ0EsdUNBQ0EsNkNBQ0EsbURBQ0EsMERBQ0FTLElBQUksSUFFUyxHQUFBMitFLEdBQUssSUNWVCxHQUFTLElBQUlwaUYsTUFBTSxHQUFHZ0QsT0FDL0IscUJBQ0EsMkJBQ0EsaUNBQ0EsdUNBQ0EsNkNBQ0EsbURBQ0EsMERBQ0FTLElBQUksSUFFUyxHQUFBMitFLEdBQUssSUNWVCxHQUFTLElBQUlwaUYsTUFBTSxHQUFHZ0QsT0FDL0IscUJBQ0EsMkJBQ0EsaUNBQ0EsdUNBQ0EsNkNBQ0EsbURBQ0EsMERBQ0FTLElBQUksSUFFUyxHQUFBMitFLEdBQUssSUNWVCxHQUFTLElBQUlwaUYsTUFBTSxHQUFHZ0QsT0FDL0IscUJBQ0EsMkJBQ0EsaUNBQ0EsdUNBQ0EsNkNBQ0EsbURBQ0EsMERBQ0FTLElBQUksSUFFUyxHQUFBMitFLEdBQUssSUNWVCxHQUFTLElBQUlwaUYsTUFBTSxHQUFHZ0QsT0FDL0IscUJBQ0EsMkJBQ0EsaUNBQ0EsdUNBQ0EsNkNBQ0EsbURBQ0EsMERBQ0FTLElBQUksSUFFUyxHQUFBMitFLEdBQUssSUNWVCxHQUFTLElBQUlwaUYsTUFBTSxHQUFHZ0QsT0FDL0IscUJBQ0EsMkJBQ0EsaUNBQ0EsdUNBQ0EsNkNBQ0EsbURBQ0EsMERBQ0FTLElBQUksSUFFUyxHQUFBMitFLEdBQUssSUNWVCxHQUFTLElBQUlwaUYsTUFBTSxHQUFHZ0QsT0FDL0IscUJBQ0EsMkJBQ0EsaUNBQ0EsdUNBQ0EsNkNBQ0EsbURBQ0EsMERBQ0FTLElBQUksSUFFUyxHQUFBMitFLEdBQUssSUNWVCxHQUFTLElBQUlwaUYsTUFBTSxHQUFHZ0QsT0FDL0IscUJBQ0EsMkJBQ0EsaUNBQ0EsdUNBQ0EsNkNBQ0EsbURBQ0EsMERBQ0FTLElBQUksSUFFUyxHQUFBMitFLEdBQUssSUNWVCxHQUFTLElBQUlwaUYsTUFBTSxHQUFHZ0QsT0FDL0IscUJB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Q0UsaUJDRWUsV0FDakIsT0FDRSx5QkFBS2lwRixVQUFVLFVBQ2Isa0JBQUMsRUFBRCxLQUNFLGtCQUFDLEVBQUQsQ0FBTysrQixPQUFLLEVBQUN4eUgsS0FBSyxJQUFJNG1CLFVBQVcwNEgsS0FDakMsa0JBQUMsRUFBRCxDQUFPOXNCLE9BQUssRUFBQ3h5SCxLQUFLLGNBQWM0bUIsVUFBV3kzSCxLQUMzQyxrQkFBQyxFQUFELENBQU83ckIsT0FBSyxFQUFDeHlILEtBQUssaUJBQWlCNG1CLFVBQVd5dkgsU0RSbEQsT0FFRjd5SSxTQUFTK3VGLGVBQWUiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDcyKTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiLyohXG4gIENvcHlyaWdodCAoYykgMjAxNyBKZWQgV2F0c29uLlxuICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHNlZVxuICBodHRwOi8vamVkd2F0c29uLmdpdGh1Yi5pby9jbGFzc25hbWVzXG4qL1xuLyogZ2xvYmFsIGRlZmluZSAqL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGhhc093biA9IHt9Lmhhc093blByb3BlcnR5O1xuXG5cdGZ1bmN0aW9uIGNsYXNzTmFtZXMgKCkge1xuXHRcdHZhciBjbGFzc2VzID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGFyZyA9IGFyZ3VtZW50c1tpXTtcblx0XHRcdGlmICghYXJnKSBjb250aW51ZTtcblxuXHRcdFx0dmFyIGFyZ1R5cGUgPSB0eXBlb2YgYXJnO1xuXG5cdFx0XHRpZiAoYXJnVHlwZSA9PT0gJ3N0cmluZycgfHwgYXJnVHlwZSA9PT0gJ251bWJlcicpIHtcblx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZyk7XG5cdFx0XHR9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSAmJiBhcmcubGVuZ3RoKSB7XG5cdFx0XHRcdHZhciBpbm5lciA9IGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKTtcblx0XHRcdFx0aWYgKGlubmVyKSB7XG5cdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGlubmVyKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIGlmIChhcmdUeXBlID09PSAnb2JqZWN0Jykge1xuXHRcdFx0XHRmb3IgKHZhciBrZXkgaW4gYXJnKSB7XG5cdFx0XHRcdFx0aWYgKGhhc093bi5jYWxsKGFyZywga2V5KSAmJiBhcmdba2V5XSkge1xuXHRcdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGtleSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXMuam9pbignICcpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG5cdFx0Y2xhc3NOYW1lcy5kZWZhdWx0ID0gY2xhc3NOYW1lcztcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNsYXNzTmFtZXM7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIHJlZ2lzdGVyIGFzICdjbGFzc25hbWVzJywgY29uc2lzdGVudCB3aXRoIG5wbSBwYWNrYWdlIG5hbWVcblx0XHRkZWZpbmUoJ2NsYXNzbmFtZXMnLCBbXSwgZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXM7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXHR9XG59KCkpO1xuIiwiZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gIGlmIChzZWxmID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gIH1cblxuICByZXR1cm4gc2VsZjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfYXNzZXJ0VGhpc0luaXRpYWxpemVkOyIsImZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZpbmVQcm9wZXJ0eTsiLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cbnZhciBleHBvcnRlZCA9IGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB7fTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0ZWQ7IiwiZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pbmhlcml0c0xvb3NlOyIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsImZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBtb2R1bGUuZXhwb3J0cyA9IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcblxuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfZXh0ZW5kczsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9DU1NUcmFuc2l0aW9uID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9DU1NUcmFuc2l0aW9uXCIpKTtcblxudmFyIF9SZXBsYWNlVHJhbnNpdGlvbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vUmVwbGFjZVRyYW5zaXRpb25cIikpO1xuXG52YXIgX1RyYW5zaXRpb25Hcm91cCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vVHJhbnNpdGlvbkdyb3VwXCIpKTtcblxudmFyIF9UcmFuc2l0aW9uID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9UcmFuc2l0aW9uXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIFRyYW5zaXRpb246IF9UcmFuc2l0aW9uLmRlZmF1bHQsXG4gIFRyYW5zaXRpb25Hcm91cDogX1RyYW5zaXRpb25Hcm91cC5kZWZhdWx0LFxuICBSZXBsYWNlVHJhbnNpdGlvbjogX1JlcGxhY2VUcmFuc2l0aW9uLmRlZmF1bHQsXG4gIENTU1RyYW5zaXRpb246IF9DU1NUcmFuc2l0aW9uLmRlZmF1bHRcbn07IiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9ib290c3RyYXAuY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG52YXIgZXhwb3J0ZWQgPSBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDoge307XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydGVkOyIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGltcGxlbWVudGF0aW9uID0gcmVxdWlyZSgnLi9pbXBsZW1lbnRhdGlvbicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kIHx8IGltcGxlbWVudGF0aW9uO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIga2V5cyA9IHJlcXVpcmUoJ29iamVjdC1rZXlzJyk7XG52YXIgaGFzU3ltYm9scyA9IHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIFN5bWJvbCgnZm9vJykgPT09ICdzeW1ib2wnO1xuXG52YXIgdG9TdHIgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xudmFyIGNvbmNhdCA9IEFycmF5LnByb3RvdHlwZS5jb25jYXQ7XG52YXIgb3JpZ0RlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xuXG52YXIgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uIChmbikge1xuXHRyZXR1cm4gdHlwZW9mIGZuID09PSAnZnVuY3Rpb24nICYmIHRvU3RyLmNhbGwoZm4pID09PSAnW29iamVjdCBGdW5jdGlvbl0nO1xufTtcblxudmFyIGFyZVByb3BlcnR5RGVzY3JpcHRvcnNTdXBwb3J0ZWQgPSBmdW5jdGlvbiAoKSB7XG5cdHZhciBvYmogPSB7fTtcblx0dHJ5IHtcblx0XHRvcmlnRGVmaW5lUHJvcGVydHkob2JqLCAneCcsIHsgZW51bWVyYWJsZTogZmFsc2UsIHZhbHVlOiBvYmogfSk7XG5cdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzLCBuby1yZXN0cmljdGVkLXN5bnRheFxuXHRcdGZvciAodmFyIF8gaW4gb2JqKSB7IC8vIGpzY3M6aWdub3JlIGRpc2FsbG93VW51c2VkVmFyaWFibGVzXG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHRcdHJldHVybiBvYmoueCA9PT0gb2JqO1xuXHR9IGNhdGNoIChlKSB7IC8qIHRoaXMgaXMgSUUgOC4gKi9cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn07XG52YXIgc3VwcG9ydHNEZXNjcmlwdG9ycyA9IG9yaWdEZWZpbmVQcm9wZXJ0eSAmJiBhcmVQcm9wZXJ0eURlc2NyaXB0b3JzU3VwcG9ydGVkKCk7XG5cbnZhciBkZWZpbmVQcm9wZXJ0eSA9IGZ1bmN0aW9uIChvYmplY3QsIG5hbWUsIHZhbHVlLCBwcmVkaWNhdGUpIHtcblx0aWYgKG5hbWUgaW4gb2JqZWN0ICYmICghaXNGdW5jdGlvbihwcmVkaWNhdGUpIHx8ICFwcmVkaWNhdGUoKSkpIHtcblx0XHRyZXR1cm47XG5cdH1cblx0aWYgKHN1cHBvcnRzRGVzY3JpcHRvcnMpIHtcblx0XHRvcmlnRGVmaW5lUHJvcGVydHkob2JqZWN0LCBuYW1lLCB7XG5cdFx0XHRjb25maWd1cmFibGU6IHRydWUsXG5cdFx0XHRlbnVtZXJhYmxlOiBmYWxzZSxcblx0XHRcdHZhbHVlOiB2YWx1ZSxcblx0XHRcdHdyaXRhYmxlOiB0cnVlXG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0b2JqZWN0W25hbWVdID0gdmFsdWU7XG5cdH1cbn07XG5cbnZhciBkZWZpbmVQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKG9iamVjdCwgbWFwKSB7XG5cdHZhciBwcmVkaWNhdGVzID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgPyBhcmd1bWVudHNbMl0gOiB7fTtcblx0dmFyIHByb3BzID0ga2V5cyhtYXApO1xuXHRpZiAoaGFzU3ltYm9scykge1xuXHRcdHByb3BzID0gY29uY2F0LmNhbGwocHJvcHMsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMobWFwKSk7XG5cdH1cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkgKz0gMSkge1xuXHRcdGRlZmluZVByb3BlcnR5KG9iamVjdCwgcHJvcHNbaV0sIG1hcFtwcm9wc1tpXV0sIHByZWRpY2F0ZXNbcHJvcHNbaV1dKTtcblx0fVxufTtcblxuZGVmaW5lUHJvcGVydGllcy5zdXBwb3J0c0Rlc2NyaXB0b3JzID0gISFzdXBwb3J0c0Rlc2NyaXB0b3JzO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZmluZVByb3BlcnRpZXM7XG4iLCIvLyBAZmxvd1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIga2V5ID0gJ19fZ2xvYmFsX3VuaXF1ZV9pZF9fJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGdsb2JhbFtrZXldID0gKGdsb2JhbFtrZXldIHx8IDApICsgMTtcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNC1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxudmFyIF9fREVWX18gPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nO1xuXG52YXIgd2FybmluZyA9IGZ1bmN0aW9uKCkge307XG5cbmlmIChfX0RFVl9fKSB7XG4gIHZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbiBwcmludFdhcm5pbmcoZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAxID8gbGVuIC0gMSA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDE7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMV0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICtcbiAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICB9KTtcbiAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgLy8gLS0tIFdlbGNvbWUgdG8gZGVidWdnaW5nIFJlYWN0IC0tLVxuICAgICAgLy8gVGhpcyBlcnJvciB3YXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28gdGhhdCB5b3UgY2FuIHVzZSB0aGlzIHN0YWNrXG4gICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cbiAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICB9IGNhdGNoICh4KSB7fVxuICB9XG5cbiAgd2FybmluZyA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAyID8gbGVuIC0gMiA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDI7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMl0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgJ2B3YXJuaW5nKGNvbmRpdGlvbiwgZm9ybWF0LCAuLi5hcmdzKWAgcmVxdWlyZXMgYSB3YXJuaW5nICcgK1xuICAgICAgICAgICdtZXNzYWdlIGFyZ3VtZW50J1xuICAgICAgKTtcbiAgICB9XG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgIHByaW50V2FybmluZy5hcHBseShudWxsLCBbZm9ybWF0XS5jb25jYXQoYXJncykpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB3YXJuaW5nO1xuIiwidmFyIGlzYXJyYXkgPSByZXF1aXJlKCdpc2FycmF5JylcblxuLyoqXG4gKiBFeHBvc2UgYHBhdGhUb1JlZ2V4cGAuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gcGF0aFRvUmVnZXhwXG5tb2R1bGUuZXhwb3J0cy5wYXJzZSA9IHBhcnNlXG5tb2R1bGUuZXhwb3J0cy5jb21waWxlID0gY29tcGlsZVxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9GdW5jdGlvbiA9IHRva2Vuc1RvRnVuY3Rpb25cbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvUmVnRXhwID0gdG9rZW5zVG9SZWdFeHBcblxuLyoqXG4gKiBUaGUgbWFpbiBwYXRoIG1hdGNoaW5nIHJlZ2V4cCB1dGlsaXR5LlxuICpcbiAqIEB0eXBlIHtSZWdFeHB9XG4gKi9cbnZhciBQQVRIX1JFR0VYUCA9IG5ldyBSZWdFeHAoW1xuICAvLyBNYXRjaCBlc2NhcGVkIGNoYXJhY3RlcnMgdGhhdCB3b3VsZCBvdGhlcndpc2UgYXBwZWFyIGluIGZ1dHVyZSBtYXRjaGVzLlxuICAvLyBUaGlzIGFsbG93cyB0aGUgdXNlciB0byBlc2NhcGUgc3BlY2lhbCBjaGFyYWN0ZXJzIHRoYXQgd29uJ3QgdHJhbnNmb3JtLlxuICAnKFxcXFxcXFxcLiknLFxuICAvLyBNYXRjaCBFeHByZXNzLXN0eWxlIHBhcmFtZXRlcnMgYW5kIHVuLW5hbWVkIHBhcmFtZXRlcnMgd2l0aCBhIHByZWZpeFxuICAvLyBhbmQgb3B0aW9uYWwgc3VmZml4ZXMuIE1hdGNoZXMgYXBwZWFyIGFzOlxuICAvL1xuICAvLyBcIi86dGVzdChcXFxcZCspP1wiID0+IFtcIi9cIiwgXCJ0ZXN0XCIsIFwiXFxkK1wiLCB1bmRlZmluZWQsIFwiP1wiLCB1bmRlZmluZWRdXG4gIC8vIFwiL3JvdXRlKFxcXFxkKylcIiAgPT4gW3VuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiXFxkK1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZF1cbiAgLy8gXCIvKlwiICAgICAgICAgICAgPT4gW1wiL1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiKlwiXVxuICAnKFtcXFxcLy5dKT8oPzooPzpcXFxcOihcXFxcdyspKD86XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSk/fFxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpKFsrKj9dKT98KFxcXFwqKSknXG5dLmpvaW4oJ3wnKSwgJ2cnKVxuXG4vKipcbiAqIFBhcnNlIGEgc3RyaW5nIGZvciB0aGUgcmF3IHRva2Vucy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19IG9wdGlvbnNcbiAqIEByZXR1cm4geyFBcnJheX1cbiAqL1xuZnVuY3Rpb24gcGFyc2UgKHN0ciwgb3B0aW9ucykge1xuICB2YXIgdG9rZW5zID0gW11cbiAgdmFyIGtleSA9IDBcbiAgdmFyIGluZGV4ID0gMFxuICB2YXIgcGF0aCA9ICcnXG4gIHZhciBkZWZhdWx0RGVsaW1pdGVyID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlbGltaXRlciB8fCAnLydcbiAgdmFyIHJlc1xuXG4gIHdoaWxlICgocmVzID0gUEFUSF9SRUdFWFAuZXhlYyhzdHIpKSAhPSBudWxsKSB7XG4gICAgdmFyIG0gPSByZXNbMF1cbiAgICB2YXIgZXNjYXBlZCA9IHJlc1sxXVxuICAgIHZhciBvZmZzZXQgPSByZXMuaW5kZXhcbiAgICBwYXRoICs9IHN0ci5zbGljZShpbmRleCwgb2Zmc2V0KVxuICAgIGluZGV4ID0gb2Zmc2V0ICsgbS5sZW5ndGhcblxuICAgIC8vIElnbm9yZSBhbHJlYWR5IGVzY2FwZWQgc2VxdWVuY2VzLlxuICAgIGlmIChlc2NhcGVkKSB7XG4gICAgICBwYXRoICs9IGVzY2FwZWRbMV1cbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgdmFyIG5leHQgPSBzdHJbaW5kZXhdXG4gICAgdmFyIHByZWZpeCA9IHJlc1syXVxuICAgIHZhciBuYW1lID0gcmVzWzNdXG4gICAgdmFyIGNhcHR1cmUgPSByZXNbNF1cbiAgICB2YXIgZ3JvdXAgPSByZXNbNV1cbiAgICB2YXIgbW9kaWZpZXIgPSByZXNbNl1cbiAgICB2YXIgYXN0ZXJpc2sgPSByZXNbN11cblxuICAgIC8vIFB1c2ggdGhlIGN1cnJlbnQgcGF0aCBvbnRvIHRoZSB0b2tlbnMuXG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gICAgICBwYXRoID0gJydcbiAgICB9XG5cbiAgICB2YXIgcGFydGlhbCA9IHByZWZpeCAhPSBudWxsICYmIG5leHQgIT0gbnVsbCAmJiBuZXh0ICE9PSBwcmVmaXhcbiAgICB2YXIgcmVwZWF0ID0gbW9kaWZpZXIgPT09ICcrJyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIG9wdGlvbmFsID0gbW9kaWZpZXIgPT09ICc/JyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIGRlbGltaXRlciA9IHJlc1syXSB8fCBkZWZhdWx0RGVsaW1pdGVyXG4gICAgdmFyIHBhdHRlcm4gPSBjYXB0dXJlIHx8IGdyb3VwXG5cbiAgICB0b2tlbnMucHVzaCh7XG4gICAgICBuYW1lOiBuYW1lIHx8IGtleSsrLFxuICAgICAgcHJlZml4OiBwcmVmaXggfHwgJycsXG4gICAgICBkZWxpbWl0ZXI6IGRlbGltaXRlcixcbiAgICAgIG9wdGlvbmFsOiBvcHRpb25hbCxcbiAgICAgIHJlcGVhdDogcmVwZWF0LFxuICAgICAgcGFydGlhbDogcGFydGlhbCxcbiAgICAgIGFzdGVyaXNrOiAhIWFzdGVyaXNrLFxuICAgICAgcGF0dGVybjogcGF0dGVybiA/IGVzY2FwZUdyb3VwKHBhdHRlcm4pIDogKGFzdGVyaXNrID8gJy4qJyA6ICdbXicgKyBlc2NhcGVTdHJpbmcoZGVsaW1pdGVyKSArICddKz8nKVxuICAgIH0pXG4gIH1cblxuICAvLyBNYXRjaCBhbnkgY2hhcmFjdGVycyBzdGlsbCByZW1haW5pbmcuXG4gIGlmIChpbmRleCA8IHN0ci5sZW5ndGgpIHtcbiAgICBwYXRoICs9IHN0ci5zdWJzdHIoaW5kZXgpXG4gIH1cblxuICAvLyBJZiB0aGUgcGF0aCBleGlzdHMsIHB1c2ggaXQgb250byB0aGUgZW5kLlxuICBpZiAocGF0aCkge1xuICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gIH1cblxuICByZXR1cm4gdG9rZW5zXG59XG5cbi8qKlxuICogQ29tcGlsZSBhIHN0cmluZyB0byBhIHRlbXBsYXRlIGZ1bmN0aW9uIGZvciB0aGUgcGF0aC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICAgICAgICAgICAgIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshZnVuY3Rpb24oT2JqZWN0PSwgT2JqZWN0PSl9XG4gKi9cbmZ1bmN0aW9uIGNvbXBpbGUgKHN0ciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9GdW5jdGlvbihwYXJzZShzdHIsIG9wdGlvbnMpLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIFByZXR0aWVyIGVuY29kaW5nIG9mIFVSSSBwYXRoIHNlZ21lbnRzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1tcXC8/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRW5jb2RlIHRoZSBhc3RlcmlzayBwYXJhbWV0ZXIuIFNpbWlsYXIgdG8gYHByZXR0eWAsIGJ1dCBhbGxvd3Mgc2xhc2hlcy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZUFzdGVyaXNrIChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1s/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRXhwb3NlIGEgbWV0aG9kIGZvciB0cmFuc2Zvcm1pbmcgdG9rZW5zIGludG8gdGhlIHBhdGggZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvRnVuY3Rpb24gKHRva2Vucywgb3B0aW9ucykge1xuICAvLyBDb21waWxlIGFsbCB0aGUgdG9rZW5zIGludG8gcmVnZXhwcy5cbiAgdmFyIG1hdGNoZXMgPSBuZXcgQXJyYXkodG9rZW5zLmxlbmd0aClcblxuICAvLyBDb21waWxlIGFsbCB0aGUgcGF0dGVybnMgYmVmb3JlIGNvbXBpbGF0aW9uLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIGlmICh0eXBlb2YgdG9rZW5zW2ldID09PSAnb2JqZWN0Jykge1xuICAgICAgbWF0Y2hlc1tpXSA9IG5ldyBSZWdFeHAoJ14oPzonICsgdG9rZW5zW2ldLnBhdHRlcm4gKyAnKSQnLCBmbGFncyhvcHRpb25zKSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKG9iaiwgb3B0cykge1xuICAgIHZhciBwYXRoID0gJydcbiAgICB2YXIgZGF0YSA9IG9iaiB8fCB7fVxuICAgIHZhciBvcHRpb25zID0gb3B0cyB8fCB7fVxuICAgIHZhciBlbmNvZGUgPSBvcHRpb25zLnByZXR0eSA/IGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSA6IGVuY29kZVVSSUNvbXBvbmVudFxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgICBwYXRoICs9IHRva2VuXG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgdmFyIHZhbHVlID0gZGF0YVt0b2tlbi5uYW1lXVxuICAgICAgdmFyIHNlZ21lbnRcblxuICAgICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgLy8gUHJlcGVuZCBwYXJ0aWFsIHNlZ21lbnQgcHJlZml4ZXMuXG4gICAgICAgICAgaWYgKHRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIGJlIGRlZmluZWQnKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChpc2FycmF5KHZhbHVlKSkge1xuICAgICAgICBpZiAoIXRva2VuLnJlcGVhdCkge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IHJlcGVhdCwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkodmFsdWUpICsgJ2AnKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgYmUgZW1wdHknKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdmFsdWUubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBzZWdtZW50ID0gZW5jb2RlKHZhbHVlW2pdKVxuXG4gICAgICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGFsbCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHNlZ21lbnQpICsgJ2AnKVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHBhdGggKz0gKGogPT09IDAgPyB0b2tlbi5wcmVmaXggOiB0b2tlbi5kZWxpbWl0ZXIpICsgc2VnbWVudFxuICAgICAgICB9XG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgc2VnbWVudCA9IHRva2VuLmFzdGVyaXNrID8gZW5jb2RlQXN0ZXJpc2sodmFsdWUpIDogZW5jb2RlKHZhbHVlKVxuXG4gICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBcIicgKyBzZWdtZW50ICsgJ1wiJylcbiAgICAgIH1cblxuICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXggKyBzZWdtZW50XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhdGhcbiAgfVxufVxuXG4vKipcbiAqIEVzY2FwZSBhIHJlZ3VsYXIgZXhwcmVzc2lvbiBzdHJpbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlU3RyaW5nIChzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oWy4rKj89XiE6JHt9KClbXFxdfFxcL1xcXFxdKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBFc2NhcGUgdGhlIGNhcHR1cmluZyBncm91cCBieSBlc2NhcGluZyBzcGVjaWFsIGNoYXJhY3RlcnMgYW5kIG1lYW5pbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBncm91cFxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVHcm91cCAoZ3JvdXApIHtcbiAgcmV0dXJuIGdyb3VwLnJlcGxhY2UoLyhbPSE6JFxcLygpXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogQXR0YWNoIHRoZSBrZXlzIGFzIGEgcHJvcGVydHkgb2YgdGhlIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSByZVxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXR0YWNoS2V5cyAocmUsIGtleXMpIHtcbiAgcmUua2V5cyA9IGtleXNcbiAgcmV0dXJuIHJlXG59XG5cbi8qKlxuICogR2V0IHRoZSBmbGFncyBmb3IgYSByZWdleHAgZnJvbSB0aGUgb3B0aW9ucy5cbiAqXG4gKiBAcGFyYW0gIHtPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZmxhZ3MgKG9wdGlvbnMpIHtcbiAgcmV0dXJuIG9wdGlvbnMgJiYgb3B0aW9ucy5zZW5zaXRpdmUgPyAnJyA6ICdpJ1xufVxuXG4vKipcbiAqIFB1bGwgb3V0IGtleXMgZnJvbSBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiByZWdleHBUb1JlZ2V4cCAocGF0aCwga2V5cykge1xuICAvLyBVc2UgYSBuZWdhdGl2ZSBsb29rYWhlYWQgdG8gbWF0Y2ggb25seSBjYXB0dXJpbmcgZ3JvdXBzLlxuICB2YXIgZ3JvdXBzID0gcGF0aC5zb3VyY2UubWF0Y2goL1xcKCg/IVxcPykvZylcblxuICBpZiAoZ3JvdXBzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGtleXMucHVzaCh7XG4gICAgICAgIG5hbWU6IGksXG4gICAgICAgIHByZWZpeDogbnVsbCxcbiAgICAgICAgZGVsaW1pdGVyOiBudWxsLFxuICAgICAgICBvcHRpb25hbDogZmFsc2UsXG4gICAgICAgIHJlcGVhdDogZmFsc2UsXG4gICAgICAgIHBhcnRpYWw6IGZhbHNlLFxuICAgICAgICBhc3RlcmlzazogZmFsc2UsXG4gICAgICAgIHBhdHRlcm46IG51bGxcbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocGF0aCwga2V5cylcbn1cblxuLyoqXG4gKiBUcmFuc2Zvcm0gYW4gYXJyYXkgaW50byBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBwYXRoXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhcnJheVRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHZhciBwYXJ0cyA9IFtdXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XG4gICAgcGFydHMucHVzaChwYXRoVG9SZWdleHAocGF0aFtpXSwga2V5cywgb3B0aW9ucykuc291cmNlKVxuICB9XG5cbiAgdmFyIHJlZ2V4cCA9IG5ldyBSZWdFeHAoJyg/OicgKyBwYXJ0cy5qb2luKCd8JykgKyAnKScsIGZsYWdzKG9wdGlvbnMpKVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHJlZ2V4cCwga2V5cylcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBwYXRoIHJlZ2V4cCBmcm9tIHN0cmluZyBpbnB1dC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBzdHJpbmdUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9SZWdFeHAocGFyc2UocGF0aCwgb3B0aW9ucyksIGtleXMsIG9wdGlvbnMpXG59XG5cbi8qKlxuICogRXhwb3NlIGEgZnVuY3Rpb24gZm9yIHRha2luZyB0b2tlbnMgYW5kIHJldHVybmluZyBhIFJlZ0V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICAgICAgICAgIHRva2Vuc1xuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvUmVnRXhwICh0b2tlbnMsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgdmFyIHN0cmljdCA9IG9wdGlvbnMuc3RyaWN0XG4gIHZhciBlbmQgPSBvcHRpb25zLmVuZCAhPT0gZmFsc2VcbiAgdmFyIHJvdXRlID0gJydcblxuICAvLyBJdGVyYXRlIG92ZXIgdGhlIHRva2VucyBhbmQgY3JlYXRlIG91ciByZWdleHAgc3RyaW5nLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJvdXRlICs9IGVzY2FwZVN0cmluZyh0b2tlbilcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHByZWZpeCA9IGVzY2FwZVN0cmluZyh0b2tlbi5wcmVmaXgpXG4gICAgICB2YXIgY2FwdHVyZSA9ICcoPzonICsgdG9rZW4ucGF0dGVybiArICcpJ1xuXG4gICAgICBrZXlzLnB1c2godG9rZW4pXG5cbiAgICAgIGlmICh0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgY2FwdHVyZSArPSAnKD86JyArIHByZWZpeCArIGNhcHR1cmUgKyAnKSonXG4gICAgICB9XG5cbiAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICBpZiAoIXRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICBjYXB0dXJlID0gJyg/OicgKyBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJykpPydcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpPydcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSdcbiAgICAgIH1cblxuICAgICAgcm91dGUgKz0gY2FwdHVyZVxuICAgIH1cbiAgfVxuXG4gIHZhciBkZWxpbWl0ZXIgPSBlc2NhcGVTdHJpbmcob3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nKVxuICB2YXIgZW5kc1dpdGhEZWxpbWl0ZXIgPSByb3V0ZS5zbGljZSgtZGVsaW1pdGVyLmxlbmd0aCkgPT09IGRlbGltaXRlclxuXG4gIC8vIEluIG5vbi1zdHJpY3QgbW9kZSB3ZSBhbGxvdyBhIHNsYXNoIGF0IHRoZSBlbmQgb2YgbWF0Y2guIElmIHRoZSBwYXRoIHRvXG4gIC8vIG1hdGNoIGFscmVhZHkgZW5kcyB3aXRoIGEgc2xhc2gsIHdlIHJlbW92ZSBpdCBmb3IgY29uc2lzdGVuY3kuIFRoZSBzbGFzaFxuICAvLyBpcyB2YWxpZCBhdCB0aGUgZW5kIG9mIGEgcGF0aCBtYXRjaCwgbm90IGluIHRoZSBtaWRkbGUuIFRoaXMgaXMgaW1wb3J0YW50XG4gIC8vIGluIG5vbi1lbmRpbmcgbW9kZSwgd2hlcmUgXCIvdGVzdC9cIiBzaG91bGRuJ3QgbWF0Y2ggXCIvdGVzdC8vcm91dGVcIi5cbiAgaWYgKCFzdHJpY3QpIHtcbiAgICByb3V0ZSA9IChlbmRzV2l0aERlbGltaXRlciA/IHJvdXRlLnNsaWNlKDAsIC1kZWxpbWl0ZXIubGVuZ3RoKSA6IHJvdXRlKSArICcoPzonICsgZGVsaW1pdGVyICsgJyg/PSQpKT8nXG4gIH1cblxuICBpZiAoZW5kKSB7XG4gICAgcm91dGUgKz0gJyQnXG4gIH0gZWxzZSB7XG4gICAgLy8gSW4gbm9uLWVuZGluZyBtb2RlLCB3ZSBuZWVkIHRoZSBjYXB0dXJpbmcgZ3JvdXBzIHRvIG1hdGNoIGFzIG11Y2ggYXNcbiAgICAvLyBwb3NzaWJsZSBieSB1c2luZyBhIHBvc2l0aXZlIGxvb2thaGVhZCB0byB0aGUgZW5kIG9yIG5leHQgcGF0aCBzZWdtZW50LlxuICAgIHJvdXRlICs9IHN0cmljdCAmJiBlbmRzV2l0aERlbGltaXRlciA/ICcnIDogJyg/PScgKyBkZWxpbWl0ZXIgKyAnfCQpJ1xuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMobmV3IFJlZ0V4cCgnXicgKyByb3V0ZSwgZmxhZ3Mob3B0aW9ucykpLCBrZXlzKVxufVxuXG4vKipcbiAqIE5vcm1hbGl6ZSB0aGUgZ2l2ZW4gcGF0aCBzdHJpbmcsIHJldHVybmluZyBhIHJlZ3VsYXIgZXhwcmVzc2lvbi5cbiAqXG4gKiBBbiBlbXB0eSBhcnJheSBjYW4gYmUgcGFzc2VkIGluIGZvciB0aGUga2V5cywgd2hpY2ggd2lsbCBob2xkIHRoZVxuICogcGxhY2Vob2xkZXIga2V5IGRlc2NyaXB0aW9ucy4gRm9yIGV4YW1wbGUsIHVzaW5nIGAvdXNlci86aWRgLCBga2V5c2Agd2lsbFxuICogY29udGFpbiBgW3sgbmFtZTogJ2lkJywgZGVsaW1pdGVyOiAnLycsIG9wdGlvbmFsOiBmYWxzZSwgcmVwZWF0OiBmYWxzZSB9XWAuXG4gKlxuICogQHBhcmFtICB7KHN0cmluZ3xSZWdFeHB8QXJyYXkpfSBwYXRoXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19ICAgICAgIGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcGF0aFRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIGlmIChwYXRoIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgcmV0dXJuIHJlZ2V4cFRvUmVnZXhwKHBhdGgsIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cykpXG4gIH1cblxuICBpZiAoaXNhcnJheShwYXRoKSkge1xuICAgIHJldHVybiBhcnJheVRvUmVnZXhwKC8qKiBAdHlwZSB7IUFycmF5fSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG4gIH1cblxuICByZXR1cm4gc3RyaW5nVG9SZWdleHAoLyoqIEB0eXBlIHtzdHJpbmd9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbnZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG52YXIgX2ltcGxlbWVudGF0aW9uID0gcmVxdWlyZSgnLi9pbXBsZW1lbnRhdGlvbicpO1xuXG52YXIgX2ltcGxlbWVudGF0aW9uMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2ltcGxlbWVudGF0aW9uKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUNvbnRleHQgfHwgX2ltcGxlbWVudGF0aW9uMi5kZWZhdWx0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiLyoqIVxuICogQGZpbGVPdmVydmlldyBLaWNrYXNzIGxpYnJhcnkgdG8gY3JlYXRlIGFuZCBwbGFjZSBwb3BwZXJzIG5lYXIgdGhlaXIgcmVmZXJlbmNlIGVsZW1lbnRzLlxuICogQHZlcnNpb24gMS4xNi4xXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE2IEZlZGVyaWNvIFppdm9sbyBhbmQgY29udHJpYnV0b3JzXG4gKlxuICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuICogb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuICogaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuICogdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuICogY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4gKiBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuICpcbiAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbFxuICogY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbiAqXG4gKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4gKiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbiAqIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuICogQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuICogTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbiAqIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFXG4gKiBTT0ZUV0FSRS5cbiAqL1xudmFyIGlzQnJvd3NlciA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCc7XG5cbnZhciB0aW1lb3V0RHVyYXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBsb25nZXJUaW1lb3V0QnJvd3NlcnMgPSBbJ0VkZ2UnLCAnVHJpZGVudCcsICdGaXJlZm94J107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbG9uZ2VyVGltZW91dEJyb3dzZXJzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgaWYgKGlzQnJvd3NlciAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YobG9uZ2VyVGltZW91dEJyb3dzZXJzW2ldKSA+PSAwKSB7XG4gICAgICByZXR1cm4gMTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIDA7XG59KCk7XG5cbmZ1bmN0aW9uIG1pY3JvdGFza0RlYm91bmNlKGZuKSB7XG4gIHZhciBjYWxsZWQgPSBmYWxzZTtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoY2FsbGVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNhbGxlZCA9IHRydWU7XG4gICAgd2luZG93LlByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgY2FsbGVkID0gZmFsc2U7XG4gICAgICBmbigpO1xuICAgIH0pO1xuICB9O1xufVxuXG5mdW5jdGlvbiB0YXNrRGVib3VuY2UoZm4pIHtcbiAgdmFyIHNjaGVkdWxlZCA9IGZhbHNlO1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIGlmICghc2NoZWR1bGVkKSB7XG4gICAgICBzY2hlZHVsZWQgPSB0cnVlO1xuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHNjaGVkdWxlZCA9IGZhbHNlO1xuICAgICAgICBmbigpO1xuICAgICAgfSwgdGltZW91dER1cmF0aW9uKTtcbiAgICB9XG4gIH07XG59XG5cbnZhciBzdXBwb3J0c01pY3JvVGFza3MgPSBpc0Jyb3dzZXIgJiYgd2luZG93LlByb21pc2U7XG5cbi8qKlxuKiBDcmVhdGUgYSBkZWJvdW5jZWQgdmVyc2lvbiBvZiBhIG1ldGhvZCwgdGhhdCdzIGFzeW5jaHJvbm91c2x5IGRlZmVycmVkXG4qIGJ1dCBjYWxsZWQgaW4gdGhlIG1pbmltdW0gdGltZSBwb3NzaWJsZS5cbipcbiogQG1ldGhvZFxuKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4qIEBhcmd1bWVudCB7RnVuY3Rpb259IGZuXG4qIEByZXR1cm5zIHtGdW5jdGlvbn1cbiovXG52YXIgZGVib3VuY2UgPSBzdXBwb3J0c01pY3JvVGFza3MgPyBtaWNyb3Rhc2tEZWJvdW5jZSA6IHRhc2tEZWJvdW5jZTtcblxuLyoqXG4gKiBDaGVjayBpZiB0aGUgZ2l2ZW4gdmFyaWFibGUgaXMgYSBmdW5jdGlvblxuICogQG1ldGhvZFxuICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICogQGFyZ3VtZW50IHtBbnl9IGZ1bmN0aW9uVG9DaGVjayAtIHZhcmlhYmxlIHRvIGNoZWNrXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gYW5zd2VyIHRvOiBpcyBhIGZ1bmN0aW9uP1xuICovXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKGZ1bmN0aW9uVG9DaGVjaykge1xuICB2YXIgZ2V0VHlwZSA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb25Ub0NoZWNrICYmIGdldFR5cGUudG9TdHJpbmcuY2FsbChmdW5jdGlvblRvQ2hlY2spID09PSAnW29iamVjdCBGdW5jdGlvbl0nO1xufVxuXG4vKipcbiAqIEdldCBDU1MgY29tcHV0ZWQgcHJvcGVydHkgb2YgdGhlIGdpdmVuIGVsZW1lbnRcbiAqIEBtZXRob2RcbiAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAqIEBhcmd1bWVudCB7RWVtZW50fSBlbGVtZW50XG4gKiBAYXJndW1lbnQge1N0cmluZ30gcHJvcGVydHlcbiAqL1xuZnVuY3Rpb24gZ2V0U3R5bGVDb21wdXRlZFByb3BlcnR5KGVsZW1lbnQsIHByb3BlcnR5KSB7XG4gIGlmIChlbGVtZW50Lm5vZGVUeXBlICE9PSAxKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG4gIC8vIE5PVEU6IDEgRE9NIGFjY2VzcyBoZXJlXG4gIHZhciB3aW5kb3cgPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7XG4gIHZhciBjc3MgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50LCBudWxsKTtcbiAgcmV0dXJuIHByb3BlcnR5ID8gY3NzW3Byb3BlcnR5XSA6IGNzcztcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBwYXJlbnROb2RlIG9yIHRoZSBob3N0IG9mIHRoZSBlbGVtZW50XG4gKiBAbWV0aG9kXG4gKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gKiBAYXJndW1lbnQge0VsZW1lbnR9IGVsZW1lbnRcbiAqIEByZXR1cm5zIHtFbGVtZW50fSBwYXJlbnRcbiAqL1xuZnVuY3Rpb24gZ2V0UGFyZW50Tm9kZShlbGVtZW50KSB7XG4gIGlmIChlbGVtZW50Lm5vZGVOYW1lID09PSAnSFRNTCcpIHtcbiAgICByZXR1cm4gZWxlbWVudDtcbiAgfVxuICByZXR1cm4gZWxlbWVudC5wYXJlbnROb2RlIHx8IGVsZW1lbnQuaG9zdDtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBzY3JvbGxpbmcgcGFyZW50IG9mIHRoZSBnaXZlbiBlbGVtZW50XG4gKiBAbWV0aG9kXG4gKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gKiBAYXJndW1lbnQge0VsZW1lbnR9IGVsZW1lbnRcbiAqIEByZXR1cm5zIHtFbGVtZW50fSBzY3JvbGwgcGFyZW50XG4gKi9cbmZ1bmN0aW9uIGdldFNjcm9sbFBhcmVudChlbGVtZW50KSB7XG4gIC8vIFJldHVybiBib2R5LCBgZ2V0U2Nyb2xsYCB3aWxsIHRha2UgY2FyZSB0byBnZXQgdGhlIGNvcnJlY3QgYHNjcm9sbFRvcGAgZnJvbSBpdFxuICBpZiAoIWVsZW1lbnQpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQuYm9keTtcbiAgfVxuXG4gIHN3aXRjaCAoZWxlbWVudC5ub2RlTmFtZSkge1xuICAgIGNhc2UgJ0hUTUwnOlxuICAgIGNhc2UgJ0JPRFknOlxuICAgICAgcmV0dXJuIGVsZW1lbnQub3duZXJEb2N1bWVudC5ib2R5O1xuICAgIGNhc2UgJyNkb2N1bWVudCc6XG4gICAgICByZXR1cm4gZWxlbWVudC5ib2R5O1xuICB9XG5cbiAgLy8gRmlyZWZveCB3YW50IHVzIHRvIGNoZWNrIGAteGAgYW5kIGAteWAgdmFyaWF0aW9ucyBhcyB3ZWxsXG5cbiAgdmFyIF9nZXRTdHlsZUNvbXB1dGVkUHJvcCA9IGdldFN0eWxlQ29tcHV0ZWRQcm9wZXJ0eShlbGVtZW50KSxcbiAgICAgIG92ZXJmbG93ID0gX2dldFN0eWxlQ29tcHV0ZWRQcm9wLm92ZXJmbG93LFxuICAgICAgb3ZlcmZsb3dYID0gX2dldFN0eWxlQ29tcHV0ZWRQcm9wLm92ZXJmbG93WCxcbiAgICAgIG92ZXJmbG93WSA9IF9nZXRTdHlsZUNvbXB1dGVkUHJvcC5vdmVyZmxvd1k7XG5cbiAgaWYgKC8oYXV0b3xzY3JvbGx8b3ZlcmxheSkvLnRlc3Qob3ZlcmZsb3cgKyBvdmVyZmxvd1kgKyBvdmVyZmxvd1gpKSB7XG4gICAgcmV0dXJuIGVsZW1lbnQ7XG4gIH1cblxuICByZXR1cm4gZ2V0U2Nyb2xsUGFyZW50KGdldFBhcmVudE5vZGUoZWxlbWVudCkpO1xufVxuXG4vKipcbiAqIFJldHVybnMgdGhlIHJlZmVyZW5jZSBub2RlIG9mIHRoZSByZWZlcmVuY2Ugb2JqZWN0LCBvciB0aGUgcmVmZXJlbmNlIG9iamVjdCBpdHNlbGYuXG4gKiBAbWV0aG9kXG4gKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0fSByZWZlcmVuY2UgLSB0aGUgcmVmZXJlbmNlIGVsZW1lbnQgKHRoZSBwb3BwZXIgd2lsbCBiZSByZWxhdGl2ZSB0byB0aGlzKVxuICogQHJldHVybnMge0VsZW1lbnR9IHBhcmVudFxuICovXG5mdW5jdGlvbiBnZXRSZWZlcmVuY2VOb2RlKHJlZmVyZW5jZSkge1xuICByZXR1cm4gcmVmZXJlbmNlICYmIHJlZmVyZW5jZS5yZWZlcmVuY2VOb2RlID8gcmVmZXJlbmNlLnJlZmVyZW5jZU5vZGUgOiByZWZlcmVuY2U7XG59XG5cbnZhciBpc0lFMTEgPSBpc0Jyb3dzZXIgJiYgISEod2luZG93Lk1TSW5wdXRNZXRob2RDb250ZXh0ICYmIGRvY3VtZW50LmRvY3VtZW50TW9kZSk7XG52YXIgaXNJRTEwID0gaXNCcm93c2VyICYmIC9NU0lFIDEwLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuXG4vKipcbiAqIERldGVybWluZXMgaWYgdGhlIGJyb3dzZXIgaXMgSW50ZXJuZXQgRXhwbG9yZXJcbiAqIEBtZXRob2RcbiAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAqIEBwYXJhbSB7TnVtYmVyfSB2ZXJzaW9uIHRvIGNoZWNrXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gaXNJRVxuICovXG5mdW5jdGlvbiBpc0lFKHZlcnNpb24pIHtcbiAgaWYgKHZlcnNpb24gPT09IDExKSB7XG4gICAgcmV0dXJuIGlzSUUxMTtcbiAgfVxuICBpZiAodmVyc2lvbiA9PT0gMTApIHtcbiAgICByZXR1cm4gaXNJRTEwO1xuICB9XG4gIHJldHVybiBpc0lFMTEgfHwgaXNJRTEwO1xufVxuXG4vKipcbiAqIFJldHVybnMgdGhlIG9mZnNldCBwYXJlbnQgb2YgdGhlIGdpdmVuIGVsZW1lbnRcbiAqIEBtZXRob2RcbiAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAqIEBhcmd1bWVudCB7RWxlbWVudH0gZWxlbWVudFxuICogQHJldHVybnMge0VsZW1lbnR9IG9mZnNldCBwYXJlbnRcbiAqL1xuZnVuY3Rpb24gZ2V0T2Zmc2V0UGFyZW50KGVsZW1lbnQpIHtcbiAgaWYgKCFlbGVtZW50KSB7XG4gICAgcmV0dXJuIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiAgfVxuXG4gIHZhciBub09mZnNldFBhcmVudCA9IGlzSUUoMTApID8gZG9jdW1lbnQuYm9keSA6IG51bGw7XG5cbiAgLy8gTk9URTogMSBET00gYWNjZXNzIGhlcmVcbiAgdmFyIG9mZnNldFBhcmVudCA9IGVsZW1lbnQub2Zmc2V0UGFyZW50IHx8IG51bGw7XG4gIC8vIFNraXAgaGlkZGVuIGVsZW1lbnRzIHdoaWNoIGRvbid0IGhhdmUgYW4gb2Zmc2V0UGFyZW50XG4gIHdoaWxlIChvZmZzZXRQYXJlbnQgPT09IG5vT2Zmc2V0UGFyZW50ICYmIGVsZW1lbnQubmV4dEVsZW1lbnRTaWJsaW5nKSB7XG4gICAgb2Zmc2V0UGFyZW50ID0gKGVsZW1lbnQgPSBlbGVtZW50Lm5leHRFbGVtZW50U2libGluZykub2Zmc2V0UGFyZW50O1xuICB9XG5cbiAgdmFyIG5vZGVOYW1lID0gb2Zmc2V0UGFyZW50ICYmIG9mZnNldFBhcmVudC5ub2RlTmFtZTtcblxuICBpZiAoIW5vZGVOYW1lIHx8IG5vZGVOYW1lID09PSAnQk9EWScgfHwgbm9kZU5hbWUgPT09ICdIVE1MJykge1xuICAgIHJldHVybiBlbGVtZW50ID8gZWxlbWVudC5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCA6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiAgfVxuXG4gIC8vIC5vZmZzZXRQYXJlbnQgd2lsbCByZXR1cm4gdGhlIGNsb3Nlc3QgVEgsIFREIG9yIFRBQkxFIGluIGNhc2VcbiAgLy8gbm8gb2Zmc2V0UGFyZW50IGlzIHByZXNlbnQsIEkgaGF0ZSB0aGlzIGpvYi4uLlxuICBpZiAoWydUSCcsICdURCcsICdUQUJMRSddLmluZGV4T2Yob2Zmc2V0UGFyZW50Lm5vZGVOYW1lKSAhPT0gLTEgJiYgZ2V0U3R5bGVDb21wdXRlZFByb3BlcnR5KG9mZnNldFBhcmVudCwgJ3Bvc2l0aW9uJykgPT09ICdzdGF0aWMnKSB7XG4gICAgcmV0dXJuIGdldE9mZnNldFBhcmVudChvZmZzZXRQYXJlbnQpO1xuICB9XG5cbiAgcmV0dXJuIG9mZnNldFBhcmVudDtcbn1cblxuZnVuY3Rpb24gaXNPZmZzZXRDb250YWluZXIoZWxlbWVudCkge1xuICB2YXIgbm9kZU5hbWUgPSBlbGVtZW50Lm5vZGVOYW1lO1xuXG4gIGlmIChub2RlTmFtZSA9PT0gJ0JPRFknKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiBub2RlTmFtZSA9PT0gJ0hUTUwnIHx8IGdldE9mZnNldFBhcmVudChlbGVtZW50LmZpcnN0RWxlbWVudENoaWxkKSA9PT0gZWxlbWVudDtcbn1cblxuLyoqXG4gKiBGaW5kcyB0aGUgcm9vdCBub2RlIChkb2N1bWVudCwgc2hhZG93RE9NIHJvb3QpIG9mIHRoZSBnaXZlbiBlbGVtZW50XG4gKiBAbWV0aG9kXG4gKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gKiBAYXJndW1lbnQge0VsZW1lbnR9IG5vZGVcbiAqIEByZXR1cm5zIHtFbGVtZW50fSByb290IG5vZGVcbiAqL1xuZnVuY3Rpb24gZ2V0Um9vdChub2RlKSB7XG4gIGlmIChub2RlLnBhcmVudE5vZGUgIT09IG51bGwpIHtcbiAgICByZXR1cm4gZ2V0Um9vdChub2RlLnBhcmVudE5vZGUpO1xuICB9XG5cbiAgcmV0dXJuIG5vZGU7XG59XG5cbi8qKlxuICogRmluZHMgdGhlIG9mZnNldCBwYXJlbnQgY29tbW9uIHRvIHRoZSB0d28gcHJvdmlkZWQgbm9kZXNcbiAqIEBtZXRob2RcbiAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAqIEBhcmd1bWVudCB7RWxlbWVudH0gZWxlbWVudDFcbiAqIEBhcmd1bWVudCB7RWxlbWVudH0gZWxlbWVudDJcbiAqIEByZXR1cm5zIHtFbGVtZW50fSBjb21tb24gb2Zmc2V0IHBhcmVudFxuICovXG5mdW5jdGlvbiBmaW5kQ29tbW9uT2Zmc2V0UGFyZW50KGVsZW1lbnQxLCBlbGVtZW50Mikge1xuICAvLyBUaGlzIGNoZWNrIGlzIG5lZWRlZCB0byBhdm9pZCBlcnJvcnMgaW4gY2FzZSBvbmUgb2YgdGhlIGVsZW1lbnRzIGlzbid0IGRlZmluZWQgZm9yIGFueSByZWFzb25cbiAgaWYgKCFlbGVtZW50MSB8fCAhZWxlbWVudDEubm9kZVR5cGUgfHwgIWVsZW1lbnQyIHx8ICFlbGVtZW50Mi5ub2RlVHlwZSkge1xuICAgIHJldHVybiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gIH1cblxuICAvLyBIZXJlIHdlIG1ha2Ugc3VyZSB0byBnaXZlIGFzIFwic3RhcnRcIiB0aGUgZWxlbWVudCB0aGF0IGNvbWVzIGZpcnN0IGluIHRoZSBET01cbiAgdmFyIG9yZGVyID0gZWxlbWVudDEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oZWxlbWVudDIpICYgTm9kZS5ET0NVTUVOVF9QT1NJVElPTl9GT0xMT1dJTkc7XG4gIHZhciBzdGFydCA9IG9yZGVyID8gZWxlbWVudDEgOiBlbGVtZW50MjtcbiAgdmFyIGVuZCA9IG9yZGVyID8gZWxlbWVudDIgOiBlbGVtZW50MTtcblxuICAvLyBHZXQgY29tbW9uIGFuY2VzdG9yIGNvbnRhaW5lclxuICB2YXIgcmFuZ2UgPSBkb2N1bWVudC5jcmVhdGVSYW5nZSgpO1xuICByYW5nZS5zZXRTdGFydChzdGFydCwgMCk7XG4gIHJhbmdlLnNldEVuZChlbmQsIDApO1xuICB2YXIgY29tbW9uQW5jZXN0b3JDb250YWluZXIgPSByYW5nZS5jb21tb25BbmNlc3RvckNvbnRhaW5lcjtcblxuICAvLyBCb3RoIG5vZGVzIGFyZSBpbnNpZGUgI2RvY3VtZW50XG5cbiAgaWYgKGVsZW1lbnQxICE9PSBjb21tb25BbmNlc3RvckNvbnRhaW5lciAmJiBlbGVtZW50MiAhPT0gY29tbW9uQW5jZXN0b3JDb250YWluZXIgfHwgc3RhcnQuY29udGFpbnMoZW5kKSkge1xuICAgIGlmIChpc09mZnNldENvbnRhaW5lcihjb21tb25BbmNlc3RvckNvbnRhaW5lcikpIHtcbiAgICAgIHJldHVybiBjb21tb25BbmNlc3RvckNvbnRhaW5lcjtcbiAgICB9XG5cbiAgICByZXR1cm4gZ2V0T2Zmc2V0UGFyZW50KGNvbW1vbkFuY2VzdG9yQ29udGFpbmVyKTtcbiAgfVxuXG4gIC8vIG9uZSBvZiB0aGUgbm9kZXMgaXMgaW5zaWRlIHNoYWRvd0RPTSwgZmluZCB3aGljaCBvbmVcbiAgdmFyIGVsZW1lbnQxcm9vdCA9IGdldFJvb3QoZWxlbWVudDEpO1xuICBpZiAoZWxlbWVudDFyb290Lmhvc3QpIHtcbiAgICByZXR1cm4gZmluZENvbW1vbk9mZnNldFBhcmVudChlbGVtZW50MXJvb3QuaG9zdCwgZWxlbWVudDIpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBmaW5kQ29tbW9uT2Zmc2V0UGFyZW50KGVsZW1lbnQxLCBnZXRSb290KGVsZW1lbnQyKS5ob3N0KTtcbiAgfVxufVxuXG4vKipcbiAqIEdldHMgdGhlIHNjcm9sbCB2YWx1ZSBvZiB0aGUgZ2l2ZW4gZWxlbWVudCBpbiB0aGUgZ2l2ZW4gc2lkZSAodG9wIGFuZCBsZWZ0KVxuICogQG1ldGhvZFxuICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICogQGFyZ3VtZW50IHtFbGVtZW50fSBlbGVtZW50XG4gKiBAYXJndW1lbnQge1N0cmluZ30gc2lkZSBgdG9wYCBvciBgbGVmdGBcbiAqIEByZXR1cm5zIHtudW1iZXJ9IGFtb3VudCBvZiBzY3JvbGxlZCBwaXhlbHNcbiAqL1xuZnVuY3Rpb24gZ2V0U2Nyb2xsKGVsZW1lbnQpIHtcbiAgdmFyIHNpZGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICd0b3AnO1xuXG4gIHZhciB1cHBlclNpZGUgPSBzaWRlID09PSAndG9wJyA/ICdzY3JvbGxUb3AnIDogJ3Njcm9sbExlZnQnO1xuICB2YXIgbm9kZU5hbWUgPSBlbGVtZW50Lm5vZGVOYW1lO1xuXG4gIGlmIChub2RlTmFtZSA9PT0gJ0JPRFknIHx8IG5vZGVOYW1lID09PSAnSFRNTCcpIHtcbiAgICB2YXIgaHRtbCA9IGVsZW1lbnQub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gICAgdmFyIHNjcm9sbGluZ0VsZW1lbnQgPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQuc2Nyb2xsaW5nRWxlbWVudCB8fCBodG1sO1xuICAgIHJldHVybiBzY3JvbGxpbmdFbGVtZW50W3VwcGVyU2lkZV07XG4gIH1cblxuICByZXR1cm4gZWxlbWVudFt1cHBlclNpZGVdO1xufVxuXG4vKlxuICogU3VtIG9yIHN1YnRyYWN0IHRoZSBlbGVtZW50IHNjcm9sbCB2YWx1ZXMgKGxlZnQgYW5kIHRvcCkgZnJvbSBhIGdpdmVuIHJlY3Qgb2JqZWN0XG4gKiBAbWV0aG9kXG4gKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gKiBAcGFyYW0ge09iamVjdH0gcmVjdCAtIFJlY3Qgb2JqZWN0IHlvdSB3YW50IHRvIGNoYW5nZVxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudCAtIFRoZSBlbGVtZW50IGZyb20gdGhlIGZ1bmN0aW9uIHJlYWRzIHRoZSBzY3JvbGwgdmFsdWVzXG4gKiBAcGFyYW0ge0Jvb2xlYW59IHN1YnRyYWN0IC0gc2V0IHRvIHRydWUgaWYgeW91IHdhbnQgdG8gc3VidHJhY3QgdGhlIHNjcm9sbCB2YWx1ZXNcbiAqIEByZXR1cm4ge09iamVjdH0gcmVjdCAtIFRoZSBtb2RpZmllciByZWN0IG9iamVjdFxuICovXG5mdW5jdGlvbiBpbmNsdWRlU2Nyb2xsKHJlY3QsIGVsZW1lbnQpIHtcbiAgdmFyIHN1YnRyYWN0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBmYWxzZTtcblxuICB2YXIgc2Nyb2xsVG9wID0gZ2V0U2Nyb2xsKGVsZW1lbnQsICd0b3AnKTtcbiAgdmFyIHNjcm9sbExlZnQgPSBnZXRTY3JvbGwoZWxlbWVudCwgJ2xlZnQnKTtcbiAgdmFyIG1vZGlmaWVyID0gc3VidHJhY3QgPyAtMSA6IDE7XG4gIHJlY3QudG9wICs9IHNjcm9sbFRvcCAqIG1vZGlmaWVyO1xuICByZWN0LmJvdHRvbSArPSBzY3JvbGxUb3AgKiBtb2RpZmllcjtcbiAgcmVjdC5sZWZ0ICs9IHNjcm9sbExlZnQgKiBtb2RpZmllcjtcbiAgcmVjdC5yaWdodCArPSBzY3JvbGxMZWZ0ICogbW9kaWZpZXI7XG4gIHJldHVybiByZWN0O1xufVxuXG4vKlxuICogSGVscGVyIHRvIGRldGVjdCBib3JkZXJzIG9mIGEgZ2l2ZW4gZWxlbWVudFxuICogQG1ldGhvZFxuICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICogQHBhcmFtIHtDU1NTdHlsZURlY2xhcmF0aW9ufSBzdHlsZXNcbiAqIFJlc3VsdCBvZiBgZ2V0U3R5bGVDb21wdXRlZFByb3BlcnR5YCBvbiB0aGUgZ2l2ZW4gZWxlbWVudFxuICogQHBhcmFtIHtTdHJpbmd9IGF4aXMgLSBgeGAgb3IgYHlgXG4gKiBAcmV0dXJuIHtudW1iZXJ9IGJvcmRlcnMgLSBUaGUgYm9yZGVycyBzaXplIG9mIHRoZSBnaXZlbiBheGlzXG4gKi9cblxuZnVuY3Rpb24gZ2V0Qm9yZGVyc1NpemUoc3R5bGVzLCBheGlzKSB7XG4gIHZhciBzaWRlQSA9IGF4aXMgPT09ICd4JyA/ICdMZWZ0JyA6ICdUb3AnO1xuICB2YXIgc2lkZUIgPSBzaWRlQSA9PT0gJ0xlZnQnID8gJ1JpZ2h0JyA6ICdCb3R0b20nO1xuXG4gIHJldHVybiBwYXJzZUZsb2F0KHN0eWxlc1snYm9yZGVyJyArIHNpZGVBICsgJ1dpZHRoJ10pICsgcGFyc2VGbG9hdChzdHlsZXNbJ2JvcmRlcicgKyBzaWRlQiArICdXaWR0aCddKTtcbn1cblxuZnVuY3Rpb24gZ2V0U2l6ZShheGlzLCBib2R5LCBodG1sLCBjb21wdXRlZFN0eWxlKSB7XG4gIHJldHVybiBNYXRoLm1heChib2R5WydvZmZzZXQnICsgYXhpc10sIGJvZHlbJ3Njcm9sbCcgKyBheGlzXSwgaHRtbFsnY2xpZW50JyArIGF4aXNdLCBodG1sWydvZmZzZXQnICsgYXhpc10sIGh0bWxbJ3Njcm9sbCcgKyBheGlzXSwgaXNJRSgxMCkgPyBwYXJzZUludChodG1sWydvZmZzZXQnICsgYXhpc10pICsgcGFyc2VJbnQoY29tcHV0ZWRTdHlsZVsnbWFyZ2luJyArIChheGlzID09PSAnSGVpZ2h0JyA/ICdUb3AnIDogJ0xlZnQnKV0pICsgcGFyc2VJbnQoY29tcHV0ZWRTdHlsZVsnbWFyZ2luJyArIChheGlzID09PSAnSGVpZ2h0JyA/ICdCb3R0b20nIDogJ1JpZ2h0JyldKSA6IDApO1xufVxuXG5mdW5jdGlvbiBnZXRXaW5kb3dTaXplcyhkb2N1bWVudCkge1xuICB2YXIgYm9keSA9IGRvY3VtZW50LmJvZHk7XG4gIHZhciBodG1sID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuICB2YXIgY29tcHV0ZWRTdHlsZSA9IGlzSUUoMTApICYmIGdldENvbXB1dGVkU3R5bGUoaHRtbCk7XG5cbiAgcmV0dXJuIHtcbiAgICBoZWlnaHQ6IGdldFNpemUoJ0hlaWdodCcsIGJvZHksIGh0bWwsIGNvbXB1dGVkU3R5bGUpLFxuICAgIHdpZHRoOiBnZXRTaXplKCdXaWR0aCcsIGJvZHksIGh0bWwsIGNvbXB1dGVkU3R5bGUpXG4gIH07XG59XG5cbnZhciBjbGFzc0NhbGxDaGVjayA9IGZ1bmN0aW9uIChpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59O1xuXG52YXIgY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgICBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgICByZXR1cm4gQ29uc3RydWN0b3I7XG4gIH07XG59KCk7XG5cblxuXG5cblxudmFyIGRlZmluZVByb3BlcnR5ID0gZnVuY3Rpb24gKG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBvYmo7XG59O1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufTtcblxuLyoqXG4gKiBHaXZlbiBlbGVtZW50IG9mZnNldHMsIGdlbmVyYXRlIGFuIG91dHB1dCBzaW1pbGFyIHRvIGdldEJvdW5kaW5nQ2xpZW50UmVjdFxuICogQG1ldGhvZFxuICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICogQGFyZ3VtZW50IHtPYmplY3R9IG9mZnNldHNcbiAqIEByZXR1cm5zIHtPYmplY3R9IENsaWVudFJlY3QgbGlrZSBvdXRwdXRcbiAqL1xuZnVuY3Rpb24gZ2V0Q2xpZW50UmVjdChvZmZzZXRzKSB7XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgb2Zmc2V0cywge1xuICAgIHJpZ2h0OiBvZmZzZXRzLmxlZnQgKyBvZmZzZXRzLndpZHRoLFxuICAgIGJvdHRvbTogb2Zmc2V0cy50b3AgKyBvZmZzZXRzLmhlaWdodFxuICB9KTtcbn1cblxuLyoqXG4gKiBHZXQgYm91bmRpbmcgY2xpZW50IHJlY3Qgb2YgZ2l2ZW4gZWxlbWVudFxuICogQG1ldGhvZFxuICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxuICogQHJldHVybiB7T2JqZWN0fSBjbGllbnQgcmVjdFxuICovXG5mdW5jdGlvbiBnZXRCb3VuZGluZ0NsaWVudFJlY3QoZWxlbWVudCkge1xuICB2YXIgcmVjdCA9IHt9O1xuXG4gIC8vIElFMTAgMTAgRklYOiBQbGVhc2UsIGRvbid0IGFzaywgdGhlIGVsZW1lbnQgaXNuJ3RcbiAgLy8gY29uc2lkZXJlZCBpbiBET00gaW4gc29tZSBjaXJjdW1zdGFuY2VzLi4uXG4gIC8vIFRoaXMgaXNuJ3QgcmVwcm9kdWNpYmxlIGluIElFMTAgY29tcGF0aWJpbGl0eSBtb2RlIG9mIElFMTFcbiAgdHJ5IHtcbiAgICBpZiAoaXNJRSgxMCkpIHtcbiAgICAgIHJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgdmFyIHNjcm9sbFRvcCA9IGdldFNjcm9sbChlbGVtZW50LCAndG9wJyk7XG4gICAgICB2YXIgc2Nyb2xsTGVmdCA9IGdldFNjcm9sbChlbGVtZW50LCAnbGVmdCcpO1xuICAgICAgcmVjdC50b3AgKz0gc2Nyb2xsVG9wO1xuICAgICAgcmVjdC5sZWZ0ICs9IHNjcm9sbExlZnQ7XG4gICAgICByZWN0LmJvdHRvbSArPSBzY3JvbGxUb3A7XG4gICAgICByZWN0LnJpZ2h0ICs9IHNjcm9sbExlZnQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkge31cblxuICB2YXIgcmVzdWx0ID0ge1xuICAgIGxlZnQ6IHJlY3QubGVmdCxcbiAgICB0b3A6IHJlY3QudG9wLFxuICAgIHdpZHRoOiByZWN0LnJpZ2h0IC0gcmVjdC5sZWZ0LFxuICAgIGhlaWdodDogcmVjdC5ib3R0b20gLSByZWN0LnRvcFxuICB9O1xuXG4gIC8vIHN1YnRyYWN0IHNjcm9sbGJhciBzaXplIGZyb20gc2l6ZXNcbiAgdmFyIHNpemVzID0gZWxlbWVudC5ub2RlTmFtZSA9PT0gJ0hUTUwnID8gZ2V0V2luZG93U2l6ZXMoZWxlbWVudC5vd25lckRvY3VtZW50KSA6IHt9O1xuICB2YXIgd2lkdGggPSBzaXplcy53aWR0aCB8fCBlbGVtZW50LmNsaWVudFdpZHRoIHx8IHJlc3VsdC53aWR0aDtcbiAgdmFyIGhlaWdodCA9IHNpemVzLmhlaWdodCB8fCBlbGVtZW50LmNsaWVudEhlaWdodCB8fCByZXN1bHQuaGVpZ2h0O1xuXG4gIHZhciBob3JpelNjcm9sbGJhciA9IGVsZW1lbnQub2Zmc2V0V2lkdGggLSB3aWR0aDtcbiAgdmFyIHZlcnRTY3JvbGxiYXIgPSBlbGVtZW50Lm9mZnNldEhlaWdodCAtIGhlaWdodDtcblxuICAvLyBpZiBhbiBoeXBvdGhldGljYWwgc2Nyb2xsYmFyIGlzIGRldGVjdGVkLCB3ZSBtdXN0IGJlIHN1cmUgaXQncyBub3QgYSBgYm9yZGVyYFxuICAvLyB3ZSBtYWtlIHRoaXMgY2hlY2sgY29uZGl0aW9uYWwgZm9yIHBlcmZvcm1hbmNlIHJlYXNvbnNcbiAgaWYgKGhvcml6U2Nyb2xsYmFyIHx8IHZlcnRTY3JvbGxiYXIpIHtcbiAgICB2YXIgc3R5bGVzID0gZ2V0U3R5bGVDb21wdXRlZFByb3BlcnR5KGVsZW1lbnQpO1xuICAgIGhvcml6U2Nyb2xsYmFyIC09IGdldEJvcmRlcnNTaXplKHN0eWxlcywgJ3gnKTtcbiAgICB2ZXJ0U2Nyb2xsYmFyIC09IGdldEJvcmRlcnNTaXplKHN0eWxlcywgJ3knKTtcblxuICAgIHJlc3VsdC53aWR0aCAtPSBob3JpelNjcm9sbGJhcjtcbiAgICByZXN1bHQuaGVpZ2h0IC09IHZlcnRTY3JvbGxiYXI7XG4gIH1cblxuICByZXR1cm4gZ2V0Q2xpZW50UmVjdChyZXN1bHQpO1xufVxuXG5mdW5jdGlvbiBnZXRPZmZzZXRSZWN0UmVsYXRpdmVUb0FyYml0cmFyeU5vZGUoY2hpbGRyZW4sIHBhcmVudCkge1xuICB2YXIgZml4ZWRQb3NpdGlvbiA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogZmFsc2U7XG5cbiAgdmFyIGlzSUUxMCA9IGlzSUUoMTApO1xuICB2YXIgaXNIVE1MID0gcGFyZW50Lm5vZGVOYW1lID09PSAnSFRNTCc7XG4gIHZhciBjaGlsZHJlblJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3QoY2hpbGRyZW4pO1xuICB2YXIgcGFyZW50UmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChwYXJlbnQpO1xuICB2YXIgc2Nyb2xsUGFyZW50ID0gZ2V0U2Nyb2xsUGFyZW50KGNoaWxkcmVuKTtcblxuICB2YXIgc3R5bGVzID0gZ2V0U3R5bGVDb21wdXRlZFByb3BlcnR5KHBhcmVudCk7XG4gIHZhciBib3JkZXJUb3BXaWR0aCA9IHBhcnNlRmxvYXQoc3R5bGVzLmJvcmRlclRvcFdpZHRoKTtcbiAgdmFyIGJvcmRlckxlZnRXaWR0aCA9IHBhcnNlRmxvYXQoc3R5bGVzLmJvcmRlckxlZnRXaWR0aCk7XG5cbiAgLy8gSW4gY2FzZXMgd2hlcmUgdGhlIHBhcmVudCBpcyBmaXhlZCwgd2UgbXVzdCBpZ25vcmUgbmVnYXRpdmUgc2Nyb2xsIGluIG9mZnNldCBjYWxjXG4gIGlmIChmaXhlZFBvc2l0aW9uICYmIGlzSFRNTCkge1xuICAgIHBhcmVudFJlY3QudG9wID0gTWF0aC5tYXgocGFyZW50UmVjdC50b3AsIDApO1xuICAgIHBhcmVudFJlY3QubGVmdCA9IE1hdGgubWF4KHBhcmVudFJlY3QubGVmdCwgMCk7XG4gIH1cbiAgdmFyIG9mZnNldHMgPSBnZXRDbGllbnRSZWN0KHtcbiAgICB0b3A6IGNoaWxkcmVuUmVjdC50b3AgLSBwYXJlbnRSZWN0LnRvcCAtIGJvcmRlclRvcFdpZHRoLFxuICAgIGxlZnQ6IGNoaWxkcmVuUmVjdC5sZWZ0IC0gcGFyZW50UmVjdC5sZWZ0IC0gYm9yZGVyTGVmdFdpZHRoLFxuICAgIHdpZHRoOiBjaGlsZHJlblJlY3Qud2lkdGgsXG4gICAgaGVpZ2h0OiBjaGlsZHJlblJlY3QuaGVpZ2h0XG4gIH0pO1xuICBvZmZzZXRzLm1hcmdpblRvcCA9IDA7XG4gIG9mZnNldHMubWFyZ2luTGVmdCA9IDA7XG5cbiAgLy8gU3VidHJhY3QgbWFyZ2lucyBvZiBkb2N1bWVudEVsZW1lbnQgaW4gY2FzZSBpdCdzIGJlaW5nIHVzZWQgYXMgcGFyZW50XG4gIC8vIHdlIGRvIHRoaXMgb25seSBvbiBIVE1MIGJlY2F1c2UgaXQncyB0aGUgb25seSBlbGVtZW50IHRoYXQgYmVoYXZlc1xuICAvLyBkaWZmZXJlbnRseSB3aGVuIG1hcmdpbnMgYXJlIGFwcGxpZWQgdG8gaXQuIFRoZSBtYXJnaW5zIGFyZSBpbmNsdWRlZCBpblxuICAvLyB0aGUgYm94IG9mIHRoZSBkb2N1bWVudEVsZW1lbnQsIGluIHRoZSBvdGhlciBjYXNlcyBub3QuXG4gIGlmICghaXNJRTEwICYmIGlzSFRNTCkge1xuICAgIHZhciBtYXJnaW5Ub3AgPSBwYXJzZUZsb2F0KHN0eWxlcy5tYXJnaW5Ub3ApO1xuICAgIHZhciBtYXJnaW5MZWZ0ID0gcGFyc2VGbG9hdChzdHlsZXMubWFyZ2luTGVmdCk7XG5cbiAgICBvZmZzZXRzLnRvcCAtPSBib3JkZXJUb3BXaWR0aCAtIG1hcmdpblRvcDtcbiAgICBvZmZzZXRzLmJvdHRvbSAtPSBib3JkZXJUb3BXaWR0aCAtIG1hcmdpblRvcDtcbiAgICBvZmZzZXRzLmxlZnQgLT0gYm9yZGVyTGVmdFdpZHRoIC0gbWFyZ2luTGVmdDtcbiAgICBvZmZzZXRzLnJpZ2h0IC09IGJvcmRlckxlZnRXaWR0aCAtIG1hcmdpbkxlZnQ7XG5cbiAgICAvLyBBdHRhY2ggbWFyZ2luVG9wIGFuZCBtYXJnaW5MZWZ0IGJlY2F1c2UgaW4gc29tZSBjaXJjdW1zdGFuY2VzIHdlIG1heSBuZWVkIHRoZW1cbiAgICBvZmZzZXRzLm1hcmdpblRvcCA9IG1hcmdpblRvcDtcbiAgICBvZmZzZXRzLm1hcmdpbkxlZnQgPSBtYXJnaW5MZWZ0O1xuICB9XG5cbiAgaWYgKGlzSUUxMCAmJiAhZml4ZWRQb3NpdGlvbiA/IHBhcmVudC5jb250YWlucyhzY3JvbGxQYXJlbnQpIDogcGFyZW50ID09PSBzY3JvbGxQYXJlbnQgJiYgc2Nyb2xsUGFyZW50Lm5vZGVOYW1lICE9PSAnQk9EWScpIHtcbiAgICBvZmZzZXRzID0gaW5jbHVkZVNjcm9sbChvZmZzZXRzLCBwYXJlbnQpO1xuICB9XG5cbiAgcmV0dXJuIG9mZnNldHM7XG59XG5cbmZ1bmN0aW9uIGdldFZpZXdwb3J0T2Zmc2V0UmVjdFJlbGF0aXZlVG9BcnRiaXRyYXJ5Tm9kZShlbGVtZW50KSB7XG4gIHZhciBleGNsdWRlU2Nyb2xsID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBmYWxzZTtcblxuICB2YXIgaHRtbCA9IGVsZW1lbnQub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gIHZhciByZWxhdGl2ZU9mZnNldCA9IGdldE9mZnNldFJlY3RSZWxhdGl2ZVRvQXJiaXRyYXJ5Tm9kZShlbGVtZW50LCBodG1sKTtcbiAgdmFyIHdpZHRoID0gTWF0aC5tYXgoaHRtbC5jbGllbnRXaWR0aCwgd2luZG93LmlubmVyV2lkdGggfHwgMCk7XG4gIHZhciBoZWlnaHQgPSBNYXRoLm1heChodG1sLmNsaWVudEhlaWdodCwgd2luZG93LmlubmVySGVpZ2h0IHx8IDApO1xuXG4gIHZhciBzY3JvbGxUb3AgPSAhZXhjbHVkZVNjcm9sbCA/IGdldFNjcm9sbChodG1sKSA6IDA7XG4gIHZhciBzY3JvbGxMZWZ0ID0gIWV4Y2x1ZGVTY3JvbGwgPyBnZXRTY3JvbGwoaHRtbCwgJ2xlZnQnKSA6IDA7XG5cbiAgdmFyIG9mZnNldCA9IHtcbiAgICB0b3A6IHNjcm9sbFRvcCAtIHJlbGF0aXZlT2Zmc2V0LnRvcCArIHJlbGF0aXZlT2Zmc2V0Lm1hcmdpblRvcCxcbiAgICBsZWZ0OiBzY3JvbGxMZWZ0IC0gcmVsYXRpdmVPZmZzZXQubGVmdCArIHJlbGF0aXZlT2Zmc2V0Lm1hcmdpbkxlZnQsXG4gICAgd2lkdGg6IHdpZHRoLFxuICAgIGhlaWdodDogaGVpZ2h0XG4gIH07XG5cbiAgcmV0dXJuIGdldENsaWVudFJlY3Qob2Zmc2V0KTtcbn1cblxuLyoqXG4gKiBDaGVjayBpZiB0aGUgZ2l2ZW4gZWxlbWVudCBpcyBmaXhlZCBvciBpcyBpbnNpZGUgYSBmaXhlZCBwYXJlbnRcbiAqIEBtZXRob2RcbiAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAqIEBhcmd1bWVudCB7RWxlbWVudH0gZWxlbWVudFxuICogQGFyZ3VtZW50IHtFbGVtZW50fSBjdXN0b21Db250YWluZXJcbiAqIEByZXR1cm5zIHtCb29sZWFufSBhbnN3ZXIgdG8gXCJpc0ZpeGVkP1wiXG4gKi9cbmZ1bmN0aW9uIGlzRml4ZWQoZWxlbWVudCkge1xuICB2YXIgbm9kZU5hbWUgPSBlbGVtZW50Lm5vZGVOYW1lO1xuICBpZiAobm9kZU5hbWUgPT09ICdCT0RZJyB8fCBub2RlTmFtZSA9PT0gJ0hUTUwnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmIChnZXRTdHlsZUNvbXB1dGVkUHJvcGVydHkoZWxlbWVudCwgJ3Bvc2l0aW9uJykgPT09ICdmaXhlZCcpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICB2YXIgcGFyZW50Tm9kZSA9IGdldFBhcmVudE5vZGUoZWxlbWVudCk7XG4gIGlmICghcGFyZW50Tm9kZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gaXNGaXhlZChwYXJlbnROb2RlKTtcbn1cblxuLyoqXG4gKiBGaW5kcyB0aGUgZmlyc3QgcGFyZW50IG9mIGFuIGVsZW1lbnQgdGhhdCBoYXMgYSB0cmFuc2Zvcm1lZCBwcm9wZXJ0eSBkZWZpbmVkXG4gKiBAbWV0aG9kXG4gKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gKiBAYXJndW1lbnQge0VsZW1lbnR9IGVsZW1lbnRcbiAqIEByZXR1cm5zIHtFbGVtZW50fSBmaXJzdCB0cmFuc2Zvcm1lZCBwYXJlbnQgb3IgZG9jdW1lbnRFbGVtZW50XG4gKi9cblxuZnVuY3Rpb24gZ2V0Rml4ZWRQb3NpdGlvbk9mZnNldFBhcmVudChlbGVtZW50KSB7XG4gIC8vIFRoaXMgY2hlY2sgaXMgbmVlZGVkIHRvIGF2b2lkIGVycm9ycyBpbiBjYXNlIG9uZSBvZiB0aGUgZWxlbWVudHMgaXNuJ3QgZGVmaW5lZCBmb3IgYW55IHJlYXNvblxuICBpZiAoIWVsZW1lbnQgfHwgIWVsZW1lbnQucGFyZW50RWxlbWVudCB8fCBpc0lFKCkpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuICB9XG4gIHZhciBlbCA9IGVsZW1lbnQucGFyZW50RWxlbWVudDtcbiAgd2hpbGUgKGVsICYmIGdldFN0eWxlQ29tcHV0ZWRQcm9wZXJ0eShlbCwgJ3RyYW5zZm9ybScpID09PSAnbm9uZScpIHtcbiAgICBlbCA9IGVsLnBhcmVudEVsZW1lbnQ7XG4gIH1cbiAgcmV0dXJuIGVsIHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbn1cblxuLyoqXG4gKiBDb21wdXRlZCB0aGUgYm91bmRhcmllcyBsaW1pdHMgYW5kIHJldHVybiB0aGVtXG4gKiBAbWV0aG9kXG4gKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBwb3BwZXJcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IHJlZmVyZW5jZVxuICogQHBhcmFtIHtudW1iZXJ9IHBhZGRpbmdcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGJvdW5kYXJpZXNFbGVtZW50IC0gRWxlbWVudCB1c2VkIHRvIGRlZmluZSB0aGUgYm91bmRhcmllc1xuICogQHBhcmFtIHtCb29sZWFufSBmaXhlZFBvc2l0aW9uIC0gSXMgaW4gZml4ZWQgcG9zaXRpb24gbW9kZVxuICogQHJldHVybnMge09iamVjdH0gQ29vcmRpbmF0ZXMgb2YgdGhlIGJvdW5kYXJpZXNcbiAqL1xuZnVuY3Rpb24gZ2V0Qm91bmRhcmllcyhwb3BwZXIsIHJlZmVyZW5jZSwgcGFkZGluZywgYm91bmRhcmllc0VsZW1lbnQpIHtcbiAgdmFyIGZpeGVkUG9zaXRpb24gPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IGZhbHNlO1xuXG4gIC8vIE5PVEU6IDEgRE9NIGFjY2VzcyBoZXJlXG5cbiAgdmFyIGJvdW5kYXJpZXMgPSB7IHRvcDogMCwgbGVmdDogMCB9O1xuICB2YXIgb2Zmc2V0UGFyZW50ID0gZml4ZWRQb3NpdGlvbiA/IGdldEZpeGVkUG9zaXRpb25PZmZzZXRQYXJlbnQocG9wcGVyKSA6IGZpbmRDb21tb25PZmZzZXRQYXJlbnQocG9wcGVyLCBnZXRSZWZlcmVuY2VOb2RlKHJlZmVyZW5jZSkpO1xuXG4gIC8vIEhhbmRsZSB2aWV3cG9ydCBjYXNlXG4gIGlmIChib3VuZGFyaWVzRWxlbWVudCA9PT0gJ3ZpZXdwb3J0Jykge1xuICAgIGJvdW5kYXJpZXMgPSBnZXRWaWV3cG9ydE9mZnNldFJlY3RSZWxhdGl2ZVRvQXJ0Yml0cmFyeU5vZGUob2Zmc2V0UGFyZW50LCBmaXhlZFBvc2l0aW9uKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBIYW5kbGUgb3RoZXIgY2FzZXMgYmFzZWQgb24gRE9NIGVsZW1lbnQgdXNlZCBhcyBib3VuZGFyaWVzXG4gICAgdmFyIGJvdW5kYXJpZXNOb2RlID0gdm9pZCAwO1xuICAgIGlmIChib3VuZGFyaWVzRWxlbWVudCA9PT0gJ3Njcm9sbFBhcmVudCcpIHtcbiAgICAgIGJvdW5kYXJpZXNOb2RlID0gZ2V0U2Nyb2xsUGFyZW50KGdldFBhcmVudE5vZGUocmVmZXJlbmNlKSk7XG4gICAgICBpZiAoYm91bmRhcmllc05vZGUubm9kZU5hbWUgPT09ICdCT0RZJykge1xuICAgICAgICBib3VuZGFyaWVzTm9kZSA9IHBvcHBlci5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGJvdW5kYXJpZXNFbGVtZW50ID09PSAnd2luZG93Jykge1xuICAgICAgYm91bmRhcmllc05vZGUgPSBwb3BwZXIub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJvdW5kYXJpZXNOb2RlID0gYm91bmRhcmllc0VsZW1lbnQ7XG4gICAgfVxuXG4gICAgdmFyIG9mZnNldHMgPSBnZXRPZmZzZXRSZWN0UmVsYXRpdmVUb0FyYml0cmFyeU5vZGUoYm91bmRhcmllc05vZGUsIG9mZnNldFBhcmVudCwgZml4ZWRQb3NpdGlvbik7XG5cbiAgICAvLyBJbiBjYXNlIG9mIEhUTUwsIHdlIG5lZWQgYSBkaWZmZXJlbnQgY29tcHV0YXRpb25cbiAgICBpZiAoYm91bmRhcmllc05vZGUubm9kZU5hbWUgPT09ICdIVE1MJyAmJiAhaXNGaXhlZChvZmZzZXRQYXJlbnQpKSB7XG4gICAgICB2YXIgX2dldFdpbmRvd1NpemVzID0gZ2V0V2luZG93U2l6ZXMocG9wcGVyLm93bmVyRG9jdW1lbnQpLFxuICAgICAgICAgIGhlaWdodCA9IF9nZXRXaW5kb3dTaXplcy5oZWlnaHQsXG4gICAgICAgICAgd2lkdGggPSBfZ2V0V2luZG93U2l6ZXMud2lkdGg7XG5cbiAgICAgIGJvdW5kYXJpZXMudG9wICs9IG9mZnNldHMudG9wIC0gb2Zmc2V0cy5tYXJnaW5Ub3A7XG4gICAgICBib3VuZGFyaWVzLmJvdHRvbSA9IGhlaWdodCArIG9mZnNldHMudG9wO1xuICAgICAgYm91bmRhcmllcy5sZWZ0ICs9IG9mZnNldHMubGVmdCAtIG9mZnNldHMubWFyZ2luTGVmdDtcbiAgICAgIGJvdW5kYXJpZXMucmlnaHQgPSB3aWR0aCArIG9mZnNldHMubGVmdDtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gZm9yIGFsbCB0aGUgb3RoZXIgRE9NIGVsZW1lbnRzLCB0aGlzIG9uZSBpcyBnb29kXG4gICAgICBib3VuZGFyaWVzID0gb2Zmc2V0cztcbiAgICB9XG4gIH1cblxuICAvLyBBZGQgcGFkZGluZ3NcbiAgcGFkZGluZyA9IHBhZGRpbmcgfHwgMDtcbiAgdmFyIGlzUGFkZGluZ051bWJlciA9IHR5cGVvZiBwYWRkaW5nID09PSAnbnVtYmVyJztcbiAgYm91bmRhcmllcy5sZWZ0ICs9IGlzUGFkZGluZ051bWJlciA/IHBhZGRpbmcgOiBwYWRkaW5nLmxlZnQgfHwgMDtcbiAgYm91bmRhcmllcy50b3AgKz0gaXNQYWRkaW5nTnVtYmVyID8gcGFkZGluZyA6IHBhZGRpbmcudG9wIHx8IDA7XG4gIGJvdW5kYXJpZXMucmlnaHQgLT0gaXNQYWRkaW5nTnVtYmVyID8gcGFkZGluZyA6IHBhZGRpbmcucmlnaHQgfHwgMDtcbiAgYm91bmRhcmllcy5ib3R0b20gLT0gaXNQYWRkaW5nTnVtYmVyID8gcGFkZGluZyA6IHBhZGRpbmcuYm90dG9tIHx8IDA7XG5cbiAgcmV0dXJuIGJvdW5kYXJpZXM7XG59XG5cbmZ1bmN0aW9uIGdldEFyZWEoX3JlZikge1xuICB2YXIgd2lkdGggPSBfcmVmLndpZHRoLFxuICAgICAgaGVpZ2h0ID0gX3JlZi5oZWlnaHQ7XG5cbiAgcmV0dXJuIHdpZHRoICogaGVpZ2h0O1xufVxuXG4vKipcbiAqIFV0aWxpdHkgdXNlZCB0byB0cmFuc2Zvcm0gdGhlIGBhdXRvYCBwbGFjZW1lbnQgdG8gdGhlIHBsYWNlbWVudCB3aXRoIG1vcmVcbiAqIGF2YWlsYWJsZSBzcGFjZS5cbiAqIEBtZXRob2RcbiAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAqIEBhcmd1bWVudCB7T2JqZWN0fSBkYXRhIC0gVGhlIGRhdGEgb2JqZWN0IGdlbmVyYXRlZCBieSB1cGRhdGUgbWV0aG9kXG4gKiBAYXJndW1lbnQge09iamVjdH0gb3B0aW9ucyAtIE1vZGlmaWVycyBjb25maWd1cmF0aW9uIGFuZCBvcHRpb25zXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBUaGUgZGF0YSBvYmplY3QsIHByb3Blcmx5IG1vZGlmaWVkXG4gKi9cbmZ1bmN0aW9uIGNvbXB1dGVBdXRvUGxhY2VtZW50KHBsYWNlbWVudCwgcmVmUmVjdCwgcG9wcGVyLCByZWZlcmVuY2UsIGJvdW5kYXJpZXNFbGVtZW50KSB7XG4gIHZhciBwYWRkaW5nID0gYXJndW1lbnRzLmxlbmd0aCA+IDUgJiYgYXJndW1lbnRzWzVdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbNV0gOiAwO1xuXG4gIGlmIChwbGFjZW1lbnQuaW5kZXhPZignYXV0bycpID09PSAtMSkge1xuICAgIHJldHVybiBwbGFjZW1lbnQ7XG4gIH1cblxuICB2YXIgYm91bmRhcmllcyA9IGdldEJvdW5kYXJpZXMocG9wcGVyLCByZWZlcmVuY2UsIHBhZGRpbmcsIGJvdW5kYXJpZXNFbGVtZW50KTtcblxuICB2YXIgcmVjdHMgPSB7XG4gICAgdG9wOiB7XG4gICAgICB3aWR0aDogYm91bmRhcmllcy53aWR0aCxcbiAgICAgIGhlaWdodDogcmVmUmVjdC50b3AgLSBib3VuZGFyaWVzLnRvcFxuICAgIH0sXG4gICAgcmlnaHQ6IHtcbiAgICAgIHdpZHRoOiBib3VuZGFyaWVzLnJpZ2h0IC0gcmVmUmVjdC5yaWdodCxcbiAgICAgIGhlaWdodDogYm91bmRhcmllcy5oZWlnaHRcbiAgICB9LFxuICAgIGJvdHRvbToge1xuICAgICAgd2lkdGg6IGJvdW5kYXJpZXMud2lkdGgsXG4gICAgICBoZWlnaHQ6IGJvdW5kYXJpZXMuYm90dG9tIC0gcmVmUmVjdC5ib3R0b21cbiAgICB9LFxuICAgIGxlZnQ6IHtcbiAgICAgIHdpZHRoOiByZWZSZWN0LmxlZnQgLSBib3VuZGFyaWVzLmxlZnQsXG4gICAgICBoZWlnaHQ6IGJvdW5kYXJpZXMuaGVpZ2h0XG4gICAgfVxuICB9O1xuXG4gIHZhciBzb3J0ZWRBcmVhcyA9IE9iamVjdC5rZXlzKHJlY3RzKS5tYXAoZnVuY3Rpb24gKGtleSkge1xuICAgIHJldHVybiBfZXh0ZW5kcyh7XG4gICAgICBrZXk6IGtleVxuICAgIH0sIHJlY3RzW2tleV0sIHtcbiAgICAgIGFyZWE6IGdldEFyZWEocmVjdHNba2V5XSlcbiAgICB9KTtcbiAgfSkuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgIHJldHVybiBiLmFyZWEgLSBhLmFyZWE7XG4gIH0pO1xuXG4gIHZhciBmaWx0ZXJlZEFyZWFzID0gc29ydGVkQXJlYXMuZmlsdGVyKGZ1bmN0aW9uIChfcmVmMikge1xuICAgIHZhciB3aWR0aCA9IF9yZWYyLndpZHRoLFxuICAgICAgICBoZWlnaHQgPSBfcmVmMi5oZWlnaHQ7XG4gICAgcmV0dXJuIHdpZHRoID49IHBvcHBlci5jbGllbnRXaWR0aCAmJiBoZWlnaHQgPj0gcG9wcGVyLmNsaWVudEhlaWdodDtcbiAgfSk7XG5cbiAgdmFyIGNvbXB1dGVkUGxhY2VtZW50ID0gZmlsdGVyZWRBcmVhcy5sZW5ndGggPiAwID8gZmlsdGVyZWRBcmVhc1swXS5rZXkgOiBzb3J0ZWRBcmVhc1swXS5rZXk7XG5cbiAgdmFyIHZhcmlhdGlvbiA9IHBsYWNlbWVudC5zcGxpdCgnLScpWzFdO1xuXG4gIHJldHVybiBjb21wdXRlZFBsYWNlbWVudCArICh2YXJpYXRpb24gPyAnLScgKyB2YXJpYXRpb24gOiAnJyk7XG59XG5cbi8qKlxuICogR2V0IG9mZnNldHMgdG8gdGhlIHJlZmVyZW5jZSBlbGVtZW50XG4gKiBAbWV0aG9kXG4gKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gKiBAcGFyYW0ge09iamVjdH0gc3RhdGVcbiAqIEBwYXJhbSB7RWxlbWVudH0gcG9wcGVyIC0gdGhlIHBvcHBlciBlbGVtZW50XG4gKiBAcGFyYW0ge0VsZW1lbnR9IHJlZmVyZW5jZSAtIHRoZSByZWZlcmVuY2UgZWxlbWVudCAodGhlIHBvcHBlciB3aWxsIGJlIHJlbGF0aXZlIHRvIHRoaXMpXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGZpeGVkUG9zaXRpb24gLSBpcyBpbiBmaXhlZCBwb3NpdGlvbiBtb2RlXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBBbiBvYmplY3QgY29udGFpbmluZyB0aGUgb2Zmc2V0cyB3aGljaCB3aWxsIGJlIGFwcGxpZWQgdG8gdGhlIHBvcHBlclxuICovXG5mdW5jdGlvbiBnZXRSZWZlcmVuY2VPZmZzZXRzKHN0YXRlLCBwb3BwZXIsIHJlZmVyZW5jZSkge1xuICB2YXIgZml4ZWRQb3NpdGlvbiA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDogbnVsbDtcblxuICB2YXIgY29tbW9uT2Zmc2V0UGFyZW50ID0gZml4ZWRQb3NpdGlvbiA/IGdldEZpeGVkUG9zaXRpb25PZmZzZXRQYXJlbnQocG9wcGVyKSA6IGZpbmRDb21tb25PZmZzZXRQYXJlbnQocG9wcGVyLCBnZXRSZWZlcmVuY2VOb2RlKHJlZmVyZW5jZSkpO1xuICByZXR1cm4gZ2V0T2Zmc2V0UmVjdFJlbGF0aXZlVG9BcmJpdHJhcnlOb2RlKHJlZmVyZW5jZSwgY29tbW9uT2Zmc2V0UGFyZW50LCBmaXhlZFBvc2l0aW9uKTtcbn1cblxuLyoqXG4gKiBHZXQgdGhlIG91dGVyIHNpemVzIG9mIHRoZSBnaXZlbiBlbGVtZW50IChvZmZzZXQgc2l6ZSArIG1hcmdpbnMpXG4gKiBAbWV0aG9kXG4gKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gKiBAYXJndW1lbnQge0VsZW1lbnR9IGVsZW1lbnRcbiAqIEByZXR1cm5zIHtPYmplY3R9IG9iamVjdCBjb250YWluaW5nIHdpZHRoIGFuZCBoZWlnaHQgcHJvcGVydGllc1xuICovXG5mdW5jdGlvbiBnZXRPdXRlclNpemVzKGVsZW1lbnQpIHtcbiAgdmFyIHdpbmRvdyA9IGVsZW1lbnQub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldztcbiAgdmFyIHN0eWxlcyA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpO1xuICB2YXIgeCA9IHBhcnNlRmxvYXQoc3R5bGVzLm1hcmdpblRvcCB8fCAwKSArIHBhcnNlRmxvYXQoc3R5bGVzLm1hcmdpbkJvdHRvbSB8fCAwKTtcbiAgdmFyIHkgPSBwYXJzZUZsb2F0KHN0eWxlcy5tYXJnaW5MZWZ0IHx8IDApICsgcGFyc2VGbG9hdChzdHlsZXMubWFyZ2luUmlnaHQgfHwgMCk7XG4gIHZhciByZXN1bHQgPSB7XG4gICAgd2lkdGg6IGVsZW1lbnQub2Zmc2V0V2lkdGggKyB5LFxuICAgIGhlaWdodDogZWxlbWVudC5vZmZzZXRIZWlnaHQgKyB4XG4gIH07XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogR2V0IHRoZSBvcHBvc2l0ZSBwbGFjZW1lbnQgb2YgdGhlIGdpdmVuIG9uZVxuICogQG1ldGhvZFxuICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICogQGFyZ3VtZW50IHtTdHJpbmd9IHBsYWNlbWVudFxuICogQHJldHVybnMge1N0cmluZ30gZmxpcHBlZCBwbGFjZW1lbnRcbiAqL1xuZnVuY3Rpb24gZ2V0T3Bwb3NpdGVQbGFjZW1lbnQocGxhY2VtZW50KSB7XG4gIHZhciBoYXNoID0geyBsZWZ0OiAncmlnaHQnLCByaWdodDogJ2xlZnQnLCBib3R0b206ICd0b3AnLCB0b3A6ICdib3R0b20nIH07XG4gIHJldHVybiBwbGFjZW1lbnQucmVwbGFjZSgvbGVmdHxyaWdodHxib3R0b218dG9wL2csIGZ1bmN0aW9uIChtYXRjaGVkKSB7XG4gICAgcmV0dXJuIGhhc2hbbWF0Y2hlZF07XG4gIH0pO1xufVxuXG4vKipcbiAqIEdldCBvZmZzZXRzIHRvIHRoZSBwb3BwZXJcbiAqIEBtZXRob2RcbiAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAqIEBwYXJhbSB7T2JqZWN0fSBwb3NpdGlvbiAtIENTUyBwb3NpdGlvbiB0aGUgUG9wcGVyIHdpbGwgZ2V0IGFwcGxpZWRcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IHBvcHBlciAtIHRoZSBwb3BwZXIgZWxlbWVudFxuICogQHBhcmFtIHtPYmplY3R9IHJlZmVyZW5jZU9mZnNldHMgLSB0aGUgcmVmZXJlbmNlIG9mZnNldHMgKHRoZSBwb3BwZXIgd2lsbCBiZSByZWxhdGl2ZSB0byB0aGlzKVxuICogQHBhcmFtIHtTdHJpbmd9IHBsYWNlbWVudCAtIG9uZSBvZiB0aGUgdmFsaWQgcGxhY2VtZW50IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtPYmplY3R9IHBvcHBlck9mZnNldHMgLSBBbiBvYmplY3QgY29udGFpbmluZyB0aGUgb2Zmc2V0cyB3aGljaCB3aWxsIGJlIGFwcGxpZWQgdG8gdGhlIHBvcHBlclxuICovXG5mdW5jdGlvbiBnZXRQb3BwZXJPZmZzZXRzKHBvcHBlciwgcmVmZXJlbmNlT2Zmc2V0cywgcGxhY2VtZW50KSB7XG4gIHBsYWNlbWVudCA9IHBsYWNlbWVudC5zcGxpdCgnLScpWzBdO1xuXG4gIC8vIEdldCBwb3BwZXIgbm9kZSBzaXplc1xuICB2YXIgcG9wcGVyUmVjdCA9IGdldE91dGVyU2l6ZXMocG9wcGVyKTtcblxuICAvLyBBZGQgcG9zaXRpb24sIHdpZHRoIGFuZCBoZWlnaHQgdG8gb3VyIG9mZnNldHMgb2JqZWN0XG4gIHZhciBwb3BwZXJPZmZzZXRzID0ge1xuICAgIHdpZHRoOiBwb3BwZXJSZWN0LndpZHRoLFxuICAgIGhlaWdodDogcG9wcGVyUmVjdC5oZWlnaHRcbiAgfTtcblxuICAvLyBkZXBlbmRpbmcgYnkgdGhlIHBvcHBlciBwbGFjZW1lbnQgd2UgaGF2ZSB0byBjb21wdXRlIGl0cyBvZmZzZXRzIHNsaWdodGx5IGRpZmZlcmVudGx5XG4gIHZhciBpc0hvcml6ID0gWydyaWdodCcsICdsZWZ0J10uaW5kZXhPZihwbGFjZW1lbnQpICE9PSAtMTtcbiAgdmFyIG1haW5TaWRlID0gaXNIb3JpeiA/ICd0b3AnIDogJ2xlZnQnO1xuICB2YXIgc2Vjb25kYXJ5U2lkZSA9IGlzSG9yaXogPyAnbGVmdCcgOiAndG9wJztcbiAgdmFyIG1lYXN1cmVtZW50ID0gaXNIb3JpeiA/ICdoZWlnaHQnIDogJ3dpZHRoJztcbiAgdmFyIHNlY29uZGFyeU1lYXN1cmVtZW50ID0gIWlzSG9yaXogPyAnaGVpZ2h0JyA6ICd3aWR0aCc7XG5cbiAgcG9wcGVyT2Zmc2V0c1ttYWluU2lkZV0gPSByZWZlcmVuY2VPZmZzZXRzW21haW5TaWRlXSArIHJlZmVyZW5jZU9mZnNldHNbbWVhc3VyZW1lbnRdIC8gMiAtIHBvcHBlclJlY3RbbWVhc3VyZW1lbnRdIC8gMjtcbiAgaWYgKHBsYWNlbWVudCA9PT0gc2Vjb25kYXJ5U2lkZSkge1xuICAgIHBvcHBlck9mZnNldHNbc2Vjb25kYXJ5U2lkZV0gPSByZWZlcmVuY2VPZmZzZXRzW3NlY29uZGFyeVNpZGVdIC0gcG9wcGVyUmVjdFtzZWNvbmRhcnlNZWFzdXJlbWVudF07XG4gIH0gZWxzZSB7XG4gICAgcG9wcGVyT2Zmc2V0c1tzZWNvbmRhcnlTaWRlXSA9IHJlZmVyZW5jZU9mZnNldHNbZ2V0T3Bwb3NpdGVQbGFjZW1lbnQoc2Vjb25kYXJ5U2lkZSldO1xuICB9XG5cbiAgcmV0dXJuIHBvcHBlck9mZnNldHM7XG59XG5cbi8qKlxuICogTWltaWNzIHRoZSBgZmluZGAgbWV0aG9kIG9mIEFycmF5XG4gKiBAbWV0aG9kXG4gKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gKiBAYXJndW1lbnQge0FycmF5fSBhcnJcbiAqIEBhcmd1bWVudCBwcm9wXG4gKiBAYXJndW1lbnQgdmFsdWVcbiAqIEByZXR1cm5zIGluZGV4IG9yIC0xXG4gKi9cbmZ1bmN0aW9uIGZpbmQoYXJyLCBjaGVjaykge1xuICAvLyB1c2UgbmF0aXZlIGZpbmQgaWYgc3VwcG9ydGVkXG4gIGlmIChBcnJheS5wcm90b3R5cGUuZmluZCkge1xuICAgIHJldHVybiBhcnIuZmluZChjaGVjayk7XG4gIH1cblxuICAvLyB1c2UgYGZpbHRlcmAgdG8gb2J0YWluIHRoZSBzYW1lIGJlaGF2aW9yIG9mIGBmaW5kYFxuICByZXR1cm4gYXJyLmZpbHRlcihjaGVjaylbMF07XG59XG5cbi8qKlxuICogUmV0dXJuIHRoZSBpbmRleCBvZiB0aGUgbWF0Y2hpbmcgb2JqZWN0XG4gKiBAbWV0aG9kXG4gKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gKiBAYXJndW1lbnQge0FycmF5fSBhcnJcbiAqIEBhcmd1bWVudCBwcm9wXG4gKiBAYXJndW1lbnQgdmFsdWVcbiAqIEByZXR1cm5zIGluZGV4IG9yIC0xXG4gKi9cbmZ1bmN0aW9uIGZpbmRJbmRleChhcnIsIHByb3AsIHZhbHVlKSB7XG4gIC8vIHVzZSBuYXRpdmUgZmluZEluZGV4IGlmIHN1cHBvcnRlZFxuICBpZiAoQXJyYXkucHJvdG90eXBlLmZpbmRJbmRleCkge1xuICAgIHJldHVybiBhcnIuZmluZEluZGV4KGZ1bmN0aW9uIChjdXIpIHtcbiAgICAgIHJldHVybiBjdXJbcHJvcF0gPT09IHZhbHVlO1xuICAgIH0pO1xuICB9XG5cbiAgLy8gdXNlIGBmaW5kYCArIGBpbmRleE9mYCBpZiBgZmluZEluZGV4YCBpc24ndCBzdXBwb3J0ZWRcbiAgdmFyIG1hdGNoID0gZmluZChhcnIsIGZ1bmN0aW9uIChvYmopIHtcbiAgICByZXR1cm4gb2JqW3Byb3BdID09PSB2YWx1ZTtcbiAgfSk7XG4gIHJldHVybiBhcnIuaW5kZXhPZihtYXRjaCk7XG59XG5cbi8qKlxuICogTG9vcCB0cm91Z2ggdGhlIGxpc3Qgb2YgbW9kaWZpZXJzIGFuZCBydW4gdGhlbSBpbiBvcmRlcixcbiAqIGVhY2ggb2YgdGhlbSB3aWxsIHRoZW4gZWRpdCB0aGUgZGF0YSBvYmplY3QuXG4gKiBAbWV0aG9kXG4gKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gKiBAcGFyYW0ge2RhdGFPYmplY3R9IGRhdGFcbiAqIEBwYXJhbSB7QXJyYXl9IG1vZGlmaWVyc1xuICogQHBhcmFtIHtTdHJpbmd9IGVuZHMgLSBPcHRpb25hbCBtb2RpZmllciBuYW1lIHVzZWQgYXMgc3RvcHBlclxuICogQHJldHVybnMge2RhdGFPYmplY3R9XG4gKi9cbmZ1bmN0aW9uIHJ1bk1vZGlmaWVycyhtb2RpZmllcnMsIGRhdGEsIGVuZHMpIHtcbiAgdmFyIG1vZGlmaWVyc1RvUnVuID0gZW5kcyA9PT0gdW5kZWZpbmVkID8gbW9kaWZpZXJzIDogbW9kaWZpZXJzLnNsaWNlKDAsIGZpbmRJbmRleChtb2RpZmllcnMsICduYW1lJywgZW5kcykpO1xuXG4gIG1vZGlmaWVyc1RvUnVuLmZvckVhY2goZnVuY3Rpb24gKG1vZGlmaWVyKSB7XG4gICAgaWYgKG1vZGlmaWVyWydmdW5jdGlvbiddKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGRvdC1ub3RhdGlvblxuICAgICAgY29uc29sZS53YXJuKCdgbW9kaWZpZXIuZnVuY3Rpb25gIGlzIGRlcHJlY2F0ZWQsIHVzZSBgbW9kaWZpZXIuZm5gIScpO1xuICAgIH1cbiAgICB2YXIgZm4gPSBtb2RpZmllclsnZnVuY3Rpb24nXSB8fCBtb2RpZmllci5mbjsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBkb3Qtbm90YXRpb25cbiAgICBpZiAobW9kaWZpZXIuZW5hYmxlZCAmJiBpc0Z1bmN0aW9uKGZuKSkge1xuICAgICAgLy8gQWRkIHByb3BlcnRpZXMgdG8gb2Zmc2V0cyB0byBtYWtlIHRoZW0gYSBjb21wbGV0ZSBjbGllbnRSZWN0IG9iamVjdFxuICAgICAgLy8gd2UgZG8gdGhpcyBiZWZvcmUgZWFjaCBtb2RpZmllciB0byBtYWtlIHN1cmUgdGhlIHByZXZpb3VzIG9uZSBkb2Vzbid0XG4gICAgICAvLyBtZXNzIHdpdGggdGhlc2UgdmFsdWVzXG4gICAgICBkYXRhLm9mZnNldHMucG9wcGVyID0gZ2V0Q2xpZW50UmVjdChkYXRhLm9mZnNldHMucG9wcGVyKTtcbiAgICAgIGRhdGEub2Zmc2V0cy5yZWZlcmVuY2UgPSBnZXRDbGllbnRSZWN0KGRhdGEub2Zmc2V0cy5yZWZlcmVuY2UpO1xuXG4gICAgICBkYXRhID0gZm4oZGF0YSwgbW9kaWZpZXIpO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGRhdGE7XG59XG5cbi8qKlxuICogVXBkYXRlcyB0aGUgcG9zaXRpb24gb2YgdGhlIHBvcHBlciwgY29tcHV0aW5nIHRoZSBuZXcgb2Zmc2V0cyBhbmQgYXBwbHlpbmdcbiAqIHRoZSBuZXcgc3R5bGUuPGJyIC8+XG4gKiBQcmVmZXIgYHNjaGVkdWxlVXBkYXRlYCBvdmVyIGB1cGRhdGVgIGJlY2F1c2Ugb2YgcGVyZm9ybWFuY2UgcmVhc29ucy5cbiAqIEBtZXRob2RcbiAqIEBtZW1iZXJvZiBQb3BwZXJcbiAqL1xuZnVuY3Rpb24gdXBkYXRlKCkge1xuICAvLyBpZiBwb3BwZXIgaXMgZGVzdHJveWVkLCBkb24ndCBwZXJmb3JtIGFueSBmdXJ0aGVyIHVwZGF0ZVxuICBpZiAodGhpcy5zdGF0ZS5pc0Rlc3Ryb3llZCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBkYXRhID0ge1xuICAgIGluc3RhbmNlOiB0aGlzLFxuICAgIHN0eWxlczoge30sXG4gICAgYXJyb3dTdHlsZXM6IHt9LFxuICAgIGF0dHJpYnV0ZXM6IHt9LFxuICAgIGZsaXBwZWQ6IGZhbHNlLFxuICAgIG9mZnNldHM6IHt9XG4gIH07XG5cbiAgLy8gY29tcHV0ZSByZWZlcmVuY2UgZWxlbWVudCBvZmZzZXRzXG4gIGRhdGEub2Zmc2V0cy5yZWZlcmVuY2UgPSBnZXRSZWZlcmVuY2VPZmZzZXRzKHRoaXMuc3RhdGUsIHRoaXMucG9wcGVyLCB0aGlzLnJlZmVyZW5jZSwgdGhpcy5vcHRpb25zLnBvc2l0aW9uRml4ZWQpO1xuXG4gIC8vIGNvbXB1dGUgYXV0byBwbGFjZW1lbnQsIHN0b3JlIHBsYWNlbWVudCBpbnNpZGUgdGhlIGRhdGEgb2JqZWN0LFxuICAvLyBtb2RpZmllcnMgd2lsbCBiZSBhYmxlIHRvIGVkaXQgYHBsYWNlbWVudGAgaWYgbmVlZGVkXG4gIC8vIGFuZCByZWZlciB0byBvcmlnaW5hbFBsYWNlbWVudCB0byBrbm93IHRoZSBvcmlnaW5hbCB2YWx1ZVxuICBkYXRhLnBsYWNlbWVudCA9IGNvbXB1dGVBdXRvUGxhY2VtZW50KHRoaXMub3B0aW9ucy5wbGFjZW1lbnQsIGRhdGEub2Zmc2V0cy5yZWZlcmVuY2UsIHRoaXMucG9wcGVyLCB0aGlzLnJlZmVyZW5jZSwgdGhpcy5vcHRpb25zLm1vZGlmaWVycy5mbGlwLmJvdW5kYXJpZXNFbGVtZW50LCB0aGlzLm9wdGlvbnMubW9kaWZpZXJzLmZsaXAucGFkZGluZyk7XG5cbiAgLy8gc3RvcmUgdGhlIGNvbXB1dGVkIHBsYWNlbWVudCBpbnNpZGUgYG9yaWdpbmFsUGxhY2VtZW50YFxuICBkYXRhLm9yaWdpbmFsUGxhY2VtZW50ID0gZGF0YS5wbGFjZW1lbnQ7XG5cbiAgZGF0YS5wb3NpdGlvbkZpeGVkID0gdGhpcy5vcHRpb25zLnBvc2l0aW9uRml4ZWQ7XG5cbiAgLy8gY29tcHV0ZSB0aGUgcG9wcGVyIG9mZnNldHNcbiAgZGF0YS5vZmZzZXRzLnBvcHBlciA9IGdldFBvcHBlck9mZnNldHModGhpcy5wb3BwZXIsIGRhdGEub2Zmc2V0cy5yZWZlcmVuY2UsIGRhdGEucGxhY2VtZW50KTtcblxuICBkYXRhLm9mZnNldHMucG9wcGVyLnBvc2l0aW9uID0gdGhpcy5vcHRpb25zLnBvc2l0aW9uRml4ZWQgPyAnZml4ZWQnIDogJ2Fic29sdXRlJztcblxuICAvLyBydW4gdGhlIG1vZGlmaWVyc1xuICBkYXRhID0gcnVuTW9kaWZpZXJzKHRoaXMubW9kaWZpZXJzLCBkYXRhKTtcblxuICAvLyB0aGUgZmlyc3QgYHVwZGF0ZWAgd2lsbCBjYWxsIGBvbkNyZWF0ZWAgY2FsbGJhY2tcbiAgLy8gdGhlIG90aGVyIG9uZXMgd2lsbCBjYWxsIGBvblVwZGF0ZWAgY2FsbGJhY2tcbiAgaWYgKCF0aGlzLnN0YXRlLmlzQ3JlYXRlZCkge1xuICAgIHRoaXMuc3RhdGUuaXNDcmVhdGVkID0gdHJ1ZTtcbiAgICB0aGlzLm9wdGlvbnMub25DcmVhdGUoZGF0YSk7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5vcHRpb25zLm9uVXBkYXRlKGRhdGEpO1xuICB9XG59XG5cbi8qKlxuICogSGVscGVyIHVzZWQgdG8ga25vdyBpZiB0aGUgZ2l2ZW4gbW9kaWZpZXIgaXMgZW5hYmxlZC5cbiAqIEBtZXRob2RcbiAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAqIEByZXR1cm5zIHtCb29sZWFufVxuICovXG5mdW5jdGlvbiBpc01vZGlmaWVyRW5hYmxlZChtb2RpZmllcnMsIG1vZGlmaWVyTmFtZSkge1xuICByZXR1cm4gbW9kaWZpZXJzLnNvbWUoZnVuY3Rpb24gKF9yZWYpIHtcbiAgICB2YXIgbmFtZSA9IF9yZWYubmFtZSxcbiAgICAgICAgZW5hYmxlZCA9IF9yZWYuZW5hYmxlZDtcbiAgICByZXR1cm4gZW5hYmxlZCAmJiBuYW1lID09PSBtb2RpZmllck5hbWU7XG4gIH0pO1xufVxuXG4vKipcbiAqIEdldCB0aGUgcHJlZml4ZWQgc3VwcG9ydGVkIHByb3BlcnR5IG5hbWVcbiAqIEBtZXRob2RcbiAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAqIEBhcmd1bWVudCB7U3RyaW5nfSBwcm9wZXJ0eSAoY2FtZWxDYXNlKVxuICogQHJldHVybnMge1N0cmluZ30gcHJlZml4ZWQgcHJvcGVydHkgKGNhbWVsQ2FzZSBvciBQYXNjYWxDYXNlLCBkZXBlbmRpbmcgb24gdGhlIHZlbmRvciBwcmVmaXgpXG4gKi9cbmZ1bmN0aW9uIGdldFN1cHBvcnRlZFByb3BlcnR5TmFtZShwcm9wZXJ0eSkge1xuICB2YXIgcHJlZml4ZXMgPSBbZmFsc2UsICdtcycsICdXZWJraXQnLCAnTW96JywgJ08nXTtcbiAgdmFyIHVwcGVyUHJvcCA9IHByb3BlcnR5LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgcHJvcGVydHkuc2xpY2UoMSk7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcmVmaXhlcy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBwcmVmaXggPSBwcmVmaXhlc1tpXTtcbiAgICB2YXIgdG9DaGVjayA9IHByZWZpeCA/ICcnICsgcHJlZml4ICsgdXBwZXJQcm9wIDogcHJvcGVydHk7XG4gICAgaWYgKHR5cGVvZiBkb2N1bWVudC5ib2R5LnN0eWxlW3RvQ2hlY2tdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgcmV0dXJuIHRvQ2hlY2s7XG4gICAgfVxuICB9XG4gIHJldHVybiBudWxsO1xufVxuXG4vKipcbiAqIERlc3Ryb3lzIHRoZSBwb3BwZXIuXG4gKiBAbWV0aG9kXG4gKiBAbWVtYmVyb2YgUG9wcGVyXG4gKi9cbmZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gIHRoaXMuc3RhdGUuaXNEZXN0cm95ZWQgPSB0cnVlO1xuXG4gIC8vIHRvdWNoIERPTSBvbmx5IGlmIGBhcHBseVN0eWxlYCBtb2RpZmllciBpcyBlbmFibGVkXG4gIGlmIChpc01vZGlmaWVyRW5hYmxlZCh0aGlzLm1vZGlmaWVycywgJ2FwcGx5U3R5bGUnKSkge1xuICAgIHRoaXMucG9wcGVyLnJlbW92ZUF0dHJpYnV0ZSgneC1wbGFjZW1lbnQnKTtcbiAgICB0aGlzLnBvcHBlci5zdHlsZS5wb3NpdGlvbiA9ICcnO1xuICAgIHRoaXMucG9wcGVyLnN0eWxlLnRvcCA9ICcnO1xuICAgIHRoaXMucG9wcGVyLnN0eWxlLmxlZnQgPSAnJztcbiAgICB0aGlzLnBvcHBlci5zdHlsZS5yaWdodCA9ICcnO1xuICAgIHRoaXMucG9wcGVyLnN0eWxlLmJvdHRvbSA9ICcnO1xuICAgIHRoaXMucG9wcGVyLnN0eWxlLndpbGxDaGFuZ2UgPSAnJztcbiAgICB0aGlzLnBvcHBlci5zdHlsZVtnZXRTdXBwb3J0ZWRQcm9wZXJ0eU5hbWUoJ3RyYW5zZm9ybScpXSA9ICcnO1xuICB9XG5cbiAgdGhpcy5kaXNhYmxlRXZlbnRMaXN0ZW5lcnMoKTtcblxuICAvLyByZW1vdmUgdGhlIHBvcHBlciBpZiB1c2VyIGV4cGxpY2l0bHkgYXNrZWQgZm9yIHRoZSBkZWxldGlvbiBvbiBkZXN0cm95XG4gIC8vIGRvIG5vdCB1c2UgYHJlbW92ZWAgYmVjYXVzZSBJRTExIGRvZXNuJ3Qgc3VwcG9ydCBpdFxuICBpZiAodGhpcy5vcHRpb25zLnJlbW92ZU9uRGVzdHJveSkge1xuICAgIHRoaXMucG9wcGVyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5wb3BwZXIpO1xuICB9XG4gIHJldHVybiB0aGlzO1xufVxuXG4vKipcbiAqIEdldCB0aGUgd2luZG93IGFzc29jaWF0ZWQgd2l0aCB0aGUgZWxlbWVudFxuICogQGFyZ3VtZW50IHtFbGVtZW50fSBlbGVtZW50XG4gKiBAcmV0dXJucyB7V2luZG93fVxuICovXG5mdW5jdGlvbiBnZXRXaW5kb3coZWxlbWVudCkge1xuICB2YXIgb3duZXJEb2N1bWVudCA9IGVsZW1lbnQub3duZXJEb2N1bWVudDtcbiAgcmV0dXJuIG93bmVyRG9jdW1lbnQgPyBvd25lckRvY3VtZW50LmRlZmF1bHRWaWV3IDogd2luZG93O1xufVxuXG5mdW5jdGlvbiBhdHRhY2hUb1Njcm9sbFBhcmVudHMoc2Nyb2xsUGFyZW50LCBldmVudCwgY2FsbGJhY2ssIHNjcm9sbFBhcmVudHMpIHtcbiAgdmFyIGlzQm9keSA9IHNjcm9sbFBhcmVudC5ub2RlTmFtZSA9PT0gJ0JPRFknO1xuICB2YXIgdGFyZ2V0ID0gaXNCb2R5ID8gc2Nyb2xsUGFyZW50Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcgOiBzY3JvbGxQYXJlbnQ7XG4gIHRhcmdldC5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBjYWxsYmFjaywgeyBwYXNzaXZlOiB0cnVlIH0pO1xuXG4gIGlmICghaXNCb2R5KSB7XG4gICAgYXR0YWNoVG9TY3JvbGxQYXJlbnRzKGdldFNjcm9sbFBhcmVudCh0YXJnZXQucGFyZW50Tm9kZSksIGV2ZW50LCBjYWxsYmFjaywgc2Nyb2xsUGFyZW50cyk7XG4gIH1cbiAgc2Nyb2xsUGFyZW50cy5wdXNoKHRhcmdldCk7XG59XG5cbi8qKlxuICogU2V0dXAgbmVlZGVkIGV2ZW50IGxpc3RlbmVycyB1c2VkIHRvIHVwZGF0ZSB0aGUgcG9wcGVyIHBvc2l0aW9uXG4gKiBAbWV0aG9kXG4gKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBzZXR1cEV2ZW50TGlzdGVuZXJzKHJlZmVyZW5jZSwgb3B0aW9ucywgc3RhdGUsIHVwZGF0ZUJvdW5kKSB7XG4gIC8vIFJlc2l6ZSBldmVudCBsaXN0ZW5lciBvbiB3aW5kb3dcbiAgc3RhdGUudXBkYXRlQm91bmQgPSB1cGRhdGVCb3VuZDtcbiAgZ2V0V2luZG93KHJlZmVyZW5jZSkuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgc3RhdGUudXBkYXRlQm91bmQsIHsgcGFzc2l2ZTogdHJ1ZSB9KTtcblxuICAvLyBTY3JvbGwgZXZlbnQgbGlzdGVuZXIgb24gc2Nyb2xsIHBhcmVudHNcbiAgdmFyIHNjcm9sbEVsZW1lbnQgPSBnZXRTY3JvbGxQYXJlbnQocmVmZXJlbmNlKTtcbiAgYXR0YWNoVG9TY3JvbGxQYXJlbnRzKHNjcm9sbEVsZW1lbnQsICdzY3JvbGwnLCBzdGF0ZS51cGRhdGVCb3VuZCwgc3RhdGUuc2Nyb2xsUGFyZW50cyk7XG4gIHN0YXRlLnNjcm9sbEVsZW1lbnQgPSBzY3JvbGxFbGVtZW50O1xuICBzdGF0ZS5ldmVudHNFbmFibGVkID0gdHJ1ZTtcblxuICByZXR1cm4gc3RhdGU7XG59XG5cbi8qKlxuICogSXQgd2lsbCBhZGQgcmVzaXplL3Njcm9sbCBldmVudHMgYW5kIHN0YXJ0IHJlY2FsY3VsYXRpbmdcbiAqIHBvc2l0aW9uIG9mIHRoZSBwb3BwZXIgZWxlbWVudCB3aGVuIHRoZXkgYXJlIHRyaWdnZXJlZC5cbiAqIEBtZXRob2RcbiAqIEBtZW1iZXJvZiBQb3BwZXJcbiAqL1xuZnVuY3Rpb24gZW5hYmxlRXZlbnRMaXN0ZW5lcnMoKSB7XG4gIGlmICghdGhpcy5zdGF0ZS5ldmVudHNFbmFibGVkKSB7XG4gICAgdGhpcy5zdGF0ZSA9IHNldHVwRXZlbnRMaXN0ZW5lcnModGhpcy5yZWZlcmVuY2UsIHRoaXMub3B0aW9ucywgdGhpcy5zdGF0ZSwgdGhpcy5zY2hlZHVsZVVwZGF0ZSk7XG4gIH1cbn1cblxuLyoqXG4gKiBSZW1vdmUgZXZlbnQgbGlzdGVuZXJzIHVzZWQgdG8gdXBkYXRlIHRoZSBwb3BwZXIgcG9zaXRpb25cbiAqIEBtZXRob2RcbiAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHJlbW92ZUV2ZW50TGlzdGVuZXJzKHJlZmVyZW5jZSwgc3RhdGUpIHtcbiAgLy8gUmVtb3ZlIHJlc2l6ZSBldmVudCBsaXN0ZW5lciBvbiB3aW5kb3dcbiAgZ2V0V2luZG93KHJlZmVyZW5jZSkucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgc3RhdGUudXBkYXRlQm91bmQpO1xuXG4gIC8vIFJlbW92ZSBzY3JvbGwgZXZlbnQgbGlzdGVuZXIgb24gc2Nyb2xsIHBhcmVudHNcbiAgc3RhdGUuc2Nyb2xsUGFyZW50cy5mb3JFYWNoKGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICB0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgc3RhdGUudXBkYXRlQm91bmQpO1xuICB9KTtcblxuICAvLyBSZXNldCBzdGF0ZVxuICBzdGF0ZS51cGRhdGVCb3VuZCA9IG51bGw7XG4gIHN0YXRlLnNjcm9sbFBhcmVudHMgPSBbXTtcbiAgc3RhdGUuc2Nyb2xsRWxlbWVudCA9IG51bGw7XG4gIHN0YXRlLmV2ZW50c0VuYWJsZWQgPSBmYWxzZTtcbiAgcmV0dXJuIHN0YXRlO1xufVxuXG4vKipcbiAqIEl0IHdpbGwgcmVtb3ZlIHJlc2l6ZS9zY3JvbGwgZXZlbnRzIGFuZCB3b24ndCByZWNhbGN1bGF0ZSBwb3BwZXIgcG9zaXRpb25cbiAqIHdoZW4gdGhleSBhcmUgdHJpZ2dlcmVkLiBJdCBhbHNvIHdvbid0IHRyaWdnZXIgYG9uVXBkYXRlYCBjYWxsYmFjayBhbnltb3JlLFxuICogdW5sZXNzIHlvdSBjYWxsIGB1cGRhdGVgIG1ldGhvZCBtYW51YWxseS5cbiAqIEBtZXRob2RcbiAqIEBtZW1iZXJvZiBQb3BwZXJcbiAqL1xuZnVuY3Rpb24gZGlzYWJsZUV2ZW50TGlzdGVuZXJzKCkge1xuICBpZiAodGhpcy5zdGF0ZS5ldmVudHNFbmFibGVkKSB7XG4gICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy5zY2hlZHVsZVVwZGF0ZSk7XG4gICAgdGhpcy5zdGF0ZSA9IHJlbW92ZUV2ZW50TGlzdGVuZXJzKHRoaXMucmVmZXJlbmNlLCB0aGlzLnN0YXRlKTtcbiAgfVxufVxuXG4vKipcbiAqIFRlbGxzIGlmIGEgZ2l2ZW4gaW5wdXQgaXMgYSBudW1iZXJcbiAqIEBtZXRob2RcbiAqIEBtZW1iZXJvZiBQb3BwZXIuVXRpbHNcbiAqIEBwYXJhbSB7Kn0gaW5wdXQgdG8gY2hlY2tcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKi9cbmZ1bmN0aW9uIGlzTnVtZXJpYyhuKSB7XG4gIHJldHVybiBuICE9PSAnJyAmJiAhaXNOYU4ocGFyc2VGbG9hdChuKSkgJiYgaXNGaW5pdGUobik7XG59XG5cbi8qKlxuICogU2V0IHRoZSBzdHlsZSB0byB0aGUgZ2l2ZW4gcG9wcGVyXG4gKiBAbWV0aG9kXG4gKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gKiBAYXJndW1lbnQge0VsZW1lbnR9IGVsZW1lbnQgLSBFbGVtZW50IHRvIGFwcGx5IHRoZSBzdHlsZSB0b1xuICogQGFyZ3VtZW50IHtPYmplY3R9IHN0eWxlc1xuICogT2JqZWN0IHdpdGggYSBsaXN0IG9mIHByb3BlcnRpZXMgYW5kIHZhbHVlcyB3aGljaCB3aWxsIGJlIGFwcGxpZWQgdG8gdGhlIGVsZW1lbnRcbiAqL1xuZnVuY3Rpb24gc2V0U3R5bGVzKGVsZW1lbnQsIHN0eWxlcykge1xuICBPYmplY3Qua2V5cyhzdHlsZXMpLmZvckVhY2goZnVuY3Rpb24gKHByb3ApIHtcbiAgICB2YXIgdW5pdCA9ICcnO1xuICAgIC8vIGFkZCB1bml0IGlmIHRoZSB2YWx1ZSBpcyBudW1lcmljIGFuZCBpcyBvbmUgb2YgdGhlIGZvbGxvd2luZ1xuICAgIGlmIChbJ3dpZHRoJywgJ2hlaWdodCcsICd0b3AnLCAncmlnaHQnLCAnYm90dG9tJywgJ2xlZnQnXS5pbmRleE9mKHByb3ApICE9PSAtMSAmJiBpc051bWVyaWMoc3R5bGVzW3Byb3BdKSkge1xuICAgICAgdW5pdCA9ICdweCc7XG4gICAgfVxuICAgIGVsZW1lbnQuc3R5bGVbcHJvcF0gPSBzdHlsZXNbcHJvcF0gKyB1bml0O1xuICB9KTtcbn1cblxuLyoqXG4gKiBTZXQgdGhlIGF0dHJpYnV0ZXMgdG8gdGhlIGdpdmVuIHBvcHBlclxuICogQG1ldGhvZFxuICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICogQGFyZ3VtZW50IHtFbGVtZW50fSBlbGVtZW50IC0gRWxlbWVudCB0byBhcHBseSB0aGUgYXR0cmlidXRlcyB0b1xuICogQGFyZ3VtZW50IHtPYmplY3R9IHN0eWxlc1xuICogT2JqZWN0IHdpdGggYSBsaXN0IG9mIHByb3BlcnRpZXMgYW5kIHZhbHVlcyB3aGljaCB3aWxsIGJlIGFwcGxpZWQgdG8gdGhlIGVsZW1lbnRcbiAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlcyhlbGVtZW50LCBhdHRyaWJ1dGVzKSB7XG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKHByb3ApIHtcbiAgICB2YXIgdmFsdWUgPSBhdHRyaWJ1dGVzW3Byb3BdO1xuICAgIGlmICh2YWx1ZSAhPT0gZmFsc2UpIHtcbiAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKHByb3AsIGF0dHJpYnV0ZXNbcHJvcF0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZShwcm9wKTtcbiAgICB9XG4gIH0pO1xufVxuXG4vKipcbiAqIEBmdW5jdGlvblxuICogQG1lbWJlcm9mIE1vZGlmaWVyc1xuICogQGFyZ3VtZW50IHtPYmplY3R9IGRhdGEgLSBUaGUgZGF0YSBvYmplY3QgZ2VuZXJhdGVkIGJ5IGB1cGRhdGVgIG1ldGhvZFxuICogQGFyZ3VtZW50IHtPYmplY3R9IGRhdGEuc3R5bGVzIC0gTGlzdCBvZiBzdHlsZSBwcm9wZXJ0aWVzIC0gdmFsdWVzIHRvIGFwcGx5IHRvIHBvcHBlciBlbGVtZW50XG4gKiBAYXJndW1lbnQge09iamVjdH0gZGF0YS5hdHRyaWJ1dGVzIC0gTGlzdCBvZiBhdHRyaWJ1dGUgcHJvcGVydGllcyAtIHZhbHVlcyB0byBhcHBseSB0byBwb3BwZXIgZWxlbWVudFxuICogQGFyZ3VtZW50IHtPYmplY3R9IG9wdGlvbnMgLSBNb2RpZmllcnMgY29uZmlndXJhdGlvbiBhbmQgb3B0aW9uc1xuICogQHJldHVybnMge09iamVjdH0gVGhlIHNhbWUgZGF0YSBvYmplY3RcbiAqL1xuZnVuY3Rpb24gYXBwbHlTdHlsZShkYXRhKSB7XG4gIC8vIGFueSBwcm9wZXJ0eSBwcmVzZW50IGluIGBkYXRhLnN0eWxlc2Agd2lsbCBiZSBhcHBsaWVkIHRvIHRoZSBwb3BwZXIsXG4gIC8vIGluIHRoaXMgd2F5IHdlIGNhbiBtYWtlIHRoZSAzcmQgcGFydHkgbW9kaWZpZXJzIGFkZCBjdXN0b20gc3R5bGVzIHRvIGl0XG4gIC8vIEJlIGF3YXJlLCBtb2RpZmllcnMgY291bGQgb3ZlcnJpZGUgdGhlIHByb3BlcnRpZXMgZGVmaW5lZCBpbiB0aGUgcHJldmlvdXNcbiAgLy8gbGluZXMgb2YgdGhpcyBtb2RpZmllciFcbiAgc2V0U3R5bGVzKGRhdGEuaW5zdGFuY2UucG9wcGVyLCBkYXRhLnN0eWxlcyk7XG5cbiAgLy8gYW55IHByb3BlcnR5IHByZXNlbnQgaW4gYGRhdGEuYXR0cmlidXRlc2Agd2lsbCBiZSBhcHBsaWVkIHRvIHRoZSBwb3BwZXIsXG4gIC8vIHRoZXkgd2lsbCBiZSBzZXQgYXMgSFRNTCBhdHRyaWJ1dGVzIG9mIHRoZSBlbGVtZW50XG4gIHNldEF0dHJpYnV0ZXMoZGF0YS5pbnN0YW5jZS5wb3BwZXIsIGRhdGEuYXR0cmlidXRlcyk7XG5cbiAgLy8gaWYgYXJyb3dFbGVtZW50IGlzIGRlZmluZWQgYW5kIGFycm93U3R5bGVzIGhhcyBzb21lIHByb3BlcnRpZXNcbiAgaWYgKGRhdGEuYXJyb3dFbGVtZW50ICYmIE9iamVjdC5rZXlzKGRhdGEuYXJyb3dTdHlsZXMpLmxlbmd0aCkge1xuICAgIHNldFN0eWxlcyhkYXRhLmFycm93RWxlbWVudCwgZGF0YS5hcnJvd1N0eWxlcyk7XG4gIH1cblxuICByZXR1cm4gZGF0YTtcbn1cblxuLyoqXG4gKiBTZXQgdGhlIHgtcGxhY2VtZW50IGF0dHJpYnV0ZSBiZWZvcmUgZXZlcnl0aGluZyBlbHNlIGJlY2F1c2UgaXQgY291bGQgYmUgdXNlZFxuICogdG8gYWRkIG1hcmdpbnMgdG8gdGhlIHBvcHBlciBtYXJnaW5zIG5lZWRzIHRvIGJlIGNhbGN1bGF0ZWQgdG8gZ2V0IHRoZVxuICogY29ycmVjdCBwb3BwZXIgb2Zmc2V0cy5cbiAqIEBtZXRob2RcbiAqIEBtZW1iZXJvZiBQb3BwZXIubW9kaWZpZXJzXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSByZWZlcmVuY2UgLSBUaGUgcmVmZXJlbmNlIGVsZW1lbnQgdXNlZCB0byBwb3NpdGlvbiB0aGUgcG9wcGVyXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBwb3BwZXIgLSBUaGUgSFRNTCBlbGVtZW50IHVzZWQgYXMgcG9wcGVyXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyAtIFBvcHBlci5qcyBvcHRpb25zXG4gKi9cbmZ1bmN0aW9uIGFwcGx5U3R5bGVPbkxvYWQocmVmZXJlbmNlLCBwb3BwZXIsIG9wdGlvbnMsIG1vZGlmaWVyT3B0aW9ucywgc3RhdGUpIHtcbiAgLy8gY29tcHV0ZSByZWZlcmVuY2UgZWxlbWVudCBvZmZzZXRzXG4gIHZhciByZWZlcmVuY2VPZmZzZXRzID0gZ2V0UmVmZXJlbmNlT2Zmc2V0cyhzdGF0ZSwgcG9wcGVyLCByZWZlcmVuY2UsIG9wdGlvbnMucG9zaXRpb25GaXhlZCk7XG5cbiAgLy8gY29tcHV0ZSBhdXRvIHBsYWNlbWVudCwgc3RvcmUgcGxhY2VtZW50IGluc2lkZSB0aGUgZGF0YSBvYmplY3QsXG4gIC8vIG1vZGlmaWVycyB3aWxsIGJlIGFibGUgdG8gZWRpdCBgcGxhY2VtZW50YCBpZiBuZWVkZWRcbiAgLy8gYW5kIHJlZmVyIHRvIG9yaWdpbmFsUGxhY2VtZW50IHRvIGtub3cgdGhlIG9yaWdpbmFsIHZhbHVlXG4gIHZhciBwbGFjZW1lbnQgPSBjb21wdXRlQXV0b1BsYWNlbWVudChvcHRpb25zLnBsYWNlbWVudCwgcmVmZXJlbmNlT2Zmc2V0cywgcG9wcGVyLCByZWZlcmVuY2UsIG9wdGlvbnMubW9kaWZpZXJzLmZsaXAuYm91bmRhcmllc0VsZW1lbnQsIG9wdGlvbnMubW9kaWZpZXJzLmZsaXAucGFkZGluZyk7XG5cbiAgcG9wcGVyLnNldEF0dHJpYnV0ZSgneC1wbGFjZW1lbnQnLCBwbGFjZW1lbnQpO1xuXG4gIC8vIEFwcGx5IGBwb3NpdGlvbmAgdG8gcG9wcGVyIGJlZm9yZSBhbnl0aGluZyBlbHNlIGJlY2F1c2VcbiAgLy8gd2l0aG91dCB0aGUgcG9zaXRpb24gYXBwbGllZCB3ZSBjYW4ndCBndWFyYW50ZWUgY29ycmVjdCBjb21wdXRhdGlvbnNcbiAgc2V0U3R5bGVzKHBvcHBlciwgeyBwb3NpdGlvbjogb3B0aW9ucy5wb3NpdGlvbkZpeGVkID8gJ2ZpeGVkJyA6ICdhYnNvbHV0ZScgfSk7XG5cbiAgcmV0dXJuIG9wdGlvbnM7XG59XG5cbi8qKlxuICogQGZ1bmN0aW9uXG4gKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gKiBAYXJndW1lbnQge09iamVjdH0gZGF0YSAtIFRoZSBkYXRhIG9iamVjdCBnZW5lcmF0ZWQgYnkgYHVwZGF0ZWAgbWV0aG9kXG4gKiBAYXJndW1lbnQge0Jvb2xlYW59IHNob3VsZFJvdW5kIC0gSWYgdGhlIG9mZnNldHMgc2hvdWxkIGJlIHJvdW5kZWQgYXQgYWxsXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBUaGUgcG9wcGVyJ3MgcG9zaXRpb24gb2Zmc2V0cyByb3VuZGVkXG4gKlxuICogVGhlIHRhbGUgb2YgcGl4ZWwtcGVyZmVjdCBwb3NpdGlvbmluZy4gSXQncyBzdGlsbCBub3QgMTAwJSBwZXJmZWN0LCBidXQgYXNcbiAqIGdvb2QgYXMgaXQgY2FuIGJlIHdpdGhpbiByZWFzb24uXG4gKiBEaXNjdXNzaW9uIGhlcmU6IGh0dHBzOi8vZ2l0aHViLmNvbS9GZXpWcmFzdGEvcG9wcGVyLmpzL3B1bGwvNzE1XG4gKlxuICogTG93IERQSSBzY3JlZW5zIGNhdXNlIGEgcG9wcGVyIHRvIGJlIGJsdXJyeSBpZiBub3QgdXNpbmcgZnVsbCBwaXhlbHMgKFNhZmFyaVxuICogYXMgd2VsbCBvbiBIaWdoIERQSSBzY3JlZW5zKS5cbiAqXG4gKiBGaXJlZm94IHByZWZlcnMgbm8gcm91bmRpbmcgZm9yIHBvc2l0aW9uaW5nIGFuZCBkb2VzIG5vdCBoYXZlIGJsdXJyaW5lc3Mgb25cbiAqIGhpZ2ggRFBJIHNjcmVlbnMuXG4gKlxuICogT25seSBob3Jpem9udGFsIHBsYWNlbWVudCBhbmQgbGVmdC9yaWdodCB2YWx1ZXMgbmVlZCB0byBiZSBjb25zaWRlcmVkLlxuICovXG5mdW5jdGlvbiBnZXRSb3VuZGVkT2Zmc2V0cyhkYXRhLCBzaG91bGRSb3VuZCkge1xuICB2YXIgX2RhdGEkb2Zmc2V0cyA9IGRhdGEub2Zmc2V0cyxcbiAgICAgIHBvcHBlciA9IF9kYXRhJG9mZnNldHMucG9wcGVyLFxuICAgICAgcmVmZXJlbmNlID0gX2RhdGEkb2Zmc2V0cy5yZWZlcmVuY2U7XG4gIHZhciByb3VuZCA9IE1hdGgucm91bmQsXG4gICAgICBmbG9vciA9IE1hdGguZmxvb3I7XG5cbiAgdmFyIG5vUm91bmQgPSBmdW5jdGlvbiBub1JvdW5kKHYpIHtcbiAgICByZXR1cm4gdjtcbiAgfTtcblxuICB2YXIgcmVmZXJlbmNlV2lkdGggPSByb3VuZChyZWZlcmVuY2Uud2lkdGgpO1xuICB2YXIgcG9wcGVyV2lkdGggPSByb3VuZChwb3BwZXIud2lkdGgpO1xuXG4gIHZhciBpc1ZlcnRpY2FsID0gWydsZWZ0JywgJ3JpZ2h0J10uaW5kZXhPZihkYXRhLnBsYWNlbWVudCkgIT09IC0xO1xuICB2YXIgaXNWYXJpYXRpb24gPSBkYXRhLnBsYWNlbWVudC5pbmRleE9mKCctJykgIT09IC0xO1xuICB2YXIgc2FtZVdpZHRoUGFyaXR5ID0gcmVmZXJlbmNlV2lkdGggJSAyID09PSBwb3BwZXJXaWR0aCAlIDI7XG4gIHZhciBib3RoT2RkV2lkdGggPSByZWZlcmVuY2VXaWR0aCAlIDIgPT09IDEgJiYgcG9wcGVyV2lkdGggJSAyID09PSAxO1xuXG4gIHZhciBob3Jpem9udGFsVG9JbnRlZ2VyID0gIXNob3VsZFJvdW5kID8gbm9Sb3VuZCA6IGlzVmVydGljYWwgfHwgaXNWYXJpYXRpb24gfHwgc2FtZVdpZHRoUGFyaXR5ID8gcm91bmQgOiBmbG9vcjtcbiAgdmFyIHZlcnRpY2FsVG9JbnRlZ2VyID0gIXNob3VsZFJvdW5kID8gbm9Sb3VuZCA6IHJvdW5kO1xuXG4gIHJldHVybiB7XG4gICAgbGVmdDogaG9yaXpvbnRhbFRvSW50ZWdlcihib3RoT2RkV2lkdGggJiYgIWlzVmFyaWF0aW9uICYmIHNob3VsZFJvdW5kID8gcG9wcGVyLmxlZnQgLSAxIDogcG9wcGVyLmxlZnQpLFxuICAgIHRvcDogdmVydGljYWxUb0ludGVnZXIocG9wcGVyLnRvcCksXG4gICAgYm90dG9tOiB2ZXJ0aWNhbFRvSW50ZWdlcihwb3BwZXIuYm90dG9tKSxcbiAgICByaWdodDogaG9yaXpvbnRhbFRvSW50ZWdlcihwb3BwZXIucmlnaHQpXG4gIH07XG59XG5cbnZhciBpc0ZpcmVmb3ggPSBpc0Jyb3dzZXIgJiYgL0ZpcmVmb3gvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuXG4vKipcbiAqIEBmdW5jdGlvblxuICogQG1lbWJlcm9mIE1vZGlmaWVyc1xuICogQGFyZ3VtZW50IHtPYmplY3R9IGRhdGEgLSBUaGUgZGF0YSBvYmplY3QgZ2VuZXJhdGVkIGJ5IGB1cGRhdGVgIG1ldGhvZFxuICogQGFyZ3VtZW50IHtPYmplY3R9IG9wdGlvbnMgLSBNb2RpZmllcnMgY29uZmlndXJhdGlvbiBhbmQgb3B0aW9uc1xuICogQHJldHVybnMge09iamVjdH0gVGhlIGRhdGEgb2JqZWN0LCBwcm9wZXJseSBtb2RpZmllZFxuICovXG5mdW5jdGlvbiBjb21wdXRlU3R5bGUoZGF0YSwgb3B0aW9ucykge1xuICB2YXIgeCA9IG9wdGlvbnMueCxcbiAgICAgIHkgPSBvcHRpb25zLnk7XG4gIHZhciBwb3BwZXIgPSBkYXRhLm9mZnNldHMucG9wcGVyO1xuXG4gIC8vIFJlbW92ZSB0aGlzIGxlZ2FjeSBzdXBwb3J0IGluIFBvcHBlci5qcyB2MlxuXG4gIHZhciBsZWdhY3lHcHVBY2NlbGVyYXRpb25PcHRpb24gPSBmaW5kKGRhdGEuaW5zdGFuY2UubW9kaWZpZXJzLCBmdW5jdGlvbiAobW9kaWZpZXIpIHtcbiAgICByZXR1cm4gbW9kaWZpZXIubmFtZSA9PT0gJ2FwcGx5U3R5bGUnO1xuICB9KS5ncHVBY2NlbGVyYXRpb247XG4gIGlmIChsZWdhY3lHcHVBY2NlbGVyYXRpb25PcHRpb24gIT09IHVuZGVmaW5lZCkge1xuICAgIGNvbnNvbGUud2FybignV0FSTklORzogYGdwdUFjY2VsZXJhdGlvbmAgb3B0aW9uIG1vdmVkIHRvIGBjb21wdXRlU3R5bGVgIG1vZGlmaWVyIGFuZCB3aWxsIG5vdCBiZSBzdXBwb3J0ZWQgaW4gZnV0dXJlIHZlcnNpb25zIG9mIFBvcHBlci5qcyEnKTtcbiAgfVxuICB2YXIgZ3B1QWNjZWxlcmF0aW9uID0gbGVnYWN5R3B1QWNjZWxlcmF0aW9uT3B0aW9uICE9PSB1bmRlZmluZWQgPyBsZWdhY3lHcHVBY2NlbGVyYXRpb25PcHRpb24gOiBvcHRpb25zLmdwdUFjY2VsZXJhdGlvbjtcblxuICB2YXIgb2Zmc2V0UGFyZW50ID0gZ2V0T2Zmc2V0UGFyZW50KGRhdGEuaW5zdGFuY2UucG9wcGVyKTtcbiAgdmFyIG9mZnNldFBhcmVudFJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3Qob2Zmc2V0UGFyZW50KTtcblxuICAvLyBTdHlsZXNcbiAgdmFyIHN0eWxlcyA9IHtcbiAgICBwb3NpdGlvbjogcG9wcGVyLnBvc2l0aW9uXG4gIH07XG5cbiAgdmFyIG9mZnNldHMgPSBnZXRSb3VuZGVkT2Zmc2V0cyhkYXRhLCB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyA8IDIgfHwgIWlzRmlyZWZveCk7XG5cbiAgdmFyIHNpZGVBID0geCA9PT0gJ2JvdHRvbScgPyAndG9wJyA6ICdib3R0b20nO1xuICB2YXIgc2lkZUIgPSB5ID09PSAncmlnaHQnID8gJ2xlZnQnIDogJ3JpZ2h0JztcblxuICAvLyBpZiBncHVBY2NlbGVyYXRpb24gaXMgc2V0IHRvIGB0cnVlYCBhbmQgdHJhbnNmb3JtIGlzIHN1cHBvcnRlZCxcbiAgLy8gIHdlIHVzZSBgdHJhbnNsYXRlM2RgIHRvIGFwcGx5IHRoZSBwb3NpdGlvbiB0byB0aGUgcG9wcGVyIHdlXG4gIC8vIGF1dG9tYXRpY2FsbHkgdXNlIHRoZSBzdXBwb3J0ZWQgcHJlZml4ZWQgdmVyc2lvbiBpZiBuZWVkZWRcbiAgdmFyIHByZWZpeGVkUHJvcGVydHkgPSBnZXRTdXBwb3J0ZWRQcm9wZXJ0eU5hbWUoJ3RyYW5zZm9ybScpO1xuXG4gIC8vIG5vdywgbGV0J3MgbWFrZSBhIHN0ZXAgYmFjayBhbmQgbG9vayBhdCB0aGlzIGNvZGUgY2xvc2VseSAod3RmPylcbiAgLy8gSWYgdGhlIGNvbnRlbnQgb2YgdGhlIHBvcHBlciBncm93cyBvbmNlIGl0J3MgYmVlbiBwb3NpdGlvbmVkLCBpdFxuICAvLyBtYXkgaGFwcGVuIHRoYXQgdGhlIHBvcHBlciBnZXRzIG1pc3BsYWNlZCBiZWNhdXNlIG9mIHRoZSBuZXcgY29udGVudFxuICAvLyBvdmVyZmxvd2luZyBpdHMgcmVmZXJlbmNlIGVsZW1lbnRcbiAgLy8gVG8gYXZvaWQgdGhpcyBwcm9ibGVtLCB3ZSBwcm92aWRlIHR3byBvcHRpb25zICh4IGFuZCB5KSwgd2hpY2ggYWxsb3dcbiAgLy8gdGhlIGNvbnN1bWVyIHRvIGRlZmluZSB0aGUgb2Zmc2V0IG9yaWdpbi5cbiAgLy8gSWYgd2UgcG9zaXRpb24gYSBwb3BwZXIgb24gdG9wIG9mIGEgcmVmZXJlbmNlIGVsZW1lbnQsIHdlIGNhbiBzZXRcbiAgLy8gYHhgIHRvIGB0b3BgIHRvIG1ha2UgdGhlIHBvcHBlciBncm93IHRvd2FyZHMgaXRzIHRvcCBpbnN0ZWFkIG9mXG4gIC8vIGl0cyBib3R0b20uXG4gIHZhciBsZWZ0ID0gdm9pZCAwLFxuICAgICAgdG9wID0gdm9pZCAwO1xuICBpZiAoc2lkZUEgPT09ICdib3R0b20nKSB7XG4gICAgLy8gd2hlbiBvZmZzZXRQYXJlbnQgaXMgPGh0bWw+IHRoZSBwb3NpdGlvbmluZyBpcyByZWxhdGl2ZSB0byB0aGUgYm90dG9tIG9mIHRoZSBzY3JlZW4gKGV4Y2x1ZGluZyB0aGUgc2Nyb2xsYmFyKVxuICAgIC8vIGFuZCBub3QgdGhlIGJvdHRvbSBvZiB0aGUgaHRtbCBlbGVtZW50XG4gICAgaWYgKG9mZnNldFBhcmVudC5ub2RlTmFtZSA9PT0gJ0hUTUwnKSB7XG4gICAgICB0b3AgPSAtb2Zmc2V0UGFyZW50LmNsaWVudEhlaWdodCArIG9mZnNldHMuYm90dG9tO1xuICAgIH0gZWxzZSB7XG4gICAgICB0b3AgPSAtb2Zmc2V0UGFyZW50UmVjdC5oZWlnaHQgKyBvZmZzZXRzLmJvdHRvbTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdG9wID0gb2Zmc2V0cy50b3A7XG4gIH1cbiAgaWYgKHNpZGVCID09PSAncmlnaHQnKSB7XG4gICAgaWYgKG9mZnNldFBhcmVudC5ub2RlTmFtZSA9PT0gJ0hUTUwnKSB7XG4gICAgICBsZWZ0ID0gLW9mZnNldFBhcmVudC5jbGllbnRXaWR0aCArIG9mZnNldHMucmlnaHQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxlZnQgPSAtb2Zmc2V0UGFyZW50UmVjdC53aWR0aCArIG9mZnNldHMucmlnaHQ7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGxlZnQgPSBvZmZzZXRzLmxlZnQ7XG4gIH1cbiAgaWYgKGdwdUFjY2VsZXJhdGlvbiAmJiBwcmVmaXhlZFByb3BlcnR5KSB7XG4gICAgc3R5bGVzW3ByZWZpeGVkUHJvcGVydHldID0gJ3RyYW5zbGF0ZTNkKCcgKyBsZWZ0ICsgJ3B4LCAnICsgdG9wICsgJ3B4LCAwKSc7XG4gICAgc3R5bGVzW3NpZGVBXSA9IDA7XG4gICAgc3R5bGVzW3NpZGVCXSA9IDA7XG4gICAgc3R5bGVzLndpbGxDaGFuZ2UgPSAndHJhbnNmb3JtJztcbiAgfSBlbHNlIHtcbiAgICAvLyBvdGh3ZXJpc2UsIHdlIHVzZSB0aGUgc3RhbmRhcmQgYHRvcGAsIGBsZWZ0YCwgYGJvdHRvbWAgYW5kIGByaWdodGAgcHJvcGVydGllc1xuICAgIHZhciBpbnZlcnRUb3AgPSBzaWRlQSA9PT0gJ2JvdHRvbScgPyAtMSA6IDE7XG4gICAgdmFyIGludmVydExlZnQgPSBzaWRlQiA9PT0gJ3JpZ2h0JyA/IC0xIDogMTtcbiAgICBzdHlsZXNbc2lkZUFdID0gdG9wICogaW52ZXJ0VG9wO1xuICAgIHN0eWxlc1tzaWRlQl0gPSBsZWZ0ICogaW52ZXJ0TGVmdDtcbiAgICBzdHlsZXMud2lsbENoYW5nZSA9IHNpZGVBICsgJywgJyArIHNpZGVCO1xuICB9XG5cbiAgLy8gQXR0cmlidXRlc1xuICB2YXIgYXR0cmlidXRlcyA9IHtcbiAgICAneC1wbGFjZW1lbnQnOiBkYXRhLnBsYWNlbWVudFxuICB9O1xuXG4gIC8vIFVwZGF0ZSBgZGF0YWAgYXR0cmlidXRlcywgc3R5bGVzIGFuZCBhcnJvd1N0eWxlc1xuICBkYXRhLmF0dHJpYnV0ZXMgPSBfZXh0ZW5kcyh7fSwgYXR0cmlidXRlcywgZGF0YS5hdHRyaWJ1dGVzKTtcbiAgZGF0YS5zdHlsZXMgPSBfZXh0ZW5kcyh7fSwgc3R5bGVzLCBkYXRhLnN0eWxlcyk7XG4gIGRhdGEuYXJyb3dTdHlsZXMgPSBfZXh0ZW5kcyh7fSwgZGF0YS5vZmZzZXRzLmFycm93LCBkYXRhLmFycm93U3R5bGVzKTtcblxuICByZXR1cm4gZGF0YTtcbn1cblxuLyoqXG4gKiBIZWxwZXIgdXNlZCB0byBrbm93IGlmIHRoZSBnaXZlbiBtb2RpZmllciBkZXBlbmRzIGZyb20gYW5vdGhlciBvbmUuPGJyIC8+XG4gKiBJdCBjaGVja3MgaWYgdGhlIG5lZWRlZCBtb2RpZmllciBpcyBsaXN0ZWQgYW5kIGVuYWJsZWQuXG4gKiBAbWV0aG9kXG4gKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gKiBAcGFyYW0ge0FycmF5fSBtb2RpZmllcnMgLSBsaXN0IG9mIG1vZGlmaWVyc1xuICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3RpbmdOYW1lIC0gbmFtZSBvZiByZXF1ZXN0aW5nIG1vZGlmaWVyXG4gKiBAcGFyYW0ge1N0cmluZ30gcmVxdWVzdGVkTmFtZSAtIG5hbWUgb2YgcmVxdWVzdGVkIG1vZGlmaWVyXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn1cbiAqL1xuZnVuY3Rpb24gaXNNb2RpZmllclJlcXVpcmVkKG1vZGlmaWVycywgcmVxdWVzdGluZ05hbWUsIHJlcXVlc3RlZE5hbWUpIHtcbiAgdmFyIHJlcXVlc3RpbmcgPSBmaW5kKG1vZGlmaWVycywgZnVuY3Rpb24gKF9yZWYpIHtcbiAgICB2YXIgbmFtZSA9IF9yZWYubmFtZTtcbiAgICByZXR1cm4gbmFtZSA9PT0gcmVxdWVzdGluZ05hbWU7XG4gIH0pO1xuXG4gIHZhciBpc1JlcXVpcmVkID0gISFyZXF1ZXN0aW5nICYmIG1vZGlmaWVycy5zb21lKGZ1bmN0aW9uIChtb2RpZmllcikge1xuICAgIHJldHVybiBtb2RpZmllci5uYW1lID09PSByZXF1ZXN0ZWROYW1lICYmIG1vZGlmaWVyLmVuYWJsZWQgJiYgbW9kaWZpZXIub3JkZXIgPCByZXF1ZXN0aW5nLm9yZGVyO1xuICB9KTtcblxuICBpZiAoIWlzUmVxdWlyZWQpIHtcbiAgICB2YXIgX3JlcXVlc3RpbmcgPSAnYCcgKyByZXF1ZXN0aW5nTmFtZSArICdgJztcbiAgICB2YXIgcmVxdWVzdGVkID0gJ2AnICsgcmVxdWVzdGVkTmFtZSArICdgJztcbiAgICBjb25zb2xlLndhcm4ocmVxdWVzdGVkICsgJyBtb2RpZmllciBpcyByZXF1aXJlZCBieSAnICsgX3JlcXVlc3RpbmcgKyAnIG1vZGlmaWVyIGluIG9yZGVyIHRvIHdvcmssIGJlIHN1cmUgdG8gaW5jbHVkZSBpdCBiZWZvcmUgJyArIF9yZXF1ZXN0aW5nICsgJyEnKTtcbiAgfVxuICByZXR1cm4gaXNSZXF1aXJlZDtcbn1cblxuLyoqXG4gKiBAZnVuY3Rpb25cbiAqIEBtZW1iZXJvZiBNb2RpZmllcnNcbiAqIEBhcmd1bWVudCB7T2JqZWN0fSBkYXRhIC0gVGhlIGRhdGEgb2JqZWN0IGdlbmVyYXRlZCBieSB1cGRhdGUgbWV0aG9kXG4gKiBAYXJndW1lbnQge09iamVjdH0gb3B0aW9ucyAtIE1vZGlmaWVycyBjb25maWd1cmF0aW9uIGFuZCBvcHRpb25zXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBUaGUgZGF0YSBvYmplY3QsIHByb3Blcmx5IG1vZGlmaWVkXG4gKi9cbmZ1bmN0aW9uIGFycm93KGRhdGEsIG9wdGlvbnMpIHtcbiAgdmFyIF9kYXRhJG9mZnNldHMkYXJyb3c7XG5cbiAgLy8gYXJyb3cgZGVwZW5kcyBvbiBrZWVwVG9nZXRoZXIgaW4gb3JkZXIgdG8gd29ya1xuICBpZiAoIWlzTW9kaWZpZXJSZXF1aXJlZChkYXRhLmluc3RhbmNlLm1vZGlmaWVycywgJ2Fycm93JywgJ2tlZXBUb2dldGhlcicpKSB7XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cblxuICB2YXIgYXJyb3dFbGVtZW50ID0gb3B0aW9ucy5lbGVtZW50O1xuXG4gIC8vIGlmIGFycm93RWxlbWVudCBpcyBhIHN0cmluZywgc3VwcG9zZSBpdCdzIGEgQ1NTIHNlbGVjdG9yXG4gIGlmICh0eXBlb2YgYXJyb3dFbGVtZW50ID09PSAnc3RyaW5nJykge1xuICAgIGFycm93RWxlbWVudCA9IGRhdGEuaW5zdGFuY2UucG9wcGVyLnF1ZXJ5U2VsZWN0b3IoYXJyb3dFbGVtZW50KTtcblxuICAgIC8vIGlmIGFycm93RWxlbWVudCBpcyBub3QgZm91bmQsIGRvbid0IHJ1biB0aGUgbW9kaWZpZXJcbiAgICBpZiAoIWFycm93RWxlbWVudCkge1xuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIGlmIHRoZSBhcnJvd0VsZW1lbnQgaXNuJ3QgYSBxdWVyeSBzZWxlY3RvciB3ZSBtdXN0IGNoZWNrIHRoYXQgdGhlXG4gICAgLy8gcHJvdmlkZWQgRE9NIG5vZGUgaXMgY2hpbGQgb2YgaXRzIHBvcHBlciBub2RlXG4gICAgaWYgKCFkYXRhLmluc3RhbmNlLnBvcHBlci5jb250YWlucyhhcnJvd0VsZW1lbnQpKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ1dBUk5JTkc6IGBhcnJvdy5lbGVtZW50YCBtdXN0IGJlIGNoaWxkIG9mIGl0cyBwb3BwZXIgZWxlbWVudCEnKTtcbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH1cbiAgfVxuXG4gIHZhciBwbGFjZW1lbnQgPSBkYXRhLnBsYWNlbWVudC5zcGxpdCgnLScpWzBdO1xuICB2YXIgX2RhdGEkb2Zmc2V0cyA9IGRhdGEub2Zmc2V0cyxcbiAgICAgIHBvcHBlciA9IF9kYXRhJG9mZnNldHMucG9wcGVyLFxuICAgICAgcmVmZXJlbmNlID0gX2RhdGEkb2Zmc2V0cy5yZWZlcmVuY2U7XG5cbiAgdmFyIGlzVmVydGljYWwgPSBbJ2xlZnQnLCAncmlnaHQnXS5pbmRleE9mKHBsYWNlbWVudCkgIT09IC0xO1xuXG4gIHZhciBsZW4gPSBpc1ZlcnRpY2FsID8gJ2hlaWdodCcgOiAnd2lkdGgnO1xuICB2YXIgc2lkZUNhcGl0YWxpemVkID0gaXNWZXJ0aWNhbCA/ICdUb3AnIDogJ0xlZnQnO1xuICB2YXIgc2lkZSA9IHNpZGVDYXBpdGFsaXplZC50b0xvd2VyQ2FzZSgpO1xuICB2YXIgYWx0U2lkZSA9IGlzVmVydGljYWwgPyAnbGVmdCcgOiAndG9wJztcbiAgdmFyIG9wU2lkZSA9IGlzVmVydGljYWwgPyAnYm90dG9tJyA6ICdyaWdodCc7XG4gIHZhciBhcnJvd0VsZW1lbnRTaXplID0gZ2V0T3V0ZXJTaXplcyhhcnJvd0VsZW1lbnQpW2xlbl07XG5cbiAgLy9cbiAgLy8gZXh0ZW5kcyBrZWVwVG9nZXRoZXIgYmVoYXZpb3IgbWFraW5nIHN1cmUgdGhlIHBvcHBlciBhbmQgaXRzXG4gIC8vIHJlZmVyZW5jZSBoYXZlIGVub3VnaCBwaXhlbHMgaW4gY29uanVuY3Rpb25cbiAgLy9cblxuICAvLyB0b3AvbGVmdCBzaWRlXG4gIGlmIChyZWZlcmVuY2Vbb3BTaWRlXSAtIGFycm93RWxlbWVudFNpemUgPCBwb3BwZXJbc2lkZV0pIHtcbiAgICBkYXRhLm9mZnNldHMucG9wcGVyW3NpZGVdIC09IHBvcHBlcltzaWRlXSAtIChyZWZlcmVuY2Vbb3BTaWRlXSAtIGFycm93RWxlbWVudFNpemUpO1xuICB9XG4gIC8vIGJvdHRvbS9yaWdodCBzaWRlXG4gIGlmIChyZWZlcmVuY2Vbc2lkZV0gKyBhcnJvd0VsZW1lbnRTaXplID4gcG9wcGVyW29wU2lkZV0pIHtcbiAgICBkYXRhLm9mZnNldHMucG9wcGVyW3NpZGVdICs9IHJlZmVyZW5jZVtzaWRlXSArIGFycm93RWxlbWVudFNpemUgLSBwb3BwZXJbb3BTaWRlXTtcbiAgfVxuICBkYXRhLm9mZnNldHMucG9wcGVyID0gZ2V0Q2xpZW50UmVjdChkYXRhLm9mZnNldHMucG9wcGVyKTtcblxuICAvLyBjb21wdXRlIGNlbnRlciBvZiB0aGUgcG9wcGVyXG4gIHZhciBjZW50ZXIgPSByZWZlcmVuY2Vbc2lkZV0gKyByZWZlcmVuY2VbbGVuXSAvIDIgLSBhcnJvd0VsZW1lbnRTaXplIC8gMjtcblxuICAvLyBDb21wdXRlIHRoZSBzaWRlVmFsdWUgdXNpbmcgdGhlIHVwZGF0ZWQgcG9wcGVyIG9mZnNldHNcbiAgLy8gdGFrZSBwb3BwZXIgbWFyZ2luIGluIGFjY291bnQgYmVjYXVzZSB3ZSBkb24ndCBoYXZlIHRoaXMgaW5mbyBhdmFpbGFibGVcbiAgdmFyIGNzcyA9IGdldFN0eWxlQ29tcHV0ZWRQcm9wZXJ0eShkYXRhLmluc3RhbmNlLnBvcHBlcik7XG4gIHZhciBwb3BwZXJNYXJnaW5TaWRlID0gcGFyc2VGbG9hdChjc3NbJ21hcmdpbicgKyBzaWRlQ2FwaXRhbGl6ZWRdKTtcbiAgdmFyIHBvcHBlckJvcmRlclNpZGUgPSBwYXJzZUZsb2F0KGNzc1snYm9yZGVyJyArIHNpZGVDYXBpdGFsaXplZCArICdXaWR0aCddKTtcbiAgdmFyIHNpZGVWYWx1ZSA9IGNlbnRlciAtIGRhdGEub2Zmc2V0cy5wb3BwZXJbc2lkZV0gLSBwb3BwZXJNYXJnaW5TaWRlIC0gcG9wcGVyQm9yZGVyU2lkZTtcblxuICAvLyBwcmV2ZW50IGFycm93RWxlbWVudCBmcm9tIGJlaW5nIHBsYWNlZCBub3QgY29udGlndW91c2x5IHRvIGl0cyBwb3BwZXJcbiAgc2lkZVZhbHVlID0gTWF0aC5tYXgoTWF0aC5taW4ocG9wcGVyW2xlbl0gLSBhcnJvd0VsZW1lbnRTaXplLCBzaWRlVmFsdWUpLCAwKTtcblxuICBkYXRhLmFycm93RWxlbWVudCA9IGFycm93RWxlbWVudDtcbiAgZGF0YS5vZmZzZXRzLmFycm93ID0gKF9kYXRhJG9mZnNldHMkYXJyb3cgPSB7fSwgZGVmaW5lUHJvcGVydHkoX2RhdGEkb2Zmc2V0cyRhcnJvdywgc2lkZSwgTWF0aC5yb3VuZChzaWRlVmFsdWUpKSwgZGVmaW5lUHJvcGVydHkoX2RhdGEkb2Zmc2V0cyRhcnJvdywgYWx0U2lkZSwgJycpLCBfZGF0YSRvZmZzZXRzJGFycm93KTtcblxuICByZXR1cm4gZGF0YTtcbn1cblxuLyoqXG4gKiBHZXQgdGhlIG9wcG9zaXRlIHBsYWNlbWVudCB2YXJpYXRpb24gb2YgdGhlIGdpdmVuIG9uZVxuICogQG1ldGhvZFxuICogQG1lbWJlcm9mIFBvcHBlci5VdGlsc1xuICogQGFyZ3VtZW50IHtTdHJpbmd9IHBsYWNlbWVudCB2YXJpYXRpb25cbiAqIEByZXR1cm5zIHtTdHJpbmd9IGZsaXBwZWQgcGxhY2VtZW50IHZhcmlhdGlvblxuICovXG5mdW5jdGlvbiBnZXRPcHBvc2l0ZVZhcmlhdGlvbih2YXJpYXRpb24pIHtcbiAgaWYgKHZhcmlhdGlvbiA9PT0gJ2VuZCcpIHtcbiAgICByZXR1cm4gJ3N0YXJ0JztcbiAgfSBlbHNlIGlmICh2YXJpYXRpb24gPT09ICdzdGFydCcpIHtcbiAgICByZXR1cm4gJ2VuZCc7XG4gIH1cbiAgcmV0dXJuIHZhcmlhdGlvbjtcbn1cblxuLyoqXG4gKiBMaXN0IG9mIGFjY2VwdGVkIHBsYWNlbWVudHMgdG8gdXNlIGFzIHZhbHVlcyBvZiB0aGUgYHBsYWNlbWVudGAgb3B0aW9uLjxiciAvPlxuICogVmFsaWQgcGxhY2VtZW50cyBhcmU6XG4gKiAtIGBhdXRvYFxuICogLSBgdG9wYFxuICogLSBgcmlnaHRgXG4gKiAtIGBib3R0b21gXG4gKiAtIGBsZWZ0YFxuICpcbiAqIEVhY2ggcGxhY2VtZW50IGNhbiBoYXZlIGEgdmFyaWF0aW9uIGZyb20gdGhpcyBsaXN0OlxuICogLSBgLXN0YXJ0YFxuICogLSBgLWVuZGBcbiAqXG4gKiBWYXJpYXRpb25zIGFyZSBpbnRlcnByZXRlZCBlYXNpbHkgaWYgeW91IHRoaW5rIG9mIHRoZW0gYXMgdGhlIGxlZnQgdG8gcmlnaHRcbiAqIHdyaXR0ZW4gbGFuZ3VhZ2VzLiBIb3Jpem9udGFsbHkgKGB0b3BgIGFuZCBgYm90dG9tYCksIGBzdGFydGAgaXMgbGVmdCBhbmQgYGVuZGBcbiAqIGlzIHJpZ2h0LjxiciAvPlxuICogVmVydGljYWxseSAoYGxlZnRgIGFuZCBgcmlnaHRgKSwgYHN0YXJ0YCBpcyB0b3AgYW5kIGBlbmRgIGlzIGJvdHRvbS5cbiAqXG4gKiBTb21lIHZhbGlkIGV4YW1wbGVzIGFyZTpcbiAqIC0gYHRvcC1lbmRgIChvbiB0b3Agb2YgcmVmZXJlbmNlLCByaWdodCBhbGlnbmVkKVxuICogLSBgcmlnaHQtc3RhcnRgIChvbiByaWdodCBvZiByZWZlcmVuY2UsIHRvcCBhbGlnbmVkKVxuICogLSBgYm90dG9tYCAob24gYm90dG9tLCBjZW50ZXJlZClcbiAqIC0gYGF1dG8tZW5kYCAob24gdGhlIHNpZGUgd2l0aCBtb3JlIHNwYWNlIGF2YWlsYWJsZSwgYWxpZ25tZW50IGRlcGVuZHMgYnkgcGxhY2VtZW50KVxuICpcbiAqIEBzdGF0aWNcbiAqIEB0eXBlIHtBcnJheX1cbiAqIEBlbnVtIHtTdHJpbmd9XG4gKiBAcmVhZG9ubHlcbiAqIEBtZXRob2QgcGxhY2VtZW50c1xuICogQG1lbWJlcm9mIFBvcHBlclxuICovXG52YXIgcGxhY2VtZW50cyA9IFsnYXV0by1zdGFydCcsICdhdXRvJywgJ2F1dG8tZW5kJywgJ3RvcC1zdGFydCcsICd0b3AnLCAndG9wLWVuZCcsICdyaWdodC1zdGFydCcsICdyaWdodCcsICdyaWdodC1lbmQnLCAnYm90dG9tLWVuZCcsICdib3R0b20nLCAnYm90dG9tLXN0YXJ0JywgJ2xlZnQtZW5kJywgJ2xlZnQnLCAnbGVmdC1zdGFydCddO1xuXG4vLyBHZXQgcmlkIG9mIGBhdXRvYCBgYXV0by1zdGFydGAgYW5kIGBhdXRvLWVuZGBcbnZhciB2YWxpZFBsYWNlbWVudHMgPSBwbGFjZW1lbnRzLnNsaWNlKDMpO1xuXG4vKipcbiAqIEdpdmVuIGFuIGluaXRpYWwgcGxhY2VtZW50LCByZXR1cm5zIGFsbCB0aGUgc3Vic2VxdWVudCBwbGFjZW1lbnRzXG4gKiBjbG9ja3dpc2UgKG9yIGNvdW50ZXItY2xvY2t3aXNlKS5cbiAqXG4gKiBAbWV0aG9kXG4gKiBAbWVtYmVyb2YgUG9wcGVyLlV0aWxzXG4gKiBAYXJndW1lbnQge1N0cmluZ30gcGxhY2VtZW50IC0gQSB2YWxpZCBwbGFjZW1lbnQgKGl0IGFjY2VwdHMgdmFyaWF0aW9ucylcbiAqIEBhcmd1bWVudCB7Qm9vbGVhbn0gY291bnRlciAtIFNldCB0byB0cnVlIHRvIHdhbGsgdGhlIHBsYWNlbWVudHMgY291bnRlcmNsb2Nrd2lzZVxuICogQHJldHVybnMge0FycmF5fSBwbGFjZW1lbnRzIGluY2x1ZGluZyB0aGVpciB2YXJpYXRpb25zXG4gKi9cbmZ1bmN0aW9uIGNsb2Nrd2lzZShwbGFjZW1lbnQpIHtcbiAgdmFyIGNvdW50ZXIgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlO1xuXG4gIHZhciBpbmRleCA9IHZhbGlkUGxhY2VtZW50cy5pbmRleE9mKHBsYWNlbWVudCk7XG4gIHZhciBhcnIgPSB2YWxpZFBsYWNlbWVudHMuc2xpY2UoaW5kZXggKyAxKS5jb25jYXQodmFsaWRQbGFjZW1lbnRzLnNsaWNlKDAsIGluZGV4KSk7XG4gIHJldHVybiBjb3VudGVyID8gYXJyLnJldmVyc2UoKSA6IGFycjtcbn1cblxudmFyIEJFSEFWSU9SUyA9IHtcbiAgRkxJUDogJ2ZsaXAnLFxuICBDTE9DS1dJU0U6ICdjbG9ja3dpc2UnLFxuICBDT1VOVEVSQ0xPQ0tXSVNFOiAnY291bnRlcmNsb2Nrd2lzZSdcbn07XG5cbi8qKlxuICogQGZ1bmN0aW9uXG4gKiBAbWVtYmVyb2YgTW9kaWZpZXJzXG4gKiBAYXJndW1lbnQge09iamVjdH0gZGF0YSAtIFRoZSBkYXRhIG9iamVjdCBnZW5lcmF0ZWQgYnkgdXBkYXRlIG1ldGhvZFxuICogQGFyZ3VtZW50IHtPYmplY3R9IG9wdGlvbnMgLSBNb2RpZmllcnMgY29uZmlndXJhdGlvbiBhbmQgb3B0aW9uc1xuICogQHJldHVybnMge09iamVjdH0gVGhlIGRhdGEgb2JqZWN0LCBwcm9wZXJseSBtb2RpZmllZFxuICovXG5mdW5jdGlvbiBmbGlwKGRhdGEsIG9wdGlvbnMpIHtcbiAgLy8gaWYgYGlubmVyYCBtb2RpZmllciBpcyBlbmFibGVkLCB3ZSBjYW4ndCB1c2UgdGhlIGBmbGlwYCBtb2RpZmllclxuICBpZiAoaXNNb2RpZmllckVuYWJsZWQoZGF0YS5pbnN0YW5jZS5tb2RpZmllcnMsICdpbm5lcicpKSB7XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cblxuICBpZiAoZGF0YS5mbGlwcGVkICYmIGRhdGEucGxhY2VtZW50ID09PSBkYXRhLm9yaWdpbmFsUGxhY2VtZW50KSB7XG4gICAgLy8gc2VlbXMgbGlrZSBmbGlwIGlzIHRyeWluZyB0byBsb29wLCBwcm9iYWJseSB0aGVyZSdzIG5vdCBlbm91Z2ggc3BhY2Ugb24gYW55IG9mIHRoZSBmbGlwcGFibGUgc2lkZXNcbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuXG4gIHZhciBib3VuZGFyaWVzID0gZ2V0Qm91bmRhcmllcyhkYXRhLmluc3RhbmNlLnBvcHBlciwgZGF0YS5pbnN0YW5jZS5yZWZlcmVuY2UsIG9wdGlvbnMucGFkZGluZywgb3B0aW9ucy5ib3VuZGFyaWVzRWxlbWVudCwgZGF0YS5wb3NpdGlvbkZpeGVkKTtcblxuICB2YXIgcGxhY2VtZW50ID0gZGF0YS5wbGFjZW1lbnQuc3BsaXQoJy0nKVswXTtcbiAgdmFyIHBsYWNlbWVudE9wcG9zaXRlID0gZ2V0T3Bwb3NpdGVQbGFjZW1lbnQocGxhY2VtZW50KTtcbiAgdmFyIHZhcmlhdGlvbiA9IGRhdGEucGxhY2VtZW50LnNwbGl0KCctJylbMV0gfHwgJyc7XG5cbiAgdmFyIGZsaXBPcmRlciA9IFtdO1xuXG4gIHN3aXRjaCAob3B0aW9ucy5iZWhhdmlvcikge1xuICAgIGNhc2UgQkVIQVZJT1JTLkZMSVA6XG4gICAgICBmbGlwT3JkZXIgPSBbcGxhY2VtZW50LCBwbGFjZW1lbnRPcHBvc2l0ZV07XG4gICAgICBicmVhaztcbiAgICBjYXNlIEJFSEFWSU9SUy5DTE9DS1dJU0U6XG4gICAgICBmbGlwT3JkZXIgPSBjbG9ja3dpc2UocGxhY2VtZW50KTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgQkVIQVZJT1JTLkNPVU5URVJDTE9DS1dJU0U6XG4gICAgICBmbGlwT3JkZXIgPSBjbG9ja3dpc2UocGxhY2VtZW50LCB0cnVlKTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBmbGlwT3JkZXIgPSBvcHRpb25zLmJlaGF2aW9yO1xuICB9XG5cbiAgZmxpcE9yZGVyLmZvckVhY2goZnVuY3Rpb24gKHN0ZXAsIGluZGV4KSB7XG4gICAgaWYgKHBsYWNlbWVudCAhPT0gc3RlcCB8fCBmbGlwT3JkZXIubGVuZ3RoID09PSBpbmRleCArIDEpIHtcbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH1cblxuICAgIHBsYWNlbWVudCA9IGRhdGEucGxhY2VtZW50LnNwbGl0KCctJylbMF07XG4gICAgcGxhY2VtZW50T3Bwb3NpdGUgPSBnZXRPcHBvc2l0ZVBsYWNlbWVudChwbGFjZW1lbnQpO1xuXG4gICAgdmFyIHBvcHBlck9mZnNldHMgPSBkYXRhLm9mZnNldHMucG9wcGVyO1xuICAgIHZhciByZWZPZmZzZXRzID0gZGF0YS5vZmZzZXRzLnJlZmVyZW5jZTtcblxuICAgIC8vIHVzaW5nIGZsb29yIGJlY2F1c2UgdGhlIHJlZmVyZW5jZSBvZmZzZXRzIG1heSBjb250YWluIGRlY2ltYWxzIHdlIGFyZSBub3QgZ29pbmcgdG8gY29uc2lkZXIgaGVyZVxuICAgIHZhciBmbG9vciA9IE1hdGguZmxvb3I7XG4gICAgdmFyIG92ZXJsYXBzUmVmID0gcGxhY2VtZW50ID09PSAnbGVmdCcgJiYgZmxvb3IocG9wcGVyT2Zmc2V0cy5yaWdodCkgPiBmbG9vcihyZWZPZmZzZXRzLmxlZnQpIHx8IHBsYWNlbWVudCA9PT0gJ3JpZ2h0JyAmJiBmbG9vcihwb3BwZXJPZmZzZXRzLmxlZnQpIDwgZmxvb3IocmVmT2Zmc2V0cy5yaWdodCkgfHwgcGxhY2VtZW50ID09PSAndG9wJyAmJiBmbG9vcihwb3BwZXJPZmZzZXRzLmJvdHRvbSkgPiBmbG9vcihyZWZPZmZzZXRzLnRvcCkgfHwgcGxhY2VtZW50ID09PSAnYm90dG9tJyAmJiBmbG9vcihwb3BwZXJPZmZzZXRzLnRvcCkgPCBmbG9vcihyZWZPZmZzZXRzLmJvdHRvbSk7XG5cbiAgICB2YXIgb3ZlcmZsb3dzTGVmdCA9IGZsb29yKHBvcHBlck9mZnNldHMubGVmdCkgPCBmbG9vcihib3VuZGFyaWVzLmxlZnQpO1xuICAgIHZhciBvdmVyZmxvd3NSaWdodCA9IGZsb29yKHBvcHBlck9mZnNldHMucmlnaHQpID4gZmxvb3IoYm91bmRhcmllcy5yaWdodCk7XG4gICAgdmFyIG92ZXJmbG93c1RvcCA9IGZsb29yKHBvcHBlck9mZnNldHMudG9wKSA8IGZsb29yKGJvdW5kYXJpZXMudG9wKTtcbiAgICB2YXIgb3ZlcmZsb3dzQm90dG9tID0gZmxvb3IocG9wcGVyT2Zmc2V0cy5ib3R0b20pID4gZmxvb3IoYm91bmRhcmllcy5ib3R0b20pO1xuXG4gICAgdmFyIG92ZXJmbG93c0JvdW5kYXJpZXMgPSBwbGFjZW1lbnQgPT09ICdsZWZ0JyAmJiBvdmVyZmxvd3NMZWZ0IHx8IHBsYWNlbWVudCA9PT0gJ3JpZ2h0JyAmJiBvdmVyZmxvd3NSaWdodCB8fCBwbGFjZW1lbnQgPT09ICd0b3AnICYmIG92ZXJmbG93c1RvcCB8fCBwbGFjZW1lbnQgPT09ICdib3R0b20nICYmIG92ZXJmbG93c0JvdHRvbTtcblxuICAgIC8vIGZsaXAgdGhlIHZhcmlhdGlvbiBpZiByZXF1aXJlZFxuICAgIHZhciBpc1ZlcnRpY2FsID0gWyd0b3AnLCAnYm90dG9tJ10uaW5kZXhPZihwbGFjZW1lbnQpICE9PSAtMTtcblxuICAgIC8vIGZsaXBzIHZhcmlhdGlvbiBpZiByZWZlcmVuY2UgZWxlbWVudCBvdmVyZmxvd3MgYm91bmRhcmllc1xuICAgIHZhciBmbGlwcGVkVmFyaWF0aW9uQnlSZWYgPSAhIW9wdGlvbnMuZmxpcFZhcmlhdGlvbnMgJiYgKGlzVmVydGljYWwgJiYgdmFyaWF0aW9uID09PSAnc3RhcnQnICYmIG92ZXJmbG93c0xlZnQgfHwgaXNWZXJ0aWNhbCAmJiB2YXJpYXRpb24gPT09ICdlbmQnICYmIG92ZXJmbG93c1JpZ2h0IHx8ICFpc1ZlcnRpY2FsICYmIHZhcmlhdGlvbiA9PT0gJ3N0YXJ0JyAmJiBvdmVyZmxvd3NUb3AgfHwgIWlzVmVydGljYWwgJiYgdmFyaWF0aW9uID09PSAnZW5kJyAmJiBvdmVyZmxvd3NCb3R0b20pO1xuXG4gICAgLy8gZmxpcHMgdmFyaWF0aW9uIGlmIHBvcHBlciBjb250ZW50IG92ZXJmbG93cyBib3VuZGFyaWVzXG4gICAgdmFyIGZsaXBwZWRWYXJpYXRpb25CeUNvbnRlbnQgPSAhIW9wdGlvbnMuZmxpcFZhcmlhdGlvbnNCeUNvbnRlbnQgJiYgKGlzVmVydGljYWwgJiYgdmFyaWF0aW9uID09PSAnc3RhcnQnICYmIG92ZXJmbG93c1JpZ2h0IHx8IGlzVmVydGljYWwgJiYgdmFyaWF0aW9uID09PSAnZW5kJyAmJiBvdmVyZmxvd3NMZWZ0IHx8ICFpc1ZlcnRpY2FsICYmIHZhcmlhdGlvbiA9PT0gJ3N0YXJ0JyAmJiBvdmVyZmxvd3NCb3R0b20gfHwgIWlzVmVydGljYWwgJiYgdmFyaWF0aW9uID09PSAnZW5kJyAmJiBvdmVyZmxvd3NUb3ApO1xuXG4gICAgdmFyIGZsaXBwZWRWYXJpYXRpb24gPSBmbGlwcGVkVmFyaWF0aW9uQnlSZWYgfHwgZmxpcHBlZFZhcmlhdGlvbkJ5Q29udGVudDtcblxuICAgIGlmIChvdmVybGFwc1JlZiB8fCBvdmVyZmxvd3NCb3VuZGFyaWVzIHx8IGZsaXBwZWRWYXJpYXRpb24pIHtcbiAgICAgIC8vIHRoaXMgYm9vbGVhbiB0byBkZXRlY3QgYW55IGZsaXAgbG9vcFxuICAgICAgZGF0YS5mbGlwcGVkID0gdHJ1ZTtcblxuICAgICAgaWYgKG92ZXJsYXBzUmVmIHx8IG92ZXJmbG93c0JvdW5kYXJpZXMpIHtcbiAgICAgICAgcGxhY2VtZW50ID0gZmxpcE9yZGVyW2luZGV4ICsgMV07XG4gICAgICB9XG5cbiAgICAgIGlmIChmbGlwcGVkVmFyaWF0aW9uKSB7XG4gICAgICAgIHZhcmlhdGlvbiA9IGdldE9wcG9zaXRlVmFyaWF0aW9uKHZhcmlhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIGRhdGEucGxhY2VtZW50ID0gcGxhY2VtZW50ICsgKHZhcmlhdGlvbiA/ICctJyArIHZhcmlhdGlvbiA6ICcnKTtcblxuICAgICAgLy8gdGhpcyBvYmplY3QgY29udGFpbnMgYHBvc2l0aW9uYCwgd2Ugd2FudCB0byBwcmVzZXJ2ZSBpdCBhbG9uZyB3aXRoXG4gICAgICAvLyBhbnkgYWRkaXRpb25hbCBwcm9wZXJ0eSB3ZSBtYXkgYWRkIGluIHRoZSBmdXR1cmVcbiAgICAgIGRhdGEub2Zmc2V0cy5wb3BwZXIgPSBfZXh0ZW5kcyh7fSwgZGF0YS5vZmZzZXRzLnBvcHBlciwgZ2V0UG9wcGVyT2Zmc2V0cyhkYXRhLmluc3RhbmNlLnBvcHBlciwgZGF0YS5vZmZzZXRzLnJlZmVyZW5jZSwgZGF0YS5wbGFjZW1lbnQpKTtcblxuICAgICAgZGF0YSA9IHJ1bk1vZGlmaWVycyhkYXRhLmluc3RhbmNlLm1vZGlmaWVycywgZGF0YSwgJ2ZsaXAnKTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gZGF0YTtcbn1cblxuLyoqXG4gKiBAZnVuY3Rpb25cbiAqIEBtZW1iZXJvZiBNb2RpZmllcnNcbiAqIEBhcmd1bWVudCB7T2JqZWN0fSBkYXRhIC0gVGhlIGRhdGEgb2JqZWN0IGdlbmVyYXRlZCBieSB1cGRhdGUgbWV0aG9kXG4gKiBAYXJndW1lbnQge09iamVjdH0gb3B0aW9ucyAtIE1vZGlmaWVycyBjb25maWd1cmF0aW9uIGFuZCBvcHRpb25zXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBUaGUgZGF0YSBvYmplY3QsIHByb3Blcmx5IG1vZGlmaWVkXG4gKi9cbmZ1bmN0aW9uIGtlZXBUb2dldGhlcihkYXRhKSB7XG4gIHZhciBfZGF0YSRvZmZzZXRzID0gZGF0YS5vZmZzZXRzLFxuICAgICAgcG9wcGVyID0gX2RhdGEkb2Zmc2V0cy5wb3BwZXIsXG4gICAgICByZWZlcmVuY2UgPSBfZGF0YSRvZmZzZXRzLnJlZmVyZW5jZTtcblxuICB2YXIgcGxhY2VtZW50ID0gZGF0YS5wbGFjZW1lbnQuc3BsaXQoJy0nKVswXTtcbiAgdmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbiAgdmFyIGlzVmVydGljYWwgPSBbJ3RvcCcsICdib3R0b20nXS5pbmRleE9mKHBsYWNlbWVudCkgIT09IC0xO1xuICB2YXIgc2lkZSA9IGlzVmVydGljYWwgPyAncmlnaHQnIDogJ2JvdHRvbSc7XG4gIHZhciBvcFNpZGUgPSBpc1ZlcnRpY2FsID8gJ2xlZnQnIDogJ3RvcCc7XG4gIHZhciBtZWFzdXJlbWVudCA9IGlzVmVydGljYWwgPyAnd2lkdGgnIDogJ2hlaWdodCc7XG5cbiAgaWYgKHBvcHBlcltzaWRlXSA8IGZsb29yKHJlZmVyZW5jZVtvcFNpZGVdKSkge1xuICAgIGRhdGEub2Zmc2V0cy5wb3BwZXJbb3BTaWRlXSA9IGZsb29yKHJlZmVyZW5jZVtvcFNpZGVdKSAtIHBvcHBlclttZWFzdXJlbWVudF07XG4gIH1cbiAgaWYgKHBvcHBlcltvcFNpZGVdID4gZmxvb3IocmVmZXJlbmNlW3NpZGVdKSkge1xuICAgIGRhdGEub2Zmc2V0cy5wb3BwZXJbb3BTaWRlXSA9IGZsb29yKHJlZmVyZW5jZVtzaWRlXSk7XG4gIH1cblxuICByZXR1cm4gZGF0YTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBhIHN0cmluZyBjb250YWluaW5nIHZhbHVlICsgdW5pdCBpbnRvIGEgcHggdmFsdWUgbnVtYmVyXG4gKiBAZnVuY3Rpb25cbiAqIEBtZW1iZXJvZiB7bW9kaWZpZXJzfm9mZnNldH1cbiAqIEBwcml2YXRlXG4gKiBAYXJndW1lbnQge1N0cmluZ30gc3RyIC0gVmFsdWUgKyB1bml0IHN0cmluZ1xuICogQGFyZ3VtZW50IHtTdHJpbmd9IG1lYXN1cmVtZW50IC0gYGhlaWdodGAgb3IgYHdpZHRoYFxuICogQGFyZ3VtZW50IHtPYmplY3R9IHBvcHBlck9mZnNldHNcbiAqIEBhcmd1bWVudCB7T2JqZWN0fSByZWZlcmVuY2VPZmZzZXRzXG4gKiBAcmV0dXJucyB7TnVtYmVyfFN0cmluZ31cbiAqIFZhbHVlIGluIHBpeGVscywgb3Igb3JpZ2luYWwgc3RyaW5nIGlmIG5vIHZhbHVlcyB3ZXJlIGV4dHJhY3RlZFxuICovXG5mdW5jdGlvbiB0b1ZhbHVlKHN0ciwgbWVhc3VyZW1lbnQsIHBvcHBlck9mZnNldHMsIHJlZmVyZW5jZU9mZnNldHMpIHtcbiAgLy8gc2VwYXJhdGUgdmFsdWUgZnJvbSB1bml0XG4gIHZhciBzcGxpdCA9IHN0ci5tYXRjaCgvKCg/OlxcLXxcXCspP1xcZCpcXC4/XFxkKikoLiopLyk7XG4gIHZhciB2YWx1ZSA9ICtzcGxpdFsxXTtcbiAgdmFyIHVuaXQgPSBzcGxpdFsyXTtcblxuICAvLyBJZiBpdCdzIG5vdCBhIG51bWJlciBpdCdzIGFuIG9wZXJhdG9yLCBJIGd1ZXNzXG4gIGlmICghdmFsdWUpIHtcbiAgICByZXR1cm4gc3RyO1xuICB9XG5cbiAgaWYgKHVuaXQuaW5kZXhPZignJScpID09PSAwKSB7XG4gICAgdmFyIGVsZW1lbnQgPSB2b2lkIDA7XG4gICAgc3dpdGNoICh1bml0KSB7XG4gICAgICBjYXNlICclcCc6XG4gICAgICAgIGVsZW1lbnQgPSBwb3BwZXJPZmZzZXRzO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJyUnOlxuICAgICAgY2FzZSAnJXInOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgZWxlbWVudCA9IHJlZmVyZW5jZU9mZnNldHM7XG4gICAgfVxuXG4gICAgdmFyIHJlY3QgPSBnZXRDbGllbnRSZWN0KGVsZW1lbnQpO1xuICAgIHJldHVybiByZWN0W21lYXN1cmVtZW50XSAvIDEwMCAqIHZhbHVlO1xuICB9IGVsc2UgaWYgKHVuaXQgPT09ICd2aCcgfHwgdW5pdCA9PT0gJ3Z3Jykge1xuICAgIC8vIGlmIGlzIGEgdmggb3IgdncsIHdlIGNhbGN1bGF0ZSB0aGUgc2l6ZSBiYXNlZCBvbiB0aGUgdmlld3BvcnRcbiAgICB2YXIgc2l6ZSA9IHZvaWQgMDtcbiAgICBpZiAodW5pdCA9PT0gJ3ZoJykge1xuICAgICAgc2l6ZSA9IE1hdGgubWF4KGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQsIHdpbmRvdy5pbm5lckhlaWdodCB8fCAwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2l6ZSA9IE1hdGgubWF4KGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCwgd2luZG93LmlubmVyV2lkdGggfHwgMCk7XG4gICAgfVxuICAgIHJldHVybiBzaXplIC8gMTAwICogdmFsdWU7XG4gIH0gZWxzZSB7XG4gICAgLy8gaWYgaXMgYW4gZXhwbGljaXQgcGl4ZWwgdW5pdCwgd2UgZ2V0IHJpZCBvZiB0aGUgdW5pdCBhbmQga2VlcCB0aGUgdmFsdWVcbiAgICAvLyBpZiBpcyBhbiBpbXBsaWNpdCB1bml0LCBpdCdzIHB4LCBhbmQgd2UgcmV0dXJuIGp1c3QgdGhlIHZhbHVlXG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG59XG5cbi8qKlxuICogUGFyc2UgYW4gYG9mZnNldGAgc3RyaW5nIHRvIGV4dHJhcG9sYXRlIGB4YCBhbmQgYHlgIG51bWVyaWMgb2Zmc2V0cy5cbiAqIEBmdW5jdGlvblxuICogQG1lbWJlcm9mIHttb2RpZmllcnN+b2Zmc2V0fVxuICogQHByaXZhdGVcbiAqIEBhcmd1bWVudCB7U3RyaW5nfSBvZmZzZXRcbiAqIEBhcmd1bWVudCB7T2JqZWN0fSBwb3BwZXJPZmZzZXRzXG4gKiBAYXJndW1lbnQge09iamVjdH0gcmVmZXJlbmNlT2Zmc2V0c1xuICogQGFyZ3VtZW50IHtTdHJpbmd9IGJhc2VQbGFjZW1lbnRcbiAqIEByZXR1cm5zIHtBcnJheX0gYSB0d28gY2VsbHMgYXJyYXkgd2l0aCB4IGFuZCB5IG9mZnNldHMgaW4gbnVtYmVyc1xuICovXG5mdW5jdGlvbiBwYXJzZU9mZnNldChvZmZzZXQsIHBvcHBlck9mZnNldHMsIHJlZmVyZW5jZU9mZnNldHMsIGJhc2VQbGFjZW1lbnQpIHtcbiAgdmFyIG9mZnNldHMgPSBbMCwgMF07XG5cbiAgLy8gVXNlIGhlaWdodCBpZiBwbGFjZW1lbnQgaXMgbGVmdCBvciByaWdodCBhbmQgaW5kZXggaXMgMCBvdGhlcndpc2UgdXNlIHdpZHRoXG4gIC8vIGluIHRoaXMgd2F5IHRoZSBmaXJzdCBvZmZzZXQgd2lsbCB1c2UgYW4gYXhpcyBhbmQgdGhlIHNlY29uZCBvbmVcbiAgLy8gd2lsbCB1c2UgdGhlIG90aGVyIG9uZVxuICB2YXIgdXNlSGVpZ2h0ID0gWydyaWdodCcsICdsZWZ0J10uaW5kZXhPZihiYXNlUGxhY2VtZW50KSAhPT0gLTE7XG5cbiAgLy8gU3BsaXQgdGhlIG9mZnNldCBzdHJpbmcgdG8gb2J0YWluIGEgbGlzdCBvZiB2YWx1ZXMgYW5kIG9wZXJhbmRzXG4gIC8vIFRoZSByZWdleCBhZGRyZXNzZXMgdmFsdWVzIHdpdGggdGhlIHBsdXMgb3IgbWludXMgc2lnbiBpbiBmcm9udCAoKzEwLCAtMjAsIGV0YylcbiAgdmFyIGZyYWdtZW50cyA9IG9mZnNldC5zcGxpdCgvKFxcK3xcXC0pLykubWFwKGZ1bmN0aW9uIChmcmFnKSB7XG4gICAgcmV0dXJuIGZyYWcudHJpbSgpO1xuICB9KTtcblxuICAvLyBEZXRlY3QgaWYgdGhlIG9mZnNldCBzdHJpbmcgY29udGFpbnMgYSBwYWlyIG9mIHZhbHVlcyBvciBhIHNpbmdsZSBvbmVcbiAgLy8gdGhleSBjb3VsZCBiZSBzZXBhcmF0ZWQgYnkgY29tbWEgb3Igc3BhY2VcbiAgdmFyIGRpdmlkZXIgPSBmcmFnbWVudHMuaW5kZXhPZihmaW5kKGZyYWdtZW50cywgZnVuY3Rpb24gKGZyYWcpIHtcbiAgICByZXR1cm4gZnJhZy5zZWFyY2goLyx8XFxzLykgIT09IC0xO1xuICB9KSk7XG5cbiAgaWYgKGZyYWdtZW50c1tkaXZpZGVyXSAmJiBmcmFnbWVudHNbZGl2aWRlcl0uaW5kZXhPZignLCcpID09PSAtMSkge1xuICAgIGNvbnNvbGUud2FybignT2Zmc2V0cyBzZXBhcmF0ZWQgYnkgd2hpdGUgc3BhY2UocykgYXJlIGRlcHJlY2F0ZWQsIHVzZSBhIGNvbW1hICgsKSBpbnN0ZWFkLicpO1xuICB9XG5cbiAgLy8gSWYgZGl2aWRlciBpcyBmb3VuZCwgd2UgZGl2aWRlIHRoZSBsaXN0IG9mIHZhbHVlcyBhbmQgb3BlcmFuZHMgdG8gZGl2aWRlXG4gIC8vIHRoZW0gYnkgb2ZzZXQgWCBhbmQgWS5cbiAgdmFyIHNwbGl0UmVnZXggPSAvXFxzKixcXHMqfFxccysvO1xuICB2YXIgb3BzID0gZGl2aWRlciAhPT0gLTEgPyBbZnJhZ21lbnRzLnNsaWNlKDAsIGRpdmlkZXIpLmNvbmNhdChbZnJhZ21lbnRzW2RpdmlkZXJdLnNwbGl0KHNwbGl0UmVnZXgpWzBdXSksIFtmcmFnbWVudHNbZGl2aWRlcl0uc3BsaXQoc3BsaXRSZWdleClbMV1dLmNvbmNhdChmcmFnbWVudHMuc2xpY2UoZGl2aWRlciArIDEpKV0gOiBbZnJhZ21lbnRzXTtcblxuICAvLyBDb252ZXJ0IHRoZSB2YWx1ZXMgd2l0aCB1bml0cyB0byBhYnNvbHV0ZSBwaXhlbHMgdG8gYWxsb3cgb3VyIGNvbXB1dGF0aW9uc1xuICBvcHMgPSBvcHMubWFwKGZ1bmN0aW9uIChvcCwgaW5kZXgpIHtcbiAgICAvLyBNb3N0IG9mIHRoZSB1bml0cyByZWx5IG9uIHRoZSBvcmllbnRhdGlvbiBvZiB0aGUgcG9wcGVyXG4gICAgdmFyIG1lYXN1cmVtZW50ID0gKGluZGV4ID09PSAxID8gIXVzZUhlaWdodCA6IHVzZUhlaWdodCkgPyAnaGVpZ2h0JyA6ICd3aWR0aCc7XG4gICAgdmFyIG1lcmdlV2l0aFByZXZpb3VzID0gZmFsc2U7XG4gICAgcmV0dXJuIG9wXG4gICAgLy8gVGhpcyBhZ2dyZWdhdGVzIGFueSBgK2Agb3IgYC1gIHNpZ24gdGhhdCBhcmVuJ3QgY29uc2lkZXJlZCBvcGVyYXRvcnNcbiAgICAvLyBlLmcuOiAxMCArICs1ID0+IFsxMCwgKywgKzVdXG4gICAgLnJlZHVjZShmdW5jdGlvbiAoYSwgYikge1xuICAgICAgaWYgKGFbYS5sZW5ndGggLSAxXSA9PT0gJycgJiYgWycrJywgJy0nXS5pbmRleE9mKGIpICE9PSAtMSkge1xuICAgICAgICBhW2EubGVuZ3RoIC0gMV0gPSBiO1xuICAgICAgICBtZXJnZVdpdGhQcmV2aW91cyA9IHRydWU7XG4gICAgICAgIHJldHVybiBhO1xuICAgICAgfSBlbHNlIGlmIChtZXJnZVdpdGhQcmV2aW91cykge1xuICAgICAgICBhW2EubGVuZ3RoIC0gMV0gKz0gYjtcbiAgICAgICAgbWVyZ2VXaXRoUHJldmlvdXMgPSBmYWxzZTtcbiAgICAgICAgcmV0dXJuIGE7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gYS5jb25jYXQoYik7XG4gICAgICB9XG4gICAgfSwgW10pXG4gICAgLy8gSGVyZSB3ZSBjb252ZXJ0IHRoZSBzdHJpbmcgdmFsdWVzIGludG8gbnVtYmVyIHZhbHVlcyAoaW4gcHgpXG4gICAgLm1hcChmdW5jdGlvbiAoc3RyKSB7XG4gICAgICByZXR1cm4gdG9WYWx1ZShzdHIsIG1lYXN1cmVtZW50LCBwb3BwZXJPZmZzZXRzLCByZWZlcmVuY2VPZmZzZXRzKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgLy8gTG9vcCB0cm91Z2ggdGhlIG9mZnNldHMgYXJyYXlzIGFuZCBleGVjdXRlIHRoZSBvcGVyYXRpb25zXG4gIG9wcy5mb3JFYWNoKGZ1bmN0aW9uIChvcCwgaW5kZXgpIHtcbiAgICBvcC5mb3JFYWNoKGZ1bmN0aW9uIChmcmFnLCBpbmRleDIpIHtcbiAgICAgIGlmIChpc051bWVyaWMoZnJhZykpIHtcbiAgICAgICAgb2Zmc2V0c1tpbmRleF0gKz0gZnJhZyAqIChvcFtpbmRleDIgLSAxXSA9PT0gJy0nID8gLTEgOiAxKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG4gIHJldHVybiBvZmZzZXRzO1xufVxuXG4vKipcbiAqIEBmdW5jdGlvblxuICogQG1lbWJlcm9mIE1vZGlmaWVyc1xuICogQGFyZ3VtZW50IHtPYmplY3R9IGRhdGEgLSBUaGUgZGF0YSBvYmplY3QgZ2VuZXJhdGVkIGJ5IHVwZGF0ZSBtZXRob2RcbiAqIEBhcmd1bWVudCB7T2JqZWN0fSBvcHRpb25zIC0gTW9kaWZpZXJzIGNvbmZpZ3VyYXRpb24gYW5kIG9wdGlvbnNcbiAqIEBhcmd1bWVudCB7TnVtYmVyfFN0cmluZ30gb3B0aW9ucy5vZmZzZXQ9MFxuICogVGhlIG9mZnNldCB2YWx1ZSBhcyBkZXNjcmliZWQgaW4gdGhlIG1vZGlmaWVyIGRlc2NyaXB0aW9uXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBUaGUgZGF0YSBvYmplY3QsIHByb3Blcmx5IG1vZGlmaWVkXG4gKi9cbmZ1bmN0aW9uIG9mZnNldChkYXRhLCBfcmVmKSB7XG4gIHZhciBvZmZzZXQgPSBfcmVmLm9mZnNldDtcbiAgdmFyIHBsYWNlbWVudCA9IGRhdGEucGxhY2VtZW50LFxuICAgICAgX2RhdGEkb2Zmc2V0cyA9IGRhdGEub2Zmc2V0cyxcbiAgICAgIHBvcHBlciA9IF9kYXRhJG9mZnNldHMucG9wcGVyLFxuICAgICAgcmVmZXJlbmNlID0gX2RhdGEkb2Zmc2V0cy5yZWZlcmVuY2U7XG5cbiAgdmFyIGJhc2VQbGFjZW1lbnQgPSBwbGFjZW1lbnQuc3BsaXQoJy0nKVswXTtcblxuICB2YXIgb2Zmc2V0cyA9IHZvaWQgMDtcbiAgaWYgKGlzTnVtZXJpYygrb2Zmc2V0KSkge1xuICAgIG9mZnNldHMgPSBbK29mZnNldCwgMF07XG4gIH0gZWxzZSB7XG4gICAgb2Zmc2V0cyA9IHBhcnNlT2Zmc2V0KG9mZnNldCwgcG9wcGVyLCByZWZlcmVuY2UsIGJhc2VQbGFjZW1lbnQpO1xuICB9XG5cbiAgaWYgKGJhc2VQbGFjZW1lbnQgPT09ICdsZWZ0Jykge1xuICAgIHBvcHBlci50b3AgKz0gb2Zmc2V0c1swXTtcbiAgICBwb3BwZXIubGVmdCAtPSBvZmZzZXRzWzFdO1xuICB9IGVsc2UgaWYgKGJhc2VQbGFjZW1lbnQgPT09ICdyaWdodCcpIHtcbiAgICBwb3BwZXIudG9wICs9IG9mZnNldHNbMF07XG4gICAgcG9wcGVyLmxlZnQgKz0gb2Zmc2V0c1sxXTtcbiAgfSBlbHNlIGlmIChiYXNlUGxhY2VtZW50ID09PSAndG9wJykge1xuICAgIHBvcHBlci5sZWZ0ICs9IG9mZnNldHNbMF07XG4gICAgcG9wcGVyLnRvcCAtPSBvZmZzZXRzWzFdO1xuICB9IGVsc2UgaWYgKGJhc2VQbGFjZW1lbnQgPT09ICdib3R0b20nKSB7XG4gICAgcG9wcGVyLmxlZnQgKz0gb2Zmc2V0c1swXTtcbiAgICBwb3BwZXIudG9wICs9IG9mZnNldHNbMV07XG4gIH1cblxuICBkYXRhLnBvcHBlciA9IHBvcHBlcjtcbiAgcmV0dXJuIGRhdGE7XG59XG5cbi8qKlxuICogQGZ1bmN0aW9uXG4gKiBAbWVtYmVyb2YgTW9kaWZpZXJzXG4gKiBAYXJndW1lbnQge09iamVjdH0gZGF0YSAtIFRoZSBkYXRhIG9iamVjdCBnZW5lcmF0ZWQgYnkgYHVwZGF0ZWAgbWV0aG9kXG4gKiBAYXJndW1lbnQge09iamVjdH0gb3B0aW9ucyAtIE1vZGlmaWVycyBjb25maWd1cmF0aW9uIGFuZCBvcHRpb25zXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBUaGUgZGF0YSBvYmplY3QsIHByb3Blcmx5IG1vZGlmaWVkXG4gKi9cbmZ1bmN0aW9uIHByZXZlbnRPdmVyZmxvdyhkYXRhLCBvcHRpb25zKSB7XG4gIHZhciBib3VuZGFyaWVzRWxlbWVudCA9IG9wdGlvbnMuYm91bmRhcmllc0VsZW1lbnQgfHwgZ2V0T2Zmc2V0UGFyZW50KGRhdGEuaW5zdGFuY2UucG9wcGVyKTtcblxuICAvLyBJZiBvZmZzZXRQYXJlbnQgaXMgdGhlIHJlZmVyZW5jZSBlbGVtZW50LCB3ZSByZWFsbHkgd2FudCB0b1xuICAvLyBnbyBvbmUgc3RlcCB1cCBhbmQgdXNlIHRoZSBuZXh0IG9mZnNldFBhcmVudCBhcyByZWZlcmVuY2UgdG9cbiAgLy8gYXZvaWQgdG8gbWFrZSB0aGlzIG1vZGlmaWVyIGNvbXBsZXRlbHkgdXNlbGVzcyBhbmQgbG9vayBsaWtlIGJyb2tlblxuICBpZiAoZGF0YS5pbnN0YW5jZS5yZWZlcmVuY2UgPT09IGJvdW5kYXJpZXNFbGVtZW50KSB7XG4gICAgYm91bmRhcmllc0VsZW1lbnQgPSBnZXRPZmZzZXRQYXJlbnQoYm91bmRhcmllc0VsZW1lbnQpO1xuICB9XG5cbiAgLy8gTk9URTogRE9NIGFjY2VzcyBoZXJlXG4gIC8vIHJlc2V0cyB0aGUgcG9wcGVyJ3MgcG9zaXRpb24gc28gdGhhdCB0aGUgZG9jdW1lbnQgc2l6ZSBjYW4gYmUgY2FsY3VsYXRlZCBleGNsdWRpbmdcbiAgLy8gdGhlIHNpemUgb2YgdGhlIHBvcHBlciBlbGVtZW50IGl0c2VsZlxuICB2YXIgdHJhbnNmb3JtUHJvcCA9IGdldFN1cHBvcnRlZFByb3BlcnR5TmFtZSgndHJhbnNmb3JtJyk7XG4gIHZhciBwb3BwZXJTdHlsZXMgPSBkYXRhLmluc3RhbmNlLnBvcHBlci5zdHlsZTsgLy8gYXNzaWdubWVudCB0byBoZWxwIG1pbmlmaWNhdGlvblxuICB2YXIgdG9wID0gcG9wcGVyU3R5bGVzLnRvcCxcbiAgICAgIGxlZnQgPSBwb3BwZXJTdHlsZXMubGVmdCxcbiAgICAgIHRyYW5zZm9ybSA9IHBvcHBlclN0eWxlc1t0cmFuc2Zvcm1Qcm9wXTtcblxuICBwb3BwZXJTdHlsZXMudG9wID0gJyc7XG4gIHBvcHBlclN0eWxlcy5sZWZ0ID0gJyc7XG4gIHBvcHBlclN0eWxlc1t0cmFuc2Zvcm1Qcm9wXSA9ICcnO1xuXG4gIHZhciBib3VuZGFyaWVzID0gZ2V0Qm91bmRhcmllcyhkYXRhLmluc3RhbmNlLnBvcHBlciwgZGF0YS5pbnN0YW5jZS5yZWZlcmVuY2UsIG9wdGlvbnMucGFkZGluZywgYm91bmRhcmllc0VsZW1lbnQsIGRhdGEucG9zaXRpb25GaXhlZCk7XG5cbiAgLy8gTk9URTogRE9NIGFjY2VzcyBoZXJlXG4gIC8vIHJlc3RvcmVzIHRoZSBvcmlnaW5hbCBzdHlsZSBwcm9wZXJ0aWVzIGFmdGVyIHRoZSBvZmZzZXRzIGhhdmUgYmVlbiBjb21wdXRlZFxuICBwb3BwZXJTdHlsZXMudG9wID0gdG9wO1xuICBwb3BwZXJTdHlsZXMubGVmdCA9IGxlZnQ7XG4gIHBvcHBlclN0eWxlc1t0cmFuc2Zvcm1Qcm9wXSA9IHRyYW5zZm9ybTtcblxuICBvcHRpb25zLmJvdW5kYXJpZXMgPSBib3VuZGFyaWVzO1xuXG4gIHZhciBvcmRlciA9IG9wdGlvbnMucHJpb3JpdHk7XG4gIHZhciBwb3BwZXIgPSBkYXRhLm9mZnNldHMucG9wcGVyO1xuXG4gIHZhciBjaGVjayA9IHtcbiAgICBwcmltYXJ5OiBmdW5jdGlvbiBwcmltYXJ5KHBsYWNlbWVudCkge1xuICAgICAgdmFyIHZhbHVlID0gcG9wcGVyW3BsYWNlbWVudF07XG4gICAgICBpZiAocG9wcGVyW3BsYWNlbWVudF0gPCBib3VuZGFyaWVzW3BsYWNlbWVudF0gJiYgIW9wdGlvbnMuZXNjYXBlV2l0aFJlZmVyZW5jZSkge1xuICAgICAgICB2YWx1ZSA9IE1hdGgubWF4KHBvcHBlcltwbGFjZW1lbnRdLCBib3VuZGFyaWVzW3BsYWNlbWVudF0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGRlZmluZVByb3BlcnR5KHt9LCBwbGFjZW1lbnQsIHZhbHVlKTtcbiAgICB9LFxuICAgIHNlY29uZGFyeTogZnVuY3Rpb24gc2Vjb25kYXJ5KHBsYWNlbWVudCkge1xuICAgICAgdmFyIG1haW5TaWRlID0gcGxhY2VtZW50ID09PSAncmlnaHQnID8gJ2xlZnQnIDogJ3RvcCc7XG4gICAgICB2YXIgdmFsdWUgPSBwb3BwZXJbbWFpblNpZGVdO1xuICAgICAgaWYgKHBvcHBlcltwbGFjZW1lbnRdID4gYm91bmRhcmllc1twbGFjZW1lbnRdICYmICFvcHRpb25zLmVzY2FwZVdpdGhSZWZlcmVuY2UpIHtcbiAgICAgICAgdmFsdWUgPSBNYXRoLm1pbihwb3BwZXJbbWFpblNpZGVdLCBib3VuZGFyaWVzW3BsYWNlbWVudF0gLSAocGxhY2VtZW50ID09PSAncmlnaHQnID8gcG9wcGVyLndpZHRoIDogcG9wcGVyLmhlaWdodCkpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGRlZmluZVByb3BlcnR5KHt9LCBtYWluU2lkZSwgdmFsdWUpO1xuICAgIH1cbiAgfTtcblxuICBvcmRlci5mb3JFYWNoKGZ1bmN0aW9uIChwbGFjZW1lbnQpIHtcbiAgICB2YXIgc2lkZSA9IFsnbGVmdCcsICd0b3AnXS5pbmRleE9mKHBsYWNlbWVudCkgIT09IC0xID8gJ3ByaW1hcnknIDogJ3NlY29uZGFyeSc7XG4gICAgcG9wcGVyID0gX2V4dGVuZHMoe30sIHBvcHBlciwgY2hlY2tbc2lkZV0ocGxhY2VtZW50KSk7XG4gIH0pO1xuXG4gIGRhdGEub2Zmc2V0cy5wb3BwZXIgPSBwb3BwZXI7XG5cbiAgcmV0dXJuIGRhdGE7XG59XG5cbi8qKlxuICogQGZ1bmN0aW9uXG4gKiBAbWVtYmVyb2YgTW9kaWZpZXJzXG4gKiBAYXJndW1lbnQge09iamVjdH0gZGF0YSAtIFRoZSBkYXRhIG9iamVjdCBnZW5lcmF0ZWQgYnkgYHVwZGF0ZWAgbWV0aG9kXG4gKiBAYXJndW1lbnQge09iamVjdH0gb3B0aW9ucyAtIE1vZGlmaWVycyBjb25maWd1cmF0aW9uIGFuZCBvcHRpb25zXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBUaGUgZGF0YSBvYmplY3QsIHByb3Blcmx5IG1vZGlmaWVkXG4gKi9cbmZ1bmN0aW9uIHNoaWZ0KGRhdGEpIHtcbiAgdmFyIHBsYWNlbWVudCA9IGRhdGEucGxhY2VtZW50O1xuICB2YXIgYmFzZVBsYWNlbWVudCA9IHBsYWNlbWVudC5zcGxpdCgnLScpWzBdO1xuICB2YXIgc2hpZnR2YXJpYXRpb24gPSBwbGFjZW1lbnQuc3BsaXQoJy0nKVsxXTtcblxuICAvLyBpZiBzaGlmdCBzaGlmdHZhcmlhdGlvbiBpcyBzcGVjaWZpZWQsIHJ1biB0aGUgbW9kaWZpZXJcbiAgaWYgKHNoaWZ0dmFyaWF0aW9uKSB7XG4gICAgdmFyIF9kYXRhJG9mZnNldHMgPSBkYXRhLm9mZnNldHMsXG4gICAgICAgIHJlZmVyZW5jZSA9IF9kYXRhJG9mZnNldHMucmVmZXJlbmNlLFxuICAgICAgICBwb3BwZXIgPSBfZGF0YSRvZmZzZXRzLnBvcHBlcjtcblxuICAgIHZhciBpc1ZlcnRpY2FsID0gWydib3R0b20nLCAndG9wJ10uaW5kZXhPZihiYXNlUGxhY2VtZW50KSAhPT0gLTE7XG4gICAgdmFyIHNpZGUgPSBpc1ZlcnRpY2FsID8gJ2xlZnQnIDogJ3RvcCc7XG4gICAgdmFyIG1lYXN1cmVtZW50ID0gaXNWZXJ0aWNhbCA/ICd3aWR0aCcgOiAnaGVpZ2h0JztcblxuICAgIHZhciBzaGlmdE9mZnNldHMgPSB7XG4gICAgICBzdGFydDogZGVmaW5lUHJvcGVydHkoe30sIHNpZGUsIHJlZmVyZW5jZVtzaWRlXSksXG4gICAgICBlbmQ6IGRlZmluZVByb3BlcnR5KHt9LCBzaWRlLCByZWZlcmVuY2Vbc2lkZV0gKyByZWZlcmVuY2VbbWVhc3VyZW1lbnRdIC0gcG9wcGVyW21lYXN1cmVtZW50XSlcbiAgICB9O1xuXG4gICAgZGF0YS5vZmZzZXRzLnBvcHBlciA9IF9leHRlbmRzKHt9LCBwb3BwZXIsIHNoaWZ0T2Zmc2V0c1tzaGlmdHZhcmlhdGlvbl0pO1xuICB9XG5cbiAgcmV0dXJuIGRhdGE7XG59XG5cbi8qKlxuICogQGZ1bmN0aW9uXG4gKiBAbWVtYmVyb2YgTW9kaWZpZXJzXG4gKiBAYXJndW1lbnQge09iamVjdH0gZGF0YSAtIFRoZSBkYXRhIG9iamVjdCBnZW5lcmF0ZWQgYnkgdXBkYXRlIG1ldGhvZFxuICogQGFyZ3VtZW50IHtPYmplY3R9IG9wdGlvbnMgLSBNb2RpZmllcnMgY29uZmlndXJhdGlvbiBhbmQgb3B0aW9uc1xuICogQHJldHVybnMge09iamVjdH0gVGhlIGRhdGEgb2JqZWN0LCBwcm9wZXJseSBtb2RpZmllZFxuICovXG5mdW5jdGlvbiBoaWRlKGRhdGEpIHtcbiAgaWYgKCFpc01vZGlmaWVyUmVxdWlyZWQoZGF0YS5pbnN0YW5jZS5tb2RpZmllcnMsICdoaWRlJywgJ3ByZXZlbnRPdmVyZmxvdycpKSB7XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cblxuICB2YXIgcmVmUmVjdCA9IGRhdGEub2Zmc2V0cy5yZWZlcmVuY2U7XG4gIHZhciBib3VuZCA9IGZpbmQoZGF0YS5pbnN0YW5jZS5tb2RpZmllcnMsIGZ1bmN0aW9uIChtb2RpZmllcikge1xuICAgIHJldHVybiBtb2RpZmllci5uYW1lID09PSAncHJldmVudE92ZXJmbG93JztcbiAgfSkuYm91bmRhcmllcztcblxuICBpZiAocmVmUmVjdC5ib3R0b20gPCBib3VuZC50b3AgfHwgcmVmUmVjdC5sZWZ0ID4gYm91bmQucmlnaHQgfHwgcmVmUmVjdC50b3AgPiBib3VuZC5ib3R0b20gfHwgcmVmUmVjdC5yaWdodCA8IGJvdW5kLmxlZnQpIHtcbiAgICAvLyBBdm9pZCB1bm5lY2Vzc2FyeSBET00gYWNjZXNzIGlmIHZpc2liaWxpdHkgaGFzbid0IGNoYW5nZWRcbiAgICBpZiAoZGF0YS5oaWRlID09PSB0cnVlKSB7XG4gICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG5cbiAgICBkYXRhLmhpZGUgPSB0cnVlO1xuICAgIGRhdGEuYXR0cmlidXRlc1sneC1vdXQtb2YtYm91bmRhcmllcyddID0gJyc7XG4gIH0gZWxzZSB7XG4gICAgLy8gQXZvaWQgdW5uZWNlc3NhcnkgRE9NIGFjY2VzcyBpZiB2aXNpYmlsaXR5IGhhc24ndCBjaGFuZ2VkXG4gICAgaWYgKGRhdGEuaGlkZSA9PT0gZmFsc2UpIHtcbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH1cblxuICAgIGRhdGEuaGlkZSA9IGZhbHNlO1xuICAgIGRhdGEuYXR0cmlidXRlc1sneC1vdXQtb2YtYm91bmRhcmllcyddID0gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gZGF0YTtcbn1cblxuLyoqXG4gKiBAZnVuY3Rpb25cbiAqIEBtZW1iZXJvZiBNb2RpZmllcnNcbiAqIEBhcmd1bWVudCB7T2JqZWN0fSBkYXRhIC0gVGhlIGRhdGEgb2JqZWN0IGdlbmVyYXRlZCBieSBgdXBkYXRlYCBtZXRob2RcbiAqIEBhcmd1bWVudCB7T2JqZWN0fSBvcHRpb25zIC0gTW9kaWZpZXJzIGNvbmZpZ3VyYXRpb24gYW5kIG9wdGlvbnNcbiAqIEByZXR1cm5zIHtPYmplY3R9IFRoZSBkYXRhIG9iamVjdCwgcHJvcGVybHkgbW9kaWZpZWRcbiAqL1xuZnVuY3Rpb24gaW5uZXIoZGF0YSkge1xuICB2YXIgcGxhY2VtZW50ID0gZGF0YS5wbGFjZW1lbnQ7XG4gIHZhciBiYXNlUGxhY2VtZW50ID0gcGxhY2VtZW50LnNwbGl0KCctJylbMF07XG4gIHZhciBfZGF0YSRvZmZzZXRzID0gZGF0YS5vZmZzZXRzLFxuICAgICAgcG9wcGVyID0gX2RhdGEkb2Zmc2V0cy5wb3BwZXIsXG4gICAgICByZWZlcmVuY2UgPSBfZGF0YSRvZmZzZXRzLnJlZmVyZW5jZTtcblxuICB2YXIgaXNIb3JpeiA9IFsnbGVmdCcsICdyaWdodCddLmluZGV4T2YoYmFzZVBsYWNlbWVudCkgIT09IC0xO1xuXG4gIHZhciBzdWJ0cmFjdExlbmd0aCA9IFsndG9wJywgJ2xlZnQnXS5pbmRleE9mKGJhc2VQbGFjZW1lbnQpID09PSAtMTtcblxuICBwb3BwZXJbaXNIb3JpeiA/ICdsZWZ0JyA6ICd0b3AnXSA9IHJlZmVyZW5jZVtiYXNlUGxhY2VtZW50XSAtIChzdWJ0cmFjdExlbmd0aCA/IHBvcHBlcltpc0hvcml6ID8gJ3dpZHRoJyA6ICdoZWlnaHQnXSA6IDApO1xuXG4gIGRhdGEucGxhY2VtZW50ID0gZ2V0T3Bwb3NpdGVQbGFjZW1lbnQocGxhY2VtZW50KTtcbiAgZGF0YS5vZmZzZXRzLnBvcHBlciA9IGdldENsaWVudFJlY3QocG9wcGVyKTtcblxuICByZXR1cm4gZGF0YTtcbn1cblxuLyoqXG4gKiBNb2RpZmllciBmdW5jdGlvbiwgZWFjaCBtb2RpZmllciBjYW4gaGF2ZSBhIGZ1bmN0aW9uIG9mIHRoaXMgdHlwZSBhc3NpZ25lZFxuICogdG8gaXRzIGBmbmAgcHJvcGVydHkuPGJyIC8+XG4gKiBUaGVzZSBmdW5jdGlvbnMgd2lsbCBiZSBjYWxsZWQgb24gZWFjaCB1cGRhdGUsIHRoaXMgbWVhbnMgdGhhdCB5b3UgbXVzdFxuICogbWFrZSBzdXJlIHRoZXkgYXJlIHBlcmZvcm1hbnQgZW5vdWdoIHRvIGF2b2lkIHBlcmZvcm1hbmNlIGJvdHRsZW5lY2tzLlxuICpcbiAqIEBmdW5jdGlvbiBNb2RpZmllckZuXG4gKiBAYXJndW1lbnQge2RhdGFPYmplY3R9IGRhdGEgLSBUaGUgZGF0YSBvYmplY3QgZ2VuZXJhdGVkIGJ5IGB1cGRhdGVgIG1ldGhvZFxuICogQGFyZ3VtZW50IHtPYmplY3R9IG9wdGlvbnMgLSBNb2RpZmllcnMgY29uZmlndXJhdGlvbiBhbmQgb3B0aW9uc1xuICogQHJldHVybnMge2RhdGFPYmplY3R9IFRoZSBkYXRhIG9iamVjdCwgcHJvcGVybHkgbW9kaWZpZWRcbiAqL1xuXG4vKipcbiAqIE1vZGlmaWVycyBhcmUgcGx1Z2lucyB1c2VkIHRvIGFsdGVyIHRoZSBiZWhhdmlvciBvZiB5b3VyIHBvcHBlcnMuPGJyIC8+XG4gKiBQb3BwZXIuanMgdXNlcyBhIHNldCBvZiA5IG1vZGlmaWVycyB0byBwcm92aWRlIGFsbCB0aGUgYmFzaWMgZnVuY3Rpb25hbGl0aWVzXG4gKiBuZWVkZWQgYnkgdGhlIGxpYnJhcnkuXG4gKlxuICogVXN1YWxseSB5b3UgZG9uJ3Qgd2FudCB0byBvdmVycmlkZSB0aGUgYG9yZGVyYCwgYGZuYCBhbmQgYG9uTG9hZGAgcHJvcHMuXG4gKiBBbGwgdGhlIG90aGVyIHByb3BlcnRpZXMgYXJlIGNvbmZpZ3VyYXRpb25zIHRoYXQgY291bGQgYmUgdHdlYWtlZC5cbiAqIEBuYW1lc3BhY2UgbW9kaWZpZXJzXG4gKi9cbnZhciBtb2RpZmllcnMgPSB7XG4gIC8qKlxuICAgKiBNb2RpZmllciB1c2VkIHRvIHNoaWZ0IHRoZSBwb3BwZXIgb24gdGhlIHN0YXJ0IG9yIGVuZCBvZiBpdHMgcmVmZXJlbmNlXG4gICAqIGVsZW1lbnQuPGJyIC8+XG4gICAqIEl0IHdpbGwgcmVhZCB0aGUgdmFyaWF0aW9uIG9mIHRoZSBgcGxhY2VtZW50YCBwcm9wZXJ0eS48YnIgLz5cbiAgICogSXQgY2FuIGJlIG9uZSBlaXRoZXIgYC1lbmRgIG9yIGAtc3RhcnRgLlxuICAgKiBAbWVtYmVyb2YgbW9kaWZpZXJzXG4gICAqIEBpbm5lclxuICAgKi9cbiAgc2hpZnQ6IHtcbiAgICAvKiogQHByb3Age251bWJlcn0gb3JkZXI9MTAwIC0gSW5kZXggdXNlZCB0byBkZWZpbmUgdGhlIG9yZGVyIG9mIGV4ZWN1dGlvbiAqL1xuICAgIG9yZGVyOiAxMDAsXG4gICAgLyoqIEBwcm9wIHtCb29sZWFufSBlbmFibGVkPXRydWUgLSBXaGV0aGVyIHRoZSBtb2RpZmllciBpcyBlbmFibGVkIG9yIG5vdCAqL1xuICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgLyoqIEBwcm9wIHtNb2RpZmllckZufSAqL1xuICAgIGZuOiBzaGlmdFxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGUgYG9mZnNldGAgbW9kaWZpZXIgY2FuIHNoaWZ0IHlvdXIgcG9wcGVyIG9uIGJvdGggaXRzIGF4aXMuXG4gICAqXG4gICAqIEl0IGFjY2VwdHMgdGhlIGZvbGxvd2luZyB1bml0czpcbiAgICogLSBgcHhgIG9yIHVuaXQtbGVzcywgaW50ZXJwcmV0ZWQgYXMgcGl4ZWxzXG4gICAqIC0gYCVgIG9yIGAlcmAsIHBlcmNlbnRhZ2UgcmVsYXRpdmUgdG8gdGhlIGxlbmd0aCBvZiB0aGUgcmVmZXJlbmNlIGVsZW1lbnRcbiAgICogLSBgJXBgLCBwZXJjZW50YWdlIHJlbGF0aXZlIHRvIHRoZSBsZW5ndGggb2YgdGhlIHBvcHBlciBlbGVtZW50XG4gICAqIC0gYHZ3YCwgQ1NTIHZpZXdwb3J0IHdpZHRoIHVuaXRcbiAgICogLSBgdmhgLCBDU1Mgdmlld3BvcnQgaGVpZ2h0IHVuaXRcbiAgICpcbiAgICogRm9yIGxlbmd0aCBpcyBpbnRlbmRlZCB0aGUgbWFpbiBheGlzIHJlbGF0aXZlIHRvIHRoZSBwbGFjZW1lbnQgb2YgdGhlIHBvcHBlci48YnIgLz5cbiAgICogVGhpcyBtZWFucyB0aGF0IGlmIHRoZSBwbGFjZW1lbnQgaXMgYHRvcGAgb3IgYGJvdHRvbWAsIHRoZSBsZW5ndGggd2lsbCBiZSB0aGVcbiAgICogYHdpZHRoYC4gSW4gY2FzZSBvZiBgbGVmdGAgb3IgYHJpZ2h0YCwgaXQgd2lsbCBiZSB0aGUgYGhlaWdodGAuXG4gICAqXG4gICAqIFlvdSBjYW4gcHJvdmlkZSBhIHNpbmdsZSB2YWx1ZSAoYXMgYE51bWJlcmAgb3IgYFN0cmluZ2ApLCBvciBhIHBhaXIgb2YgdmFsdWVzXG4gICAqIGFzIGBTdHJpbmdgIGRpdmlkZWQgYnkgYSBjb21tYSBvciBvbmUgKG9yIG1vcmUpIHdoaXRlIHNwYWNlcy48YnIgLz5cbiAgICogVGhlIGxhdHRlciBpcyBhIGRlcHJlY2F0ZWQgbWV0aG9kIGJlY2F1c2UgaXQgbGVhZHMgdG8gY29uZnVzaW9uIGFuZCB3aWxsIGJlXG4gICAqIHJlbW92ZWQgaW4gdjIuPGJyIC8+XG4gICAqIEFkZGl0aW9uYWxseSwgaXQgYWNjZXB0cyBhZGRpdGlvbnMgYW5kIHN1YnRyYWN0aW9ucyBiZXR3ZWVuIGRpZmZlcmVudCB1bml0cy5cbiAgICogTm90ZSB0aGF0IG11bHRpcGxpY2F0aW9ucyBhbmQgZGl2aXNpb25zIGFyZW4ndCBzdXBwb3J0ZWQuXG4gICAqXG4gICAqIFZhbGlkIGV4YW1wbGVzIGFyZTpcbiAgICogYGBgXG4gICAqIDEwXG4gICAqICcxMCUnXG4gICAqICcxMCwgMTAnXG4gICAqICcxMCUsIDEwJ1xuICAgKiAnMTAgKyAxMCUnXG4gICAqICcxMCAtIDV2aCArIDMlJ1xuICAgKiAnLTEwcHggKyA1dmgsIDVweCAtIDYlJ1xuICAgKiBgYGBcbiAgICogPiAqKk5CKio6IElmIHlvdSBkZXNpcmUgdG8gYXBwbHkgb2Zmc2V0cyB0byB5b3VyIHBvcHBlcnMgaW4gYSB3YXkgdGhhdCBtYXkgbWFrZSB0aGVtIG92ZXJsYXBcbiAgICogPiB3aXRoIHRoZWlyIHJlZmVyZW5jZSBlbGVtZW50LCB1bmZvcnR1bmF0ZWx5LCB5b3Ugd2lsbCBoYXZlIHRvIGRpc2FibGUgdGhlIGBmbGlwYCBtb2RpZmllci5cbiAgICogPiBZb3UgY2FuIHJlYWQgbW9yZSBvbiB0aGlzIGF0IHRoaXMgW2lzc3VlXShodHRwczovL2dpdGh1Yi5jb20vRmV6VnJhc3RhL3BvcHBlci5qcy9pc3N1ZXMvMzczKS5cbiAgICpcbiAgICogQG1lbWJlcm9mIG1vZGlmaWVyc1xuICAgKiBAaW5uZXJcbiAgICovXG4gIG9mZnNldDoge1xuICAgIC8qKiBAcHJvcCB7bnVtYmVyfSBvcmRlcj0yMDAgLSBJbmRleCB1c2VkIHRvIGRlZmluZSB0aGUgb3JkZXIgb2YgZXhlY3V0aW9uICovXG4gICAgb3JkZXI6IDIwMCxcbiAgICAvKiogQHByb3Age0Jvb2xlYW59IGVuYWJsZWQ9dHJ1ZSAtIFdoZXRoZXIgdGhlIG1vZGlmaWVyIGlzIGVuYWJsZWQgb3Igbm90ICovXG4gICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAvKiogQHByb3Age01vZGlmaWVyRm59ICovXG4gICAgZm46IG9mZnNldCxcbiAgICAvKiogQHByb3Age051bWJlcnxTdHJpbmd9IG9mZnNldD0wXG4gICAgICogVGhlIG9mZnNldCB2YWx1ZSBhcyBkZXNjcmliZWQgaW4gdGhlIG1vZGlmaWVyIGRlc2NyaXB0aW9uXG4gICAgICovXG4gICAgb2Zmc2V0OiAwXG4gIH0sXG5cbiAgLyoqXG4gICAqIE1vZGlmaWVyIHVzZWQgdG8gcHJldmVudCB0aGUgcG9wcGVyIGZyb20gYmVpbmcgcG9zaXRpb25lZCBvdXRzaWRlIHRoZSBib3VuZGFyeS5cbiAgICpcbiAgICogQSBzY2VuYXJpbyBleGlzdHMgd2hlcmUgdGhlIHJlZmVyZW5jZSBpdHNlbGYgaXMgbm90IHdpdGhpbiB0aGUgYm91bmRhcmllcy48YnIgLz5cbiAgICogV2UgY2FuIHNheSBpdCBoYXMgXCJlc2NhcGVkIHRoZSBib3VuZGFyaWVzXCIg4oCUIG9yIGp1c3QgXCJlc2NhcGVkXCIuPGJyIC8+XG4gICAqIEluIHRoaXMgY2FzZSB3ZSBuZWVkIHRvIGRlY2lkZSB3aGV0aGVyIHRoZSBwb3BwZXIgc2hvdWxkIGVpdGhlcjpcbiAgICpcbiAgICogLSBkZXRhY2ggZnJvbSB0aGUgcmVmZXJlbmNlIGFuZCByZW1haW4gXCJ0cmFwcGVkXCIgaW4gdGhlIGJvdW5kYXJpZXMsIG9yXG4gICAqIC0gaWYgaXQgc2hvdWxkIGlnbm9yZSB0aGUgYm91bmRhcnkgYW5kIFwiZXNjYXBlIHdpdGggaXRzIHJlZmVyZW5jZVwiXG4gICAqXG4gICAqIFdoZW4gYGVzY2FwZVdpdGhSZWZlcmVuY2VgIGlzIHNldCB0b2B0cnVlYCBhbmQgcmVmZXJlbmNlIGlzIGNvbXBsZXRlbHlcbiAgICogb3V0c2lkZSBpdHMgYm91bmRhcmllcywgdGhlIHBvcHBlciB3aWxsIG92ZXJmbG93IChvciBjb21wbGV0ZWx5IGxlYXZlKVxuICAgKiB0aGUgYm91bmRhcmllcyBpbiBvcmRlciB0byByZW1haW4gYXR0YWNoZWQgdG8gdGhlIGVkZ2Ugb2YgdGhlIHJlZmVyZW5jZS5cbiAgICpcbiAgICogQG1lbWJlcm9mIG1vZGlmaWVyc1xuICAgKiBAaW5uZXJcbiAgICovXG4gIHByZXZlbnRPdmVyZmxvdzoge1xuICAgIC8qKiBAcHJvcCB7bnVtYmVyfSBvcmRlcj0zMDAgLSBJbmRleCB1c2VkIHRvIGRlZmluZSB0aGUgb3JkZXIgb2YgZXhlY3V0aW9uICovXG4gICAgb3JkZXI6IDMwMCxcbiAgICAvKiogQHByb3Age0Jvb2xlYW59IGVuYWJsZWQ9dHJ1ZSAtIFdoZXRoZXIgdGhlIG1vZGlmaWVyIGlzIGVuYWJsZWQgb3Igbm90ICovXG4gICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAvKiogQHByb3Age01vZGlmaWVyRm59ICovXG4gICAgZm46IHByZXZlbnRPdmVyZmxvdyxcbiAgICAvKipcbiAgICAgKiBAcHJvcCB7QXJyYXl9IFtwcmlvcml0eT1bJ2xlZnQnLCdyaWdodCcsJ3RvcCcsJ2JvdHRvbSddXVxuICAgICAqIFBvcHBlciB3aWxsIHRyeSB0byBwcmV2ZW50IG92ZXJmbG93IGZvbGxvd2luZyB0aGVzZSBwcmlvcml0aWVzIGJ5IGRlZmF1bHQsXG4gICAgICogdGhlbiwgaXQgY291bGQgb3ZlcmZsb3cgb24gdGhlIGxlZnQgYW5kIG9uIHRvcCBvZiB0aGUgYGJvdW5kYXJpZXNFbGVtZW50YFxuICAgICAqL1xuICAgIHByaW9yaXR5OiBbJ2xlZnQnLCAncmlnaHQnLCAndG9wJywgJ2JvdHRvbSddLFxuICAgIC8qKlxuICAgICAqIEBwcm9wIHtudW1iZXJ9IHBhZGRpbmc9NVxuICAgICAqIEFtb3VudCBvZiBwaXhlbCB1c2VkIHRvIGRlZmluZSBhIG1pbmltdW0gZGlzdGFuY2UgYmV0d2VlbiB0aGUgYm91bmRhcmllc1xuICAgICAqIGFuZCB0aGUgcG9wcGVyLiBUaGlzIG1ha2VzIHN1cmUgdGhlIHBvcHBlciBhbHdheXMgaGFzIGEgbGl0dGxlIHBhZGRpbmdcbiAgICAgKiBiZXR3ZWVuIHRoZSBlZGdlcyBvZiBpdHMgY29udGFpbmVyXG4gICAgICovXG4gICAgcGFkZGluZzogNSxcbiAgICAvKipcbiAgICAgKiBAcHJvcCB7U3RyaW5nfEhUTUxFbGVtZW50fSBib3VuZGFyaWVzRWxlbWVudD0nc2Nyb2xsUGFyZW50J1xuICAgICAqIEJvdW5kYXJpZXMgdXNlZCBieSB0aGUgbW9kaWZpZXIuIENhbiBiZSBgc2Nyb2xsUGFyZW50YCwgYHdpbmRvd2AsXG4gICAgICogYHZpZXdwb3J0YCBvciBhbnkgRE9NIGVsZW1lbnQuXG4gICAgICovXG4gICAgYm91bmRhcmllc0VsZW1lbnQ6ICdzY3JvbGxQYXJlbnQnXG4gIH0sXG5cbiAgLyoqXG4gICAqIE1vZGlmaWVyIHVzZWQgdG8gbWFrZSBzdXJlIHRoZSByZWZlcmVuY2UgYW5kIGl0cyBwb3BwZXIgc3RheSBuZWFyIGVhY2ggb3RoZXJcbiAgICogd2l0aG91dCBsZWF2aW5nIGFueSBnYXAgYmV0d2VlbiB0aGUgdHdvLiBFc3BlY2lhbGx5IHVzZWZ1bCB3aGVuIHRoZSBhcnJvdyBpc1xuICAgKiBlbmFibGVkIGFuZCB5b3Ugd2FudCB0byBlbnN1cmUgdGhhdCBpdCBwb2ludHMgdG8gaXRzIHJlZmVyZW5jZSBlbGVtZW50LlxuICAgKiBJdCBjYXJlcyBvbmx5IGFib3V0IHRoZSBmaXJzdCBheGlzLiBZb3UgY2FuIHN0aWxsIGhhdmUgcG9wcGVycyB3aXRoIG1hcmdpblxuICAgKiBiZXR3ZWVuIHRoZSBwb3BwZXIgYW5kIGl0cyByZWZlcmVuY2UgZWxlbWVudC5cbiAgICogQG1lbWJlcm9mIG1vZGlmaWVyc1xuICAgKiBAaW5uZXJcbiAgICovXG4gIGtlZXBUb2dldGhlcjoge1xuICAgIC8qKiBAcHJvcCB7bnVtYmVyfSBvcmRlcj00MDAgLSBJbmRleCB1c2VkIHRvIGRlZmluZSB0aGUgb3JkZXIgb2YgZXhlY3V0aW9uICovXG4gICAgb3JkZXI6IDQwMCxcbiAgICAvKiogQHByb3Age0Jvb2xlYW59IGVuYWJsZWQ9dHJ1ZSAtIFdoZXRoZXIgdGhlIG1vZGlmaWVyIGlzIGVuYWJsZWQgb3Igbm90ICovXG4gICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAvKiogQHByb3Age01vZGlmaWVyRm59ICovXG4gICAgZm46IGtlZXBUb2dldGhlclxuICB9LFxuXG4gIC8qKlxuICAgKiBUaGlzIG1vZGlmaWVyIGlzIHVzZWQgdG8gbW92ZSB0aGUgYGFycm93RWxlbWVudGAgb2YgdGhlIHBvcHBlciB0byBtYWtlXG4gICAqIHN1cmUgaXQgaXMgcG9zaXRpb25lZCBiZXR3ZWVuIHRoZSByZWZlcmVuY2UgZWxlbWVudCBhbmQgaXRzIHBvcHBlciBlbGVtZW50LlxuICAgKiBJdCB3aWxsIHJlYWQgdGhlIG91dGVyIHNpemUgb2YgdGhlIGBhcnJvd0VsZW1lbnRgIG5vZGUgdG8gZGV0ZWN0IGhvdyBtYW55XG4gICAqIHBpeGVscyBvZiBjb25qdW5jdGlvbiBhcmUgbmVlZGVkLlxuICAgKlxuICAgKiBJdCBoYXMgbm8gZWZmZWN0IGlmIG5vIGBhcnJvd0VsZW1lbnRgIGlzIHByb3ZpZGVkLlxuICAgKiBAbWVtYmVyb2YgbW9kaWZpZXJzXG4gICAqIEBpbm5lclxuICAgKi9cbiAgYXJyb3c6IHtcbiAgICAvKiogQHByb3Age251bWJlcn0gb3JkZXI9NTAwIC0gSW5kZXggdXNlZCB0byBkZWZpbmUgdGhlIG9yZGVyIG9mIGV4ZWN1dGlvbiAqL1xuICAgIG9yZGVyOiA1MDAsXG4gICAgLyoqIEBwcm9wIHtCb29sZWFufSBlbmFibGVkPXRydWUgLSBXaGV0aGVyIHRoZSBtb2RpZmllciBpcyBlbmFibGVkIG9yIG5vdCAqL1xuICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgLyoqIEBwcm9wIHtNb2RpZmllckZufSAqL1xuICAgIGZuOiBhcnJvdyxcbiAgICAvKiogQHByb3Age1N0cmluZ3xIVE1MRWxlbWVudH0gZWxlbWVudD0nW3gtYXJyb3ddJyAtIFNlbGVjdG9yIG9yIG5vZGUgdXNlZCBhcyBhcnJvdyAqL1xuICAgIGVsZW1lbnQ6ICdbeC1hcnJvd10nXG4gIH0sXG5cbiAgLyoqXG4gICAqIE1vZGlmaWVyIHVzZWQgdG8gZmxpcCB0aGUgcG9wcGVyJ3MgcGxhY2VtZW50IHdoZW4gaXQgc3RhcnRzIHRvIG92ZXJsYXAgaXRzXG4gICAqIHJlZmVyZW5jZSBlbGVtZW50LlxuICAgKlxuICAgKiBSZXF1aXJlcyB0aGUgYHByZXZlbnRPdmVyZmxvd2AgbW9kaWZpZXIgYmVmb3JlIGl0IGluIG9yZGVyIHRvIHdvcmsuXG4gICAqXG4gICAqICoqTk9URToqKiB0aGlzIG1vZGlmaWVyIHdpbGwgaW50ZXJydXB0IHRoZSBjdXJyZW50IHVwZGF0ZSBjeWNsZSBhbmQgd2lsbFxuICAgKiByZXN0YXJ0IGl0IGlmIGl0IGRldGVjdHMgdGhlIG5lZWQgdG8gZmxpcCB0aGUgcGxhY2VtZW50LlxuICAgKiBAbWVtYmVyb2YgbW9kaWZpZXJzXG4gICAqIEBpbm5lclxuICAgKi9cbiAgZmxpcDoge1xuICAgIC8qKiBAcHJvcCB7bnVtYmVyfSBvcmRlcj02MDAgLSBJbmRleCB1c2VkIHRvIGRlZmluZSB0aGUgb3JkZXIgb2YgZXhlY3V0aW9uICovXG4gICAgb3JkZXI6IDYwMCxcbiAgICAvKiogQHByb3Age0Jvb2xlYW59IGVuYWJsZWQ9dHJ1ZSAtIFdoZXRoZXIgdGhlIG1vZGlmaWVyIGlzIGVuYWJsZWQgb3Igbm90ICovXG4gICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAvKiogQHByb3Age01vZGlmaWVyRm59ICovXG4gICAgZm46IGZsaXAsXG4gICAgLyoqXG4gICAgICogQHByb3Age1N0cmluZ3xBcnJheX0gYmVoYXZpb3I9J2ZsaXAnXG4gICAgICogVGhlIGJlaGF2aW9yIHVzZWQgdG8gY2hhbmdlIHRoZSBwb3BwZXIncyBwbGFjZW1lbnQuIEl0IGNhbiBiZSBvbmUgb2ZcbiAgICAgKiBgZmxpcGAsIGBjbG9ja3dpc2VgLCBgY291bnRlcmNsb2Nrd2lzZWAgb3IgYW4gYXJyYXkgd2l0aCBhIGxpc3Qgb2YgdmFsaWRcbiAgICAgKiBwbGFjZW1lbnRzICh3aXRoIG9wdGlvbmFsIHZhcmlhdGlvbnMpXG4gICAgICovXG4gICAgYmVoYXZpb3I6ICdmbGlwJyxcbiAgICAvKipcbiAgICAgKiBAcHJvcCB7bnVtYmVyfSBwYWRkaW5nPTVcbiAgICAgKiBUaGUgcG9wcGVyIHdpbGwgZmxpcCBpZiBpdCBoaXRzIHRoZSBlZGdlcyBvZiB0aGUgYGJvdW5kYXJpZXNFbGVtZW50YFxuICAgICAqL1xuICAgIHBhZGRpbmc6IDUsXG4gICAgLyoqXG4gICAgICogQHByb3Age1N0cmluZ3xIVE1MRWxlbWVudH0gYm91bmRhcmllc0VsZW1lbnQ9J3ZpZXdwb3J0J1xuICAgICAqIFRoZSBlbGVtZW50IHdoaWNoIHdpbGwgZGVmaW5lIHRoZSBib3VuZGFyaWVzIG9mIHRoZSBwb3BwZXIgcG9zaXRpb24uXG4gICAgICogVGhlIHBvcHBlciB3aWxsIG5ldmVyIGJlIHBsYWNlZCBvdXRzaWRlIG9mIHRoZSBkZWZpbmVkIGJvdW5kYXJpZXNcbiAgICAgKiAoZXhjZXB0IGlmIGBrZWVwVG9nZXRoZXJgIGlzIGVuYWJsZWQpXG4gICAgICovXG4gICAgYm91bmRhcmllc0VsZW1lbnQ6ICd2aWV3cG9ydCcsXG4gICAgLyoqXG4gICAgICogQHByb3Age0Jvb2xlYW59IGZsaXBWYXJpYXRpb25zPWZhbHNlXG4gICAgICogVGhlIHBvcHBlciB3aWxsIHN3aXRjaCBwbGFjZW1lbnQgdmFyaWF0aW9uIGJldHdlZW4gYC1zdGFydGAgYW5kIGAtZW5kYCB3aGVuXG4gICAgICogdGhlIHJlZmVyZW5jZSBlbGVtZW50IG92ZXJsYXBzIGl0cyBib3VuZGFyaWVzLlxuICAgICAqXG4gICAgICogVGhlIG9yaWdpbmFsIHBsYWNlbWVudCBzaG91bGQgaGF2ZSBhIHNldCB2YXJpYXRpb24uXG4gICAgICovXG4gICAgZmxpcFZhcmlhdGlvbnM6IGZhbHNlLFxuICAgIC8qKlxuICAgICAqIEBwcm9wIHtCb29sZWFufSBmbGlwVmFyaWF0aW9uc0J5Q29udGVudD1mYWxzZVxuICAgICAqIFRoZSBwb3BwZXIgd2lsbCBzd2l0Y2ggcGxhY2VtZW50IHZhcmlhdGlvbiBiZXR3ZWVuIGAtc3RhcnRgIGFuZCBgLWVuZGAgd2hlblxuICAgICAqIHRoZSBwb3BwZXIgZWxlbWVudCBvdmVybGFwcyBpdHMgcmVmZXJlbmNlIGJvdW5kYXJpZXMuXG4gICAgICpcbiAgICAgKiBUaGUgb3JpZ2luYWwgcGxhY2VtZW50IHNob3VsZCBoYXZlIGEgc2V0IHZhcmlhdGlvbi5cbiAgICAgKi9cbiAgICBmbGlwVmFyaWF0aW9uc0J5Q29udGVudDogZmFsc2VcbiAgfSxcblxuICAvKipcbiAgICogTW9kaWZpZXIgdXNlZCB0byBtYWtlIHRoZSBwb3BwZXIgZmxvdyB0b3dhcmQgdGhlIGlubmVyIG9mIHRoZSByZWZlcmVuY2UgZWxlbWVudC5cbiAgICogQnkgZGVmYXVsdCwgd2hlbiB0aGlzIG1vZGlmaWVyIGlzIGRpc2FibGVkLCB0aGUgcG9wcGVyIHdpbGwgYmUgcGxhY2VkIG91dHNpZGVcbiAgICogdGhlIHJlZmVyZW5jZSBlbGVtZW50LlxuICAgKiBAbWVtYmVyb2YgbW9kaWZpZXJzXG4gICAqIEBpbm5lclxuICAgKi9cbiAgaW5uZXI6IHtcbiAgICAvKiogQHByb3Age251bWJlcn0gb3JkZXI9NzAwIC0gSW5kZXggdXNlZCB0byBkZWZpbmUgdGhlIG9yZGVyIG9mIGV4ZWN1dGlvbiAqL1xuICAgIG9yZGVyOiA3MDAsXG4gICAgLyoqIEBwcm9wIHtCb29sZWFufSBlbmFibGVkPWZhbHNlIC0gV2hldGhlciB0aGUgbW9kaWZpZXIgaXMgZW5hYmxlZCBvciBub3QgKi9cbiAgICBlbmFibGVkOiBmYWxzZSxcbiAgICAvKiogQHByb3Age01vZGlmaWVyRm59ICovXG4gICAgZm46IGlubmVyXG4gIH0sXG5cbiAgLyoqXG4gICAqIE1vZGlmaWVyIHVzZWQgdG8gaGlkZSB0aGUgcG9wcGVyIHdoZW4gaXRzIHJlZmVyZW5jZSBlbGVtZW50IGlzIG91dHNpZGUgb2YgdGhlXG4gICAqIHBvcHBlciBib3VuZGFyaWVzLiBJdCB3aWxsIHNldCBhIGB4LW91dC1vZi1ib3VuZGFyaWVzYCBhdHRyaWJ1dGUgd2hpY2ggY2FuXG4gICAqIGJlIHVzZWQgdG8gaGlkZSB3aXRoIGEgQ1NTIHNlbGVjdG9yIHRoZSBwb3BwZXIgd2hlbiBpdHMgcmVmZXJlbmNlIGlzXG4gICAqIG91dCBvZiBib3VuZGFyaWVzLlxuICAgKlxuICAgKiBSZXF1aXJlcyB0aGUgYHByZXZlbnRPdmVyZmxvd2AgbW9kaWZpZXIgYmVmb3JlIGl0IGluIG9yZGVyIHRvIHdvcmsuXG4gICAqIEBtZW1iZXJvZiBtb2RpZmllcnNcbiAgICogQGlubmVyXG4gICAqL1xuICBoaWRlOiB7XG4gICAgLyoqIEBwcm9wIHtudW1iZXJ9IG9yZGVyPTgwMCAtIEluZGV4IHVzZWQgdG8gZGVmaW5lIHRoZSBvcmRlciBvZiBleGVjdXRpb24gKi9cbiAgICBvcmRlcjogODAwLFxuICAgIC8qKiBAcHJvcCB7Qm9vbGVhbn0gZW5hYmxlZD10cnVlIC0gV2hldGhlciB0aGUgbW9kaWZpZXIgaXMgZW5hYmxlZCBvciBub3QgKi9cbiAgICBlbmFibGVkOiB0cnVlLFxuICAgIC8qKiBAcHJvcCB7TW9kaWZpZXJGbn0gKi9cbiAgICBmbjogaGlkZVxuICB9LFxuXG4gIC8qKlxuICAgKiBDb21wdXRlcyB0aGUgc3R5bGUgdGhhdCB3aWxsIGJlIGFwcGxpZWQgdG8gdGhlIHBvcHBlciBlbGVtZW50IHRvIGdldHNcbiAgICogcHJvcGVybHkgcG9zaXRpb25lZC5cbiAgICpcbiAgICogTm90ZSB0aGF0IHRoaXMgbW9kaWZpZXIgd2lsbCBub3QgdG91Y2ggdGhlIERPTSwgaXQganVzdCBwcmVwYXJlcyB0aGUgc3R5bGVzXG4gICAqIHNvIHRoYXQgYGFwcGx5U3R5bGVgIG1vZGlmaWVyIGNhbiBhcHBseSBpdC4gVGhpcyBzZXBhcmF0aW9uIGlzIHVzZWZ1bFxuICAgKiBpbiBjYXNlIHlvdSBuZWVkIHRvIHJlcGxhY2UgYGFwcGx5U3R5bGVgIHdpdGggYSBjdXN0b20gaW1wbGVtZW50YXRpb24uXG4gICAqXG4gICAqIFRoaXMgbW9kaWZpZXIgaGFzIGA4NTBgIGFzIGBvcmRlcmAgdmFsdWUgdG8gbWFpbnRhaW4gYmFja3dhcmQgY29tcGF0aWJpbGl0eVxuICAgKiB3aXRoIHByZXZpb3VzIHZlcnNpb25zIG9mIFBvcHBlci5qcy4gRXhwZWN0IHRoZSBtb2RpZmllcnMgb3JkZXJpbmcgbWV0aG9kXG4gICAqIHRvIGNoYW5nZSBpbiBmdXR1cmUgbWFqb3IgdmVyc2lvbnMgb2YgdGhlIGxpYnJhcnkuXG4gICAqXG4gICAqIEBtZW1iZXJvZiBtb2RpZmllcnNcbiAgICogQGlubmVyXG4gICAqL1xuICBjb21wdXRlU3R5bGU6IHtcbiAgICAvKiogQHByb3Age251bWJlcn0gb3JkZXI9ODUwIC0gSW5kZXggdXNlZCB0byBkZWZpbmUgdGhlIG9yZGVyIG9mIGV4ZWN1dGlvbiAqL1xuICAgIG9yZGVyOiA4NTAsXG4gICAgLyoqIEBwcm9wIHtCb29sZWFufSBlbmFibGVkPXRydWUgLSBXaGV0aGVyIHRoZSBtb2RpZmllciBpcyBlbmFibGVkIG9yIG5vdCAqL1xuICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgLyoqIEBwcm9wIHtNb2RpZmllckZufSAqL1xuICAgIGZuOiBjb21wdXRlU3R5bGUsXG4gICAgLyoqXG4gICAgICogQHByb3Age0Jvb2xlYW59IGdwdUFjY2VsZXJhdGlvbj10cnVlXG4gICAgICogSWYgdHJ1ZSwgaXQgdXNlcyB0aGUgQ1NTIDNEIHRyYW5zZm9ybWF0aW9uIHRvIHBvc2l0aW9uIHRoZSBwb3BwZXIuXG4gICAgICogT3RoZXJ3aXNlLCBpdCB3aWxsIHVzZSB0aGUgYHRvcGAgYW5kIGBsZWZ0YCBwcm9wZXJ0aWVzXG4gICAgICovXG4gICAgZ3B1QWNjZWxlcmF0aW9uOiB0cnVlLFxuICAgIC8qKlxuICAgICAqIEBwcm9wIHtzdHJpbmd9IFt4PSdib3R0b20nXVxuICAgICAqIFdoZXJlIHRvIGFuY2hvciB0aGUgWCBheGlzIChgYm90dG9tYCBvciBgdG9wYCkuIEFLQSBYIG9mZnNldCBvcmlnaW4uXG4gICAgICogQ2hhbmdlIHRoaXMgaWYgeW91ciBwb3BwZXIgc2hvdWxkIGdyb3cgaW4gYSBkaXJlY3Rpb24gZGlmZmVyZW50IGZyb20gYGJvdHRvbWBcbiAgICAgKi9cbiAgICB4OiAnYm90dG9tJyxcbiAgICAvKipcbiAgICAgKiBAcHJvcCB7c3RyaW5nfSBbeD0nbGVmdCddXG4gICAgICogV2hlcmUgdG8gYW5jaG9yIHRoZSBZIGF4aXMgKGBsZWZ0YCBvciBgcmlnaHRgKS4gQUtBIFkgb2Zmc2V0IG9yaWdpbi5cbiAgICAgKiBDaGFuZ2UgdGhpcyBpZiB5b3VyIHBvcHBlciBzaG91bGQgZ3JvdyBpbiBhIGRpcmVjdGlvbiBkaWZmZXJlbnQgZnJvbSBgcmlnaHRgXG4gICAgICovXG4gICAgeTogJ3JpZ2h0J1xuICB9LFxuXG4gIC8qKlxuICAgKiBBcHBsaWVzIHRoZSBjb21wdXRlZCBzdHlsZXMgdG8gdGhlIHBvcHBlciBlbGVtZW50LlxuICAgKlxuICAgKiBBbGwgdGhlIERPTSBtYW5pcHVsYXRpb25zIGFyZSBsaW1pdGVkIHRvIHRoaXMgbW9kaWZpZXIuIFRoaXMgaXMgdXNlZnVsIGluIGNhc2VcbiAgICogeW91IHdhbnQgdG8gaW50ZWdyYXRlIFBvcHBlci5qcyBpbnNpZGUgYSBmcmFtZXdvcmsgb3IgdmlldyBsaWJyYXJ5IGFuZCB5b3VcbiAgICogd2FudCB0byBkZWxlZ2F0ZSBhbGwgdGhlIERPTSBtYW5pcHVsYXRpb25zIHRvIGl0LlxuICAgKlxuICAgKiBOb3RlIHRoYXQgaWYgeW91IGRpc2FibGUgdGhpcyBtb2RpZmllciwgeW91IG11c3QgbWFrZSBzdXJlIHRoZSBwb3BwZXIgZWxlbWVudFxuICAgKiBoYXMgaXRzIHBvc2l0aW9uIHNldCB0byBgYWJzb2x1dGVgIGJlZm9yZSBQb3BwZXIuanMgY2FuIGRvIGl0cyB3b3JrIVxuICAgKlxuICAgKiBKdXN0IGRpc2FibGUgdGhpcyBtb2RpZmllciBhbmQgZGVmaW5lIHlvdXIgb3duIHRvIGFjaGlldmUgdGhlIGRlc2lyZWQgZWZmZWN0LlxuICAgKlxuICAgKiBAbWVtYmVyb2YgbW9kaWZpZXJzXG4gICAqIEBpbm5lclxuICAgKi9cbiAgYXBwbHlTdHlsZToge1xuICAgIC8qKiBAcHJvcCB7bnVtYmVyfSBvcmRlcj05MDAgLSBJbmRleCB1c2VkIHRvIGRlZmluZSB0aGUgb3JkZXIgb2YgZXhlY3V0aW9uICovXG4gICAgb3JkZXI6IDkwMCxcbiAgICAvKiogQHByb3Age0Jvb2xlYW59IGVuYWJsZWQ9dHJ1ZSAtIFdoZXRoZXIgdGhlIG1vZGlmaWVyIGlzIGVuYWJsZWQgb3Igbm90ICovXG4gICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAvKiogQHByb3Age01vZGlmaWVyRm59ICovXG4gICAgZm46IGFwcGx5U3R5bGUsXG4gICAgLyoqIEBwcm9wIHtGdW5jdGlvbn0gKi9cbiAgICBvbkxvYWQ6IGFwcGx5U3R5bGVPbkxvYWQsXG4gICAgLyoqXG4gICAgICogQGRlcHJlY2F0ZWQgc2luY2UgdmVyc2lvbiAxLjEwLjAsIHRoZSBwcm9wZXJ0eSBtb3ZlZCB0byBgY29tcHV0ZVN0eWxlYCBtb2RpZmllclxuICAgICAqIEBwcm9wIHtCb29sZWFufSBncHVBY2NlbGVyYXRpb249dHJ1ZVxuICAgICAqIElmIHRydWUsIGl0IHVzZXMgdGhlIENTUyAzRCB0cmFuc2Zvcm1hdGlvbiB0byBwb3NpdGlvbiB0aGUgcG9wcGVyLlxuICAgICAqIE90aGVyd2lzZSwgaXQgd2lsbCB1c2UgdGhlIGB0b3BgIGFuZCBgbGVmdGAgcHJvcGVydGllc1xuICAgICAqL1xuICAgIGdwdUFjY2VsZXJhdGlvbjogdW5kZWZpbmVkXG4gIH1cbn07XG5cbi8qKlxuICogVGhlIGBkYXRhT2JqZWN0YCBpcyBhbiBvYmplY3QgY29udGFpbmluZyBhbGwgdGhlIGluZm9ybWF0aW9uIHVzZWQgYnkgUG9wcGVyLmpzLlxuICogVGhpcyBvYmplY3QgaXMgcGFzc2VkIHRvIG1vZGlmaWVycyBhbmQgdG8gdGhlIGBvbkNyZWF0ZWAgYW5kIGBvblVwZGF0ZWAgY2FsbGJhY2tzLlxuICogQG5hbWUgZGF0YU9iamVjdFxuICogQHByb3BlcnR5IHtPYmplY3R9IGRhdGEuaW5zdGFuY2UgVGhlIFBvcHBlci5qcyBpbnN0YW5jZVxuICogQHByb3BlcnR5IHtTdHJpbmd9IGRhdGEucGxhY2VtZW50IFBsYWNlbWVudCBhcHBsaWVkIHRvIHBvcHBlclxuICogQHByb3BlcnR5IHtTdHJpbmd9IGRhdGEub3JpZ2luYWxQbGFjZW1lbnQgUGxhY2VtZW50IG9yaWdpbmFsbHkgZGVmaW5lZCBvbiBpbml0XG4gKiBAcHJvcGVydHkge0Jvb2xlYW59IGRhdGEuZmxpcHBlZCBUcnVlIGlmIHBvcHBlciBoYXMgYmVlbiBmbGlwcGVkIGJ5IGZsaXAgbW9kaWZpZXJcbiAqIEBwcm9wZXJ0eSB7Qm9vbGVhbn0gZGF0YS5oaWRlIFRydWUgaWYgdGhlIHJlZmVyZW5jZSBlbGVtZW50IGlzIG91dCBvZiBib3VuZGFyaWVzLCB1c2VmdWwgdG8ga25vdyB3aGVuIHRvIGhpZGUgdGhlIHBvcHBlclxuICogQHByb3BlcnR5IHtIVE1MRWxlbWVudH0gZGF0YS5hcnJvd0VsZW1lbnQgTm9kZSB1c2VkIGFzIGFycm93IGJ5IGFycm93IG1vZGlmaWVyXG4gKiBAcHJvcGVydHkge09iamVjdH0gZGF0YS5zdHlsZXMgQW55IENTUyBwcm9wZXJ0eSBkZWZpbmVkIGhlcmUgd2lsbCBiZSBhcHBsaWVkIHRvIHRoZSBwb3BwZXIuIEl0IGV4cGVjdHMgdGhlIEphdmFTY3JpcHQgbm9tZW5jbGF0dXJlIChlZy4gYG1hcmdpbkJvdHRvbWApXG4gKiBAcHJvcGVydHkge09iamVjdH0gZGF0YS5hcnJvd1N0eWxlcyBBbnkgQ1NTIHByb3BlcnR5IGRlZmluZWQgaGVyZSB3aWxsIGJlIGFwcGxpZWQgdG8gdGhlIHBvcHBlciBhcnJvdy4gSXQgZXhwZWN0cyB0aGUgSmF2YVNjcmlwdCBub21lbmNsYXR1cmUgKGVnLiBgbWFyZ2luQm90dG9tYClcbiAqIEBwcm9wZXJ0eSB7T2JqZWN0fSBkYXRhLmJvdW5kYXJpZXMgT2Zmc2V0cyBvZiB0aGUgcG9wcGVyIGJvdW5kYXJpZXNcbiAqIEBwcm9wZXJ0eSB7T2JqZWN0fSBkYXRhLm9mZnNldHMgVGhlIG1lYXN1cmVtZW50cyBvZiBwb3BwZXIsIHJlZmVyZW5jZSBhbmQgYXJyb3cgZWxlbWVudHNcbiAqIEBwcm9wZXJ0eSB7T2JqZWN0fSBkYXRhLm9mZnNldHMucG9wcGVyIGB0b3BgLCBgbGVmdGAsIGB3aWR0aGAsIGBoZWlnaHRgIHZhbHVlc1xuICogQHByb3BlcnR5IHtPYmplY3R9IGRhdGEub2Zmc2V0cy5yZWZlcmVuY2UgYHRvcGAsIGBsZWZ0YCwgYHdpZHRoYCwgYGhlaWdodGAgdmFsdWVzXG4gKiBAcHJvcGVydHkge09iamVjdH0gZGF0YS5vZmZzZXRzLmFycm93XSBgdG9wYCBhbmQgYGxlZnRgIG9mZnNldHMsIG9ubHkgb25lIG9mIHRoZW0gd2lsbCBiZSBkaWZmZXJlbnQgZnJvbSAwXG4gKi9cblxuLyoqXG4gKiBEZWZhdWx0IG9wdGlvbnMgcHJvdmlkZWQgdG8gUG9wcGVyLmpzIGNvbnN0cnVjdG9yLjxiciAvPlxuICogVGhlc2UgY2FuIGJlIG92ZXJyaWRkZW4gdXNpbmcgdGhlIGBvcHRpb25zYCBhcmd1bWVudCBvZiBQb3BwZXIuanMuPGJyIC8+XG4gKiBUbyBvdmVycmlkZSBhbiBvcHRpb24sIHNpbXBseSBwYXNzIGFuIG9iamVjdCB3aXRoIHRoZSBzYW1lXG4gKiBzdHJ1Y3R1cmUgb2YgdGhlIGBvcHRpb25zYCBvYmplY3QsIGFzIHRoZSAzcmQgYXJndW1lbnQuIEZvciBleGFtcGxlOlxuICogYGBgXG4gKiBuZXcgUG9wcGVyKHJlZiwgcG9wLCB7XG4gKiAgIG1vZGlmaWVyczoge1xuICogICAgIHByZXZlbnRPdmVyZmxvdzogeyBlbmFibGVkOiBmYWxzZSB9XG4gKiAgIH1cbiAqIH0pXG4gKiBgYGBcbiAqIEB0eXBlIHtPYmplY3R9XG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyb2YgUG9wcGVyXG4gKi9cbnZhciBEZWZhdWx0cyA9IHtcbiAgLyoqXG4gICAqIFBvcHBlcidzIHBsYWNlbWVudC5cbiAgICogQHByb3Age1BvcHBlci5wbGFjZW1lbnRzfSBwbGFjZW1lbnQ9J2JvdHRvbSdcbiAgICovXG4gIHBsYWNlbWVudDogJ2JvdHRvbScsXG5cbiAgLyoqXG4gICAqIFNldCB0aGlzIHRvIHRydWUgaWYgeW91IHdhbnQgcG9wcGVyIHRvIHBvc2l0aW9uIGl0IHNlbGYgaW4gJ2ZpeGVkJyBtb2RlXG4gICAqIEBwcm9wIHtCb29sZWFufSBwb3NpdGlvbkZpeGVkPWZhbHNlXG4gICAqL1xuICBwb3NpdGlvbkZpeGVkOiBmYWxzZSxcblxuICAvKipcbiAgICogV2hldGhlciBldmVudHMgKHJlc2l6ZSwgc2Nyb2xsKSBhcmUgaW5pdGlhbGx5IGVuYWJsZWQuXG4gICAqIEBwcm9wIHtCb29sZWFufSBldmVudHNFbmFibGVkPXRydWVcbiAgICovXG4gIGV2ZW50c0VuYWJsZWQ6IHRydWUsXG5cbiAgLyoqXG4gICAqIFNldCB0byB0cnVlIGlmIHlvdSB3YW50IHRvIGF1dG9tYXRpY2FsbHkgcmVtb3ZlIHRoZSBwb3BwZXIgd2hlblxuICAgKiB5b3UgY2FsbCB0aGUgYGRlc3Ryb3lgIG1ldGhvZC5cbiAgICogQHByb3Age0Jvb2xlYW59IHJlbW92ZU9uRGVzdHJveT1mYWxzZVxuICAgKi9cbiAgcmVtb3ZlT25EZXN0cm95OiBmYWxzZSxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgY2FsbGVkIHdoZW4gdGhlIHBvcHBlciBpcyBjcmVhdGVkLjxiciAvPlxuICAgKiBCeSBkZWZhdWx0LCBpdCBpcyBzZXQgdG8gbm8tb3AuPGJyIC8+XG4gICAqIEFjY2VzcyBQb3BwZXIuanMgaW5zdGFuY2Ugd2l0aCBgZGF0YS5pbnN0YW5jZWAuXG4gICAqIEBwcm9wIHtvbkNyZWF0ZX1cbiAgICovXG4gIG9uQ3JlYXRlOiBmdW5jdGlvbiBvbkNyZWF0ZSgpIHt9LFxuXG4gIC8qKlxuICAgKiBDYWxsYmFjayBjYWxsZWQgd2hlbiB0aGUgcG9wcGVyIGlzIHVwZGF0ZWQuIFRoaXMgY2FsbGJhY2sgaXMgbm90IGNhbGxlZFxuICAgKiBvbiB0aGUgaW5pdGlhbGl6YXRpb24vY3JlYXRpb24gb2YgdGhlIHBvcHBlciwgYnV0IG9ubHkgb24gc3Vic2VxdWVudFxuICAgKiB1cGRhdGVzLjxiciAvPlxuICAgKiBCeSBkZWZhdWx0LCBpdCBpcyBzZXQgdG8gbm8tb3AuPGJyIC8+XG4gICAqIEFjY2VzcyBQb3BwZXIuanMgaW5zdGFuY2Ugd2l0aCBgZGF0YS5pbnN0YW5jZWAuXG4gICAqIEBwcm9wIHtvblVwZGF0ZX1cbiAgICovXG4gIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZSgpIHt9LFxuXG4gIC8qKlxuICAgKiBMaXN0IG9mIG1vZGlmaWVycyB1c2VkIHRvIG1vZGlmeSB0aGUgb2Zmc2V0cyBiZWZvcmUgdGhleSBhcmUgYXBwbGllZCB0byB0aGUgcG9wcGVyLlxuICAgKiBUaGV5IHByb3ZpZGUgbW9zdCBvZiB0aGUgZnVuY3Rpb25hbGl0aWVzIG9mIFBvcHBlci5qcy5cbiAgICogQHByb3Age21vZGlmaWVyc31cbiAgICovXG4gIG1vZGlmaWVyczogbW9kaWZpZXJzXG59O1xuXG4vKipcbiAqIEBjYWxsYmFjayBvbkNyZWF0ZVxuICogQHBhcmFtIHtkYXRhT2JqZWN0fSBkYXRhXG4gKi9cblxuLyoqXG4gKiBAY2FsbGJhY2sgb25VcGRhdGVcbiAqIEBwYXJhbSB7ZGF0YU9iamVjdH0gZGF0YVxuICovXG5cbi8vIFV0aWxzXG4vLyBNZXRob2RzXG52YXIgUG9wcGVyID0gZnVuY3Rpb24gKCkge1xuICAvKipcbiAgICogQ3JlYXRlcyBhIG5ldyBQb3BwZXIuanMgaW5zdGFuY2UuXG4gICAqIEBjbGFzcyBQb3BwZXJcbiAgICogQHBhcmFtIHtFbGVtZW50fHJlZmVyZW5jZU9iamVjdH0gcmVmZXJlbmNlIC0gVGhlIHJlZmVyZW5jZSBlbGVtZW50IHVzZWQgdG8gcG9zaXRpb24gdGhlIHBvcHBlclxuICAgKiBAcGFyYW0ge0VsZW1lbnR9IHBvcHBlciAtIFRoZSBIVE1MIC8gWE1MIGVsZW1lbnQgdXNlZCBhcyB0aGUgcG9wcGVyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIC0gWW91ciBjdXN0b20gb3B0aW9ucyB0byBvdmVycmlkZSB0aGUgb25lcyBkZWZpbmVkIGluIFtEZWZhdWx0c10oI2RlZmF1bHRzKVxuICAgKiBAcmV0dXJuIHtPYmplY3R9IGluc3RhbmNlIC0gVGhlIGdlbmVyYXRlZCBQb3BwZXIuanMgaW5zdGFuY2VcbiAgICovXG4gIGZ1bmN0aW9uIFBvcHBlcihyZWZlcmVuY2UsIHBvcHBlcikge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDoge307XG4gICAgY2xhc3NDYWxsQ2hlY2sodGhpcywgUG9wcGVyKTtcblxuICAgIHRoaXMuc2NoZWR1bGVVcGRhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKF90aGlzLnVwZGF0ZSk7XG4gICAgfTtcblxuICAgIC8vIG1ha2UgdXBkYXRlKCkgZGVib3VuY2VkLCBzbyB0aGF0IGl0IG9ubHkgcnVucyBhdCBtb3N0IG9uY2UtcGVyLXRpY2tcbiAgICB0aGlzLnVwZGF0ZSA9IGRlYm91bmNlKHRoaXMudXBkYXRlLmJpbmQodGhpcykpO1xuXG4gICAgLy8gd2l0aCB7fSB3ZSBjcmVhdGUgYSBuZXcgb2JqZWN0IHdpdGggdGhlIG9wdGlvbnMgaW5zaWRlIGl0XG4gICAgdGhpcy5vcHRpb25zID0gX2V4dGVuZHMoe30sIFBvcHBlci5EZWZhdWx0cywgb3B0aW9ucyk7XG5cbiAgICAvLyBpbml0IHN0YXRlXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGlzRGVzdHJveWVkOiBmYWxzZSxcbiAgICAgIGlzQ3JlYXRlZDogZmFsc2UsXG4gICAgICBzY3JvbGxQYXJlbnRzOiBbXVxuICAgIH07XG5cbiAgICAvLyBnZXQgcmVmZXJlbmNlIGFuZCBwb3BwZXIgZWxlbWVudHMgKGFsbG93IGpRdWVyeSB3cmFwcGVycylcbiAgICB0aGlzLnJlZmVyZW5jZSA9IHJlZmVyZW5jZSAmJiByZWZlcmVuY2UuanF1ZXJ5ID8gcmVmZXJlbmNlWzBdIDogcmVmZXJlbmNlO1xuICAgIHRoaXMucG9wcGVyID0gcG9wcGVyICYmIHBvcHBlci5qcXVlcnkgPyBwb3BwZXJbMF0gOiBwb3BwZXI7XG5cbiAgICAvLyBEZWVwIG1lcmdlIG1vZGlmaWVycyBvcHRpb25zXG4gICAgdGhpcy5vcHRpb25zLm1vZGlmaWVycyA9IHt9O1xuICAgIE9iamVjdC5rZXlzKF9leHRlbmRzKHt9LCBQb3BwZXIuRGVmYXVsdHMubW9kaWZpZXJzLCBvcHRpb25zLm1vZGlmaWVycykpLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgIF90aGlzLm9wdGlvbnMubW9kaWZpZXJzW25hbWVdID0gX2V4dGVuZHMoe30sIFBvcHBlci5EZWZhdWx0cy5tb2RpZmllcnNbbmFtZV0gfHwge30sIG9wdGlvbnMubW9kaWZpZXJzID8gb3B0aW9ucy5tb2RpZmllcnNbbmFtZV0gOiB7fSk7XG4gICAgfSk7XG5cbiAgICAvLyBSZWZhY3RvcmluZyBtb2RpZmllcnMnIGxpc3QgKE9iamVjdCA9PiBBcnJheSlcbiAgICB0aGlzLm1vZGlmaWVycyA9IE9iamVjdC5rZXlzKHRoaXMub3B0aW9ucy5tb2RpZmllcnMpLm1hcChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgcmV0dXJuIF9leHRlbmRzKHtcbiAgICAgICAgbmFtZTogbmFtZVxuICAgICAgfSwgX3RoaXMub3B0aW9ucy5tb2RpZmllcnNbbmFtZV0pO1xuICAgIH0pXG4gICAgLy8gc29ydCB0aGUgbW9kaWZpZXJzIGJ5IG9yZGVyXG4gICAgLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgIHJldHVybiBhLm9yZGVyIC0gYi5vcmRlcjtcbiAgICB9KTtcblxuICAgIC8vIG1vZGlmaWVycyBoYXZlIHRoZSBhYmlsaXR5IHRvIGV4ZWN1dGUgYXJiaXRyYXJ5IGNvZGUgd2hlbiBQb3BwZXIuanMgZ2V0IGluaXRlZFxuICAgIC8vIHN1Y2ggY29kZSBpcyBleGVjdXRlZCBpbiB0aGUgc2FtZSBvcmRlciBvZiBpdHMgbW9kaWZpZXJcbiAgICAvLyB0aGV5IGNvdWxkIGFkZCBuZXcgcHJvcGVydGllcyB0byB0aGVpciBvcHRpb25zIGNvbmZpZ3VyYXRpb25cbiAgICAvLyBCRSBBV0FSRTogZG9uJ3QgYWRkIG9wdGlvbnMgdG8gYG9wdGlvbnMubW9kaWZpZXJzLm5hbWVgIGJ1dCB0byBgbW9kaWZpZXJPcHRpb25zYCFcbiAgICB0aGlzLm1vZGlmaWVycy5mb3JFYWNoKGZ1bmN0aW9uIChtb2RpZmllck9wdGlvbnMpIHtcbiAgICAgIGlmIChtb2RpZmllck9wdGlvbnMuZW5hYmxlZCAmJiBpc0Z1bmN0aW9uKG1vZGlmaWVyT3B0aW9ucy5vbkxvYWQpKSB7XG4gICAgICAgIG1vZGlmaWVyT3B0aW9ucy5vbkxvYWQoX3RoaXMucmVmZXJlbmNlLCBfdGhpcy5wb3BwZXIsIF90aGlzLm9wdGlvbnMsIG1vZGlmaWVyT3B0aW9ucywgX3RoaXMuc3RhdGUpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gZmlyZSB0aGUgZmlyc3QgdXBkYXRlIHRvIHBvc2l0aW9uIHRoZSBwb3BwZXIgaW4gdGhlIHJpZ2h0IHBsYWNlXG4gICAgdGhpcy51cGRhdGUoKTtcblxuICAgIHZhciBldmVudHNFbmFibGVkID0gdGhpcy5vcHRpb25zLmV2ZW50c0VuYWJsZWQ7XG4gICAgaWYgKGV2ZW50c0VuYWJsZWQpIHtcbiAgICAgIC8vIHNldHVwIGV2ZW50IGxpc3RlbmVycywgdGhleSB3aWxsIHRha2UgY2FyZSBvZiB1cGRhdGUgdGhlIHBvc2l0aW9uIGluIHNwZWNpZmljIHNpdHVhdGlvbnNcbiAgICAgIHRoaXMuZW5hYmxlRXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB9XG5cbiAgICB0aGlzLnN0YXRlLmV2ZW50c0VuYWJsZWQgPSBldmVudHNFbmFibGVkO1xuICB9XG5cbiAgLy8gV2UgY2FuJ3QgdXNlIGNsYXNzIHByb3BlcnRpZXMgYmVjYXVzZSB0aGV5IGRvbid0IGdldCBsaXN0ZWQgaW4gdGhlXG4gIC8vIGNsYXNzIHByb3RvdHlwZSBhbmQgYnJlYWsgc3R1ZmYgbGlrZSBTaW5vbiBzdHVic1xuXG5cbiAgY3JlYXRlQ2xhc3MoUG9wcGVyLCBbe1xuICAgIGtleTogJ3VwZGF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZSQkMSgpIHtcbiAgICAgIHJldHVybiB1cGRhdGUuY2FsbCh0aGlzKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdkZXN0cm95JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGVzdHJveSQkMSgpIHtcbiAgICAgIHJldHVybiBkZXN0cm95LmNhbGwodGhpcyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZW5hYmxlRXZlbnRMaXN0ZW5lcnMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBlbmFibGVFdmVudExpc3RlbmVycyQkMSgpIHtcbiAgICAgIHJldHVybiBlbmFibGVFdmVudExpc3RlbmVycy5jYWxsKHRoaXMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2Rpc2FibGVFdmVudExpc3RlbmVycycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRpc2FibGVFdmVudExpc3RlbmVycyQkMSgpIHtcbiAgICAgIHJldHVybiBkaXNhYmxlRXZlbnRMaXN0ZW5lcnMuY2FsbCh0aGlzKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTY2hlZHVsZXMgYW4gdXBkYXRlLiBJdCB3aWxsIHJ1biBvbiB0aGUgbmV4dCBVSSB1cGRhdGUgYXZhaWxhYmxlLlxuICAgICAqIEBtZXRob2Qgc2NoZWR1bGVVcGRhdGVcbiAgICAgKiBAbWVtYmVyb2YgUG9wcGVyXG4gICAgICovXG5cblxuICAgIC8qKlxuICAgICAqIENvbGxlY3Rpb24gb2YgdXRpbGl0aWVzIHVzZWZ1bCB3aGVuIHdyaXRpbmcgY3VzdG9tIG1vZGlmaWVycy5cbiAgICAgKiBTdGFydGluZyBmcm9tIHZlcnNpb24gMS43LCB0aGlzIG1ldGhvZCBpcyBhdmFpbGFibGUgb25seSBpZiB5b3VcbiAgICAgKiBpbmNsdWRlIGBwb3BwZXItdXRpbHMuanNgIGJlZm9yZSBgcG9wcGVyLmpzYC5cbiAgICAgKlxuICAgICAqICoqREVQUkVDQVRJT04qKjogVGhpcyB3YXkgdG8gYWNjZXNzIFBvcHBlclV0aWxzIGlzIGRlcHJlY2F0ZWRcbiAgICAgKiBhbmQgd2lsbCBiZSByZW1vdmVkIGluIHYyISBVc2UgdGhlIFBvcHBlclV0aWxzIG1vZHVsZSBkaXJlY3RseSBpbnN0ZWFkLlxuICAgICAqIER1ZSB0byB0aGUgaGlnaCBpbnN0YWJpbGl0eSBvZiB0aGUgbWV0aG9kcyBjb250YWluZWQgaW4gVXRpbHMsIHdlIGNhbid0XG4gICAgICogZ3VhcmFudGVlIHRoZW0gdG8gZm9sbG93IHNlbXZlci4gVXNlIHRoZW0gYXQgeW91ciBvd24gcmlzayFcbiAgICAgKiBAc3RhdGljXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAqIEBkZXByZWNhdGVkIHNpbmNlIHZlcnNpb24gMS44XG4gICAgICogQG1lbWJlciBVdGlsc1xuICAgICAqIEBtZW1iZXJvZiBQb3BwZXJcbiAgICAgKi9cblxuICB9XSk7XG4gIHJldHVybiBQb3BwZXI7XG59KCk7XG5cbi8qKlxuICogVGhlIGByZWZlcmVuY2VPYmplY3RgIGlzIGFuIG9iamVjdCB0aGF0IHByb3ZpZGVzIGFuIGludGVyZmFjZSBjb21wYXRpYmxlIHdpdGggUG9wcGVyLmpzXG4gKiBhbmQgbGV0cyB5b3UgdXNlIGl0IGFzIHJlcGxhY2VtZW50IG9mIGEgcmVhbCBET00gbm9kZS48YnIgLz5cbiAqIFlvdSBjYW4gdXNlIHRoaXMgbWV0aG9kIHRvIHBvc2l0aW9uIGEgcG9wcGVyIHJlbGF0aXZlbHkgdG8gYSBzZXQgb2YgY29vcmRpbmF0ZXNcbiAqIGluIGNhc2UgeW91IGRvbid0IGhhdmUgYSBET00gbm9kZSB0byB1c2UgYXMgcmVmZXJlbmNlLlxuICpcbiAqIGBgYFxuICogbmV3IFBvcHBlcihyZWZlcmVuY2VPYmplY3QsIHBvcHBlck5vZGUpO1xuICogYGBgXG4gKlxuICogTkI6IFRoaXMgZmVhdHVyZSBpc24ndCBzdXBwb3J0ZWQgaW4gSW50ZXJuZXQgRXhwbG9yZXIgMTAuXG4gKiBAbmFtZSByZWZlcmVuY2VPYmplY3RcbiAqIEBwcm9wZXJ0eSB7RnVuY3Rpb259IGRhdGEuZ2V0Qm91bmRpbmdDbGllbnRSZWN0XG4gKiBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIHNldCBvZiBjb29yZGluYXRlcyBjb21wYXRpYmxlIHdpdGggdGhlIG5hdGl2ZSBgZ2V0Qm91bmRpbmdDbGllbnRSZWN0YCBtZXRob2QuXG4gKiBAcHJvcGVydHkge251bWJlcn0gZGF0YS5jbGllbnRXaWR0aFxuICogQW4gRVM2IGdldHRlciB0aGF0IHdpbGwgcmV0dXJuIHRoZSB3aWR0aCBvZiB0aGUgdmlydHVhbCByZWZlcmVuY2UgZWxlbWVudC5cbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBkYXRhLmNsaWVudEhlaWdodFxuICogQW4gRVM2IGdldHRlciB0aGF0IHdpbGwgcmV0dXJuIHRoZSBoZWlnaHQgb2YgdGhlIHZpcnR1YWwgcmVmZXJlbmNlIGVsZW1lbnQuXG4gKi9cblxuXG5Qb3BwZXIuVXRpbHMgPSAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiBnbG9iYWwpLlBvcHBlclV0aWxzO1xuUG9wcGVyLnBsYWNlbWVudHMgPSBwbGFjZW1lbnRzO1xuUG9wcGVyLkRlZmF1bHRzID0gRGVmYXVsdHM7XG5cbmV4cG9ydCBkZWZhdWx0IFBvcHBlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBvcHBlci5qcy5tYXBcbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIGJ0b2EpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlLmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyIHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xuXG5mdW5jdGlvbiBhZGRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlO1xuICB2YXIgdXBkYXRlO1xuICB2YXIgcmVtb3ZlO1xuXG4gIGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuICAgIHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuICAgIHN0eWxlID0gc2luZ2xldG9uIHx8IChzaW5nbGV0b24gPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykpO1xuICAgIHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuICAgIHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUgPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKTtcblxuICAgIHJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG4gICAgfTtcbiAgfVxuXG4gIHVwZGF0ZShvYmopO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICByZW1vdmUoKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307IC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuICAvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cbiAgaWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09ICdib29sZWFuJykge1xuICAgIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuICB9XG5cbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuZXdMaXN0KSAhPT0gJ1tvYmplY3QgQXJyYXldJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRvbVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5Eb21bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5Eb20uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXNlU291cmNlTWFwKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oJycpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnksIGRlZHVwZSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgJyddXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19pXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMl0gPSBcIlwiLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIiBhbmQgXCIpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcblxuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCAnJykuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufSAvLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5cblxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG4gIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn0iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlO1xudmFyIGlzQXJncyA9IHJlcXVpcmUoJy4vaXNBcmd1bWVudHMnKTtcblxudmFyIG9yaWdLZXlzID0gT2JqZWN0LmtleXM7XG52YXIga2V5c1NoaW0gPSBvcmlnS2V5cyA/IGZ1bmN0aW9uIGtleXMobykgeyByZXR1cm4gb3JpZ0tleXMobyk7IH0gOiByZXF1aXJlKCcuL2ltcGxlbWVudGF0aW9uJyk7XG5cbnZhciBvcmlnaW5hbEtleXMgPSBPYmplY3Qua2V5cztcblxua2V5c1NoaW0uc2hpbSA9IGZ1bmN0aW9uIHNoaW1PYmplY3RLZXlzKCkge1xuXHRpZiAoT2JqZWN0LmtleXMpIHtcblx0XHR2YXIga2V5c1dvcmtzV2l0aEFyZ3VtZW50cyA9IChmdW5jdGlvbiAoKSB7XG5cdFx0XHQvLyBTYWZhcmkgNS4wIGJ1Z1xuXHRcdFx0dmFyIGFyZ3MgPSBPYmplY3Qua2V5cyhhcmd1bWVudHMpO1xuXHRcdFx0cmV0dXJuIGFyZ3MgJiYgYXJncy5sZW5ndGggPT09IGFyZ3VtZW50cy5sZW5ndGg7XG5cdFx0fSgxLCAyKSk7XG5cdFx0aWYgKCFrZXlzV29ya3NXaXRoQXJndW1lbnRzKSB7XG5cdFx0XHRPYmplY3Qua2V5cyA9IGZ1bmN0aW9uIGtleXMob2JqZWN0KSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgZnVuYy1uYW1lLW1hdGNoaW5nXG5cdFx0XHRcdGlmIChpc0FyZ3Mob2JqZWN0KSkge1xuXHRcdFx0XHRcdHJldHVybiBvcmlnaW5hbEtleXMoc2xpY2UuY2FsbChvYmplY3QpKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gb3JpZ2luYWxLZXlzKG9iamVjdCk7XG5cdFx0XHR9O1xuXHRcdH1cblx0fSBlbHNlIHtcblx0XHRPYmplY3Qua2V5cyA9IGtleXNTaGltO1xuXHR9XG5cdHJldHVybiBPYmplY3Qua2V5cyB8fCBrZXlzU2hpbTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ga2V5c1NoaW07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB0b1N0ciA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNBcmd1bWVudHModmFsdWUpIHtcblx0dmFyIHN0ciA9IHRvU3RyLmNhbGwodmFsdWUpO1xuXHR2YXIgaXNBcmdzID0gc3RyID09PSAnW29iamVjdCBBcmd1bWVudHNdJztcblx0aWYgKCFpc0FyZ3MpIHtcblx0XHRpc0FyZ3MgPSBzdHIgIT09ICdbb2JqZWN0IEFycmF5XScgJiZcblx0XHRcdHZhbHVlICE9PSBudWxsICYmXG5cdFx0XHR0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmXG5cdFx0XHR0eXBlb2YgdmFsdWUubGVuZ3RoID09PSAnbnVtYmVyJyAmJlxuXHRcdFx0dmFsdWUubGVuZ3RoID49IDAgJiZcblx0XHRcdHRvU3RyLmNhbGwodmFsdWUuY2FsbGVlKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcblx0fVxuXHRyZXR1cm4gaXNBcmdzO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyICRPYmplY3QgPSBPYmplY3Q7XG52YXIgJFR5cGVFcnJvciA9IFR5cGVFcnJvcjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBmbGFncygpIHtcblx0aWYgKHRoaXMgIT0gbnVsbCAmJiB0aGlzICE9PSAkT2JqZWN0KHRoaXMpKSB7XG5cdFx0dGhyb3cgbmV3ICRUeXBlRXJyb3IoJ1JlZ0V4cC5wcm90b3R5cGUuZmxhZ3MgZ2V0dGVyIGNhbGxlZCBvbiBub24tb2JqZWN0Jyk7XG5cdH1cblx0dmFyIHJlc3VsdCA9ICcnO1xuXHRpZiAodGhpcy5nbG9iYWwpIHtcblx0XHRyZXN1bHQgKz0gJ2cnO1xuXHR9XG5cdGlmICh0aGlzLmlnbm9yZUNhc2UpIHtcblx0XHRyZXN1bHQgKz0gJ2knO1xuXHR9XG5cdGlmICh0aGlzLm11bHRpbGluZSkge1xuXHRcdHJlc3VsdCArPSAnbSc7XG5cdH1cblx0aWYgKHRoaXMuZG90QWxsKSB7XG5cdFx0cmVzdWx0ICs9ICdzJztcblx0fVxuXHRpZiAodGhpcy51bmljb2RlKSB7XG5cdFx0cmVzdWx0ICs9ICd1Jztcblx0fVxuXHRpZiAodGhpcy5zdGlja3kpIHtcblx0XHRyZXN1bHQgKz0gJ3knO1xuXHR9XG5cdHJldHVybiByZXN1bHQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW1wbGVtZW50YXRpb24gPSByZXF1aXJlKCcuL2ltcGxlbWVudGF0aW9uJyk7XG5cbnZhciBzdXBwb3J0c0Rlc2NyaXB0b3JzID0gcmVxdWlyZSgnZGVmaW5lLXByb3BlcnRpZXMnKS5zdXBwb3J0c0Rlc2NyaXB0b3JzO1xudmFyICRnT1BEID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciAkVHlwZUVycm9yID0gVHlwZUVycm9yO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdldFBvbHlmaWxsKCkge1xuXHRpZiAoIXN1cHBvcnRzRGVzY3JpcHRvcnMpIHtcblx0XHR0aHJvdyBuZXcgJFR5cGVFcnJvcignUmVnRXhwLnByb3RvdHlwZS5mbGFncyByZXF1aXJlcyBhIHRydWUgRVM1IGVudmlyb25tZW50IHRoYXQgc3VwcG9ydHMgcHJvcGVydHkgZGVzY3JpcHRvcnMnKTtcblx0fVxuXHRpZiAoKC9hL21pZykuZmxhZ3MgPT09ICdnaW0nKSB7XG5cdFx0dmFyIGRlc2NyaXB0b3IgPSAkZ09QRChSZWdFeHAucHJvdG90eXBlLCAnZmxhZ3MnKTtcblx0XHRpZiAoZGVzY3JpcHRvciAmJiB0eXBlb2YgZGVzY3JpcHRvci5nZXQgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mICgvYS8pLmRvdEFsbCA9PT0gJ2Jvb2xlYW4nKSB7XG5cdFx0XHRyZXR1cm4gZGVzY3JpcHRvci5nZXQ7XG5cdFx0fVxuXHR9XG5cdHJldHVybiBpbXBsZW1lbnRhdGlvbjtcbn07XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IGV4cG9ydHMuRVhJVElORyA9IGV4cG9ydHMuRU5URVJFRCA9IGV4cG9ydHMuRU5URVJJTkcgPSBleHBvcnRzLkVYSVRFRCA9IGV4cG9ydHMuVU5NT1VOVEVEID0gdm9pZCAwO1xuXG52YXIgUHJvcFR5cGVzID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZShcInByb3AtdHlwZXNcIikpO1xuXG52YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwicmVhY3RcIikpO1xuXG52YXIgX3JlYWN0RG9tID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwicmVhY3QtZG9tXCIpKTtcblxudmFyIF9yZWFjdExpZmVjeWNsZXNDb21wYXQgPSByZXF1aXJlKFwicmVhY3QtbGlmZWN5Y2xlcy1jb21wYXRcIik7XG5cbnZhciBfUHJvcFR5cGVzID0gcmVxdWlyZShcIi4vdXRpbHMvUHJvcFR5cGVzXCIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGVsc2UgeyB2YXIgbmV3T2JqID0ge307IGlmIChvYmogIT0gbnVsbCkgeyBmb3IgKHZhciBrZXkgaW4gb2JqKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7IHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OyBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsgfSBlbHNlIHsgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IH0gfSBuZXdPYmouZGVmYXVsdCA9IG9iajsgcmV0dXJuIG5ld09iajsgfSB9XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSB7fTsgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpOyB2YXIga2V5LCBpOyBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykgeyBrZXkgPSBzb3VyY2VLZXlzW2ldOyBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7IHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzOyBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBVTk1PVU5URUQgPSAndW5tb3VudGVkJztcbmV4cG9ydHMuVU5NT1VOVEVEID0gVU5NT1VOVEVEO1xudmFyIEVYSVRFRCA9ICdleGl0ZWQnO1xuZXhwb3J0cy5FWElURUQgPSBFWElURUQ7XG52YXIgRU5URVJJTkcgPSAnZW50ZXJpbmcnO1xuZXhwb3J0cy5FTlRFUklORyA9IEVOVEVSSU5HO1xudmFyIEVOVEVSRUQgPSAnZW50ZXJlZCc7XG5leHBvcnRzLkVOVEVSRUQgPSBFTlRFUkVEO1xudmFyIEVYSVRJTkcgPSAnZXhpdGluZyc7XG4vKipcbiAqIFRoZSBUcmFuc2l0aW9uIGNvbXBvbmVudCBsZXRzIHlvdSBkZXNjcmliZSBhIHRyYW5zaXRpb24gZnJvbSBvbmUgY29tcG9uZW50XG4gKiBzdGF0ZSB0byBhbm90aGVyIF9vdmVyIHRpbWVfIHdpdGggYSBzaW1wbGUgZGVjbGFyYXRpdmUgQVBJLiBNb3N0IGNvbW1vbmx5XG4gKiBpdCdzIHVzZWQgdG8gYW5pbWF0ZSB0aGUgbW91bnRpbmcgYW5kIHVubW91bnRpbmcgb2YgYSBjb21wb25lbnQsIGJ1dCBjYW4gYWxzb1xuICogYmUgdXNlZCB0byBkZXNjcmliZSBpbi1wbGFjZSB0cmFuc2l0aW9uIHN0YXRlcyBhcyB3ZWxsLlxuICpcbiAqIC0tLVxuICpcbiAqICoqTm90ZSoqOiBgVHJhbnNpdGlvbmAgaXMgYSBwbGF0Zm9ybS1hZ25vc3RpYyBiYXNlIGNvbXBvbmVudC4gSWYgeW91J3JlIHVzaW5nXG4gKiB0cmFuc2l0aW9ucyBpbiBDU1MsIHlvdSdsbCBwcm9iYWJseSB3YW50IHRvIHVzZVxuICogW2BDU1NUcmFuc2l0aW9uYF0oaHR0cHM6Ly9yZWFjdGNvbW11bml0eS5vcmcvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC9jc3MtdHJhbnNpdGlvbilcbiAqIGluc3RlYWQuIEl0IGluaGVyaXRzIGFsbCB0aGUgZmVhdHVyZXMgb2YgYFRyYW5zaXRpb25gLCBidXQgY29udGFpbnNcbiAqIGFkZGl0aW9uYWwgZmVhdHVyZXMgbmVjZXNzYXJ5IHRvIHBsYXkgbmljZSB3aXRoIENTUyB0cmFuc2l0aW9ucyAoaGVuY2UgdGhlXG4gKiBuYW1lIG9mIHRoZSBjb21wb25lbnQpLlxuICpcbiAqIC0tLVxuICpcbiAqIEJ5IGRlZmF1bHQgdGhlIGBUcmFuc2l0aW9uYCBjb21wb25lbnQgZG9lcyBub3QgYWx0ZXIgdGhlIGJlaGF2aW9yIG9mIHRoZVxuICogY29tcG9uZW50IGl0IHJlbmRlcnMsIGl0IG9ubHkgdHJhY2tzIFwiZW50ZXJcIiBhbmQgXCJleGl0XCIgc3RhdGVzIGZvciB0aGVcbiAqIGNvbXBvbmVudHMuIEl0J3MgdXAgdG8geW91IHRvIGdpdmUgbWVhbmluZyBhbmQgZWZmZWN0IHRvIHRob3NlIHN0YXRlcy4gRm9yXG4gKiBleGFtcGxlIHdlIGNhbiBhZGQgc3R5bGVzIHRvIGEgY29tcG9uZW50IHdoZW4gaXQgZW50ZXJzIG9yIGV4aXRzOlxuICpcbiAqIGBgYGpzeFxuICogaW1wb3J0IHsgVHJhbnNpdGlvbiB9IGZyb20gJ3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAnO1xuICpcbiAqIGNvbnN0IGR1cmF0aW9uID0gMzAwO1xuICpcbiAqIGNvbnN0IGRlZmF1bHRTdHlsZSA9IHtcbiAqICAgdHJhbnNpdGlvbjogYG9wYWNpdHkgJHtkdXJhdGlvbn1tcyBlYXNlLWluLW91dGAsXG4gKiAgIG9wYWNpdHk6IDAsXG4gKiB9XG4gKlxuICogY29uc3QgdHJhbnNpdGlvblN0eWxlcyA9IHtcbiAqICAgZW50ZXJpbmc6IHsgb3BhY2l0eTogMCB9LFxuICogICBlbnRlcmVkOiAgeyBvcGFjaXR5OiAxIH0sXG4gKiB9O1xuICpcbiAqIGNvbnN0IEZhZGUgPSAoeyBpbjogaW5Qcm9wIH0pID0+IChcbiAqICAgPFRyYW5zaXRpb24gaW49e2luUHJvcH0gdGltZW91dD17ZHVyYXRpb259PlxuICogICAgIHtzdGF0ZSA9PiAoXG4gKiAgICAgICA8ZGl2IHN0eWxlPXt7XG4gKiAgICAgICAgIC4uLmRlZmF1bHRTdHlsZSxcbiAqICAgICAgICAgLi4udHJhbnNpdGlvblN0eWxlc1tzdGF0ZV1cbiAqICAgICAgIH19PlxuICogICAgICAgICBJJ20gYSBmYWRlIFRyYW5zaXRpb24hXG4gKiAgICAgICA8L2Rpdj5cbiAqICAgICApfVxuICogICA8L1RyYW5zaXRpb24+XG4gKiApO1xuICogYGBgXG4gKlxuICogVGhlcmUgYXJlIDQgbWFpbiBzdGF0ZXMgYSBUcmFuc2l0aW9uIGNhbiBiZSBpbjpcbiAqICAtIGAnZW50ZXJpbmcnYFxuICogIC0gYCdlbnRlcmVkJ2BcbiAqICAtIGAnZXhpdGluZydgXG4gKiAgLSBgJ2V4aXRlZCdgXG4gKlxuICogVHJhbnNpdGlvbiBzdGF0ZSBpcyB0b2dnbGVkIHZpYSB0aGUgYGluYCBwcm9wLiBXaGVuIGB0cnVlYCB0aGUgY29tcG9uZW50XG4gKiBiZWdpbnMgdGhlIFwiRW50ZXJcIiBzdGFnZS4gRHVyaW5nIHRoaXMgc3RhZ2UsIHRoZSBjb21wb25lbnQgd2lsbCBzaGlmdCBmcm9tXG4gKiBpdHMgY3VycmVudCB0cmFuc2l0aW9uIHN0YXRlLCB0byBgJ2VudGVyaW5nJ2AgZm9yIHRoZSBkdXJhdGlvbiBvZiB0aGVcbiAqIHRyYW5zaXRpb24gYW5kIHRoZW4gdG8gdGhlIGAnZW50ZXJlZCdgIHN0YWdlIG9uY2UgaXQncyBjb21wbGV0ZS4gTGV0J3MgdGFrZVxuICogdGhlIGZvbGxvd2luZyBleGFtcGxlICh3ZSdsbCB1c2UgdGhlXG4gKiBbdXNlU3RhdGVdKGh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9ob29rcy1yZWZlcmVuY2UuaHRtbCN1c2VzdGF0ZSkgaG9vayk6XG4gKlxuICogYGBganN4XG4gKiBmdW5jdGlvbiBBcHAoKSB7XG4gKiAgIGNvbnN0IFtpblByb3AsIHNldEluUHJvcF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gKiAgIHJldHVybiAoXG4gKiAgICAgPGRpdj5cbiAqICAgICAgIDxUcmFuc2l0aW9uIGluPXtpblByb3B9IHRpbWVvdXQ9ezUwMH0+XG4gKiAgICAgICAgIHtzdGF0ZSA9PiAoXG4gKiAgICAgICAgICAgLy8gLi4uXG4gKiAgICAgICAgICl9XG4gKiAgICAgICA8L1RyYW5zaXRpb24+XG4gKiAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IHNldEluUHJvcCh0cnVlKX0+XG4gKiAgICAgICAgIENsaWNrIHRvIEVudGVyXG4gKiAgICAgICA8L2J1dHRvbj5cbiAqICAgICA8L2Rpdj5cbiAqICAgKTtcbiAqIH1cbiAqIGBgYFxuICpcbiAqIFdoZW4gdGhlIGJ1dHRvbiBpcyBjbGlja2VkIHRoZSBjb21wb25lbnQgd2lsbCBzaGlmdCB0byB0aGUgYCdlbnRlcmluZydgIHN0YXRlXG4gKiBhbmQgc3RheSB0aGVyZSBmb3IgNTAwbXMgKHRoZSB2YWx1ZSBvZiBgdGltZW91dGApIGJlZm9yZSBpdCBmaW5hbGx5IHN3aXRjaGVzXG4gKiB0byBgJ2VudGVyZWQnYC5cbiAqXG4gKiBXaGVuIGBpbmAgaXMgYGZhbHNlYCB0aGUgc2FtZSB0aGluZyBoYXBwZW5zIGV4Y2VwdCB0aGUgc3RhdGUgbW92ZXMgZnJvbVxuICogYCdleGl0aW5nJ2AgdG8gYCdleGl0ZWQnYC5cbiAqL1xuXG5leHBvcnRzLkVYSVRJTkcgPSBFWElUSU5HO1xuXG52YXIgVHJhbnNpdGlvbiA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShUcmFuc2l0aW9uLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBUcmFuc2l0aW9uKHByb3BzLCBjb250ZXh0KSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMsIGNvbnRleHQpIHx8IHRoaXM7XG4gICAgdmFyIHBhcmVudEdyb3VwID0gY29udGV4dC50cmFuc2l0aW9uR3JvdXA7IC8vIEluIHRoZSBjb250ZXh0IG9mIGEgVHJhbnNpdGlvbkdyb3VwIGFsbCBlbnRlcnMgYXJlIHJlYWxseSBhcHBlYXJzXG5cbiAgICB2YXIgYXBwZWFyID0gcGFyZW50R3JvdXAgJiYgIXBhcmVudEdyb3VwLmlzTW91bnRpbmcgPyBwcm9wcy5lbnRlciA6IHByb3BzLmFwcGVhcjtcbiAgICB2YXIgaW5pdGlhbFN0YXR1cztcbiAgICBfdGhpcy5hcHBlYXJTdGF0dXMgPSBudWxsO1xuXG4gICAgaWYgKHByb3BzLmluKSB7XG4gICAgICBpZiAoYXBwZWFyKSB7XG4gICAgICAgIGluaXRpYWxTdGF0dXMgPSBFWElURUQ7XG4gICAgICAgIF90aGlzLmFwcGVhclN0YXR1cyA9IEVOVEVSSU5HO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaW5pdGlhbFN0YXR1cyA9IEVOVEVSRUQ7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChwcm9wcy51bm1vdW50T25FeGl0IHx8IHByb3BzLm1vdW50T25FbnRlcikge1xuICAgICAgICBpbml0aWFsU3RhdHVzID0gVU5NT1VOVEVEO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaW5pdGlhbFN0YXR1cyA9IEVYSVRFRDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHN0YXR1czogaW5pdGlhbFN0YXR1c1xuICAgIH07XG4gICAgX3RoaXMubmV4dENhbGxiYWNrID0gbnVsbDtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gVHJhbnNpdGlvbi5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdHJhbnNpdGlvbkdyb3VwOiBudWxsIC8vIGFsbG93cyBmb3IgbmVzdGVkIFRyYW5zaXRpb25zXG5cbiAgICB9O1xuICB9O1xuXG4gIFRyYW5zaXRpb24uZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzID0gZnVuY3Rpb24gZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKF9yZWYsIHByZXZTdGF0ZSkge1xuICAgIHZhciBuZXh0SW4gPSBfcmVmLmluO1xuXG4gICAgaWYgKG5leHRJbiAmJiBwcmV2U3RhdGUuc3RhdHVzID09PSBVTk1PVU5URUQpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN0YXR1czogRVhJVEVEXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9OyAvLyBnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgLy8gICBsZXQgbmV4dFN0YXR1cyA9IG51bGxcbiAgLy8gICBpZiAocHJldlByb3BzICE9PSB0aGlzLnByb3BzKSB7XG4gIC8vICAgICBjb25zdCB7IHN0YXR1cyB9ID0gdGhpcy5zdGF0ZVxuICAvLyAgICAgaWYgKHRoaXMucHJvcHMuaW4pIHtcbiAgLy8gICAgICAgaWYgKHN0YXR1cyAhPT0gRU5URVJJTkcgJiYgc3RhdHVzICE9PSBFTlRFUkVEKSB7XG4gIC8vICAgICAgICAgbmV4dFN0YXR1cyA9IEVOVEVSSU5HXG4gIC8vICAgICAgIH1cbiAgLy8gICAgIH0gZWxzZSB7XG4gIC8vICAgICAgIGlmIChzdGF0dXMgPT09IEVOVEVSSU5HIHx8IHN0YXR1cyA9PT0gRU5URVJFRCkge1xuICAvLyAgICAgICAgIG5leHRTdGF0dXMgPSBFWElUSU5HXG4gIC8vICAgICAgIH1cbiAgLy8gICAgIH1cbiAgLy8gICB9XG4gIC8vICAgcmV0dXJuIHsgbmV4dFN0YXR1cyB9XG4gIC8vIH1cblxuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMudXBkYXRlU3RhdHVzKHRydWUsIHRoaXMuYXBwZWFyU3RhdHVzKTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgIHZhciBuZXh0U3RhdHVzID0gbnVsbDtcblxuICAgIGlmIChwcmV2UHJvcHMgIT09IHRoaXMucHJvcHMpIHtcbiAgICAgIHZhciBzdGF0dXMgPSB0aGlzLnN0YXRlLnN0YXR1cztcblxuICAgICAgaWYgKHRoaXMucHJvcHMuaW4pIHtcbiAgICAgICAgaWYgKHN0YXR1cyAhPT0gRU5URVJJTkcgJiYgc3RhdHVzICE9PSBFTlRFUkVEKSB7XG4gICAgICAgICAgbmV4dFN0YXR1cyA9IEVOVEVSSU5HO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoc3RhdHVzID09PSBFTlRFUklORyB8fCBzdGF0dXMgPT09IEVOVEVSRUQpIHtcbiAgICAgICAgICBuZXh0U3RhdHVzID0gRVhJVElORztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMudXBkYXRlU3RhdHVzKGZhbHNlLCBuZXh0U3RhdHVzKTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLmNhbmNlbE5leHRDYWxsYmFjaygpO1xuICB9O1xuXG4gIF9wcm90by5nZXRUaW1lb3V0cyA9IGZ1bmN0aW9uIGdldFRpbWVvdXRzKCkge1xuICAgIHZhciB0aW1lb3V0ID0gdGhpcy5wcm9wcy50aW1lb3V0O1xuICAgIHZhciBleGl0LCBlbnRlciwgYXBwZWFyO1xuICAgIGV4aXQgPSBlbnRlciA9IGFwcGVhciA9IHRpbWVvdXQ7XG5cbiAgICBpZiAodGltZW91dCAhPSBudWxsICYmIHR5cGVvZiB0aW1lb3V0ICE9PSAnbnVtYmVyJykge1xuICAgICAgZXhpdCA9IHRpbWVvdXQuZXhpdDtcbiAgICAgIGVudGVyID0gdGltZW91dC5lbnRlcjsgLy8gVE9ETzogcmVtb3ZlIGZhbGxiYWNrIGZvciBuZXh0IG1ham9yXG5cbiAgICAgIGFwcGVhciA9IHRpbWVvdXQuYXBwZWFyICE9PSB1bmRlZmluZWQgPyB0aW1lb3V0LmFwcGVhciA6IGVudGVyO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBleGl0OiBleGl0LFxuICAgICAgZW50ZXI6IGVudGVyLFxuICAgICAgYXBwZWFyOiBhcHBlYXJcbiAgICB9O1xuICB9O1xuXG4gIF9wcm90by51cGRhdGVTdGF0dXMgPSBmdW5jdGlvbiB1cGRhdGVTdGF0dXMobW91bnRpbmcsIG5leHRTdGF0dXMpIHtcbiAgICBpZiAobW91bnRpbmcgPT09IHZvaWQgMCkge1xuICAgICAgbW91bnRpbmcgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAobmV4dFN0YXR1cyAhPT0gbnVsbCkge1xuICAgICAgLy8gbmV4dFN0YXR1cyB3aWxsIGFsd2F5cyBiZSBFTlRFUklORyBvciBFWElUSU5HLlxuICAgICAgdGhpcy5jYW5jZWxOZXh0Q2FsbGJhY2soKTtcblxuICAgICAgdmFyIG5vZGUgPSBfcmVhY3REb20uZGVmYXVsdC5maW5kRE9NTm9kZSh0aGlzKTtcblxuICAgICAgaWYgKG5leHRTdGF0dXMgPT09IEVOVEVSSU5HKSB7XG4gICAgICAgIHRoaXMucGVyZm9ybUVudGVyKG5vZGUsIG1vdW50aW5nKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMucGVyZm9ybUV4aXQobm9kZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICh0aGlzLnByb3BzLnVubW91bnRPbkV4aXQgJiYgdGhpcy5zdGF0ZS5zdGF0dXMgPT09IEVYSVRFRCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIHN0YXR1czogVU5NT1VOVEVEXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnBlcmZvcm1FbnRlciA9IGZ1bmN0aW9uIHBlcmZvcm1FbnRlcihub2RlLCBtb3VudGluZykge1xuICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgdmFyIGVudGVyID0gdGhpcy5wcm9wcy5lbnRlcjtcbiAgICB2YXIgYXBwZWFyaW5nID0gdGhpcy5jb250ZXh0LnRyYW5zaXRpb25Hcm91cCA/IHRoaXMuY29udGV4dC50cmFuc2l0aW9uR3JvdXAuaXNNb3VudGluZyA6IG1vdW50aW5nO1xuICAgIHZhciB0aW1lb3V0cyA9IHRoaXMuZ2V0VGltZW91dHMoKTtcbiAgICB2YXIgZW50ZXJUaW1lb3V0ID0gYXBwZWFyaW5nID8gdGltZW91dHMuYXBwZWFyIDogdGltZW91dHMuZW50ZXI7IC8vIG5vIGVudGVyIGFuaW1hdGlvbiBza2lwIHJpZ2h0IHRvIEVOVEVSRURcbiAgICAvLyBpZiB3ZSBhcmUgbW91bnRpbmcgYW5kIHJ1bm5pbmcgdGhpcyBpdCBtZWFucyBhcHBlYXIgX211c3RfIGJlIHNldFxuXG4gICAgaWYgKCFtb3VudGluZyAmJiAhZW50ZXIpIHtcbiAgICAgIHRoaXMuc2FmZVNldFN0YXRlKHtcbiAgICAgICAgc3RhdHVzOiBFTlRFUkVEXG4gICAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzMi5wcm9wcy5vbkVudGVyZWQobm9kZSk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLnByb3BzLm9uRW50ZXIobm9kZSwgYXBwZWFyaW5nKTtcbiAgICB0aGlzLnNhZmVTZXRTdGF0ZSh7XG4gICAgICBzdGF0dXM6IEVOVEVSSU5HXG4gICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMyLnByb3BzLm9uRW50ZXJpbmcobm9kZSwgYXBwZWFyaW5nKTtcblxuICAgICAgX3RoaXMyLm9uVHJhbnNpdGlvbkVuZChub2RlLCBlbnRlclRpbWVvdXQsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMyLnNhZmVTZXRTdGF0ZSh7XG4gICAgICAgICAgc3RhdHVzOiBFTlRFUkVEXG4gICAgICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBfdGhpczIucHJvcHMub25FbnRlcmVkKG5vZGUsIGFwcGVhcmluZyk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgX3Byb3RvLnBlcmZvcm1FeGl0ID0gZnVuY3Rpb24gcGVyZm9ybUV4aXQobm9kZSkge1xuICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgdmFyIGV4aXQgPSB0aGlzLnByb3BzLmV4aXQ7XG4gICAgdmFyIHRpbWVvdXRzID0gdGhpcy5nZXRUaW1lb3V0cygpOyAvLyBubyBleGl0IGFuaW1hdGlvbiBza2lwIHJpZ2h0IHRvIEVYSVRFRFxuXG4gICAgaWYgKCFleGl0KSB7XG4gICAgICB0aGlzLnNhZmVTZXRTdGF0ZSh7XG4gICAgICAgIHN0YXR1czogRVhJVEVEXG4gICAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzMy5wcm9wcy5vbkV4aXRlZChub2RlKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMucHJvcHMub25FeGl0KG5vZGUpO1xuICAgIHRoaXMuc2FmZVNldFN0YXRlKHtcbiAgICAgIHN0YXR1czogRVhJVElOR1xuICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzMy5wcm9wcy5vbkV4aXRpbmcobm9kZSk7XG5cbiAgICAgIF90aGlzMy5vblRyYW5zaXRpb25FbmQobm9kZSwgdGltZW91dHMuZXhpdCwgZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpczMuc2FmZVNldFN0YXRlKHtcbiAgICAgICAgICBzdGF0dXM6IEVYSVRFRFxuICAgICAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgX3RoaXMzLnByb3BzLm9uRXhpdGVkKG5vZGUpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIF9wcm90by5jYW5jZWxOZXh0Q2FsbGJhY2sgPSBmdW5jdGlvbiBjYW5jZWxOZXh0Q2FsbGJhY2soKSB7XG4gICAgaWYgKHRoaXMubmV4dENhbGxiYWNrICE9PSBudWxsKSB7XG4gICAgICB0aGlzLm5leHRDYWxsYmFjay5jYW5jZWwoKTtcbiAgICAgIHRoaXMubmV4dENhbGxiYWNrID0gbnVsbDtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnNhZmVTZXRTdGF0ZSA9IGZ1bmN0aW9uIHNhZmVTZXRTdGF0ZShuZXh0U3RhdGUsIGNhbGxiYWNrKSB7XG4gICAgLy8gVGhpcyBzaG91bGRuJ3QgYmUgbmVjZXNzYXJ5LCBidXQgdGhlcmUgYXJlIHdlaXJkIHJhY2UgY29uZGl0aW9ucyB3aXRoXG4gICAgLy8gc2V0U3RhdGUgY2FsbGJhY2tzIGFuZCB1bm1vdW50aW5nIGluIHRlc3RpbmcsIHNvIGFsd2F5cyBtYWtlIHN1cmUgdGhhdFxuICAgIC8vIHdlIGNhbiBjYW5jZWwgYW55IHBlbmRpbmcgc2V0U3RhdGUgY2FsbGJhY2tzIGFmdGVyIHdlIHVubW91bnQuXG4gICAgY2FsbGJhY2sgPSB0aGlzLnNldE5leHRDYWxsYmFjayhjYWxsYmFjayk7XG4gICAgdGhpcy5zZXRTdGF0ZShuZXh0U3RhdGUsIGNhbGxiYWNrKTtcbiAgfTtcblxuICBfcHJvdG8uc2V0TmV4dENhbGxiYWNrID0gZnVuY3Rpb24gc2V0TmV4dENhbGxiYWNrKGNhbGxiYWNrKSB7XG4gICAgdmFyIF90aGlzNCA9IHRoaXM7XG5cbiAgICB2YXIgYWN0aXZlID0gdHJ1ZTtcblxuICAgIHRoaXMubmV4dENhbGxiYWNrID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBpZiAoYWN0aXZlKSB7XG4gICAgICAgIGFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICBfdGhpczQubmV4dENhbGxiYWNrID0gbnVsbDtcbiAgICAgICAgY2FsbGJhY2soZXZlbnQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLm5leHRDYWxsYmFjay5jYW5jZWwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBhY3RpdmUgPSBmYWxzZTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIHRoaXMubmV4dENhbGxiYWNrO1xuICB9O1xuXG4gIF9wcm90by5vblRyYW5zaXRpb25FbmQgPSBmdW5jdGlvbiBvblRyYW5zaXRpb25FbmQobm9kZSwgdGltZW91dCwgaGFuZGxlcikge1xuICAgIHRoaXMuc2V0TmV4dENhbGxiYWNrKGhhbmRsZXIpO1xuICAgIHZhciBkb2VzTm90SGF2ZVRpbWVvdXRPckxpc3RlbmVyID0gdGltZW91dCA9PSBudWxsICYmICF0aGlzLnByb3BzLmFkZEVuZExpc3RlbmVyO1xuXG4gICAgaWYgKCFub2RlIHx8IGRvZXNOb3RIYXZlVGltZW91dE9yTGlzdGVuZXIpIHtcbiAgICAgIHNldFRpbWVvdXQodGhpcy5uZXh0Q2FsbGJhY2ssIDApO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnByb3BzLmFkZEVuZExpc3RlbmVyKSB7XG4gICAgICB0aGlzLnByb3BzLmFkZEVuZExpc3RlbmVyKG5vZGUsIHRoaXMubmV4dENhbGxiYWNrKTtcbiAgICB9XG5cbiAgICBpZiAodGltZW91dCAhPSBudWxsKSB7XG4gICAgICBzZXRUaW1lb3V0KHRoaXMubmV4dENhbGxiYWNrLCB0aW1lb3V0KTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgc3RhdHVzID0gdGhpcy5zdGF0ZS5zdGF0dXM7XG5cbiAgICBpZiAoc3RhdHVzID09PSBVTk1PVU5URUQpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGNoaWxkcmVuID0gX3RoaXMkcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgIGNoaWxkUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wcywgW1wiY2hpbGRyZW5cIl0pOyAvLyBmaWx0ZXIgcHJvcHMgZm9yIFRyYW5zdGl0aW9uXG5cblxuICAgIGRlbGV0ZSBjaGlsZFByb3BzLmluO1xuICAgIGRlbGV0ZSBjaGlsZFByb3BzLm1vdW50T25FbnRlcjtcbiAgICBkZWxldGUgY2hpbGRQcm9wcy51bm1vdW50T25FeGl0O1xuICAgIGRlbGV0ZSBjaGlsZFByb3BzLmFwcGVhcjtcbiAgICBkZWxldGUgY2hpbGRQcm9wcy5lbnRlcjtcbiAgICBkZWxldGUgY2hpbGRQcm9wcy5leGl0O1xuICAgIGRlbGV0ZSBjaGlsZFByb3BzLnRpbWVvdXQ7XG4gICAgZGVsZXRlIGNoaWxkUHJvcHMuYWRkRW5kTGlzdGVuZXI7XG4gICAgZGVsZXRlIGNoaWxkUHJvcHMub25FbnRlcjtcbiAgICBkZWxldGUgY2hpbGRQcm9wcy5vbkVudGVyaW5nO1xuICAgIGRlbGV0ZSBjaGlsZFByb3BzLm9uRW50ZXJlZDtcbiAgICBkZWxldGUgY2hpbGRQcm9wcy5vbkV4aXQ7XG4gICAgZGVsZXRlIGNoaWxkUHJvcHMub25FeGl0aW5nO1xuICAgIGRlbGV0ZSBjaGlsZFByb3BzLm9uRXhpdGVkO1xuXG4gICAgaWYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIGNoaWxkcmVuKHN0YXR1cywgY2hpbGRQcm9wcyk7XG4gICAgfVxuXG4gICAgdmFyIGNoaWxkID0gX3JlYWN0LmRlZmF1bHQuQ2hpbGRyZW4ub25seShjaGlsZHJlbik7XG5cbiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY2xvbmVFbGVtZW50KGNoaWxkLCBjaGlsZFByb3BzKTtcbiAgfTtcblxuICByZXR1cm4gVHJhbnNpdGlvbjtcbn0oX3JlYWN0LmRlZmF1bHQuQ29tcG9uZW50KTtcblxuVHJhbnNpdGlvbi5jb250ZXh0VHlwZXMgPSB7XG4gIHRyYW5zaXRpb25Hcm91cDogUHJvcFR5cGVzLm9iamVjdFxufTtcblRyYW5zaXRpb24uY2hpbGRDb250ZXh0VHlwZXMgPSB7XG4gIHRyYW5zaXRpb25Hcm91cDogZnVuY3Rpb24gdHJhbnNpdGlvbkdyb3VwKCkge31cbn07XG5UcmFuc2l0aW9uLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHtcbiAgLyoqXG4gICAqIEEgYGZ1bmN0aW9uYCBjaGlsZCBjYW4gYmUgdXNlZCBpbnN0ZWFkIG9mIGEgUmVhY3QgZWxlbWVudC4gVGhpcyBmdW5jdGlvbiBpc1xuICAgKiBjYWxsZWQgd2l0aCB0aGUgY3VycmVudCB0cmFuc2l0aW9uIHN0YXR1cyAoYCdlbnRlcmluZydgLCBgJ2VudGVyZWQnYCxcbiAgICogYCdleGl0aW5nJ2AsIGAnZXhpdGVkJ2AsIGAndW5tb3VudGVkJ2ApLCB3aGljaCBjYW4gYmUgdXNlZCB0byBhcHBseSBjb250ZXh0XG4gICAqIHNwZWNpZmljIHByb3BzIHRvIGEgY29tcG9uZW50LlxuICAgKlxuICAgKiBgYGBqc3hcbiAgICogPFRyYW5zaXRpb24gaW49e3RoaXMuc3RhdGUuaW59IHRpbWVvdXQ9ezE1MH0+XG4gICAqICAge3N0YXRlID0+IChcbiAgICogICAgIDxNeUNvbXBvbmVudCBjbGFzc05hbWU9e2BmYWRlIGZhZGUtJHtzdGF0ZX1gfSAvPlxuICAgKiAgICl9XG4gICAqIDwvVHJhbnNpdGlvbj5cbiAgICogYGBgXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCwgUHJvcFR5cGVzLmVsZW1lbnQuaXNSZXF1aXJlZF0pLmlzUmVxdWlyZWQsXG5cbiAgLyoqXG4gICAqIFNob3cgdGhlIGNvbXBvbmVudDsgdHJpZ2dlcnMgdGhlIGVudGVyIG9yIGV4aXQgc3RhdGVzXG4gICAqL1xuICBpbjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIEJ5IGRlZmF1bHQgdGhlIGNoaWxkIGNvbXBvbmVudCBpcyBtb3VudGVkIGltbWVkaWF0ZWx5IGFsb25nIHdpdGhcbiAgICogdGhlIHBhcmVudCBgVHJhbnNpdGlvbmAgY29tcG9uZW50LiBJZiB5b3Ugd2FudCB0byBcImxhenkgbW91bnRcIiB0aGUgY29tcG9uZW50IG9uIHRoZVxuICAgKiBmaXJzdCBgaW49e3RydWV9YCB5b3UgY2FuIHNldCBgbW91bnRPbkVudGVyYC4gQWZ0ZXIgdGhlIGZpcnN0IGVudGVyIHRyYW5zaXRpb24gdGhlIGNvbXBvbmVudCB3aWxsIHN0YXlcbiAgICogbW91bnRlZCwgZXZlbiBvbiBcImV4aXRlZFwiLCB1bmxlc3MgeW91IGFsc28gc3BlY2lmeSBgdW5tb3VudE9uRXhpdGAuXG4gICAqL1xuICBtb3VudE9uRW50ZXI6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBCeSBkZWZhdWx0IHRoZSBjaGlsZCBjb21wb25lbnQgc3RheXMgbW91bnRlZCBhZnRlciBpdCByZWFjaGVzIHRoZSBgJ2V4aXRlZCdgIHN0YXRlLlxuICAgKiBTZXQgYHVubW91bnRPbkV4aXRgIGlmIHlvdSdkIHByZWZlciB0byB1bm1vdW50IHRoZSBjb21wb25lbnQgYWZ0ZXIgaXQgZmluaXNoZXMgZXhpdGluZy5cbiAgICovXG4gIHVubW91bnRPbkV4aXQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBOb3JtYWxseSBhIGNvbXBvbmVudCBpcyBub3QgdHJhbnNpdGlvbmVkIGlmIGl0IGlzIHNob3duIHdoZW4gdGhlIGA8VHJhbnNpdGlvbj5gIGNvbXBvbmVudCBtb3VudHMuXG4gICAqIElmIHlvdSB3YW50IHRvIHRyYW5zaXRpb24gb24gdGhlIGZpcnN0IG1vdW50IHNldCBgYXBwZWFyYCB0byBgdHJ1ZWAsIGFuZCB0aGVcbiAgICogY29tcG9uZW50IHdpbGwgdHJhbnNpdGlvbiBpbiBhcyBzb29uIGFzIHRoZSBgPFRyYW5zaXRpb24+YCBtb3VudHMuXG4gICAqXG4gICAqID4gTm90ZTogdGhlcmUgYXJlIG5vIHNwZWNpZmljIFwiYXBwZWFyXCIgc3RhdGVzLiBgYXBwZWFyYCBvbmx5IGFkZHMgYW4gYWRkaXRpb25hbCBgZW50ZXJgIHRyYW5zaXRpb24uXG4gICAqL1xuICBhcHBlYXI6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBFbmFibGUgb3IgZGlzYWJsZSBlbnRlciB0cmFuc2l0aW9ucy5cbiAgICovXG4gIGVudGVyOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogRW5hYmxlIG9yIGRpc2FibGUgZXhpdCB0cmFuc2l0aW9ucy5cbiAgICovXG4gIGV4aXQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBUaGUgZHVyYXRpb24gb2YgdGhlIHRyYW5zaXRpb24sIGluIG1pbGxpc2Vjb25kcy5cbiAgICogUmVxdWlyZWQgdW5sZXNzIGBhZGRFbmRMaXN0ZW5lcmAgaXMgcHJvdmlkZWQuXG4gICAqXG4gICAqIFlvdSBtYXkgc3BlY2lmeSBhIHNpbmdsZSB0aW1lb3V0IGZvciBhbGwgdHJhbnNpdGlvbnM6XG4gICAqXG4gICAqIGBgYGpzeFxuICAgKiB0aW1lb3V0PXs1MDB9XG4gICAqIGBgYFxuICAgKlxuICAgKiBvciBpbmRpdmlkdWFsbHk6XG4gICAqXG4gICAqIGBgYGpzeFxuICAgKiB0aW1lb3V0PXt7XG4gICAqICBhcHBlYXI6IDUwMCxcbiAgICogIGVudGVyOiAzMDAsXG4gICAqICBleGl0OiA1MDAsXG4gICAqIH19XG4gICAqIGBgYFxuICAgKlxuICAgKiAtIGBhcHBlYXJgIGRlZmF1bHRzIHRvIHRoZSB2YWx1ZSBvZiBgZW50ZXJgXG4gICAqIC0gYGVudGVyYCBkZWZhdWx0cyB0byBgMGBcbiAgICogLSBgZXhpdGAgZGVmYXVsdHMgdG8gYDBgXG4gICAqXG4gICAqIEB0eXBlIHtudW1iZXIgfCB7IGVudGVyPzogbnVtYmVyLCBleGl0PzogbnVtYmVyLCBhcHBlYXI/OiBudW1iZXIgfX1cbiAgICovXG4gIHRpbWVvdXQ6IGZ1bmN0aW9uIHRpbWVvdXQocHJvcHMpIHtcbiAgICB2YXIgcHQgPSBfUHJvcFR5cGVzLnRpbWVvdXRzU2hhcGU7XG4gICAgaWYgKCFwcm9wcy5hZGRFbmRMaXN0ZW5lcikgcHQgPSBwdC5pc1JlcXVpcmVkO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIHB0LmFwcGx5KHZvaWQgMCwgW3Byb3BzXS5jb25jYXQoYXJncykpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBBZGQgYSBjdXN0b20gdHJhbnNpdGlvbiBlbmQgdHJpZ2dlci4gQ2FsbGVkIHdpdGggdGhlIHRyYW5zaXRpb25pbmdcbiAgICogRE9NIG5vZGUgYW5kIGEgYGRvbmVgIGNhbGxiYWNrLiBBbGxvd3MgZm9yIG1vcmUgZmluZSBncmFpbmVkIHRyYW5zaXRpb24gZW5kXG4gICAqIGxvZ2ljLiAqKk5vdGU6KiogVGltZW91dHMgYXJlIHN0aWxsIHVzZWQgYXMgYSBmYWxsYmFjayBpZiBwcm92aWRlZC5cbiAgICpcbiAgICogYGBganN4XG4gICAqIGFkZEVuZExpc3RlbmVyPXsobm9kZSwgZG9uZSkgPT4ge1xuICAgKiAgIC8vIHVzZSB0aGUgY3NzIHRyYW5zaXRpb25lbmQgZXZlbnQgdG8gbWFyayB0aGUgZmluaXNoIG9mIGEgdHJhbnNpdGlvblxuICAgKiAgIG5vZGUuYWRkRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIGRvbmUsIGZhbHNlKTtcbiAgICogfX1cbiAgICogYGBgXG4gICAqL1xuICBhZGRFbmRMaXN0ZW5lcjogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIGJlZm9yZSB0aGUgXCJlbnRlcmluZ1wiIHN0YXR1cyBpcyBhcHBsaWVkLiBBbiBleHRyYSBwYXJhbWV0ZXJcbiAgICogYGlzQXBwZWFyaW5nYCBpcyBzdXBwbGllZCB0byBpbmRpY2F0ZSBpZiB0aGUgZW50ZXIgc3RhZ2UgaXMgb2NjdXJyaW5nIG9uIHRoZSBpbml0aWFsIG1vdW50XG4gICAqXG4gICAqIEB0eXBlIEZ1bmN0aW9uKG5vZGU6IEh0bWxFbGVtZW50LCBpc0FwcGVhcmluZzogYm9vbCkgLT4gdm9pZFxuICAgKi9cbiAgb25FbnRlcjogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIGFmdGVyIHRoZSBcImVudGVyaW5nXCIgc3RhdHVzIGlzIGFwcGxpZWQuIEFuIGV4dHJhIHBhcmFtZXRlclxuICAgKiBgaXNBcHBlYXJpbmdgIGlzIHN1cHBsaWVkIHRvIGluZGljYXRlIGlmIHRoZSBlbnRlciBzdGFnZSBpcyBvY2N1cnJpbmcgb24gdGhlIGluaXRpYWwgbW91bnRcbiAgICpcbiAgICogQHR5cGUgRnVuY3Rpb24obm9kZTogSHRtbEVsZW1lbnQsIGlzQXBwZWFyaW5nOiBib29sKVxuICAgKi9cbiAgb25FbnRlcmluZzogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIGFmdGVyIHRoZSBcImVudGVyZWRcIiBzdGF0dXMgaXMgYXBwbGllZC4gQW4gZXh0cmEgcGFyYW1ldGVyXG4gICAqIGBpc0FwcGVhcmluZ2AgaXMgc3VwcGxpZWQgdG8gaW5kaWNhdGUgaWYgdGhlIGVudGVyIHN0YWdlIGlzIG9jY3VycmluZyBvbiB0aGUgaW5pdGlhbCBtb3VudFxuICAgKlxuICAgKiBAdHlwZSBGdW5jdGlvbihub2RlOiBIdG1sRWxlbWVudCwgaXNBcHBlYXJpbmc6IGJvb2wpIC0+IHZvaWRcbiAgICovXG4gIG9uRW50ZXJlZDogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIGJlZm9yZSB0aGUgXCJleGl0aW5nXCIgc3RhdHVzIGlzIGFwcGxpZWQuXG4gICAqXG4gICAqIEB0eXBlIEZ1bmN0aW9uKG5vZGU6IEh0bWxFbGVtZW50KSAtPiB2b2lkXG4gICAqL1xuICBvbkV4aXQ6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBDYWxsYmFjayBmaXJlZCBhZnRlciB0aGUgXCJleGl0aW5nXCIgc3RhdHVzIGlzIGFwcGxpZWQuXG4gICAqXG4gICAqIEB0eXBlIEZ1bmN0aW9uKG5vZGU6IEh0bWxFbGVtZW50KSAtPiB2b2lkXG4gICAqL1xuICBvbkV4aXRpbmc6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBDYWxsYmFjayBmaXJlZCBhZnRlciB0aGUgXCJleGl0ZWRcIiBzdGF0dXMgaXMgYXBwbGllZC5cbiAgICpcbiAgICogQHR5cGUgRnVuY3Rpb24obm9kZTogSHRtbEVsZW1lbnQpIC0+IHZvaWRcbiAgICovXG4gIG9uRXhpdGVkOiBQcm9wVHlwZXMuZnVuYyAvLyBOYW1lIHRoZSBmdW5jdGlvbiBzbyBpdCBpcyBjbGVhcmVyIGluIHRoZSBkb2N1bWVudGF0aW9uXG5cbn0gOiB7fTtcblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cblRyYW5zaXRpb24uZGVmYXVsdFByb3BzID0ge1xuICBpbjogZmFsc2UsXG4gIG1vdW50T25FbnRlcjogZmFsc2UsXG4gIHVubW91bnRPbkV4aXQ6IGZhbHNlLFxuICBhcHBlYXI6IGZhbHNlLFxuICBlbnRlcjogdHJ1ZSxcbiAgZXhpdDogdHJ1ZSxcbiAgb25FbnRlcjogbm9vcCxcbiAgb25FbnRlcmluZzogbm9vcCxcbiAgb25FbnRlcmVkOiBub29wLFxuICBvbkV4aXQ6IG5vb3AsXG4gIG9uRXhpdGluZzogbm9vcCxcbiAgb25FeGl0ZWQ6IG5vb3Bcbn07XG5UcmFuc2l0aW9uLlVOTU9VTlRFRCA9IDA7XG5UcmFuc2l0aW9uLkVYSVRFRCA9IDE7XG5UcmFuc2l0aW9uLkVOVEVSSU5HID0gMjtcblRyYW5zaXRpb24uRU5URVJFRCA9IDM7XG5UcmFuc2l0aW9uLkVYSVRJTkcgPSA0O1xuXG52YXIgX2RlZmF1bHQgPSAoMCwgX3JlYWN0TGlmZWN5Y2xlc0NvbXBhdC5wb2x5ZmlsbCkoVHJhbnNpdGlvbik7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAvLyBDYWxsIHRoaXMuY29uc3RydWN0b3IuZ0RTRlAgdG8gc3VwcG9ydCBzdWItY2xhc3Nlcy5cbiAgdmFyIHN0YXRlID0gdGhpcy5jb25zdHJ1Y3Rvci5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHModGhpcy5wcm9wcywgdGhpcy5zdGF0ZSk7XG4gIGlmIChzdGF0ZSAhPT0gbnVsbCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdGhpcy5zZXRTdGF0ZShzdGF0ZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgLy8gQ2FsbCB0aGlzLmNvbnN0cnVjdG9yLmdEU0ZQIHRvIHN1cHBvcnQgc3ViLWNsYXNzZXMuXG4gIC8vIFVzZSB0aGUgc2V0U3RhdGUoKSB1cGRhdGVyIHRvIGVuc3VyZSBzdGF0ZSBpc24ndCBzdGFsZSBpbiBjZXJ0YWluIGVkZ2UgY2FzZXMuXG4gIGZ1bmN0aW9uIHVwZGF0ZXIocHJldlN0YXRlKSB7XG4gICAgdmFyIHN0YXRlID0gdGhpcy5jb25zdHJ1Y3Rvci5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMobmV4dFByb3BzLCBwcmV2U3RhdGUpO1xuICAgIHJldHVybiBzdGF0ZSAhPT0gbnVsbCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkID8gc3RhdGUgOiBudWxsO1xuICB9XG4gIC8vIEJpbmRpbmcgXCJ0aGlzXCIgaXMgaW1wb3J0YW50IGZvciBzaGFsbG93IHJlbmRlcmVyIHN1cHBvcnQuXG4gIHRoaXMuc2V0U3RhdGUodXBkYXRlci5iaW5kKHRoaXMpKTtcbn1cblxuZnVuY3Rpb24gY29tcG9uZW50V2lsbFVwZGF0ZShuZXh0UHJvcHMsIG5leHRTdGF0ZSkge1xuICB0cnkge1xuICAgIHZhciBwcmV2UHJvcHMgPSB0aGlzLnByb3BzO1xuICAgIHZhciBwcmV2U3RhdGUgPSB0aGlzLnN0YXRlO1xuICAgIHRoaXMucHJvcHMgPSBuZXh0UHJvcHM7XG4gICAgdGhpcy5zdGF0ZSA9IG5leHRTdGF0ZTtcbiAgICB0aGlzLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90RmxhZyA9IHRydWU7XG4gICAgdGhpcy5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdCA9IHRoaXMuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoXG4gICAgICBwcmV2UHJvcHMsXG4gICAgICBwcmV2U3RhdGVcbiAgICApO1xuICB9IGZpbmFsbHkge1xuICAgIHRoaXMucHJvcHMgPSBwcmV2UHJvcHM7XG4gICAgdGhpcy5zdGF0ZSA9IHByZXZTdGF0ZTtcbiAgfVxufVxuXG4vLyBSZWFjdCBtYXkgd2FybiBhYm91dCBjV00vY1dSUC9jV1UgbWV0aG9kcyBiZWluZyBkZXByZWNhdGVkLlxuLy8gQWRkIGEgZmxhZyB0byBzdXBwcmVzcyB0aGVzZSB3YXJuaW5ncyBmb3IgdGhpcyBzcGVjaWFsIGNhc2UuXG5jb21wb25lbnRXaWxsTW91bnQuX19zdXBwcmVzc0RlcHJlY2F0aW9uV2FybmluZyA9IHRydWU7XG5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzLl9fc3VwcHJlc3NEZXByZWNhdGlvbldhcm5pbmcgPSB0cnVlO1xuY29tcG9uZW50V2lsbFVwZGF0ZS5fX3N1cHByZXNzRGVwcmVjYXRpb25XYXJuaW5nID0gdHJ1ZTtcblxuZnVuY3Rpb24gcG9seWZpbGwoQ29tcG9uZW50KSB7XG4gIHZhciBwcm90b3R5cGUgPSBDb21wb25lbnQucHJvdG90eXBlO1xuXG4gIGlmICghcHJvdG90eXBlIHx8ICFwcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudCkge1xuICAgIHRocm93IG5ldyBFcnJvcignQ2FuIG9ubHkgcG9seWZpbGwgY2xhc3MgY29tcG9uZW50cycpO1xuICB9XG5cbiAgaWYgKFxuICAgIHR5cGVvZiBDb21wb25lbnQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzICE9PSAnZnVuY3Rpb24nICYmXG4gICAgdHlwZW9mIHByb3RvdHlwZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm4gQ29tcG9uZW50O1xuICB9XG5cbiAgLy8gSWYgbmV3IGNvbXBvbmVudCBBUElzIGFyZSBkZWZpbmVkLCBcInVuc2FmZVwiIGxpZmVjeWNsZXMgd29uJ3QgYmUgY2FsbGVkLlxuICAvLyBFcnJvciBpZiBhbnkgb2YgdGhlc2UgbGlmZWN5Y2xlcyBhcmUgcHJlc2VudCxcbiAgLy8gQmVjYXVzZSB0aGV5IHdvdWxkIHdvcmsgZGlmZmVyZW50bHkgYmV0d2VlbiBvbGRlciBhbmQgbmV3ZXIgKDE2LjMrKSB2ZXJzaW9ucyBvZiBSZWFjdC5cbiAgdmFyIGZvdW5kV2lsbE1vdW50TmFtZSA9IG51bGw7XG4gIHZhciBmb3VuZFdpbGxSZWNlaXZlUHJvcHNOYW1lID0gbnVsbDtcbiAgdmFyIGZvdW5kV2lsbFVwZGF0ZU5hbWUgPSBudWxsO1xuICBpZiAodHlwZW9mIHByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBmb3VuZFdpbGxNb3VudE5hbWUgPSAnY29tcG9uZW50V2lsbE1vdW50JztcbiAgfSBlbHNlIGlmICh0eXBlb2YgcHJvdG90eXBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBmb3VuZFdpbGxNb3VudE5hbWUgPSAnVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCc7XG4gIH1cbiAgaWYgKHR5cGVvZiBwcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGZvdW5kV2lsbFJlY2VpdmVQcm9wc05hbWUgPSAnY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyc7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHByb3RvdHlwZS5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGZvdW5kV2lsbFJlY2VpdmVQcm9wc05hbWUgPSAnVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMnO1xuICB9XG4gIGlmICh0eXBlb2YgcHJvdG90eXBlLmNvbXBvbmVudFdpbGxVcGRhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICBmb3VuZFdpbGxVcGRhdGVOYW1lID0gJ2NvbXBvbmVudFdpbGxVcGRhdGUnO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBwcm90b3R5cGUuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICBmb3VuZFdpbGxVcGRhdGVOYW1lID0gJ1VOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJztcbiAgfVxuICBpZiAoXG4gICAgZm91bmRXaWxsTW91bnROYW1lICE9PSBudWxsIHx8XG4gICAgZm91bmRXaWxsUmVjZWl2ZVByb3BzTmFtZSAhPT0gbnVsbCB8fFxuICAgIGZvdW5kV2lsbFVwZGF0ZU5hbWUgIT09IG51bGxcbiAgKSB7XG4gICAgdmFyIGNvbXBvbmVudE5hbWUgPSBDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9uZW50Lm5hbWU7XG4gICAgdmFyIG5ld0FwaU5hbWUgPVxuICAgICAgdHlwZW9mIENvbXBvbmVudC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyAnZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKCknXG4gICAgICAgIDogJ2dldFNuYXBzaG90QmVmb3JlVXBkYXRlKCknO1xuXG4gICAgdGhyb3cgRXJyb3IoXG4gICAgICAnVW5zYWZlIGxlZ2FjeSBsaWZlY3ljbGVzIHdpbGwgbm90IGJlIGNhbGxlZCBmb3IgY29tcG9uZW50cyB1c2luZyBuZXcgY29tcG9uZW50IEFQSXMuXFxuXFxuJyArXG4gICAgICAgIGNvbXBvbmVudE5hbWUgK1xuICAgICAgICAnIHVzZXMgJyArXG4gICAgICAgIG5ld0FwaU5hbWUgK1xuICAgICAgICAnIGJ1dCBhbHNvIGNvbnRhaW5zIHRoZSBmb2xsb3dpbmcgbGVnYWN5IGxpZmVjeWNsZXM6JyArXG4gICAgICAgIChmb3VuZFdpbGxNb3VudE5hbWUgIT09IG51bGwgPyAnXFxuICAnICsgZm91bmRXaWxsTW91bnROYW1lIDogJycpICtcbiAgICAgICAgKGZvdW5kV2lsbFJlY2VpdmVQcm9wc05hbWUgIT09IG51bGxcbiAgICAgICAgICA/ICdcXG4gICcgKyBmb3VuZFdpbGxSZWNlaXZlUHJvcHNOYW1lXG4gICAgICAgICAgOiAnJykgK1xuICAgICAgICAoZm91bmRXaWxsVXBkYXRlTmFtZSAhPT0gbnVsbCA/ICdcXG4gICcgKyBmb3VuZFdpbGxVcGRhdGVOYW1lIDogJycpICtcbiAgICAgICAgJ1xcblxcblRoZSBhYm92ZSBsaWZlY3ljbGVzIHNob3VsZCBiZSByZW1vdmVkLiBMZWFybiBtb3JlIGFib3V0IHRoaXMgd2FybmluZyBoZXJlOlxcbicgK1xuICAgICAgICAnaHR0cHM6Ly9mYi5tZS9yZWFjdC1hc3luYy1jb21wb25lbnQtbGlmZWN5Y2xlLWhvb2tzJ1xuICAgICk7XG4gIH1cblxuICAvLyBSZWFjdCA8PSAxNi4yIGRvZXMgbm90IHN1cHBvcnQgc3RhdGljIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcy5cbiAgLy8gQXMgYSB3b3JrYXJvdW5kLCB1c2UgY1dNIGFuZCBjV1JQIHRvIGludm9rZSB0aGUgbmV3IHN0YXRpYyBsaWZlY3ljbGUuXG4gIC8vIE5ld2VyIHZlcnNpb25zIG9mIFJlYWN0IHdpbGwgaWdub3JlIHRoZXNlIGxpZmVjeWNsZXMgaWYgZ0RTRlAgZXhpc3RzLlxuICBpZiAodHlwZW9mIENvbXBvbmVudC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBwcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gY29tcG9uZW50V2lsbE1vdW50O1xuICAgIHByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcztcbiAgfVxuXG4gIC8vIFJlYWN0IDw9IDE2LjIgZG9lcyBub3Qgc3VwcG9ydCBnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZS5cbiAgLy8gQXMgYSB3b3JrYXJvdW5kLCB1c2UgY1dVIHRvIGludm9rZSB0aGUgbmV3IGxpZmVjeWNsZS5cbiAgLy8gTmV3ZXIgdmVyc2lvbnMgb2YgUmVhY3Qgd2lsbCBpZ25vcmUgdGhhdCBsaWZlY3ljbGUgaWYgZ1NCVSBleGlzdHMuXG4gIGlmICh0eXBlb2YgcHJvdG90eXBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgaWYgKHR5cGVvZiBwcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdDYW5ub3QgcG9seWZpbGwgZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoKSBmb3IgY29tcG9uZW50cyB0aGF0IGRvIG5vdCBkZWZpbmUgY29tcG9uZW50RGlkVXBkYXRlKCkgb24gdGhlIHByb3RvdHlwZSdcbiAgICAgICk7XG4gICAgfVxuXG4gICAgcHJvdG90eXBlLmNvbXBvbmVudFdpbGxVcGRhdGUgPSBjb21wb25lbnRXaWxsVXBkYXRlO1xuXG4gICAgdmFyIGNvbXBvbmVudERpZFVwZGF0ZSA9IHByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGU7XG5cbiAgICBwcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlUG9seWZpbGwoXG4gICAgICBwcmV2UHJvcHMsXG4gICAgICBwcmV2U3RhdGUsXG4gICAgICBtYXliZVNuYXBzaG90XG4gICAgKSB7XG4gICAgICAvLyAxNi4zKyB3aWxsIG5vdCBleGVjdXRlIG91ciB3aWxsLXVwZGF0ZSBtZXRob2Q7XG4gICAgICAvLyBJdCB3aWxsIHBhc3MgYSBzbmFwc2hvdCB2YWx1ZSB0byBkaWQtdXBkYXRlIHRob3VnaC5cbiAgICAgIC8vIE9sZGVyIHZlcnNpb25zIHdpbGwgcmVxdWlyZSBvdXIgcG9seWZpbGxlZCB3aWxsLXVwZGF0ZSB2YWx1ZS5cbiAgICAgIC8vIFdlIG5lZWQgdG8gaGFuZGxlIGJvdGggY2FzZXMsIGJ1dCBjYW4ndCBqdXN0IGNoZWNrIGZvciB0aGUgcHJlc2VuY2Ugb2YgXCJtYXliZVNuYXBzaG90XCIsXG4gICAgICAvLyBCZWNhdXNlIGZvciA8PSAxNS54IHZlcnNpb25zIHRoaXMgbWlnaHQgYmUgYSBcInByZXZDb250ZXh0XCIgb2JqZWN0LlxuICAgICAgLy8gV2UgYWxzbyBjYW4ndCBqdXN0IGNoZWNrIFwiX19yZWFjdEludGVybmFsU25hcHNob3RcIixcbiAgICAgIC8vIEJlY2F1c2UgZ2V0LXNuYXBzaG90IG1pZ2h0IHJldHVybiBhIGZhbHN5IHZhbHVlLlxuICAgICAgLy8gU28gY2hlY2sgZm9yIHRoZSBleHBsaWNpdCBfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEZsYWcgZmxhZyB0byBkZXRlcm1pbmUgYmVoYXZpb3IuXG4gICAgICB2YXIgc25hcHNob3QgPSB0aGlzLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90RmxhZ1xuICAgICAgICA/IHRoaXMuX19yZWFjdEludGVybmFsU25hcHNob3RcbiAgICAgICAgOiBtYXliZVNuYXBzaG90O1xuXG4gICAgICBjb21wb25lbnREaWRVcGRhdGUuY2FsbCh0aGlzLCBwcmV2UHJvcHMsIHByZXZTdGF0ZSwgc25hcHNob3QpO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gQ29tcG9uZW50O1xufVxuXG5leHBvcnQgeyBwb2x5ZmlsbCB9O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmNsYXNzTmFtZXNTaGFwZSA9IGV4cG9ydHMudGltZW91dHNTaGFwZSA9IHZvaWQgMDtcblxudmFyIF9wcm9wVHlwZXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJwcm9wLXR5cGVzXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIHRpbWVvdXRzU2hhcGUgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gX3Byb3BUeXBlcy5kZWZhdWx0Lm9uZU9mVHlwZShbX3Byb3BUeXBlcy5kZWZhdWx0Lm51bWJlciwgX3Byb3BUeXBlcy5kZWZhdWx0LnNoYXBlKHtcbiAgZW50ZXI6IF9wcm9wVHlwZXMuZGVmYXVsdC5udW1iZXIsXG4gIGV4aXQ6IF9wcm9wVHlwZXMuZGVmYXVsdC5udW1iZXIsXG4gIGFwcGVhcjogX3Byb3BUeXBlcy5kZWZhdWx0Lm51bWJlclxufSkuaXNSZXF1aXJlZF0pIDogbnVsbDtcbmV4cG9ydHMudGltZW91dHNTaGFwZSA9IHRpbWVvdXRzU2hhcGU7XG52YXIgY2xhc3NOYW1lc1NoYXBlID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IF9wcm9wVHlwZXMuZGVmYXVsdC5vbmVPZlR5cGUoW19wcm9wVHlwZXMuZGVmYXVsdC5zdHJpbmcsIF9wcm9wVHlwZXMuZGVmYXVsdC5zaGFwZSh7XG4gIGVudGVyOiBfcHJvcFR5cGVzLmRlZmF1bHQuc3RyaW5nLFxuICBleGl0OiBfcHJvcFR5cGVzLmRlZmF1bHQuc3RyaW5nLFxuICBhY3RpdmU6IF9wcm9wVHlwZXMuZGVmYXVsdC5zdHJpbmdcbn0pLCBfcHJvcFR5cGVzLmRlZmF1bHQuc2hhcGUoe1xuICBlbnRlcjogX3Byb3BUeXBlcy5kZWZhdWx0LnN0cmluZyxcbiAgZW50ZXJEb25lOiBfcHJvcFR5cGVzLmRlZmF1bHQuc3RyaW5nLFxuICBlbnRlckFjdGl2ZTogX3Byb3BUeXBlcy5kZWZhdWx0LnN0cmluZyxcbiAgZXhpdDogX3Byb3BUeXBlcy5kZWZhdWx0LnN0cmluZyxcbiAgZXhpdERvbmU6IF9wcm9wVHlwZXMuZGVmYXVsdC5zdHJpbmcsXG4gIGV4aXRBY3RpdmU6IF9wcm9wVHlwZXMuZGVmYXVsdC5zdHJpbmdcbn0pXSkgOiBudWxsO1xuZXhwb3J0cy5jbGFzc05hbWVzU2hhcGUgPSBjbGFzc05hbWVzU2hhcGU7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfcHJvcFR5cGVzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwicHJvcC10eXBlc1wiKSk7XG5cbnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5cbnZhciBfcmVhY3RMaWZlY3ljbGVzQ29tcGF0ID0gcmVxdWlyZShcInJlYWN0LWxpZmVjeWNsZXMtY29tcGF0XCIpO1xuXG52YXIgX0NoaWxkTWFwcGluZyA9IHJlcXVpcmUoXCIuL3V0aWxzL0NoaWxkTWFwcGluZ1wiKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkgeyBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTsgdmFyIHRhcmdldCA9IHt9OyB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7IHZhciBrZXksIGk7IGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7IGtleSA9IHNvdXJjZUtleXNbaV07IGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfZXh0ZW5kcygpIHsgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTsgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBzZWxmOyB9XG5cbnZhciB2YWx1ZXMgPSBPYmplY3QudmFsdWVzIHx8IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG9iaikubWFwKGZ1bmN0aW9uIChrKSB7XG4gICAgcmV0dXJuIG9ialtrXTtcbiAgfSk7XG59O1xuXG52YXIgZGVmYXVsdFByb3BzID0ge1xuICBjb21wb25lbnQ6ICdkaXYnLFxuICBjaGlsZEZhY3Rvcnk6IGZ1bmN0aW9uIGNoaWxkRmFjdG9yeShjaGlsZCkge1xuICAgIHJldHVybiBjaGlsZDtcbiAgfVxuICAvKipcbiAgICogVGhlIGA8VHJhbnNpdGlvbkdyb3VwPmAgY29tcG9uZW50IG1hbmFnZXMgYSBzZXQgb2YgdHJhbnNpdGlvbiBjb21wb25lbnRzXG4gICAqIChgPFRyYW5zaXRpb24+YCBhbmQgYDxDU1NUcmFuc2l0aW9uPmApIGluIGEgbGlzdC4gTGlrZSB3aXRoIHRoZSB0cmFuc2l0aW9uXG4gICAqIGNvbXBvbmVudHMsIGA8VHJhbnNpdGlvbkdyb3VwPmAgaXMgYSBzdGF0ZSBtYWNoaW5lIGZvciBtYW5hZ2luZyB0aGUgbW91bnRpbmdcbiAgICogYW5kIHVubW91bnRpbmcgb2YgY29tcG9uZW50cyBvdmVyIHRpbWUuXG4gICAqXG4gICAqIENvbnNpZGVyIHRoZSBleGFtcGxlIGJlbG93LiBBcyBpdGVtcyBhcmUgcmVtb3ZlZCBvciBhZGRlZCB0byB0aGUgVG9kb0xpc3QgdGhlXG4gICAqIGBpbmAgcHJvcCBpcyB0b2dnbGVkIGF1dG9tYXRpY2FsbHkgYnkgdGhlIGA8VHJhbnNpdGlvbkdyb3VwPmAuXG4gICAqXG4gICAqIE5vdGUgdGhhdCBgPFRyYW5zaXRpb25Hcm91cD5gICBkb2VzIG5vdCBkZWZpbmUgYW55IGFuaW1hdGlvbiBiZWhhdmlvciFcbiAgICogRXhhY3RseSBfaG93XyBhIGxpc3QgaXRlbSBhbmltYXRlcyBpcyB1cCB0byB0aGUgaW5kaXZpZHVhbCB0cmFuc2l0aW9uXG4gICAqIGNvbXBvbmVudC4gVGhpcyBtZWFucyB5b3UgY2FuIG1peCBhbmQgbWF0Y2ggYW5pbWF0aW9ucyBhY3Jvc3MgZGlmZmVyZW50IGxpc3RcbiAgICogaXRlbXMuXG4gICAqL1xuXG59O1xuXG52YXIgVHJhbnNpdGlvbkdyb3VwID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFRyYW5zaXRpb25Hcm91cCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gVHJhbnNpdGlvbkdyb3VwKHByb3BzLCBjb250ZXh0KSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMsIGNvbnRleHQpIHx8IHRoaXM7XG5cbiAgICB2YXIgaGFuZGxlRXhpdGVkID0gX3RoaXMuaGFuZGxlRXhpdGVkLmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSkpOyAvLyBJbml0aWFsIGNoaWxkcmVuIHNob3VsZCBhbGwgYmUgZW50ZXJpbmcsIGRlcGVuZGVudCBvbiBhcHBlYXJcblxuXG4gICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBoYW5kbGVFeGl0ZWQ6IGhhbmRsZUV4aXRlZCxcbiAgICAgIGZpcnN0UmVuZGVyOiB0cnVlXG4gICAgfTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gVHJhbnNpdGlvbkdyb3VwLnByb3RvdHlwZTtcblxuICBfcHJvdG8uZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgIHJldHVybiB7XG4gICAgICB0cmFuc2l0aW9uR3JvdXA6IHtcbiAgICAgICAgaXNNb3VudGluZzogIXRoaXMuYXBwZWFyZWRcbiAgICAgIH1cbiAgICB9O1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuYXBwZWFyZWQgPSB0cnVlO1xuICAgIHRoaXMubW91bnRlZCA9IHRydWU7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy5tb3VudGVkID0gZmFsc2U7XG4gIH07XG5cbiAgVHJhbnNpdGlvbkdyb3VwLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyA9IGZ1bmN0aW9uIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhuZXh0UHJvcHMsIF9yZWYpIHtcbiAgICB2YXIgcHJldkNoaWxkTWFwcGluZyA9IF9yZWYuY2hpbGRyZW4sXG4gICAgICAgIGhhbmRsZUV4aXRlZCA9IF9yZWYuaGFuZGxlRXhpdGVkLFxuICAgICAgICBmaXJzdFJlbmRlciA9IF9yZWYuZmlyc3RSZW5kZXI7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNoaWxkcmVuOiBmaXJzdFJlbmRlciA/ICgwLCBfQ2hpbGRNYXBwaW5nLmdldEluaXRpYWxDaGlsZE1hcHBpbmcpKG5leHRQcm9wcywgaGFuZGxlRXhpdGVkKSA6ICgwLCBfQ2hpbGRNYXBwaW5nLmdldE5leHRDaGlsZE1hcHBpbmcpKG5leHRQcm9wcywgcHJldkNoaWxkTWFwcGluZywgaGFuZGxlRXhpdGVkKSxcbiAgICAgIGZpcnN0UmVuZGVyOiBmYWxzZVxuICAgIH07XG4gIH07XG5cbiAgX3Byb3RvLmhhbmRsZUV4aXRlZCA9IGZ1bmN0aW9uIGhhbmRsZUV4aXRlZChjaGlsZCwgbm9kZSkge1xuICAgIHZhciBjdXJyZW50Q2hpbGRNYXBwaW5nID0gKDAsIF9DaGlsZE1hcHBpbmcuZ2V0Q2hpbGRNYXBwaW5nKSh0aGlzLnByb3BzLmNoaWxkcmVuKTtcbiAgICBpZiAoY2hpbGQua2V5IGluIGN1cnJlbnRDaGlsZE1hcHBpbmcpIHJldHVybjtcblxuICAgIGlmIChjaGlsZC5wcm9wcy5vbkV4aXRlZCkge1xuICAgICAgY2hpbGQucHJvcHMub25FeGl0ZWQobm9kZSk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMubW91bnRlZCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZShmdW5jdGlvbiAoc3RhdGUpIHtcbiAgICAgICAgdmFyIGNoaWxkcmVuID0gX2V4dGVuZHMoe30sIHN0YXRlLmNoaWxkcmVuKTtcblxuICAgICAgICBkZWxldGUgY2hpbGRyZW5bY2hpbGQua2V5XTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBjaGlsZHJlbjogY2hpbGRyZW5cbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIENvbXBvbmVudCA9IF90aGlzJHByb3BzLmNvbXBvbmVudCxcbiAgICAgICAgY2hpbGRGYWN0b3J5ID0gX3RoaXMkcHJvcHMuY2hpbGRGYWN0b3J5LFxuICAgICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF90aGlzJHByb3BzLCBbXCJjb21wb25lbnRcIiwgXCJjaGlsZEZhY3RvcnlcIl0pO1xuXG4gICAgdmFyIGNoaWxkcmVuID0gdmFsdWVzKHRoaXMuc3RhdGUuY2hpbGRyZW4pLm1hcChjaGlsZEZhY3RvcnkpO1xuICAgIGRlbGV0ZSBwcm9wcy5hcHBlYXI7XG4gICAgZGVsZXRlIHByb3BzLmVudGVyO1xuICAgIGRlbGV0ZSBwcm9wcy5leGl0O1xuXG4gICAgaWYgKENvbXBvbmVudCA9PT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGNoaWxkcmVuO1xuICAgIH1cblxuICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgcHJvcHMsIGNoaWxkcmVuKTtcbiAgfTtcblxuICByZXR1cm4gVHJhbnNpdGlvbkdyb3VwO1xufShfcmVhY3QuZGVmYXVsdC5Db21wb25lbnQpO1xuXG5UcmFuc2l0aW9uR3JvdXAuY2hpbGRDb250ZXh0VHlwZXMgPSB7XG4gIHRyYW5zaXRpb25Hcm91cDogX3Byb3BUeXBlcy5kZWZhdWx0Lm9iamVjdC5pc1JlcXVpcmVkXG59O1xuVHJhbnNpdGlvbkdyb3VwLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHtcbiAgLyoqXG4gICAqIGA8VHJhbnNpdGlvbkdyb3VwPmAgcmVuZGVycyBhIGA8ZGl2PmAgYnkgZGVmYXVsdC4gWW91IGNhbiBjaGFuZ2UgdGhpc1xuICAgKiBiZWhhdmlvciBieSBwcm92aWRpbmcgYSBgY29tcG9uZW50YCBwcm9wLlxuICAgKiBJZiB5b3UgdXNlIFJlYWN0IHYxNisgYW5kIHdvdWxkIGxpa2UgdG8gYXZvaWQgYSB3cmFwcGluZyBgPGRpdj5gIGVsZW1lbnRcbiAgICogeW91IGNhbiBwYXNzIGluIGBjb21wb25lbnQ9e251bGx9YC4gVGhpcyBpcyB1c2VmdWwgaWYgdGhlIHdyYXBwaW5nIGRpdlxuICAgKiBib3JrcyB5b3VyIGNzcyBzdHlsZXMuXG4gICAqL1xuICBjb21wb25lbnQ6IF9wcm9wVHlwZXMuZGVmYXVsdC5hbnksXG5cbiAgLyoqXG4gICAqIEEgc2V0IG9mIGA8VHJhbnNpdGlvbj5gIGNvbXBvbmVudHMsIHRoYXQgYXJlIHRvZ2dsZWQgYGluYCBhbmQgb3V0IGFzIHRoZXlcbiAgICogbGVhdmUuIHRoZSBgPFRyYW5zaXRpb25Hcm91cD5gIHdpbGwgaW5qZWN0IHNwZWNpZmljIHRyYW5zaXRpb24gcHJvcHMsIHNvXG4gICAqIHJlbWVtYmVyIHRvIHNwcmVhZCB0aGVtIHRocm91Z2ggaWYgeW91IGFyZSB3cmFwcGluZyB0aGUgYDxUcmFuc2l0aW9uPmAgYXNcbiAgICogd2l0aCBvdXIgYDxGYWRlPmAgZXhhbXBsZS5cbiAgICpcbiAgICogV2hpbGUgdGhpcyBjb21wb25lbnQgaXMgbWVhbnQgZm9yIG11bHRpcGxlIGBUcmFuc2l0aW9uYCBvciBgQ1NTVHJhbnNpdGlvbmBcbiAgICogY2hpbGRyZW4sIHNvbWV0aW1lcyB5b3UgbWF5IHdhbnQgdG8gaGF2ZSBhIHNpbmdsZSB0cmFuc2l0aW9uIGNoaWxkIHdpdGhcbiAgICogY29udGVudCB0aGF0IHlvdSB3YW50IHRvIGJlIHRyYW5zaXRpb25lZCBvdXQgYW5kIGluIHdoZW4geW91IGNoYW5nZSBpdFxuICAgKiAoZS5nLiByb3V0ZXMsIGltYWdlcyBldGMuKSBJbiB0aGF0IGNhc2UgeW91IGNhbiBjaGFuZ2UgdGhlIGBrZXlgIHByb3Agb2ZcbiAgICogdGhlIHRyYW5zaXRpb24gY2hpbGQgYXMgeW91IGNoYW5nZSBpdHMgY29udGVudCwgdGhpcyB3aWxsIGNhdXNlXG4gICAqIGBUcmFuc2l0aW9uR3JvdXBgIHRvIHRyYW5zaXRpb24gdGhlIGNoaWxkIG91dCBhbmQgYmFjayBpbi5cbiAgICovXG4gIGNoaWxkcmVuOiBfcHJvcFR5cGVzLmRlZmF1bHQubm9kZSxcblxuICAvKipcbiAgICogQSBjb252ZW5pZW5jZSBwcm9wIHRoYXQgZW5hYmxlcyBvciBkaXNhYmxlcyBhcHBlYXIgYW5pbWF0aW9uc1xuICAgKiBmb3IgYWxsIGNoaWxkcmVuLiBOb3RlIHRoYXQgc3BlY2lmeWluZyB0aGlzIHdpbGwgb3ZlcnJpZGUgYW55IGRlZmF1bHRzIHNldFxuICAgKiBvbiBpbmRpdmlkdWFsIGNoaWxkcmVuIFRyYW5zaXRpb25zLlxuICAgKi9cbiAgYXBwZWFyOiBfcHJvcFR5cGVzLmRlZmF1bHQuYm9vbCxcblxuICAvKipcbiAgICogQSBjb252ZW5pZW5jZSBwcm9wIHRoYXQgZW5hYmxlcyBvciBkaXNhYmxlcyBlbnRlciBhbmltYXRpb25zXG4gICAqIGZvciBhbGwgY2hpbGRyZW4uIE5vdGUgdGhhdCBzcGVjaWZ5aW5nIHRoaXMgd2lsbCBvdmVycmlkZSBhbnkgZGVmYXVsdHMgc2V0XG4gICAqIG9uIGluZGl2aWR1YWwgY2hpbGRyZW4gVHJhbnNpdGlvbnMuXG4gICAqL1xuICBlbnRlcjogX3Byb3BUeXBlcy5kZWZhdWx0LmJvb2wsXG5cbiAgLyoqXG4gICAqIEEgY29udmVuaWVuY2UgcHJvcCB0aGF0IGVuYWJsZXMgb3IgZGlzYWJsZXMgZXhpdCBhbmltYXRpb25zXG4gICAqIGZvciBhbGwgY2hpbGRyZW4uIE5vdGUgdGhhdCBzcGVjaWZ5aW5nIHRoaXMgd2lsbCBvdmVycmlkZSBhbnkgZGVmYXVsdHMgc2V0XG4gICAqIG9uIGluZGl2aWR1YWwgY2hpbGRyZW4gVHJhbnNpdGlvbnMuXG4gICAqL1xuICBleGl0OiBfcHJvcFR5cGVzLmRlZmF1bHQuYm9vbCxcblxuICAvKipcbiAgICogWW91IG1heSBuZWVkIHRvIGFwcGx5IHJlYWN0aXZlIHVwZGF0ZXMgdG8gYSBjaGlsZCBhcyBpdCBpcyBleGl0aW5nLlxuICAgKiBUaGlzIGlzIGdlbmVyYWxseSBkb25lIGJ5IHVzaW5nIGBjbG9uZUVsZW1lbnRgIGhvd2V2ZXIgaW4gdGhlIGNhc2Ugb2YgYW4gZXhpdGluZ1xuICAgKiBjaGlsZCB0aGUgZWxlbWVudCBoYXMgYWxyZWFkeSBiZWVuIHJlbW92ZWQgYW5kIG5vdCBhY2Nlc3NpYmxlIHRvIHRoZSBjb25zdW1lci5cbiAgICpcbiAgICogSWYgeW91IGRvIG5lZWQgdG8gdXBkYXRlIGEgY2hpbGQgYXMgaXQgbGVhdmVzIHlvdSBjYW4gcHJvdmlkZSBhIGBjaGlsZEZhY3RvcnlgXG4gICAqIHRvIHdyYXAgZXZlcnkgY2hpbGQsIGV2ZW4gdGhlIG9uZXMgdGhhdCBhcmUgbGVhdmluZy5cbiAgICpcbiAgICogQHR5cGUgRnVuY3Rpb24oY2hpbGQ6IFJlYWN0RWxlbWVudCkgLT4gUmVhY3RFbGVtZW50XG4gICAqL1xuICBjaGlsZEZhY3Rvcnk6IF9wcm9wVHlwZXMuZGVmYXVsdC5mdW5jXG59IDoge307XG5UcmFuc2l0aW9uR3JvdXAuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuXG52YXIgX2RlZmF1bHQgPSAoMCwgX3JlYWN0TGlmZWN5Y2xlc0NvbXBhdC5wb2x5ZmlsbCkoVHJhbnNpdGlvbkdyb3VwKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdOyIsImV4cG9ydCB2YXIgbmFtZSA9IFwiZDNcIjtcbmV4cG9ydCB2YXIgdmVyc2lvbiA9IFwiNS4xNS4wXCI7XG5leHBvcnQgdmFyIGRlc2NyaXB0aW9uID0gXCJEYXRhLURyaXZlbiBEb2N1bWVudHNcIjtcbmV4cG9ydCB2YXIga2V5d29yZHMgPSBbXCJkb21cIixcInZpc3VhbGl6YXRpb25cIixcInN2Z1wiLFwiYW5pbWF0aW9uXCIsXCJjYW52YXNcIl07XG5leHBvcnQgdmFyIGhvbWVwYWdlID0gXCJodHRwczovL2QzanMub3JnXCI7XG5leHBvcnQgdmFyIGxpY2Vuc2UgPSBcIkJTRC0zLUNsYXVzZVwiO1xuZXhwb3J0IHZhciBhdXRob3IgPSB7XCJuYW1lXCI6XCJNaWtlIEJvc3RvY2tcIixcInVybFwiOlwiaHR0cHM6Ly9ib3N0Lm9ja3Mub3JnL21pa2VcIn07XG5leHBvcnQgdmFyIG1haW4gPSBcImRpc3QvZDMubm9kZS5qc1wiO1xuZXhwb3J0IHZhciB1bnBrZyA9IFwiZGlzdC9kMy5taW4uanNcIjtcbmV4cG9ydCB2YXIganNkZWxpdnIgPSBcImRpc3QvZDMubWluLmpzXCI7XG5leHBvcnQgdmFyIG1vZHVsZSA9IFwiaW5kZXguanNcIjtcbmV4cG9ydCB2YXIgcmVwb3NpdG9yeSA9IHtcInR5cGVcIjpcImdpdFwiLFwidXJsXCI6XCJodHRwczovL2dpdGh1Yi5jb20vZDMvZDMuZ2l0XCJ9O1xuZXhwb3J0IHZhciBmaWxlcyA9IFtcImRpc3QvKiovKi5qc1wiLFwiaW5kZXguanNcIl07XG5leHBvcnQgdmFyIHNjcmlwdHMgPSB7XCJwcmV0ZXN0XCI6XCJyaW1yYWYgZGlzdCAmJiBta2RpciBkaXN0ICYmIGpzb24ybW9kdWxlIHBhY2thZ2UuanNvbiA+IGRpc3QvcGFja2FnZS5qcyAmJiByb2xsdXAgLWNcIixcInRlc3RcIjpcInRhcGUgJ3Rlc3QvKiovKi10ZXN0LmpzJ1wiLFwicHJlcHVibGlzaE9ubHlcIjpcInlhcm4gdGVzdFwiLFwicG9zdHB1Ymxpc2hcIjpcImdpdCBwdXNoICYmIGdpdCBwdXNoIC0tdGFncyAmJiBjZCAuLi9kMy5naXRodWIuY29tICYmIGdpdCBwdWxsICYmIGNwIC4uL2QzL2Rpc3QvZDMuanMgZDMudjUuanMgJiYgY3AgLi4vZDMvZGlzdC9kMy5taW4uanMgZDMudjUubWluLmpzICYmIGdpdCBhZGQgZDMudjUuanMgZDMudjUubWluLmpzICYmIGdpdCBjb21taXQgLW0gXFxcImQzICR7bnBtX3BhY2thZ2VfdmVyc2lvbn1cXFwiICYmIGdpdCBwdXNoICYmIGNkIC0gJiYgY2QgLi4vZDMtYm93ZXIgJiYgZ2l0IHB1bGwgJiYgY3AgLi4vZDMvTElDRU5TRSAuLi9kMy9SRUFETUUubWQgLi4vZDMvZGlzdC9kMy5qcyAuLi9kMy9kaXN0L2QzLm1pbi5qcyAuICYmIGdpdCBhZGQgLS0gTElDRU5TRSBSRUFETUUubWQgZDMuanMgZDMubWluLmpzICYmIGdpdCBjb21taXQgLW0gXFxcIiR7bnBtX3BhY2thZ2VfdmVyc2lvbn1cXFwiICYmIGdpdCB0YWcgLWFtIFxcXCIke25wbV9wYWNrYWdlX3ZlcnNpb259XFxcIiB2JHtucG1fcGFja2FnZV92ZXJzaW9ufSAmJiBnaXQgcHVzaCAmJiBnaXQgcHVzaCAtLXRhZ3MgJiYgY2QgLSAmJiB6aXAgLWogZGlzdC9kMy56aXAgLS0gTElDRU5TRSBSRUFETUUubWQgQVBJLm1kIENIQU5HRVMubWQgZGlzdC9kMy5qcyBkaXN0L2QzLm1pbi5qc1wifTtcbmV4cG9ydCB2YXIgZGV2RGVwZW5kZW5jaWVzID0ge1wianNvbjJtb2R1bGVcIjpcIjAuMFwiLFwicmltcmFmXCI6XCIyXCIsXCJyb2xsdXBcIjpcIjFcIixcInJvbGx1cC1wbHVnaW4tYXNjaWlcIjpcIjAuMFwiLFwicm9sbHVwLXBsdWdpbi1ub2RlLXJlc29sdmVcIjpcIjNcIixcInJvbGx1cC1wbHVnaW4tdGVyc2VyXCI6XCI1XCIsXCJ0YXBlXCI6XCI0XCJ9O1xuZXhwb3J0IHZhciBkZXBlbmRlbmNpZXMgPSB7XCJkMy1hcnJheVwiOlwiMVwiLFwiZDMtYXhpc1wiOlwiMVwiLFwiZDMtYnJ1c2hcIjpcIjFcIixcImQzLWNob3JkXCI6XCIxXCIsXCJkMy1jb2xsZWN0aW9uXCI6XCIxXCIsXCJkMy1jb2xvclwiOlwiMVwiLFwiZDMtY29udG91clwiOlwiMVwiLFwiZDMtZGlzcGF0Y2hcIjpcIjFcIixcImQzLWRyYWdcIjpcIjFcIixcImQzLWRzdlwiOlwiMVwiLFwiZDMtZWFzZVwiOlwiMVwiLFwiZDMtZmV0Y2hcIjpcIjFcIixcImQzLWZvcmNlXCI6XCIxXCIsXCJkMy1mb3JtYXRcIjpcIjFcIixcImQzLWdlb1wiOlwiMVwiLFwiZDMtaGllcmFyY2h5XCI6XCIxXCIsXCJkMy1pbnRlcnBvbGF0ZVwiOlwiMVwiLFwiZDMtcGF0aFwiOlwiMVwiLFwiZDMtcG9seWdvblwiOlwiMVwiLFwiZDMtcXVhZHRyZWVcIjpcIjFcIixcImQzLXJhbmRvbVwiOlwiMVwiLFwiZDMtc2NhbGVcIjpcIjJcIixcImQzLXNjYWxlLWNocm9tYXRpY1wiOlwiMVwiLFwiZDMtc2VsZWN0aW9uXCI6XCIxXCIsXCJkMy1zaGFwZVwiOlwiMVwiLFwiZDMtdGltZVwiOlwiMVwiLFwiZDMtdGltZS1mb3JtYXRcIjpcIjJcIixcImQzLXRpbWVyXCI6XCIxXCIsXCJkMy10cmFuc2l0aW9uXCI6XCIxXCIsXCJkMy12b3Jvbm9pXCI6XCIxXCIsXCJkMy16b29tXCI6XCIxXCJ9O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICByZXR1cm4gYSA8IGIgPyAtMSA6IGEgPiBiID8gMSA6IGEgPj0gYiA/IDAgOiBOYU47XG59XG4iLCJpbXBvcnQgYXNjZW5kaW5nIGZyb20gXCIuL2FzY2VuZGluZ1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb21wYXJlKSB7XG4gIGlmIChjb21wYXJlLmxlbmd0aCA9PT0gMSkgY29tcGFyZSA9IGFzY2VuZGluZ0NvbXBhcmF0b3IoY29tcGFyZSk7XG4gIHJldHVybiB7XG4gICAgbGVmdDogZnVuY3Rpb24oYSwgeCwgbG8sIGhpKSB7XG4gICAgICBpZiAobG8gPT0gbnVsbCkgbG8gPSAwO1xuICAgICAgaWYgKGhpID09IG51bGwpIGhpID0gYS5sZW5ndGg7XG4gICAgICB3aGlsZSAobG8gPCBoaSkge1xuICAgICAgICB2YXIgbWlkID0gbG8gKyBoaSA+Pj4gMTtcbiAgICAgICAgaWYgKGNvbXBhcmUoYVttaWRdLCB4KSA8IDApIGxvID0gbWlkICsgMTtcbiAgICAgICAgZWxzZSBoaSA9IG1pZDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBsbztcbiAgICB9LFxuICAgIHJpZ2h0OiBmdW5jdGlvbihhLCB4LCBsbywgaGkpIHtcbiAgICAgIGlmIChsbyA9PSBudWxsKSBsbyA9IDA7XG4gICAgICBpZiAoaGkgPT0gbnVsbCkgaGkgPSBhLmxlbmd0aDtcbiAgICAgIHdoaWxlIChsbyA8IGhpKSB7XG4gICAgICAgIHZhciBtaWQgPSBsbyArIGhpID4+PiAxO1xuICAgICAgICBpZiAoY29tcGFyZShhW21pZF0sIHgpID4gMCkgaGkgPSBtaWQ7XG4gICAgICAgIGVsc2UgbG8gPSBtaWQgKyAxO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGxvO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gYXNjZW5kaW5nQ29tcGFyYXRvcihmKSB7XG4gIHJldHVybiBmdW5jdGlvbihkLCB4KSB7XG4gICAgcmV0dXJuIGFzY2VuZGluZyhmKGQpLCB4KTtcbiAgfTtcbn1cbiIsImltcG9ydCBhc2NlbmRpbmcgZnJvbSBcIi4vYXNjZW5kaW5nXCI7XG5pbXBvcnQgYmlzZWN0b3IgZnJvbSBcIi4vYmlzZWN0b3JcIjtcblxudmFyIGFzY2VuZGluZ0Jpc2VjdCA9IGJpc2VjdG9yKGFzY2VuZGluZyk7XG5leHBvcnQgdmFyIGJpc2VjdFJpZ2h0ID0gYXNjZW5kaW5nQmlzZWN0LnJpZ2h0O1xuZXhwb3J0IHZhciBiaXNlY3RMZWZ0ID0gYXNjZW5kaW5nQmlzZWN0LmxlZnQ7XG5leHBvcnQgZGVmYXVsdCBiaXNlY3RSaWdodDtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGFycmF5LCBmKSB7XG4gIGlmIChmID09IG51bGwpIGYgPSBwYWlyO1xuICB2YXIgaSA9IDAsIG4gPSBhcnJheS5sZW5ndGggLSAxLCBwID0gYXJyYXlbMF0sIHBhaXJzID0gbmV3IEFycmF5KG4gPCAwID8gMCA6IG4pO1xuICB3aGlsZSAoaSA8IG4pIHBhaXJzW2ldID0gZihwLCBwID0gYXJyYXlbKytpXSk7XG4gIHJldHVybiBwYWlycztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhaXIoYSwgYikge1xuICByZXR1cm4gW2EsIGJdO1xufVxuIiwiaW1wb3J0IHtwYWlyfSBmcm9tIFwiLi9wYWlyc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZXMwLCB2YWx1ZXMxLCByZWR1Y2UpIHtcbiAgdmFyIG4wID0gdmFsdWVzMC5sZW5ndGgsXG4gICAgICBuMSA9IHZhbHVlczEubGVuZ3RoLFxuICAgICAgdmFsdWVzID0gbmV3IEFycmF5KG4wICogbjEpLFxuICAgICAgaTAsXG4gICAgICBpMSxcbiAgICAgIGksXG4gICAgICB2YWx1ZTA7XG5cbiAgaWYgKHJlZHVjZSA9PSBudWxsKSByZWR1Y2UgPSBwYWlyO1xuXG4gIGZvciAoaTAgPSBpID0gMDsgaTAgPCBuMDsgKytpMCkge1xuICAgIGZvciAodmFsdWUwID0gdmFsdWVzMFtpMF0sIGkxID0gMDsgaTEgPCBuMTsgKytpMSwgKytpKSB7XG4gICAgICB2YWx1ZXNbaV0gPSByZWR1Y2UodmFsdWUwLCB2YWx1ZXMxW2kxXSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHZhbHVlcztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgcmV0dXJuIGIgPCBhID8gLTEgOiBiID4gYSA/IDEgOiBiID49IGEgPyAwIDogTmFOO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4geCA9PT0gbnVsbCA/IE5hTiA6ICt4O1xufVxuIiwiaW1wb3J0IG51bWJlciBmcm9tIFwiLi9udW1iZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzLCB2YWx1ZW9mKSB7XG4gIHZhciBuID0gdmFsdWVzLmxlbmd0aCxcbiAgICAgIG0gPSAwLFxuICAgICAgaSA9IC0xLFxuICAgICAgbWVhbiA9IDAsXG4gICAgICB2YWx1ZSxcbiAgICAgIGRlbHRhLFxuICAgICAgc3VtID0gMDtcblxuICBpZiAodmFsdWVvZiA9PSBudWxsKSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGlmICghaXNOYU4odmFsdWUgPSBudW1iZXIodmFsdWVzW2ldKSkpIHtcbiAgICAgICAgZGVsdGEgPSB2YWx1ZSAtIG1lYW47XG4gICAgICAgIG1lYW4gKz0gZGVsdGEgLyArK207XG4gICAgICAgIHN1bSArPSBkZWx0YSAqICh2YWx1ZSAtIG1lYW4pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGVsc2Uge1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpZiAoIWlzTmFOKHZhbHVlID0gbnVtYmVyKHZhbHVlb2YodmFsdWVzW2ldLCBpLCB2YWx1ZXMpKSkpIHtcbiAgICAgICAgZGVsdGEgPSB2YWx1ZSAtIG1lYW47XG4gICAgICAgIG1lYW4gKz0gZGVsdGEgLyArK207XG4gICAgICAgIHN1bSArPSBkZWx0YSAqICh2YWx1ZSAtIG1lYW4pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGlmIChtID4gMSkgcmV0dXJuIHN1bSAvIChtIC0gMSk7XG59XG4iLCJpbXBvcnQgdmFyaWFuY2UgZnJvbSBcIi4vdmFyaWFuY2VcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYXJyYXksIGYpIHtcbiAgdmFyIHYgPSB2YXJpYW5jZShhcnJheSwgZik7XG4gIHJldHVybiB2ID8gTWF0aC5zcXJ0KHYpIDogdjtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgdmFsdWVvZikge1xuICB2YXIgbiA9IHZhbHVlcy5sZW5ndGgsXG4gICAgICBpID0gLTEsXG4gICAgICB2YWx1ZSxcbiAgICAgIG1pbixcbiAgICAgIG1heDtcblxuICBpZiAodmFsdWVvZiA9PSBudWxsKSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gRmluZCB0aGUgZmlyc3QgY29tcGFyYWJsZSB2YWx1ZS5cbiAgICAgIGlmICgodmFsdWUgPSB2YWx1ZXNbaV0pICE9IG51bGwgJiYgdmFsdWUgPj0gdmFsdWUpIHtcbiAgICAgICAgbWluID0gbWF4ID0gdmFsdWU7XG4gICAgICAgIHdoaWxlICgrK2kgPCBuKSB7IC8vIENvbXBhcmUgdGhlIHJlbWFpbmluZyB2YWx1ZXMuXG4gICAgICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlc1tpXSkgIT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKG1pbiA+IHZhbHVlKSBtaW4gPSB2YWx1ZTtcbiAgICAgICAgICAgIGlmIChtYXggPCB2YWx1ZSkgbWF4ID0gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZWxzZSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gRmluZCB0aGUgZmlyc3QgY29tcGFyYWJsZSB2YWx1ZS5cbiAgICAgIGlmICgodmFsdWUgPSB2YWx1ZW9mKHZhbHVlc1tpXSwgaSwgdmFsdWVzKSkgIT0gbnVsbCAmJiB2YWx1ZSA+PSB2YWx1ZSkge1xuICAgICAgICBtaW4gPSBtYXggPSB2YWx1ZTtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gQ29tcGFyZSB0aGUgcmVtYWluaW5nIHZhbHVlcy5cbiAgICAgICAgICBpZiAoKHZhbHVlID0gdmFsdWVvZih2YWx1ZXNbaV0sIGksIHZhbHVlcykpICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChtaW4gPiB2YWx1ZSkgbWluID0gdmFsdWU7XG4gICAgICAgICAgICBpZiAobWF4IDwgdmFsdWUpIG1heCA9IHZhbHVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBbbWluLCBtYXhdO1xufVxuIiwidmFyIGFycmF5ID0gQXJyYXkucHJvdG90eXBlO1xuXG5leHBvcnQgdmFyIHNsaWNlID0gYXJyYXkuc2xpY2U7XG5leHBvcnQgdmFyIG1hcCA9IGFycmF5Lm1hcDtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4geDtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHN0YXJ0LCBzdG9wLCBzdGVwKSB7XG4gIHN0YXJ0ID0gK3N0YXJ0LCBzdG9wID0gK3N0b3AsIHN0ZXAgPSAobiA9IGFyZ3VtZW50cy5sZW5ndGgpIDwgMiA/IChzdG9wID0gc3RhcnQsIHN0YXJ0ID0gMCwgMSkgOiBuIDwgMyA/IDEgOiArc3RlcDtcblxuICB2YXIgaSA9IC0xLFxuICAgICAgbiA9IE1hdGgubWF4KDAsIE1hdGguY2VpbCgoc3RvcCAtIHN0YXJ0KSAvIHN0ZXApKSB8IDAsXG4gICAgICByYW5nZSA9IG5ldyBBcnJheShuKTtcblxuICB3aGlsZSAoKytpIDwgbikge1xuICAgIHJhbmdlW2ldID0gc3RhcnQgKyBpICogc3RlcDtcbiAgfVxuXG4gIHJldHVybiByYW5nZTtcbn1cbiIsInZhciBlMTAgPSBNYXRoLnNxcnQoNTApLFxuICAgIGU1ID0gTWF0aC5zcXJ0KDEwKSxcbiAgICBlMiA9IE1hdGguc3FydCgyKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc3RhcnQsIHN0b3AsIGNvdW50KSB7XG4gIHZhciByZXZlcnNlLFxuICAgICAgaSA9IC0xLFxuICAgICAgbixcbiAgICAgIHRpY2tzLFxuICAgICAgc3RlcDtcblxuICBzdG9wID0gK3N0b3AsIHN0YXJ0ID0gK3N0YXJ0LCBjb3VudCA9ICtjb3VudDtcbiAgaWYgKHN0YXJ0ID09PSBzdG9wICYmIGNvdW50ID4gMCkgcmV0dXJuIFtzdGFydF07XG4gIGlmIChyZXZlcnNlID0gc3RvcCA8IHN0YXJ0KSBuID0gc3RhcnQsIHN0YXJ0ID0gc3RvcCwgc3RvcCA9IG47XG4gIGlmICgoc3RlcCA9IHRpY2tJbmNyZW1lbnQoc3RhcnQsIHN0b3AsIGNvdW50KSkgPT09IDAgfHwgIWlzRmluaXRlKHN0ZXApKSByZXR1cm4gW107XG5cbiAgaWYgKHN0ZXAgPiAwKSB7XG4gICAgc3RhcnQgPSBNYXRoLmNlaWwoc3RhcnQgLyBzdGVwKTtcbiAgICBzdG9wID0gTWF0aC5mbG9vcihzdG9wIC8gc3RlcCk7XG4gICAgdGlja3MgPSBuZXcgQXJyYXkobiA9IE1hdGguY2VpbChzdG9wIC0gc3RhcnQgKyAxKSk7XG4gICAgd2hpbGUgKCsraSA8IG4pIHRpY2tzW2ldID0gKHN0YXJ0ICsgaSkgKiBzdGVwO1xuICB9IGVsc2Uge1xuICAgIHN0YXJ0ID0gTWF0aC5mbG9vcihzdGFydCAqIHN0ZXApO1xuICAgIHN0b3AgPSBNYXRoLmNlaWwoc3RvcCAqIHN0ZXApO1xuICAgIHRpY2tzID0gbmV3IEFycmF5KG4gPSBNYXRoLmNlaWwoc3RhcnQgLSBzdG9wICsgMSkpO1xuICAgIHdoaWxlICgrK2kgPCBuKSB0aWNrc1tpXSA9IChzdGFydCAtIGkpIC8gc3RlcDtcbiAgfVxuXG4gIGlmIChyZXZlcnNlKSB0aWNrcy5yZXZlcnNlKCk7XG5cbiAgcmV0dXJuIHRpY2tzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdGlja0luY3JlbWVudChzdGFydCwgc3RvcCwgY291bnQpIHtcbiAgdmFyIHN0ZXAgPSAoc3RvcCAtIHN0YXJ0KSAvIE1hdGgubWF4KDAsIGNvdW50KSxcbiAgICAgIHBvd2VyID0gTWF0aC5mbG9vcihNYXRoLmxvZyhzdGVwKSAvIE1hdGguTE4xMCksXG4gICAgICBlcnJvciA9IHN0ZXAgLyBNYXRoLnBvdygxMCwgcG93ZXIpO1xuICByZXR1cm4gcG93ZXIgPj0gMFxuICAgICAgPyAoZXJyb3IgPj0gZTEwID8gMTAgOiBlcnJvciA+PSBlNSA/IDUgOiBlcnJvciA+PSBlMiA/IDIgOiAxKSAqIE1hdGgucG93KDEwLCBwb3dlcilcbiAgICAgIDogLU1hdGgucG93KDEwLCAtcG93ZXIpIC8gKGVycm9yID49IGUxMCA/IDEwIDogZXJyb3IgPj0gZTUgPyA1IDogZXJyb3IgPj0gZTIgPyAyIDogMSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0aWNrU3RlcChzdGFydCwgc3RvcCwgY291bnQpIHtcbiAgdmFyIHN0ZXAwID0gTWF0aC5hYnMoc3RvcCAtIHN0YXJ0KSAvIE1hdGgubWF4KDAsIGNvdW50KSxcbiAgICAgIHN0ZXAxID0gTWF0aC5wb3coMTAsIE1hdGguZmxvb3IoTWF0aC5sb2coc3RlcDApIC8gTWF0aC5MTjEwKSksXG4gICAgICBlcnJvciA9IHN0ZXAwIC8gc3RlcDE7XG4gIGlmIChlcnJvciA+PSBlMTApIHN0ZXAxICo9IDEwO1xuICBlbHNlIGlmIChlcnJvciA+PSBlNSkgc3RlcDEgKj0gNTtcbiAgZWxzZSBpZiAoZXJyb3IgPj0gZTIpIHN0ZXAxICo9IDI7XG4gIHJldHVybiBzdG9wIDwgc3RhcnQgPyAtc3RlcDEgOiBzdGVwMTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcykge1xuICByZXR1cm4gTWF0aC5jZWlsKE1hdGgubG9nKHZhbHVlcy5sZW5ndGgpIC8gTWF0aC5MTjIpICsgMTtcbn1cbiIsImltcG9ydCB7c2xpY2V9IGZyb20gXCIuL2FycmF5XCI7XG5pbXBvcnQgYmlzZWN0IGZyb20gXCIuL2Jpc2VjdFwiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5pbXBvcnQgZXh0ZW50IGZyb20gXCIuL2V4dGVudFwiO1xuaW1wb3J0IGlkZW50aXR5IGZyb20gXCIuL2lkZW50aXR5XCI7XG5pbXBvcnQgcmFuZ2UgZnJvbSBcIi4vcmFuZ2VcIjtcbmltcG9ydCB7dGlja1N0ZXB9IGZyb20gXCIuL3RpY2tzXCI7XG5pbXBvcnQgc3R1cmdlcyBmcm9tIFwiLi90aHJlc2hvbGQvc3R1cmdlc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHZhbHVlID0gaWRlbnRpdHksXG4gICAgICBkb21haW4gPSBleHRlbnQsXG4gICAgICB0aHJlc2hvbGQgPSBzdHVyZ2VzO1xuXG4gIGZ1bmN0aW9uIGhpc3RvZ3JhbShkYXRhKSB7XG4gICAgdmFyIGksXG4gICAgICAgIG4gPSBkYXRhLmxlbmd0aCxcbiAgICAgICAgeCxcbiAgICAgICAgdmFsdWVzID0gbmV3IEFycmF5KG4pO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgdmFsdWVzW2ldID0gdmFsdWUoZGF0YVtpXSwgaSwgZGF0YSk7XG4gICAgfVxuXG4gICAgdmFyIHh6ID0gZG9tYWluKHZhbHVlcyksXG4gICAgICAgIHgwID0geHpbMF0sXG4gICAgICAgIHgxID0geHpbMV0sXG4gICAgICAgIHR6ID0gdGhyZXNob2xkKHZhbHVlcywgeDAsIHgxKTtcblxuICAgIC8vIENvbnZlcnQgbnVtYmVyIG9mIHRocmVzaG9sZHMgaW50byB1bmlmb3JtIHRocmVzaG9sZHMuXG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHR6KSkge1xuICAgICAgdHogPSB0aWNrU3RlcCh4MCwgeDEsIHR6KTtcbiAgICAgIHR6ID0gcmFuZ2UoTWF0aC5jZWlsKHgwIC8gdHopICogdHosIHgxLCB0eik7IC8vIGV4Y2x1c2l2ZVxuICAgIH1cblxuICAgIC8vIFJlbW92ZSBhbnkgdGhyZXNob2xkcyBvdXRzaWRlIHRoZSBkb21haW4uXG4gICAgdmFyIG0gPSB0ei5sZW5ndGg7XG4gICAgd2hpbGUgKHR6WzBdIDw9IHgwKSB0ei5zaGlmdCgpLCAtLW07XG4gICAgd2hpbGUgKHR6W20gLSAxXSA+IHgxKSB0ei5wb3AoKSwgLS1tO1xuXG4gICAgdmFyIGJpbnMgPSBuZXcgQXJyYXkobSArIDEpLFxuICAgICAgICBiaW47XG5cbiAgICAvLyBJbml0aWFsaXplIGJpbnMuXG4gICAgZm9yIChpID0gMDsgaSA8PSBtOyArK2kpIHtcbiAgICAgIGJpbiA9IGJpbnNbaV0gPSBbXTtcbiAgICAgIGJpbi54MCA9IGkgPiAwID8gdHpbaSAtIDFdIDogeDA7XG4gICAgICBiaW4ueDEgPSBpIDwgbSA/IHR6W2ldIDogeDE7XG4gICAgfVxuXG4gICAgLy8gQXNzaWduIGRhdGEgdG8gYmlucyBieSB2YWx1ZSwgaWdub3JpbmcgYW55IG91dHNpZGUgdGhlIGRvbWFpbi5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICB4ID0gdmFsdWVzW2ldO1xuICAgICAgaWYgKHgwIDw9IHggJiYgeCA8PSB4MSkge1xuICAgICAgICBiaW5zW2Jpc2VjdCh0eiwgeCwgMCwgbSldLnB1c2goZGF0YVtpXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGJpbnM7XG4gIH1cblxuICBoaXN0b2dyYW0udmFsdWUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodmFsdWUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KF8pLCBoaXN0b2dyYW0pIDogdmFsdWU7XG4gIH07XG5cbiAgaGlzdG9ncmFtLmRvbWFpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChkb21haW4gPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KFtfWzBdLCBfWzFdXSksIGhpc3RvZ3JhbSkgOiBkb21haW47XG4gIH07XG5cbiAgaGlzdG9ncmFtLnRocmVzaG9sZHMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhyZXNob2xkID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBBcnJheS5pc0FycmF5KF8pID8gY29uc3RhbnQoc2xpY2UuY2FsbChfKSkgOiBjb25zdGFudChfKSwgaGlzdG9ncmFtKSA6IHRocmVzaG9sZDtcbiAgfTtcblxuICByZXR1cm4gaGlzdG9ncmFtO1xufVxuIiwiaW1wb3J0IG51bWJlciBmcm9tIFwiLi9udW1iZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzLCBwLCB2YWx1ZW9mKSB7XG4gIGlmICh2YWx1ZW9mID09IG51bGwpIHZhbHVlb2YgPSBudW1iZXI7XG4gIGlmICghKG4gPSB2YWx1ZXMubGVuZ3RoKSkgcmV0dXJuO1xuICBpZiAoKHAgPSArcCkgPD0gMCB8fCBuIDwgMikgcmV0dXJuICt2YWx1ZW9mKHZhbHVlc1swXSwgMCwgdmFsdWVzKTtcbiAgaWYgKHAgPj0gMSkgcmV0dXJuICt2YWx1ZW9mKHZhbHVlc1tuIC0gMV0sIG4gLSAxLCB2YWx1ZXMpO1xuICB2YXIgbixcbiAgICAgIGkgPSAobiAtIDEpICogcCxcbiAgICAgIGkwID0gTWF0aC5mbG9vcihpKSxcbiAgICAgIHZhbHVlMCA9ICt2YWx1ZW9mKHZhbHVlc1tpMF0sIGkwLCB2YWx1ZXMpLFxuICAgICAgdmFsdWUxID0gK3ZhbHVlb2YodmFsdWVzW2kwICsgMV0sIGkwICsgMSwgdmFsdWVzKTtcbiAgcmV0dXJuIHZhbHVlMCArICh2YWx1ZTEgLSB2YWx1ZTApICogKGkgLSBpMCk7XG59XG4iLCJpbXBvcnQge21hcH0gZnJvbSBcIi4uL2FycmF5XCI7XG5pbXBvcnQgYXNjZW5kaW5nIGZyb20gXCIuLi9hc2NlbmRpbmdcIjtcbmltcG9ydCBudW1iZXIgZnJvbSBcIi4uL251bWJlclwiO1xuaW1wb3J0IHF1YW50aWxlIGZyb20gXCIuLi9xdWFudGlsZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZXMsIG1pbiwgbWF4KSB7XG4gIHZhbHVlcyA9IG1hcC5jYWxsKHZhbHVlcywgbnVtYmVyKS5zb3J0KGFzY2VuZGluZyk7XG4gIHJldHVybiBNYXRoLmNlaWwoKG1heCAtIG1pbikgLyAoMiAqIChxdWFudGlsZSh2YWx1ZXMsIDAuNzUpIC0gcXVhbnRpbGUodmFsdWVzLCAwLjI1KSkgKiBNYXRoLnBvdyh2YWx1ZXMubGVuZ3RoLCAtMSAvIDMpKSk7XG59XG4iLCJpbXBvcnQgZGV2aWF0aW9uIGZyb20gXCIuLi9kZXZpYXRpb25cIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzLCBtaW4sIG1heCkge1xuICByZXR1cm4gTWF0aC5jZWlsKChtYXggLSBtaW4pIC8gKDMuNSAqIGRldmlhdGlvbih2YWx1ZXMpICogTWF0aC5wb3codmFsdWVzLmxlbmd0aCwgLTEgLyAzKSkpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzLCB2YWx1ZW9mKSB7XG4gIHZhciBuID0gdmFsdWVzLmxlbmd0aCxcbiAgICAgIGkgPSAtMSxcbiAgICAgIHZhbHVlLFxuICAgICAgbWF4O1xuXG4gIGlmICh2YWx1ZW9mID09IG51bGwpIHtcbiAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBGaW5kIHRoZSBmaXJzdCBjb21wYXJhYmxlIHZhbHVlLlxuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlc1tpXSkgIT0gbnVsbCAmJiB2YWx1ZSA+PSB2YWx1ZSkge1xuICAgICAgICBtYXggPSB2YWx1ZTtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gQ29tcGFyZSB0aGUgcmVtYWluaW5nIHZhbHVlcy5cbiAgICAgICAgICBpZiAoKHZhbHVlID0gdmFsdWVzW2ldKSAhPSBudWxsICYmIHZhbHVlID4gbWF4KSB7XG4gICAgICAgICAgICBtYXggPSB2YWx1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBlbHNlIHtcbiAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBGaW5kIHRoZSBmaXJzdCBjb21wYXJhYmxlIHZhbHVlLlxuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlb2YodmFsdWVzW2ldLCBpLCB2YWx1ZXMpKSAhPSBudWxsICYmIHZhbHVlID49IHZhbHVlKSB7XG4gICAgICAgIG1heCA9IHZhbHVlO1xuICAgICAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBDb21wYXJlIHRoZSByZW1haW5pbmcgdmFsdWVzLlxuICAgICAgICAgIGlmICgodmFsdWUgPSB2YWx1ZW9mKHZhbHVlc1tpXSwgaSwgdmFsdWVzKSkgIT0gbnVsbCAmJiB2YWx1ZSA+IG1heCkge1xuICAgICAgICAgICAgbWF4ID0gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1heDtcbn1cbiIsImltcG9ydCBudW1iZXIgZnJvbSBcIi4vbnVtYmVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgdmFsdWVvZikge1xuICB2YXIgbiA9IHZhbHVlcy5sZW5ndGgsXG4gICAgICBtID0gbixcbiAgICAgIGkgPSAtMSxcbiAgICAgIHZhbHVlLFxuICAgICAgc3VtID0gMDtcblxuICBpZiAodmFsdWVvZiA9PSBudWxsKSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGlmICghaXNOYU4odmFsdWUgPSBudW1iZXIodmFsdWVzW2ldKSkpIHN1bSArPSB2YWx1ZTtcbiAgICAgIGVsc2UgLS1tO1xuICAgIH1cbiAgfVxuXG4gIGVsc2Uge1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpZiAoIWlzTmFOKHZhbHVlID0gbnVtYmVyKHZhbHVlb2YodmFsdWVzW2ldLCBpLCB2YWx1ZXMpKSkpIHN1bSArPSB2YWx1ZTtcbiAgICAgIGVsc2UgLS1tO1xuICAgIH1cbiAgfVxuXG4gIGlmIChtKSByZXR1cm4gc3VtIC8gbTtcbn1cbiIsImltcG9ydCBhc2NlbmRpbmcgZnJvbSBcIi4vYXNjZW5kaW5nXCI7XG5pbXBvcnQgbnVtYmVyIGZyb20gXCIuL251bWJlclwiO1xuaW1wb3J0IHF1YW50aWxlIGZyb20gXCIuL3F1YW50aWxlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgdmFsdWVvZikge1xuICB2YXIgbiA9IHZhbHVlcy5sZW5ndGgsXG4gICAgICBpID0gLTEsXG4gICAgICB2YWx1ZSxcbiAgICAgIG51bWJlcnMgPSBbXTtcblxuICBpZiAodmFsdWVvZiA9PSBudWxsKSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGlmICghaXNOYU4odmFsdWUgPSBudW1iZXIodmFsdWVzW2ldKSkpIHtcbiAgICAgICAgbnVtYmVycy5wdXNoKHZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBlbHNlIHtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgaWYgKCFpc05hTih2YWx1ZSA9IG51bWJlcih2YWx1ZW9mKHZhbHVlc1tpXSwgaSwgdmFsdWVzKSkpKSB7XG4gICAgICAgIG51bWJlcnMucHVzaCh2YWx1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHF1YW50aWxlKG51bWJlcnMuc29ydChhc2NlbmRpbmcpLCAwLjUpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYXJyYXlzKSB7XG4gIHZhciBuID0gYXJyYXlzLmxlbmd0aCxcbiAgICAgIG0sXG4gICAgICBpID0gLTEsXG4gICAgICBqID0gMCxcbiAgICAgIG1lcmdlZCxcbiAgICAgIGFycmF5O1xuXG4gIHdoaWxlICgrK2kgPCBuKSBqICs9IGFycmF5c1tpXS5sZW5ndGg7XG4gIG1lcmdlZCA9IG5ldyBBcnJheShqKTtcblxuICB3aGlsZSAoLS1uID49IDApIHtcbiAgICBhcnJheSA9IGFycmF5c1tuXTtcbiAgICBtID0gYXJyYXkubGVuZ3RoO1xuICAgIHdoaWxlICgtLW0gPj0gMCkge1xuICAgICAgbWVyZ2VkWy0tal0gPSBhcnJheVttXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWVyZ2VkO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzLCB2YWx1ZW9mKSB7XG4gIHZhciBuID0gdmFsdWVzLmxlbmd0aCxcbiAgICAgIGkgPSAtMSxcbiAgICAgIHZhbHVlLFxuICAgICAgbWluO1xuXG4gIGlmICh2YWx1ZW9mID09IG51bGwpIHtcbiAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBGaW5kIHRoZSBmaXJzdCBjb21wYXJhYmxlIHZhbHVlLlxuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlc1tpXSkgIT0gbnVsbCAmJiB2YWx1ZSA+PSB2YWx1ZSkge1xuICAgICAgICBtaW4gPSB2YWx1ZTtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gQ29tcGFyZSB0aGUgcmVtYWluaW5nIHZhbHVlcy5cbiAgICAgICAgICBpZiAoKHZhbHVlID0gdmFsdWVzW2ldKSAhPSBudWxsICYmIG1pbiA+IHZhbHVlKSB7XG4gICAgICAgICAgICBtaW4gPSB2YWx1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBlbHNlIHtcbiAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBGaW5kIHRoZSBmaXJzdCBjb21wYXJhYmxlIHZhbHVlLlxuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlb2YodmFsdWVzW2ldLCBpLCB2YWx1ZXMpKSAhPSBudWxsICYmIHZhbHVlID49IHZhbHVlKSB7XG4gICAgICAgIG1pbiA9IHZhbHVlO1xuICAgICAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBDb21wYXJlIHRoZSByZW1haW5pbmcgdmFsdWVzLlxuICAgICAgICAgIGlmICgodmFsdWUgPSB2YWx1ZW9mKHZhbHVlc1tpXSwgaSwgdmFsdWVzKSkgIT0gbnVsbCAmJiBtaW4gPiB2YWx1ZSkge1xuICAgICAgICAgICAgbWluID0gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1pbjtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGFycmF5LCBpbmRleGVzKSB7XG4gIHZhciBpID0gaW5kZXhlcy5sZW5ndGgsIHBlcm11dGVzID0gbmV3IEFycmF5KGkpO1xuICB3aGlsZSAoaS0tKSBwZXJtdXRlc1tpXSA9IGFycmF5W2luZGV4ZXNbaV1dO1xuICByZXR1cm4gcGVybXV0ZXM7XG59XG4iLCJpbXBvcnQgYXNjZW5kaW5nIGZyb20gXCIuL2FzY2VuZGluZ1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZXMsIGNvbXBhcmUpIHtcbiAgaWYgKCEobiA9IHZhbHVlcy5sZW5ndGgpKSByZXR1cm47XG4gIHZhciBuLFxuICAgICAgaSA9IDAsXG4gICAgICBqID0gMCxcbiAgICAgIHhpLFxuICAgICAgeGogPSB2YWx1ZXNbal07XG5cbiAgaWYgKGNvbXBhcmUgPT0gbnVsbCkgY29tcGFyZSA9IGFzY2VuZGluZztcblxuICB3aGlsZSAoKytpIDwgbikge1xuICAgIGlmIChjb21wYXJlKHhpID0gdmFsdWVzW2ldLCB4aikgPCAwIHx8IGNvbXBhcmUoeGosIHhqKSAhPT0gMCkge1xuICAgICAgeGogPSB4aSwgaiA9IGk7XG4gICAgfVxuICB9XG5cbiAgaWYgKGNvbXBhcmUoeGosIHhqKSA9PT0gMCkgcmV0dXJuIGo7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhcnJheSwgaTAsIGkxKSB7XG4gIHZhciBtID0gKGkxID09IG51bGwgPyBhcnJheS5sZW5ndGggOiBpMSkgLSAoaTAgPSBpMCA9PSBudWxsID8gMCA6ICtpMCksXG4gICAgICB0LFxuICAgICAgaTtcblxuICB3aGlsZSAobSkge1xuICAgIGkgPSBNYXRoLnJhbmRvbSgpICogbS0tIHwgMDtcbiAgICB0ID0gYXJyYXlbbSArIGkwXTtcbiAgICBhcnJheVttICsgaTBdID0gYXJyYXlbaSArIGkwXTtcbiAgICBhcnJheVtpICsgaTBdID0gdDtcbiAgfVxuXG4gIHJldHVybiBhcnJheTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgdmFsdWVvZikge1xuICB2YXIgbiA9IHZhbHVlcy5sZW5ndGgsXG4gICAgICBpID0gLTEsXG4gICAgICB2YWx1ZSxcbiAgICAgIHN1bSA9IDA7XG5cbiAgaWYgKHZhbHVlb2YgPT0gbnVsbCkge1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpZiAodmFsdWUgPSArdmFsdWVzW2ldKSBzdW0gKz0gdmFsdWU7IC8vIE5vdGU6IHplcm8gYW5kIG51bGwgYXJlIGVxdWl2YWxlbnQuXG4gICAgfVxuICB9XG5cbiAgZWxzZSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGlmICh2YWx1ZSA9ICt2YWx1ZW9mKHZhbHVlc1tpXSwgaSwgdmFsdWVzKSkgc3VtICs9IHZhbHVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBzdW07XG59XG4iLCJpbXBvcnQgbWluIGZyb20gXCIuL21pblwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihtYXRyaXgpIHtcbiAgaWYgKCEobiA9IG1hdHJpeC5sZW5ndGgpKSByZXR1cm4gW107XG4gIGZvciAodmFyIGkgPSAtMSwgbSA9IG1pbihtYXRyaXgsIGxlbmd0aCksIHRyYW5zcG9zZSA9IG5ldyBBcnJheShtKTsgKytpIDwgbTspIHtcbiAgICBmb3IgKHZhciBqID0gLTEsIG4sIHJvdyA9IHRyYW5zcG9zZVtpXSA9IG5ldyBBcnJheShuKTsgKytqIDwgbjspIHtcbiAgICAgIHJvd1tqXSA9IG1hdHJpeFtqXVtpXTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRyYW5zcG9zZTtcbn1cblxuZnVuY3Rpb24gbGVuZ3RoKGQpIHtcbiAgcmV0dXJuIGQubGVuZ3RoO1xufVxuIiwiaW1wb3J0IHRyYW5zcG9zZSBmcm9tIFwiLi90cmFuc3Bvc2VcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0cmFuc3Bvc2UoYXJndW1lbnRzKTtcbn1cbiIsImV4cG9ydCB2YXIgc2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiB4O1xufVxuIiwiaW1wb3J0IHtzbGljZX0gZnJvbSBcIi4vYXJyYXlcIjtcbmltcG9ydCBpZGVudGl0eSBmcm9tIFwiLi9pZGVudGl0eVwiO1xuXG52YXIgdG9wID0gMSxcbiAgICByaWdodCA9IDIsXG4gICAgYm90dG9tID0gMyxcbiAgICBsZWZ0ID0gNCxcbiAgICBlcHNpbG9uID0gMWUtNjtcblxuZnVuY3Rpb24gdHJhbnNsYXRlWCh4KSB7XG4gIHJldHVybiBcInRyYW5zbGF0ZShcIiArICh4ICsgMC41KSArIFwiLDApXCI7XG59XG5cbmZ1bmN0aW9uIHRyYW5zbGF0ZVkoeSkge1xuICByZXR1cm4gXCJ0cmFuc2xhdGUoMCxcIiArICh5ICsgMC41KSArIFwiKVwiO1xufVxuXG5mdW5jdGlvbiBudW1iZXIoc2NhbGUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gK3NjYWxlKGQpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBjZW50ZXIoc2NhbGUpIHtcbiAgdmFyIG9mZnNldCA9IE1hdGgubWF4KDAsIHNjYWxlLmJhbmR3aWR0aCgpIC0gMSkgLyAyOyAvLyBBZGp1c3QgZm9yIDAuNXB4IG9mZnNldC5cbiAgaWYgKHNjYWxlLnJvdW5kKCkpIG9mZnNldCA9IE1hdGgucm91bmQob2Zmc2V0KTtcbiAgcmV0dXJuIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gK3NjYWxlKGQpICsgb2Zmc2V0O1xuICB9O1xufVxuXG5mdW5jdGlvbiBlbnRlcmluZygpIHtcbiAgcmV0dXJuICF0aGlzLl9fYXhpcztcbn1cblxuZnVuY3Rpb24gYXhpcyhvcmllbnQsIHNjYWxlKSB7XG4gIHZhciB0aWNrQXJndW1lbnRzID0gW10sXG4gICAgICB0aWNrVmFsdWVzID0gbnVsbCxcbiAgICAgIHRpY2tGb3JtYXQgPSBudWxsLFxuICAgICAgdGlja1NpemVJbm5lciA9IDYsXG4gICAgICB0aWNrU2l6ZU91dGVyID0gNixcbiAgICAgIHRpY2tQYWRkaW5nID0gMyxcbiAgICAgIGsgPSBvcmllbnQgPT09IHRvcCB8fCBvcmllbnQgPT09IGxlZnQgPyAtMSA6IDEsXG4gICAgICB4ID0gb3JpZW50ID09PSBsZWZ0IHx8IG9yaWVudCA9PT0gcmlnaHQgPyBcInhcIiA6IFwieVwiLFxuICAgICAgdHJhbnNmb3JtID0gb3JpZW50ID09PSB0b3AgfHwgb3JpZW50ID09PSBib3R0b20gPyB0cmFuc2xhdGVYIDogdHJhbnNsYXRlWTtcblxuICBmdW5jdGlvbiBheGlzKGNvbnRleHQpIHtcbiAgICB2YXIgdmFsdWVzID0gdGlja1ZhbHVlcyA9PSBudWxsID8gKHNjYWxlLnRpY2tzID8gc2NhbGUudGlja3MuYXBwbHkoc2NhbGUsIHRpY2tBcmd1bWVudHMpIDogc2NhbGUuZG9tYWluKCkpIDogdGlja1ZhbHVlcyxcbiAgICAgICAgZm9ybWF0ID0gdGlja0Zvcm1hdCA9PSBudWxsID8gKHNjYWxlLnRpY2tGb3JtYXQgPyBzY2FsZS50aWNrRm9ybWF0LmFwcGx5KHNjYWxlLCB0aWNrQXJndW1lbnRzKSA6IGlkZW50aXR5KSA6IHRpY2tGb3JtYXQsXG4gICAgICAgIHNwYWNpbmcgPSBNYXRoLm1heCh0aWNrU2l6ZUlubmVyLCAwKSArIHRpY2tQYWRkaW5nLFxuICAgICAgICByYW5nZSA9IHNjYWxlLnJhbmdlKCksXG4gICAgICAgIHJhbmdlMCA9ICtyYW5nZVswXSArIDAuNSxcbiAgICAgICAgcmFuZ2UxID0gK3JhbmdlW3JhbmdlLmxlbmd0aCAtIDFdICsgMC41LFxuICAgICAgICBwb3NpdGlvbiA9IChzY2FsZS5iYW5kd2lkdGggPyBjZW50ZXIgOiBudW1iZXIpKHNjYWxlLmNvcHkoKSksXG4gICAgICAgIHNlbGVjdGlvbiA9IGNvbnRleHQuc2VsZWN0aW9uID8gY29udGV4dC5zZWxlY3Rpb24oKSA6IGNvbnRleHQsXG4gICAgICAgIHBhdGggPSBzZWxlY3Rpb24uc2VsZWN0QWxsKFwiLmRvbWFpblwiKS5kYXRhKFtudWxsXSksXG4gICAgICAgIHRpY2sgPSBzZWxlY3Rpb24uc2VsZWN0QWxsKFwiLnRpY2tcIikuZGF0YSh2YWx1ZXMsIHNjYWxlKS5vcmRlcigpLFxuICAgICAgICB0aWNrRXhpdCA9IHRpY2suZXhpdCgpLFxuICAgICAgICB0aWNrRW50ZXIgPSB0aWNrLmVudGVyKCkuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgXCJ0aWNrXCIpLFxuICAgICAgICBsaW5lID0gdGljay5zZWxlY3QoXCJsaW5lXCIpLFxuICAgICAgICB0ZXh0ID0gdGljay5zZWxlY3QoXCJ0ZXh0XCIpO1xuXG4gICAgcGF0aCA9IHBhdGgubWVyZ2UocGF0aC5lbnRlcigpLmluc2VydChcInBhdGhcIiwgXCIudGlja1wiKVxuICAgICAgICAuYXR0cihcImNsYXNzXCIsIFwiZG9tYWluXCIpXG4gICAgICAgIC5hdHRyKFwic3Ryb2tlXCIsIFwiY3VycmVudENvbG9yXCIpKTtcblxuICAgIHRpY2sgPSB0aWNrLm1lcmdlKHRpY2tFbnRlcik7XG5cbiAgICBsaW5lID0gbGluZS5tZXJnZSh0aWNrRW50ZXIuYXBwZW5kKFwibGluZVwiKVxuICAgICAgICAuYXR0cihcInN0cm9rZVwiLCBcImN1cnJlbnRDb2xvclwiKVxuICAgICAgICAuYXR0cih4ICsgXCIyXCIsIGsgKiB0aWNrU2l6ZUlubmVyKSk7XG5cbiAgICB0ZXh0ID0gdGV4dC5tZXJnZSh0aWNrRW50ZXIuYXBwZW5kKFwidGV4dFwiKVxuICAgICAgICAuYXR0cihcImZpbGxcIiwgXCJjdXJyZW50Q29sb3JcIilcbiAgICAgICAgLmF0dHIoeCwgayAqIHNwYWNpbmcpXG4gICAgICAgIC5hdHRyKFwiZHlcIiwgb3JpZW50ID09PSB0b3AgPyBcIjBlbVwiIDogb3JpZW50ID09PSBib3R0b20gPyBcIjAuNzFlbVwiIDogXCIwLjMyZW1cIikpO1xuXG4gICAgaWYgKGNvbnRleHQgIT09IHNlbGVjdGlvbikge1xuICAgICAgcGF0aCA9IHBhdGgudHJhbnNpdGlvbihjb250ZXh0KTtcbiAgICAgIHRpY2sgPSB0aWNrLnRyYW5zaXRpb24oY29udGV4dCk7XG4gICAgICBsaW5lID0gbGluZS50cmFuc2l0aW9uKGNvbnRleHQpO1xuICAgICAgdGV4dCA9IHRleHQudHJhbnNpdGlvbihjb250ZXh0KTtcblxuICAgICAgdGlja0V4aXQgPSB0aWNrRXhpdC50cmFuc2l0aW9uKGNvbnRleHQpXG4gICAgICAgICAgLmF0dHIoXCJvcGFjaXR5XCIsIGVwc2lsb24pXG4gICAgICAgICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gaXNGaW5pdGUoZCA9IHBvc2l0aW9uKGQpKSA/IHRyYW5zZm9ybShkKSA6IHRoaXMuZ2V0QXR0cmlidXRlKFwidHJhbnNmb3JtXCIpOyB9KTtcblxuICAgICAgdGlja0VudGVyXG4gICAgICAgICAgLmF0dHIoXCJvcGFjaXR5XCIsIGVwc2lsb24pXG4gICAgICAgICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgZnVuY3Rpb24oZCkgeyB2YXIgcCA9IHRoaXMucGFyZW50Tm9kZS5fX2F4aXM7IHJldHVybiB0cmFuc2Zvcm0ocCAmJiBpc0Zpbml0ZShwID0gcChkKSkgPyBwIDogcG9zaXRpb24oZCkpOyB9KTtcbiAgICB9XG5cbiAgICB0aWNrRXhpdC5yZW1vdmUoKTtcblxuICAgIHBhdGhcbiAgICAgICAgLmF0dHIoXCJkXCIsIG9yaWVudCA9PT0gbGVmdCB8fCBvcmllbnQgPT0gcmlnaHRcbiAgICAgICAgICAgID8gKHRpY2tTaXplT3V0ZXIgPyBcIk1cIiArIGsgKiB0aWNrU2l6ZU91dGVyICsgXCIsXCIgKyByYW5nZTAgKyBcIkgwLjVWXCIgKyByYW5nZTEgKyBcIkhcIiArIGsgKiB0aWNrU2l6ZU91dGVyIDogXCJNMC41LFwiICsgcmFuZ2UwICsgXCJWXCIgKyByYW5nZTEpXG4gICAgICAgICAgICA6ICh0aWNrU2l6ZU91dGVyID8gXCJNXCIgKyByYW5nZTAgKyBcIixcIiArIGsgKiB0aWNrU2l6ZU91dGVyICsgXCJWMC41SFwiICsgcmFuZ2UxICsgXCJWXCIgKyBrICogdGlja1NpemVPdXRlciA6IFwiTVwiICsgcmFuZ2UwICsgXCIsMC41SFwiICsgcmFuZ2UxKSk7XG5cbiAgICB0aWNrXG4gICAgICAgIC5hdHRyKFwib3BhY2l0eVwiLCAxKVxuICAgICAgICAuYXR0cihcInRyYW5zZm9ybVwiLCBmdW5jdGlvbihkKSB7IHJldHVybiB0cmFuc2Zvcm0ocG9zaXRpb24oZCkpOyB9KTtcblxuICAgIGxpbmVcbiAgICAgICAgLmF0dHIoeCArIFwiMlwiLCBrICogdGlja1NpemVJbm5lcik7XG5cbiAgICB0ZXh0XG4gICAgICAgIC5hdHRyKHgsIGsgKiBzcGFjaW5nKVxuICAgICAgICAudGV4dChmb3JtYXQpO1xuXG4gICAgc2VsZWN0aW9uLmZpbHRlcihlbnRlcmluZylcbiAgICAgICAgLmF0dHIoXCJmaWxsXCIsIFwibm9uZVwiKVxuICAgICAgICAuYXR0cihcImZvbnQtc2l6ZVwiLCAxMClcbiAgICAgICAgLmF0dHIoXCJmb250LWZhbWlseVwiLCBcInNhbnMtc2VyaWZcIilcbiAgICAgICAgLmF0dHIoXCJ0ZXh0LWFuY2hvclwiLCBvcmllbnQgPT09IHJpZ2h0ID8gXCJzdGFydFwiIDogb3JpZW50ID09PSBsZWZ0ID8gXCJlbmRcIiA6IFwibWlkZGxlXCIpO1xuXG4gICAgc2VsZWN0aW9uXG4gICAgICAgIC5lYWNoKGZ1bmN0aW9uKCkgeyB0aGlzLl9fYXhpcyA9IHBvc2l0aW9uOyB9KTtcbiAgfVxuXG4gIGF4aXMuc2NhbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc2NhbGUgPSBfLCBheGlzKSA6IHNjYWxlO1xuICB9O1xuXG4gIGF4aXMudGlja3MgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGlja0FyZ3VtZW50cyA9IHNsaWNlLmNhbGwoYXJndW1lbnRzKSwgYXhpcztcbiAgfTtcblxuICBheGlzLnRpY2tBcmd1bWVudHMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGlja0FyZ3VtZW50cyA9IF8gPT0gbnVsbCA/IFtdIDogc2xpY2UuY2FsbChfKSwgYXhpcykgOiB0aWNrQXJndW1lbnRzLnNsaWNlKCk7XG4gIH07XG5cbiAgYXhpcy50aWNrVmFsdWVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRpY2tWYWx1ZXMgPSBfID09IG51bGwgPyBudWxsIDogc2xpY2UuY2FsbChfKSwgYXhpcykgOiB0aWNrVmFsdWVzICYmIHRpY2tWYWx1ZXMuc2xpY2UoKTtcbiAgfTtcblxuICBheGlzLnRpY2tGb3JtYXQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGlja0Zvcm1hdCA9IF8sIGF4aXMpIDogdGlja0Zvcm1hdDtcbiAgfTtcblxuICBheGlzLnRpY2tTaXplID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRpY2tTaXplSW5uZXIgPSB0aWNrU2l6ZU91dGVyID0gK18sIGF4aXMpIDogdGlja1NpemVJbm5lcjtcbiAgfTtcblxuICBheGlzLnRpY2tTaXplSW5uZXIgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGlja1NpemVJbm5lciA9ICtfLCBheGlzKSA6IHRpY2tTaXplSW5uZXI7XG4gIH07XG5cbiAgYXhpcy50aWNrU2l6ZU91dGVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRpY2tTaXplT3V0ZXIgPSArXywgYXhpcykgOiB0aWNrU2l6ZU91dGVyO1xuICB9O1xuXG4gIGF4aXMudGlja1BhZGRpbmcgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGlja1BhZGRpbmcgPSArXywgYXhpcykgOiB0aWNrUGFkZGluZztcbiAgfTtcblxuICByZXR1cm4gYXhpcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGF4aXNUb3Aoc2NhbGUpIHtcbiAgcmV0dXJuIGF4aXModG9wLCBzY2FsZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBheGlzUmlnaHQoc2NhbGUpIHtcbiAgcmV0dXJuIGF4aXMocmlnaHQsIHNjYWxlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGF4aXNCb3R0b20oc2NhbGUpIHtcbiAgcmV0dXJuIGF4aXMoYm90dG9tLCBzY2FsZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBheGlzTGVmdChzY2FsZSkge1xuICByZXR1cm4gYXhpcyhsZWZ0LCBzY2FsZSk7XG59XG4iLCJ2YXIgbm9vcCA9IHt2YWx1ZTogZnVuY3Rpb24oKSB7fX07XG5cbmZ1bmN0aW9uIGRpc3BhdGNoKCkge1xuICBmb3IgKHZhciBpID0gMCwgbiA9IGFyZ3VtZW50cy5sZW5ndGgsIF8gPSB7fSwgdDsgaSA8IG47ICsraSkge1xuICAgIGlmICghKHQgPSBhcmd1bWVudHNbaV0gKyBcIlwiKSB8fCAodCBpbiBfKSB8fCAvW1xccy5dLy50ZXN0KHQpKSB0aHJvdyBuZXcgRXJyb3IoXCJpbGxlZ2FsIHR5cGU6IFwiICsgdCk7XG4gICAgX1t0XSA9IFtdO1xuICB9XG4gIHJldHVybiBuZXcgRGlzcGF0Y2goXyk7XG59XG5cbmZ1bmN0aW9uIERpc3BhdGNoKF8pIHtcbiAgdGhpcy5fID0gXztcbn1cblxuZnVuY3Rpb24gcGFyc2VUeXBlbmFtZXModHlwZW5hbWVzLCB0eXBlcykge1xuICByZXR1cm4gdHlwZW5hbWVzLnRyaW0oKS5zcGxpdCgvXnxcXHMrLykubWFwKGZ1bmN0aW9uKHQpIHtcbiAgICB2YXIgbmFtZSA9IFwiXCIsIGkgPSB0LmluZGV4T2YoXCIuXCIpO1xuICAgIGlmIChpID49IDApIG5hbWUgPSB0LnNsaWNlKGkgKyAxKSwgdCA9IHQuc2xpY2UoMCwgaSk7XG4gICAgaWYgKHQgJiYgIXR5cGVzLmhhc093blByb3BlcnR5KHQpKSB0aHJvdyBuZXcgRXJyb3IoXCJ1bmtub3duIHR5cGU6IFwiICsgdCk7XG4gICAgcmV0dXJuIHt0eXBlOiB0LCBuYW1lOiBuYW1lfTtcbiAgfSk7XG59XG5cbkRpc3BhdGNoLnByb3RvdHlwZSA9IGRpc3BhdGNoLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IERpc3BhdGNoLFxuICBvbjogZnVuY3Rpb24odHlwZW5hbWUsIGNhbGxiYWNrKSB7XG4gICAgdmFyIF8gPSB0aGlzLl8sXG4gICAgICAgIFQgPSBwYXJzZVR5cGVuYW1lcyh0eXBlbmFtZSArIFwiXCIsIF8pLFxuICAgICAgICB0LFxuICAgICAgICBpID0gLTEsXG4gICAgICAgIG4gPSBULmxlbmd0aDtcblxuICAgIC8vIElmIG5vIGNhbGxiYWNrIHdhcyBzcGVjaWZpZWQsIHJldHVybiB0aGUgY2FsbGJhY2sgb2YgdGhlIGdpdmVuIHR5cGUgYW5kIG5hbWUuXG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKCh0ID0gKHR5cGVuYW1lID0gVFtpXSkudHlwZSkgJiYgKHQgPSBnZXQoX1t0XSwgdHlwZW5hbWUubmFtZSkpKSByZXR1cm4gdDtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBJZiBhIHR5cGUgd2FzIHNwZWNpZmllZCwgc2V0IHRoZSBjYWxsYmFjayBmb3IgdGhlIGdpdmVuIHR5cGUgYW5kIG5hbWUuXG4gICAgLy8gT3RoZXJ3aXNlLCBpZiBhIG51bGwgY2FsbGJhY2sgd2FzIHNwZWNpZmllZCwgcmVtb3ZlIGNhbGxiYWNrcyBvZiB0aGUgZ2l2ZW4gbmFtZS5cbiAgICBpZiAoY2FsbGJhY2sgIT0gbnVsbCAmJiB0eXBlb2YgY2FsbGJhY2sgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBjYWxsYmFjazogXCIgKyBjYWxsYmFjayk7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGlmICh0ID0gKHR5cGVuYW1lID0gVFtpXSkudHlwZSkgX1t0XSA9IHNldChfW3RdLCB0eXBlbmFtZS5uYW1lLCBjYWxsYmFjayk7XG4gICAgICBlbHNlIGlmIChjYWxsYmFjayA9PSBudWxsKSBmb3IgKHQgaW4gXykgX1t0XSA9IHNldChfW3RdLCB0eXBlbmFtZS5uYW1lLCBudWxsKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfSxcbiAgY29weTogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGNvcHkgPSB7fSwgXyA9IHRoaXMuXztcbiAgICBmb3IgKHZhciB0IGluIF8pIGNvcHlbdF0gPSBfW3RdLnNsaWNlKCk7XG4gICAgcmV0dXJuIG5ldyBEaXNwYXRjaChjb3B5KTtcbiAgfSxcbiAgY2FsbDogZnVuY3Rpb24odHlwZSwgdGhhdCkge1xuICAgIGlmICgobiA9IGFyZ3VtZW50cy5sZW5ndGggLSAyKSA+IDApIGZvciAodmFyIGFyZ3MgPSBuZXcgQXJyYXkobiksIGkgPSAwLCBuLCB0OyBpIDwgbjsgKytpKSBhcmdzW2ldID0gYXJndW1lbnRzW2kgKyAyXTtcbiAgICBpZiAoIXRoaXMuXy5oYXNPd25Qcm9wZXJ0eSh0eXBlKSkgdGhyb3cgbmV3IEVycm9yKFwidW5rbm93biB0eXBlOiBcIiArIHR5cGUpO1xuICAgIGZvciAodCA9IHRoaXMuX1t0eXBlXSwgaSA9IDAsIG4gPSB0Lmxlbmd0aDsgaSA8IG47ICsraSkgdFtpXS52YWx1ZS5hcHBseSh0aGF0LCBhcmdzKTtcbiAgfSxcbiAgYXBwbHk6IGZ1bmN0aW9uKHR5cGUsIHRoYXQsIGFyZ3MpIHtcbiAgICBpZiAoIXRoaXMuXy5oYXNPd25Qcm9wZXJ0eSh0eXBlKSkgdGhyb3cgbmV3IEVycm9yKFwidW5rbm93biB0eXBlOiBcIiArIHR5cGUpO1xuICAgIGZvciAodmFyIHQgPSB0aGlzLl9bdHlwZV0sIGkgPSAwLCBuID0gdC5sZW5ndGg7IGkgPCBuOyArK2kpIHRbaV0udmFsdWUuYXBwbHkodGhhdCwgYXJncyk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGdldCh0eXBlLCBuYW1lKSB7XG4gIGZvciAodmFyIGkgPSAwLCBuID0gdHlwZS5sZW5ndGgsIGM7IGkgPCBuOyArK2kpIHtcbiAgICBpZiAoKGMgPSB0eXBlW2ldKS5uYW1lID09PSBuYW1lKSB7XG4gICAgICByZXR1cm4gYy52YWx1ZTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gc2V0KHR5cGUsIG5hbWUsIGNhbGxiYWNrKSB7XG4gIGZvciAodmFyIGkgPSAwLCBuID0gdHlwZS5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICBpZiAodHlwZVtpXS5uYW1lID09PSBuYW1lKSB7XG4gICAgICB0eXBlW2ldID0gbm9vcCwgdHlwZSA9IHR5cGUuc2xpY2UoMCwgaSkuY29uY2F0KHR5cGUuc2xpY2UoaSArIDEpKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICBpZiAoY2FsbGJhY2sgIT0gbnVsbCkgdHlwZS5wdXNoKHtuYW1lOiBuYW1lLCB2YWx1ZTogY2FsbGJhY2t9KTtcbiAgcmV0dXJuIHR5cGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGRpc3BhdGNoO1xuIiwiZnVuY3Rpb24gbm9uZSgpIHt9XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdG9yKSB7XG4gIHJldHVybiBzZWxlY3RvciA9PSBudWxsID8gbm9uZSA6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xuICB9O1xufVxuIiwiZnVuY3Rpb24gZW1wdHkoKSB7XG4gIHJldHVybiBbXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgcmV0dXJuIHNlbGVjdG9yID09IG51bGwgPyBlbXB0eSA6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpO1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLm1hdGNoZXMoc2VsZWN0b3IpO1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odXBkYXRlKSB7XG4gIHJldHVybiBuZXcgQXJyYXkodXBkYXRlLmxlbmd0aCk7XG59XG4iLCJpbXBvcnQgc3BhcnNlIGZyb20gXCIuL3NwYXJzZVwiO1xuaW1wb3J0IHtTZWxlY3Rpb259IGZyb20gXCIuL2luZGV4XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFNlbGVjdGlvbih0aGlzLl9lbnRlciB8fCB0aGlzLl9ncm91cHMubWFwKHNwYXJzZSksIHRoaXMuX3BhcmVudHMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gRW50ZXJOb2RlKHBhcmVudCwgZGF0dW0pIHtcbiAgdGhpcy5vd25lckRvY3VtZW50ID0gcGFyZW50Lm93bmVyRG9jdW1lbnQ7XG4gIHRoaXMubmFtZXNwYWNlVVJJID0gcGFyZW50Lm5hbWVzcGFjZVVSSTtcbiAgdGhpcy5fbmV4dCA9IG51bGw7XG4gIHRoaXMuX3BhcmVudCA9IHBhcmVudDtcbiAgdGhpcy5fX2RhdGFfXyA9IGRhdHVtO1xufVxuXG5FbnRlck5vZGUucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogRW50ZXJOb2RlLFxuICBhcHBlbmRDaGlsZDogZnVuY3Rpb24oY2hpbGQpIHsgcmV0dXJuIHRoaXMuX3BhcmVudC5pbnNlcnRCZWZvcmUoY2hpbGQsIHRoaXMuX25leHQpOyB9LFxuICBpbnNlcnRCZWZvcmU6IGZ1bmN0aW9uKGNoaWxkLCBuZXh0KSB7IHJldHVybiB0aGlzLl9wYXJlbnQuaW5zZXJ0QmVmb3JlKGNoaWxkLCBuZXh0KTsgfSxcbiAgcXVlcnlTZWxlY3RvcjogZnVuY3Rpb24oc2VsZWN0b3IpIHsgcmV0dXJuIHRoaXMuX3BhcmVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTsgfSxcbiAgcXVlcnlTZWxlY3RvckFsbDogZnVuY3Rpb24oc2VsZWN0b3IpIHsgcmV0dXJuIHRoaXMuX3BhcmVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTsgfVxufTtcbiIsImltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleFwiO1xuaW1wb3J0IHtFbnRlck5vZGV9IGZyb20gXCIuL2VudGVyXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4uL2NvbnN0YW50XCI7XG5cbnZhciBrZXlQcmVmaXggPSBcIiRcIjsgLy8gUHJvdGVjdCBhZ2FpbnN0IGtleXMgbGlrZSDigJxfX3Byb3RvX1/igJ0uXG5cbmZ1bmN0aW9uIGJpbmRJbmRleChwYXJlbnQsIGdyb3VwLCBlbnRlciwgdXBkYXRlLCBleGl0LCBkYXRhKSB7XG4gIHZhciBpID0gMCxcbiAgICAgIG5vZGUsXG4gICAgICBncm91cExlbmd0aCA9IGdyb3VwLmxlbmd0aCxcbiAgICAgIGRhdGFMZW5ndGggPSBkYXRhLmxlbmd0aDtcblxuICAvLyBQdXQgYW55IG5vbi1udWxsIG5vZGVzIHRoYXQgZml0IGludG8gdXBkYXRlLlxuICAvLyBQdXQgYW55IG51bGwgbm9kZXMgaW50byBlbnRlci5cbiAgLy8gUHV0IGFueSByZW1haW5pbmcgZGF0YSBpbnRvIGVudGVyLlxuICBmb3IgKDsgaSA8IGRhdGFMZW5ndGg7ICsraSkge1xuICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgIG5vZGUuX19kYXRhX18gPSBkYXRhW2ldO1xuICAgICAgdXBkYXRlW2ldID0gbm9kZTtcbiAgICB9IGVsc2Uge1xuICAgICAgZW50ZXJbaV0gPSBuZXcgRW50ZXJOb2RlKHBhcmVudCwgZGF0YVtpXSk7XG4gICAgfVxuICB9XG5cbiAgLy8gUHV0IGFueSBub24tbnVsbCBub2RlcyB0aGF0IGRvbuKAmXQgZml0IGludG8gZXhpdC5cbiAgZm9yICg7IGkgPCBncm91cExlbmd0aDsgKytpKSB7XG4gICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgZXhpdFtpXSA9IG5vZGU7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGJpbmRLZXkocGFyZW50LCBncm91cCwgZW50ZXIsIHVwZGF0ZSwgZXhpdCwgZGF0YSwga2V5KSB7XG4gIHZhciBpLFxuICAgICAgbm9kZSxcbiAgICAgIG5vZGVCeUtleVZhbHVlID0ge30sXG4gICAgICBncm91cExlbmd0aCA9IGdyb3VwLmxlbmd0aCxcbiAgICAgIGRhdGFMZW5ndGggPSBkYXRhLmxlbmd0aCxcbiAgICAgIGtleVZhbHVlcyA9IG5ldyBBcnJheShncm91cExlbmd0aCksXG4gICAgICBrZXlWYWx1ZTtcblxuICAvLyBDb21wdXRlIHRoZSBrZXkgZm9yIGVhY2ggbm9kZS5cbiAgLy8gSWYgbXVsdGlwbGUgbm9kZXMgaGF2ZSB0aGUgc2FtZSBrZXksIHRoZSBkdXBsaWNhdGVzIGFyZSBhZGRlZCB0byBleGl0LlxuICBmb3IgKGkgPSAwOyBpIDwgZ3JvdXBMZW5ndGg7ICsraSkge1xuICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgIGtleVZhbHVlc1tpXSA9IGtleVZhbHVlID0ga2V5UHJlZml4ICsga2V5LmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApO1xuICAgICAgaWYgKGtleVZhbHVlIGluIG5vZGVCeUtleVZhbHVlKSB7XG4gICAgICAgIGV4aXRbaV0gPSBub2RlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbm9kZUJ5S2V5VmFsdWVba2V5VmFsdWVdID0gbm9kZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBDb21wdXRlIHRoZSBrZXkgZm9yIGVhY2ggZGF0dW0uXG4gIC8vIElmIHRoZXJlIGEgbm9kZSBhc3NvY2lhdGVkIHdpdGggdGhpcyBrZXksIGpvaW4gYW5kIGFkZCBpdCB0byB1cGRhdGUuXG4gIC8vIElmIHRoZXJlIGlzIG5vdCAob3IgdGhlIGtleSBpcyBhIGR1cGxpY2F0ZSksIGFkZCBpdCB0byBlbnRlci5cbiAgZm9yIChpID0gMDsgaSA8IGRhdGFMZW5ndGg7ICsraSkge1xuICAgIGtleVZhbHVlID0ga2V5UHJlZml4ICsga2V5LmNhbGwocGFyZW50LCBkYXRhW2ldLCBpLCBkYXRhKTtcbiAgICBpZiAobm9kZSA9IG5vZGVCeUtleVZhbHVlW2tleVZhbHVlXSkge1xuICAgICAgdXBkYXRlW2ldID0gbm9kZTtcbiAgICAgIG5vZGUuX19kYXRhX18gPSBkYXRhW2ldO1xuICAgICAgbm9kZUJ5S2V5VmFsdWVba2V5VmFsdWVdID0gbnVsbDtcbiAgICB9IGVsc2Uge1xuICAgICAgZW50ZXJbaV0gPSBuZXcgRW50ZXJOb2RlKHBhcmVudCwgZGF0YVtpXSk7XG4gICAgfVxuICB9XG5cbiAgLy8gQWRkIGFueSByZW1haW5pbmcgbm9kZXMgdGhhdCB3ZXJlIG5vdCBib3VuZCB0byBkYXRhIHRvIGV4aXQuXG4gIGZvciAoaSA9IDA7IGkgPCBncm91cExlbmd0aDsgKytpKSB7XG4gICAgaWYgKChub2RlID0gZ3JvdXBbaV0pICYmIChub2RlQnlLZXlWYWx1ZVtrZXlWYWx1ZXNbaV1dID09PSBub2RlKSkge1xuICAgICAgZXhpdFtpXSA9IG5vZGU7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbiAgaWYgKCF2YWx1ZSkge1xuICAgIGRhdGEgPSBuZXcgQXJyYXkodGhpcy5zaXplKCkpLCBqID0gLTE7XG4gICAgdGhpcy5lYWNoKGZ1bmN0aW9uKGQpIHsgZGF0YVsrK2pdID0gZDsgfSk7XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cblxuICB2YXIgYmluZCA9IGtleSA/IGJpbmRLZXkgOiBiaW5kSW5kZXgsXG4gICAgICBwYXJlbnRzID0gdGhpcy5fcGFyZW50cyxcbiAgICAgIGdyb3VwcyA9IHRoaXMuX2dyb3VwcztcblxuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIpIHZhbHVlID0gY29uc3RhbnQodmFsdWUpO1xuXG4gIGZvciAodmFyIG0gPSBncm91cHMubGVuZ3RoLCB1cGRhdGUgPSBuZXcgQXJyYXkobSksIGVudGVyID0gbmV3IEFycmF5KG0pLCBleGl0ID0gbmV3IEFycmF5KG0pLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIHZhciBwYXJlbnQgPSBwYXJlbnRzW2pdLFxuICAgICAgICBncm91cCA9IGdyb3Vwc1tqXSxcbiAgICAgICAgZ3JvdXBMZW5ndGggPSBncm91cC5sZW5ndGgsXG4gICAgICAgIGRhdGEgPSB2YWx1ZS5jYWxsKHBhcmVudCwgcGFyZW50ICYmIHBhcmVudC5fX2RhdGFfXywgaiwgcGFyZW50cyksXG4gICAgICAgIGRhdGFMZW5ndGggPSBkYXRhLmxlbmd0aCxcbiAgICAgICAgZW50ZXJHcm91cCA9IGVudGVyW2pdID0gbmV3IEFycmF5KGRhdGFMZW5ndGgpLFxuICAgICAgICB1cGRhdGVHcm91cCA9IHVwZGF0ZVtqXSA9IG5ldyBBcnJheShkYXRhTGVuZ3RoKSxcbiAgICAgICAgZXhpdEdyb3VwID0gZXhpdFtqXSA9IG5ldyBBcnJheShncm91cExlbmd0aCk7XG5cbiAgICBiaW5kKHBhcmVudCwgZ3JvdXAsIGVudGVyR3JvdXAsIHVwZGF0ZUdyb3VwLCBleGl0R3JvdXAsIGRhdGEsIGtleSk7XG5cbiAgICAvLyBOb3cgY29ubmVjdCB0aGUgZW50ZXIgbm9kZXMgdG8gdGhlaXIgZm9sbG93aW5nIHVwZGF0ZSBub2RlLCBzdWNoIHRoYXRcbiAgICAvLyBhcHBlbmRDaGlsZCBjYW4gaW5zZXJ0IHRoZSBtYXRlcmlhbGl6ZWQgZW50ZXIgbm9kZSBiZWZvcmUgdGhpcyBub2RlLFxuICAgIC8vIHJhdGhlciB0aGFuIGF0IHRoZSBlbmQgb2YgdGhlIHBhcmVudCBub2RlLlxuICAgIGZvciAodmFyIGkwID0gMCwgaTEgPSAwLCBwcmV2aW91cywgbmV4dDsgaTAgPCBkYXRhTGVuZ3RoOyArK2kwKSB7XG4gICAgICBpZiAocHJldmlvdXMgPSBlbnRlckdyb3VwW2kwXSkge1xuICAgICAgICBpZiAoaTAgPj0gaTEpIGkxID0gaTAgKyAxO1xuICAgICAgICB3aGlsZSAoIShuZXh0ID0gdXBkYXRlR3JvdXBbaTFdKSAmJiArK2kxIDwgZGF0YUxlbmd0aCk7XG4gICAgICAgIHByZXZpb3VzLl9uZXh0ID0gbmV4dCB8fCBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZSA9IG5ldyBTZWxlY3Rpb24odXBkYXRlLCBwYXJlbnRzKTtcbiAgdXBkYXRlLl9lbnRlciA9IGVudGVyO1xuICB1cGRhdGUuX2V4aXQgPSBleGl0O1xuICByZXR1cm4gdXBkYXRlO1xufVxuIiwiaW1wb3J0IHtTZWxlY3Rpb259IGZyb20gXCIuL2luZGV4XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbXBhcmUpIHtcbiAgaWYgKCFjb21wYXJlKSBjb21wYXJlID0gYXNjZW5kaW5nO1xuXG4gIGZ1bmN0aW9uIGNvbXBhcmVOb2RlKGEsIGIpIHtcbiAgICByZXR1cm4gYSAmJiBiID8gY29tcGFyZShhLl9fZGF0YV9fLCBiLl9fZGF0YV9fKSA6ICFhIC0gIWI7XG4gIH1cblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBzb3J0Z3JvdXBzID0gbmV3IEFycmF5KG0pLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBzb3J0Z3JvdXAgPSBzb3J0Z3JvdXBzW2pdID0gbmV3IEFycmF5KG4pLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICBzb3J0Z3JvdXBbaV0gPSBub2RlO1xuICAgICAgfVxuICAgIH1cbiAgICBzb3J0Z3JvdXAuc29ydChjb21wYXJlTm9kZSk7XG4gIH1cblxuICByZXR1cm4gbmV3IFNlbGVjdGlvbihzb3J0Z3JvdXBzLCB0aGlzLl9wYXJlbnRzKS5vcmRlcigpO1xufVxuXG5mdW5jdGlvbiBhc2NlbmRpbmcoYSwgYikge1xuICByZXR1cm4gYSA8IGIgPyAtMSA6IGEgPiBiID8gMSA6IGEgPj0gYiA/IDAgOiBOYU47XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGNhbGxiYWNrID0gYXJndW1lbnRzWzBdO1xuICBhcmd1bWVudHNbMF0gPSB0aGlzO1xuICBjYWxsYmFjay5hcHBseShudWxsLCBhcmd1bWVudHMpO1xuICByZXR1cm4gdGhpcztcbn1cbiIsImV4cG9ydCB2YXIgeGh0bWwgPSBcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBzdmc6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgeGh0bWw6IHhodG1sLFxuICB4bGluazogXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsXG4gIHhtbDogXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIixcbiAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC94bWxucy9cIlxufTtcbiIsImltcG9ydCBuYW1lc3BhY2VzIGZyb20gXCIuL25hbWVzcGFjZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSkge1xuICB2YXIgcHJlZml4ID0gbmFtZSArPSBcIlwiLCBpID0gcHJlZml4LmluZGV4T2YoXCI6XCIpO1xuICBpZiAoaSA+PSAwICYmIChwcmVmaXggPSBuYW1lLnNsaWNlKDAsIGkpKSAhPT0gXCJ4bWxuc1wiKSBuYW1lID0gbmFtZS5zbGljZShpICsgMSk7XG4gIHJldHVybiBuYW1lc3BhY2VzLmhhc093blByb3BlcnR5KHByZWZpeCkgPyB7c3BhY2U6IG5hbWVzcGFjZXNbcHJlZml4XSwgbG9jYWw6IG5hbWV9IDogbmFtZTtcbn1cbiIsImltcG9ydCBuYW1lc3BhY2UgZnJvbSBcIi4uL25hbWVzcGFjZVwiO1xuXG5mdW5jdGlvbiBhdHRyUmVtb3ZlKG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKG5hbWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyUmVtb3ZlTlMoZnVsbG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckNvbnN0YW50KG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJDb25zdGFudE5TKGZ1bGxuYW1lLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5zZXRBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwsIHZhbHVlKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKHYgPT0gbnVsbCkgdGhpcy5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gICAgZWxzZSB0aGlzLnNldEF0dHJpYnV0ZShuYW1lLCB2KTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckZ1bmN0aW9uTlMoZnVsbG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKHYgPT0gbnVsbCkgdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICAgIGVsc2UgdGhpcy5zZXRBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwsIHYpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICB2YXIgZnVsbG5hbWUgPSBuYW1lc3BhY2UobmFtZSk7XG5cbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgdmFyIG5vZGUgPSB0aGlzLm5vZGUoKTtcbiAgICByZXR1cm4gZnVsbG5hbWUubG9jYWxcbiAgICAgICAgPyBub2RlLmdldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbClcbiAgICAgICAgOiBub2RlLmdldEF0dHJpYnV0ZShmdWxsbmFtZSk7XG4gIH1cblxuICByZXR1cm4gdGhpcy5lYWNoKCh2YWx1ZSA9PSBudWxsXG4gICAgICA/IChmdWxsbmFtZS5sb2NhbCA/IGF0dHJSZW1vdmVOUyA6IGF0dHJSZW1vdmUpIDogKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICA/IChmdWxsbmFtZS5sb2NhbCA/IGF0dHJGdW5jdGlvbk5TIDogYXR0ckZ1bmN0aW9uKVxuICAgICAgOiAoZnVsbG5hbWUubG9jYWwgPyBhdHRyQ29uc3RhbnROUyA6IGF0dHJDb25zdGFudCkpKShmdWxsbmFtZSwgdmFsdWUpKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGUpIHtcbiAgcmV0dXJuIChub2RlLm93bmVyRG9jdW1lbnQgJiYgbm9kZS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3KSAvLyBub2RlIGlzIGEgTm9kZVxuICAgICAgfHwgKG5vZGUuZG9jdW1lbnQgJiYgbm9kZSkgLy8gbm9kZSBpcyBhIFdpbmRvd1xuICAgICAgfHwgbm9kZS5kZWZhdWx0VmlldzsgLy8gbm9kZSBpcyBhIERvY3VtZW50XG59XG4iLCJpbXBvcnQgZGVmYXVsdFZpZXcgZnJvbSBcIi4uL3dpbmRvd1wiO1xuXG5mdW5jdGlvbiBzdHlsZVJlbW92ZShuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KG5hbWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZUNvbnN0YW50KG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZUZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHYgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmICh2ID09IG51bGwpIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSk7XG4gICAgZWxzZSB0aGlzLnN0eWxlLnNldFByb3BlcnR5KG5hbWUsIHYsIHByaW9yaXR5KTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID4gMVxuICAgICAgPyB0aGlzLmVhY2goKHZhbHVlID09IG51bGxcbiAgICAgICAgICAgID8gc3R5bGVSZW1vdmUgOiB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgICAgPyBzdHlsZUZ1bmN0aW9uXG4gICAgICAgICAgICA6IHN0eWxlQ29uc3RhbnQpKG5hbWUsIHZhbHVlLCBwcmlvcml0eSA9PSBudWxsID8gXCJcIiA6IHByaW9yaXR5KSlcbiAgICAgIDogc3R5bGVWYWx1ZSh0aGlzLm5vZGUoKSwgbmFtZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdHlsZVZhbHVlKG5vZGUsIG5hbWUpIHtcbiAgcmV0dXJuIG5vZGUuc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZShuYW1lKVxuICAgICAgfHwgZGVmYXVsdFZpZXcobm9kZSkuZ2V0Q29tcHV0ZWRTdHlsZShub2RlLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKG5hbWUpO1xufVxuIiwiZnVuY3Rpb24gcHJvcGVydHlSZW1vdmUobmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgZGVsZXRlIHRoaXNbbmFtZV07XG4gIH07XG59XG5cbmZ1bmN0aW9uIHByb3BlcnR5Q29uc3RhbnQobmFtZSwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXNbbmFtZV0gPSB2YWx1ZTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gcHJvcGVydHlGdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHYgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmICh2ID09IG51bGwpIGRlbGV0ZSB0aGlzW25hbWVdO1xuICAgIGVsc2UgdGhpc1tuYW1lXSA9IHY7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID4gMVxuICAgICAgPyB0aGlzLmVhY2goKHZhbHVlID09IG51bGxcbiAgICAgICAgICA/IHByb3BlcnR5UmVtb3ZlIDogdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgICA/IHByb3BlcnR5RnVuY3Rpb25cbiAgICAgICAgICA6IHByb3BlcnR5Q29uc3RhbnQpKG5hbWUsIHZhbHVlKSlcbiAgICAgIDogdGhpcy5ub2RlKClbbmFtZV07XG59XG4iLCJmdW5jdGlvbiBjbGFzc0FycmF5KHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLnRyaW0oKS5zcGxpdCgvXnxcXHMrLyk7XG59XG5cbmZ1bmN0aW9uIGNsYXNzTGlzdChub2RlKSB7XG4gIHJldHVybiBub2RlLmNsYXNzTGlzdCB8fCBuZXcgQ2xhc3NMaXN0KG5vZGUpO1xufVxuXG5mdW5jdGlvbiBDbGFzc0xpc3Qobm9kZSkge1xuICB0aGlzLl9ub2RlID0gbm9kZTtcbiAgdGhpcy5fbmFtZXMgPSBjbGFzc0FycmF5KG5vZGUuZ2V0QXR0cmlidXRlKFwiY2xhc3NcIikgfHwgXCJcIik7XG59XG5cbkNsYXNzTGlzdC5wcm90b3R5cGUgPSB7XG4gIGFkZDogZnVuY3Rpb24obmFtZSkge1xuICAgIHZhciBpID0gdGhpcy5fbmFtZXMuaW5kZXhPZihuYW1lKTtcbiAgICBpZiAoaSA8IDApIHtcbiAgICAgIHRoaXMuX25hbWVzLnB1c2gobmFtZSk7XG4gICAgICB0aGlzLl9ub2RlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIHRoaXMuX25hbWVzLmpvaW4oXCIgXCIpKTtcbiAgICB9XG4gIH0sXG4gIHJlbW92ZTogZnVuY3Rpb24obmFtZSkge1xuICAgIHZhciBpID0gdGhpcy5fbmFtZXMuaW5kZXhPZihuYW1lKTtcbiAgICBpZiAoaSA+PSAwKSB7XG4gICAgICB0aGlzLl9uYW1lcy5zcGxpY2UoaSwgMSk7XG4gICAgICB0aGlzLl9ub2RlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIHRoaXMuX25hbWVzLmpvaW4oXCIgXCIpKTtcbiAgICB9XG4gIH0sXG4gIGNvbnRhaW5zOiBmdW5jdGlvbihuYW1lKSB7XG4gICAgcmV0dXJuIHRoaXMuX25hbWVzLmluZGV4T2YobmFtZSkgPj0gMDtcbiAgfVxufTtcblxuZnVuY3Rpb24gY2xhc3NlZEFkZChub2RlLCBuYW1lcykge1xuICB2YXIgbGlzdCA9IGNsYXNzTGlzdChub2RlKSwgaSA9IC0xLCBuID0gbmFtZXMubGVuZ3RoO1xuICB3aGlsZSAoKytpIDwgbikgbGlzdC5hZGQobmFtZXNbaV0pO1xufVxuXG5mdW5jdGlvbiBjbGFzc2VkUmVtb3ZlKG5vZGUsIG5hbWVzKSB7XG4gIHZhciBsaXN0ID0gY2xhc3NMaXN0KG5vZGUpLCBpID0gLTEsIG4gPSBuYW1lcy5sZW5ndGg7XG4gIHdoaWxlICgrK2kgPCBuKSBsaXN0LnJlbW92ZShuYW1lc1tpXSk7XG59XG5cbmZ1bmN0aW9uIGNsYXNzZWRUcnVlKG5hbWVzKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBjbGFzc2VkQWRkKHRoaXMsIG5hbWVzKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gY2xhc3NlZEZhbHNlKG5hbWVzKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBjbGFzc2VkUmVtb3ZlKHRoaXMsIG5hbWVzKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gY2xhc3NlZEZ1bmN0aW9uKG5hbWVzLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgKHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgPyBjbGFzc2VkQWRkIDogY2xhc3NlZFJlbW92ZSkodGhpcywgbmFtZXMpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICB2YXIgbmFtZXMgPSBjbGFzc0FycmF5KG5hbWUgKyBcIlwiKTtcblxuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICB2YXIgbGlzdCA9IGNsYXNzTGlzdCh0aGlzLm5vZGUoKSksIGkgPSAtMSwgbiA9IG5hbWVzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikgaWYgKCFsaXN0LmNvbnRhaW5zKG5hbWVzW2ldKSkgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgcmV0dXJuIHRoaXMuZWFjaCgodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgID8gY2xhc3NlZEZ1bmN0aW9uIDogdmFsdWVcbiAgICAgID8gY2xhc3NlZFRydWVcbiAgICAgIDogY2xhc3NlZEZhbHNlKShuYW1lcywgdmFsdWUpKTtcbn1cbiIsImZ1bmN0aW9uIHRleHRSZW1vdmUoKSB7XG4gIHRoaXMudGV4dENvbnRlbnQgPSBcIlwiO1xufVxuXG5mdW5jdGlvbiB0ZXh0Q29uc3RhbnQodmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMudGV4dENvbnRlbnQgPSB2YWx1ZTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gdGV4dEZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgdGhpcy50ZXh0Q29udGVudCA9IHYgPT0gbnVsbCA/IFwiXCIgOiB2O1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aFxuICAgICAgPyB0aGlzLmVhY2godmFsdWUgPT0gbnVsbFxuICAgICAgICAgID8gdGV4dFJlbW92ZSA6ICh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gdGV4dEZ1bmN0aW9uXG4gICAgICAgICAgOiB0ZXh0Q29uc3RhbnQpKHZhbHVlKSlcbiAgICAgIDogdGhpcy5ub2RlKCkudGV4dENvbnRlbnQ7XG59XG4iLCJmdW5jdGlvbiBodG1sUmVtb3ZlKCkge1xuICB0aGlzLmlubmVySFRNTCA9IFwiXCI7XG59XG5cbmZ1bmN0aW9uIGh0bWxDb25zdGFudCh2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5pbm5lckhUTUwgPSB2YWx1ZTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gaHRtbEZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgdGhpcy5pbm5lckhUTUwgPSB2ID09IG51bGwgPyBcIlwiIDogdjtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgID8gdGhpcy5lYWNoKHZhbHVlID09IG51bGxcbiAgICAgICAgICA/IGh0bWxSZW1vdmUgOiAodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgICA/IGh0bWxGdW5jdGlvblxuICAgICAgICAgIDogaHRtbENvbnN0YW50KSh2YWx1ZSkpXG4gICAgICA6IHRoaXMubm9kZSgpLmlubmVySFRNTDtcbn1cbiIsImZ1bmN0aW9uIHJhaXNlKCkge1xuICBpZiAodGhpcy5uZXh0U2libGluZykgdGhpcy5wYXJlbnROb2RlLmFwcGVuZENoaWxkKHRoaXMpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaChyYWlzZSk7XG59XG4iLCJmdW5jdGlvbiBsb3dlcigpIHtcbiAgaWYgKHRoaXMucHJldmlvdXNTaWJsaW5nKSB0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMsIHRoaXMucGFyZW50Tm9kZS5maXJzdENoaWxkKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLmVhY2gobG93ZXIpO1xufVxuIiwiaW1wb3J0IG5hbWVzcGFjZSBmcm9tIFwiLi9uYW1lc3BhY2VcIjtcbmltcG9ydCB7eGh0bWx9IGZyb20gXCIuL25hbWVzcGFjZXNcIjtcblxuZnVuY3Rpb24gY3JlYXRvckluaGVyaXQobmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGRvY3VtZW50ID0gdGhpcy5vd25lckRvY3VtZW50LFxuICAgICAgICB1cmkgPSB0aGlzLm5hbWVzcGFjZVVSSTtcbiAgICByZXR1cm4gdXJpID09PSB4aHRtbCAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQubmFtZXNwYWNlVVJJID09PSB4aHRtbFxuICAgICAgICA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQobmFtZSlcbiAgICAgICAgOiBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlModXJpLCBuYW1lKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gY3JlYXRvckZpeGVkKGZ1bGxuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lKSB7XG4gIHZhciBmdWxsbmFtZSA9IG5hbWVzcGFjZShuYW1lKTtcbiAgcmV0dXJuIChmdWxsbmFtZS5sb2NhbFxuICAgICAgPyBjcmVhdG9yRml4ZWRcbiAgICAgIDogY3JlYXRvckluaGVyaXQpKGZ1bGxuYW1lKTtcbn1cbiIsImltcG9ydCBjcmVhdG9yIGZyb20gXCIuLi9jcmVhdG9yXCI7XG5pbXBvcnQgc2VsZWN0b3IgZnJvbSBcIi4uL3NlbGVjdG9yXCI7XG5cbmZ1bmN0aW9uIGNvbnN0YW50TnVsbCgpIHtcbiAgcmV0dXJuIG51bGw7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIGJlZm9yZSkge1xuICB2YXIgY3JlYXRlID0gdHlwZW9mIG5hbWUgPT09IFwiZnVuY3Rpb25cIiA/IG5hbWUgOiBjcmVhdG9yKG5hbWUpLFxuICAgICAgc2VsZWN0ID0gYmVmb3JlID09IG51bGwgPyBjb25zdGFudE51bGwgOiB0eXBlb2YgYmVmb3JlID09PSBcImZ1bmN0aW9uXCIgPyBiZWZvcmUgOiBzZWxlY3RvcihiZWZvcmUpO1xuICByZXR1cm4gdGhpcy5zZWxlY3QoZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5zZXJ0QmVmb3JlKGNyZWF0ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCBzZWxlY3QuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCBudWxsKTtcbiAgfSk7XG59XG4iLCJmdW5jdGlvbiByZW1vdmUoKSB7XG4gIHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XG4gIGlmIChwYXJlbnQpIHBhcmVudC5yZW1vdmVDaGlsZCh0aGlzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLmVhY2gocmVtb3ZlKTtcbn1cbiIsImZ1bmN0aW9uIHNlbGVjdGlvbl9jbG9uZVNoYWxsb3coKSB7XG4gIHZhciBjbG9uZSA9IHRoaXMuY2xvbmVOb2RlKGZhbHNlKSwgcGFyZW50ID0gdGhpcy5wYXJlbnROb2RlO1xuICByZXR1cm4gcGFyZW50ID8gcGFyZW50Lmluc2VydEJlZm9yZShjbG9uZSwgdGhpcy5uZXh0U2libGluZykgOiBjbG9uZTtcbn1cblxuZnVuY3Rpb24gc2VsZWN0aW9uX2Nsb25lRGVlcCgpIHtcbiAgdmFyIGNsb25lID0gdGhpcy5jbG9uZU5vZGUodHJ1ZSksIHBhcmVudCA9IHRoaXMucGFyZW50Tm9kZTtcbiAgcmV0dXJuIHBhcmVudCA/IHBhcmVudC5pbnNlcnRCZWZvcmUoY2xvbmUsIHRoaXMubmV4dFNpYmxpbmcpIDogY2xvbmU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGRlZXApIHtcbiAgcmV0dXJuIHRoaXMuc2VsZWN0KGRlZXAgPyBzZWxlY3Rpb25fY2xvbmVEZWVwIDogc2VsZWN0aW9uX2Nsb25lU2hhbGxvdyk7XG59XG4iLCJ2YXIgZmlsdGVyRXZlbnRzID0ge307XG5cbmV4cG9ydCB2YXIgZXZlbnQgPSBudWxsO1xuXG5pZiAodHlwZW9mIGRvY3VtZW50ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuICBpZiAoIShcIm9ubW91c2VlbnRlclwiIGluIGVsZW1lbnQpKSB7XG4gICAgZmlsdGVyRXZlbnRzID0ge21vdXNlZW50ZXI6IFwibW91c2VvdmVyXCIsIG1vdXNlbGVhdmU6IFwibW91c2VvdXRcIn07XG4gIH1cbn1cblxuZnVuY3Rpb24gZmlsdGVyQ29udGV4dExpc3RlbmVyKGxpc3RlbmVyLCBpbmRleCwgZ3JvdXApIHtcbiAgbGlzdGVuZXIgPSBjb250ZXh0TGlzdGVuZXIobGlzdGVuZXIsIGluZGV4LCBncm91cCk7XG4gIHJldHVybiBmdW5jdGlvbihldmVudCkge1xuICAgIHZhciByZWxhdGVkID0gZXZlbnQucmVsYXRlZFRhcmdldDtcbiAgICBpZiAoIXJlbGF0ZWQgfHwgKHJlbGF0ZWQgIT09IHRoaXMgJiYgIShyZWxhdGVkLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKHRoaXMpICYgOCkpKSB7XG4gICAgICBsaXN0ZW5lci5jYWxsKHRoaXMsIGV2ZW50KTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGNvbnRleHRMaXN0ZW5lcihsaXN0ZW5lciwgaW5kZXgsIGdyb3VwKSB7XG4gIHJldHVybiBmdW5jdGlvbihldmVudDEpIHtcbiAgICB2YXIgZXZlbnQwID0gZXZlbnQ7IC8vIEV2ZW50cyBjYW4gYmUgcmVlbnRyYW50IChlLmcuLCBmb2N1cykuXG4gICAgZXZlbnQgPSBldmVudDE7XG4gICAgdHJ5IHtcbiAgICAgIGxpc3RlbmVyLmNhbGwodGhpcywgdGhpcy5fX2RhdGFfXywgaW5kZXgsIGdyb3VwKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgZXZlbnQgPSBldmVudDA7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBwYXJzZVR5cGVuYW1lcyh0eXBlbmFtZXMpIHtcbiAgcmV0dXJuIHR5cGVuYW1lcy50cmltKCkuc3BsaXQoL158XFxzKy8pLm1hcChmdW5jdGlvbih0KSB7XG4gICAgdmFyIG5hbWUgPSBcIlwiLCBpID0gdC5pbmRleE9mKFwiLlwiKTtcbiAgICBpZiAoaSA+PSAwKSBuYW1lID0gdC5zbGljZShpICsgMSksIHQgPSB0LnNsaWNlKDAsIGkpO1xuICAgIHJldHVybiB7dHlwZTogdCwgbmFtZTogbmFtZX07XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBvblJlbW92ZSh0eXBlbmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIG9uID0gdGhpcy5fX29uO1xuICAgIGlmICghb24pIHJldHVybjtcbiAgICBmb3IgKHZhciBqID0gMCwgaSA9IC0xLCBtID0gb24ubGVuZ3RoLCBvOyBqIDwgbTsgKytqKSB7XG4gICAgICBpZiAobyA9IG9uW2pdLCAoIXR5cGVuYW1lLnR5cGUgfHwgby50eXBlID09PSB0eXBlbmFtZS50eXBlKSAmJiBvLm5hbWUgPT09IHR5cGVuYW1lLm5hbWUpIHtcbiAgICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKG8udHlwZSwgby5saXN0ZW5lciwgby5jYXB0dXJlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG9uWysraV0gPSBvO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoKytpKSBvbi5sZW5ndGggPSBpO1xuICAgIGVsc2UgZGVsZXRlIHRoaXMuX19vbjtcbiAgfTtcbn1cblxuZnVuY3Rpb24gb25BZGQodHlwZW5hbWUsIHZhbHVlLCBjYXB0dXJlKSB7XG4gIHZhciB3cmFwID0gZmlsdGVyRXZlbnRzLmhhc093blByb3BlcnR5KHR5cGVuYW1lLnR5cGUpID8gZmlsdGVyQ29udGV4dExpc3RlbmVyIDogY29udGV4dExpc3RlbmVyO1xuICByZXR1cm4gZnVuY3Rpb24oZCwgaSwgZ3JvdXApIHtcbiAgICB2YXIgb24gPSB0aGlzLl9fb24sIG8sIGxpc3RlbmVyID0gd3JhcCh2YWx1ZSwgaSwgZ3JvdXApO1xuICAgIGlmIChvbikgZm9yICh2YXIgaiA9IDAsIG0gPSBvbi5sZW5ndGg7IGogPCBtOyArK2opIHtcbiAgICAgIGlmICgobyA9IG9uW2pdKS50eXBlID09PSB0eXBlbmFtZS50eXBlICYmIG8ubmFtZSA9PT0gdHlwZW5hbWUubmFtZSkge1xuICAgICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoby50eXBlLCBvLmxpc3RlbmVyLCBvLmNhcHR1cmUpO1xuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoby50eXBlLCBvLmxpc3RlbmVyID0gbGlzdGVuZXIsIG8uY2FwdHVyZSA9IGNhcHR1cmUpO1xuICAgICAgICBvLnZhbHVlID0gdmFsdWU7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKHR5cGVuYW1lLnR5cGUsIGxpc3RlbmVyLCBjYXB0dXJlKTtcbiAgICBvID0ge3R5cGU6IHR5cGVuYW1lLnR5cGUsIG5hbWU6IHR5cGVuYW1lLm5hbWUsIHZhbHVlOiB2YWx1ZSwgbGlzdGVuZXI6IGxpc3RlbmVyLCBjYXB0dXJlOiBjYXB0dXJlfTtcbiAgICBpZiAoIW9uKSB0aGlzLl9fb24gPSBbb107XG4gICAgZWxzZSBvbi5wdXNoKG8pO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih0eXBlbmFtZSwgdmFsdWUsIGNhcHR1cmUpIHtcbiAgdmFyIHR5cGVuYW1lcyA9IHBhcnNlVHlwZW5hbWVzKHR5cGVuYW1lICsgXCJcIiksIGksIG4gPSB0eXBlbmFtZXMubGVuZ3RoLCB0O1xuXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgIHZhciBvbiA9IHRoaXMubm9kZSgpLl9fb247XG4gICAgaWYgKG9uKSBmb3IgKHZhciBqID0gMCwgbSA9IG9uLmxlbmd0aCwgbzsgaiA8IG07ICsraikge1xuICAgICAgZm9yIChpID0gMCwgbyA9IG9uW2pdOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGlmICgodCA9IHR5cGVuYW1lc1tpXSkudHlwZSA9PT0gby50eXBlICYmIHQubmFtZSA9PT0gby5uYW1lKSB7XG4gICAgICAgICAgcmV0dXJuIG8udmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgb24gPSB2YWx1ZSA/IG9uQWRkIDogb25SZW1vdmU7XG4gIGlmIChjYXB0dXJlID09IG51bGwpIGNhcHR1cmUgPSBmYWxzZTtcbiAgZm9yIChpID0gMDsgaSA8IG47ICsraSkgdGhpcy5lYWNoKG9uKHR5cGVuYW1lc1tpXSwgdmFsdWUsIGNhcHR1cmUpKTtcbiAgcmV0dXJuIHRoaXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjdXN0b21FdmVudChldmVudDEsIGxpc3RlbmVyLCB0aGF0LCBhcmdzKSB7XG4gIHZhciBldmVudDAgPSBldmVudDtcbiAgZXZlbnQxLnNvdXJjZUV2ZW50ID0gZXZlbnQ7XG4gIGV2ZW50ID0gZXZlbnQxO1xuICB0cnkge1xuICAgIHJldHVybiBsaXN0ZW5lci5hcHBseSh0aGF0LCBhcmdzKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBldmVudCA9IGV2ZW50MDtcbiAgfVxufVxuIiwiaW1wb3J0IGRlZmF1bHRWaWV3IGZyb20gXCIuLi93aW5kb3dcIjtcblxuZnVuY3Rpb24gZGlzcGF0Y2hFdmVudChub2RlLCB0eXBlLCBwYXJhbXMpIHtcbiAgdmFyIHdpbmRvdyA9IGRlZmF1bHRWaWV3KG5vZGUpLFxuICAgICAgZXZlbnQgPSB3aW5kb3cuQ3VzdG9tRXZlbnQ7XG5cbiAgaWYgKHR5cGVvZiBldmVudCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgZXZlbnQgPSBuZXcgZXZlbnQodHlwZSwgcGFyYW1zKTtcbiAgfSBlbHNlIHtcbiAgICBldmVudCA9IHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFdmVudChcIkV2ZW50XCIpO1xuICAgIGlmIChwYXJhbXMpIGV2ZW50LmluaXRFdmVudCh0eXBlLCBwYXJhbXMuYnViYmxlcywgcGFyYW1zLmNhbmNlbGFibGUpLCBldmVudC5kZXRhaWwgPSBwYXJhbXMuZGV0YWlsO1xuICAgIGVsc2UgZXZlbnQuaW5pdEV2ZW50KHR5cGUsIGZhbHNlLCBmYWxzZSk7XG4gIH1cblxuICBub2RlLmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xufVxuXG5mdW5jdGlvbiBkaXNwYXRjaENvbnN0YW50KHR5cGUsIHBhcmFtcykge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGRpc3BhdGNoRXZlbnQodGhpcywgdHlwZSwgcGFyYW1zKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gZGlzcGF0Y2hGdW5jdGlvbih0eXBlLCBwYXJhbXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkaXNwYXRjaEV2ZW50KHRoaXMsIHR5cGUsIHBhcmFtcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odHlwZSwgcGFyYW1zKSB7XG4gIHJldHVybiB0aGlzLmVhY2goKHR5cGVvZiBwYXJhbXMgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgPyBkaXNwYXRjaEZ1bmN0aW9uXG4gICAgICA6IGRpc3BhdGNoQ29uc3RhbnQpKHR5cGUsIHBhcmFtcykpO1xufVxuIiwiaW1wb3J0IHNlbGVjdGlvbl9zZWxlY3QgZnJvbSBcIi4vc2VsZWN0XCI7XG5pbXBvcnQgc2VsZWN0aW9uX3NlbGVjdEFsbCBmcm9tIFwiLi9zZWxlY3RBbGxcIjtcbmltcG9ydCBzZWxlY3Rpb25fZmlsdGVyIGZyb20gXCIuL2ZpbHRlclwiO1xuaW1wb3J0IHNlbGVjdGlvbl9kYXRhIGZyb20gXCIuL2RhdGFcIjtcbmltcG9ydCBzZWxlY3Rpb25fZW50ZXIgZnJvbSBcIi4vZW50ZXJcIjtcbmltcG9ydCBzZWxlY3Rpb25fZXhpdCBmcm9tIFwiLi9leGl0XCI7XG5pbXBvcnQgc2VsZWN0aW9uX2pvaW4gZnJvbSBcIi4vam9pblwiO1xuaW1wb3J0IHNlbGVjdGlvbl9tZXJnZSBmcm9tIFwiLi9tZXJnZVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9vcmRlciBmcm9tIFwiLi9vcmRlclwiO1xuaW1wb3J0IHNlbGVjdGlvbl9zb3J0IGZyb20gXCIuL3NvcnRcIjtcbmltcG9ydCBzZWxlY3Rpb25fY2FsbCBmcm9tIFwiLi9jYWxsXCI7XG5pbXBvcnQgc2VsZWN0aW9uX25vZGVzIGZyb20gXCIuL25vZGVzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX25vZGUgZnJvbSBcIi4vbm9kZVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9zaXplIGZyb20gXCIuL3NpemVcIjtcbmltcG9ydCBzZWxlY3Rpb25fZW1wdHkgZnJvbSBcIi4vZW1wdHlcIjtcbmltcG9ydCBzZWxlY3Rpb25fZWFjaCBmcm9tIFwiLi9lYWNoXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2F0dHIgZnJvbSBcIi4vYXR0clwiO1xuaW1wb3J0IHNlbGVjdGlvbl9zdHlsZSBmcm9tIFwiLi9zdHlsZVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9wcm9wZXJ0eSBmcm9tIFwiLi9wcm9wZXJ0eVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9jbGFzc2VkIGZyb20gXCIuL2NsYXNzZWRcIjtcbmltcG9ydCBzZWxlY3Rpb25fdGV4dCBmcm9tIFwiLi90ZXh0XCI7XG5pbXBvcnQgc2VsZWN0aW9uX2h0bWwgZnJvbSBcIi4vaHRtbFwiO1xuaW1wb3J0IHNlbGVjdGlvbl9yYWlzZSBmcm9tIFwiLi9yYWlzZVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9sb3dlciBmcm9tIFwiLi9sb3dlclwiO1xuaW1wb3J0IHNlbGVjdGlvbl9hcHBlbmQgZnJvbSBcIi4vYXBwZW5kXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2luc2VydCBmcm9tIFwiLi9pbnNlcnRcIjtcbmltcG9ydCBzZWxlY3Rpb25fcmVtb3ZlIGZyb20gXCIuL3JlbW92ZVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9jbG9uZSBmcm9tIFwiLi9jbG9uZVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9kYXR1bSBmcm9tIFwiLi9kYXR1bVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9vbiBmcm9tIFwiLi9vblwiO1xuaW1wb3J0IHNlbGVjdGlvbl9kaXNwYXRjaCBmcm9tIFwiLi9kaXNwYXRjaFwiO1xuXG5leHBvcnQgdmFyIHJvb3QgPSBbbnVsbF07XG5cbmV4cG9ydCBmdW5jdGlvbiBTZWxlY3Rpb24oZ3JvdXBzLCBwYXJlbnRzKSB7XG4gIHRoaXMuX2dyb3VwcyA9IGdyb3VwcztcbiAgdGhpcy5fcGFyZW50cyA9IHBhcmVudHM7XG59XG5cbmZ1bmN0aW9uIHNlbGVjdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24oW1tkb2N1bWVudC5kb2N1bWVudEVsZW1lbnRdXSwgcm9vdCk7XG59XG5cblNlbGVjdGlvbi5wcm90b3R5cGUgPSBzZWxlY3Rpb24ucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogU2VsZWN0aW9uLFxuICBzZWxlY3Q6IHNlbGVjdGlvbl9zZWxlY3QsXG4gIHNlbGVjdEFsbDogc2VsZWN0aW9uX3NlbGVjdEFsbCxcbiAgZmlsdGVyOiBzZWxlY3Rpb25fZmlsdGVyLFxuICBkYXRhOiBzZWxlY3Rpb25fZGF0YSxcbiAgZW50ZXI6IHNlbGVjdGlvbl9lbnRlcixcbiAgZXhpdDogc2VsZWN0aW9uX2V4aXQsXG4gIGpvaW46IHNlbGVjdGlvbl9qb2luLFxuICBtZXJnZTogc2VsZWN0aW9uX21lcmdlLFxuICBvcmRlcjogc2VsZWN0aW9uX29yZGVyLFxuICBzb3J0OiBzZWxlY3Rpb25fc29ydCxcbiAgY2FsbDogc2VsZWN0aW9uX2NhbGwsXG4gIG5vZGVzOiBzZWxlY3Rpb25fbm9kZXMsXG4gIG5vZGU6IHNlbGVjdGlvbl9ub2RlLFxuICBzaXplOiBzZWxlY3Rpb25fc2l6ZSxcbiAgZW1wdHk6IHNlbGVjdGlvbl9lbXB0eSxcbiAgZWFjaDogc2VsZWN0aW9uX2VhY2gsXG4gIGF0dHI6IHNlbGVjdGlvbl9hdHRyLFxuICBzdHlsZTogc2VsZWN0aW9uX3N0eWxlLFxuICBwcm9wZXJ0eTogc2VsZWN0aW9uX3Byb3BlcnR5LFxuICBjbGFzc2VkOiBzZWxlY3Rpb25fY2xhc3NlZCxcbiAgdGV4dDogc2VsZWN0aW9uX3RleHQsXG4gIGh0bWw6IHNlbGVjdGlvbl9odG1sLFxuICByYWlzZTogc2VsZWN0aW9uX3JhaXNlLFxuICBsb3dlcjogc2VsZWN0aW9uX2xvd2VyLFxuICBhcHBlbmQ6IHNlbGVjdGlvbl9hcHBlbmQsXG4gIGluc2VydDogc2VsZWN0aW9uX2luc2VydCxcbiAgcmVtb3ZlOiBzZWxlY3Rpb25fcmVtb3ZlLFxuICBjbG9uZTogc2VsZWN0aW9uX2Nsb25lLFxuICBkYXR1bTogc2VsZWN0aW9uX2RhdHVtLFxuICBvbjogc2VsZWN0aW9uX29uLFxuICBkaXNwYXRjaDogc2VsZWN0aW9uX2Rpc3BhdGNoXG59O1xuXG5leHBvcnQgZGVmYXVsdCBzZWxlY3Rpb247XG4iLCJpbXBvcnQge1NlbGVjdGlvbn0gZnJvbSBcIi4vaW5kZXhcIjtcbmltcG9ydCBzZWxlY3RvciBmcm9tIFwiLi4vc2VsZWN0b3JcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0KSB7XG4gIGlmICh0eXBlb2Ygc2VsZWN0ICE9PSBcImZ1bmN0aW9uXCIpIHNlbGVjdCA9IHNlbGVjdG9yKHNlbGVjdCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc3ViZ3JvdXBzID0gbmV3IEFycmF5KG0pLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBzdWJncm91cCA9IHN1Ymdyb3Vwc1tqXSA9IG5ldyBBcnJheShuKSwgbm9kZSwgc3Vibm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiAoc3Vibm9kZSA9IHNlbGVjdC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKSkpIHtcbiAgICAgICAgaWYgKFwiX19kYXRhX19cIiBpbiBub2RlKSBzdWJub2RlLl9fZGF0YV9fID0gbm9kZS5fX2RhdGFfXztcbiAgICAgICAgc3ViZ3JvdXBbaV0gPSBzdWJub2RlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHN1Ymdyb3VwcywgdGhpcy5fcGFyZW50cyk7XG59XG4iLCJpbXBvcnQge1NlbGVjdGlvbn0gZnJvbSBcIi4vaW5kZXhcIjtcbmltcG9ydCBzZWxlY3RvckFsbCBmcm9tIFwiLi4vc2VsZWN0b3JBbGxcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0KSB7XG4gIGlmICh0eXBlb2Ygc2VsZWN0ICE9PSBcImZ1bmN0aW9uXCIpIHNlbGVjdCA9IHNlbGVjdG9yQWxsKHNlbGVjdCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc3ViZ3JvdXBzID0gW10sIHBhcmVudHMgPSBbXSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgc3ViZ3JvdXBzLnB1c2goc2VsZWN0LmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApKTtcbiAgICAgICAgcGFyZW50cy5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHN1Ymdyb3VwcywgcGFyZW50cyk7XG59XG4iLCJpbXBvcnQge1NlbGVjdGlvbn0gZnJvbSBcIi4vaW5kZXhcIjtcbmltcG9ydCBtYXRjaGVyIGZyb20gXCIuLi9tYXRjaGVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG1hdGNoKSB7XG4gIGlmICh0eXBlb2YgbWF0Y2ggIT09IFwiZnVuY3Rpb25cIikgbWF0Y2ggPSBtYXRjaGVyKG1hdGNoKTtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBzdWJncm91cHMgPSBuZXcgQXJyYXkobSksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIHN1Ymdyb3VwID0gc3ViZ3JvdXBzW2pdID0gW10sIG5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKG5vZGUgPSBncm91cFtpXSkgJiYgbWF0Y2guY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBncm91cCkpIHtcbiAgICAgICAgc3ViZ3JvdXAucHVzaChub2RlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFNlbGVjdGlvbihzdWJncm91cHMsIHRoaXMuX3BhcmVudHMpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHg7XG4gIH07XG59XG4iLCJpbXBvcnQgc3BhcnNlIGZyb20gXCIuL3NwYXJzZVwiO1xuaW1wb3J0IHtTZWxlY3Rpb259IGZyb20gXCIuL2luZGV4XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFNlbGVjdGlvbih0aGlzLl9leGl0IHx8IHRoaXMuX2dyb3Vwcy5tYXAoc3BhcnNlKSwgdGhpcy5fcGFyZW50cyk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvbmVudGVyLCBvbnVwZGF0ZSwgb25leGl0KSB7XG4gIHZhciBlbnRlciA9IHRoaXMuZW50ZXIoKSwgdXBkYXRlID0gdGhpcywgZXhpdCA9IHRoaXMuZXhpdCgpO1xuICBlbnRlciA9IHR5cGVvZiBvbmVudGVyID09PSBcImZ1bmN0aW9uXCIgPyBvbmVudGVyKGVudGVyKSA6IGVudGVyLmFwcGVuZChvbmVudGVyICsgXCJcIik7XG4gIGlmIChvbnVwZGF0ZSAhPSBudWxsKSB1cGRhdGUgPSBvbnVwZGF0ZSh1cGRhdGUpO1xuICBpZiAob25leGl0ID09IG51bGwpIGV4aXQucmVtb3ZlKCk7IGVsc2Ugb25leGl0KGV4aXQpO1xuICByZXR1cm4gZW50ZXIgJiYgdXBkYXRlID8gZW50ZXIubWVyZ2UodXBkYXRlKS5vcmRlcigpIDogdXBkYXRlO1xufVxuIiwiaW1wb3J0IHtTZWxlY3Rpb259IGZyb20gXCIuL2luZGV4XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdGlvbikge1xuXG4gIGZvciAodmFyIGdyb3VwczAgPSB0aGlzLl9ncm91cHMsIGdyb3VwczEgPSBzZWxlY3Rpb24uX2dyb3VwcywgbTAgPSBncm91cHMwLmxlbmd0aCwgbTEgPSBncm91cHMxLmxlbmd0aCwgbSA9IE1hdGgubWluKG0wLCBtMSksIG1lcmdlcyA9IG5ldyBBcnJheShtMCksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAwID0gZ3JvdXBzMFtqXSwgZ3JvdXAxID0gZ3JvdXBzMVtqXSwgbiA9IGdyb3VwMC5sZW5ndGgsIG1lcmdlID0gbWVyZ2VzW2pdID0gbmV3IEFycmF5KG4pLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG5vZGUgPSBncm91cDBbaV0gfHwgZ3JvdXAxW2ldKSB7XG4gICAgICAgIG1lcmdlW2ldID0gbm9kZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmb3IgKDsgaiA8IG0wOyArK2opIHtcbiAgICBtZXJnZXNbal0gPSBncm91cHMwW2pdO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24obWVyZ2VzLCB0aGlzLl9wYXJlbnRzKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgaiA9IC0xLCBtID0gZ3JvdXBzLmxlbmd0aDsgKytqIDwgbTspIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgaSA9IGdyb3VwLmxlbmd0aCAtIDEsIG5leHQgPSBncm91cFtpXSwgbm9kZTsgLS1pID49IDA7KSB7XG4gICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgIGlmIChuZXh0ICYmIG5vZGUuY29tcGFyZURvY3VtZW50UG9zaXRpb24obmV4dCkgXiA0KSBuZXh0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG5vZGUsIG5leHQpO1xuICAgICAgICBuZXh0ID0gbm9kZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgbm9kZXMgPSBuZXcgQXJyYXkodGhpcy5zaXplKCkpLCBpID0gLTE7XG4gIHRoaXMuZWFjaChmdW5jdGlvbigpIHsgbm9kZXNbKytpXSA9IHRoaXM7IH0pO1xuICByZXR1cm4gbm9kZXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIGogPSAwLCBtID0gZ3JvdXBzLmxlbmd0aDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBpID0gMCwgbiA9IGdyb3VwLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgdmFyIG5vZGUgPSBncm91cFtpXTtcbiAgICAgIGlmIChub2RlKSByZXR1cm4gbm9kZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgc2l6ZSA9IDA7XG4gIHRoaXMuZWFjaChmdW5jdGlvbigpIHsgKytzaXplOyB9KTtcbiAgcmV0dXJuIHNpemU7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuICF0aGlzLm5vZGUoKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBqID0gMCwgbSA9IGdyb3Vwcy5sZW5ndGg7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgaSA9IDAsIG4gPSBncm91cC5sZW5ndGgsIG5vZGU7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIGNhbGxiYWNrLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufVxuIiwiaW1wb3J0IGNyZWF0b3IgZnJvbSBcIi4uL2NyZWF0b3JcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSkge1xuICB2YXIgY3JlYXRlID0gdHlwZW9mIG5hbWUgPT09IFwiZnVuY3Rpb25cIiA/IG5hbWUgOiBjcmVhdG9yKG5hbWUpO1xuICByZXR1cm4gdGhpcy5zZWxlY3QoZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuYXBwZW5kQ2hpbGQoY3JlYXRlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9KTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoXG4gICAgICA/IHRoaXMucHJvcGVydHkoXCJfX2RhdGFfX1wiLCB2YWx1ZSlcbiAgICAgIDogdGhpcy5ub2RlKCkuX19kYXRhX187XG59XG4iLCJpbXBvcnQge1NlbGVjdGlvbiwgcm9vdH0gZnJvbSBcIi4vc2VsZWN0aW9uL2luZGV4XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdG9yKSB7XG4gIHJldHVybiB0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCJcbiAgICAgID8gbmV3IFNlbGVjdGlvbihbW2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpXV0sIFtkb2N1bWVudC5kb2N1bWVudEVsZW1lbnRdKVxuICAgICAgOiBuZXcgU2VsZWN0aW9uKFtbc2VsZWN0b3JdXSwgcm9vdCk7XG59XG4iLCJpbXBvcnQge2V2ZW50fSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBub3Byb3BhZ2F0aW9uKCkge1xuICBldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gIGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xufVxuIiwiaW1wb3J0IHtzZWxlY3R9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCBub2V2ZW50IGZyb20gXCIuL25vZXZlbnQuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmlldykge1xuICB2YXIgcm9vdCA9IHZpZXcuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LFxuICAgICAgc2VsZWN0aW9uID0gc2VsZWN0KHZpZXcpLm9uKFwiZHJhZ3N0YXJ0LmRyYWdcIiwgbm9ldmVudCwgdHJ1ZSk7XG4gIGlmIChcIm9uc2VsZWN0c3RhcnRcIiBpbiByb290KSB7XG4gICAgc2VsZWN0aW9uLm9uKFwic2VsZWN0c3RhcnQuZHJhZ1wiLCBub2V2ZW50LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICByb290Ll9fbm9zZWxlY3QgPSByb290LnN0eWxlLk1velVzZXJTZWxlY3Q7XG4gICAgcm9vdC5zdHlsZS5Nb3pVc2VyU2VsZWN0ID0gXCJub25lXCI7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHllc2RyYWcodmlldywgbm9jbGljaykge1xuICB2YXIgcm9vdCA9IHZpZXcuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LFxuICAgICAgc2VsZWN0aW9uID0gc2VsZWN0KHZpZXcpLm9uKFwiZHJhZ3N0YXJ0LmRyYWdcIiwgbnVsbCk7XG4gIGlmIChub2NsaWNrKSB7XG4gICAgc2VsZWN0aW9uLm9uKFwiY2xpY2suZHJhZ1wiLCBub2V2ZW50LCB0cnVlKTtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyBzZWxlY3Rpb24ub24oXCJjbGljay5kcmFnXCIsIG51bGwpOyB9LCAwKTtcbiAgfVxuICBpZiAoXCJvbnNlbGVjdHN0YXJ0XCIgaW4gcm9vdCkge1xuICAgIHNlbGVjdGlvbi5vbihcInNlbGVjdHN0YXJ0LmRyYWdcIiwgbnVsbCk7XG4gIH0gZWxzZSB7XG4gICAgcm9vdC5zdHlsZS5Nb3pVc2VyU2VsZWN0ID0gcm9vdC5fX25vc2VsZWN0O1xuICAgIGRlbGV0ZSByb290Ll9fbm9zZWxlY3Q7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbnN0cnVjdG9yLCBmYWN0b3J5LCBwcm90b3R5cGUpIHtcbiAgY29uc3RydWN0b3IucHJvdG90eXBlID0gZmFjdG9yeS5wcm90b3R5cGUgPSBwcm90b3R5cGU7XG4gIHByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IGNvbnN0cnVjdG9yO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXh0ZW5kKHBhcmVudCwgZGVmaW5pdGlvbikge1xuICB2YXIgcHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShwYXJlbnQucHJvdG90eXBlKTtcbiAgZm9yICh2YXIga2V5IGluIGRlZmluaXRpb24pIHByb3RvdHlwZVtrZXldID0gZGVmaW5pdGlvbltrZXldO1xuICByZXR1cm4gcHJvdG90eXBlO1xufVxuIiwiaW1wb3J0IGRlZmluZSwge2V4dGVuZH0gZnJvbSBcIi4vZGVmaW5lLmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBDb2xvcigpIHt9XG5cbmV4cG9ydCB2YXIgZGFya2VyID0gMC43O1xuZXhwb3J0IHZhciBicmlnaHRlciA9IDEgLyBkYXJrZXI7XG5cbnZhciByZUkgPSBcIlxcXFxzKihbKy1dP1xcXFxkKylcXFxccypcIixcbiAgICByZU4gPSBcIlxcXFxzKihbKy1dP1xcXFxkKlxcXFwuP1xcXFxkKyg/OltlRV1bKy1dP1xcXFxkKyk/KVxcXFxzKlwiLFxuICAgIHJlUCA9IFwiXFxcXHMqKFsrLV0/XFxcXGQqXFxcXC4/XFxcXGQrKD86W2VFXVsrLV0/XFxcXGQrKT8pJVxcXFxzKlwiLFxuICAgIHJlSGV4ID0gL14jKFswLTlhLWZdezMsOH0pJC8sXG4gICAgcmVSZ2JJbnRlZ2VyID0gbmV3IFJlZ0V4cChcIl5yZ2JcXFxcKFwiICsgW3JlSSwgcmVJLCByZUldICsgXCJcXFxcKSRcIiksXG4gICAgcmVSZ2JQZXJjZW50ID0gbmV3IFJlZ0V4cChcIl5yZ2JcXFxcKFwiICsgW3JlUCwgcmVQLCByZVBdICsgXCJcXFxcKSRcIiksXG4gICAgcmVSZ2JhSW50ZWdlciA9IG5ldyBSZWdFeHAoXCJecmdiYVxcXFwoXCIgKyBbcmVJLCByZUksIHJlSSwgcmVOXSArIFwiXFxcXCkkXCIpLFxuICAgIHJlUmdiYVBlcmNlbnQgPSBuZXcgUmVnRXhwKFwiXnJnYmFcXFxcKFwiICsgW3JlUCwgcmVQLCByZVAsIHJlTl0gKyBcIlxcXFwpJFwiKSxcbiAgICByZUhzbFBlcmNlbnQgPSBuZXcgUmVnRXhwKFwiXmhzbFxcXFwoXCIgKyBbcmVOLCByZVAsIHJlUF0gKyBcIlxcXFwpJFwiKSxcbiAgICByZUhzbGFQZXJjZW50ID0gbmV3IFJlZ0V4cChcIl5oc2xhXFxcXChcIiArIFtyZU4sIHJlUCwgcmVQLCByZU5dICsgXCJcXFxcKSRcIik7XG5cbnZhciBuYW1lZCA9IHtcbiAgYWxpY2VibHVlOiAweGYwZjhmZixcbiAgYW50aXF1ZXdoaXRlOiAweGZhZWJkNyxcbiAgYXF1YTogMHgwMGZmZmYsXG4gIGFxdWFtYXJpbmU6IDB4N2ZmZmQ0LFxuICBhenVyZTogMHhmMGZmZmYsXG4gIGJlaWdlOiAweGY1ZjVkYyxcbiAgYmlzcXVlOiAweGZmZTRjNCxcbiAgYmxhY2s6IDB4MDAwMDAwLFxuICBibGFuY2hlZGFsbW9uZDogMHhmZmViY2QsXG4gIGJsdWU6IDB4MDAwMGZmLFxuICBibHVldmlvbGV0OiAweDhhMmJlMixcbiAgYnJvd246IDB4YTUyYTJhLFxuICBidXJseXdvb2Q6IDB4ZGViODg3LFxuICBjYWRldGJsdWU6IDB4NWY5ZWEwLFxuICBjaGFydHJldXNlOiAweDdmZmYwMCxcbiAgY2hvY29sYXRlOiAweGQyNjkxZSxcbiAgY29yYWw6IDB4ZmY3ZjUwLFxuICBjb3JuZmxvd2VyYmx1ZTogMHg2NDk1ZWQsXG4gIGNvcm5zaWxrOiAweGZmZjhkYyxcbiAgY3JpbXNvbjogMHhkYzE0M2MsXG4gIGN5YW46IDB4MDBmZmZmLFxuICBkYXJrYmx1ZTogMHgwMDAwOGIsXG4gIGRhcmtjeWFuOiAweDAwOGI4YixcbiAgZGFya2dvbGRlbnJvZDogMHhiODg2MGIsXG4gIGRhcmtncmF5OiAweGE5YTlhOSxcbiAgZGFya2dyZWVuOiAweDAwNjQwMCxcbiAgZGFya2dyZXk6IDB4YTlhOWE5LFxuICBkYXJra2hha2k6IDB4YmRiNzZiLFxuICBkYXJrbWFnZW50YTogMHg4YjAwOGIsXG4gIGRhcmtvbGl2ZWdyZWVuOiAweDU1NmIyZixcbiAgZGFya29yYW5nZTogMHhmZjhjMDAsXG4gIGRhcmtvcmNoaWQ6IDB4OTkzMmNjLFxuICBkYXJrcmVkOiAweDhiMDAwMCxcbiAgZGFya3NhbG1vbjogMHhlOTk2N2EsXG4gIGRhcmtzZWFncmVlbjogMHg4ZmJjOGYsXG4gIGRhcmtzbGF0ZWJsdWU6IDB4NDgzZDhiLFxuICBkYXJrc2xhdGVncmF5OiAweDJmNGY0ZixcbiAgZGFya3NsYXRlZ3JleTogMHgyZjRmNGYsXG4gIGRhcmt0dXJxdW9pc2U6IDB4MDBjZWQxLFxuICBkYXJrdmlvbGV0OiAweDk0MDBkMyxcbiAgZGVlcHBpbms6IDB4ZmYxNDkzLFxuICBkZWVwc2t5Ymx1ZTogMHgwMGJmZmYsXG4gIGRpbWdyYXk6IDB4Njk2OTY5LFxuICBkaW1ncmV5OiAweDY5Njk2OSxcbiAgZG9kZ2VyYmx1ZTogMHgxZTkwZmYsXG4gIGZpcmVicmljazogMHhiMjIyMjIsXG4gIGZsb3JhbHdoaXRlOiAweGZmZmFmMCxcbiAgZm9yZXN0Z3JlZW46IDB4MjI4YjIyLFxuICBmdWNoc2lhOiAweGZmMDBmZixcbiAgZ2FpbnNib3JvOiAweGRjZGNkYyxcbiAgZ2hvc3R3aGl0ZTogMHhmOGY4ZmYsXG4gIGdvbGQ6IDB4ZmZkNzAwLFxuICBnb2xkZW5yb2Q6IDB4ZGFhNTIwLFxuICBncmF5OiAweDgwODA4MCxcbiAgZ3JlZW46IDB4MDA4MDAwLFxuICBncmVlbnllbGxvdzogMHhhZGZmMmYsXG4gIGdyZXk6IDB4ODA4MDgwLFxuICBob25leWRldzogMHhmMGZmZjAsXG4gIGhvdHBpbms6IDB4ZmY2OWI0LFxuICBpbmRpYW5yZWQ6IDB4Y2Q1YzVjLFxuICBpbmRpZ286IDB4NGIwMDgyLFxuICBpdm9yeTogMHhmZmZmZjAsXG4gIGtoYWtpOiAweGYwZTY4YyxcbiAgbGF2ZW5kZXI6IDB4ZTZlNmZhLFxuICBsYXZlbmRlcmJsdXNoOiAweGZmZjBmNSxcbiAgbGF3bmdyZWVuOiAweDdjZmMwMCxcbiAgbGVtb25jaGlmZm9uOiAweGZmZmFjZCxcbiAgbGlnaHRibHVlOiAweGFkZDhlNixcbiAgbGlnaHRjb3JhbDogMHhmMDgwODAsXG4gIGxpZ2h0Y3lhbjogMHhlMGZmZmYsXG4gIGxpZ2h0Z29sZGVucm9keWVsbG93OiAweGZhZmFkMixcbiAgbGlnaHRncmF5OiAweGQzZDNkMyxcbiAgbGlnaHRncmVlbjogMHg5MGVlOTAsXG4gIGxpZ2h0Z3JleTogMHhkM2QzZDMsXG4gIGxpZ2h0cGluazogMHhmZmI2YzEsXG4gIGxpZ2h0c2FsbW9uOiAweGZmYTA3YSxcbiAgbGlnaHRzZWFncmVlbjogMHgyMGIyYWEsXG4gIGxpZ2h0c2t5Ymx1ZTogMHg4N2NlZmEsXG4gIGxpZ2h0c2xhdGVncmF5OiAweDc3ODg5OSxcbiAgbGlnaHRzbGF0ZWdyZXk6IDB4Nzc4ODk5LFxuICBsaWdodHN0ZWVsYmx1ZTogMHhiMGM0ZGUsXG4gIGxpZ2h0eWVsbG93OiAweGZmZmZlMCxcbiAgbGltZTogMHgwMGZmMDAsXG4gIGxpbWVncmVlbjogMHgzMmNkMzIsXG4gIGxpbmVuOiAweGZhZjBlNixcbiAgbWFnZW50YTogMHhmZjAwZmYsXG4gIG1hcm9vbjogMHg4MDAwMDAsXG4gIG1lZGl1bWFxdWFtYXJpbmU6IDB4NjZjZGFhLFxuICBtZWRpdW1ibHVlOiAweDAwMDBjZCxcbiAgbWVkaXVtb3JjaGlkOiAweGJhNTVkMyxcbiAgbWVkaXVtcHVycGxlOiAweDkzNzBkYixcbiAgbWVkaXVtc2VhZ3JlZW46IDB4M2NiMzcxLFxuICBtZWRpdW1zbGF0ZWJsdWU6IDB4N2I2OGVlLFxuICBtZWRpdW1zcHJpbmdncmVlbjogMHgwMGZhOWEsXG4gIG1lZGl1bXR1cnF1b2lzZTogMHg0OGQxY2MsXG4gIG1lZGl1bXZpb2xldHJlZDogMHhjNzE1ODUsXG4gIG1pZG5pZ2h0Ymx1ZTogMHgxOTE5NzAsXG4gIG1pbnRjcmVhbTogMHhmNWZmZmEsXG4gIG1pc3R5cm9zZTogMHhmZmU0ZTEsXG4gIG1vY2Nhc2luOiAweGZmZTRiNSxcbiAgbmF2YWpvd2hpdGU6IDB4ZmZkZWFkLFxuICBuYXZ5OiAweDAwMDA4MCxcbiAgb2xkbGFjZTogMHhmZGY1ZTYsXG4gIG9saXZlOiAweDgwODAwMCxcbiAgb2xpdmVkcmFiOiAweDZiOGUyMyxcbiAgb3JhbmdlOiAweGZmYTUwMCxcbiAgb3JhbmdlcmVkOiAweGZmNDUwMCxcbiAgb3JjaGlkOiAweGRhNzBkNixcbiAgcGFsZWdvbGRlbnJvZDogMHhlZWU4YWEsXG4gIHBhbGVncmVlbjogMHg5OGZiOTgsXG4gIHBhbGV0dXJxdW9pc2U6IDB4YWZlZWVlLFxuICBwYWxldmlvbGV0cmVkOiAweGRiNzA5MyxcbiAgcGFwYXlhd2hpcDogMHhmZmVmZDUsXG4gIHBlYWNocHVmZjogMHhmZmRhYjksXG4gIHBlcnU6IDB4Y2Q4NTNmLFxuICBwaW5rOiAweGZmYzBjYixcbiAgcGx1bTogMHhkZGEwZGQsXG4gIHBvd2RlcmJsdWU6IDB4YjBlMGU2LFxuICBwdXJwbGU6IDB4ODAwMDgwLFxuICByZWJlY2NhcHVycGxlOiAweDY2MzM5OSxcbiAgcmVkOiAweGZmMDAwMCxcbiAgcm9zeWJyb3duOiAweGJjOGY4ZixcbiAgcm95YWxibHVlOiAweDQxNjllMSxcbiAgc2FkZGxlYnJvd246IDB4OGI0NTEzLFxuICBzYWxtb246IDB4ZmE4MDcyLFxuICBzYW5keWJyb3duOiAweGY0YTQ2MCxcbiAgc2VhZ3JlZW46IDB4MmU4YjU3LFxuICBzZWFzaGVsbDogMHhmZmY1ZWUsXG4gIHNpZW5uYTogMHhhMDUyMmQsXG4gIHNpbHZlcjogMHhjMGMwYzAsXG4gIHNreWJsdWU6IDB4ODdjZWViLFxuICBzbGF0ZWJsdWU6IDB4NmE1YWNkLFxuICBzbGF0ZWdyYXk6IDB4NzA4MDkwLFxuICBzbGF0ZWdyZXk6IDB4NzA4MDkwLFxuICBzbm93OiAweGZmZmFmYSxcbiAgc3ByaW5nZ3JlZW46IDB4MDBmZjdmLFxuICBzdGVlbGJsdWU6IDB4NDY4MmI0LFxuICB0YW46IDB4ZDJiNDhjLFxuICB0ZWFsOiAweDAwODA4MCxcbiAgdGhpc3RsZTogMHhkOGJmZDgsXG4gIHRvbWF0bzogMHhmZjYzNDcsXG4gIHR1cnF1b2lzZTogMHg0MGUwZDAsXG4gIHZpb2xldDogMHhlZTgyZWUsXG4gIHdoZWF0OiAweGY1ZGViMyxcbiAgd2hpdGU6IDB4ZmZmZmZmLFxuICB3aGl0ZXNtb2tlOiAweGY1ZjVmNSxcbiAgeWVsbG93OiAweGZmZmYwMCxcbiAgeWVsbG93Z3JlZW46IDB4OWFjZDMyXG59O1xuXG5kZWZpbmUoQ29sb3IsIGNvbG9yLCB7XG4gIGNvcHk6IGZ1bmN0aW9uKGNoYW5uZWxzKSB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24obmV3IHRoaXMuY29uc3RydWN0b3IsIHRoaXMsIGNoYW5uZWxzKTtcbiAgfSxcbiAgZGlzcGxheWFibGU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnJnYigpLmRpc3BsYXlhYmxlKCk7XG4gIH0sXG4gIGhleDogY29sb3JfZm9ybWF0SGV4LCAvLyBEZXByZWNhdGVkISBVc2UgY29sb3IuZm9ybWF0SGV4LlxuICBmb3JtYXRIZXg6IGNvbG9yX2Zvcm1hdEhleCxcbiAgZm9ybWF0SHNsOiBjb2xvcl9mb3JtYXRIc2wsXG4gIGZvcm1hdFJnYjogY29sb3JfZm9ybWF0UmdiLFxuICB0b1N0cmluZzogY29sb3JfZm9ybWF0UmdiXG59KTtcblxuZnVuY3Rpb24gY29sb3JfZm9ybWF0SGV4KCkge1xuICByZXR1cm4gdGhpcy5yZ2IoKS5mb3JtYXRIZXgoKTtcbn1cblxuZnVuY3Rpb24gY29sb3JfZm9ybWF0SHNsKCkge1xuICByZXR1cm4gaHNsQ29udmVydCh0aGlzKS5mb3JtYXRIc2woKTtcbn1cblxuZnVuY3Rpb24gY29sb3JfZm9ybWF0UmdiKCkge1xuICByZXR1cm4gdGhpcy5yZ2IoKS5mb3JtYXRSZ2IoKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29sb3IoZm9ybWF0KSB7XG4gIHZhciBtLCBsO1xuICBmb3JtYXQgPSAoZm9ybWF0ICsgXCJcIikudHJpbSgpLnRvTG93ZXJDYXNlKCk7XG4gIHJldHVybiAobSA9IHJlSGV4LmV4ZWMoZm9ybWF0KSkgPyAobCA9IG1bMV0ubGVuZ3RoLCBtID0gcGFyc2VJbnQobVsxXSwgMTYpLCBsID09PSA2ID8gcmdibihtKSAvLyAjZmYwMDAwXG4gICAgICA6IGwgPT09IDMgPyBuZXcgUmdiKChtID4+IDggJiAweGYpIHwgKG0gPj4gNCAmIDB4ZjApLCAobSA+PiA0ICYgMHhmKSB8IChtICYgMHhmMCksICgobSAmIDB4ZikgPDwgNCkgfCAobSAmIDB4ZiksIDEpIC8vICNmMDBcbiAgICAgIDogbCA9PT0gOCA/IG5ldyBSZ2IobSA+PiAyNCAmIDB4ZmYsIG0gPj4gMTYgJiAweGZmLCBtID4+IDggJiAweGZmLCAobSAmIDB4ZmYpIC8gMHhmZikgLy8gI2ZmMDAwMDAwXG4gICAgICA6IGwgPT09IDQgPyBuZXcgUmdiKChtID4+IDEyICYgMHhmKSB8IChtID4+IDggJiAweGYwKSwgKG0gPj4gOCAmIDB4ZikgfCAobSA+PiA0ICYgMHhmMCksIChtID4+IDQgJiAweGYpIHwgKG0gJiAweGYwKSwgKCgobSAmIDB4ZikgPDwgNCkgfCAobSAmIDB4ZikpIC8gMHhmZikgLy8gI2YwMDBcbiAgICAgIDogbnVsbCkgLy8gaW52YWxpZCBoZXhcbiAgICAgIDogKG0gPSByZVJnYkludGVnZXIuZXhlYyhmb3JtYXQpKSA/IG5ldyBSZ2IobVsxXSwgbVsyXSwgbVszXSwgMSkgLy8gcmdiKDI1NSwgMCwgMClcbiAgICAgIDogKG0gPSByZVJnYlBlcmNlbnQuZXhlYyhmb3JtYXQpKSA/IG5ldyBSZ2IobVsxXSAqIDI1NSAvIDEwMCwgbVsyXSAqIDI1NSAvIDEwMCwgbVszXSAqIDI1NSAvIDEwMCwgMSkgLy8gcmdiKDEwMCUsIDAlLCAwJSlcbiAgICAgIDogKG0gPSByZVJnYmFJbnRlZ2VyLmV4ZWMoZm9ybWF0KSkgPyByZ2JhKG1bMV0sIG1bMl0sIG1bM10sIG1bNF0pIC8vIHJnYmEoMjU1LCAwLCAwLCAxKVxuICAgICAgOiAobSA9IHJlUmdiYVBlcmNlbnQuZXhlYyhmb3JtYXQpKSA/IHJnYmEobVsxXSAqIDI1NSAvIDEwMCwgbVsyXSAqIDI1NSAvIDEwMCwgbVszXSAqIDI1NSAvIDEwMCwgbVs0XSkgLy8gcmdiKDEwMCUsIDAlLCAwJSwgMSlcbiAgICAgIDogKG0gPSByZUhzbFBlcmNlbnQuZXhlYyhmb3JtYXQpKSA/IGhzbGEobVsxXSwgbVsyXSAvIDEwMCwgbVszXSAvIDEwMCwgMSkgLy8gaHNsKDEyMCwgNTAlLCA1MCUpXG4gICAgICA6IChtID0gcmVIc2xhUGVyY2VudC5leGVjKGZvcm1hdCkpID8gaHNsYShtWzFdLCBtWzJdIC8gMTAwLCBtWzNdIC8gMTAwLCBtWzRdKSAvLyBoc2xhKDEyMCwgNTAlLCA1MCUsIDEpXG4gICAgICA6IG5hbWVkLmhhc093blByb3BlcnR5KGZvcm1hdCkgPyByZ2JuKG5hbWVkW2Zvcm1hdF0pIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zXG4gICAgICA6IGZvcm1hdCA9PT0gXCJ0cmFuc3BhcmVudFwiID8gbmV3IFJnYihOYU4sIE5hTiwgTmFOLCAwKVxuICAgICAgOiBudWxsO1xufVxuXG5mdW5jdGlvbiByZ2JuKG4pIHtcbiAgcmV0dXJuIG5ldyBSZ2IobiA+PiAxNiAmIDB4ZmYsIG4gPj4gOCAmIDB4ZmYsIG4gJiAweGZmLCAxKTtcbn1cblxuZnVuY3Rpb24gcmdiYShyLCBnLCBiLCBhKSB7XG4gIGlmIChhIDw9IDApIHIgPSBnID0gYiA9IE5hTjtcbiAgcmV0dXJuIG5ldyBSZ2IociwgZywgYiwgYSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZ2JDb252ZXJ0KG8pIHtcbiAgaWYgKCEobyBpbnN0YW5jZW9mIENvbG9yKSkgbyA9IGNvbG9yKG8pO1xuICBpZiAoIW8pIHJldHVybiBuZXcgUmdiO1xuICBvID0gby5yZ2IoKTtcbiAgcmV0dXJuIG5ldyBSZ2Ioby5yLCBvLmcsIG8uYiwgby5vcGFjaXR5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJnYihyLCBnLCBiLCBvcGFjaXR5KSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gcmdiQ29udmVydChyKSA6IG5ldyBSZ2IociwgZywgYiwgb3BhY2l0eSA9PSBudWxsID8gMSA6IG9wYWNpdHkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gUmdiKHIsIGcsIGIsIG9wYWNpdHkpIHtcbiAgdGhpcy5yID0gK3I7XG4gIHRoaXMuZyA9ICtnO1xuICB0aGlzLmIgPSArYjtcbiAgdGhpcy5vcGFjaXR5ID0gK29wYWNpdHk7XG59XG5cbmRlZmluZShSZ2IsIHJnYiwgZXh0ZW5kKENvbG9yLCB7XG4gIGJyaWdodGVyOiBmdW5jdGlvbihrKSB7XG4gICAgayA9IGsgPT0gbnVsbCA/IGJyaWdodGVyIDogTWF0aC5wb3coYnJpZ2h0ZXIsIGspO1xuICAgIHJldHVybiBuZXcgUmdiKHRoaXMuciAqIGssIHRoaXMuZyAqIGssIHRoaXMuYiAqIGssIHRoaXMub3BhY2l0eSk7XG4gIH0sXG4gIGRhcmtlcjogZnVuY3Rpb24oaykge1xuICAgIGsgPSBrID09IG51bGwgPyBkYXJrZXIgOiBNYXRoLnBvdyhkYXJrZXIsIGspO1xuICAgIHJldHVybiBuZXcgUmdiKHRoaXMuciAqIGssIHRoaXMuZyAqIGssIHRoaXMuYiAqIGssIHRoaXMub3BhY2l0eSk7XG4gIH0sXG4gIHJnYjogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG4gIGRpc3BsYXlhYmxlOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gKC0wLjUgPD0gdGhpcy5yICYmIHRoaXMuciA8IDI1NS41KVxuICAgICAgICAmJiAoLTAuNSA8PSB0aGlzLmcgJiYgdGhpcy5nIDwgMjU1LjUpXG4gICAgICAgICYmICgtMC41IDw9IHRoaXMuYiAmJiB0aGlzLmIgPCAyNTUuNSlcbiAgICAgICAgJiYgKDAgPD0gdGhpcy5vcGFjaXR5ICYmIHRoaXMub3BhY2l0eSA8PSAxKTtcbiAgfSxcbiAgaGV4OiByZ2JfZm9ybWF0SGV4LCAvLyBEZXByZWNhdGVkISBVc2UgY29sb3IuZm9ybWF0SGV4LlxuICBmb3JtYXRIZXg6IHJnYl9mb3JtYXRIZXgsXG4gIGZvcm1hdFJnYjogcmdiX2Zvcm1hdFJnYixcbiAgdG9TdHJpbmc6IHJnYl9mb3JtYXRSZ2Jcbn0pKTtcblxuZnVuY3Rpb24gcmdiX2Zvcm1hdEhleCgpIHtcbiAgcmV0dXJuIFwiI1wiICsgaGV4KHRoaXMucikgKyBoZXgodGhpcy5nKSArIGhleCh0aGlzLmIpO1xufVxuXG5mdW5jdGlvbiByZ2JfZm9ybWF0UmdiKCkge1xuICB2YXIgYSA9IHRoaXMub3BhY2l0eTsgYSA9IGlzTmFOKGEpID8gMSA6IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIGEpKTtcbiAgcmV0dXJuIChhID09PSAxID8gXCJyZ2IoXCIgOiBcInJnYmEoXCIpXG4gICAgICArIE1hdGgubWF4KDAsIE1hdGgubWluKDI1NSwgTWF0aC5yb3VuZCh0aGlzLnIpIHx8IDApKSArIFwiLCBcIlxuICAgICAgKyBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQodGhpcy5nKSB8fCAwKSkgKyBcIiwgXCJcbiAgICAgICsgTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKHRoaXMuYikgfHwgMCkpXG4gICAgICArIChhID09PSAxID8gXCIpXCIgOiBcIiwgXCIgKyBhICsgXCIpXCIpO1xufVxuXG5mdW5jdGlvbiBoZXgodmFsdWUpIHtcbiAgdmFsdWUgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQodmFsdWUpIHx8IDApKTtcbiAgcmV0dXJuICh2YWx1ZSA8IDE2ID8gXCIwXCIgOiBcIlwiKSArIHZhbHVlLnRvU3RyaW5nKDE2KTtcbn1cblxuZnVuY3Rpb24gaHNsYShoLCBzLCBsLCBhKSB7XG4gIGlmIChhIDw9IDApIGggPSBzID0gbCA9IE5hTjtcbiAgZWxzZSBpZiAobCA8PSAwIHx8IGwgPj0gMSkgaCA9IHMgPSBOYU47XG4gIGVsc2UgaWYgKHMgPD0gMCkgaCA9IE5hTjtcbiAgcmV0dXJuIG5ldyBIc2woaCwgcywgbCwgYSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoc2xDb252ZXJ0KG8pIHtcbiAgaWYgKG8gaW5zdGFuY2VvZiBIc2wpIHJldHVybiBuZXcgSHNsKG8uaCwgby5zLCBvLmwsIG8ub3BhY2l0eSk7XG4gIGlmICghKG8gaW5zdGFuY2VvZiBDb2xvcikpIG8gPSBjb2xvcihvKTtcbiAgaWYgKCFvKSByZXR1cm4gbmV3IEhzbDtcbiAgaWYgKG8gaW5zdGFuY2VvZiBIc2wpIHJldHVybiBvO1xuICBvID0gby5yZ2IoKTtcbiAgdmFyIHIgPSBvLnIgLyAyNTUsXG4gICAgICBnID0gby5nIC8gMjU1LFxuICAgICAgYiA9IG8uYiAvIDI1NSxcbiAgICAgIG1pbiA9IE1hdGgubWluKHIsIGcsIGIpLFxuICAgICAgbWF4ID0gTWF0aC5tYXgociwgZywgYiksXG4gICAgICBoID0gTmFOLFxuICAgICAgcyA9IG1heCAtIG1pbixcbiAgICAgIGwgPSAobWF4ICsgbWluKSAvIDI7XG4gIGlmIChzKSB7XG4gICAgaWYgKHIgPT09IG1heCkgaCA9IChnIC0gYikgLyBzICsgKGcgPCBiKSAqIDY7XG4gICAgZWxzZSBpZiAoZyA9PT0gbWF4KSBoID0gKGIgLSByKSAvIHMgKyAyO1xuICAgIGVsc2UgaCA9IChyIC0gZykgLyBzICsgNDtcbiAgICBzIC89IGwgPCAwLjUgPyBtYXggKyBtaW4gOiAyIC0gbWF4IC0gbWluO1xuICAgIGggKj0gNjA7XG4gIH0gZWxzZSB7XG4gICAgcyA9IGwgPiAwICYmIGwgPCAxID8gMCA6IGg7XG4gIH1cbiAgcmV0dXJuIG5ldyBIc2woaCwgcywgbCwgby5vcGFjaXR5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhzbChoLCBzLCBsLCBvcGFjaXR5KSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gaHNsQ29udmVydChoKSA6IG5ldyBIc2woaCwgcywgbCwgb3BhY2l0eSA9PSBudWxsID8gMSA6IG9wYWNpdHkpO1xufVxuXG5mdW5jdGlvbiBIc2woaCwgcywgbCwgb3BhY2l0eSkge1xuICB0aGlzLmggPSAraDtcbiAgdGhpcy5zID0gK3M7XG4gIHRoaXMubCA9ICtsO1xuICB0aGlzLm9wYWNpdHkgPSArb3BhY2l0eTtcbn1cblxuZGVmaW5lKEhzbCwgaHNsLCBleHRlbmQoQ29sb3IsIHtcbiAgYnJpZ2h0ZXI6IGZ1bmN0aW9uKGspIHtcbiAgICBrID0gayA9PSBudWxsID8gYnJpZ2h0ZXIgOiBNYXRoLnBvdyhicmlnaHRlciwgayk7XG4gICAgcmV0dXJuIG5ldyBIc2wodGhpcy5oLCB0aGlzLnMsIHRoaXMubCAqIGssIHRoaXMub3BhY2l0eSk7XG4gIH0sXG4gIGRhcmtlcjogZnVuY3Rpb24oaykge1xuICAgIGsgPSBrID09IG51bGwgPyBkYXJrZXIgOiBNYXRoLnBvdyhkYXJrZXIsIGspO1xuICAgIHJldHVybiBuZXcgSHNsKHRoaXMuaCwgdGhpcy5zLCB0aGlzLmwgKiBrLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICByZ2I6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBoID0gdGhpcy5oICUgMzYwICsgKHRoaXMuaCA8IDApICogMzYwLFxuICAgICAgICBzID0gaXNOYU4oaCkgfHwgaXNOYU4odGhpcy5zKSA/IDAgOiB0aGlzLnMsXG4gICAgICAgIGwgPSB0aGlzLmwsXG4gICAgICAgIG0yID0gbCArIChsIDwgMC41ID8gbCA6IDEgLSBsKSAqIHMsXG4gICAgICAgIG0xID0gMiAqIGwgLSBtMjtcbiAgICByZXR1cm4gbmV3IFJnYihcbiAgICAgIGhzbDJyZ2IoaCA+PSAyNDAgPyBoIC0gMjQwIDogaCArIDEyMCwgbTEsIG0yKSxcbiAgICAgIGhzbDJyZ2IoaCwgbTEsIG0yKSxcbiAgICAgIGhzbDJyZ2IoaCA8IDEyMCA/IGggKyAyNDAgOiBoIC0gMTIwLCBtMSwgbTIpLFxuICAgICAgdGhpcy5vcGFjaXR5XG4gICAgKTtcbiAgfSxcbiAgZGlzcGxheWFibGU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiAoMCA8PSB0aGlzLnMgJiYgdGhpcy5zIDw9IDEgfHwgaXNOYU4odGhpcy5zKSlcbiAgICAgICAgJiYgKDAgPD0gdGhpcy5sICYmIHRoaXMubCA8PSAxKVxuICAgICAgICAmJiAoMCA8PSB0aGlzLm9wYWNpdHkgJiYgdGhpcy5vcGFjaXR5IDw9IDEpO1xuICB9LFxuICBmb3JtYXRIc2w6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBhID0gdGhpcy5vcGFjaXR5OyBhID0gaXNOYU4oYSkgPyAxIDogTWF0aC5tYXgoMCwgTWF0aC5taW4oMSwgYSkpO1xuICAgIHJldHVybiAoYSA9PT0gMSA/IFwiaHNsKFwiIDogXCJoc2xhKFwiKVxuICAgICAgICArICh0aGlzLmggfHwgMCkgKyBcIiwgXCJcbiAgICAgICAgKyAodGhpcy5zIHx8IDApICogMTAwICsgXCIlLCBcIlxuICAgICAgICArICh0aGlzLmwgfHwgMCkgKiAxMDAgKyBcIiVcIlxuICAgICAgICArIChhID09PSAxID8gXCIpXCIgOiBcIiwgXCIgKyBhICsgXCIpXCIpO1xuICB9XG59KSk7XG5cbi8qIEZyb20gRnZEIDEzLjM3LCBDU1MgQ29sb3IgTW9kdWxlIExldmVsIDMgKi9cbmZ1bmN0aW9uIGhzbDJyZ2IoaCwgbTEsIG0yKSB7XG4gIHJldHVybiAoaCA8IDYwID8gbTEgKyAobTIgLSBtMSkgKiBoIC8gNjBcbiAgICAgIDogaCA8IDE4MCA/IG0yXG4gICAgICA6IGggPCAyNDAgPyBtMSArIChtMiAtIG0xKSAqICgyNDAgLSBoKSAvIDYwXG4gICAgICA6IG0xKSAqIDI1NTtcbn1cbiIsImV4cG9ydCBmdW5jdGlvbiBiYXNpcyh0MSwgdjAsIHYxLCB2MiwgdjMpIHtcbiAgdmFyIHQyID0gdDEgKiB0MSwgdDMgPSB0MiAqIHQxO1xuICByZXR1cm4gKCgxIC0gMyAqIHQxICsgMyAqIHQyIC0gdDMpICogdjBcbiAgICAgICsgKDQgLSA2ICogdDIgKyAzICogdDMpICogdjFcbiAgICAgICsgKDEgKyAzICogdDEgKyAzICogdDIgLSAzICogdDMpICogdjJcbiAgICAgICsgdDMgKiB2MykgLyA2O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZXMpIHtcbiAgdmFyIG4gPSB2YWx1ZXMubGVuZ3RoIC0gMTtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB2YXIgaSA9IHQgPD0gMCA/ICh0ID0gMCkgOiB0ID49IDEgPyAodCA9IDEsIG4gLSAxKSA6IE1hdGguZmxvb3IodCAqIG4pLFxuICAgICAgICB2MSA9IHZhbHVlc1tpXSxcbiAgICAgICAgdjIgPSB2YWx1ZXNbaSArIDFdLFxuICAgICAgICB2MCA9IGkgPiAwID8gdmFsdWVzW2kgLSAxXSA6IDIgKiB2MSAtIHYyLFxuICAgICAgICB2MyA9IGkgPCBuIC0gMSA/IHZhbHVlc1tpICsgMl0gOiAyICogdjIgLSB2MTtcbiAgICByZXR1cm4gYmFzaXMoKHQgLSBpIC8gbikgKiBuLCB2MCwgdjEsIHYyLCB2Myk7XG4gIH07XG59XG4iLCJpbXBvcnQge2Jhc2lzfSBmcm9tIFwiLi9iYXNpcy5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZXMpIHtcbiAgdmFyIG4gPSB2YWx1ZXMubGVuZ3RoO1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHZhciBpID0gTWF0aC5mbG9vcigoKHQgJT0gMSkgPCAwID8gKyt0IDogdCkgKiBuKSxcbiAgICAgICAgdjAgPSB2YWx1ZXNbKGkgKyBuIC0gMSkgJSBuXSxcbiAgICAgICAgdjEgPSB2YWx1ZXNbaSAlIG5dLFxuICAgICAgICB2MiA9IHZhbHVlc1soaSArIDEpICUgbl0sXG4gICAgICAgIHYzID0gdmFsdWVzWyhpICsgMikgJSBuXTtcbiAgICByZXR1cm4gYmFzaXMoKHQgLSBpIC8gbikgKiBuLCB2MCwgdjEsIHYyLCB2Myk7XG4gIH07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudC5qc1wiO1xuXG5mdW5jdGlvbiBsaW5lYXIoYSwgZCkge1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHJldHVybiBhICsgdCAqIGQ7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGV4cG9uZW50aWFsKGEsIGIsIHkpIHtcbiAgcmV0dXJuIGEgPSBNYXRoLnBvdyhhLCB5KSwgYiA9IE1hdGgucG93KGIsIHkpIC0gYSwgeSA9IDEgLyB5LCBmdW5jdGlvbih0KSB7XG4gICAgcmV0dXJuIE1hdGgucG93KGEgKyB0ICogYiwgeSk7XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBodWUoYSwgYikge1xuICB2YXIgZCA9IGIgLSBhO1xuICByZXR1cm4gZCA/IGxpbmVhcihhLCBkID4gMTgwIHx8IGQgPCAtMTgwID8gZCAtIDM2MCAqIE1hdGgucm91bmQoZCAvIDM2MCkgOiBkKSA6IGNvbnN0YW50KGlzTmFOKGEpID8gYiA6IGEpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2FtbWEoeSkge1xuICByZXR1cm4gKHkgPSAreSkgPT09IDEgPyBub2dhbW1hIDogZnVuY3Rpb24oYSwgYikge1xuICAgIHJldHVybiBiIC0gYSA/IGV4cG9uZW50aWFsKGEsIGIsIHkpIDogY29uc3RhbnQoaXNOYU4oYSkgPyBiIDogYSk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vZ2FtbWEoYSwgYikge1xuICB2YXIgZCA9IGIgLSBhO1xuICByZXR1cm4gZCA/IGxpbmVhcihhLCBkKSA6IGNvbnN0YW50KGlzTmFOKGEpID8gYiA6IGEpO1xufVxuIiwiaW1wb3J0IHtyZ2IgYXMgY29sb3JSZ2J9IGZyb20gXCJkMy1jb2xvclwiO1xuaW1wb3J0IGJhc2lzIGZyb20gXCIuL2Jhc2lzLmpzXCI7XG5pbXBvcnQgYmFzaXNDbG9zZWQgZnJvbSBcIi4vYmFzaXNDbG9zZWQuanNcIjtcbmltcG9ydCBub2dhbW1hLCB7Z2FtbWF9IGZyb20gXCIuL2NvbG9yLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiByZ2JHYW1tYSh5KSB7XG4gIHZhciBjb2xvciA9IGdhbW1hKHkpO1xuXG4gIGZ1bmN0aW9uIHJnYihzdGFydCwgZW5kKSB7XG4gICAgdmFyIHIgPSBjb2xvcigoc3RhcnQgPSBjb2xvclJnYihzdGFydCkpLnIsIChlbmQgPSBjb2xvclJnYihlbmQpKS5yKSxcbiAgICAgICAgZyA9IGNvbG9yKHN0YXJ0LmcsIGVuZC5nKSxcbiAgICAgICAgYiA9IGNvbG9yKHN0YXJ0LmIsIGVuZC5iKSxcbiAgICAgICAgb3BhY2l0eSA9IG5vZ2FtbWEoc3RhcnQub3BhY2l0eSwgZW5kLm9wYWNpdHkpO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICBzdGFydC5yID0gcih0KTtcbiAgICAgIHN0YXJ0LmcgPSBnKHQpO1xuICAgICAgc3RhcnQuYiA9IGIodCk7XG4gICAgICBzdGFydC5vcGFjaXR5ID0gb3BhY2l0eSh0KTtcbiAgICAgIHJldHVybiBzdGFydCArIFwiXCI7XG4gICAgfTtcbiAgfVxuXG4gIHJnYi5nYW1tYSA9IHJnYkdhbW1hO1xuXG4gIHJldHVybiByZ2I7XG59KSgxKTtcblxuZnVuY3Rpb24gcmdiU3BsaW5lKHNwbGluZSkge1xuICByZXR1cm4gZnVuY3Rpb24oY29sb3JzKSB7XG4gICAgdmFyIG4gPSBjb2xvcnMubGVuZ3RoLFxuICAgICAgICByID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBnID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBiID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBpLCBjb2xvcjtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBjb2xvciA9IGNvbG9yUmdiKGNvbG9yc1tpXSk7XG4gICAgICByW2ldID0gY29sb3IuciB8fCAwO1xuICAgICAgZ1tpXSA9IGNvbG9yLmcgfHwgMDtcbiAgICAgIGJbaV0gPSBjb2xvci5iIHx8IDA7XG4gICAgfVxuICAgIHIgPSBzcGxpbmUocik7XG4gICAgZyA9IHNwbGluZShnKTtcbiAgICBiID0gc3BsaW5lKGIpO1xuICAgIGNvbG9yLm9wYWNpdHkgPSAxO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICBjb2xvci5yID0gcih0KTtcbiAgICAgIGNvbG9yLmcgPSBnKHQpO1xuICAgICAgY29sb3IuYiA9IGIodCk7XG4gICAgICByZXR1cm4gY29sb3IgKyBcIlwiO1xuICAgIH07XG4gIH07XG59XG5cbmV4cG9ydCB2YXIgcmdiQmFzaXMgPSByZ2JTcGxpbmUoYmFzaXMpO1xuZXhwb3J0IHZhciByZ2JCYXNpc0Nsb3NlZCA9IHJnYlNwbGluZShiYXNpc0Nsb3NlZCk7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIGlmICghYikgYiA9IFtdO1xuICB2YXIgbiA9IGEgPyBNYXRoLm1pbihiLmxlbmd0aCwgYS5sZW5ndGgpIDogMCxcbiAgICAgIGMgPSBiLnNsaWNlKCksXG4gICAgICBpO1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIGNbaV0gPSBhW2ldICogKDEgLSB0KSArIGJbaV0gKiB0O1xuICAgIHJldHVybiBjO1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNOdW1iZXJBcnJheSh4KSB7XG4gIHJldHVybiBBcnJheUJ1ZmZlci5pc1ZpZXcoeCkgJiYgISh4IGluc3RhbmNlb2YgRGF0YVZpZXcpO1xufVxuIiwiaW1wb3J0IHZhbHVlIGZyb20gXCIuL3ZhbHVlLmpzXCI7XG5pbXBvcnQgbnVtYmVyQXJyYXksIHtpc051bWJlckFycmF5fSBmcm9tIFwiLi9udW1iZXJBcnJheS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHJldHVybiAoaXNOdW1iZXJBcnJheShiKSA/IG51bWJlckFycmF5IDogZ2VuZXJpY0FycmF5KShhLCBiKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyaWNBcnJheShhLCBiKSB7XG4gIHZhciBuYiA9IGIgPyBiLmxlbmd0aCA6IDAsXG4gICAgICBuYSA9IGEgPyBNYXRoLm1pbihuYiwgYS5sZW5ndGgpIDogMCxcbiAgICAgIHggPSBuZXcgQXJyYXkobmEpLFxuICAgICAgYyA9IG5ldyBBcnJheShuYiksXG4gICAgICBpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBuYTsgKytpKSB4W2ldID0gdmFsdWUoYVtpXSwgYltpXSk7XG4gIGZvciAoOyBpIDwgbmI7ICsraSkgY1tpXSA9IGJbaV07XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbmE7ICsraSkgY1tpXSA9IHhbaV0odCk7XG4gICAgcmV0dXJuIGM7XG4gIH07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHZhciBkID0gbmV3IERhdGU7XG4gIHJldHVybiBhID0gK2EsIGIgPSArYiwgZnVuY3Rpb24odCkge1xuICAgIHJldHVybiBkLnNldFRpbWUoYSAqICgxIC0gdCkgKyBiICogdCksIGQ7XG4gIH07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHJldHVybiBhID0gK2EsIGIgPSArYiwgZnVuY3Rpb24odCkge1xuICAgIHJldHVybiBhICogKDEgLSB0KSArIGIgKiB0O1xuICB9O1xufVxuIiwiaW1wb3J0IHZhbHVlIGZyb20gXCIuL3ZhbHVlLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgdmFyIGkgPSB7fSxcbiAgICAgIGMgPSB7fSxcbiAgICAgIGs7XG5cbiAgaWYgKGEgPT09IG51bGwgfHwgdHlwZW9mIGEgIT09IFwib2JqZWN0XCIpIGEgPSB7fTtcbiAgaWYgKGIgPT09IG51bGwgfHwgdHlwZW9mIGIgIT09IFwib2JqZWN0XCIpIGIgPSB7fTtcblxuICBmb3IgKGsgaW4gYikge1xuICAgIGlmIChrIGluIGEpIHtcbiAgICAgIGlba10gPSB2YWx1ZShhW2tdLCBiW2tdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY1trXSA9IGJba107XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICBmb3IgKGsgaW4gaSkgY1trXSA9IGlba10odCk7XG4gICAgcmV0dXJuIGM7XG4gIH07XG59XG4iLCJpbXBvcnQgbnVtYmVyIGZyb20gXCIuL251bWJlci5qc1wiO1xuXG52YXIgcmVBID0gL1stK10/KD86XFxkK1xcLj9cXGQqfFxcLj9cXGQrKSg/OltlRV1bLStdP1xcZCspPy9nLFxuICAgIHJlQiA9IG5ldyBSZWdFeHAocmVBLnNvdXJjZSwgXCJnXCIpO1xuXG5mdW5jdGlvbiB6ZXJvKGIpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBiO1xuICB9O1xufVxuXG5mdW5jdGlvbiBvbmUoYikge1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHJldHVybiBiKHQpICsgXCJcIjtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICB2YXIgYmkgPSByZUEubGFzdEluZGV4ID0gcmVCLmxhc3RJbmRleCA9IDAsIC8vIHNjYW4gaW5kZXggZm9yIG5leHQgbnVtYmVyIGluIGJcbiAgICAgIGFtLCAvLyBjdXJyZW50IG1hdGNoIGluIGFcbiAgICAgIGJtLCAvLyBjdXJyZW50IG1hdGNoIGluIGJcbiAgICAgIGJzLCAvLyBzdHJpbmcgcHJlY2VkaW5nIGN1cnJlbnQgbnVtYmVyIGluIGIsIGlmIGFueVxuICAgICAgaSA9IC0xLCAvLyBpbmRleCBpbiBzXG4gICAgICBzID0gW10sIC8vIHN0cmluZyBjb25zdGFudHMgYW5kIHBsYWNlaG9sZGVyc1xuICAgICAgcSA9IFtdOyAvLyBudW1iZXIgaW50ZXJwb2xhdG9yc1xuXG4gIC8vIENvZXJjZSBpbnB1dHMgdG8gc3RyaW5ncy5cbiAgYSA9IGEgKyBcIlwiLCBiID0gYiArIFwiXCI7XG5cbiAgLy8gSW50ZXJwb2xhdGUgcGFpcnMgb2YgbnVtYmVycyBpbiBhICYgYi5cbiAgd2hpbGUgKChhbSA9IHJlQS5leGVjKGEpKVxuICAgICAgJiYgKGJtID0gcmVCLmV4ZWMoYikpKSB7XG4gICAgaWYgKChicyA9IGJtLmluZGV4KSA+IGJpKSB7IC8vIGEgc3RyaW5nIHByZWNlZGVzIHRoZSBuZXh0IG51bWJlciBpbiBiXG4gICAgICBicyA9IGIuc2xpY2UoYmksIGJzKTtcbiAgICAgIGlmIChzW2ldKSBzW2ldICs9IGJzOyAvLyBjb2FsZXNjZSB3aXRoIHByZXZpb3VzIHN0cmluZ1xuICAgICAgZWxzZSBzWysraV0gPSBicztcbiAgICB9XG4gICAgaWYgKChhbSA9IGFtWzBdKSA9PT0gKGJtID0gYm1bMF0pKSB7IC8vIG51bWJlcnMgaW4gYSAmIGIgbWF0Y2hcbiAgICAgIGlmIChzW2ldKSBzW2ldICs9IGJtOyAvLyBjb2FsZXNjZSB3aXRoIHByZXZpb3VzIHN0cmluZ1xuICAgICAgZWxzZSBzWysraV0gPSBibTtcbiAgICB9IGVsc2UgeyAvLyBpbnRlcnBvbGF0ZSBub24tbWF0Y2hpbmcgbnVtYmVyc1xuICAgICAgc1srK2ldID0gbnVsbDtcbiAgICAgIHEucHVzaCh7aTogaSwgeDogbnVtYmVyKGFtLCBibSl9KTtcbiAgICB9XG4gICAgYmkgPSByZUIubGFzdEluZGV4O1xuICB9XG5cbiAgLy8gQWRkIHJlbWFpbnMgb2YgYi5cbiAgaWYgKGJpIDwgYi5sZW5ndGgpIHtcbiAgICBicyA9IGIuc2xpY2UoYmkpO1xuICAgIGlmIChzW2ldKSBzW2ldICs9IGJzOyAvLyBjb2FsZXNjZSB3aXRoIHByZXZpb3VzIHN0cmluZ1xuICAgIGVsc2Ugc1srK2ldID0gYnM7XG4gIH1cblxuICAvLyBTcGVjaWFsIG9wdGltaXphdGlvbiBmb3Igb25seSBhIHNpbmdsZSBtYXRjaC5cbiAgLy8gT3RoZXJ3aXNlLCBpbnRlcnBvbGF0ZSBlYWNoIG9mIHRoZSBudW1iZXJzIGFuZCByZWpvaW4gdGhlIHN0cmluZy5cbiAgcmV0dXJuIHMubGVuZ3RoIDwgMiA/IChxWzBdXG4gICAgICA/IG9uZShxWzBdLngpXG4gICAgICA6IHplcm8oYikpXG4gICAgICA6IChiID0gcS5sZW5ndGgsIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbzsgaSA8IGI7ICsraSkgc1sobyA9IHFbaV0pLmldID0gby54KHQpO1xuICAgICAgICAgIHJldHVybiBzLmpvaW4oXCJcIik7XG4gICAgICAgIH0pO1xufVxuIiwidmFyIGZyYW1lID0gMCwgLy8gaXMgYW4gYW5pbWF0aW9uIGZyYW1lIHBlbmRpbmc/XG4gICAgdGltZW91dCA9IDAsIC8vIGlzIGEgdGltZW91dCBwZW5kaW5nP1xuICAgIGludGVydmFsID0gMCwgLy8gYXJlIGFueSB0aW1lcnMgYWN0aXZlP1xuICAgIHBva2VEZWxheSA9IDEwMDAsIC8vIGhvdyBmcmVxdWVudGx5IHdlIGNoZWNrIGZvciBjbG9jayBza2V3XG4gICAgdGFza0hlYWQsXG4gICAgdGFza1RhaWwsXG4gICAgY2xvY2tMYXN0ID0gMCxcbiAgICBjbG9ja05vdyA9IDAsXG4gICAgY2xvY2tTa2V3ID0gMCxcbiAgICBjbG9jayA9IHR5cGVvZiBwZXJmb3JtYW5jZSA9PT0gXCJvYmplY3RcIiAmJiBwZXJmb3JtYW5jZS5ub3cgPyBwZXJmb3JtYW5jZSA6IERhdGUsXG4gICAgc2V0RnJhbWUgPSB0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiICYmIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPyB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lLmJpbmQod2luZG93KSA6IGZ1bmN0aW9uKGYpIHsgc2V0VGltZW91dChmLCAxNyk7IH07XG5cbmV4cG9ydCBmdW5jdGlvbiBub3coKSB7XG4gIHJldHVybiBjbG9ja05vdyB8fCAoc2V0RnJhbWUoY2xlYXJOb3cpLCBjbG9ja05vdyA9IGNsb2NrLm5vdygpICsgY2xvY2tTa2V3KTtcbn1cblxuZnVuY3Rpb24gY2xlYXJOb3coKSB7XG4gIGNsb2NrTm93ID0gMDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFRpbWVyKCkge1xuICB0aGlzLl9jYWxsID1cbiAgdGhpcy5fdGltZSA9XG4gIHRoaXMuX25leHQgPSBudWxsO1xufVxuXG5UaW1lci5wcm90b3R5cGUgPSB0aW1lci5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBUaW1lcixcbiAgcmVzdGFydDogZnVuY3Rpb24oY2FsbGJhY2ssIGRlbGF5LCB0aW1lKSB7XG4gICAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiY2FsbGJhY2sgaXMgbm90IGEgZnVuY3Rpb25cIik7XG4gICAgdGltZSA9ICh0aW1lID09IG51bGwgPyBub3coKSA6ICt0aW1lKSArIChkZWxheSA9PSBudWxsID8gMCA6ICtkZWxheSk7XG4gICAgaWYgKCF0aGlzLl9uZXh0ICYmIHRhc2tUYWlsICE9PSB0aGlzKSB7XG4gICAgICBpZiAodGFza1RhaWwpIHRhc2tUYWlsLl9uZXh0ID0gdGhpcztcbiAgICAgIGVsc2UgdGFza0hlYWQgPSB0aGlzO1xuICAgICAgdGFza1RhaWwgPSB0aGlzO1xuICAgIH1cbiAgICB0aGlzLl9jYWxsID0gY2FsbGJhY2s7XG4gICAgdGhpcy5fdGltZSA9IHRpbWU7XG4gICAgc2xlZXAoKTtcbiAgfSxcbiAgc3RvcDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX2NhbGwpIHtcbiAgICAgIHRoaXMuX2NhbGwgPSBudWxsO1xuICAgICAgdGhpcy5fdGltZSA9IEluZmluaXR5O1xuICAgICAgc2xlZXAoKTtcbiAgICB9XG4gIH1cbn07XG5cbmV4cG9ydCBmdW5jdGlvbiB0aW1lcihjYWxsYmFjaywgZGVsYXksIHRpbWUpIHtcbiAgdmFyIHQgPSBuZXcgVGltZXI7XG4gIHQucmVzdGFydChjYWxsYmFjaywgZGVsYXksIHRpbWUpO1xuICByZXR1cm4gdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRpbWVyRmx1c2goKSB7XG4gIG5vdygpOyAvLyBHZXQgdGhlIGN1cnJlbnQgdGltZSwgaWYgbm90IGFscmVhZHkgc2V0LlxuICArK2ZyYW1lOyAvLyBQcmV0ZW5kIHdl4oCZdmUgc2V0IGFuIGFsYXJtLCBpZiB3ZSBoYXZlbuKAmXQgYWxyZWFkeS5cbiAgdmFyIHQgPSB0YXNrSGVhZCwgZTtcbiAgd2hpbGUgKHQpIHtcbiAgICBpZiAoKGUgPSBjbG9ja05vdyAtIHQuX3RpbWUpID49IDApIHQuX2NhbGwuY2FsbChudWxsLCBlKTtcbiAgICB0ID0gdC5fbmV4dDtcbiAgfVxuICAtLWZyYW1lO1xufVxuXG5mdW5jdGlvbiB3YWtlKCkge1xuICBjbG9ja05vdyA9IChjbG9ja0xhc3QgPSBjbG9jay5ub3coKSkgKyBjbG9ja1NrZXc7XG4gIGZyYW1lID0gdGltZW91dCA9IDA7XG4gIHRyeSB7XG4gICAgdGltZXJGbHVzaCgpO1xuICB9IGZpbmFsbHkge1xuICAgIGZyYW1lID0gMDtcbiAgICBuYXAoKTtcbiAgICBjbG9ja05vdyA9IDA7XG4gIH1cbn1cblxuZnVuY3Rpb24gcG9rZSgpIHtcbiAgdmFyIG5vdyA9IGNsb2NrLm5vdygpLCBkZWxheSA9IG5vdyAtIGNsb2NrTGFzdDtcbiAgaWYgKGRlbGF5ID4gcG9rZURlbGF5KSBjbG9ja1NrZXcgLT0gZGVsYXksIGNsb2NrTGFzdCA9IG5vdztcbn1cblxuZnVuY3Rpb24gbmFwKCkge1xuICB2YXIgdDAsIHQxID0gdGFza0hlYWQsIHQyLCB0aW1lID0gSW5maW5pdHk7XG4gIHdoaWxlICh0MSkge1xuICAgIGlmICh0MS5fY2FsbCkge1xuICAgICAgaWYgKHRpbWUgPiB0MS5fdGltZSkgdGltZSA9IHQxLl90aW1lO1xuICAgICAgdDAgPSB0MSwgdDEgPSB0MS5fbmV4dDtcbiAgICB9IGVsc2Uge1xuICAgICAgdDIgPSB0MS5fbmV4dCwgdDEuX25leHQgPSBudWxsO1xuICAgICAgdDEgPSB0MCA/IHQwLl9uZXh0ID0gdDIgOiB0YXNrSGVhZCA9IHQyO1xuICAgIH1cbiAgfVxuICB0YXNrVGFpbCA9IHQwO1xuICBzbGVlcCh0aW1lKTtcbn1cblxuZnVuY3Rpb24gc2xlZXAodGltZSkge1xuICBpZiAoZnJhbWUpIHJldHVybjsgLy8gU29vbmVzdCBhbGFybSBhbHJlYWR5IHNldCwgb3Igd2lsbCBiZS5cbiAgaWYgKHRpbWVvdXQpIHRpbWVvdXQgPSBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gIHZhciBkZWxheSA9IHRpbWUgLSBjbG9ja05vdzsgLy8gU3RyaWN0bHkgbGVzcyB0aGFuIGlmIHdlIHJlY29tcHV0ZWQgY2xvY2tOb3cuXG4gIGlmIChkZWxheSA+IDI0KSB7XG4gICAgaWYgKHRpbWUgPCBJbmZpbml0eSkgdGltZW91dCA9IHNldFRpbWVvdXQod2FrZSwgdGltZSAtIGNsb2NrLm5vdygpIC0gY2xvY2tTa2V3KTtcbiAgICBpZiAoaW50ZXJ2YWwpIGludGVydmFsID0gY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKCFpbnRlcnZhbCkgY2xvY2tMYXN0ID0gY2xvY2subm93KCksIGludGVydmFsID0gc2V0SW50ZXJ2YWwocG9rZSwgcG9rZURlbGF5KTtcbiAgICBmcmFtZSA9IDEsIHNldEZyYW1lKHdha2UpO1xuICB9XG59XG4iLCJpbXBvcnQge2NvbG9yfSBmcm9tIFwiZDMtY29sb3JcIjtcbmltcG9ydCByZ2IgZnJvbSBcIi4vcmdiLmpzXCI7XG5pbXBvcnQge2dlbmVyaWNBcnJheX0gZnJvbSBcIi4vYXJyYXkuanNcIjtcbmltcG9ydCBkYXRlIGZyb20gXCIuL2RhdGUuanNcIjtcbmltcG9ydCBudW1iZXIgZnJvbSBcIi4vbnVtYmVyLmpzXCI7XG5pbXBvcnQgb2JqZWN0IGZyb20gXCIuL29iamVjdC5qc1wiO1xuaW1wb3J0IHN0cmluZyBmcm9tIFwiLi9zdHJpbmcuanNcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudC5qc1wiO1xuaW1wb3J0IG51bWJlckFycmF5LCB7aXNOdW1iZXJBcnJheX0gZnJvbSBcIi4vbnVtYmVyQXJyYXkuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICB2YXIgdCA9IHR5cGVvZiBiLCBjO1xuICByZXR1cm4gYiA9PSBudWxsIHx8IHQgPT09IFwiYm9vbGVhblwiID8gY29uc3RhbnQoYilcbiAgICAgIDogKHQgPT09IFwibnVtYmVyXCIgPyBudW1iZXJcbiAgICAgIDogdCA9PT0gXCJzdHJpbmdcIiA/ICgoYyA9IGNvbG9yKGIpKSA/IChiID0gYywgcmdiKSA6IHN0cmluZylcbiAgICAgIDogYiBpbnN0YW5jZW9mIGNvbG9yID8gcmdiXG4gICAgICA6IGIgaW5zdGFuY2VvZiBEYXRlID8gZGF0ZVxuICAgICAgOiBpc051bWJlckFycmF5KGIpID8gbnVtYmVyQXJyYXlcbiAgICAgIDogQXJyYXkuaXNBcnJheShiKSA/IGdlbmVyaWNBcnJheVxuICAgICAgOiB0eXBlb2YgYi52YWx1ZU9mICE9PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIGIudG9TdHJpbmcgIT09IFwiZnVuY3Rpb25cIiB8fCBpc05hTihiKSA/IG9iamVjdFxuICAgICAgOiBudW1iZXIpKGEsIGIpO1xufVxuIiwiaW1wb3J0IHtldmVudH0gZnJvbSBcIi4vc2VsZWN0aW9uL29uXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgY3VycmVudCA9IGV2ZW50LCBzb3VyY2U7XG4gIHdoaWxlIChzb3VyY2UgPSBjdXJyZW50LnNvdXJjZUV2ZW50KSBjdXJyZW50ID0gc291cmNlO1xuICByZXR1cm4gY3VycmVudDtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGUsIGV2ZW50KSB7XG4gIHZhciBzdmcgPSBub2RlLm93bmVyU1ZHRWxlbWVudCB8fCBub2RlO1xuXG4gIGlmIChzdmcuY3JlYXRlU1ZHUG9pbnQpIHtcbiAgICB2YXIgcG9pbnQgPSBzdmcuY3JlYXRlU1ZHUG9pbnQoKTtcbiAgICBwb2ludC54ID0gZXZlbnQuY2xpZW50WCwgcG9pbnQueSA9IGV2ZW50LmNsaWVudFk7XG4gICAgcG9pbnQgPSBwb2ludC5tYXRyaXhUcmFuc2Zvcm0obm9kZS5nZXRTY3JlZW5DVE0oKS5pbnZlcnNlKCkpO1xuICAgIHJldHVybiBbcG9pbnQueCwgcG9pbnQueV07XG4gIH1cblxuICB2YXIgcmVjdCA9IG5vZGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIHJldHVybiBbZXZlbnQuY2xpZW50WCAtIHJlY3QubGVmdCAtIG5vZGUuY2xpZW50TGVmdCwgZXZlbnQuY2xpZW50WSAtIHJlY3QudG9wIC0gbm9kZS5jbGllbnRUb3BdO1xufVxuIiwiaW1wb3J0IHNvdXJjZUV2ZW50IGZyb20gXCIuL3NvdXJjZUV2ZW50XCI7XG5pbXBvcnQgcG9pbnQgZnJvbSBcIi4vcG9pbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obm9kZSwgdG91Y2hlcywgaWRlbnRpZmllcikge1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDMpIGlkZW50aWZpZXIgPSB0b3VjaGVzLCB0b3VjaGVzID0gc291cmNlRXZlbnQoKS5jaGFuZ2VkVG91Y2hlcztcblxuICBmb3IgKHZhciBpID0gMCwgbiA9IHRvdWNoZXMgPyB0b3VjaGVzLmxlbmd0aCA6IDAsIHRvdWNoOyBpIDwgbjsgKytpKSB7XG4gICAgaWYgKCh0b3VjaCA9IHRvdWNoZXNbaV0pLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJldHVybiBwb2ludChub2RlLCB0b3VjaCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG4iLCJpbXBvcnQgc291cmNlRXZlbnQgZnJvbSBcIi4vc291cmNlRXZlbnRcIjtcbmltcG9ydCBwb2ludCBmcm9tIFwiLi9wb2ludFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihub2RlKSB7XG4gIHZhciBldmVudCA9IHNvdXJjZUV2ZW50KCk7XG4gIGlmIChldmVudC5jaGFuZ2VkVG91Y2hlcykgZXZlbnQgPSBldmVudC5jaGFuZ2VkVG91Y2hlc1swXTtcbiAgcmV0dXJuIHBvaW50KG5vZGUsIGV2ZW50KTtcbn1cbiIsImltcG9ydCB7VGltZXJ9IGZyb20gXCIuL3RpbWVyLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNhbGxiYWNrLCBkZWxheSwgdGltZSkge1xuICB2YXIgdCA9IG5ldyBUaW1lcjtcbiAgZGVsYXkgPSBkZWxheSA9PSBudWxsID8gMCA6ICtkZWxheTtcbiAgdC5yZXN0YXJ0KGZ1bmN0aW9uKGVsYXBzZWQpIHtcbiAgICB0LnN0b3AoKTtcbiAgICBjYWxsYmFjayhlbGFwc2VkICsgZGVsYXkpO1xuICB9LCBkZWxheSwgdGltZSk7XG4gIHJldHVybiB0O1xufVxuIiwiaW1wb3J0IHtkaXNwYXRjaH0gZnJvbSBcImQzLWRpc3BhdGNoXCI7XG5pbXBvcnQge3RpbWVyLCB0aW1lb3V0fSBmcm9tIFwiZDMtdGltZXJcIjtcblxudmFyIGVtcHR5T24gPSBkaXNwYXRjaChcInN0YXJ0XCIsIFwiZW5kXCIsIFwiY2FuY2VsXCIsIFwiaW50ZXJydXB0XCIpO1xudmFyIGVtcHR5VHdlZW4gPSBbXTtcblxuZXhwb3J0IHZhciBDUkVBVEVEID0gMDtcbmV4cG9ydCB2YXIgU0NIRURVTEVEID0gMTtcbmV4cG9ydCB2YXIgU1RBUlRJTkcgPSAyO1xuZXhwb3J0IHZhciBTVEFSVEVEID0gMztcbmV4cG9ydCB2YXIgUlVOTklORyA9IDQ7XG5leHBvcnQgdmFyIEVORElORyA9IDU7XG5leHBvcnQgdmFyIEVOREVEID0gNjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obm9kZSwgbmFtZSwgaWQsIGluZGV4LCBncm91cCwgdGltaW5nKSB7XG4gIHZhciBzY2hlZHVsZXMgPSBub2RlLl9fdHJhbnNpdGlvbjtcbiAgaWYgKCFzY2hlZHVsZXMpIG5vZGUuX190cmFuc2l0aW9uID0ge307XG4gIGVsc2UgaWYgKGlkIGluIHNjaGVkdWxlcykgcmV0dXJuO1xuICBjcmVhdGUobm9kZSwgaWQsIHtcbiAgICBuYW1lOiBuYW1lLFxuICAgIGluZGV4OiBpbmRleCwgLy8gRm9yIGNvbnRleHQgZHVyaW5nIGNhbGxiYWNrLlxuICAgIGdyb3VwOiBncm91cCwgLy8gRm9yIGNvbnRleHQgZHVyaW5nIGNhbGxiYWNrLlxuICAgIG9uOiBlbXB0eU9uLFxuICAgIHR3ZWVuOiBlbXB0eVR3ZWVuLFxuICAgIHRpbWU6IHRpbWluZy50aW1lLFxuICAgIGRlbGF5OiB0aW1pbmcuZGVsYXksXG4gICAgZHVyYXRpb246IHRpbWluZy5kdXJhdGlvbixcbiAgICBlYXNlOiB0aW1pbmcuZWFzZSxcbiAgICB0aW1lcjogbnVsbCxcbiAgICBzdGF0ZTogQ1JFQVRFRFxuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluaXQobm9kZSwgaWQpIHtcbiAgdmFyIHNjaGVkdWxlID0gZ2V0KG5vZGUsIGlkKTtcbiAgaWYgKHNjaGVkdWxlLnN0YXRlID4gQ1JFQVRFRCkgdGhyb3cgbmV3IEVycm9yKFwidG9vIGxhdGU7IGFscmVhZHkgc2NoZWR1bGVkXCIpO1xuICByZXR1cm4gc2NoZWR1bGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXQobm9kZSwgaWQpIHtcbiAgdmFyIHNjaGVkdWxlID0gZ2V0KG5vZGUsIGlkKTtcbiAgaWYgKHNjaGVkdWxlLnN0YXRlID4gU1RBUlRFRCkgdGhyb3cgbmV3IEVycm9yKFwidG9vIGxhdGU7IGFscmVhZHkgcnVubmluZ1wiKTtcbiAgcmV0dXJuIHNjaGVkdWxlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0KG5vZGUsIGlkKSB7XG4gIHZhciBzY2hlZHVsZSA9IG5vZGUuX190cmFuc2l0aW9uO1xuICBpZiAoIXNjaGVkdWxlIHx8ICEoc2NoZWR1bGUgPSBzY2hlZHVsZVtpZF0pKSB0aHJvdyBuZXcgRXJyb3IoXCJ0cmFuc2l0aW9uIG5vdCBmb3VuZFwiKTtcbiAgcmV0dXJuIHNjaGVkdWxlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGUobm9kZSwgaWQsIHNlbGYpIHtcbiAgdmFyIHNjaGVkdWxlcyA9IG5vZGUuX190cmFuc2l0aW9uLFxuICAgICAgdHdlZW47XG5cbiAgLy8gSW5pdGlhbGl6ZSB0aGUgc2VsZiB0aW1lciB3aGVuIHRoZSB0cmFuc2l0aW9uIGlzIGNyZWF0ZWQuXG4gIC8vIE5vdGUgdGhlIGFjdHVhbCBkZWxheSBpcyBub3Qga25vd24gdW50aWwgdGhlIGZpcnN0IGNhbGxiYWNrIVxuICBzY2hlZHVsZXNbaWRdID0gc2VsZjtcbiAgc2VsZi50aW1lciA9IHRpbWVyKHNjaGVkdWxlLCAwLCBzZWxmLnRpbWUpO1xuXG4gIGZ1bmN0aW9uIHNjaGVkdWxlKGVsYXBzZWQpIHtcbiAgICBzZWxmLnN0YXRlID0gU0NIRURVTEVEO1xuICAgIHNlbGYudGltZXIucmVzdGFydChzdGFydCwgc2VsZi5kZWxheSwgc2VsZi50aW1lKTtcblxuICAgIC8vIElmIHRoZSBlbGFwc2VkIGRlbGF5IGlzIGxlc3MgdGhhbiBvdXIgZmlyc3Qgc2xlZXAsIHN0YXJ0IGltbWVkaWF0ZWx5LlxuICAgIGlmIChzZWxmLmRlbGF5IDw9IGVsYXBzZWQpIHN0YXJ0KGVsYXBzZWQgLSBzZWxmLmRlbGF5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHN0YXJ0KGVsYXBzZWQpIHtcbiAgICB2YXIgaSwgaiwgbiwgbztcblxuICAgIC8vIElmIHRoZSBzdGF0ZSBpcyBub3QgU0NIRURVTEVELCB0aGVuIHdlIHByZXZpb3VzbHkgZXJyb3JlZCBvbiBzdGFydC5cbiAgICBpZiAoc2VsZi5zdGF0ZSAhPT0gU0NIRURVTEVEKSByZXR1cm4gc3RvcCgpO1xuXG4gICAgZm9yIChpIGluIHNjaGVkdWxlcykge1xuICAgICAgbyA9IHNjaGVkdWxlc1tpXTtcbiAgICAgIGlmIChvLm5hbWUgIT09IHNlbGYubmFtZSkgY29udGludWU7XG5cbiAgICAgIC8vIFdoaWxlIHRoaXMgZWxlbWVudCBhbHJlYWR5IGhhcyBhIHN0YXJ0aW5nIHRyYW5zaXRpb24gZHVyaW5nIHRoaXMgZnJhbWUsXG4gICAgICAvLyBkZWZlciBzdGFydGluZyBhbiBpbnRlcnJ1cHRpbmcgdHJhbnNpdGlvbiB1bnRpbCB0aGF0IHRyYW5zaXRpb24gaGFzIGFcbiAgICAgIC8vIGNoYW5jZSB0byB0aWNrIChhbmQgcG9zc2libHkgZW5kKTsgc2VlIGQzL2QzLXRyYW5zaXRpb24jNTQhXG4gICAgICBpZiAoby5zdGF0ZSA9PT0gU1RBUlRFRCkgcmV0dXJuIHRpbWVvdXQoc3RhcnQpO1xuXG4gICAgICAvLyBJbnRlcnJ1cHQgdGhlIGFjdGl2ZSB0cmFuc2l0aW9uLCBpZiBhbnkuXG4gICAgICBpZiAoby5zdGF0ZSA9PT0gUlVOTklORykge1xuICAgICAgICBvLnN0YXRlID0gRU5ERUQ7XG4gICAgICAgIG8udGltZXIuc3RvcCgpO1xuICAgICAgICBvLm9uLmNhbGwoXCJpbnRlcnJ1cHRcIiwgbm9kZSwgbm9kZS5fX2RhdGFfXywgby5pbmRleCwgby5ncm91cCk7XG4gICAgICAgIGRlbGV0ZSBzY2hlZHVsZXNbaV07XG4gICAgICB9XG5cbiAgICAgIC8vIENhbmNlbCBhbnkgcHJlLWVtcHRlZCB0cmFuc2l0aW9ucy5cbiAgICAgIGVsc2UgaWYgKCtpIDwgaWQpIHtcbiAgICAgICAgby5zdGF0ZSA9IEVOREVEO1xuICAgICAgICBvLnRpbWVyLnN0b3AoKTtcbiAgICAgICAgby5vbi5jYWxsKFwiY2FuY2VsXCIsIG5vZGUsIG5vZGUuX19kYXRhX18sIG8uaW5kZXgsIG8uZ3JvdXApO1xuICAgICAgICBkZWxldGUgc2NoZWR1bGVzW2ldO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIERlZmVyIHRoZSBmaXJzdCB0aWNrIHRvIGVuZCBvZiB0aGUgY3VycmVudCBmcmFtZTsgc2VlIGQzL2QzIzE1NzYuXG4gICAgLy8gTm90ZSB0aGUgdHJhbnNpdGlvbiBtYXkgYmUgY2FuY2VsZWQgYWZ0ZXIgc3RhcnQgYW5kIGJlZm9yZSB0aGUgZmlyc3QgdGljayFcbiAgICAvLyBOb3RlIHRoaXMgbXVzdCBiZSBzY2hlZHVsZWQgYmVmb3JlIHRoZSBzdGFydCBldmVudDsgc2VlIGQzL2QzLXRyYW5zaXRpb24jMTYhXG4gICAgLy8gQXNzdW1pbmcgdGhpcyBpcyBzdWNjZXNzZnVsLCBzdWJzZXF1ZW50IGNhbGxiYWNrcyBnbyBzdHJhaWdodCB0byB0aWNrLlxuICAgIHRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoc2VsZi5zdGF0ZSA9PT0gU1RBUlRFRCkge1xuICAgICAgICBzZWxmLnN0YXRlID0gUlVOTklORztcbiAgICAgICAgc2VsZi50aW1lci5yZXN0YXJ0KHRpY2ssIHNlbGYuZGVsYXksIHNlbGYudGltZSk7XG4gICAgICAgIHRpY2soZWxhcHNlZCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBEaXNwYXRjaCB0aGUgc3RhcnQgZXZlbnQuXG4gICAgLy8gTm90ZSB0aGlzIG11c3QgYmUgZG9uZSBiZWZvcmUgdGhlIHR3ZWVuIGFyZSBpbml0aWFsaXplZC5cbiAgICBzZWxmLnN0YXRlID0gU1RBUlRJTkc7XG4gICAgc2VsZi5vbi5jYWxsKFwic3RhcnRcIiwgbm9kZSwgbm9kZS5fX2RhdGFfXywgc2VsZi5pbmRleCwgc2VsZi5ncm91cCk7XG4gICAgaWYgKHNlbGYuc3RhdGUgIT09IFNUQVJUSU5HKSByZXR1cm47IC8vIGludGVycnVwdGVkXG4gICAgc2VsZi5zdGF0ZSA9IFNUQVJURUQ7XG5cbiAgICAvLyBJbml0aWFsaXplIHRoZSB0d2VlbiwgZGVsZXRpbmcgbnVsbCB0d2Vlbi5cbiAgICB0d2VlbiA9IG5ldyBBcnJheShuID0gc2VsZi50d2Vlbi5sZW5ndGgpO1xuICAgIGZvciAoaSA9IDAsIGogPSAtMTsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG8gPSBzZWxmLnR3ZWVuW2ldLnZhbHVlLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgc2VsZi5pbmRleCwgc2VsZi5ncm91cCkpIHtcbiAgICAgICAgdHdlZW5bKytqXSA9IG87XG4gICAgICB9XG4gICAgfVxuICAgIHR3ZWVuLmxlbmd0aCA9IGogKyAxO1xuICB9XG5cbiAgZnVuY3Rpb24gdGljayhlbGFwc2VkKSB7XG4gICAgdmFyIHQgPSBlbGFwc2VkIDwgc2VsZi5kdXJhdGlvbiA/IHNlbGYuZWFzZS5jYWxsKG51bGwsIGVsYXBzZWQgLyBzZWxmLmR1cmF0aW9uKSA6IChzZWxmLnRpbWVyLnJlc3RhcnQoc3RvcCksIHNlbGYuc3RhdGUgPSBFTkRJTkcsIDEpLFxuICAgICAgICBpID0gLTEsXG4gICAgICAgIG4gPSB0d2Vlbi5sZW5ndGg7XG5cbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgdHdlZW5baV0uY2FsbChub2RlLCB0KTtcbiAgICB9XG5cbiAgICAvLyBEaXNwYXRjaCB0aGUgZW5kIGV2ZW50LlxuICAgIGlmIChzZWxmLnN0YXRlID09PSBFTkRJTkcpIHtcbiAgICAgIHNlbGYub24uY2FsbChcImVuZFwiLCBub2RlLCBub2RlLl9fZGF0YV9fLCBzZWxmLmluZGV4LCBzZWxmLmdyb3VwKTtcbiAgICAgIHN0b3AoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzdG9wKCkge1xuICAgIHNlbGYuc3RhdGUgPSBFTkRFRDtcbiAgICBzZWxmLnRpbWVyLnN0b3AoKTtcbiAgICBkZWxldGUgc2NoZWR1bGVzW2lkXTtcbiAgICBmb3IgKHZhciBpIGluIHNjaGVkdWxlcykgcmV0dXJuOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgZGVsZXRlIG5vZGUuX190cmFuc2l0aW9uO1xuICB9XG59XG4iLCJpbXBvcnQge1NUQVJUSU5HLCBFTkRJTkcsIEVOREVEfSBmcm9tIFwiLi90cmFuc2l0aW9uL3NjaGVkdWxlLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGUsIG5hbWUpIHtcbiAgdmFyIHNjaGVkdWxlcyA9IG5vZGUuX190cmFuc2l0aW9uLFxuICAgICAgc2NoZWR1bGUsXG4gICAgICBhY3RpdmUsXG4gICAgICBlbXB0eSA9IHRydWUsXG4gICAgICBpO1xuXG4gIGlmICghc2NoZWR1bGVzKSByZXR1cm47XG5cbiAgbmFtZSA9IG5hbWUgPT0gbnVsbCA/IG51bGwgOiBuYW1lICsgXCJcIjtcblxuICBmb3IgKGkgaW4gc2NoZWR1bGVzKSB7XG4gICAgaWYgKChzY2hlZHVsZSA9IHNjaGVkdWxlc1tpXSkubmFtZSAhPT0gbmFtZSkgeyBlbXB0eSA9IGZhbHNlOyBjb250aW51ZTsgfVxuICAgIGFjdGl2ZSA9IHNjaGVkdWxlLnN0YXRlID4gU1RBUlRJTkcgJiYgc2NoZWR1bGUuc3RhdGUgPCBFTkRJTkc7XG4gICAgc2NoZWR1bGUuc3RhdGUgPSBFTkRFRDtcbiAgICBzY2hlZHVsZS50aW1lci5zdG9wKCk7XG4gICAgc2NoZWR1bGUub24uY2FsbChhY3RpdmUgPyBcImludGVycnVwdFwiIDogXCJjYW5jZWxcIiwgbm9kZSwgbm9kZS5fX2RhdGFfXywgc2NoZWR1bGUuaW5kZXgsIHNjaGVkdWxlLmdyb3VwKTtcbiAgICBkZWxldGUgc2NoZWR1bGVzW2ldO1xuICB9XG5cbiAgaWYgKGVtcHR5KSBkZWxldGUgbm9kZS5fX3RyYW5zaXRpb247XG59XG4iLCJpbXBvcnQgZGVjb21wb3NlLCB7aWRlbnRpdHl9IGZyb20gXCIuL2RlY29tcG9zZS5qc1wiO1xuXG52YXIgY3NzTm9kZSxcbiAgICBjc3NSb290LFxuICAgIGNzc1ZpZXcsXG4gICAgc3ZnTm9kZTtcblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQ3NzKHZhbHVlKSB7XG4gIGlmICh2YWx1ZSA9PT0gXCJub25lXCIpIHJldHVybiBpZGVudGl0eTtcbiAgaWYgKCFjc3NOb2RlKSBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIkRJVlwiKSwgY3NzUm9vdCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwgY3NzVmlldyA9IGRvY3VtZW50LmRlZmF1bHRWaWV3O1xuICBjc3NOb2RlLnN0eWxlLnRyYW5zZm9ybSA9IHZhbHVlO1xuICB2YWx1ZSA9IGNzc1ZpZXcuZ2V0Q29tcHV0ZWRTdHlsZShjc3NSb290LmFwcGVuZENoaWxkKGNzc05vZGUpLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKFwidHJhbnNmb3JtXCIpO1xuICBjc3NSb290LnJlbW92ZUNoaWxkKGNzc05vZGUpO1xuICB2YWx1ZSA9IHZhbHVlLnNsaWNlKDcsIC0xKS5zcGxpdChcIixcIik7XG4gIHJldHVybiBkZWNvbXBvc2UoK3ZhbHVlWzBdLCArdmFsdWVbMV0sICt2YWx1ZVsyXSwgK3ZhbHVlWzNdLCArdmFsdWVbNF0sICt2YWx1ZVs1XSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVN2Zyh2YWx1ZSkge1xuICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIGlkZW50aXR5O1xuICBpZiAoIXN2Z05vZGUpIHN2Z05vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcImdcIik7XG4gIHN2Z05vZGUuc2V0QXR0cmlidXRlKFwidHJhbnNmb3JtXCIsIHZhbHVlKTtcbiAgaWYgKCEodmFsdWUgPSBzdmdOb2RlLnRyYW5zZm9ybS5iYXNlVmFsLmNvbnNvbGlkYXRlKCkpKSByZXR1cm4gaWRlbnRpdHk7XG4gIHZhbHVlID0gdmFsdWUubWF0cml4O1xuICByZXR1cm4gZGVjb21wb3NlKHZhbHVlLmEsIHZhbHVlLmIsIHZhbHVlLmMsIHZhbHVlLmQsIHZhbHVlLmUsIHZhbHVlLmYpO1xufVxuIiwidmFyIGRlZ3JlZXMgPSAxODAgLyBNYXRoLlBJO1xuXG5leHBvcnQgdmFyIGlkZW50aXR5ID0ge1xuICB0cmFuc2xhdGVYOiAwLFxuICB0cmFuc2xhdGVZOiAwLFxuICByb3RhdGU6IDAsXG4gIHNrZXdYOiAwLFxuICBzY2FsZVg6IDEsXG4gIHNjYWxlWTogMVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYiwgYywgZCwgZSwgZikge1xuICB2YXIgc2NhbGVYLCBzY2FsZVksIHNrZXdYO1xuICBpZiAoc2NhbGVYID0gTWF0aC5zcXJ0KGEgKiBhICsgYiAqIGIpKSBhIC89IHNjYWxlWCwgYiAvPSBzY2FsZVg7XG4gIGlmIChza2V3WCA9IGEgKiBjICsgYiAqIGQpIGMgLT0gYSAqIHNrZXdYLCBkIC09IGIgKiBza2V3WDtcbiAgaWYgKHNjYWxlWSA9IE1hdGguc3FydChjICogYyArIGQgKiBkKSkgYyAvPSBzY2FsZVksIGQgLz0gc2NhbGVZLCBza2V3WCAvPSBzY2FsZVk7XG4gIGlmIChhICogZCA8IGIgKiBjKSBhID0gLWEsIGIgPSAtYiwgc2tld1ggPSAtc2tld1gsIHNjYWxlWCA9IC1zY2FsZVg7XG4gIHJldHVybiB7XG4gICAgdHJhbnNsYXRlWDogZSxcbiAgICB0cmFuc2xhdGVZOiBmLFxuICAgIHJvdGF0ZTogTWF0aC5hdGFuMihiLCBhKSAqIGRlZ3JlZXMsXG4gICAgc2tld1g6IE1hdGguYXRhbihza2V3WCkgKiBkZWdyZWVzLFxuICAgIHNjYWxlWDogc2NhbGVYLFxuICAgIHNjYWxlWTogc2NhbGVZXG4gIH07XG59XG4iLCJpbXBvcnQgbnVtYmVyIGZyb20gXCIuLi9udW1iZXIuanNcIjtcbmltcG9ydCB7cGFyc2VDc3MsIHBhcnNlU3ZnfSBmcm9tIFwiLi9wYXJzZS5qc1wiO1xuXG5mdW5jdGlvbiBpbnRlcnBvbGF0ZVRyYW5zZm9ybShwYXJzZSwgcHhDb21tYSwgcHhQYXJlbiwgZGVnUGFyZW4pIHtcblxuICBmdW5jdGlvbiBwb3Aocykge1xuICAgIHJldHVybiBzLmxlbmd0aCA/IHMucG9wKCkgKyBcIiBcIiA6IFwiXCI7XG4gIH1cblxuICBmdW5jdGlvbiB0cmFuc2xhdGUoeGEsIHlhLCB4YiwgeWIsIHMsIHEpIHtcbiAgICBpZiAoeGEgIT09IHhiIHx8IHlhICE9PSB5Yikge1xuICAgICAgdmFyIGkgPSBzLnB1c2goXCJ0cmFuc2xhdGUoXCIsIG51bGwsIHB4Q29tbWEsIG51bGwsIHB4UGFyZW4pO1xuICAgICAgcS5wdXNoKHtpOiBpIC0gNCwgeDogbnVtYmVyKHhhLCB4Yil9LCB7aTogaSAtIDIsIHg6IG51bWJlcih5YSwgeWIpfSk7XG4gICAgfSBlbHNlIGlmICh4YiB8fCB5Yikge1xuICAgICAgcy5wdXNoKFwidHJhbnNsYXRlKFwiICsgeGIgKyBweENvbW1hICsgeWIgKyBweFBhcmVuKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByb3RhdGUoYSwgYiwgcywgcSkge1xuICAgIGlmIChhICE9PSBiKSB7XG4gICAgICBpZiAoYSAtIGIgPiAxODApIGIgKz0gMzYwOyBlbHNlIGlmIChiIC0gYSA+IDE4MCkgYSArPSAzNjA7IC8vIHNob3J0ZXN0IHBhdGhcbiAgICAgIHEucHVzaCh7aTogcy5wdXNoKHBvcChzKSArIFwicm90YXRlKFwiLCBudWxsLCBkZWdQYXJlbikgLSAyLCB4OiBudW1iZXIoYSwgYil9KTtcbiAgICB9IGVsc2UgaWYgKGIpIHtcbiAgICAgIHMucHVzaChwb3AocykgKyBcInJvdGF0ZShcIiArIGIgKyBkZWdQYXJlbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gc2tld1goYSwgYiwgcywgcSkge1xuICAgIGlmIChhICE9PSBiKSB7XG4gICAgICBxLnB1c2goe2k6IHMucHVzaChwb3AocykgKyBcInNrZXdYKFwiLCBudWxsLCBkZWdQYXJlbikgLSAyLCB4OiBudW1iZXIoYSwgYil9KTtcbiAgICB9IGVsc2UgaWYgKGIpIHtcbiAgICAgIHMucHVzaChwb3AocykgKyBcInNrZXdYKFwiICsgYiArIGRlZ1BhcmVuKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzY2FsZSh4YSwgeWEsIHhiLCB5YiwgcywgcSkge1xuICAgIGlmICh4YSAhPT0geGIgfHwgeWEgIT09IHliKSB7XG4gICAgICB2YXIgaSA9IHMucHVzaChwb3AocykgKyBcInNjYWxlKFwiLCBudWxsLCBcIixcIiwgbnVsbCwgXCIpXCIpO1xuICAgICAgcS5wdXNoKHtpOiBpIC0gNCwgeDogbnVtYmVyKHhhLCB4Yil9LCB7aTogaSAtIDIsIHg6IG51bWJlcih5YSwgeWIpfSk7XG4gICAgfSBlbHNlIGlmICh4YiAhPT0gMSB8fCB5YiAhPT0gMSkge1xuICAgICAgcy5wdXNoKHBvcChzKSArIFwic2NhbGUoXCIgKyB4YiArIFwiLFwiICsgeWIgKyBcIilcIik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKGEsIGIpIHtcbiAgICB2YXIgcyA9IFtdLCAvLyBzdHJpbmcgY29uc3RhbnRzIGFuZCBwbGFjZWhvbGRlcnNcbiAgICAgICAgcSA9IFtdOyAvLyBudW1iZXIgaW50ZXJwb2xhdG9yc1xuICAgIGEgPSBwYXJzZShhKSwgYiA9IHBhcnNlKGIpO1xuICAgIHRyYW5zbGF0ZShhLnRyYW5zbGF0ZVgsIGEudHJhbnNsYXRlWSwgYi50cmFuc2xhdGVYLCBiLnRyYW5zbGF0ZVksIHMsIHEpO1xuICAgIHJvdGF0ZShhLnJvdGF0ZSwgYi5yb3RhdGUsIHMsIHEpO1xuICAgIHNrZXdYKGEuc2tld1gsIGIuc2tld1gsIHMsIHEpO1xuICAgIHNjYWxlKGEuc2NhbGVYLCBhLnNjYWxlWSwgYi5zY2FsZVgsIGIuc2NhbGVZLCBzLCBxKTtcbiAgICBhID0gYiA9IG51bGw7IC8vIGdjXG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHZhciBpID0gLTEsIG4gPSBxLmxlbmd0aCwgbztcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBzWyhvID0gcVtpXSkuaV0gPSBvLngodCk7XG4gICAgICByZXR1cm4gcy5qb2luKFwiXCIpO1xuICAgIH07XG4gIH07XG59XG5cbmV4cG9ydCB2YXIgaW50ZXJwb2xhdGVUcmFuc2Zvcm1Dc3MgPSBpbnRlcnBvbGF0ZVRyYW5zZm9ybShwYXJzZUNzcywgXCJweCwgXCIsIFwicHgpXCIsIFwiZGVnKVwiKTtcbmV4cG9ydCB2YXIgaW50ZXJwb2xhdGVUcmFuc2Zvcm1TdmcgPSBpbnRlcnBvbGF0ZVRyYW5zZm9ybShwYXJzZVN2ZywgXCIsIFwiLCBcIilcIiwgXCIpXCIpO1xuIiwiaW1wb3J0IHtnZXQsIHNldH0gZnJvbSBcIi4vc2NoZWR1bGUuanNcIjtcblxuZnVuY3Rpb24gdHdlZW5SZW1vdmUoaWQsIG5hbWUpIHtcbiAgdmFyIHR3ZWVuMCwgdHdlZW4xO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNjaGVkdWxlID0gc2V0KHRoaXMsIGlkKSxcbiAgICAgICAgdHdlZW4gPSBzY2hlZHVsZS50d2VlbjtcblxuICAgIC8vIElmIHRoaXMgbm9kZSBzaGFyZWQgdHdlZW4gd2l0aCB0aGUgcHJldmlvdXMgbm9kZSxcbiAgICAvLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgdHdlZW4gYW5kIHdl4oCZcmUgZG9uZSFcbiAgICAvLyBPdGhlcndpc2UsIGNvcHktb24td3JpdGUuXG4gICAgaWYgKHR3ZWVuICE9PSB0d2VlbjApIHtcbiAgICAgIHR3ZWVuMSA9IHR3ZWVuMCA9IHR3ZWVuO1xuICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSB0d2VlbjEubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGlmICh0d2VlbjFbaV0ubmFtZSA9PT0gbmFtZSkge1xuICAgICAgICAgIHR3ZWVuMSA9IHR3ZWVuMS5zbGljZSgpO1xuICAgICAgICAgIHR3ZWVuMS5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBzY2hlZHVsZS50d2VlbiA9IHR3ZWVuMTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gdHdlZW5GdW5jdGlvbihpZCwgbmFtZSwgdmFsdWUpIHtcbiAgdmFyIHR3ZWVuMCwgdHdlZW4xO1xuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcjtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzY2hlZHVsZSA9IHNldCh0aGlzLCBpZCksXG4gICAgICAgIHR3ZWVuID0gc2NoZWR1bGUudHdlZW47XG5cbiAgICAvLyBJZiB0aGlzIG5vZGUgc2hhcmVkIHR3ZWVuIHdpdGggdGhlIHByZXZpb3VzIG5vZGUsXG4gICAgLy8ganVzdCBhc3NpZ24gdGhlIHVwZGF0ZWQgc2hhcmVkIHR3ZWVuIGFuZCB3ZeKAmXJlIGRvbmUhXG4gICAgLy8gT3RoZXJ3aXNlLCBjb3B5LW9uLXdyaXRlLlxuICAgIGlmICh0d2VlbiAhPT0gdHdlZW4wKSB7XG4gICAgICB0d2VlbjEgPSAodHdlZW4wID0gdHdlZW4pLnNsaWNlKCk7XG4gICAgICBmb3IgKHZhciB0ID0ge25hbWU6IG5hbWUsIHZhbHVlOiB2YWx1ZX0sIGkgPSAwLCBuID0gdHdlZW4xLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgICBpZiAodHdlZW4xW2ldLm5hbWUgPT09IG5hbWUpIHtcbiAgICAgICAgICB0d2VlbjFbaV0gPSB0O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoaSA9PT0gbikgdHdlZW4xLnB1c2godCk7XG4gICAgfVxuXG4gICAgc2NoZWR1bGUudHdlZW4gPSB0d2VlbjE7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHZhciBpZCA9IHRoaXMuX2lkO1xuXG4gIG5hbWUgKz0gXCJcIjtcblxuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICB2YXIgdHdlZW4gPSBnZXQodGhpcy5ub2RlKCksIGlkKS50d2VlbjtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IHR3ZWVuLmxlbmd0aCwgdDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKCh0ID0gdHdlZW5baV0pLm5hbWUgPT09IG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHQudmFsdWU7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHRoaXMuZWFjaCgodmFsdWUgPT0gbnVsbCA/IHR3ZWVuUmVtb3ZlIDogdHdlZW5GdW5jdGlvbikoaWQsIG5hbWUsIHZhbHVlKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0d2VlblZhbHVlKHRyYW5zaXRpb24sIG5hbWUsIHZhbHVlKSB7XG4gIHZhciBpZCA9IHRyYW5zaXRpb24uX2lkO1xuXG4gIHRyYW5zaXRpb24uZWFjaChmdW5jdGlvbigpIHtcbiAgICB2YXIgc2NoZWR1bGUgPSBzZXQodGhpcywgaWQpO1xuICAgIChzY2hlZHVsZS52YWx1ZSB8fCAoc2NoZWR1bGUudmFsdWUgPSB7fSkpW25hbWVdID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICByZXR1cm4gZ2V0KG5vZGUsIGlkKS52YWx1ZVtuYW1lXTtcbiAgfTtcbn1cbiIsImltcG9ydCB7Y29sb3J9IGZyb20gXCJkMy1jb2xvclwiO1xuaW1wb3J0IHtpbnRlcnBvbGF0ZU51bWJlciwgaW50ZXJwb2xhdGVSZ2IsIGludGVycG9sYXRlU3RyaW5nfSBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICB2YXIgYztcbiAgcmV0dXJuICh0eXBlb2YgYiA9PT0gXCJudW1iZXJcIiA/IGludGVycG9sYXRlTnVtYmVyXG4gICAgICA6IGIgaW5zdGFuY2VvZiBjb2xvciA/IGludGVycG9sYXRlUmdiXG4gICAgICA6IChjID0gY29sb3IoYikpID8gKGIgPSBjLCBpbnRlcnBvbGF0ZVJnYilcbiAgICAgIDogaW50ZXJwb2xhdGVTdHJpbmcpKGEsIGIpO1xufVxuIiwiaW1wb3J0IHtpbnRlcnBvbGF0ZVRyYW5zZm9ybVN2ZyBhcyBpbnRlcnBvbGF0ZVRyYW5zZm9ybX0gZnJvbSBcImQzLWludGVycG9sYXRlXCI7XG5pbXBvcnQge25hbWVzcGFjZX0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHt0d2VlblZhbHVlfSBmcm9tIFwiLi90d2Vlbi5qc1wiO1xuaW1wb3J0IGludGVycG9sYXRlIGZyb20gXCIuL2ludGVycG9sYXRlLmpzXCI7XG5cbmZ1bmN0aW9uIGF0dHJSZW1vdmUobmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJSZW1vdmVOUyhmdWxsbmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyQ29uc3RhbnQobmFtZSwgaW50ZXJwb2xhdGUsIHZhbHVlMSkge1xuICB2YXIgc3RyaW5nMDAsXG4gICAgICBzdHJpbmcxID0gdmFsdWUxICsgXCJcIixcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzdHJpbmcwID0gdGhpcy5nZXRBdHRyaWJ1dGUobmFtZSk7XG4gICAgcmV0dXJuIHN0cmluZzAgPT09IHN0cmluZzEgPyBudWxsXG4gICAgICAgIDogc3RyaW5nMCA9PT0gc3RyaW5nMDAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZShzdHJpbmcwMCA9IHN0cmluZzAsIHZhbHVlMSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJDb25zdGFudE5TKGZ1bGxuYW1lLCBpbnRlcnBvbGF0ZSwgdmFsdWUxKSB7XG4gIHZhciBzdHJpbmcwMCxcbiAgICAgIHN0cmluZzEgPSB2YWx1ZTEgKyBcIlwiLFxuICAgICAgaW50ZXJwb2xhdGUwO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHN0cmluZzAgPSB0aGlzLmdldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCk7XG4gICAgcmV0dXJuIHN0cmluZzAgPT09IHN0cmluZzEgPyBudWxsXG4gICAgICAgIDogc3RyaW5nMCA9PT0gc3RyaW5nMDAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZShzdHJpbmcwMCA9IHN0cmluZzAsIHZhbHVlMSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJGdW5jdGlvbihuYW1lLCBpbnRlcnBvbGF0ZSwgdmFsdWUpIHtcbiAgdmFyIHN0cmluZzAwLFxuICAgICAgc3RyaW5nMTAsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RyaW5nMCwgdmFsdWUxID0gdmFsdWUodGhpcyksIHN0cmluZzE7XG4gICAgaWYgKHZhbHVlMSA9PSBudWxsKSByZXR1cm4gdm9pZCB0aGlzLnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtcbiAgICBzdHJpbmcwID0gdGhpcy5nZXRBdHRyaWJ1dGUobmFtZSk7XG4gICAgc3RyaW5nMSA9IHZhbHVlMSArIFwiXCI7XG4gICAgcmV0dXJuIHN0cmluZzAgPT09IHN0cmluZzEgPyBudWxsXG4gICAgICAgIDogc3RyaW5nMCA9PT0gc3RyaW5nMDAgJiYgc3RyaW5nMSA9PT0gc3RyaW5nMTAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiAoc3RyaW5nMTAgPSBzdHJpbmcxLCBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZShzdHJpbmcwMCA9IHN0cmluZzAsIHZhbHVlMSkpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyRnVuY3Rpb25OUyhmdWxsbmFtZSwgaW50ZXJwb2xhdGUsIHZhbHVlKSB7XG4gIHZhciBzdHJpbmcwMCxcbiAgICAgIHN0cmluZzEwLFxuICAgICAgaW50ZXJwb2xhdGUwO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHN0cmluZzAsIHZhbHVlMSA9IHZhbHVlKHRoaXMpLCBzdHJpbmcxO1xuICAgIGlmICh2YWx1ZTEgPT0gbnVsbCkgcmV0dXJuIHZvaWQgdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICAgIHN0cmluZzAgPSB0aGlzLmdldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCk7XG4gICAgc3RyaW5nMSA9IHZhbHVlMSArIFwiXCI7XG4gICAgcmV0dXJuIHN0cmluZzAgPT09IHN0cmluZzEgPyBudWxsXG4gICAgICAgIDogc3RyaW5nMCA9PT0gc3RyaW5nMDAgJiYgc3RyaW5nMSA9PT0gc3RyaW5nMTAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiAoc3RyaW5nMTAgPSBzdHJpbmcxLCBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZShzdHJpbmcwMCA9IHN0cmluZzAsIHZhbHVlMSkpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICB2YXIgZnVsbG5hbWUgPSBuYW1lc3BhY2UobmFtZSksIGkgPSBmdWxsbmFtZSA9PT0gXCJ0cmFuc2Zvcm1cIiA/IGludGVycG9sYXRlVHJhbnNmb3JtIDogaW50ZXJwb2xhdGU7XG4gIHJldHVybiB0aGlzLmF0dHJUd2VlbihuYW1lLCB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgPyAoZnVsbG5hbWUubG9jYWwgPyBhdHRyRnVuY3Rpb25OUyA6IGF0dHJGdW5jdGlvbikoZnVsbG5hbWUsIGksIHR3ZWVuVmFsdWUodGhpcywgXCJhdHRyLlwiICsgbmFtZSwgdmFsdWUpKVxuICAgICAgOiB2YWx1ZSA9PSBudWxsID8gKGZ1bGxuYW1lLmxvY2FsID8gYXR0clJlbW92ZU5TIDogYXR0clJlbW92ZSkoZnVsbG5hbWUpXG4gICAgICA6IChmdWxsbmFtZS5sb2NhbCA/IGF0dHJDb25zdGFudE5TIDogYXR0ckNvbnN0YW50KShmdWxsbmFtZSwgaSwgdmFsdWUpKTtcbn1cbiIsImltcG9ydCB7bmFtZXNwYWNlfSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5cbmZ1bmN0aW9uIGF0dHJJbnRlcnBvbGF0ZShuYW1lLCBpKSB7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUobmFtZSwgaS5jYWxsKHRoaXMsIHQpKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckludGVycG9sYXRlTlMoZnVsbG5hbWUsIGkpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCwgaS5jYWxsKHRoaXMsIHQpKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0clR3ZWVuTlMoZnVsbG5hbWUsIHZhbHVlKSB7XG4gIHZhciB0MCwgaTA7XG4gIGZ1bmN0aW9uIHR3ZWVuKCkge1xuICAgIHZhciBpID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAoaSAhPT0gaTApIHQwID0gKGkwID0gaSkgJiYgYXR0ckludGVycG9sYXRlTlMoZnVsbG5hbWUsIGkpO1xuICAgIHJldHVybiB0MDtcbiAgfVxuICB0d2Vlbi5fdmFsdWUgPSB2YWx1ZTtcbiAgcmV0dXJuIHR3ZWVuO1xufVxuXG5mdW5jdGlvbiBhdHRyVHdlZW4obmFtZSwgdmFsdWUpIHtcbiAgdmFyIHQwLCBpMDtcbiAgZnVuY3Rpb24gdHdlZW4oKSB7XG4gICAgdmFyIGkgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmIChpICE9PSBpMCkgdDAgPSAoaTAgPSBpKSAmJiBhdHRySW50ZXJwb2xhdGUobmFtZSwgaSk7XG4gICAgcmV0dXJuIHQwO1xuICB9XG4gIHR3ZWVuLl92YWx1ZSA9IHZhbHVlO1xuICByZXR1cm4gdHdlZW47XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHZhciBrZXkgPSBcImF0dHIuXCIgKyBuYW1lO1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHJldHVybiAoa2V5ID0gdGhpcy50d2VlbihrZXkpKSAmJiBrZXkuX3ZhbHVlO1xuICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIHRoaXMudHdlZW4oa2V5LCBudWxsKTtcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgRXJyb3I7XG4gIHZhciBmdWxsbmFtZSA9IG5hbWVzcGFjZShuYW1lKTtcbiAgcmV0dXJuIHRoaXMudHdlZW4oa2V5LCAoZnVsbG5hbWUubG9jYWwgPyBhdHRyVHdlZW5OUyA6IGF0dHJUd2VlbikoZnVsbG5hbWUsIHZhbHVlKSk7XG59XG4iLCJpbXBvcnQge2dldCwgaW5pdH0gZnJvbSBcIi4vc2NoZWR1bGUuanNcIjtcblxuZnVuY3Rpb24gZGVsYXlGdW5jdGlvbihpZCwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIGluaXQodGhpcywgaWQpLmRlbGF5ID0gK3ZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGRlbGF5Q29uc3RhbnQoaWQsIHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSA9ICt2YWx1ZSwgZnVuY3Rpb24oKSB7XG4gICAgaW5pdCh0aGlzLCBpZCkuZGVsYXkgPSB2YWx1ZTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgdmFyIGlkID0gdGhpcy5faWQ7XG5cbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgID8gdGhpcy5lYWNoKCh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gZGVsYXlGdW5jdGlvblxuICAgICAgICAgIDogZGVsYXlDb25zdGFudCkoaWQsIHZhbHVlKSlcbiAgICAgIDogZ2V0KHRoaXMubm9kZSgpLCBpZCkuZGVsYXk7XG59XG4iLCJpbXBvcnQge2dldCwgc2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuXG5mdW5jdGlvbiBkdXJhdGlvbkZ1bmN0aW9uKGlkLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgc2V0KHRoaXMsIGlkKS5kdXJhdGlvbiA9ICt2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBkdXJhdGlvbkNvbnN0YW50KGlkLCB2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPSArdmFsdWUsIGZ1bmN0aW9uKCkge1xuICAgIHNldCh0aGlzLCBpZCkuZHVyYXRpb24gPSB2YWx1ZTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgdmFyIGlkID0gdGhpcy5faWQ7XG5cbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgID8gdGhpcy5lYWNoKCh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gZHVyYXRpb25GdW5jdGlvblxuICAgICAgICAgIDogZHVyYXRpb25Db25zdGFudCkoaWQsIHZhbHVlKSlcbiAgICAgIDogZ2V0KHRoaXMubm9kZSgpLCBpZCkuZHVyYXRpb247XG59XG4iLCJpbXBvcnQge2dldCwgc2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuXG5mdW5jdGlvbiBlYXNlQ29uc3RhbnQoaWQsIHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgc2V0KHRoaXMsIGlkKS5lYXNlID0gdmFsdWU7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHZhciBpZCA9IHRoaXMuX2lkO1xuXG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoXG4gICAgICA/IHRoaXMuZWFjaChlYXNlQ29uc3RhbnQoaWQsIHZhbHVlKSlcbiAgICAgIDogZ2V0KHRoaXMubm9kZSgpLCBpZCkuZWFzZTtcbn1cbiIsImltcG9ydCB7Z2V0LCBzZXQsIGluaXR9IGZyb20gXCIuL3NjaGVkdWxlLmpzXCI7XG5cbmZ1bmN0aW9uIHN0YXJ0KG5hbWUpIHtcbiAgcmV0dXJuIChuYW1lICsgXCJcIikudHJpbSgpLnNwbGl0KC9efFxccysvKS5ldmVyeShmdW5jdGlvbih0KSB7XG4gICAgdmFyIGkgPSB0LmluZGV4T2YoXCIuXCIpO1xuICAgIGlmIChpID49IDApIHQgPSB0LnNsaWNlKDAsIGkpO1xuICAgIHJldHVybiAhdCB8fCB0ID09PSBcInN0YXJ0XCI7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBvbkZ1bmN0aW9uKGlkLCBuYW1lLCBsaXN0ZW5lcikge1xuICB2YXIgb24wLCBvbjEsIHNpdCA9IHN0YXJ0KG5hbWUpID8gaW5pdCA6IHNldDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzY2hlZHVsZSA9IHNpdCh0aGlzLCBpZCksXG4gICAgICAgIG9uID0gc2NoZWR1bGUub247XG5cbiAgICAvLyBJZiB0aGlzIG5vZGUgc2hhcmVkIGEgZGlzcGF0Y2ggd2l0aCB0aGUgcHJldmlvdXMgbm9kZSxcbiAgICAvLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgZGlzcGF0Y2ggYW5kIHdl4oCZcmUgZG9uZSFcbiAgICAvLyBPdGhlcndpc2UsIGNvcHktb24td3JpdGUuXG4gICAgaWYgKG9uICE9PSBvbjApIChvbjEgPSAob24wID0gb24pLmNvcHkoKSkub24obmFtZSwgbGlzdGVuZXIpO1xuXG4gICAgc2NoZWR1bGUub24gPSBvbjE7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIGxpc3RlbmVyKSB7XG4gIHZhciBpZCA9IHRoaXMuX2lkO1xuXG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoIDwgMlxuICAgICAgPyBnZXQodGhpcy5ub2RlKCksIGlkKS5vbi5vbihuYW1lKVxuICAgICAgOiB0aGlzLmVhY2gob25GdW5jdGlvbihpZCwgbmFtZSwgbGlzdGVuZXIpKTtcbn1cbiIsImZ1bmN0aW9uIHJlbW92ZUZ1bmN0aW9uKGlkKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgcGFyZW50ID0gdGhpcy5wYXJlbnROb2RlO1xuICAgIGZvciAodmFyIGkgaW4gdGhpcy5fX3RyYW5zaXRpb24pIGlmICgraSAhPT0gaWQpIHJldHVybjtcbiAgICBpZiAocGFyZW50KSBwYXJlbnQucmVtb3ZlQ2hpbGQodGhpcyk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5vbihcImVuZC5yZW1vdmVcIiwgcmVtb3ZlRnVuY3Rpb24odGhpcy5faWQpKTtcbn1cbiIsImltcG9ydCB7c2VsZWN0aW9ufSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5cbnZhciBTZWxlY3Rpb24gPSBzZWxlY3Rpb24ucHJvdG90eXBlLmNvbnN0cnVjdG9yO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24odGhpcy5fZ3JvdXBzLCB0aGlzLl9wYXJlbnRzKTtcbn1cbiIsImltcG9ydCB7aW50ZXJwb2xhdGVUcmFuc2Zvcm1Dc3MgYXMgaW50ZXJwb2xhdGVUcmFuc2Zvcm19IGZyb20gXCJkMy1pbnRlcnBvbGF0ZVwiO1xuaW1wb3J0IHtzdHlsZX0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHtzZXR9IGZyb20gXCIuL3NjaGVkdWxlLmpzXCI7XG5pbXBvcnQge3R3ZWVuVmFsdWV9IGZyb20gXCIuL3R3ZWVuLmpzXCI7XG5pbXBvcnQgaW50ZXJwb2xhdGUgZnJvbSBcIi4vaW50ZXJwb2xhdGUuanNcIjtcblxuZnVuY3Rpb24gc3R5bGVOdWxsKG5hbWUsIGludGVycG9sYXRlKSB7XG4gIHZhciBzdHJpbmcwMCxcbiAgICAgIHN0cmluZzEwLFxuICAgICAgaW50ZXJwb2xhdGUwO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHN0cmluZzAgPSBzdHlsZSh0aGlzLCBuYW1lKSxcbiAgICAgICAgc3RyaW5nMSA9ICh0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KG5hbWUpLCBzdHlsZSh0aGlzLCBuYW1lKSk7XG4gICAgcmV0dXJuIHN0cmluZzAgPT09IHN0cmluZzEgPyBudWxsXG4gICAgICAgIDogc3RyaW5nMCA9PT0gc3RyaW5nMDAgJiYgc3RyaW5nMSA9PT0gc3RyaW5nMTAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZShzdHJpbmcwMCA9IHN0cmluZzAsIHN0cmluZzEwID0gc3RyaW5nMSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0eWxlUmVtb3ZlKG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0eWxlQ29uc3RhbnQobmFtZSwgaW50ZXJwb2xhdGUsIHZhbHVlMSkge1xuICB2YXIgc3RyaW5nMDAsXG4gICAgICBzdHJpbmcxID0gdmFsdWUxICsgXCJcIixcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzdHJpbmcwID0gc3R5bGUodGhpcywgbmFtZSk7XG4gICAgcmV0dXJuIHN0cmluZzAgPT09IHN0cmluZzEgPyBudWxsXG4gICAgICAgIDogc3RyaW5nMCA9PT0gc3RyaW5nMDAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZShzdHJpbmcwMCA9IHN0cmluZzAsIHZhbHVlMSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0eWxlRnVuY3Rpb24obmFtZSwgaW50ZXJwb2xhdGUsIHZhbHVlKSB7XG4gIHZhciBzdHJpbmcwMCxcbiAgICAgIHN0cmluZzEwLFxuICAgICAgaW50ZXJwb2xhdGUwO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHN0cmluZzAgPSBzdHlsZSh0aGlzLCBuYW1lKSxcbiAgICAgICAgdmFsdWUxID0gdmFsdWUodGhpcyksXG4gICAgICAgIHN0cmluZzEgPSB2YWx1ZTEgKyBcIlwiO1xuICAgIGlmICh2YWx1ZTEgPT0gbnVsbCkgc3RyaW5nMSA9IHZhbHVlMSA9ICh0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KG5hbWUpLCBzdHlsZSh0aGlzLCBuYW1lKSk7XG4gICAgcmV0dXJuIHN0cmluZzAgPT09IHN0cmluZzEgPyBudWxsXG4gICAgICAgIDogc3RyaW5nMCA9PT0gc3RyaW5nMDAgJiYgc3RyaW5nMSA9PT0gc3RyaW5nMTAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiAoc3RyaW5nMTAgPSBzdHJpbmcxLCBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZShzdHJpbmcwMCA9IHN0cmluZzAsIHZhbHVlMSkpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZU1heWJlUmVtb3ZlKGlkLCBuYW1lKSB7XG4gIHZhciBvbjAsIG9uMSwgbGlzdGVuZXIwLCBrZXkgPSBcInN0eWxlLlwiICsgbmFtZSwgZXZlbnQgPSBcImVuZC5cIiArIGtleSwgcmVtb3ZlO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNjaGVkdWxlID0gc2V0KHRoaXMsIGlkKSxcbiAgICAgICAgb24gPSBzY2hlZHVsZS5vbixcbiAgICAgICAgbGlzdGVuZXIgPSBzY2hlZHVsZS52YWx1ZVtrZXldID09IG51bGwgPyByZW1vdmUgfHwgKHJlbW92ZSA9IHN0eWxlUmVtb3ZlKG5hbWUpKSA6IHVuZGVmaW5lZDtcblxuICAgIC8vIElmIHRoaXMgbm9kZSBzaGFyZWQgYSBkaXNwYXRjaCB3aXRoIHRoZSBwcmV2aW91cyBub2RlLFxuICAgIC8vIGp1c3QgYXNzaWduIHRoZSB1cGRhdGVkIHNoYXJlZCBkaXNwYXRjaCBhbmQgd2XigJlyZSBkb25lIVxuICAgIC8vIE90aGVyd2lzZSwgY29weS1vbi13cml0ZS5cbiAgICBpZiAob24gIT09IG9uMCB8fCBsaXN0ZW5lcjAgIT09IGxpc3RlbmVyKSAob24xID0gKG9uMCA9IG9uKS5jb3B5KCkpLm9uKGV2ZW50LCBsaXN0ZW5lcjAgPSBsaXN0ZW5lcik7XG5cbiAgICBzY2hlZHVsZS5vbiA9IG9uMTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gIHZhciBpID0gKG5hbWUgKz0gXCJcIikgPT09IFwidHJhbnNmb3JtXCIgPyBpbnRlcnBvbGF0ZVRyYW5zZm9ybSA6IGludGVycG9sYXRlO1xuICByZXR1cm4gdmFsdWUgPT0gbnVsbCA/IHRoaXNcbiAgICAgIC5zdHlsZVR3ZWVuKG5hbWUsIHN0eWxlTnVsbChuYW1lLCBpKSlcbiAgICAgIC5vbihcImVuZC5zdHlsZS5cIiArIG5hbWUsIHN0eWxlUmVtb3ZlKG5hbWUpKVxuICAgIDogdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyB0aGlzXG4gICAgICAuc3R5bGVUd2VlbihuYW1lLCBzdHlsZUZ1bmN0aW9uKG5hbWUsIGksIHR3ZWVuVmFsdWUodGhpcywgXCJzdHlsZS5cIiArIG5hbWUsIHZhbHVlKSkpXG4gICAgICAuZWFjaChzdHlsZU1heWJlUmVtb3ZlKHRoaXMuX2lkLCBuYW1lKSlcbiAgICA6IHRoaXNcbiAgICAgIC5zdHlsZVR3ZWVuKG5hbWUsIHN0eWxlQ29uc3RhbnQobmFtZSwgaSwgdmFsdWUpLCBwcmlvcml0eSlcbiAgICAgIC5vbihcImVuZC5zdHlsZS5cIiArIG5hbWUsIG51bGwpO1xufVxuIiwiZnVuY3Rpb24gc3R5bGVJbnRlcnBvbGF0ZShuYW1lLCBpLCBwcmlvcml0eSkge1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHRoaXMuc3R5bGUuc2V0UHJvcGVydHkobmFtZSwgaS5jYWxsKHRoaXMsIHQpLCBwcmlvcml0eSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0eWxlVHdlZW4obmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gIHZhciB0LCBpMDtcbiAgZnVuY3Rpb24gdHdlZW4oKSB7XG4gICAgdmFyIGkgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmIChpICE9PSBpMCkgdCA9IChpMCA9IGkpICYmIHN0eWxlSW50ZXJwb2xhdGUobmFtZSwgaSwgcHJpb3JpdHkpO1xuICAgIHJldHVybiB0O1xuICB9XG4gIHR3ZWVuLl92YWx1ZSA9IHZhbHVlO1xuICByZXR1cm4gdHdlZW47XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICB2YXIga2V5ID0gXCJzdHlsZS5cIiArIChuYW1lICs9IFwiXCIpO1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHJldHVybiAoa2V5ID0gdGhpcy50d2VlbihrZXkpKSAmJiBrZXkuX3ZhbHVlO1xuICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIHRoaXMudHdlZW4oa2V5LCBudWxsKTtcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgRXJyb3I7XG4gIHJldHVybiB0aGlzLnR3ZWVuKGtleSwgc3R5bGVUd2VlbihuYW1lLCB2YWx1ZSwgcHJpb3JpdHkgPT0gbnVsbCA/IFwiXCIgOiBwcmlvcml0eSkpO1xufVxuIiwiZnVuY3Rpb24gdGV4dEludGVycG9sYXRlKGkpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB0aGlzLnRleHRDb250ZW50ID0gaS5jYWxsKHRoaXMsIHQpO1xuICB9O1xufVxuXG5mdW5jdGlvbiB0ZXh0VHdlZW4odmFsdWUpIHtcbiAgdmFyIHQwLCBpMDtcbiAgZnVuY3Rpb24gdHdlZW4oKSB7XG4gICAgdmFyIGkgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmIChpICE9PSBpMCkgdDAgPSAoaTAgPSBpKSAmJiB0ZXh0SW50ZXJwb2xhdGUoaSk7XG4gICAgcmV0dXJuIHQwO1xuICB9XG4gIHR3ZWVuLl92YWx1ZSA9IHZhbHVlO1xuICByZXR1cm4gdHdlZW47XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHZhciBrZXkgPSBcInRleHRcIjtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAxKSByZXR1cm4gKGtleSA9IHRoaXMudHdlZW4oa2V5KSkgJiYga2V5Ll92YWx1ZTtcbiAgaWYgKHZhbHVlID09IG51bGwpIHJldHVybiB0aGlzLnR3ZWVuKGtleSwgbnVsbCk7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yO1xuICByZXR1cm4gdGhpcy50d2VlbihrZXksIHRleHRUd2Vlbih2YWx1ZSkpO1xufVxuIiwiaW1wb3J0IHtzZWxlY3Rpb259IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCB0cmFuc2l0aW9uX2F0dHIgZnJvbSBcIi4vYXR0ci5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fYXR0clR3ZWVuIGZyb20gXCIuL2F0dHJUd2Vlbi5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fZGVsYXkgZnJvbSBcIi4vZGVsYXkuanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX2R1cmF0aW9uIGZyb20gXCIuL2R1cmF0aW9uLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9lYXNlIGZyb20gXCIuL2Vhc2UuanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX2ZpbHRlciBmcm9tIFwiLi9maWx0ZXIuanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX21lcmdlIGZyb20gXCIuL21lcmdlLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9vbiBmcm9tIFwiLi9vbi5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fcmVtb3ZlIGZyb20gXCIuL3JlbW92ZS5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fc2VsZWN0IGZyb20gXCIuL3NlbGVjdC5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fc2VsZWN0QWxsIGZyb20gXCIuL3NlbGVjdEFsbC5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fc2VsZWN0aW9uIGZyb20gXCIuL3NlbGVjdGlvbi5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fc3R5bGUgZnJvbSBcIi4vc3R5bGUuanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3N0eWxlVHdlZW4gZnJvbSBcIi4vc3R5bGVUd2Vlbi5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fdGV4dCBmcm9tIFwiLi90ZXh0LmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl90ZXh0VHdlZW4gZnJvbSBcIi4vdGV4dFR3ZWVuLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl90cmFuc2l0aW9uIGZyb20gXCIuL3RyYW5zaXRpb24uanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3R3ZWVuIGZyb20gXCIuL3R3ZWVuLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9lbmQgZnJvbSBcIi4vZW5kLmpzXCI7XG5cbnZhciBpZCA9IDA7XG5cbmV4cG9ydCBmdW5jdGlvbiBUcmFuc2l0aW9uKGdyb3VwcywgcGFyZW50cywgbmFtZSwgaWQpIHtcbiAgdGhpcy5fZ3JvdXBzID0gZ3JvdXBzO1xuICB0aGlzLl9wYXJlbnRzID0gcGFyZW50cztcbiAgdGhpcy5fbmFtZSA9IG5hbWU7XG4gIHRoaXMuX2lkID0gaWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRyYW5zaXRpb24obmFtZSkge1xuICByZXR1cm4gc2VsZWN0aW9uKCkudHJhbnNpdGlvbihuYW1lKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG5ld0lkKCkge1xuICByZXR1cm4gKytpZDtcbn1cblxudmFyIHNlbGVjdGlvbl9wcm90b3R5cGUgPSBzZWxlY3Rpb24ucHJvdG90eXBlO1xuXG5UcmFuc2l0aW9uLnByb3RvdHlwZSA9IHRyYW5zaXRpb24ucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogVHJhbnNpdGlvbixcbiAgc2VsZWN0OiB0cmFuc2l0aW9uX3NlbGVjdCxcbiAgc2VsZWN0QWxsOiB0cmFuc2l0aW9uX3NlbGVjdEFsbCxcbiAgZmlsdGVyOiB0cmFuc2l0aW9uX2ZpbHRlcixcbiAgbWVyZ2U6IHRyYW5zaXRpb25fbWVyZ2UsXG4gIHNlbGVjdGlvbjogdHJhbnNpdGlvbl9zZWxlY3Rpb24sXG4gIHRyYW5zaXRpb246IHRyYW5zaXRpb25fdHJhbnNpdGlvbixcbiAgY2FsbDogc2VsZWN0aW9uX3Byb3RvdHlwZS5jYWxsLFxuICBub2Rlczogc2VsZWN0aW9uX3Byb3RvdHlwZS5ub2RlcyxcbiAgbm9kZTogc2VsZWN0aW9uX3Byb3RvdHlwZS5ub2RlLFxuICBzaXplOiBzZWxlY3Rpb25fcHJvdG90eXBlLnNpemUsXG4gIGVtcHR5OiBzZWxlY3Rpb25fcHJvdG90eXBlLmVtcHR5LFxuICBlYWNoOiBzZWxlY3Rpb25fcHJvdG90eXBlLmVhY2gsXG4gIG9uOiB0cmFuc2l0aW9uX29uLFxuICBhdHRyOiB0cmFuc2l0aW9uX2F0dHIsXG4gIGF0dHJUd2VlbjogdHJhbnNpdGlvbl9hdHRyVHdlZW4sXG4gIHN0eWxlOiB0cmFuc2l0aW9uX3N0eWxlLFxuICBzdHlsZVR3ZWVuOiB0cmFuc2l0aW9uX3N0eWxlVHdlZW4sXG4gIHRleHQ6IHRyYW5zaXRpb25fdGV4dCxcbiAgdGV4dFR3ZWVuOiB0cmFuc2l0aW9uX3RleHRUd2VlbixcbiAgcmVtb3ZlOiB0cmFuc2l0aW9uX3JlbW92ZSxcbiAgdHdlZW46IHRyYW5zaXRpb25fdHdlZW4sXG4gIGRlbGF5OiB0cmFuc2l0aW9uX2RlbGF5LFxuICBkdXJhdGlvbjogdHJhbnNpdGlvbl9kdXJhdGlvbixcbiAgZWFzZTogdHJhbnNpdGlvbl9lYXNlLFxuICBlbmQ6IHRyYW5zaXRpb25fZW5kXG59O1xuIiwiZXhwb3J0IGZ1bmN0aW9uIGN1YmljSW4odCkge1xuICByZXR1cm4gdCAqIHQgKiB0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3ViaWNPdXQodCkge1xuICByZXR1cm4gLS10ICogdCAqIHQgKyAxO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3ViaWNJbk91dCh0KSB7XG4gIHJldHVybiAoKHQgKj0gMikgPD0gMSA/IHQgKiB0ICogdCA6ICh0IC09IDIpICogdCAqIHQgKyAyKSAvIDI7XG59XG4iLCJpbXBvcnQge3NlbGVjdG9yfSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQge1RyYW5zaXRpb259IGZyb20gXCIuL2luZGV4LmpzXCI7XG5pbXBvcnQgc2NoZWR1bGUsIHtnZXR9IGZyb20gXCIuL3NjaGVkdWxlLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdCkge1xuICB2YXIgbmFtZSA9IHRoaXMuX25hbWUsXG4gICAgICBpZCA9IHRoaXMuX2lkO1xuXG4gIGlmICh0eXBlb2Ygc2VsZWN0ICE9PSBcImZ1bmN0aW9uXCIpIHNlbGVjdCA9IHNlbGVjdG9yKHNlbGVjdCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc3ViZ3JvdXBzID0gbmV3IEFycmF5KG0pLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBzdWJncm91cCA9IHN1Ymdyb3Vwc1tqXSA9IG5ldyBBcnJheShuKSwgbm9kZSwgc3Vibm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiAoc3Vibm9kZSA9IHNlbGVjdC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKSkpIHtcbiAgICAgICAgaWYgKFwiX19kYXRhX19cIiBpbiBub2RlKSBzdWJub2RlLl9fZGF0YV9fID0gbm9kZS5fX2RhdGFfXztcbiAgICAgICAgc3ViZ3JvdXBbaV0gPSBzdWJub2RlO1xuICAgICAgICBzY2hlZHVsZShzdWJncm91cFtpXSwgbmFtZSwgaWQsIGksIHN1Ymdyb3VwLCBnZXQobm9kZSwgaWQpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFRyYW5zaXRpb24oc3ViZ3JvdXBzLCB0aGlzLl9wYXJlbnRzLCBuYW1lLCBpZCk7XG59XG4iLCJpbXBvcnQge3NlbGVjdG9yQWxsfSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQge1RyYW5zaXRpb259IGZyb20gXCIuL2luZGV4LmpzXCI7XG5pbXBvcnQgc2NoZWR1bGUsIHtnZXR9IGZyb20gXCIuL3NjaGVkdWxlLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdCkge1xuICB2YXIgbmFtZSA9IHRoaXMuX25hbWUsXG4gICAgICBpZCA9IHRoaXMuX2lkO1xuXG4gIGlmICh0eXBlb2Ygc2VsZWN0ICE9PSBcImZ1bmN0aW9uXCIpIHNlbGVjdCA9IHNlbGVjdG9yQWxsKHNlbGVjdCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc3ViZ3JvdXBzID0gW10sIHBhcmVudHMgPSBbXSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgZm9yICh2YXIgY2hpbGRyZW4gPSBzZWxlY3QuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBncm91cCksIGNoaWxkLCBpbmhlcml0ID0gZ2V0KG5vZGUsIGlkKSwgayA9IDAsIGwgPSBjaGlsZHJlbi5sZW5ndGg7IGsgPCBsOyArK2spIHtcbiAgICAgICAgICBpZiAoY2hpbGQgPSBjaGlsZHJlbltrXSkge1xuICAgICAgICAgICAgc2NoZWR1bGUoY2hpbGQsIG5hbWUsIGlkLCBrLCBjaGlsZHJlbiwgaW5oZXJpdCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHN1Ymdyb3Vwcy5wdXNoKGNoaWxkcmVuKTtcbiAgICAgICAgcGFyZW50cy5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihzdWJncm91cHMsIHBhcmVudHMsIG5hbWUsIGlkKTtcbn1cbiIsImltcG9ydCB7bWF0Y2hlcn0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHtUcmFuc2l0aW9ufSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihtYXRjaCkge1xuICBpZiAodHlwZW9mIG1hdGNoICE9PSBcImZ1bmN0aW9uXCIpIG1hdGNoID0gbWF0Y2hlcihtYXRjaCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc3ViZ3JvdXBzID0gbmV3IEFycmF5KG0pLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBzdWJncm91cCA9IHN1Ymdyb3Vwc1tqXSA9IFtdLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKChub2RlID0gZ3JvdXBbaV0pICYmIG1hdGNoLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApKSB7XG4gICAgICAgIHN1Ymdyb3VwLnB1c2gobm9kZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBUcmFuc2l0aW9uKHN1Ymdyb3VwcywgdGhpcy5fcGFyZW50cywgdGhpcy5fbmFtZSwgdGhpcy5faWQpO1xufVxuIiwiaW1wb3J0IHtUcmFuc2l0aW9ufSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih0cmFuc2l0aW9uKSB7XG4gIGlmICh0cmFuc2l0aW9uLl9pZCAhPT0gdGhpcy5faWQpIHRocm93IG5ldyBFcnJvcjtcblxuICBmb3IgKHZhciBncm91cHMwID0gdGhpcy5fZ3JvdXBzLCBncm91cHMxID0gdHJhbnNpdGlvbi5fZ3JvdXBzLCBtMCA9IGdyb3VwczAubGVuZ3RoLCBtMSA9IGdyb3VwczEubGVuZ3RoLCBtID0gTWF0aC5taW4obTAsIG0xKSwgbWVyZ2VzID0gbmV3IEFycmF5KG0wKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cDAgPSBncm91cHMwW2pdLCBncm91cDEgPSBncm91cHMxW2pdLCBuID0gZ3JvdXAwLmxlbmd0aCwgbWVyZ2UgPSBtZXJnZXNbal0gPSBuZXcgQXJyYXkobiksIG5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAobm9kZSA9IGdyb3VwMFtpXSB8fCBncm91cDFbaV0pIHtcbiAgICAgICAgbWVyZ2VbaV0gPSBub2RlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZvciAoOyBqIDwgbTA7ICsraikge1xuICAgIG1lcmdlc1tqXSA9IGdyb3VwczBbal07XG4gIH1cblxuICByZXR1cm4gbmV3IFRyYW5zaXRpb24obWVyZ2VzLCB0aGlzLl9wYXJlbnRzLCB0aGlzLl9uYW1lLCB0aGlzLl9pZCk7XG59XG4iLCJpbXBvcnQge1RyYW5zaXRpb24sIG5ld0lkfSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuaW1wb3J0IHNjaGVkdWxlLCB7Z2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIG5hbWUgPSB0aGlzLl9uYW1lLFxuICAgICAgaWQwID0gdGhpcy5faWQsXG4gICAgICBpZDEgPSBuZXdJZCgpO1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIG5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgIHZhciBpbmhlcml0ID0gZ2V0KG5vZGUsIGlkMCk7XG4gICAgICAgIHNjaGVkdWxlKG5vZGUsIG5hbWUsIGlkMSwgaSwgZ3JvdXAsIHtcbiAgICAgICAgICB0aW1lOiBpbmhlcml0LnRpbWUgKyBpbmhlcml0LmRlbGF5ICsgaW5oZXJpdC5kdXJhdGlvbixcbiAgICAgICAgICBkZWxheTogMCxcbiAgICAgICAgICBkdXJhdGlvbjogaW5oZXJpdC5kdXJhdGlvbixcbiAgICAgICAgICBlYXNlOiBpbmhlcml0LmVhc2VcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBUcmFuc2l0aW9uKGdyb3VwcywgdGhpcy5fcGFyZW50cywgbmFtZSwgaWQxKTtcbn1cbiIsImltcG9ydCB7dHdlZW5WYWx1ZX0gZnJvbSBcIi4vdHdlZW4uanNcIjtcblxuZnVuY3Rpb24gdGV4dENvbnN0YW50KHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnRleHRDb250ZW50ID0gdmFsdWU7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHRleHRGdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHZhbHVlMSA9IHZhbHVlKHRoaXMpO1xuICAgIHRoaXMudGV4dENvbnRlbnQgPSB2YWx1ZTEgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZTE7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiB0aGlzLnR3ZWVuKFwidGV4dFwiLCB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgPyB0ZXh0RnVuY3Rpb24odHdlZW5WYWx1ZSh0aGlzLCBcInRleHRcIiwgdmFsdWUpKVxuICAgICAgOiB0ZXh0Q29uc3RhbnQodmFsdWUgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZSArIFwiXCIpKTtcbn1cbiIsImltcG9ydCB7c2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIG9uMCwgb24xLCB0aGF0ID0gdGhpcywgaWQgPSB0aGF0Ll9pZCwgc2l6ZSA9IHRoYXQuc2l6ZSgpO1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgdmFyIGNhbmNlbCA9IHt2YWx1ZTogcmVqZWN0fSxcbiAgICAgICAgZW5kID0ge3ZhbHVlOiBmdW5jdGlvbigpIHsgaWYgKC0tc2l6ZSA9PT0gMCkgcmVzb2x2ZSgpOyB9fTtcblxuICAgIHRoYXQuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgIHZhciBzY2hlZHVsZSA9IHNldCh0aGlzLCBpZCksXG4gICAgICAgICAgb24gPSBzY2hlZHVsZS5vbjtcblxuICAgICAgLy8gSWYgdGhpcyBub2RlIHNoYXJlZCBhIGRpc3BhdGNoIHdpdGggdGhlIHByZXZpb3VzIG5vZGUsXG4gICAgICAvLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgZGlzcGF0Y2ggYW5kIHdl4oCZcmUgZG9uZSFcbiAgICAgIC8vIE90aGVyd2lzZSwgY29weS1vbi13cml0ZS5cbiAgICAgIGlmIChvbiAhPT0gb24wKSB7XG4gICAgICAgIG9uMSA9IChvbjAgPSBvbikuY29weSgpO1xuICAgICAgICBvbjEuXy5jYW5jZWwucHVzaChjYW5jZWwpO1xuICAgICAgICBvbjEuXy5pbnRlcnJ1cHQucHVzaChjYW5jZWwpO1xuICAgICAgICBvbjEuXy5lbmQucHVzaChlbmQpO1xuICAgICAgfVxuXG4gICAgICBzY2hlZHVsZS5vbiA9IG9uMTtcbiAgICB9KTtcbiAgfSk7XG59XG4iLCJpbXBvcnQge1RyYW5zaXRpb24sIG5ld0lkfSBmcm9tIFwiLi4vdHJhbnNpdGlvbi9pbmRleC5qc1wiO1xuaW1wb3J0IHNjaGVkdWxlIGZyb20gXCIuLi90cmFuc2l0aW9uL3NjaGVkdWxlLmpzXCI7XG5pbXBvcnQge2Vhc2VDdWJpY0luT3V0fSBmcm9tIFwiZDMtZWFzZVwiO1xuaW1wb3J0IHtub3d9IGZyb20gXCJkMy10aW1lclwiO1xuXG52YXIgZGVmYXVsdFRpbWluZyA9IHtcbiAgdGltZTogbnVsbCwgLy8gU2V0IG9uIHVzZS5cbiAgZGVsYXk6IDAsXG4gIGR1cmF0aW9uOiAyNTAsXG4gIGVhc2U6IGVhc2VDdWJpY0luT3V0XG59O1xuXG5mdW5jdGlvbiBpbmhlcml0KG5vZGUsIGlkKSB7XG4gIHZhciB0aW1pbmc7XG4gIHdoaWxlICghKHRpbWluZyA9IG5vZGUuX190cmFuc2l0aW9uKSB8fCAhKHRpbWluZyA9IHRpbWluZ1tpZF0pKSB7XG4gICAgaWYgKCEobm9kZSA9IG5vZGUucGFyZW50Tm9kZSkpIHtcbiAgICAgIHJldHVybiBkZWZhdWx0VGltaW5nLnRpbWUgPSBub3coKSwgZGVmYXVsdFRpbWluZztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRpbWluZztcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSkge1xuICB2YXIgaWQsXG4gICAgICB0aW1pbmc7XG5cbiAgaWYgKG5hbWUgaW5zdGFuY2VvZiBUcmFuc2l0aW9uKSB7XG4gICAgaWQgPSBuYW1lLl9pZCwgbmFtZSA9IG5hbWUuX25hbWU7XG4gIH0gZWxzZSB7XG4gICAgaWQgPSBuZXdJZCgpLCAodGltaW5nID0gZGVmYXVsdFRpbWluZykudGltZSA9IG5vdygpLCBuYW1lID0gbmFtZSA9PSBudWxsID8gbnVsbCA6IG5hbWUgKyBcIlwiO1xuICB9XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgc2NoZWR1bGUobm9kZSwgbmFtZSwgaWQsIGksIGdyb3VwLCB0aW1pbmcgfHwgaW5oZXJpdChub2RlLCBpZCkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihncm91cHMsIHRoaXMuX3BhcmVudHMsIG5hbWUsIGlkKTtcbn1cbiIsImltcG9ydCB7c2VsZWN0aW9ufSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2ludGVycnVwdCBmcm9tIFwiLi9pbnRlcnJ1cHQuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fdHJhbnNpdGlvbiBmcm9tIFwiLi90cmFuc2l0aW9uLmpzXCI7XG5cbnNlbGVjdGlvbi5wcm90b3R5cGUuaW50ZXJydXB0ID0gc2VsZWN0aW9uX2ludGVycnVwdDtcbnNlbGVjdGlvbi5wcm90b3R5cGUudHJhbnNpdGlvbiA9IHNlbGVjdGlvbl90cmFuc2l0aW9uO1xuIiwiaW1wb3J0IGludGVycnVwdCBmcm9tIFwiLi4vaW50ZXJydXB0LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcbiAgICBpbnRlcnJ1cHQodGhpcywgbmFtZSk7XG4gIH0pO1xufVxuIiwiaW1wb3J0IHtUcmFuc2l0aW9ufSBmcm9tIFwiLi90cmFuc2l0aW9uL2luZGV4LmpzXCI7XG5pbXBvcnQge1NDSEVEVUxFRH0gZnJvbSBcIi4vdHJhbnNpdGlvbi9zY2hlZHVsZS5qc1wiO1xuXG52YXIgcm9vdCA9IFtudWxsXTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obm9kZSwgbmFtZSkge1xuICB2YXIgc2NoZWR1bGVzID0gbm9kZS5fX3RyYW5zaXRpb24sXG4gICAgICBzY2hlZHVsZSxcbiAgICAgIGk7XG5cbiAgaWYgKHNjaGVkdWxlcykge1xuICAgIG5hbWUgPSBuYW1lID09IG51bGwgPyBudWxsIDogbmFtZSArIFwiXCI7XG4gICAgZm9yIChpIGluIHNjaGVkdWxlcykge1xuICAgICAgaWYgKChzY2hlZHVsZSA9IHNjaGVkdWxlc1tpXSkuc3RhdGUgPiBTQ0hFRFVMRUQgJiYgc2NoZWR1bGUubmFtZSA9PT0gbmFtZSkge1xuICAgICAgICByZXR1cm4gbmV3IFRyYW5zaXRpb24oW1tub2RlXV0sIHJvb3QsIG5hbWUsICtpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odGFyZ2V0LCB0eXBlLCBzZWxlY3Rpb24pIHtcbiAgdGhpcy50YXJnZXQgPSB0YXJnZXQ7XG4gIHRoaXMudHlwZSA9IHR5cGU7XG4gIHRoaXMuc2VsZWN0aW9uID0gc2VsZWN0aW9uO1xufVxuIiwiaW1wb3J0IHtldmVudH0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuXG5leHBvcnQgZnVuY3Rpb24gbm9wcm9wYWdhdGlvbigpIHtcbiAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICBldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbn1cbiIsImltcG9ydCB7ZGlzcGF0Y2h9IGZyb20gXCJkMy1kaXNwYXRjaFwiO1xuaW1wb3J0IHtkcmFnRGlzYWJsZSwgZHJhZ0VuYWJsZX0gZnJvbSBcImQzLWRyYWdcIjtcbmltcG9ydCB7aW50ZXJwb2xhdGV9IGZyb20gXCJkMy1pbnRlcnBvbGF0ZVwiO1xuaW1wb3J0IHtjdXN0b21FdmVudCwgZXZlbnQsIHRvdWNoLCBtb3VzZSwgc2VsZWN0fSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQge2ludGVycnVwdH0gZnJvbSBcImQzLXRyYW5zaXRpb25cIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudC5qc1wiO1xuaW1wb3J0IEJydXNoRXZlbnQgZnJvbSBcIi4vZXZlbnQuanNcIjtcbmltcG9ydCBub2V2ZW50LCB7bm9wcm9wYWdhdGlvbn0gZnJvbSBcIi4vbm9ldmVudC5qc1wiO1xuXG52YXIgTU9ERV9EUkFHID0ge25hbWU6IFwiZHJhZ1wifSxcbiAgICBNT0RFX1NQQUNFID0ge25hbWU6IFwic3BhY2VcIn0sXG4gICAgTU9ERV9IQU5ETEUgPSB7bmFtZTogXCJoYW5kbGVcIn0sXG4gICAgTU9ERV9DRU5URVIgPSB7bmFtZTogXCJjZW50ZXJcIn07XG5cbmZ1bmN0aW9uIG51bWJlcjEoZSkge1xuICByZXR1cm4gWytlWzBdLCArZVsxXV07XG59XG5cbmZ1bmN0aW9uIG51bWJlcjIoZSkge1xuICByZXR1cm4gW251bWJlcjEoZVswXSksIG51bWJlcjEoZVsxXSldO1xufVxuXG5mdW5jdGlvbiB0b3VjaGVyKGlkZW50aWZpZXIpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHRhcmdldCkge1xuICAgIHJldHVybiB0b3VjaCh0YXJnZXQsIGV2ZW50LnRvdWNoZXMsIGlkZW50aWZpZXIpO1xuICB9O1xufVxuXG52YXIgWCA9IHtcbiAgbmFtZTogXCJ4XCIsXG4gIGhhbmRsZXM6IFtcIndcIiwgXCJlXCJdLm1hcCh0eXBlKSxcbiAgaW5wdXQ6IGZ1bmN0aW9uKHgsIGUpIHsgcmV0dXJuIHggPT0gbnVsbCA/IG51bGwgOiBbWyt4WzBdLCBlWzBdWzFdXSwgWyt4WzFdLCBlWzFdWzFdXV07IH0sXG4gIG91dHB1dDogZnVuY3Rpb24oeHkpIHsgcmV0dXJuIHh5ICYmIFt4eVswXVswXSwgeHlbMV1bMF1dOyB9XG59O1xuXG52YXIgWSA9IHtcbiAgbmFtZTogXCJ5XCIsXG4gIGhhbmRsZXM6IFtcIm5cIiwgXCJzXCJdLm1hcCh0eXBlKSxcbiAgaW5wdXQ6IGZ1bmN0aW9uKHksIGUpIHsgcmV0dXJuIHkgPT0gbnVsbCA/IG51bGwgOiBbW2VbMF1bMF0sICt5WzBdXSwgW2VbMV1bMF0sICt5WzFdXV07IH0sXG4gIG91dHB1dDogZnVuY3Rpb24oeHkpIHsgcmV0dXJuIHh5ICYmIFt4eVswXVsxXSwgeHlbMV1bMV1dOyB9XG59O1xuXG52YXIgWFkgPSB7XG4gIG5hbWU6IFwieHlcIixcbiAgaGFuZGxlczogW1wiblwiLCBcIndcIiwgXCJlXCIsIFwic1wiLCBcIm53XCIsIFwibmVcIiwgXCJzd1wiLCBcInNlXCJdLm1hcCh0eXBlKSxcbiAgaW5wdXQ6IGZ1bmN0aW9uKHh5KSB7IHJldHVybiB4eSA9PSBudWxsID8gbnVsbCA6IG51bWJlcjIoeHkpOyB9LFxuICBvdXRwdXQ6IGZ1bmN0aW9uKHh5KSB7IHJldHVybiB4eTsgfVxufTtcblxudmFyIGN1cnNvcnMgPSB7XG4gIG92ZXJsYXk6IFwiY3Jvc3NoYWlyXCIsXG4gIHNlbGVjdGlvbjogXCJtb3ZlXCIsXG4gIG46IFwibnMtcmVzaXplXCIsXG4gIGU6IFwiZXctcmVzaXplXCIsXG4gIHM6IFwibnMtcmVzaXplXCIsXG4gIHc6IFwiZXctcmVzaXplXCIsXG4gIG53OiBcIm53c2UtcmVzaXplXCIsXG4gIG5lOiBcIm5lc3ctcmVzaXplXCIsXG4gIHNlOiBcIm53c2UtcmVzaXplXCIsXG4gIHN3OiBcIm5lc3ctcmVzaXplXCJcbn07XG5cbnZhciBmbGlwWCA9IHtcbiAgZTogXCJ3XCIsXG4gIHc6IFwiZVwiLFxuICBudzogXCJuZVwiLFxuICBuZTogXCJud1wiLFxuICBzZTogXCJzd1wiLFxuICBzdzogXCJzZVwiXG59O1xuXG52YXIgZmxpcFkgPSB7XG4gIG46IFwic1wiLFxuICBzOiBcIm5cIixcbiAgbnc6IFwic3dcIixcbiAgbmU6IFwic2VcIixcbiAgc2U6IFwibmVcIixcbiAgc3c6IFwibndcIlxufTtcblxudmFyIHNpZ25zWCA9IHtcbiAgb3ZlcmxheTogKzEsXG4gIHNlbGVjdGlvbjogKzEsXG4gIG46IG51bGwsXG4gIGU6ICsxLFxuICBzOiBudWxsLFxuICB3OiAtMSxcbiAgbnc6IC0xLFxuICBuZTogKzEsXG4gIHNlOiArMSxcbiAgc3c6IC0xXG59O1xuXG52YXIgc2lnbnNZID0ge1xuICBvdmVybGF5OiArMSxcbiAgc2VsZWN0aW9uOiArMSxcbiAgbjogLTEsXG4gIGU6IG51bGwsXG4gIHM6ICsxLFxuICB3OiBudWxsLFxuICBudzogLTEsXG4gIG5lOiAtMSxcbiAgc2U6ICsxLFxuICBzdzogKzFcbn07XG5cbmZ1bmN0aW9uIHR5cGUodCkge1xuICByZXR1cm4ge3R5cGU6IHR9O1xufVxuXG4vLyBJZ25vcmUgcmlnaHQtY2xpY2ssIHNpbmNlIHRoYXQgc2hvdWxkIG9wZW4gdGhlIGNvbnRleHQgbWVudS5cbmZ1bmN0aW9uIGRlZmF1bHRGaWx0ZXIoKSB7XG4gIHJldHVybiAhZXZlbnQuY3RybEtleSAmJiAhZXZlbnQuYnV0dG9uO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0RXh0ZW50KCkge1xuICB2YXIgc3ZnID0gdGhpcy5vd25lclNWR0VsZW1lbnQgfHwgdGhpcztcbiAgaWYgKHN2Zy5oYXNBdHRyaWJ1dGUoXCJ2aWV3Qm94XCIpKSB7XG4gICAgc3ZnID0gc3ZnLnZpZXdCb3guYmFzZVZhbDtcbiAgICByZXR1cm4gW1tzdmcueCwgc3ZnLnldLCBbc3ZnLnggKyBzdmcud2lkdGgsIHN2Zy55ICsgc3ZnLmhlaWdodF1dO1xuICB9XG4gIHJldHVybiBbWzAsIDBdLCBbc3ZnLndpZHRoLmJhc2VWYWwudmFsdWUsIHN2Zy5oZWlnaHQuYmFzZVZhbC52YWx1ZV1dO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0VG91Y2hhYmxlKCkge1xuICByZXR1cm4gbmF2aWdhdG9yLm1heFRvdWNoUG9pbnRzIHx8IChcIm9udG91Y2hzdGFydFwiIGluIHRoaXMpO1xufVxuXG4vLyBMaWtlIGQzLmxvY2FsLCBidXQgd2l0aCB0aGUgbmFtZSDigJxfX2JydXNo4oCdIHJhdGhlciB0aGFuIGF1dG8tZ2VuZXJhdGVkLlxuZnVuY3Rpb24gbG9jYWwobm9kZSkge1xuICB3aGlsZSAoIW5vZGUuX19icnVzaCkgaWYgKCEobm9kZSA9IG5vZGUucGFyZW50Tm9kZSkpIHJldHVybjtcbiAgcmV0dXJuIG5vZGUuX19icnVzaDtcbn1cblxuZnVuY3Rpb24gZW1wdHkoZXh0ZW50KSB7XG4gIHJldHVybiBleHRlbnRbMF1bMF0gPT09IGV4dGVudFsxXVswXVxuICAgICAgfHwgZXh0ZW50WzBdWzFdID09PSBleHRlbnRbMV1bMV07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBicnVzaFNlbGVjdGlvbihub2RlKSB7XG4gIHZhciBzdGF0ZSA9IG5vZGUuX19icnVzaDtcbiAgcmV0dXJuIHN0YXRlID8gc3RhdGUuZGltLm91dHB1dChzdGF0ZS5zZWxlY3Rpb24pIDogbnVsbDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJydXNoWCgpIHtcbiAgcmV0dXJuIGJydXNoKFgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYnJ1c2hZKCkge1xuICByZXR1cm4gYnJ1c2goWSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gYnJ1c2goWFkpO1xufVxuXG5mdW5jdGlvbiBicnVzaChkaW0pIHtcbiAgdmFyIGV4dGVudCA9IGRlZmF1bHRFeHRlbnQsXG4gICAgICBmaWx0ZXIgPSBkZWZhdWx0RmlsdGVyLFxuICAgICAgdG91Y2hhYmxlID0gZGVmYXVsdFRvdWNoYWJsZSxcbiAgICAgIGtleXMgPSB0cnVlLFxuICAgICAgbGlzdGVuZXJzID0gZGlzcGF0Y2goXCJzdGFydFwiLCBcImJydXNoXCIsIFwiZW5kXCIpLFxuICAgICAgaGFuZGxlU2l6ZSA9IDYsXG4gICAgICB0b3VjaGVuZGluZztcblxuICBmdW5jdGlvbiBicnVzaChncm91cCkge1xuICAgIHZhciBvdmVybGF5ID0gZ3JvdXBcbiAgICAgICAgLnByb3BlcnR5KFwiX19icnVzaFwiLCBpbml0aWFsaXplKVxuICAgICAgLnNlbGVjdEFsbChcIi5vdmVybGF5XCIpXG4gICAgICAuZGF0YShbdHlwZShcIm92ZXJsYXlcIildKTtcblxuICAgIG92ZXJsYXkuZW50ZXIoKS5hcHBlbmQoXCJyZWN0XCIpXG4gICAgICAgIC5hdHRyKFwiY2xhc3NcIiwgXCJvdmVybGF5XCIpXG4gICAgICAgIC5hdHRyKFwicG9pbnRlci1ldmVudHNcIiwgXCJhbGxcIilcbiAgICAgICAgLmF0dHIoXCJjdXJzb3JcIiwgY3Vyc29ycy5vdmVybGF5KVxuICAgICAgLm1lcmdlKG92ZXJsYXkpXG4gICAgICAgIC5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHZhciBleHRlbnQgPSBsb2NhbCh0aGlzKS5leHRlbnQ7XG4gICAgICAgICAgc2VsZWN0KHRoaXMpXG4gICAgICAgICAgICAgIC5hdHRyKFwieFwiLCBleHRlbnRbMF1bMF0pXG4gICAgICAgICAgICAgIC5hdHRyKFwieVwiLCBleHRlbnRbMF1bMV0pXG4gICAgICAgICAgICAgIC5hdHRyKFwid2lkdGhcIiwgZXh0ZW50WzFdWzBdIC0gZXh0ZW50WzBdWzBdKVxuICAgICAgICAgICAgICAuYXR0cihcImhlaWdodFwiLCBleHRlbnRbMV1bMV0gLSBleHRlbnRbMF1bMV0pO1xuICAgICAgICB9KTtcblxuICAgIGdyb3VwLnNlbGVjdEFsbChcIi5zZWxlY3Rpb25cIilcbiAgICAgIC5kYXRhKFt0eXBlKFwic2VsZWN0aW9uXCIpXSlcbiAgICAgIC5lbnRlcigpLmFwcGVuZChcInJlY3RcIilcbiAgICAgICAgLmF0dHIoXCJjbGFzc1wiLCBcInNlbGVjdGlvblwiKVxuICAgICAgICAuYXR0cihcImN1cnNvclwiLCBjdXJzb3JzLnNlbGVjdGlvbilcbiAgICAgICAgLmF0dHIoXCJmaWxsXCIsIFwiIzc3N1wiKVxuICAgICAgICAuYXR0cihcImZpbGwtb3BhY2l0eVwiLCAwLjMpXG4gICAgICAgIC5hdHRyKFwic3Ryb2tlXCIsIFwiI2ZmZlwiKVxuICAgICAgICAuYXR0cihcInNoYXBlLXJlbmRlcmluZ1wiLCBcImNyaXNwRWRnZXNcIik7XG5cbiAgICB2YXIgaGFuZGxlID0gZ3JvdXAuc2VsZWN0QWxsKFwiLmhhbmRsZVwiKVxuICAgICAgLmRhdGEoZGltLmhhbmRsZXMsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQudHlwZTsgfSk7XG5cbiAgICBoYW5kbGUuZXhpdCgpLnJlbW92ZSgpO1xuXG4gICAgaGFuZGxlLmVudGVyKCkuYXBwZW5kKFwicmVjdFwiKVxuICAgICAgICAuYXR0cihcImNsYXNzXCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIFwiaGFuZGxlIGhhbmRsZS0tXCIgKyBkLnR5cGU7IH0pXG4gICAgICAgIC5hdHRyKFwiY3Vyc29yXCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGN1cnNvcnNbZC50eXBlXTsgfSk7XG5cbiAgICBncm91cFxuICAgICAgICAuZWFjaChyZWRyYXcpXG4gICAgICAgIC5hdHRyKFwiZmlsbFwiLCBcIm5vbmVcIilcbiAgICAgICAgLmF0dHIoXCJwb2ludGVyLWV2ZW50c1wiLCBcImFsbFwiKVxuICAgICAgICAub24oXCJtb3VzZWRvd24uYnJ1c2hcIiwgc3RhcnRlZClcbiAgICAgIC5maWx0ZXIodG91Y2hhYmxlKVxuICAgICAgICAub24oXCJ0b3VjaHN0YXJ0LmJydXNoXCIsIHN0YXJ0ZWQpXG4gICAgICAgIC5vbihcInRvdWNobW92ZS5icnVzaFwiLCB0b3VjaG1vdmVkKVxuICAgICAgICAub24oXCJ0b3VjaGVuZC5icnVzaCB0b3VjaGNhbmNlbC5icnVzaFwiLCB0b3VjaGVuZGVkKVxuICAgICAgICAuc3R5bGUoXCJ0b3VjaC1hY3Rpb25cIiwgXCJub25lXCIpXG4gICAgICAgIC5zdHlsZShcIi13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvclwiLCBcInJnYmEoMCwwLDAsMClcIik7XG4gIH1cblxuICBicnVzaC5tb3ZlID0gZnVuY3Rpb24oZ3JvdXAsIHNlbGVjdGlvbikge1xuICAgIGlmIChncm91cC5zZWxlY3Rpb24pIHtcbiAgICAgIGdyb3VwXG4gICAgICAgICAgLm9uKFwic3RhcnQuYnJ1c2hcIiwgZnVuY3Rpb24oKSB7IGVtaXR0ZXIodGhpcywgYXJndW1lbnRzKS5iZWZvcmVzdGFydCgpLnN0YXJ0KCk7IH0pXG4gICAgICAgICAgLm9uKFwiaW50ZXJydXB0LmJydXNoIGVuZC5icnVzaFwiLCBmdW5jdGlvbigpIHsgZW1pdHRlcih0aGlzLCBhcmd1bWVudHMpLmVuZCgpOyB9KVxuICAgICAgICAgIC50d2VlbihcImJydXNoXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIHRoYXQgPSB0aGlzLFxuICAgICAgICAgICAgICAgIHN0YXRlID0gdGhhdC5fX2JydXNoLFxuICAgICAgICAgICAgICAgIGVtaXQgPSBlbWl0dGVyKHRoYXQsIGFyZ3VtZW50cyksXG4gICAgICAgICAgICAgICAgc2VsZWN0aW9uMCA9IHN0YXRlLnNlbGVjdGlvbixcbiAgICAgICAgICAgICAgICBzZWxlY3Rpb24xID0gZGltLmlucHV0KHR5cGVvZiBzZWxlY3Rpb24gPT09IFwiZnVuY3Rpb25cIiA/IHNlbGVjdGlvbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogc2VsZWN0aW9uLCBzdGF0ZS5leHRlbnQpLFxuICAgICAgICAgICAgICAgIGkgPSBpbnRlcnBvbGF0ZShzZWxlY3Rpb24wLCBzZWxlY3Rpb24xKTtcblxuICAgICAgICAgICAgZnVuY3Rpb24gdHdlZW4odCkge1xuICAgICAgICAgICAgICBzdGF0ZS5zZWxlY3Rpb24gPSB0ID09PSAxICYmIHNlbGVjdGlvbjEgPT09IG51bGwgPyBudWxsIDogaSh0KTtcbiAgICAgICAgICAgICAgcmVkcmF3LmNhbGwodGhhdCk7XG4gICAgICAgICAgICAgIGVtaXQuYnJ1c2goKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHNlbGVjdGlvbjAgIT09IG51bGwgJiYgc2VsZWN0aW9uMSAhPT0gbnVsbCA/IHR3ZWVuIDogdHdlZW4oMSk7XG4gICAgICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGdyb3VwXG4gICAgICAgICAgLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgdGhhdCA9IHRoaXMsXG4gICAgICAgICAgICAgICAgYXJncyA9IGFyZ3VtZW50cyxcbiAgICAgICAgICAgICAgICBzdGF0ZSA9IHRoYXQuX19icnVzaCxcbiAgICAgICAgICAgICAgICBzZWxlY3Rpb24xID0gZGltLmlucHV0KHR5cGVvZiBzZWxlY3Rpb24gPT09IFwiZnVuY3Rpb25cIiA/IHNlbGVjdGlvbi5hcHBseSh0aGF0LCBhcmdzKSA6IHNlbGVjdGlvbiwgc3RhdGUuZXh0ZW50KSxcbiAgICAgICAgICAgICAgICBlbWl0ID0gZW1pdHRlcih0aGF0LCBhcmdzKS5iZWZvcmVzdGFydCgpO1xuXG4gICAgICAgICAgICBpbnRlcnJ1cHQodGhhdCk7XG4gICAgICAgICAgICBzdGF0ZS5zZWxlY3Rpb24gPSBzZWxlY3Rpb24xID09PSBudWxsID8gbnVsbCA6IHNlbGVjdGlvbjE7XG4gICAgICAgICAgICByZWRyYXcuY2FsbCh0aGF0KTtcbiAgICAgICAgICAgIGVtaXQuc3RhcnQoKS5icnVzaCgpLmVuZCgpO1xuICAgICAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICBicnVzaC5jbGVhciA9IGZ1bmN0aW9uKGdyb3VwKSB7XG4gICAgYnJ1c2gubW92ZShncm91cCwgbnVsbCk7XG4gIH07XG5cbiAgZnVuY3Rpb24gcmVkcmF3KCkge1xuICAgIHZhciBncm91cCA9IHNlbGVjdCh0aGlzKSxcbiAgICAgICAgc2VsZWN0aW9uID0gbG9jYWwodGhpcykuc2VsZWN0aW9uO1xuXG4gICAgaWYgKHNlbGVjdGlvbikge1xuICAgICAgZ3JvdXAuc2VsZWN0QWxsKFwiLnNlbGVjdGlvblwiKVxuICAgICAgICAgIC5zdHlsZShcImRpc3BsYXlcIiwgbnVsbClcbiAgICAgICAgICAuYXR0cihcInhcIiwgc2VsZWN0aW9uWzBdWzBdKVxuICAgICAgICAgIC5hdHRyKFwieVwiLCBzZWxlY3Rpb25bMF1bMV0pXG4gICAgICAgICAgLmF0dHIoXCJ3aWR0aFwiLCBzZWxlY3Rpb25bMV1bMF0gLSBzZWxlY3Rpb25bMF1bMF0pXG4gICAgICAgICAgLmF0dHIoXCJoZWlnaHRcIiwgc2VsZWN0aW9uWzFdWzFdIC0gc2VsZWN0aW9uWzBdWzFdKTtcblxuICAgICAgZ3JvdXAuc2VsZWN0QWxsKFwiLmhhbmRsZVwiKVxuICAgICAgICAgIC5zdHlsZShcImRpc3BsYXlcIiwgbnVsbClcbiAgICAgICAgICAuYXR0cihcInhcIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC50eXBlW2QudHlwZS5sZW5ndGggLSAxXSA9PT0gXCJlXCIgPyBzZWxlY3Rpb25bMV1bMF0gLSBoYW5kbGVTaXplIC8gMiA6IHNlbGVjdGlvblswXVswXSAtIGhhbmRsZVNpemUgLyAyOyB9KVxuICAgICAgICAgIC5hdHRyKFwieVwiLCBmdW5jdGlvbihkKSB7IHJldHVybiBkLnR5cGVbMF0gPT09IFwic1wiID8gc2VsZWN0aW9uWzFdWzFdIC0gaGFuZGxlU2l6ZSAvIDIgOiBzZWxlY3Rpb25bMF1bMV0gLSBoYW5kbGVTaXplIC8gMjsgfSlcbiAgICAgICAgICAuYXR0cihcIndpZHRoXCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQudHlwZSA9PT0gXCJuXCIgfHwgZC50eXBlID09PSBcInNcIiA/IHNlbGVjdGlvblsxXVswXSAtIHNlbGVjdGlvblswXVswXSArIGhhbmRsZVNpemUgOiBoYW5kbGVTaXplOyB9KVxuICAgICAgICAgIC5hdHRyKFwiaGVpZ2h0XCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQudHlwZSA9PT0gXCJlXCIgfHwgZC50eXBlID09PSBcIndcIiA/IHNlbGVjdGlvblsxXVsxXSAtIHNlbGVjdGlvblswXVsxXSArIGhhbmRsZVNpemUgOiBoYW5kbGVTaXplOyB9KTtcbiAgICB9XG5cbiAgICBlbHNlIHtcbiAgICAgIGdyb3VwLnNlbGVjdEFsbChcIi5zZWxlY3Rpb24sLmhhbmRsZVwiKVxuICAgICAgICAgIC5zdHlsZShcImRpc3BsYXlcIiwgXCJub25lXCIpXG4gICAgICAgICAgLmF0dHIoXCJ4XCIsIG51bGwpXG4gICAgICAgICAgLmF0dHIoXCJ5XCIsIG51bGwpXG4gICAgICAgICAgLmF0dHIoXCJ3aWR0aFwiLCBudWxsKVxuICAgICAgICAgIC5hdHRyKFwiaGVpZ2h0XCIsIG51bGwpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGVtaXR0ZXIodGhhdCwgYXJncywgY2xlYW4pIHtcbiAgICByZXR1cm4gKCFjbGVhbiAmJiB0aGF0Ll9fYnJ1c2guZW1pdHRlcikgfHwgbmV3IEVtaXR0ZXIodGhhdCwgYXJncyk7XG4gIH1cblxuICBmdW5jdGlvbiBFbWl0dGVyKHRoYXQsIGFyZ3MpIHtcbiAgICB0aGlzLnRoYXQgPSB0aGF0O1xuICAgIHRoaXMuYXJncyA9IGFyZ3M7XG4gICAgdGhpcy5zdGF0ZSA9IHRoYXQuX19icnVzaDtcbiAgICB0aGlzLmFjdGl2ZSA9IDA7XG4gIH1cblxuICBFbWl0dGVyLnByb3RvdHlwZSA9IHtcbiAgICBiZWZvcmVzdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoKyt0aGlzLmFjdGl2ZSA9PT0gMSkgdGhpcy5zdGF0ZS5lbWl0dGVyID0gdGhpcywgdGhpcy5zdGFydGluZyA9IHRydWU7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIHN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIGlmICh0aGlzLnN0YXJ0aW5nKSB0aGlzLnN0YXJ0aW5nID0gZmFsc2UsIHRoaXMuZW1pdChcInN0YXJ0XCIpO1xuICAgICAgZWxzZSB0aGlzLmVtaXQoXCJicnVzaFwiKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgYnJ1c2g6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5lbWl0KFwiYnJ1c2hcIik7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIGVuZDogZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoLS10aGlzLmFjdGl2ZSA9PT0gMCkgZGVsZXRlIHRoaXMuc3RhdGUuZW1pdHRlciwgdGhpcy5lbWl0KFwiZW5kXCIpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBlbWl0OiBmdW5jdGlvbih0eXBlKSB7XG4gICAgICBjdXN0b21FdmVudChuZXcgQnJ1c2hFdmVudChicnVzaCwgdHlwZSwgZGltLm91dHB1dCh0aGlzLnN0YXRlLnNlbGVjdGlvbikpLCBsaXN0ZW5lcnMuYXBwbHksIGxpc3RlbmVycywgW3R5cGUsIHRoaXMudGhhdCwgdGhpcy5hcmdzXSk7XG4gICAgfVxuICB9O1xuXG4gIGZ1bmN0aW9uIHN0YXJ0ZWQoKSB7XG4gICAgaWYgKHRvdWNoZW5kaW5nICYmICFldmVudC50b3VjaGVzKSByZXR1cm47XG4gICAgaWYgKCFmaWx0ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgcmV0dXJuO1xuXG4gICAgdmFyIHRoYXQgPSB0aGlzLFxuICAgICAgICB0eXBlID0gZXZlbnQudGFyZ2V0Ll9fZGF0YV9fLnR5cGUsXG4gICAgICAgIG1vZGUgPSAoa2V5cyAmJiBldmVudC5tZXRhS2V5ID8gdHlwZSA9IFwib3ZlcmxheVwiIDogdHlwZSkgPT09IFwic2VsZWN0aW9uXCIgPyBNT0RFX0RSQUcgOiAoa2V5cyAmJiBldmVudC5hbHRLZXkgPyBNT0RFX0NFTlRFUiA6IE1PREVfSEFORExFKSxcbiAgICAgICAgc2lnblggPSBkaW0gPT09IFkgPyBudWxsIDogc2lnbnNYW3R5cGVdLFxuICAgICAgICBzaWduWSA9IGRpbSA9PT0gWCA/IG51bGwgOiBzaWduc1lbdHlwZV0sXG4gICAgICAgIHN0YXRlID0gbG9jYWwodGhhdCksXG4gICAgICAgIGV4dGVudCA9IHN0YXRlLmV4dGVudCxcbiAgICAgICAgc2VsZWN0aW9uID0gc3RhdGUuc2VsZWN0aW9uLFxuICAgICAgICBXID0gZXh0ZW50WzBdWzBdLCB3MCwgdzEsXG4gICAgICAgIE4gPSBleHRlbnRbMF1bMV0sIG4wLCBuMSxcbiAgICAgICAgRSA9IGV4dGVudFsxXVswXSwgZTAsIGUxLFxuICAgICAgICBTID0gZXh0ZW50WzFdWzFdLCBzMCwgczEsXG4gICAgICAgIGR4ID0gMCxcbiAgICAgICAgZHkgPSAwLFxuICAgICAgICBtb3ZpbmcsXG4gICAgICAgIHNoaWZ0aW5nID0gc2lnblggJiYgc2lnblkgJiYga2V5cyAmJiBldmVudC5zaGlmdEtleSxcbiAgICAgICAgbG9ja1gsXG4gICAgICAgIGxvY2tZLFxuICAgICAgICBwb2ludGVyID0gZXZlbnQudG91Y2hlcyA/IHRvdWNoZXIoZXZlbnQuY2hhbmdlZFRvdWNoZXNbMF0uaWRlbnRpZmllcikgOiBtb3VzZSxcbiAgICAgICAgcG9pbnQwID0gcG9pbnRlcih0aGF0KSxcbiAgICAgICAgcG9pbnQgPSBwb2ludDAsXG4gICAgICAgIGVtaXQgPSBlbWl0dGVyKHRoYXQsIGFyZ3VtZW50cywgdHJ1ZSkuYmVmb3Jlc3RhcnQoKTtcblxuICAgIGlmICh0eXBlID09PSBcIm92ZXJsYXlcIikge1xuICAgICAgaWYgKHNlbGVjdGlvbikgbW92aW5nID0gdHJ1ZTtcbiAgICAgIHN0YXRlLnNlbGVjdGlvbiA9IHNlbGVjdGlvbiA9IFtcbiAgICAgICAgW3cwID0gZGltID09PSBZID8gVyA6IHBvaW50MFswXSwgbjAgPSBkaW0gPT09IFggPyBOIDogcG9pbnQwWzFdXSxcbiAgICAgICAgW2UwID0gZGltID09PSBZID8gRSA6IHcwLCBzMCA9IGRpbSA9PT0gWCA/IFMgOiBuMF1cbiAgICAgIF07XG4gICAgfSBlbHNlIHtcbiAgICAgIHcwID0gc2VsZWN0aW9uWzBdWzBdO1xuICAgICAgbjAgPSBzZWxlY3Rpb25bMF1bMV07XG4gICAgICBlMCA9IHNlbGVjdGlvblsxXVswXTtcbiAgICAgIHMwID0gc2VsZWN0aW9uWzFdWzFdO1xuICAgIH1cblxuICAgIHcxID0gdzA7XG4gICAgbjEgPSBuMDtcbiAgICBlMSA9IGUwO1xuICAgIHMxID0gczA7XG5cbiAgICB2YXIgZ3JvdXAgPSBzZWxlY3QodGhhdClcbiAgICAgICAgLmF0dHIoXCJwb2ludGVyLWV2ZW50c1wiLCBcIm5vbmVcIik7XG5cbiAgICB2YXIgb3ZlcmxheSA9IGdyb3VwLnNlbGVjdEFsbChcIi5vdmVybGF5XCIpXG4gICAgICAgIC5hdHRyKFwiY3Vyc29yXCIsIGN1cnNvcnNbdHlwZV0pO1xuXG4gICAgaWYgKGV2ZW50LnRvdWNoZXMpIHtcbiAgICAgIGVtaXQubW92ZWQgPSBtb3ZlZDtcbiAgICAgIGVtaXQuZW5kZWQgPSBlbmRlZDtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHZpZXcgPSBzZWxlY3QoZXZlbnQudmlldylcbiAgICAgICAgICAub24oXCJtb3VzZW1vdmUuYnJ1c2hcIiwgbW92ZWQsIHRydWUpXG4gICAgICAgICAgLm9uKFwibW91c2V1cC5icnVzaFwiLCBlbmRlZCwgdHJ1ZSk7XG4gICAgICBpZiAoa2V5cykgdmlld1xuICAgICAgICAgIC5vbihcImtleWRvd24uYnJ1c2hcIiwga2V5ZG93bmVkLCB0cnVlKVxuICAgICAgICAgIC5vbihcImtleXVwLmJydXNoXCIsIGtleXVwcGVkLCB0cnVlKVxuXG4gICAgICBkcmFnRGlzYWJsZShldmVudC52aWV3KTtcbiAgICB9XG5cbiAgICBub3Byb3BhZ2F0aW9uKCk7XG4gICAgaW50ZXJydXB0KHRoYXQpO1xuICAgIHJlZHJhdy5jYWxsKHRoYXQpO1xuICAgIGVtaXQuc3RhcnQoKTtcblxuICAgIGZ1bmN0aW9uIG1vdmVkKCkge1xuICAgICAgdmFyIHBvaW50MSA9IHBvaW50ZXIodGhhdCk7XG4gICAgICBpZiAoc2hpZnRpbmcgJiYgIWxvY2tYICYmICFsb2NrWSkge1xuICAgICAgICBpZiAoTWF0aC5hYnMocG9pbnQxWzBdIC0gcG9pbnRbMF0pID4gTWF0aC5hYnMocG9pbnQxWzFdIC0gcG9pbnRbMV0pKSBsb2NrWSA9IHRydWU7XG4gICAgICAgIGVsc2UgbG9ja1ggPSB0cnVlO1xuICAgICAgfVxuICAgICAgcG9pbnQgPSBwb2ludDE7XG4gICAgICBtb3ZpbmcgPSB0cnVlO1xuICAgICAgbm9ldmVudCgpO1xuICAgICAgbW92ZSgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG1vdmUoKSB7XG4gICAgICB2YXIgdDtcblxuICAgICAgZHggPSBwb2ludFswXSAtIHBvaW50MFswXTtcbiAgICAgIGR5ID0gcG9pbnRbMV0gLSBwb2ludDBbMV07XG5cbiAgICAgIHN3aXRjaCAobW9kZSkge1xuICAgICAgICBjYXNlIE1PREVfU1BBQ0U6XG4gICAgICAgIGNhc2UgTU9ERV9EUkFHOiB7XG4gICAgICAgICAgaWYgKHNpZ25YKSBkeCA9IE1hdGgubWF4KFcgLSB3MCwgTWF0aC5taW4oRSAtIGUwLCBkeCkpLCB3MSA9IHcwICsgZHgsIGUxID0gZTAgKyBkeDtcbiAgICAgICAgICBpZiAoc2lnblkpIGR5ID0gTWF0aC5tYXgoTiAtIG4wLCBNYXRoLm1pbihTIC0gczAsIGR5KSksIG4xID0gbjAgKyBkeSwgczEgPSBzMCArIGR5O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgTU9ERV9IQU5ETEU6IHtcbiAgICAgICAgICBpZiAoc2lnblggPCAwKSBkeCA9IE1hdGgubWF4KFcgLSB3MCwgTWF0aC5taW4oRSAtIHcwLCBkeCkpLCB3MSA9IHcwICsgZHgsIGUxID0gZTA7XG4gICAgICAgICAgZWxzZSBpZiAoc2lnblggPiAwKSBkeCA9IE1hdGgubWF4KFcgLSBlMCwgTWF0aC5taW4oRSAtIGUwLCBkeCkpLCB3MSA9IHcwLCBlMSA9IGUwICsgZHg7XG4gICAgICAgICAgaWYgKHNpZ25ZIDwgMCkgZHkgPSBNYXRoLm1heChOIC0gbjAsIE1hdGgubWluKFMgLSBuMCwgZHkpKSwgbjEgPSBuMCArIGR5LCBzMSA9IHMwO1xuICAgICAgICAgIGVsc2UgaWYgKHNpZ25ZID4gMCkgZHkgPSBNYXRoLm1heChOIC0gczAsIE1hdGgubWluKFMgLSBzMCwgZHkpKSwgbjEgPSBuMCwgczEgPSBzMCArIGR5O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgTU9ERV9DRU5URVI6IHtcbiAgICAgICAgICBpZiAoc2lnblgpIHcxID0gTWF0aC5tYXgoVywgTWF0aC5taW4oRSwgdzAgLSBkeCAqIHNpZ25YKSksIGUxID0gTWF0aC5tYXgoVywgTWF0aC5taW4oRSwgZTAgKyBkeCAqIHNpZ25YKSk7XG4gICAgICAgICAgaWYgKHNpZ25ZKSBuMSA9IE1hdGgubWF4KE4sIE1hdGgubWluKFMsIG4wIC0gZHkgKiBzaWduWSkpLCBzMSA9IE1hdGgubWF4KE4sIE1hdGgubWluKFMsIHMwICsgZHkgKiBzaWduWSkpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChlMSA8IHcxKSB7XG4gICAgICAgIHNpZ25YICo9IC0xO1xuICAgICAgICB0ID0gdzAsIHcwID0gZTAsIGUwID0gdDtcbiAgICAgICAgdCA9IHcxLCB3MSA9IGUxLCBlMSA9IHQ7XG4gICAgICAgIGlmICh0eXBlIGluIGZsaXBYKSBvdmVybGF5LmF0dHIoXCJjdXJzb3JcIiwgY3Vyc29yc1t0eXBlID0gZmxpcFhbdHlwZV1dKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHMxIDwgbjEpIHtcbiAgICAgICAgc2lnblkgKj0gLTE7XG4gICAgICAgIHQgPSBuMCwgbjAgPSBzMCwgczAgPSB0O1xuICAgICAgICB0ID0gbjEsIG4xID0gczEsIHMxID0gdDtcbiAgICAgICAgaWYgKHR5cGUgaW4gZmxpcFkpIG92ZXJsYXkuYXR0cihcImN1cnNvclwiLCBjdXJzb3JzW3R5cGUgPSBmbGlwWVt0eXBlXV0pO1xuICAgICAgfVxuXG4gICAgICBpZiAoc3RhdGUuc2VsZWN0aW9uKSBzZWxlY3Rpb24gPSBzdGF0ZS5zZWxlY3Rpb247IC8vIE1heSBiZSBzZXQgYnkgYnJ1c2gubW92ZSFcbiAgICAgIGlmIChsb2NrWCkgdzEgPSBzZWxlY3Rpb25bMF1bMF0sIGUxID0gc2VsZWN0aW9uWzFdWzBdO1xuICAgICAgaWYgKGxvY2tZKSBuMSA9IHNlbGVjdGlvblswXVsxXSwgczEgPSBzZWxlY3Rpb25bMV1bMV07XG5cbiAgICAgIGlmIChzZWxlY3Rpb25bMF1bMF0gIT09IHcxXG4gICAgICAgICAgfHwgc2VsZWN0aW9uWzBdWzFdICE9PSBuMVxuICAgICAgICAgIHx8IHNlbGVjdGlvblsxXVswXSAhPT0gZTFcbiAgICAgICAgICB8fCBzZWxlY3Rpb25bMV1bMV0gIT09IHMxKSB7XG4gICAgICAgIHN0YXRlLnNlbGVjdGlvbiA9IFtbdzEsIG4xXSwgW2UxLCBzMV1dO1xuICAgICAgICByZWRyYXcuY2FsbCh0aGF0KTtcbiAgICAgICAgZW1pdC5icnVzaCgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGVuZGVkKCkge1xuICAgICAgbm9wcm9wYWdhdGlvbigpO1xuICAgICAgaWYgKGV2ZW50LnRvdWNoZXMpIHtcbiAgICAgICAgaWYgKGV2ZW50LnRvdWNoZXMubGVuZ3RoKSByZXR1cm47XG4gICAgICAgIGlmICh0b3VjaGVuZGluZykgY2xlYXJUaW1lb3V0KHRvdWNoZW5kaW5nKTtcbiAgICAgICAgdG91Y2hlbmRpbmcgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0b3VjaGVuZGluZyA9IG51bGw7IH0sIDUwMCk7IC8vIEdob3N0IGNsaWNrcyBhcmUgZGVsYXllZCFcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRyYWdFbmFibGUoZXZlbnQudmlldywgbW92aW5nKTtcbiAgICAgICAgdmlldy5vbihcImtleWRvd24uYnJ1c2gga2V5dXAuYnJ1c2ggbW91c2Vtb3ZlLmJydXNoIG1vdXNldXAuYnJ1c2hcIiwgbnVsbCk7XG4gICAgICB9XG4gICAgICBncm91cC5hdHRyKFwicG9pbnRlci1ldmVudHNcIiwgXCJhbGxcIik7XG4gICAgICBvdmVybGF5LmF0dHIoXCJjdXJzb3JcIiwgY3Vyc29ycy5vdmVybGF5KTtcbiAgICAgIGlmIChzdGF0ZS5zZWxlY3Rpb24pIHNlbGVjdGlvbiA9IHN0YXRlLnNlbGVjdGlvbjsgLy8gTWF5IGJlIHNldCBieSBicnVzaC5tb3ZlIChvbiBzdGFydCkhXG4gICAgICBpZiAoZW1wdHkoc2VsZWN0aW9uKSkgc3RhdGUuc2VsZWN0aW9uID0gbnVsbCwgcmVkcmF3LmNhbGwodGhhdCk7XG4gICAgICBlbWl0LmVuZCgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGtleWRvd25lZCgpIHtcbiAgICAgIHN3aXRjaCAoZXZlbnQua2V5Q29kZSkge1xuICAgICAgICBjYXNlIDE2OiB7IC8vIFNISUZUXG4gICAgICAgICAgc2hpZnRpbmcgPSBzaWduWCAmJiBzaWduWTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIDE4OiB7IC8vIEFMVFxuICAgICAgICAgIGlmIChtb2RlID09PSBNT0RFX0hBTkRMRSkge1xuICAgICAgICAgICAgaWYgKHNpZ25YKSBlMCA9IGUxIC0gZHggKiBzaWduWCwgdzAgPSB3MSArIGR4ICogc2lnblg7XG4gICAgICAgICAgICBpZiAoc2lnblkpIHMwID0gczEgLSBkeSAqIHNpZ25ZLCBuMCA9IG4xICsgZHkgKiBzaWduWTtcbiAgICAgICAgICAgIG1vZGUgPSBNT0RFX0NFTlRFUjtcbiAgICAgICAgICAgIG1vdmUoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAzMjogeyAvLyBTUEFDRTsgdGFrZXMgcHJpb3JpdHkgb3ZlciBBTFRcbiAgICAgICAgICBpZiAobW9kZSA9PT0gTU9ERV9IQU5ETEUgfHwgbW9kZSA9PT0gTU9ERV9DRU5URVIpIHtcbiAgICAgICAgICAgIGlmIChzaWduWCA8IDApIGUwID0gZTEgLSBkeDsgZWxzZSBpZiAoc2lnblggPiAwKSB3MCA9IHcxIC0gZHg7XG4gICAgICAgICAgICBpZiAoc2lnblkgPCAwKSBzMCA9IHMxIC0gZHk7IGVsc2UgaWYgKHNpZ25ZID4gMCkgbjAgPSBuMSAtIGR5O1xuICAgICAgICAgICAgbW9kZSA9IE1PREVfU1BBQ0U7XG4gICAgICAgICAgICBvdmVybGF5LmF0dHIoXCJjdXJzb3JcIiwgY3Vyc29ycy5zZWxlY3Rpb24pO1xuICAgICAgICAgICAgbW92ZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OiByZXR1cm47XG4gICAgICB9XG4gICAgICBub2V2ZW50KCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24ga2V5dXBwZWQoKSB7XG4gICAgICBzd2l0Y2ggKGV2ZW50LmtleUNvZGUpIHtcbiAgICAgICAgY2FzZSAxNjogeyAvLyBTSElGVFxuICAgICAgICAgIGlmIChzaGlmdGluZykge1xuICAgICAgICAgICAgbG9ja1ggPSBsb2NrWSA9IHNoaWZ0aW5nID0gZmFsc2U7XG4gICAgICAgICAgICBtb3ZlKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgMTg6IHsgLy8gQUxUXG4gICAgICAgICAgaWYgKG1vZGUgPT09IE1PREVfQ0VOVEVSKSB7XG4gICAgICAgICAgICBpZiAoc2lnblggPCAwKSBlMCA9IGUxOyBlbHNlIGlmIChzaWduWCA+IDApIHcwID0gdzE7XG4gICAgICAgICAgICBpZiAoc2lnblkgPCAwKSBzMCA9IHMxOyBlbHNlIGlmIChzaWduWSA+IDApIG4wID0gbjE7XG4gICAgICAgICAgICBtb2RlID0gTU9ERV9IQU5ETEU7XG4gICAgICAgICAgICBtb3ZlKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgMzI6IHsgLy8gU1BBQ0VcbiAgICAgICAgICBpZiAobW9kZSA9PT0gTU9ERV9TUEFDRSkge1xuICAgICAgICAgICAgaWYgKGV2ZW50LmFsdEtleSkge1xuICAgICAgICAgICAgICBpZiAoc2lnblgpIGUwID0gZTEgLSBkeCAqIHNpZ25YLCB3MCA9IHcxICsgZHggKiBzaWduWDtcbiAgICAgICAgICAgICAgaWYgKHNpZ25ZKSBzMCA9IHMxIC0gZHkgKiBzaWduWSwgbjAgPSBuMSArIGR5ICogc2lnblk7XG4gICAgICAgICAgICAgIG1vZGUgPSBNT0RFX0NFTlRFUjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGlmIChzaWduWCA8IDApIGUwID0gZTE7IGVsc2UgaWYgKHNpZ25YID4gMCkgdzAgPSB3MTtcbiAgICAgICAgICAgICAgaWYgKHNpZ25ZIDwgMCkgczAgPSBzMTsgZWxzZSBpZiAoc2lnblkgPiAwKSBuMCA9IG4xO1xuICAgICAgICAgICAgICBtb2RlID0gTU9ERV9IQU5ETEU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvdmVybGF5LmF0dHIoXCJjdXJzb3JcIiwgY3Vyc29yc1t0eXBlXSk7XG4gICAgICAgICAgICBtb3ZlKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6IHJldHVybjtcbiAgICAgIH1cbiAgICAgIG5vZXZlbnQoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiB0b3VjaG1vdmVkKCkge1xuICAgIGVtaXR0ZXIodGhpcywgYXJndW1lbnRzKS5tb3ZlZCgpO1xuICB9XG5cbiAgZnVuY3Rpb24gdG91Y2hlbmRlZCgpIHtcbiAgICBlbWl0dGVyKHRoaXMsIGFyZ3VtZW50cykuZW5kZWQoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XG4gICAgdmFyIHN0YXRlID0gdGhpcy5fX2JydXNoIHx8IHtzZWxlY3Rpb246IG51bGx9O1xuICAgIHN0YXRlLmV4dGVudCA9IG51bWJlcjIoZXh0ZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICAgIHN0YXRlLmRpbSA9IGRpbTtcbiAgICByZXR1cm4gc3RhdGU7XG4gIH1cblxuICBicnVzaC5leHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZXh0ZW50ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChudW1iZXIyKF8pKSwgYnJ1c2gpIDogZXh0ZW50O1xuICB9O1xuXG4gIGJydXNoLmZpbHRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChmaWx0ZXIgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCEhXyksIGJydXNoKSA6IGZpbHRlcjtcbiAgfTtcblxuICBicnVzaC50b3VjaGFibGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodG91Y2hhYmxlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCghIV8pLCBicnVzaCkgOiB0b3VjaGFibGU7XG4gIH07XG5cbiAgYnJ1c2guaGFuZGxlU2l6ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChoYW5kbGVTaXplID0gK18sIGJydXNoKSA6IGhhbmRsZVNpemU7XG4gIH07XG5cbiAgYnJ1c2gua2V5TW9kaWZpZXJzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGtleXMgPSAhIV8sIGJydXNoKSA6IGtleXM7XG4gIH07XG5cbiAgYnJ1c2gub24gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdmFsdWUgPSBsaXN0ZW5lcnMub24uYXBwbHkobGlzdGVuZXJzLCBhcmd1bWVudHMpO1xuICAgIHJldHVybiB2YWx1ZSA9PT0gbGlzdGVuZXJzID8gYnJ1c2ggOiB2YWx1ZTtcbiAgfTtcblxuICByZXR1cm4gYnJ1c2g7XG59XG4iLCJleHBvcnQgdmFyIGNvcyA9IE1hdGguY29zO1xuZXhwb3J0IHZhciBzaW4gPSBNYXRoLnNpbjtcbmV4cG9ydCB2YXIgcGkgPSBNYXRoLlBJO1xuZXhwb3J0IHZhciBoYWxmUGkgPSBwaSAvIDI7XG5leHBvcnQgdmFyIHRhdSA9IHBpICogMjtcbmV4cG9ydCB2YXIgbWF4ID0gTWF0aC5tYXg7XG4iLCJpbXBvcnQge3JhbmdlfSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7bWF4LCB0YXV9IGZyb20gXCIuL21hdGhcIjtcblxuZnVuY3Rpb24gY29tcGFyZVZhbHVlKGNvbXBhcmUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGEsIGIpIHtcbiAgICByZXR1cm4gY29tcGFyZShcbiAgICAgIGEuc291cmNlLnZhbHVlICsgYS50YXJnZXQudmFsdWUsXG4gICAgICBiLnNvdXJjZS52YWx1ZSArIGIudGFyZ2V0LnZhbHVlXG4gICAgKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBwYWRBbmdsZSA9IDAsXG4gICAgICBzb3J0R3JvdXBzID0gbnVsbCxcbiAgICAgIHNvcnRTdWJncm91cHMgPSBudWxsLFxuICAgICAgc29ydENob3JkcyA9IG51bGw7XG5cbiAgZnVuY3Rpb24gY2hvcmQobWF0cml4KSB7XG4gICAgdmFyIG4gPSBtYXRyaXgubGVuZ3RoLFxuICAgICAgICBncm91cFN1bXMgPSBbXSxcbiAgICAgICAgZ3JvdXBJbmRleCA9IHJhbmdlKG4pLFxuICAgICAgICBzdWJncm91cEluZGV4ID0gW10sXG4gICAgICAgIGNob3JkcyA9IFtdLFxuICAgICAgICBncm91cHMgPSBjaG9yZHMuZ3JvdXBzID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBzdWJncm91cHMgPSBuZXcgQXJyYXkobiAqIG4pLFxuICAgICAgICBrLFxuICAgICAgICB4LFxuICAgICAgICB4MCxcbiAgICAgICAgZHgsXG4gICAgICAgIGksXG4gICAgICAgIGo7XG5cbiAgICAvLyBDb21wdXRlIHRoZSBzdW0uXG4gICAgayA9IDAsIGkgPSAtMTsgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIHggPSAwLCBqID0gLTE7IHdoaWxlICgrK2ogPCBuKSB7XG4gICAgICAgIHggKz0gbWF0cml4W2ldW2pdO1xuICAgICAgfVxuICAgICAgZ3JvdXBTdW1zLnB1c2goeCk7XG4gICAgICBzdWJncm91cEluZGV4LnB1c2gocmFuZ2UobikpO1xuICAgICAgayArPSB4O1xuICAgIH1cblxuICAgIC8vIFNvcnQgZ3JvdXBz4oCmXG4gICAgaWYgKHNvcnRHcm91cHMpIGdyb3VwSW5kZXguc29ydChmdW5jdGlvbihhLCBiKSB7XG4gICAgICByZXR1cm4gc29ydEdyb3Vwcyhncm91cFN1bXNbYV0sIGdyb3VwU3Vtc1tiXSk7XG4gICAgfSk7XG5cbiAgICAvLyBTb3J0IHN1Ymdyb3Vwc+KAplxuICAgIGlmIChzb3J0U3ViZ3JvdXBzKSBzdWJncm91cEluZGV4LmZvckVhY2goZnVuY3Rpb24oZCwgaSkge1xuICAgICAgZC5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgICAgcmV0dXJuIHNvcnRTdWJncm91cHMobWF0cml4W2ldW2FdLCBtYXRyaXhbaV1bYl0pO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICAvLyBDb252ZXJ0IHRoZSBzdW0gdG8gc2NhbGluZyBmYWN0b3IgZm9yIFswLCAycGldLlxuICAgIC8vIFRPRE8gQWxsb3cgc3RhcnQgYW5kIGVuZCBhbmdsZSB0byBiZSBzcGVjaWZpZWQ/XG4gICAgLy8gVE9ETyBBbGxvdyBwYWRkaW5nIHRvIGJlIHNwZWNpZmllZCBhcyBwZXJjZW50YWdlP1xuICAgIGsgPSBtYXgoMCwgdGF1IC0gcGFkQW5nbGUgKiBuKSAvIGs7XG4gICAgZHggPSBrID8gcGFkQW5nbGUgOiB0YXUgLyBuO1xuXG4gICAgLy8gQ29tcHV0ZSB0aGUgc3RhcnQgYW5kIGVuZCBhbmdsZSBmb3IgZWFjaCBncm91cCBhbmQgc3ViZ3JvdXAuXG4gICAgLy8gTm90ZTogT3BlcmEgaGFzIGEgYnVnIHJlb3JkZXJpbmcgb2JqZWN0IGxpdGVyYWwgcHJvcGVydGllcyFcbiAgICB4ID0gMCwgaSA9IC0xOyB3aGlsZSAoKytpIDwgbikge1xuICAgICAgeDAgPSB4LCBqID0gLTE7IHdoaWxlICgrK2ogPCBuKSB7XG4gICAgICAgIHZhciBkaSA9IGdyb3VwSW5kZXhbaV0sXG4gICAgICAgICAgICBkaiA9IHN1Ymdyb3VwSW5kZXhbZGldW2pdLFxuICAgICAgICAgICAgdiA9IG1hdHJpeFtkaV1bZGpdLFxuICAgICAgICAgICAgYTAgPSB4LFxuICAgICAgICAgICAgYTEgPSB4ICs9IHYgKiBrO1xuICAgICAgICBzdWJncm91cHNbZGogKiBuICsgZGldID0ge1xuICAgICAgICAgIGluZGV4OiBkaSxcbiAgICAgICAgICBzdWJpbmRleDogZGosXG4gICAgICAgICAgc3RhcnRBbmdsZTogYTAsXG4gICAgICAgICAgZW5kQW5nbGU6IGExLFxuICAgICAgICAgIHZhbHVlOiB2XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICBncm91cHNbZGldID0ge1xuICAgICAgICBpbmRleDogZGksXG4gICAgICAgIHN0YXJ0QW5nbGU6IHgwLFxuICAgICAgICBlbmRBbmdsZTogeCxcbiAgICAgICAgdmFsdWU6IGdyb3VwU3Vtc1tkaV1cbiAgICAgIH07XG4gICAgICB4ICs9IGR4O1xuICAgIH1cblxuICAgIC8vIEdlbmVyYXRlIGNob3JkcyBmb3IgZWFjaCAobm9uLWVtcHR5KSBzdWJncm91cC1zdWJncm91cCBsaW5rLlxuICAgIGkgPSAtMTsgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGogPSBpIC0gMTsgd2hpbGUgKCsraiA8IG4pIHtcbiAgICAgICAgdmFyIHNvdXJjZSA9IHN1Ymdyb3Vwc1tqICogbiArIGldLFxuICAgICAgICAgICAgdGFyZ2V0ID0gc3ViZ3JvdXBzW2kgKiBuICsgal07XG4gICAgICAgIGlmIChzb3VyY2UudmFsdWUgfHwgdGFyZ2V0LnZhbHVlKSB7XG4gICAgICAgICAgY2hvcmRzLnB1c2goc291cmNlLnZhbHVlIDwgdGFyZ2V0LnZhbHVlXG4gICAgICAgICAgICAgID8ge3NvdXJjZTogdGFyZ2V0LCB0YXJnZXQ6IHNvdXJjZX1cbiAgICAgICAgICAgICAgOiB7c291cmNlOiBzb3VyY2UsIHRhcmdldDogdGFyZ2V0fSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gc29ydENob3JkcyA/IGNob3Jkcy5zb3J0KHNvcnRDaG9yZHMpIDogY2hvcmRzO1xuICB9XG5cbiAgY2hvcmQucGFkQW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkQW5nbGUgPSBtYXgoMCwgXyksIGNob3JkKSA6IHBhZEFuZ2xlO1xuICB9O1xuXG4gIGNob3JkLnNvcnRHcm91cHMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc29ydEdyb3VwcyA9IF8sIGNob3JkKSA6IHNvcnRHcm91cHM7XG4gIH07XG5cbiAgY2hvcmQuc29ydFN1Ymdyb3VwcyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzb3J0U3ViZ3JvdXBzID0gXywgY2hvcmQpIDogc29ydFN1Ymdyb3VwcztcbiAgfTtcblxuICBjaG9yZC5zb3J0Q2hvcmRzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKF8gPT0gbnVsbCA/IHNvcnRDaG9yZHMgPSBudWxsIDogKHNvcnRDaG9yZHMgPSBjb21wYXJlVmFsdWUoXykpLl8gPSBfLCBjaG9yZCkgOiBzb3J0Q2hvcmRzICYmIHNvcnRDaG9yZHMuXztcbiAgfTtcblxuICByZXR1cm4gY2hvcmQ7XG59XG4iLCJleHBvcnQgdmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHg7XG4gIH07XG59XG4iLCJ2YXIgcGkgPSBNYXRoLlBJLFxuICAgIHRhdSA9IDIgKiBwaSxcbiAgICBlcHNpbG9uID0gMWUtNixcbiAgICB0YXVFcHNpbG9uID0gdGF1IC0gZXBzaWxvbjtcblxuZnVuY3Rpb24gUGF0aCgpIHtcbiAgdGhpcy5feDAgPSB0aGlzLl95MCA9IC8vIHN0YXJ0IG9mIGN1cnJlbnQgc3VicGF0aFxuICB0aGlzLl94MSA9IHRoaXMuX3kxID0gbnVsbDsgLy8gZW5kIG9mIGN1cnJlbnQgc3VicGF0aFxuICB0aGlzLl8gPSBcIlwiO1xufVxuXG5mdW5jdGlvbiBwYXRoKCkge1xuICByZXR1cm4gbmV3IFBhdGg7XG59XG5cblBhdGgucHJvdG90eXBlID0gcGF0aC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBQYXRoLFxuICBtb3ZlVG86IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB0aGlzLl8gKz0gXCJNXCIgKyAodGhpcy5feDAgPSB0aGlzLl94MSA9ICt4KSArIFwiLFwiICsgKHRoaXMuX3kwID0gdGhpcy5feTEgPSAreSk7XG4gIH0sXG4gIGNsb3NlUGF0aDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX3gxICE9PSBudWxsKSB7XG4gICAgICB0aGlzLl94MSA9IHRoaXMuX3gwLCB0aGlzLl95MSA9IHRoaXMuX3kwO1xuICAgICAgdGhpcy5fICs9IFwiWlwiO1xuICAgIH1cbiAgfSxcbiAgbGluZVRvOiBmdW5jdGlvbih4LCB5KSB7XG4gICAgdGhpcy5fICs9IFwiTFwiICsgKHRoaXMuX3gxID0gK3gpICsgXCIsXCIgKyAodGhpcy5feTEgPSAreSk7XG4gIH0sXG4gIHF1YWRyYXRpY0N1cnZlVG86IGZ1bmN0aW9uKHgxLCB5MSwgeCwgeSkge1xuICAgIHRoaXMuXyArPSBcIlFcIiArICgreDEpICsgXCIsXCIgKyAoK3kxKSArIFwiLFwiICsgKHRoaXMuX3gxID0gK3gpICsgXCIsXCIgKyAodGhpcy5feTEgPSAreSk7XG4gIH0sXG4gIGJlemllckN1cnZlVG86IGZ1bmN0aW9uKHgxLCB5MSwgeDIsIHkyLCB4LCB5KSB7XG4gICAgdGhpcy5fICs9IFwiQ1wiICsgKCt4MSkgKyBcIixcIiArICgreTEpICsgXCIsXCIgKyAoK3gyKSArIFwiLFwiICsgKCt5MikgKyBcIixcIiArICh0aGlzLl94MSA9ICt4KSArIFwiLFwiICsgKHRoaXMuX3kxID0gK3kpO1xuICB9LFxuICBhcmNUbzogZnVuY3Rpb24oeDEsIHkxLCB4MiwgeTIsIHIpIHtcbiAgICB4MSA9ICt4MSwgeTEgPSAreTEsIHgyID0gK3gyLCB5MiA9ICt5MiwgciA9ICtyO1xuICAgIHZhciB4MCA9IHRoaXMuX3gxLFxuICAgICAgICB5MCA9IHRoaXMuX3kxLFxuICAgICAgICB4MjEgPSB4MiAtIHgxLFxuICAgICAgICB5MjEgPSB5MiAtIHkxLFxuICAgICAgICB4MDEgPSB4MCAtIHgxLFxuICAgICAgICB5MDEgPSB5MCAtIHkxLFxuICAgICAgICBsMDFfMiA9IHgwMSAqIHgwMSArIHkwMSAqIHkwMTtcblxuICAgIC8vIElzIHRoZSByYWRpdXMgbmVnYXRpdmU/IEVycm9yLlxuICAgIGlmIChyIDwgMCkgdGhyb3cgbmV3IEVycm9yKFwibmVnYXRpdmUgcmFkaXVzOiBcIiArIHIpO1xuXG4gICAgLy8gSXMgdGhpcyBwYXRoIGVtcHR5PyBNb3ZlIHRvICh4MSx5MSkuXG4gICAgaWYgKHRoaXMuX3gxID09PSBudWxsKSB7XG4gICAgICB0aGlzLl8gKz0gXCJNXCIgKyAodGhpcy5feDEgPSB4MSkgKyBcIixcIiArICh0aGlzLl95MSA9IHkxKTtcbiAgICB9XG5cbiAgICAvLyBPciwgaXMgKHgxLHkxKSBjb2luY2lkZW50IHdpdGggKHgwLHkwKT8gRG8gbm90aGluZy5cbiAgICBlbHNlIGlmICghKGwwMV8yID4gZXBzaWxvbikpO1xuXG4gICAgLy8gT3IsIGFyZSAoeDAseTApLCAoeDEseTEpIGFuZCAoeDIseTIpIGNvbGxpbmVhcj9cbiAgICAvLyBFcXVpdmFsZW50bHksIGlzICh4MSx5MSkgY29pbmNpZGVudCB3aXRoICh4Mix5Mik/XG4gICAgLy8gT3IsIGlzIHRoZSByYWRpdXMgemVybz8gTGluZSB0byAoeDEseTEpLlxuICAgIGVsc2UgaWYgKCEoTWF0aC5hYnMoeTAxICogeDIxIC0geTIxICogeDAxKSA+IGVwc2lsb24pIHx8ICFyKSB7XG4gICAgICB0aGlzLl8gKz0gXCJMXCIgKyAodGhpcy5feDEgPSB4MSkgKyBcIixcIiArICh0aGlzLl95MSA9IHkxKTtcbiAgICB9XG5cbiAgICAvLyBPdGhlcndpc2UsIGRyYXcgYW4gYXJjIVxuICAgIGVsc2Uge1xuICAgICAgdmFyIHgyMCA9IHgyIC0geDAsXG4gICAgICAgICAgeTIwID0geTIgLSB5MCxcbiAgICAgICAgICBsMjFfMiA9IHgyMSAqIHgyMSArIHkyMSAqIHkyMSxcbiAgICAgICAgICBsMjBfMiA9IHgyMCAqIHgyMCArIHkyMCAqIHkyMCxcbiAgICAgICAgICBsMjEgPSBNYXRoLnNxcnQobDIxXzIpLFxuICAgICAgICAgIGwwMSA9IE1hdGguc3FydChsMDFfMiksXG4gICAgICAgICAgbCA9IHIgKiBNYXRoLnRhbigocGkgLSBNYXRoLmFjb3MoKGwyMV8yICsgbDAxXzIgLSBsMjBfMikgLyAoMiAqIGwyMSAqIGwwMSkpKSAvIDIpLFxuICAgICAgICAgIHQwMSA9IGwgLyBsMDEsXG4gICAgICAgICAgdDIxID0gbCAvIGwyMTtcblxuICAgICAgLy8gSWYgdGhlIHN0YXJ0IHRhbmdlbnQgaXMgbm90IGNvaW5jaWRlbnQgd2l0aCAoeDAseTApLCBsaW5lIHRvLlxuICAgICAgaWYgKE1hdGguYWJzKHQwMSAtIDEpID4gZXBzaWxvbikge1xuICAgICAgICB0aGlzLl8gKz0gXCJMXCIgKyAoeDEgKyB0MDEgKiB4MDEpICsgXCIsXCIgKyAoeTEgKyB0MDEgKiB5MDEpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl8gKz0gXCJBXCIgKyByICsgXCIsXCIgKyByICsgXCIsMCwwLFwiICsgKCsoeTAxICogeDIwID4geDAxICogeTIwKSkgKyBcIixcIiArICh0aGlzLl94MSA9IHgxICsgdDIxICogeDIxKSArIFwiLFwiICsgKHRoaXMuX3kxID0geTEgKyB0MjEgKiB5MjEpO1xuICAgIH1cbiAgfSxcbiAgYXJjOiBmdW5jdGlvbih4LCB5LCByLCBhMCwgYTEsIGNjdykge1xuICAgIHggPSAreCwgeSA9ICt5LCByID0gK3IsIGNjdyA9ICEhY2N3O1xuICAgIHZhciBkeCA9IHIgKiBNYXRoLmNvcyhhMCksXG4gICAgICAgIGR5ID0gciAqIE1hdGguc2luKGEwKSxcbiAgICAgICAgeDAgPSB4ICsgZHgsXG4gICAgICAgIHkwID0geSArIGR5LFxuICAgICAgICBjdyA9IDEgXiBjY3csXG4gICAgICAgIGRhID0gY2N3ID8gYTAgLSBhMSA6IGExIC0gYTA7XG5cbiAgICAvLyBJcyB0aGUgcmFkaXVzIG5lZ2F0aXZlPyBFcnJvci5cbiAgICBpZiAociA8IDApIHRocm93IG5ldyBFcnJvcihcIm5lZ2F0aXZlIHJhZGl1czogXCIgKyByKTtcblxuICAgIC8vIElzIHRoaXMgcGF0aCBlbXB0eT8gTW92ZSB0byAoeDAseTApLlxuICAgIGlmICh0aGlzLl94MSA9PT0gbnVsbCkge1xuICAgICAgdGhpcy5fICs9IFwiTVwiICsgeDAgKyBcIixcIiArIHkwO1xuICAgIH1cblxuICAgIC8vIE9yLCBpcyAoeDAseTApIG5vdCBjb2luY2lkZW50IHdpdGggdGhlIHByZXZpb3VzIHBvaW50PyBMaW5lIHRvICh4MCx5MCkuXG4gICAgZWxzZSBpZiAoTWF0aC5hYnModGhpcy5feDEgLSB4MCkgPiBlcHNpbG9uIHx8IE1hdGguYWJzKHRoaXMuX3kxIC0geTApID4gZXBzaWxvbikge1xuICAgICAgdGhpcy5fICs9IFwiTFwiICsgeDAgKyBcIixcIiArIHkwO1xuICAgIH1cblxuICAgIC8vIElzIHRoaXMgYXJjIGVtcHR5PyBXZeKAmXJlIGRvbmUuXG4gICAgaWYgKCFyKSByZXR1cm47XG5cbiAgICAvLyBEb2VzIHRoZSBhbmdsZSBnbyB0aGUgd3Jvbmcgd2F5PyBGbGlwIHRoZSBkaXJlY3Rpb24uXG4gICAgaWYgKGRhIDwgMCkgZGEgPSBkYSAlIHRhdSArIHRhdTtcblxuICAgIC8vIElzIHRoaXMgYSBjb21wbGV0ZSBjaXJjbGU/IERyYXcgdHdvIGFyY3MgdG8gY29tcGxldGUgdGhlIGNpcmNsZS5cbiAgICBpZiAoZGEgPiB0YXVFcHNpbG9uKSB7XG4gICAgICB0aGlzLl8gKz0gXCJBXCIgKyByICsgXCIsXCIgKyByICsgXCIsMCwxLFwiICsgY3cgKyBcIixcIiArICh4IC0gZHgpICsgXCIsXCIgKyAoeSAtIGR5KSArIFwiQVwiICsgciArIFwiLFwiICsgciArIFwiLDAsMSxcIiArIGN3ICsgXCIsXCIgKyAodGhpcy5feDEgPSB4MCkgKyBcIixcIiArICh0aGlzLl95MSA9IHkwKTtcbiAgICB9XG5cbiAgICAvLyBJcyB0aGlzIGFyYyBub24tZW1wdHk/IERyYXcgYW4gYXJjIVxuICAgIGVsc2UgaWYgKGRhID4gZXBzaWxvbikge1xuICAgICAgdGhpcy5fICs9IFwiQVwiICsgciArIFwiLFwiICsgciArIFwiLDAsXCIgKyAoKyhkYSA+PSBwaSkpICsgXCIsXCIgKyBjdyArIFwiLFwiICsgKHRoaXMuX3gxID0geCArIHIgKiBNYXRoLmNvcyhhMSkpICsgXCIsXCIgKyAodGhpcy5feTEgPSB5ICsgciAqIE1hdGguc2luKGExKSk7XG4gICAgfVxuICB9LFxuICByZWN0OiBmdW5jdGlvbih4LCB5LCB3LCBoKSB7XG4gICAgdGhpcy5fICs9IFwiTVwiICsgKHRoaXMuX3gwID0gdGhpcy5feDEgPSAreCkgKyBcIixcIiArICh0aGlzLl95MCA9IHRoaXMuX3kxID0gK3kpICsgXCJoXCIgKyAoK3cpICsgXCJ2XCIgKyAoK2gpICsgXCJoXCIgKyAoLXcpICsgXCJaXCI7XG4gIH0sXG4gIHRvU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBwYXRoO1xuIiwiaW1wb3J0IHtzbGljZX0gZnJvbSBcIi4vYXJyYXlcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuaW1wb3J0IHtjb3MsIGhhbGZQaSwgc2lufSBmcm9tIFwiLi9tYXRoXCI7XG5pbXBvcnQge3BhdGh9IGZyb20gXCJkMy1wYXRoXCI7XG5cbmZ1bmN0aW9uIGRlZmF1bHRTb3VyY2UoZCkge1xuICByZXR1cm4gZC5zb3VyY2U7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRUYXJnZXQoZCkge1xuICByZXR1cm4gZC50YXJnZXQ7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRSYWRpdXMoZCkge1xuICByZXR1cm4gZC5yYWRpdXM7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRTdGFydEFuZ2xlKGQpIHtcbiAgcmV0dXJuIGQuc3RhcnRBbmdsZTtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdEVuZEFuZ2xlKGQpIHtcbiAgcmV0dXJuIGQuZW5kQW5nbGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgc291cmNlID0gZGVmYXVsdFNvdXJjZSxcbiAgICAgIHRhcmdldCA9IGRlZmF1bHRUYXJnZXQsXG4gICAgICByYWRpdXMgPSBkZWZhdWx0UmFkaXVzLFxuICAgICAgc3RhcnRBbmdsZSA9IGRlZmF1bHRTdGFydEFuZ2xlLFxuICAgICAgZW5kQW5nbGUgPSBkZWZhdWx0RW5kQW5nbGUsXG4gICAgICBjb250ZXh0ID0gbnVsbDtcblxuICBmdW5jdGlvbiByaWJib24oKSB7XG4gICAgdmFyIGJ1ZmZlcixcbiAgICAgICAgYXJndiA9IHNsaWNlLmNhbGwoYXJndW1lbnRzKSxcbiAgICAgICAgcyA9IHNvdXJjZS5hcHBseSh0aGlzLCBhcmd2KSxcbiAgICAgICAgdCA9IHRhcmdldC5hcHBseSh0aGlzLCBhcmd2KSxcbiAgICAgICAgc3IgPSArcmFkaXVzLmFwcGx5KHRoaXMsIChhcmd2WzBdID0gcywgYXJndikpLFxuICAgICAgICBzYTAgPSBzdGFydEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3YpIC0gaGFsZlBpLFxuICAgICAgICBzYTEgPSBlbmRBbmdsZS5hcHBseSh0aGlzLCBhcmd2KSAtIGhhbGZQaSxcbiAgICAgICAgc3gwID0gc3IgKiBjb3Moc2EwKSxcbiAgICAgICAgc3kwID0gc3IgKiBzaW4oc2EwKSxcbiAgICAgICAgdHIgPSArcmFkaXVzLmFwcGx5KHRoaXMsIChhcmd2WzBdID0gdCwgYXJndikpLFxuICAgICAgICB0YTAgPSBzdGFydEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3YpIC0gaGFsZlBpLFxuICAgICAgICB0YTEgPSBlbmRBbmdsZS5hcHBseSh0aGlzLCBhcmd2KSAtIGhhbGZQaTtcblxuICAgIGlmICghY29udGV4dCkgY29udGV4dCA9IGJ1ZmZlciA9IHBhdGgoKTtcblxuICAgIGNvbnRleHQubW92ZVRvKHN4MCwgc3kwKTtcbiAgICBjb250ZXh0LmFyYygwLCAwLCBzciwgc2EwLCBzYTEpO1xuICAgIGlmIChzYTAgIT09IHRhMCB8fCBzYTEgIT09IHRhMSkgeyAvLyBUT0RPIHNyICE9PSB0cj9cbiAgICAgIGNvbnRleHQucXVhZHJhdGljQ3VydmVUbygwLCAwLCB0ciAqIGNvcyh0YTApLCB0ciAqIHNpbih0YTApKTtcbiAgICAgIGNvbnRleHQuYXJjKDAsIDAsIHRyLCB0YTAsIHRhMSk7XG4gICAgfVxuICAgIGNvbnRleHQucXVhZHJhdGljQ3VydmVUbygwLCAwLCBzeDAsIHN5MCk7XG4gICAgY29udGV4dC5jbG9zZVBhdGgoKTtcblxuICAgIGlmIChidWZmZXIpIHJldHVybiBjb250ZXh0ID0gbnVsbCwgYnVmZmVyICsgXCJcIiB8fCBudWxsO1xuICB9XG5cbiAgcmliYm9uLnJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyYWRpdXMgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgcmliYm9uKSA6IHJhZGl1cztcbiAgfTtcblxuICByaWJib24uc3RhcnRBbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzdGFydEFuZ2xlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHJpYmJvbikgOiBzdGFydEFuZ2xlO1xuICB9O1xuXG4gIHJpYmJvbi5lbmRBbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlbmRBbmdsZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCByaWJib24pIDogZW5kQW5nbGU7XG4gIH07XG5cbiAgcmliYm9uLnNvdXJjZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzb3VyY2UgPSBfLCByaWJib24pIDogc291cmNlO1xuICB9O1xuXG4gIHJpYmJvbi50YXJnZXQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGFyZ2V0ID0gXywgcmliYm9uKSA6IHRhcmdldDtcbiAgfTtcblxuICByaWJib24uY29udGV4dCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICgoY29udGV4dCA9IF8gPT0gbnVsbCA/IG51bGwgOiBfKSwgcmliYm9uKSA6IGNvbnRleHQ7XG4gIH07XG5cbiAgcmV0dXJuIHJpYmJvbjtcbn1cbiIsImV4cG9ydCB2YXIgcHJlZml4ID0gXCIkXCI7XG5cbmZ1bmN0aW9uIE1hcCgpIHt9XG5cbk1hcC5wcm90b3R5cGUgPSBtYXAucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogTWFwLFxuICBoYXM6IGZ1bmN0aW9uKGtleSkge1xuICAgIHJldHVybiAocHJlZml4ICsga2V5KSBpbiB0aGlzO1xuICB9LFxuICBnZXQ6IGZ1bmN0aW9uKGtleSkge1xuICAgIHJldHVybiB0aGlzW3ByZWZpeCArIGtleV07XG4gIH0sXG4gIHNldDogZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgIHRoaXNbcHJlZml4ICsga2V5XSA9IHZhbHVlO1xuICAgIHJldHVybiB0aGlzO1xuICB9LFxuICByZW1vdmU6IGZ1bmN0aW9uKGtleSkge1xuICAgIHZhciBwcm9wZXJ0eSA9IHByZWZpeCArIGtleTtcbiAgICByZXR1cm4gcHJvcGVydHkgaW4gdGhpcyAmJiBkZWxldGUgdGhpc1twcm9wZXJ0eV07XG4gIH0sXG4gIGNsZWFyOiBmdW5jdGlvbigpIHtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiB0aGlzKSBpZiAocHJvcGVydHlbMF0gPT09IHByZWZpeCkgZGVsZXRlIHRoaXNbcHJvcGVydHldO1xuICB9LFxuICBrZXlzOiBmdW5jdGlvbigpIHtcbiAgICB2YXIga2V5cyA9IFtdO1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHRoaXMpIGlmIChwcm9wZXJ0eVswXSA9PT0gcHJlZml4KSBrZXlzLnB1c2gocHJvcGVydHkuc2xpY2UoMSkpO1xuICAgIHJldHVybiBrZXlzO1xuICB9LFxuICB2YWx1ZXM6IGZ1bmN0aW9uKCkge1xuICAgIHZhciB2YWx1ZXMgPSBbXTtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiB0aGlzKSBpZiAocHJvcGVydHlbMF0gPT09IHByZWZpeCkgdmFsdWVzLnB1c2godGhpc1twcm9wZXJ0eV0pO1xuICAgIHJldHVybiB2YWx1ZXM7XG4gIH0sXG4gIGVudHJpZXM6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBlbnRyaWVzID0gW107XG4gICAgZm9yICh2YXIgcHJvcGVydHkgaW4gdGhpcykgaWYgKHByb3BlcnR5WzBdID09PSBwcmVmaXgpIGVudHJpZXMucHVzaCh7a2V5OiBwcm9wZXJ0eS5zbGljZSgxKSwgdmFsdWU6IHRoaXNbcHJvcGVydHldfSk7XG4gICAgcmV0dXJuIGVudHJpZXM7XG4gIH0sXG4gIHNpemU6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBzaXplID0gMDtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiB0aGlzKSBpZiAocHJvcGVydHlbMF0gPT09IHByZWZpeCkgKytzaXplO1xuICAgIHJldHVybiBzaXplO1xuICB9LFxuICBlbXB0eTogZnVuY3Rpb24oKSB7XG4gICAgZm9yICh2YXIgcHJvcGVydHkgaW4gdGhpcykgaWYgKHByb3BlcnR5WzBdID09PSBwcmVmaXgpIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcbiAgZWFjaDogZnVuY3Rpb24oZikge1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHRoaXMpIGlmIChwcm9wZXJ0eVswXSA9PT0gcHJlZml4KSBmKHRoaXNbcHJvcGVydHldLCBwcm9wZXJ0eS5zbGljZSgxKSwgdGhpcyk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIG1hcChvYmplY3QsIGYpIHtcbiAgdmFyIG1hcCA9IG5ldyBNYXA7XG5cbiAgLy8gQ29weSBjb25zdHJ1Y3Rvci5cbiAgaWYgKG9iamVjdCBpbnN0YW5jZW9mIE1hcCkgb2JqZWN0LmVhY2goZnVuY3Rpb24odmFsdWUsIGtleSkgeyBtYXAuc2V0KGtleSwgdmFsdWUpOyB9KTtcblxuICAvLyBJbmRleCBhcnJheSBieSBudW1lcmljIGluZGV4IG9yIHNwZWNpZmllZCBrZXkgZnVuY3Rpb24uXG4gIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkob2JqZWN0KSkge1xuICAgIHZhciBpID0gLTEsXG4gICAgICAgIG4gPSBvYmplY3QubGVuZ3RoLFxuICAgICAgICBvO1xuXG4gICAgaWYgKGYgPT0gbnVsbCkgd2hpbGUgKCsraSA8IG4pIG1hcC5zZXQoaSwgb2JqZWN0W2ldKTtcbiAgICBlbHNlIHdoaWxlICgrK2kgPCBuKSBtYXAuc2V0KGYobyA9IG9iamVjdFtpXSwgaSwgb2JqZWN0KSwgbyk7XG4gIH1cblxuICAvLyBDb252ZXJ0IG9iamVjdCB0byBtYXAuXG4gIGVsc2UgaWYgKG9iamVjdCkgZm9yICh2YXIga2V5IGluIG9iamVjdCkgbWFwLnNldChrZXksIG9iamVjdFtrZXldKTtcblxuICByZXR1cm4gbWFwO1xufVxuXG5leHBvcnQgZGVmYXVsdCBtYXA7XG4iLCJpbXBvcnQgbWFwIGZyb20gXCIuL21hcFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGtleXMgPSBbXSxcbiAgICAgIHNvcnRLZXlzID0gW10sXG4gICAgICBzb3J0VmFsdWVzLFxuICAgICAgcm9sbHVwLFxuICAgICAgbmVzdDtcblxuICBmdW5jdGlvbiBhcHBseShhcnJheSwgZGVwdGgsIGNyZWF0ZVJlc3VsdCwgc2V0UmVzdWx0KSB7XG4gICAgaWYgKGRlcHRoID49IGtleXMubGVuZ3RoKSB7XG4gICAgICBpZiAoc29ydFZhbHVlcyAhPSBudWxsKSBhcnJheS5zb3J0KHNvcnRWYWx1ZXMpO1xuICAgICAgcmV0dXJuIHJvbGx1cCAhPSBudWxsID8gcm9sbHVwKGFycmF5KSA6IGFycmF5O1xuICAgIH1cblxuICAgIHZhciBpID0gLTEsXG4gICAgICAgIG4gPSBhcnJheS5sZW5ndGgsXG4gICAgICAgIGtleSA9IGtleXNbZGVwdGgrK10sXG4gICAgICAgIGtleVZhbHVlLFxuICAgICAgICB2YWx1ZSxcbiAgICAgICAgdmFsdWVzQnlLZXkgPSBtYXAoKSxcbiAgICAgICAgdmFsdWVzLFxuICAgICAgICByZXN1bHQgPSBjcmVhdGVSZXN1bHQoKTtcblxuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpZiAodmFsdWVzID0gdmFsdWVzQnlLZXkuZ2V0KGtleVZhbHVlID0ga2V5KHZhbHVlID0gYXJyYXlbaV0pICsgXCJcIikpIHtcbiAgICAgICAgdmFsdWVzLnB1c2godmFsdWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsdWVzQnlLZXkuc2V0KGtleVZhbHVlLCBbdmFsdWVdKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YWx1ZXNCeUtleS5lYWNoKGZ1bmN0aW9uKHZhbHVlcywga2V5KSB7XG4gICAgICBzZXRSZXN1bHQocmVzdWx0LCBrZXksIGFwcGx5KHZhbHVlcywgZGVwdGgsIGNyZWF0ZVJlc3VsdCwgc2V0UmVzdWx0KSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gZW50cmllcyhtYXAsIGRlcHRoKSB7XG4gICAgaWYgKCsrZGVwdGggPiBrZXlzLmxlbmd0aCkgcmV0dXJuIG1hcDtcbiAgICB2YXIgYXJyYXksIHNvcnRLZXkgPSBzb3J0S2V5c1tkZXB0aCAtIDFdO1xuICAgIGlmIChyb2xsdXAgIT0gbnVsbCAmJiBkZXB0aCA+PSBrZXlzLmxlbmd0aCkgYXJyYXkgPSBtYXAuZW50cmllcygpO1xuICAgIGVsc2UgYXJyYXkgPSBbXSwgbWFwLmVhY2goZnVuY3Rpb24odiwgaykgeyBhcnJheS5wdXNoKHtrZXk6IGssIHZhbHVlczogZW50cmllcyh2LCBkZXB0aCl9KTsgfSk7XG4gICAgcmV0dXJuIHNvcnRLZXkgIT0gbnVsbCA/IGFycmF5LnNvcnQoZnVuY3Rpb24oYSwgYikgeyByZXR1cm4gc29ydEtleShhLmtleSwgYi5rZXkpOyB9KSA6IGFycmF5O1xuICB9XG5cbiAgcmV0dXJuIG5lc3QgPSB7XG4gICAgb2JqZWN0OiBmdW5jdGlvbihhcnJheSkgeyByZXR1cm4gYXBwbHkoYXJyYXksIDAsIGNyZWF0ZU9iamVjdCwgc2V0T2JqZWN0KTsgfSxcbiAgICBtYXA6IGZ1bmN0aW9uKGFycmF5KSB7IHJldHVybiBhcHBseShhcnJheSwgMCwgY3JlYXRlTWFwLCBzZXRNYXApOyB9LFxuICAgIGVudHJpZXM6IGZ1bmN0aW9uKGFycmF5KSB7IHJldHVybiBlbnRyaWVzKGFwcGx5KGFycmF5LCAwLCBjcmVhdGVNYXAsIHNldE1hcCksIDApOyB9LFxuICAgIGtleTogZnVuY3Rpb24oZCkgeyBrZXlzLnB1c2goZCk7IHJldHVybiBuZXN0OyB9LFxuICAgIHNvcnRLZXlzOiBmdW5jdGlvbihvcmRlcikgeyBzb3J0S2V5c1trZXlzLmxlbmd0aCAtIDFdID0gb3JkZXI7IHJldHVybiBuZXN0OyB9LFxuICAgIHNvcnRWYWx1ZXM6IGZ1bmN0aW9uKG9yZGVyKSB7IHNvcnRWYWx1ZXMgPSBvcmRlcjsgcmV0dXJuIG5lc3Q7IH0sXG4gICAgcm9sbHVwOiBmdW5jdGlvbihmKSB7IHJvbGx1cCA9IGY7IHJldHVybiBuZXN0OyB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZU9iamVjdCgpIHtcbiAgcmV0dXJuIHt9O1xufVxuXG5mdW5jdGlvbiBzZXRPYmplY3Qob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIG9iamVjdFtrZXldID0gdmFsdWU7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZU1hcCgpIHtcbiAgcmV0dXJuIG1hcCgpO1xufVxuXG5mdW5jdGlvbiBzZXRNYXAobWFwLCBrZXksIHZhbHVlKSB7XG4gIG1hcC5zZXQoa2V5LCB2YWx1ZSk7XG59XG4iLCJpbXBvcnQge2RlZmF1bHQgYXMgbWFwLCBwcmVmaXh9IGZyb20gXCIuL21hcFwiO1xuXG5mdW5jdGlvbiBTZXQoKSB7fVxuXG52YXIgcHJvdG8gPSBtYXAucHJvdG90eXBlO1xuXG5TZXQucHJvdG90eXBlID0gc2V0LnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFNldCxcbiAgaGFzOiBwcm90by5oYXMsXG4gIGFkZDogZnVuY3Rpb24odmFsdWUpIHtcbiAgICB2YWx1ZSArPSBcIlwiO1xuICAgIHRoaXNbcHJlZml4ICsgdmFsdWVdID0gdmFsdWU7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG4gIHJlbW92ZTogcHJvdG8ucmVtb3ZlLFxuICBjbGVhcjogcHJvdG8uY2xlYXIsXG4gIHZhbHVlczogcHJvdG8ua2V5cyxcbiAgc2l6ZTogcHJvdG8uc2l6ZSxcbiAgZW1wdHk6IHByb3RvLmVtcHR5LFxuICBlYWNoOiBwcm90by5lYWNoXG59O1xuXG5mdW5jdGlvbiBzZXQob2JqZWN0LCBmKSB7XG4gIHZhciBzZXQgPSBuZXcgU2V0O1xuXG4gIC8vIENvcHkgY29uc3RydWN0b3IuXG4gIGlmIChvYmplY3QgaW5zdGFuY2VvZiBTZXQpIG9iamVjdC5lYWNoKGZ1bmN0aW9uKHZhbHVlKSB7IHNldC5hZGQodmFsdWUpOyB9KTtcblxuICAvLyBPdGhlcndpc2UsIGFzc3VtZSBpdOKAmXMgYW4gYXJyYXkuXG4gIGVsc2UgaWYgKG9iamVjdCkge1xuICAgIHZhciBpID0gLTEsIG4gPSBvYmplY3QubGVuZ3RoO1xuICAgIGlmIChmID09IG51bGwpIHdoaWxlICgrK2kgPCBuKSBzZXQuYWRkKG9iamVjdFtpXSk7XG4gICAgZWxzZSB3aGlsZSAoKytpIDwgbikgc2V0LmFkZChmKG9iamVjdFtpXSwgaSwgb2JqZWN0KSk7XG4gIH1cblxuICByZXR1cm4gc2V0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBzZXQ7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihtYXApIHtcbiAgdmFyIGtleXMgPSBbXTtcbiAgZm9yICh2YXIga2V5IGluIG1hcCkga2V5cy5wdXNoKGtleSk7XG4gIHJldHVybiBrZXlzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obWFwKSB7XG4gIHZhciB2YWx1ZXMgPSBbXTtcbiAgZm9yICh2YXIga2V5IGluIG1hcCkgdmFsdWVzLnB1c2gobWFwW2tleV0pO1xuICByZXR1cm4gdmFsdWVzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obWFwKSB7XG4gIHZhciBlbnRyaWVzID0gW107XG4gIGZvciAodmFyIGtleSBpbiBtYXApIGVudHJpZXMucHVzaCh7a2V5OiBrZXksIHZhbHVlOiBtYXBba2V5XX0pO1xuICByZXR1cm4gZW50cmllcztcbn1cbiIsImV4cG9ydCB2YXIgZGVnMnJhZCA9IE1hdGguUEkgLyAxODA7XG5leHBvcnQgdmFyIHJhZDJkZWcgPSAxODAgLyBNYXRoLlBJO1xuIiwiaW1wb3J0IGRlZmluZSwge2V4dGVuZH0gZnJvbSBcIi4vZGVmaW5lLmpzXCI7XG5pbXBvcnQge0NvbG9yLCByZ2JDb252ZXJ0LCBSZ2J9IGZyb20gXCIuL2NvbG9yLmpzXCI7XG5pbXBvcnQge2RlZzJyYWQsIHJhZDJkZWd9IGZyb20gXCIuL21hdGguanNcIjtcblxuLy8gaHR0cHM6Ly9vYnNlcnZhYmxlaHEuY29tL0BtYm9zdG9jay9sYWItYW5kLXJnYlxudmFyIEsgPSAxOCxcbiAgICBYbiA9IDAuOTY0MjIsXG4gICAgWW4gPSAxLFxuICAgIFpuID0gMC44MjUyMSxcbiAgICB0MCA9IDQgLyAyOSxcbiAgICB0MSA9IDYgLyAyOSxcbiAgICB0MiA9IDMgKiB0MSAqIHQxLFxuICAgIHQzID0gdDEgKiB0MSAqIHQxO1xuXG5mdW5jdGlvbiBsYWJDb252ZXJ0KG8pIHtcbiAgaWYgKG8gaW5zdGFuY2VvZiBMYWIpIHJldHVybiBuZXcgTGFiKG8ubCwgby5hLCBvLmIsIG8ub3BhY2l0eSk7XG4gIGlmIChvIGluc3RhbmNlb2YgSGNsKSByZXR1cm4gaGNsMmxhYihvKTtcbiAgaWYgKCEobyBpbnN0YW5jZW9mIFJnYikpIG8gPSByZ2JDb252ZXJ0KG8pO1xuICB2YXIgciA9IHJnYjJscmdiKG8uciksXG4gICAgICBnID0gcmdiMmxyZ2Ioby5nKSxcbiAgICAgIGIgPSByZ2IybHJnYihvLmIpLFxuICAgICAgeSA9IHh5ejJsYWIoKDAuMjIyNTA0NSAqIHIgKyAwLjcxNjg3ODYgKiBnICsgMC4wNjA2MTY5ICogYikgLyBZbiksIHgsIHo7XG4gIGlmIChyID09PSBnICYmIGcgPT09IGIpIHggPSB6ID0geTsgZWxzZSB7XG4gICAgeCA9IHh5ejJsYWIoKDAuNDM2MDc0NyAqIHIgKyAwLjM4NTA2NDkgKiBnICsgMC4xNDMwODA0ICogYikgLyBYbik7XG4gICAgeiA9IHh5ejJsYWIoKDAuMDEzOTMyMiAqIHIgKyAwLjA5NzEwNDUgKiBnICsgMC43MTQxNzMzICogYikgLyBabik7XG4gIH1cbiAgcmV0dXJuIG5ldyBMYWIoMTE2ICogeSAtIDE2LCA1MDAgKiAoeCAtIHkpLCAyMDAgKiAoeSAtIHopLCBvLm9wYWNpdHkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ3JheShsLCBvcGFjaXR5KSB7XG4gIHJldHVybiBuZXcgTGFiKGwsIDAsIDAsIG9wYWNpdHkgPT0gbnVsbCA/IDEgOiBvcGFjaXR5KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbGFiKGwsIGEsIGIsIG9wYWNpdHkpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgPyBsYWJDb252ZXJ0KGwpIDogbmV3IExhYihsLCBhLCBiLCBvcGFjaXR5ID09IG51bGwgPyAxIDogb3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBMYWIobCwgYSwgYiwgb3BhY2l0eSkge1xuICB0aGlzLmwgPSArbDtcbiAgdGhpcy5hID0gK2E7XG4gIHRoaXMuYiA9ICtiO1xuICB0aGlzLm9wYWNpdHkgPSArb3BhY2l0eTtcbn1cblxuZGVmaW5lKExhYiwgbGFiLCBleHRlbmQoQ29sb3IsIHtcbiAgYnJpZ2h0ZXI6IGZ1bmN0aW9uKGspIHtcbiAgICByZXR1cm4gbmV3IExhYih0aGlzLmwgKyBLICogKGsgPT0gbnVsbCA/IDEgOiBrKSwgdGhpcy5hLCB0aGlzLmIsIHRoaXMub3BhY2l0eSk7XG4gIH0sXG4gIGRhcmtlcjogZnVuY3Rpb24oaykge1xuICAgIHJldHVybiBuZXcgTGFiKHRoaXMubCAtIEsgKiAoayA9PSBudWxsID8gMSA6IGspLCB0aGlzLmEsIHRoaXMuYiwgdGhpcy5vcGFjaXR5KTtcbiAgfSxcbiAgcmdiOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgeSA9ICh0aGlzLmwgKyAxNikgLyAxMTYsXG4gICAgICAgIHggPSBpc05hTih0aGlzLmEpID8geSA6IHkgKyB0aGlzLmEgLyA1MDAsXG4gICAgICAgIHogPSBpc05hTih0aGlzLmIpID8geSA6IHkgLSB0aGlzLmIgLyAyMDA7XG4gICAgeCA9IFhuICogbGFiMnh5eih4KTtcbiAgICB5ID0gWW4gKiBsYWIyeHl6KHkpO1xuICAgIHogPSBabiAqIGxhYjJ4eXooeik7XG4gICAgcmV0dXJuIG5ldyBSZ2IoXG4gICAgICBscmdiMnJnYiggMy4xMzM4NTYxICogeCAtIDEuNjE2ODY2NyAqIHkgLSAwLjQ5MDYxNDYgKiB6KSxcbiAgICAgIGxyZ2IycmdiKC0wLjk3ODc2ODQgKiB4ICsgMS45MTYxNDE1ICogeSArIDAuMDMzNDU0MCAqIHopLFxuICAgICAgbHJnYjJyZ2IoIDAuMDcxOTQ1MyAqIHggLSAwLjIyODk5MTQgKiB5ICsgMS40MDUyNDI3ICogeiksXG4gICAgICB0aGlzLm9wYWNpdHlcbiAgICApO1xuICB9XG59KSk7XG5cbmZ1bmN0aW9uIHh5ejJsYWIodCkge1xuICByZXR1cm4gdCA+IHQzID8gTWF0aC5wb3codCwgMSAvIDMpIDogdCAvIHQyICsgdDA7XG59XG5cbmZ1bmN0aW9uIGxhYjJ4eXoodCkge1xuICByZXR1cm4gdCA+IHQxID8gdCAqIHQgKiB0IDogdDIgKiAodCAtIHQwKTtcbn1cblxuZnVuY3Rpb24gbHJnYjJyZ2IoeCkge1xuICByZXR1cm4gMjU1ICogKHggPD0gMC4wMDMxMzA4ID8gMTIuOTIgKiB4IDogMS4wNTUgKiBNYXRoLnBvdyh4LCAxIC8gMi40KSAtIDAuMDU1KTtcbn1cblxuZnVuY3Rpb24gcmdiMmxyZ2IoeCkge1xuICByZXR1cm4gKHggLz0gMjU1KSA8PSAwLjA0MDQ1ID8geCAvIDEyLjkyIDogTWF0aC5wb3coKHggKyAwLjA1NSkgLyAxLjA1NSwgMi40KTtcbn1cblxuZnVuY3Rpb24gaGNsQ29udmVydChvKSB7XG4gIGlmIChvIGluc3RhbmNlb2YgSGNsKSByZXR1cm4gbmV3IEhjbChvLmgsIG8uYywgby5sLCBvLm9wYWNpdHkpO1xuICBpZiAoIShvIGluc3RhbmNlb2YgTGFiKSkgbyA9IGxhYkNvbnZlcnQobyk7XG4gIGlmIChvLmEgPT09IDAgJiYgby5iID09PSAwKSByZXR1cm4gbmV3IEhjbChOYU4sIDAgPCBvLmwgJiYgby5sIDwgMTAwID8gMCA6IE5hTiwgby5sLCBvLm9wYWNpdHkpO1xuICB2YXIgaCA9IE1hdGguYXRhbjIoby5iLCBvLmEpICogcmFkMmRlZztcbiAgcmV0dXJuIG5ldyBIY2woaCA8IDAgPyBoICsgMzYwIDogaCwgTWF0aC5zcXJ0KG8uYSAqIG8uYSArIG8uYiAqIG8uYiksIG8ubCwgby5vcGFjaXR5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxjaChsLCBjLCBoLCBvcGFjaXR5KSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gaGNsQ29udmVydChsKSA6IG5ldyBIY2woaCwgYywgbCwgb3BhY2l0eSA9PSBudWxsID8gMSA6IG9wYWNpdHkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaGNsKGgsIGMsIGwsIG9wYWNpdHkpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgPyBoY2xDb252ZXJ0KGgpIDogbmV3IEhjbChoLCBjLCBsLCBvcGFjaXR5ID09IG51bGwgPyAxIDogb3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBIY2woaCwgYywgbCwgb3BhY2l0eSkge1xuICB0aGlzLmggPSAraDtcbiAgdGhpcy5jID0gK2M7XG4gIHRoaXMubCA9ICtsO1xuICB0aGlzLm9wYWNpdHkgPSArb3BhY2l0eTtcbn1cblxuZnVuY3Rpb24gaGNsMmxhYihvKSB7XG4gIGlmIChpc05hTihvLmgpKSByZXR1cm4gbmV3IExhYihvLmwsIDAsIDAsIG8ub3BhY2l0eSk7XG4gIHZhciBoID0gby5oICogZGVnMnJhZDtcbiAgcmV0dXJuIG5ldyBMYWIoby5sLCBNYXRoLmNvcyhoKSAqIG8uYywgTWF0aC5zaW4oaCkgKiBvLmMsIG8ub3BhY2l0eSk7XG59XG5cbmRlZmluZShIY2wsIGhjbCwgZXh0ZW5kKENvbG9yLCB7XG4gIGJyaWdodGVyOiBmdW5jdGlvbihrKSB7XG4gICAgcmV0dXJuIG5ldyBIY2wodGhpcy5oLCB0aGlzLmMsIHRoaXMubCArIEsgKiAoayA9PSBudWxsID8gMSA6IGspLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICBkYXJrZXI6IGZ1bmN0aW9uKGspIHtcbiAgICByZXR1cm4gbmV3IEhjbCh0aGlzLmgsIHRoaXMuYywgdGhpcy5sIC0gSyAqIChrID09IG51bGwgPyAxIDogayksIHRoaXMub3BhY2l0eSk7XG4gIH0sXG4gIHJnYjogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGhjbDJsYWIodGhpcykucmdiKCk7XG4gIH1cbn0pKTtcbiIsImltcG9ydCBkZWZpbmUsIHtleHRlbmR9IGZyb20gXCIuL2RlZmluZS5qc1wiO1xuaW1wb3J0IHtDb2xvciwgcmdiQ29udmVydCwgUmdiLCBkYXJrZXIsIGJyaWdodGVyfSBmcm9tIFwiLi9jb2xvci5qc1wiO1xuaW1wb3J0IHtkZWcycmFkLCByYWQyZGVnfSBmcm9tIFwiLi9tYXRoLmpzXCI7XG5cbnZhciBBID0gLTAuMTQ4NjEsXG4gICAgQiA9ICsxLjc4Mjc3LFxuICAgIEMgPSAtMC4yOTIyNyxcbiAgICBEID0gLTAuOTA2NDksXG4gICAgRSA9ICsxLjk3Mjk0LFxuICAgIEVEID0gRSAqIEQsXG4gICAgRUIgPSBFICogQixcbiAgICBCQ19EQSA9IEIgKiBDIC0gRCAqIEE7XG5cbmZ1bmN0aW9uIGN1YmVoZWxpeENvbnZlcnQobykge1xuICBpZiAobyBpbnN0YW5jZW9mIEN1YmVoZWxpeCkgcmV0dXJuIG5ldyBDdWJlaGVsaXgoby5oLCBvLnMsIG8ubCwgby5vcGFjaXR5KTtcbiAgaWYgKCEobyBpbnN0YW5jZW9mIFJnYikpIG8gPSByZ2JDb252ZXJ0KG8pO1xuICB2YXIgciA9IG8uciAvIDI1NSxcbiAgICAgIGcgPSBvLmcgLyAyNTUsXG4gICAgICBiID0gby5iIC8gMjU1LFxuICAgICAgbCA9IChCQ19EQSAqIGIgKyBFRCAqIHIgLSBFQiAqIGcpIC8gKEJDX0RBICsgRUQgLSBFQiksXG4gICAgICBibCA9IGIgLSBsLFxuICAgICAgayA9IChFICogKGcgLSBsKSAtIEMgKiBibCkgLyBELFxuICAgICAgcyA9IE1hdGguc3FydChrICogayArIGJsICogYmwpIC8gKEUgKiBsICogKDEgLSBsKSksIC8vIE5hTiBpZiBsPTAgb3IgbD0xXG4gICAgICBoID0gcyA/IE1hdGguYXRhbjIoaywgYmwpICogcmFkMmRlZyAtIDEyMCA6IE5hTjtcbiAgcmV0dXJuIG5ldyBDdWJlaGVsaXgoaCA8IDAgPyBoICsgMzYwIDogaCwgcywgbCwgby5vcGFjaXR5KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3ViZWhlbGl4KGgsIHMsIGwsIG9wYWNpdHkpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgPyBjdWJlaGVsaXhDb252ZXJ0KGgpIDogbmV3IEN1YmVoZWxpeChoLCBzLCBsLCBvcGFjaXR5ID09IG51bGwgPyAxIDogb3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBDdWJlaGVsaXgoaCwgcywgbCwgb3BhY2l0eSkge1xuICB0aGlzLmggPSAraDtcbiAgdGhpcy5zID0gK3M7XG4gIHRoaXMubCA9ICtsO1xuICB0aGlzLm9wYWNpdHkgPSArb3BhY2l0eTtcbn1cblxuZGVmaW5lKEN1YmVoZWxpeCwgY3ViZWhlbGl4LCBleHRlbmQoQ29sb3IsIHtcbiAgYnJpZ2h0ZXI6IGZ1bmN0aW9uKGspIHtcbiAgICBrID0gayA9PSBudWxsID8gYnJpZ2h0ZXIgOiBNYXRoLnBvdyhicmlnaHRlciwgayk7XG4gICAgcmV0dXJuIG5ldyBDdWJlaGVsaXgodGhpcy5oLCB0aGlzLnMsIHRoaXMubCAqIGssIHRoaXMub3BhY2l0eSk7XG4gIH0sXG4gIGRhcmtlcjogZnVuY3Rpb24oaykge1xuICAgIGsgPSBrID09IG51bGwgPyBkYXJrZXIgOiBNYXRoLnBvdyhkYXJrZXIsIGspO1xuICAgIHJldHVybiBuZXcgQ3ViZWhlbGl4KHRoaXMuaCwgdGhpcy5zLCB0aGlzLmwgKiBrLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICByZ2I6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBoID0gaXNOYU4odGhpcy5oKSA/IDAgOiAodGhpcy5oICsgMTIwKSAqIGRlZzJyYWQsXG4gICAgICAgIGwgPSArdGhpcy5sLFxuICAgICAgICBhID0gaXNOYU4odGhpcy5zKSA/IDAgOiB0aGlzLnMgKiBsICogKDEgLSBsKSxcbiAgICAgICAgY29zaCA9IE1hdGguY29zKGgpLFxuICAgICAgICBzaW5oID0gTWF0aC5zaW4oaCk7XG4gICAgcmV0dXJuIG5ldyBSZ2IoXG4gICAgICAyNTUgKiAobCArIGEgKiAoQSAqIGNvc2ggKyBCICogc2luaCkpLFxuICAgICAgMjU1ICogKGwgKyBhICogKEMgKiBjb3NoICsgRCAqIHNpbmgpKSxcbiAgICAgIDI1NSAqIChsICsgYSAqIChFICogY29zaCkpLFxuICAgICAgdGhpcy5vcGFjaXR5XG4gICAgKTtcbiAgfVxufSkpO1xuIiwidmFyIGFycmF5ID0gQXJyYXkucHJvdG90eXBlO1xuXG5leHBvcnQgdmFyIHNsaWNlID0gYXJyYXkuc2xpY2U7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHJldHVybiBhIC0gYjtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocmluZywgaG9sZSkge1xuICB2YXIgaSA9IC0xLCBuID0gaG9sZS5sZW5ndGgsIGM7XG4gIHdoaWxlICgrK2kgPCBuKSBpZiAoYyA9IHJpbmdDb250YWlucyhyaW5nLCBob2xlW2ldKSkgcmV0dXJuIGM7XG4gIHJldHVybiAwO1xufVxuXG5mdW5jdGlvbiByaW5nQ29udGFpbnMocmluZywgcG9pbnQpIHtcbiAgdmFyIHggPSBwb2ludFswXSwgeSA9IHBvaW50WzFdLCBjb250YWlucyA9IC0xO1xuICBmb3IgKHZhciBpID0gMCwgbiA9IHJpbmcubGVuZ3RoLCBqID0gbiAtIDE7IGkgPCBuOyBqID0gaSsrKSB7XG4gICAgdmFyIHBpID0gcmluZ1tpXSwgeGkgPSBwaVswXSwgeWkgPSBwaVsxXSwgcGogPSByaW5nW2pdLCB4aiA9IHBqWzBdLCB5aiA9IHBqWzFdO1xuICAgIGlmIChzZWdtZW50Q29udGFpbnMocGksIHBqLCBwb2ludCkpIHJldHVybiAwO1xuICAgIGlmICgoKHlpID4geSkgIT09ICh5aiA+IHkpKSAmJiAoKHggPCAoeGogLSB4aSkgKiAoeSAtIHlpKSAvICh5aiAtIHlpKSArIHhpKSkpIGNvbnRhaW5zID0gLWNvbnRhaW5zO1xuICB9XG4gIHJldHVybiBjb250YWlucztcbn1cblxuZnVuY3Rpb24gc2VnbWVudENvbnRhaW5zKGEsIGIsIGMpIHtcbiAgdmFyIGk7IHJldHVybiBjb2xsaW5lYXIoYSwgYiwgYykgJiYgd2l0aGluKGFbaSA9ICsoYVswXSA9PT0gYlswXSldLCBjW2ldLCBiW2ldKTtcbn1cblxuZnVuY3Rpb24gY29sbGluZWFyKGEsIGIsIGMpIHtcbiAgcmV0dXJuIChiWzBdIC0gYVswXSkgKiAoY1sxXSAtIGFbMV0pID09PSAoY1swXSAtIGFbMF0pICogKGJbMV0gLSBhWzFdKTtcbn1cblxuZnVuY3Rpb24gd2l0aGluKHAsIHEsIHIpIHtcbiAgcmV0dXJuIHAgPD0gcSAmJiBxIDw9IHIgfHwgciA8PSBxICYmIHEgPD0gcDtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge31cbiIsImltcG9ydCB7ZXh0ZW50LCB0aHJlc2hvbGRTdHVyZ2VzLCB0aWNrU3RlcCwgcmFuZ2V9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHtzbGljZX0gZnJvbSBcIi4vYXJyYXlcIjtcbmltcG9ydCBhc2NlbmRpbmcgZnJvbSBcIi4vYXNjZW5kaW5nXCI7XG5pbXBvcnQgYXJlYSBmcm9tIFwiLi9hcmVhXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCBjb250YWlucyBmcm9tIFwiLi9jb250YWluc1wiO1xuaW1wb3J0IG5vb3AgZnJvbSBcIi4vbm9vcFwiO1xuXG52YXIgY2FzZXMgPSBbXG4gIFtdLFxuICBbW1sxLjAsIDEuNV0sIFswLjUsIDEuMF1dXSxcbiAgW1tbMS41LCAxLjBdLCBbMS4wLCAxLjVdXV0sXG4gIFtbWzEuNSwgMS4wXSwgWzAuNSwgMS4wXV1dLFxuICBbW1sxLjAsIDAuNV0sIFsxLjUsIDEuMF1dXSxcbiAgW1tbMS4wLCAxLjVdLCBbMC41LCAxLjBdXSwgW1sxLjAsIDAuNV0sIFsxLjUsIDEuMF1dXSxcbiAgW1tbMS4wLCAwLjVdLCBbMS4wLCAxLjVdXV0sXG4gIFtbWzEuMCwgMC41XSwgWzAuNSwgMS4wXV1dLFxuICBbW1swLjUsIDEuMF0sIFsxLjAsIDAuNV1dXSxcbiAgW1tbMS4wLCAxLjVdLCBbMS4wLCAwLjVdXV0sXG4gIFtbWzAuNSwgMS4wXSwgWzEuMCwgMC41XV0sIFtbMS41LCAxLjBdLCBbMS4wLCAxLjVdXV0sXG4gIFtbWzEuNSwgMS4wXSwgWzEuMCwgMC41XV1dLFxuICBbW1swLjUsIDEuMF0sIFsxLjUsIDEuMF1dXSxcbiAgW1tbMS4wLCAxLjVdLCBbMS41LCAxLjBdXV0sXG4gIFtbWzAuNSwgMS4wXSwgWzEuMCwgMS41XV1dLFxuICBbXVxuXTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBkeCA9IDEsXG4gICAgICBkeSA9IDEsXG4gICAgICB0aHJlc2hvbGQgPSB0aHJlc2hvbGRTdHVyZ2VzLFxuICAgICAgc21vb3RoID0gc21vb3RoTGluZWFyO1xuXG4gIGZ1bmN0aW9uIGNvbnRvdXJzKHZhbHVlcykge1xuICAgIHZhciB0eiA9IHRocmVzaG9sZCh2YWx1ZXMpO1xuXG4gICAgLy8gQ29udmVydCBudW1iZXIgb2YgdGhyZXNob2xkcyBpbnRvIHVuaWZvcm0gdGhyZXNob2xkcy5cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodHopKSB7XG4gICAgICB2YXIgZG9tYWluID0gZXh0ZW50KHZhbHVlcyksIHN0YXJ0ID0gZG9tYWluWzBdLCBzdG9wID0gZG9tYWluWzFdO1xuICAgICAgdHogPSB0aWNrU3RlcChzdGFydCwgc3RvcCwgdHopO1xuICAgICAgdHogPSByYW5nZShNYXRoLmZsb29yKHN0YXJ0IC8gdHopICogdHosIE1hdGguZmxvb3Ioc3RvcCAvIHR6KSAqIHR6LCB0eik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHR6ID0gdHouc2xpY2UoKS5zb3J0KGFzY2VuZGluZyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHR6Lm1hcChmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgcmV0dXJuIGNvbnRvdXIodmFsdWVzLCB2YWx1ZSk7XG4gICAgfSk7XG4gIH1cblxuICAvLyBBY2N1bXVsYXRlLCBzbW9vdGggY29udG91ciByaW5ncywgYXNzaWduIGhvbGVzIHRvIGV4dGVyaW9yIHJpbmdzLlxuICAvLyBCYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vbWJvc3RvY2svc2hhcGVmaWxlL2Jsb2IvdjAuNi4yL3NocC9wb2x5Z29uLmpzXG4gIGZ1bmN0aW9uIGNvbnRvdXIodmFsdWVzLCB2YWx1ZSkge1xuICAgIHZhciBwb2x5Z29ucyA9IFtdLFxuICAgICAgICBob2xlcyA9IFtdO1xuXG4gICAgaXNvcmluZ3ModmFsdWVzLCB2YWx1ZSwgZnVuY3Rpb24ocmluZykge1xuICAgICAgc21vb3RoKHJpbmcsIHZhbHVlcywgdmFsdWUpO1xuICAgICAgaWYgKGFyZWEocmluZykgPiAwKSBwb2x5Z29ucy5wdXNoKFtyaW5nXSk7XG4gICAgICBlbHNlIGhvbGVzLnB1c2gocmluZyk7XG4gICAgfSk7XG5cbiAgICBob2xlcy5mb3JFYWNoKGZ1bmN0aW9uKGhvbGUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwLCBuID0gcG9seWdvbnMubGVuZ3RoLCBwb2x5Z29uOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGlmIChjb250YWlucygocG9seWdvbiA9IHBvbHlnb25zW2ldKVswXSwgaG9sZSkgIT09IC0xKSB7XG4gICAgICAgICAgcG9seWdvbi5wdXNoKGhvbGUpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFwiTXVsdGlQb2x5Z29uXCIsXG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBjb29yZGluYXRlczogcG9seWdvbnNcbiAgICB9O1xuICB9XG5cbiAgLy8gTWFyY2hpbmcgc3F1YXJlcyB3aXRoIGlzb2xpbmVzIHN0aXRjaGVkIGludG8gcmluZ3MuXG4gIC8vIEJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS90b3BvanNvbi90b3BvanNvbi1jbGllbnQvYmxvYi92My4wLjAvc3JjL3N0aXRjaC5qc1xuICBmdW5jdGlvbiBpc29yaW5ncyh2YWx1ZXMsIHZhbHVlLCBjYWxsYmFjaykge1xuICAgIHZhciBmcmFnbWVudEJ5U3RhcnQgPSBuZXcgQXJyYXksXG4gICAgICAgIGZyYWdtZW50QnlFbmQgPSBuZXcgQXJyYXksXG4gICAgICAgIHgsIHksIHQwLCB0MSwgdDIsIHQzO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIGZvciB0aGUgZmlyc3Qgcm93ICh5ID0gLTEsIHQyID0gdDMgPSAwKS5cbiAgICB4ID0geSA9IC0xO1xuICAgIHQxID0gdmFsdWVzWzBdID49IHZhbHVlO1xuICAgIGNhc2VzW3QxIDw8IDFdLmZvckVhY2goc3RpdGNoKTtcbiAgICB3aGlsZSAoKyt4IDwgZHggLSAxKSB7XG4gICAgICB0MCA9IHQxLCB0MSA9IHZhbHVlc1t4ICsgMV0gPj0gdmFsdWU7XG4gICAgICBjYXNlc1t0MCB8IHQxIDw8IDFdLmZvckVhY2goc3RpdGNoKTtcbiAgICB9XG4gICAgY2FzZXNbdDEgPDwgMF0uZm9yRWFjaChzdGl0Y2gpO1xuXG4gICAgLy8gR2VuZXJhbCBjYXNlIGZvciB0aGUgaW50ZXJtZWRpYXRlIHJvd3MuXG4gICAgd2hpbGUgKCsreSA8IGR5IC0gMSkge1xuICAgICAgeCA9IC0xO1xuICAgICAgdDEgPSB2YWx1ZXNbeSAqIGR4ICsgZHhdID49IHZhbHVlO1xuICAgICAgdDIgPSB2YWx1ZXNbeSAqIGR4XSA+PSB2YWx1ZTtcbiAgICAgIGNhc2VzW3QxIDw8IDEgfCB0MiA8PCAyXS5mb3JFYWNoKHN0aXRjaCk7XG4gICAgICB3aGlsZSAoKyt4IDwgZHggLSAxKSB7XG4gICAgICAgIHQwID0gdDEsIHQxID0gdmFsdWVzW3kgKiBkeCArIGR4ICsgeCArIDFdID49IHZhbHVlO1xuICAgICAgICB0MyA9IHQyLCB0MiA9IHZhbHVlc1t5ICogZHggKyB4ICsgMV0gPj0gdmFsdWU7XG4gICAgICAgIGNhc2VzW3QwIHwgdDEgPDwgMSB8IHQyIDw8IDIgfCB0MyA8PCAzXS5mb3JFYWNoKHN0aXRjaCk7XG4gICAgICB9XG4gICAgICBjYXNlc1t0MSB8IHQyIDw8IDNdLmZvckVhY2goc3RpdGNoKTtcbiAgICB9XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgZm9yIHRoZSBsYXN0IHJvdyAoeSA9IGR5IC0gMSwgdDAgPSB0MSA9IDApLlxuICAgIHggPSAtMTtcbiAgICB0MiA9IHZhbHVlc1t5ICogZHhdID49IHZhbHVlO1xuICAgIGNhc2VzW3QyIDw8IDJdLmZvckVhY2goc3RpdGNoKTtcbiAgICB3aGlsZSAoKyt4IDwgZHggLSAxKSB7XG4gICAgICB0MyA9IHQyLCB0MiA9IHZhbHVlc1t5ICogZHggKyB4ICsgMV0gPj0gdmFsdWU7XG4gICAgICBjYXNlc1t0MiA8PCAyIHwgdDMgPDwgM10uZm9yRWFjaChzdGl0Y2gpO1xuICAgIH1cbiAgICBjYXNlc1t0MiA8PCAzXS5mb3JFYWNoKHN0aXRjaCk7XG5cbiAgICBmdW5jdGlvbiBzdGl0Y2gobGluZSkge1xuICAgICAgdmFyIHN0YXJ0ID0gW2xpbmVbMF1bMF0gKyB4LCBsaW5lWzBdWzFdICsgeV0sXG4gICAgICAgICAgZW5kID0gW2xpbmVbMV1bMF0gKyB4LCBsaW5lWzFdWzFdICsgeV0sXG4gICAgICAgICAgc3RhcnRJbmRleCA9IGluZGV4KHN0YXJ0KSxcbiAgICAgICAgICBlbmRJbmRleCA9IGluZGV4KGVuZCksXG4gICAgICAgICAgZiwgZztcbiAgICAgIGlmIChmID0gZnJhZ21lbnRCeUVuZFtzdGFydEluZGV4XSkge1xuICAgICAgICBpZiAoZyA9IGZyYWdtZW50QnlTdGFydFtlbmRJbmRleF0pIHtcbiAgICAgICAgICBkZWxldGUgZnJhZ21lbnRCeUVuZFtmLmVuZF07XG4gICAgICAgICAgZGVsZXRlIGZyYWdtZW50QnlTdGFydFtnLnN0YXJ0XTtcbiAgICAgICAgICBpZiAoZiA9PT0gZykge1xuICAgICAgICAgICAgZi5yaW5nLnB1c2goZW5kKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKGYucmluZyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZyYWdtZW50QnlTdGFydFtmLnN0YXJ0XSA9IGZyYWdtZW50QnlFbmRbZy5lbmRdID0ge3N0YXJ0OiBmLnN0YXJ0LCBlbmQ6IGcuZW5kLCByaW5nOiBmLnJpbmcuY29uY2F0KGcucmluZyl9O1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkZWxldGUgZnJhZ21lbnRCeUVuZFtmLmVuZF07XG4gICAgICAgICAgZi5yaW5nLnB1c2goZW5kKTtcbiAgICAgICAgICBmcmFnbWVudEJ5RW5kW2YuZW5kID0gZW5kSW5kZXhdID0gZjtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChmID0gZnJhZ21lbnRCeVN0YXJ0W2VuZEluZGV4XSkge1xuICAgICAgICBpZiAoZyA9IGZyYWdtZW50QnlFbmRbc3RhcnRJbmRleF0pIHtcbiAgICAgICAgICBkZWxldGUgZnJhZ21lbnRCeVN0YXJ0W2Yuc3RhcnRdO1xuICAgICAgICAgIGRlbGV0ZSBmcmFnbWVudEJ5RW5kW2cuZW5kXTtcbiAgICAgICAgICBpZiAoZiA9PT0gZykge1xuICAgICAgICAgICAgZi5yaW5nLnB1c2goZW5kKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKGYucmluZyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZyYWdtZW50QnlTdGFydFtnLnN0YXJ0XSA9IGZyYWdtZW50QnlFbmRbZi5lbmRdID0ge3N0YXJ0OiBnLnN0YXJ0LCBlbmQ6IGYuZW5kLCByaW5nOiBnLnJpbmcuY29uY2F0KGYucmluZyl9O1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkZWxldGUgZnJhZ21lbnRCeVN0YXJ0W2Yuc3RhcnRdO1xuICAgICAgICAgIGYucmluZy51bnNoaWZ0KHN0YXJ0KTtcbiAgICAgICAgICBmcmFnbWVudEJ5U3RhcnRbZi5zdGFydCA9IHN0YXJ0SW5kZXhdID0gZjtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZnJhZ21lbnRCeVN0YXJ0W3N0YXJ0SW5kZXhdID0gZnJhZ21lbnRCeUVuZFtlbmRJbmRleF0gPSB7c3RhcnQ6IHN0YXJ0SW5kZXgsIGVuZDogZW5kSW5kZXgsIHJpbmc6IFtzdGFydCwgZW5kXX07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaW5kZXgocG9pbnQpIHtcbiAgICByZXR1cm4gcG9pbnRbMF0gKiAyICsgcG9pbnRbMV0gKiAoZHggKyAxKSAqIDQ7XG4gIH1cblxuICBmdW5jdGlvbiBzbW9vdGhMaW5lYXIocmluZywgdmFsdWVzLCB2YWx1ZSkge1xuICAgIHJpbmcuZm9yRWFjaChmdW5jdGlvbihwb2ludCkge1xuICAgICAgdmFyIHggPSBwb2ludFswXSxcbiAgICAgICAgICB5ID0gcG9pbnRbMV0sXG4gICAgICAgICAgeHQgPSB4IHwgMCxcbiAgICAgICAgICB5dCA9IHkgfCAwLFxuICAgICAgICAgIHYwLFxuICAgICAgICAgIHYxID0gdmFsdWVzW3l0ICogZHggKyB4dF07XG4gICAgICBpZiAoeCA+IDAgJiYgeCA8IGR4ICYmIHh0ID09PSB4KSB7XG4gICAgICAgIHYwID0gdmFsdWVzW3l0ICogZHggKyB4dCAtIDFdO1xuICAgICAgICBwb2ludFswXSA9IHggKyAodmFsdWUgLSB2MCkgLyAodjEgLSB2MCkgLSAwLjU7XG4gICAgICB9XG4gICAgICBpZiAoeSA+IDAgJiYgeSA8IGR5ICYmIHl0ID09PSB5KSB7XG4gICAgICAgIHYwID0gdmFsdWVzWyh5dCAtIDEpICogZHggKyB4dF07XG4gICAgICAgIHBvaW50WzFdID0geSArICh2YWx1ZSAtIHYwKSAvICh2MSAtIHYwKSAtIDAuNTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGNvbnRvdXJzLmNvbnRvdXIgPSBjb250b3VyO1xuXG4gIGNvbnRvdXJzLnNpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gW2R4LCBkeV07XG4gICAgdmFyIF8wID0gTWF0aC5jZWlsKF9bMF0pLCBfMSA9IE1hdGguY2VpbChfWzFdKTtcbiAgICBpZiAoIShfMCA+IDApIHx8ICEoXzEgPiAwKSkgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBzaXplXCIpO1xuICAgIHJldHVybiBkeCA9IF8wLCBkeSA9IF8xLCBjb250b3VycztcbiAgfTtcblxuICBjb250b3Vycy50aHJlc2hvbGRzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRocmVzaG9sZCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogQXJyYXkuaXNBcnJheShfKSA/IGNvbnN0YW50KHNsaWNlLmNhbGwoXykpIDogY29uc3RhbnQoXyksIGNvbnRvdXJzKSA6IHRocmVzaG9sZDtcbiAgfTtcblxuICBjb250b3Vycy5zbW9vdGggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc21vb3RoID0gXyA/IHNtb290aExpbmVhciA6IG5vb3AsIGNvbnRvdXJzKSA6IHNtb290aCA9PT0gc21vb3RoTGluZWFyO1xuICB9O1xuXG4gIHJldHVybiBjb250b3Vycztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHJpbmcpIHtcbiAgdmFyIGkgPSAwLCBuID0gcmluZy5sZW5ndGgsIGFyZWEgPSByaW5nW24gLSAxXVsxXSAqIHJpbmdbMF1bMF0gLSByaW5nW24gLSAxXVswXSAqIHJpbmdbMF1bMV07XG4gIHdoaWxlICgrK2kgPCBuKSBhcmVhICs9IHJpbmdbaSAtIDFdWzFdICogcmluZ1tpXVswXSAtIHJpbmdbaSAtIDFdWzBdICogcmluZ1tpXVsxXTtcbiAgcmV0dXJuIGFyZWE7XG59XG4iLCIvLyBUT0RPIE9wdGltaXplIGVkZ2UgY2FzZXMuXG4vLyBUT0RPIE9wdGltaXplIGluZGV4IGNhbGN1bGF0aW9uLlxuLy8gVE9ETyBPcHRpbWl6ZSBhcmd1bWVudHMuXG5leHBvcnQgZnVuY3Rpb24gYmx1clgoc291cmNlLCB0YXJnZXQsIHIpIHtcbiAgdmFyIG4gPSBzb3VyY2Uud2lkdGgsXG4gICAgICBtID0gc291cmNlLmhlaWdodCxcbiAgICAgIHcgPSAociA8PCAxKSArIDE7XG4gIGZvciAodmFyIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIHNyID0gMDsgaSA8IG4gKyByOyArK2kpIHtcbiAgICAgIGlmIChpIDwgbikge1xuICAgICAgICBzciArPSBzb3VyY2UuZGF0YVtpICsgaiAqIG5dO1xuICAgICAgfVxuICAgICAgaWYgKGkgPj0gcikge1xuICAgICAgICBpZiAoaSA+PSB3KSB7XG4gICAgICAgICAgc3IgLT0gc291cmNlLmRhdGFbaSAtIHcgKyBqICogbl07XG4gICAgICAgIH1cbiAgICAgICAgdGFyZ2V0LmRhdGFbaSAtIHIgKyBqICogbl0gPSBzciAvIE1hdGgubWluKGkgKyAxLCBuIC0gMSArIHcgLSBpLCB3KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLy8gVE9ETyBPcHRpbWl6ZSBlZGdlIGNhc2VzLlxuLy8gVE9ETyBPcHRpbWl6ZSBpbmRleCBjYWxjdWxhdGlvbi5cbi8vIFRPRE8gT3B0aW1pemUgYXJndW1lbnRzLlxuZXhwb3J0IGZ1bmN0aW9uIGJsdXJZKHNvdXJjZSwgdGFyZ2V0LCByKSB7XG4gIHZhciBuID0gc291cmNlLndpZHRoLFxuICAgICAgbSA9IHNvdXJjZS5oZWlnaHQsXG4gICAgICB3ID0gKHIgPDwgMSkgKyAxO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IG47ICsraSkge1xuICAgIGZvciAodmFyIGogPSAwLCBzciA9IDA7IGogPCBtICsgcjsgKytqKSB7XG4gICAgICBpZiAoaiA8IG0pIHtcbiAgICAgICAgc3IgKz0gc291cmNlLmRhdGFbaSArIGogKiBuXTtcbiAgICAgIH1cbiAgICAgIGlmIChqID49IHIpIHtcbiAgICAgICAgaWYgKGogPj0gdykge1xuICAgICAgICAgIHNyIC09IHNvdXJjZS5kYXRhW2kgKyAoaiAtIHcpICogbl07XG4gICAgICAgIH1cbiAgICAgICAgdGFyZ2V0LmRhdGFbaSArIChqIC0gcikgKiBuXSA9IHNyIC8gTWF0aC5taW4oaiArIDEsIG0gLSAxICsgdyAtIGosIHcpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IHttYXgsIHJhbmdlLCB0aWNrU3RlcH0gZnJvbSBcImQzLWFycmF5XCI7XG5pbXBvcnQge3NsaWNlfSBmcm9tIFwiLi9hcnJheVwiO1xuaW1wb3J0IHtibHVyWCwgYmx1cll9IGZyb20gXCIuL2JsdXJcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuaW1wb3J0IGNvbnRvdXJzIGZyb20gXCIuL2NvbnRvdXJzXCI7XG5cbmZ1bmN0aW9uIGRlZmF1bHRYKGQpIHtcbiAgcmV0dXJuIGRbMF07XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRZKGQpIHtcbiAgcmV0dXJuIGRbMV07XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRXZWlnaHQoKSB7XG4gIHJldHVybiAxO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHggPSBkZWZhdWx0WCxcbiAgICAgIHkgPSBkZWZhdWx0WSxcbiAgICAgIHdlaWdodCA9IGRlZmF1bHRXZWlnaHQsXG4gICAgICBkeCA9IDk2MCxcbiAgICAgIGR5ID0gNTAwLFxuICAgICAgciA9IDIwLCAvLyBibHVyIHJhZGl1c1xuICAgICAgayA9IDIsIC8vIGxvZzIoZ3JpZCBjZWxsIHNpemUpXG4gICAgICBvID0gciAqIDMsIC8vIGdyaWQgb2Zmc2V0LCB0byBwYWQgZm9yIGJsdXJcbiAgICAgIG4gPSAoZHggKyBvICogMikgPj4gaywgLy8gZ3JpZCB3aWR0aFxuICAgICAgbSA9IChkeSArIG8gKiAyKSA+PiBrLCAvLyBncmlkIGhlaWdodFxuICAgICAgdGhyZXNob2xkID0gY29uc3RhbnQoMjApO1xuXG4gIGZ1bmN0aW9uIGRlbnNpdHkoZGF0YSkge1xuICAgIHZhciB2YWx1ZXMwID0gbmV3IEZsb2F0MzJBcnJheShuICogbSksXG4gICAgICAgIHZhbHVlczEgPSBuZXcgRmxvYXQzMkFycmF5KG4gKiBtKTtcblxuICAgIGRhdGEuZm9yRWFjaChmdW5jdGlvbihkLCBpLCBkYXRhKSB7XG4gICAgICB2YXIgeGkgPSAoK3goZCwgaSwgZGF0YSkgKyBvKSA+PiBrLFxuICAgICAgICAgIHlpID0gKCt5KGQsIGksIGRhdGEpICsgbykgPj4gayxcbiAgICAgICAgICB3aSA9ICt3ZWlnaHQoZCwgaSwgZGF0YSk7XG4gICAgICBpZiAoeGkgPj0gMCAmJiB4aSA8IG4gJiYgeWkgPj0gMCAmJiB5aSA8IG0pIHtcbiAgICAgICAgdmFsdWVzMFt4aSArIHlpICogbl0gKz0gd2k7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBUT0RPIE9wdGltaXplLlxuICAgIGJsdXJYKHt3aWR0aDogbiwgaGVpZ2h0OiBtLCBkYXRhOiB2YWx1ZXMwfSwge3dpZHRoOiBuLCBoZWlnaHQ6IG0sIGRhdGE6IHZhbHVlczF9LCByID4+IGspO1xuICAgIGJsdXJZKHt3aWR0aDogbiwgaGVpZ2h0OiBtLCBkYXRhOiB2YWx1ZXMxfSwge3dpZHRoOiBuLCBoZWlnaHQ6IG0sIGRhdGE6IHZhbHVlczB9LCByID4+IGspO1xuICAgIGJsdXJYKHt3aWR0aDogbiwgaGVpZ2h0OiBtLCBkYXRhOiB2YWx1ZXMwfSwge3dpZHRoOiBuLCBoZWlnaHQ6IG0sIGRhdGE6IHZhbHVlczF9LCByID4+IGspO1xuICAgIGJsdXJZKHt3aWR0aDogbiwgaGVpZ2h0OiBtLCBkYXRhOiB2YWx1ZXMxfSwge3dpZHRoOiBuLCBoZWlnaHQ6IG0sIGRhdGE6IHZhbHVlczB9LCByID4+IGspO1xuICAgIGJsdXJYKHt3aWR0aDogbiwgaGVpZ2h0OiBtLCBkYXRhOiB2YWx1ZXMwfSwge3dpZHRoOiBuLCBoZWlnaHQ6IG0sIGRhdGE6IHZhbHVlczF9LCByID4+IGspO1xuICAgIGJsdXJZKHt3aWR0aDogbiwgaGVpZ2h0OiBtLCBkYXRhOiB2YWx1ZXMxfSwge3dpZHRoOiBuLCBoZWlnaHQ6IG0sIGRhdGE6IHZhbHVlczB9LCByID4+IGspO1xuXG4gICAgdmFyIHR6ID0gdGhyZXNob2xkKHZhbHVlczApO1xuXG4gICAgLy8gQ29udmVydCBudW1iZXIgb2YgdGhyZXNob2xkcyBpbnRvIHVuaWZvcm0gdGhyZXNob2xkcy5cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodHopKSB7XG4gICAgICB2YXIgc3RvcCA9IG1heCh2YWx1ZXMwKTtcbiAgICAgIHR6ID0gdGlja1N0ZXAoMCwgc3RvcCwgdHopO1xuICAgICAgdHogPSByYW5nZSgwLCBNYXRoLmZsb29yKHN0b3AgLyB0eikgKiB0eiwgdHopO1xuICAgICAgdHouc2hpZnQoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY29udG91cnMoKVxuICAgICAgICAudGhyZXNob2xkcyh0eilcbiAgICAgICAgLnNpemUoW24sIG1dKVxuICAgICAgKHZhbHVlczApXG4gICAgICAgIC5tYXAodHJhbnNmb3JtKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRyYW5zZm9ybShnZW9tZXRyeSkge1xuICAgIGdlb21ldHJ5LnZhbHVlICo9IE1hdGgucG93KDIsIC0yICogayk7IC8vIERlbnNpdHkgaW4gcG9pbnRzIHBlciBzcXVhcmUgcGl4ZWwuXG4gICAgZ2VvbWV0cnkuY29vcmRpbmF0ZXMuZm9yRWFjaCh0cmFuc2Zvcm1Qb2x5Z29uKTtcbiAgICByZXR1cm4gZ2VvbWV0cnk7XG4gIH1cblxuICBmdW5jdGlvbiB0cmFuc2Zvcm1Qb2x5Z29uKGNvb3JkaW5hdGVzKSB7XG4gICAgY29vcmRpbmF0ZXMuZm9yRWFjaCh0cmFuc2Zvcm1SaW5nKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRyYW5zZm9ybVJpbmcoY29vcmRpbmF0ZXMpIHtcbiAgICBjb29yZGluYXRlcy5mb3JFYWNoKHRyYW5zZm9ybVBvaW50KTtcbiAgfVxuXG4gIC8vIFRPRE8gT3B0aW1pemUuXG4gIGZ1bmN0aW9uIHRyYW5zZm9ybVBvaW50KGNvb3JkaW5hdGVzKSB7XG4gICAgY29vcmRpbmF0ZXNbMF0gPSBjb29yZGluYXRlc1swXSAqIE1hdGgucG93KDIsIGspIC0gbztcbiAgICBjb29yZGluYXRlc1sxXSA9IGNvb3JkaW5hdGVzWzFdICogTWF0aC5wb3coMiwgaykgLSBvO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVzaXplKCkge1xuICAgIG8gPSByICogMztcbiAgICBuID0gKGR4ICsgbyAqIDIpID4+IGs7XG4gICAgbSA9IChkeSArIG8gKiAyKSA+PiBrO1xuICAgIHJldHVybiBkZW5zaXR5O1xuICB9XG5cbiAgZGVuc2l0eS54ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHggPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgZGVuc2l0eSkgOiB4O1xuICB9O1xuXG4gIGRlbnNpdHkueSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh5ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGRlbnNpdHkpIDogeTtcbiAgfTtcblxuICBkZW5zaXR5LndlaWdodCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh3ZWlnaHQgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgZGVuc2l0eSkgOiB3ZWlnaHQ7XG4gIH07XG5cbiAgZGVuc2l0eS5zaXplID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFtkeCwgZHldO1xuICAgIHZhciBfMCA9IE1hdGguY2VpbChfWzBdKSwgXzEgPSBNYXRoLmNlaWwoX1sxXSk7XG4gICAgaWYgKCEoXzAgPj0gMCkgJiYgIShfMCA+PSAwKSkgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBzaXplXCIpO1xuICAgIHJldHVybiBkeCA9IF8wLCBkeSA9IF8xLCByZXNpemUoKTtcbiAgfTtcblxuICBkZW5zaXR5LmNlbGxTaXplID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIDEgPDwgaztcbiAgICBpZiAoISgoXyA9ICtfKSA+PSAxKSkgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBjZWxsIHNpemVcIik7XG4gICAgcmV0dXJuIGsgPSBNYXRoLmZsb29yKE1hdGgubG9nKF8pIC8gTWF0aC5MTjIpLCByZXNpemUoKTtcbiAgfTtcblxuICBkZW5zaXR5LnRocmVzaG9sZHMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhyZXNob2xkID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBBcnJheS5pc0FycmF5KF8pID8gY29uc3RhbnQoc2xpY2UuY2FsbChfKSkgOiBjb25zdGFudChfKSwgZGVuc2l0eSkgOiB0aHJlc2hvbGQ7XG4gIH07XG5cbiAgZGVuc2l0eS5iYW5kd2lkdGggPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gTWF0aC5zcXJ0KHIgKiAociArIDEpKTtcbiAgICBpZiAoISgoXyA9ICtfKSA+PSAwKSkgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBiYW5kd2lkdGhcIik7XG4gICAgcmV0dXJuIHIgPSBNYXRoLnJvdW5kKChNYXRoLnNxcnQoNCAqIF8gKiBfICsgMSkgLSAxKSAvIDIpLCByZXNpemUoKTtcbiAgfTtcblxuICByZXR1cm4gZGVuc2l0eTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRHJhZ0V2ZW50KHRhcmdldCwgdHlwZSwgc3ViamVjdCwgaWQsIGFjdGl2ZSwgeCwgeSwgZHgsIGR5LCBkaXNwYXRjaCkge1xuICB0aGlzLnRhcmdldCA9IHRhcmdldDtcbiAgdGhpcy50eXBlID0gdHlwZTtcbiAgdGhpcy5zdWJqZWN0ID0gc3ViamVjdDtcbiAgdGhpcy5pZGVudGlmaWVyID0gaWQ7XG4gIHRoaXMuYWN0aXZlID0gYWN0aXZlO1xuICB0aGlzLnggPSB4O1xuICB0aGlzLnkgPSB5O1xuICB0aGlzLmR4ID0gZHg7XG4gIHRoaXMuZHkgPSBkeTtcbiAgdGhpcy5fID0gZGlzcGF0Y2g7XG59XG5cbkRyYWdFdmVudC5wcm90b3R5cGUub24gPSBmdW5jdGlvbigpIHtcbiAgdmFyIHZhbHVlID0gdGhpcy5fLm9uLmFwcGx5KHRoaXMuXywgYXJndW1lbnRzKTtcbiAgcmV0dXJuIHZhbHVlID09PSB0aGlzLl8gPyB0aGlzIDogdmFsdWU7XG59O1xuIiwiaW1wb3J0IHtkaXNwYXRjaH0gZnJvbSBcImQzLWRpc3BhdGNoXCI7XG5pbXBvcnQge2V2ZW50LCBjdXN0b21FdmVudCwgc2VsZWN0LCBtb3VzZSwgdG91Y2h9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCBub2RyYWcsIHt5ZXNkcmFnfSBmcm9tIFwiLi9ub2RyYWcuanNcIjtcbmltcG9ydCBub2V2ZW50LCB7bm9wcm9wYWdhdGlvbn0gZnJvbSBcIi4vbm9ldmVudC5qc1wiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50LmpzXCI7XG5pbXBvcnQgRHJhZ0V2ZW50IGZyb20gXCIuL2V2ZW50LmpzXCI7XG5cbi8vIElnbm9yZSByaWdodC1jbGljaywgc2luY2UgdGhhdCBzaG91bGQgb3BlbiB0aGUgY29udGV4dCBtZW51LlxuZnVuY3Rpb24gZGVmYXVsdEZpbHRlcigpIHtcbiAgcmV0dXJuICFldmVudC5jdHJsS2V5ICYmICFldmVudC5idXR0b247XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRDb250YWluZXIoKSB7XG4gIHJldHVybiB0aGlzLnBhcmVudE5vZGU7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRTdWJqZWN0KGQpIHtcbiAgcmV0dXJuIGQgPT0gbnVsbCA/IHt4OiBldmVudC54LCB5OiBldmVudC55fSA6IGQ7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRUb3VjaGFibGUoKSB7XG4gIHJldHVybiBuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHMgfHwgKFwib250b3VjaHN0YXJ0XCIgaW4gdGhpcyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgZmlsdGVyID0gZGVmYXVsdEZpbHRlcixcbiAgICAgIGNvbnRhaW5lciA9IGRlZmF1bHRDb250YWluZXIsXG4gICAgICBzdWJqZWN0ID0gZGVmYXVsdFN1YmplY3QsXG4gICAgICB0b3VjaGFibGUgPSBkZWZhdWx0VG91Y2hhYmxlLFxuICAgICAgZ2VzdHVyZXMgPSB7fSxcbiAgICAgIGxpc3RlbmVycyA9IGRpc3BhdGNoKFwic3RhcnRcIiwgXCJkcmFnXCIsIFwiZW5kXCIpLFxuICAgICAgYWN0aXZlID0gMCxcbiAgICAgIG1vdXNlZG93bngsXG4gICAgICBtb3VzZWRvd255LFxuICAgICAgbW91c2Vtb3ZpbmcsXG4gICAgICB0b3VjaGVuZGluZyxcbiAgICAgIGNsaWNrRGlzdGFuY2UyID0gMDtcblxuICBmdW5jdGlvbiBkcmFnKHNlbGVjdGlvbikge1xuICAgIHNlbGVjdGlvblxuICAgICAgICAub24oXCJtb3VzZWRvd24uZHJhZ1wiLCBtb3VzZWRvd25lZClcbiAgICAgIC5maWx0ZXIodG91Y2hhYmxlKVxuICAgICAgICAub24oXCJ0b3VjaHN0YXJ0LmRyYWdcIiwgdG91Y2hzdGFydGVkKVxuICAgICAgICAub24oXCJ0b3VjaG1vdmUuZHJhZ1wiLCB0b3VjaG1vdmVkKVxuICAgICAgICAub24oXCJ0b3VjaGVuZC5kcmFnIHRvdWNoY2FuY2VsLmRyYWdcIiwgdG91Y2hlbmRlZClcbiAgICAgICAgLnN0eWxlKFwidG91Y2gtYWN0aW9uXCIsIFwibm9uZVwiKVxuICAgICAgICAuc3R5bGUoXCItd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3JcIiwgXCJyZ2JhKDAsMCwwLDApXCIpO1xuICB9XG5cbiAgZnVuY3Rpb24gbW91c2Vkb3duZWQoKSB7XG4gICAgaWYgKHRvdWNoZW5kaW5nIHx8ICFmaWx0ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgcmV0dXJuO1xuICAgIHZhciBnZXN0dXJlID0gYmVmb3Jlc3RhcnQoXCJtb3VzZVwiLCBjb250YWluZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgbW91c2UsIHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKCFnZXN0dXJlKSByZXR1cm47XG4gICAgc2VsZWN0KGV2ZW50LnZpZXcpLm9uKFwibW91c2Vtb3ZlLmRyYWdcIiwgbW91c2Vtb3ZlZCwgdHJ1ZSkub24oXCJtb3VzZXVwLmRyYWdcIiwgbW91c2V1cHBlZCwgdHJ1ZSk7XG4gICAgbm9kcmFnKGV2ZW50LnZpZXcpO1xuICAgIG5vcHJvcGFnYXRpb24oKTtcbiAgICBtb3VzZW1vdmluZyA9IGZhbHNlO1xuICAgIG1vdXNlZG93bnggPSBldmVudC5jbGllbnRYO1xuICAgIG1vdXNlZG93bnkgPSBldmVudC5jbGllbnRZO1xuICAgIGdlc3R1cmUoXCJzdGFydFwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG1vdXNlbW92ZWQoKSB7XG4gICAgbm9ldmVudCgpO1xuICAgIGlmICghbW91c2Vtb3ZpbmcpIHtcbiAgICAgIHZhciBkeCA9IGV2ZW50LmNsaWVudFggLSBtb3VzZWRvd254LCBkeSA9IGV2ZW50LmNsaWVudFkgLSBtb3VzZWRvd255O1xuICAgICAgbW91c2Vtb3ZpbmcgPSBkeCAqIGR4ICsgZHkgKiBkeSA+IGNsaWNrRGlzdGFuY2UyO1xuICAgIH1cbiAgICBnZXN0dXJlcy5tb3VzZShcImRyYWdcIik7XG4gIH1cblxuICBmdW5jdGlvbiBtb3VzZXVwcGVkKCkge1xuICAgIHNlbGVjdChldmVudC52aWV3KS5vbihcIm1vdXNlbW92ZS5kcmFnIG1vdXNldXAuZHJhZ1wiLCBudWxsKTtcbiAgICB5ZXNkcmFnKGV2ZW50LnZpZXcsIG1vdXNlbW92aW5nKTtcbiAgICBub2V2ZW50KCk7XG4gICAgZ2VzdHVyZXMubW91c2UoXCJlbmRcIik7XG4gIH1cblxuICBmdW5jdGlvbiB0b3VjaHN0YXJ0ZWQoKSB7XG4gICAgaWYgKCFmaWx0ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgcmV0dXJuO1xuICAgIHZhciB0b3VjaGVzID0gZXZlbnQuY2hhbmdlZFRvdWNoZXMsXG4gICAgICAgIGMgPSBjb250YWluZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgbiA9IHRvdWNoZXMubGVuZ3RoLCBpLCBnZXN0dXJlO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKGdlc3R1cmUgPSBiZWZvcmVzdGFydCh0b3VjaGVzW2ldLmlkZW50aWZpZXIsIGMsIHRvdWNoLCB0aGlzLCBhcmd1bWVudHMpKSB7XG4gICAgICAgIG5vcHJvcGFnYXRpb24oKTtcbiAgICAgICAgZ2VzdHVyZShcInN0YXJ0XCIpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHRvdWNobW92ZWQoKSB7XG4gICAgdmFyIHRvdWNoZXMgPSBldmVudC5jaGFuZ2VkVG91Y2hlcyxcbiAgICAgICAgbiA9IHRvdWNoZXMubGVuZ3RoLCBpLCBnZXN0dXJlO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKGdlc3R1cmUgPSBnZXN0dXJlc1t0b3VjaGVzW2ldLmlkZW50aWZpZXJdKSB7XG4gICAgICAgIG5vZXZlbnQoKTtcbiAgICAgICAgZ2VzdHVyZShcImRyYWdcIik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdG91Y2hlbmRlZCgpIHtcbiAgICB2YXIgdG91Y2hlcyA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzLFxuICAgICAgICBuID0gdG91Y2hlcy5sZW5ndGgsIGksIGdlc3R1cmU7XG5cbiAgICBpZiAodG91Y2hlbmRpbmcpIGNsZWFyVGltZW91dCh0b3VjaGVuZGluZyk7XG4gICAgdG91Y2hlbmRpbmcgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0b3VjaGVuZGluZyA9IG51bGw7IH0sIDUwMCk7IC8vIEdob3N0IGNsaWNrcyBhcmUgZGVsYXllZCFcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoZ2VzdHVyZSA9IGdlc3R1cmVzW3RvdWNoZXNbaV0uaWRlbnRpZmllcl0pIHtcbiAgICAgICAgbm9wcm9wYWdhdGlvbigpO1xuICAgICAgICBnZXN0dXJlKFwiZW5kXCIpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGJlZm9yZXN0YXJ0KGlkLCBjb250YWluZXIsIHBvaW50LCB0aGF0LCBhcmdzKSB7XG4gICAgdmFyIHAgPSBwb2ludChjb250YWluZXIsIGlkKSwgcywgZHgsIGR5LFxuICAgICAgICBzdWJsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuY29weSgpO1xuXG4gICAgaWYgKCFjdXN0b21FdmVudChuZXcgRHJhZ0V2ZW50KGRyYWcsIFwiYmVmb3Jlc3RhcnRcIiwgcywgaWQsIGFjdGl2ZSwgcFswXSwgcFsxXSwgMCwgMCwgc3VibGlzdGVuZXJzKSwgZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoKGV2ZW50LnN1YmplY3QgPSBzID0gc3ViamVjdC5hcHBseSh0aGF0LCBhcmdzKSkgPT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuICAgICAgZHggPSBzLnggLSBwWzBdIHx8IDA7XG4gICAgICBkeSA9IHMueSAtIHBbMV0gfHwgMDtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0pKSByZXR1cm47XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gZ2VzdHVyZSh0eXBlKSB7XG4gICAgICB2YXIgcDAgPSBwLCBuO1xuICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgXCJzdGFydFwiOiBnZXN0dXJlc1tpZF0gPSBnZXN0dXJlLCBuID0gYWN0aXZlKys7IGJyZWFrO1xuICAgICAgICBjYXNlIFwiZW5kXCI6IGRlbGV0ZSBnZXN0dXJlc1tpZF0sIC0tYWN0aXZlOyAvLyBub2JyZWFrXG4gICAgICAgIGNhc2UgXCJkcmFnXCI6IHAgPSBwb2ludChjb250YWluZXIsIGlkKSwgbiA9IGFjdGl2ZTsgYnJlYWs7XG4gICAgICB9XG4gICAgICBjdXN0b21FdmVudChuZXcgRHJhZ0V2ZW50KGRyYWcsIHR5cGUsIHMsIGlkLCBuLCBwWzBdICsgZHgsIHBbMV0gKyBkeSwgcFswXSAtIHAwWzBdLCBwWzFdIC0gcDBbMV0sIHN1Ymxpc3RlbmVycyksIHN1Ymxpc3RlbmVycy5hcHBseSwgc3VibGlzdGVuZXJzLCBbdHlwZSwgdGhhdCwgYXJnc10pO1xuICAgIH07XG4gIH1cblxuICBkcmFnLmZpbHRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChmaWx0ZXIgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCEhXyksIGRyYWcpIDogZmlsdGVyO1xuICB9O1xuXG4gIGRyYWcuY29udGFpbmVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNvbnRhaW5lciA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoXyksIGRyYWcpIDogY29udGFpbmVyO1xuICB9O1xuXG4gIGRyYWcuc3ViamVjdCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzdWJqZWN0ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChfKSwgZHJhZykgOiBzdWJqZWN0O1xuICB9O1xuXG4gIGRyYWcudG91Y2hhYmxlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRvdWNoYWJsZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoISFfKSwgZHJhZykgOiB0b3VjaGFibGU7XG4gIH07XG5cbiAgZHJhZy5vbiA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB2YWx1ZSA9IGxpc3RlbmVycy5vbi5hcHBseShsaXN0ZW5lcnMsIGFyZ3VtZW50cyk7XG4gICAgcmV0dXJuIHZhbHVlID09PSBsaXN0ZW5lcnMgPyBkcmFnIDogdmFsdWU7XG4gIH07XG5cbiAgZHJhZy5jbGlja0Rpc3RhbmNlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNsaWNrRGlzdGFuY2UyID0gKF8gPSArXykgKiBfLCBkcmFnKSA6IE1hdGguc3FydChjbGlja0Rpc3RhbmNlMik7XG4gIH07XG5cbiAgcmV0dXJuIGRyYWc7XG59XG4iLCJ2YXIgRU9MID0ge30sXG4gICAgRU9GID0ge30sXG4gICAgUVVPVEUgPSAzNCxcbiAgICBORVdMSU5FID0gMTAsXG4gICAgUkVUVVJOID0gMTM7XG5cbmZ1bmN0aW9uIG9iamVjdENvbnZlcnRlcihjb2x1bW5zKSB7XG4gIHJldHVybiBuZXcgRnVuY3Rpb24oXCJkXCIsIFwicmV0dXJuIHtcIiArIGNvbHVtbnMubWFwKGZ1bmN0aW9uKG5hbWUsIGkpIHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkobmFtZSkgKyBcIjogZFtcIiArIGkgKyBcIl0gfHwgXFxcIlxcXCJcIjtcbiAgfSkuam9pbihcIixcIikgKyBcIn1cIik7XG59XG5cbmZ1bmN0aW9uIGN1c3RvbUNvbnZlcnRlcihjb2x1bW5zLCBmKSB7XG4gIHZhciBvYmplY3QgPSBvYmplY3RDb252ZXJ0ZXIoY29sdW1ucyk7XG4gIHJldHVybiBmdW5jdGlvbihyb3csIGkpIHtcbiAgICByZXR1cm4gZihvYmplY3Qocm93KSwgaSwgY29sdW1ucyk7XG4gIH07XG59XG5cbi8vIENvbXB1dGUgdW5pcXVlIGNvbHVtbnMgaW4gb3JkZXIgb2YgZGlzY292ZXJ5LlxuZnVuY3Rpb24gaW5mZXJDb2x1bW5zKHJvd3MpIHtcbiAgdmFyIGNvbHVtblNldCA9IE9iamVjdC5jcmVhdGUobnVsbCksXG4gICAgICBjb2x1bW5zID0gW107XG5cbiAgcm93cy5mb3JFYWNoKGZ1bmN0aW9uKHJvdykge1xuICAgIGZvciAodmFyIGNvbHVtbiBpbiByb3cpIHtcbiAgICAgIGlmICghKGNvbHVtbiBpbiBjb2x1bW5TZXQpKSB7XG4gICAgICAgIGNvbHVtbnMucHVzaChjb2x1bW5TZXRbY29sdW1uXSA9IGNvbHVtbik7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gY29sdW1ucztcbn1cblxuZnVuY3Rpb24gcGFkKHZhbHVlLCB3aWR0aCkge1xuICB2YXIgcyA9IHZhbHVlICsgXCJcIiwgbGVuZ3RoID0gcy5sZW5ndGg7XG4gIHJldHVybiBsZW5ndGggPCB3aWR0aCA/IG5ldyBBcnJheSh3aWR0aCAtIGxlbmd0aCArIDEpLmpvaW4oMCkgKyBzIDogcztcbn1cblxuZnVuY3Rpb24gZm9ybWF0WWVhcih5ZWFyKSB7XG4gIHJldHVybiB5ZWFyIDwgMCA/IFwiLVwiICsgcGFkKC15ZWFyLCA2KVxuICAgIDogeWVhciA+IDk5OTkgPyBcIitcIiArIHBhZCh5ZWFyLCA2KVxuICAgIDogcGFkKHllYXIsIDQpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXREYXRlKGRhdGUpIHtcbiAgdmFyIGhvdXJzID0gZGF0ZS5nZXRVVENIb3VycygpLFxuICAgICAgbWludXRlcyA9IGRhdGUuZ2V0VVRDTWludXRlcygpLFxuICAgICAgc2Vjb25kcyA9IGRhdGUuZ2V0VVRDU2Vjb25kcygpLFxuICAgICAgbWlsbGlzZWNvbmRzID0gZGF0ZS5nZXRVVENNaWxsaXNlY29uZHMoKTtcbiAgcmV0dXJuIGlzTmFOKGRhdGUpID8gXCJJbnZhbGlkIERhdGVcIlxuICAgICAgOiBmb3JtYXRZZWFyKGRhdGUuZ2V0VVRDRnVsbFllYXIoKSwgNCkgKyBcIi1cIiArIHBhZChkYXRlLmdldFVUQ01vbnRoKCkgKyAxLCAyKSArIFwiLVwiICsgcGFkKGRhdGUuZ2V0VVRDRGF0ZSgpLCAyKVxuICAgICAgKyAobWlsbGlzZWNvbmRzID8gXCJUXCIgKyBwYWQoaG91cnMsIDIpICsgXCI6XCIgKyBwYWQobWludXRlcywgMikgKyBcIjpcIiArIHBhZChzZWNvbmRzLCAyKSArIFwiLlwiICsgcGFkKG1pbGxpc2Vjb25kcywgMykgKyBcIlpcIlxuICAgICAgOiBzZWNvbmRzID8gXCJUXCIgKyBwYWQoaG91cnMsIDIpICsgXCI6XCIgKyBwYWQobWludXRlcywgMikgKyBcIjpcIiArIHBhZChzZWNvbmRzLCAyKSArIFwiWlwiXG4gICAgICA6IG1pbnV0ZXMgfHwgaG91cnMgPyBcIlRcIiArIHBhZChob3VycywgMikgKyBcIjpcIiArIHBhZChtaW51dGVzLCAyKSArIFwiWlwiXG4gICAgICA6IFwiXCIpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihkZWxpbWl0ZXIpIHtcbiAgdmFyIHJlRm9ybWF0ID0gbmV3IFJlZ0V4cChcIltcXFwiXCIgKyBkZWxpbWl0ZXIgKyBcIlxcblxccl1cIiksXG4gICAgICBERUxJTUlURVIgPSBkZWxpbWl0ZXIuY2hhckNvZGVBdCgwKTtcblxuICBmdW5jdGlvbiBwYXJzZSh0ZXh0LCBmKSB7XG4gICAgdmFyIGNvbnZlcnQsIGNvbHVtbnMsIHJvd3MgPSBwYXJzZVJvd3ModGV4dCwgZnVuY3Rpb24ocm93LCBpKSB7XG4gICAgICBpZiAoY29udmVydCkgcmV0dXJuIGNvbnZlcnQocm93LCBpIC0gMSk7XG4gICAgICBjb2x1bW5zID0gcm93LCBjb252ZXJ0ID0gZiA/IGN1c3RvbUNvbnZlcnRlcihyb3csIGYpIDogb2JqZWN0Q29udmVydGVyKHJvdyk7XG4gICAgfSk7XG4gICAgcm93cy5jb2x1bW5zID0gY29sdW1ucyB8fCBbXTtcbiAgICByZXR1cm4gcm93cztcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhcnNlUm93cyh0ZXh0LCBmKSB7XG4gICAgdmFyIHJvd3MgPSBbXSwgLy8gb3V0cHV0IHJvd3NcbiAgICAgICAgTiA9IHRleHQubGVuZ3RoLFxuICAgICAgICBJID0gMCwgLy8gY3VycmVudCBjaGFyYWN0ZXIgaW5kZXhcbiAgICAgICAgbiA9IDAsIC8vIGN1cnJlbnQgbGluZSBudW1iZXJcbiAgICAgICAgdCwgLy8gY3VycmVudCB0b2tlblxuICAgICAgICBlb2YgPSBOIDw9IDAsIC8vIGN1cnJlbnQgdG9rZW4gZm9sbG93ZWQgYnkgRU9GP1xuICAgICAgICBlb2wgPSBmYWxzZTsgLy8gY3VycmVudCB0b2tlbiBmb2xsb3dlZCBieSBFT0w/XG5cbiAgICAvLyBTdHJpcCB0aGUgdHJhaWxpbmcgbmV3bGluZS5cbiAgICBpZiAodGV4dC5jaGFyQ29kZUF0KE4gLSAxKSA9PT0gTkVXTElORSkgLS1OO1xuICAgIGlmICh0ZXh0LmNoYXJDb2RlQXQoTiAtIDEpID09PSBSRVRVUk4pIC0tTjtcblxuICAgIGZ1bmN0aW9uIHRva2VuKCkge1xuICAgICAgaWYgKGVvZikgcmV0dXJuIEVPRjtcbiAgICAgIGlmIChlb2wpIHJldHVybiBlb2wgPSBmYWxzZSwgRU9MO1xuXG4gICAgICAvLyBVbmVzY2FwZSBxdW90ZXMuXG4gICAgICB2YXIgaSwgaiA9IEksIGM7XG4gICAgICBpZiAodGV4dC5jaGFyQ29kZUF0KGopID09PSBRVU9URSkge1xuICAgICAgICB3aGlsZSAoSSsrIDwgTiAmJiB0ZXh0LmNoYXJDb2RlQXQoSSkgIT09IFFVT1RFIHx8IHRleHQuY2hhckNvZGVBdCgrK0kpID09PSBRVU9URSk7XG4gICAgICAgIGlmICgoaSA9IEkpID49IE4pIGVvZiA9IHRydWU7XG4gICAgICAgIGVsc2UgaWYgKChjID0gdGV4dC5jaGFyQ29kZUF0KEkrKykpID09PSBORVdMSU5FKSBlb2wgPSB0cnVlO1xuICAgICAgICBlbHNlIGlmIChjID09PSBSRVRVUk4pIHsgZW9sID0gdHJ1ZTsgaWYgKHRleHQuY2hhckNvZGVBdChJKSA9PT0gTkVXTElORSkgKytJOyB9XG4gICAgICAgIHJldHVybiB0ZXh0LnNsaWNlKGogKyAxLCBpIC0gMSkucmVwbGFjZSgvXCJcIi9nLCBcIlxcXCJcIik7XG4gICAgICB9XG5cbiAgICAgIC8vIEZpbmQgbmV4dCBkZWxpbWl0ZXIgb3IgbmV3bGluZS5cbiAgICAgIHdoaWxlIChJIDwgTikge1xuICAgICAgICBpZiAoKGMgPSB0ZXh0LmNoYXJDb2RlQXQoaSA9IEkrKykpID09PSBORVdMSU5FKSBlb2wgPSB0cnVlO1xuICAgICAgICBlbHNlIGlmIChjID09PSBSRVRVUk4pIHsgZW9sID0gdHJ1ZTsgaWYgKHRleHQuY2hhckNvZGVBdChJKSA9PT0gTkVXTElORSkgKytJOyB9XG4gICAgICAgIGVsc2UgaWYgKGMgIT09IERFTElNSVRFUikgY29udGludWU7XG4gICAgICAgIHJldHVybiB0ZXh0LnNsaWNlKGosIGkpO1xuICAgICAgfVxuXG4gICAgICAvLyBSZXR1cm4gbGFzdCB0b2tlbiBiZWZvcmUgRU9GLlxuICAgICAgcmV0dXJuIGVvZiA9IHRydWUsIHRleHQuc2xpY2UoaiwgTik7XG4gICAgfVxuXG4gICAgd2hpbGUgKCh0ID0gdG9rZW4oKSkgIT09IEVPRikge1xuICAgICAgdmFyIHJvdyA9IFtdO1xuICAgICAgd2hpbGUgKHQgIT09IEVPTCAmJiB0ICE9PSBFT0YpIHJvdy5wdXNoKHQpLCB0ID0gdG9rZW4oKTtcbiAgICAgIGlmIChmICYmIChyb3cgPSBmKHJvdywgbisrKSkgPT0gbnVsbCkgY29udGludWU7XG4gICAgICByb3dzLnB1c2gocm93KTtcbiAgICB9XG5cbiAgICByZXR1cm4gcm93cztcbiAgfVxuXG4gIGZ1bmN0aW9uIHByZWZvcm1hdEJvZHkocm93cywgY29sdW1ucykge1xuICAgIHJldHVybiByb3dzLm1hcChmdW5jdGlvbihyb3cpIHtcbiAgICAgIHJldHVybiBjb2x1bW5zLm1hcChmdW5jdGlvbihjb2x1bW4pIHtcbiAgICAgICAgcmV0dXJuIGZvcm1hdFZhbHVlKHJvd1tjb2x1bW5dKTtcbiAgICAgIH0pLmpvaW4oZGVsaW1pdGVyKTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdChyb3dzLCBjb2x1bW5zKSB7XG4gICAgaWYgKGNvbHVtbnMgPT0gbnVsbCkgY29sdW1ucyA9IGluZmVyQ29sdW1ucyhyb3dzKTtcbiAgICByZXR1cm4gW2NvbHVtbnMubWFwKGZvcm1hdFZhbHVlKS5qb2luKGRlbGltaXRlcildLmNvbmNhdChwcmVmb3JtYXRCb2R5KHJvd3MsIGNvbHVtbnMpKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0Qm9keShyb3dzLCBjb2x1bW5zKSB7XG4gICAgaWYgKGNvbHVtbnMgPT0gbnVsbCkgY29sdW1ucyA9IGluZmVyQ29sdW1ucyhyb3dzKTtcbiAgICByZXR1cm4gcHJlZm9ybWF0Qm9keShyb3dzLCBjb2x1bW5zKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0Um93cyhyb3dzKSB7XG4gICAgcmV0dXJuIHJvd3MubWFwKGZvcm1hdFJvdykuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFJvdyhyb3cpIHtcbiAgICByZXR1cm4gcm93Lm1hcChmb3JtYXRWYWx1ZSkuam9pbihkZWxpbWl0ZXIpO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0VmFsdWUodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgPT0gbnVsbCA/IFwiXCJcbiAgICAgICAgOiB2YWx1ZSBpbnN0YW5jZW9mIERhdGUgPyBmb3JtYXREYXRlKHZhbHVlKVxuICAgICAgICA6IHJlRm9ybWF0LnRlc3QodmFsdWUgKz0gXCJcIikgPyBcIlxcXCJcIiArIHZhbHVlLnJlcGxhY2UoL1wiL2csIFwiXFxcIlxcXCJcIikgKyBcIlxcXCJcIlxuICAgICAgICA6IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwYXJzZTogcGFyc2UsXG4gICAgcGFyc2VSb3dzOiBwYXJzZVJvd3MsXG4gICAgZm9ybWF0OiBmb3JtYXQsXG4gICAgZm9ybWF0Qm9keTogZm9ybWF0Qm9keSxcbiAgICBmb3JtYXRSb3dzOiBmb3JtYXRSb3dzLFxuICAgIGZvcm1hdFJvdzogZm9ybWF0Um93LFxuICAgIGZvcm1hdFZhbHVlOiBmb3JtYXRWYWx1ZVxuICB9O1xufVxuIiwiaW1wb3J0IGRzdiBmcm9tIFwiLi9kc3YuanNcIjtcblxudmFyIGNzdiA9IGRzdihcIixcIik7XG5cbmV4cG9ydCB2YXIgY3N2UGFyc2UgPSBjc3YucGFyc2U7XG5leHBvcnQgdmFyIGNzdlBhcnNlUm93cyA9IGNzdi5wYXJzZVJvd3M7XG5leHBvcnQgdmFyIGNzdkZvcm1hdCA9IGNzdi5mb3JtYXQ7XG5leHBvcnQgdmFyIGNzdkZvcm1hdEJvZHkgPSBjc3YuZm9ybWF0Qm9keTtcbmV4cG9ydCB2YXIgY3N2Rm9ybWF0Um93cyA9IGNzdi5mb3JtYXRSb3dzO1xuZXhwb3J0IHZhciBjc3ZGb3JtYXRSb3cgPSBjc3YuZm9ybWF0Um93O1xuZXhwb3J0IHZhciBjc3ZGb3JtYXRWYWx1ZSA9IGNzdi5mb3JtYXRWYWx1ZTtcbiIsImltcG9ydCBkc3YgZnJvbSBcIi4vZHN2LmpzXCI7XG5cbnZhciB0c3YgPSBkc3YoXCJcXHRcIik7XG5cbmV4cG9ydCB2YXIgdHN2UGFyc2UgPSB0c3YucGFyc2U7XG5leHBvcnQgdmFyIHRzdlBhcnNlUm93cyA9IHRzdi5wYXJzZVJvd3M7XG5leHBvcnQgdmFyIHRzdkZvcm1hdCA9IHRzdi5mb3JtYXQ7XG5leHBvcnQgdmFyIHRzdkZvcm1hdEJvZHkgPSB0c3YuZm9ybWF0Qm9keTtcbmV4cG9ydCB2YXIgdHN2Rm9ybWF0Um93cyA9IHRzdi5mb3JtYXRSb3dzO1xuZXhwb3J0IHZhciB0c3ZGb3JtYXRSb3cgPSB0c3YuZm9ybWF0Um93O1xuZXhwb3J0IHZhciB0c3ZGb3JtYXRWYWx1ZSA9IHRzdi5mb3JtYXRWYWx1ZTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGF1dG9UeXBlKG9iamVjdCkge1xuICBmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSB7XG4gICAgdmFyIHZhbHVlID0gb2JqZWN0W2tleV0udHJpbSgpLCBudW1iZXIsIG07XG4gICAgaWYgKCF2YWx1ZSkgdmFsdWUgPSBudWxsO1xuICAgIGVsc2UgaWYgKHZhbHVlID09PSBcInRydWVcIikgdmFsdWUgPSB0cnVlO1xuICAgIGVsc2UgaWYgKHZhbHVlID09PSBcImZhbHNlXCIpIHZhbHVlID0gZmFsc2U7XG4gICAgZWxzZSBpZiAodmFsdWUgPT09IFwiTmFOXCIpIHZhbHVlID0gTmFOO1xuICAgIGVsc2UgaWYgKCFpc05hTihudW1iZXIgPSArdmFsdWUpKSB2YWx1ZSA9IG51bWJlcjtcbiAgICBlbHNlIGlmIChtID0gdmFsdWUubWF0Y2goL14oWy0rXVxcZHsyfSk/XFxkezR9KC1cXGR7Mn0oLVxcZHsyfSk/KT8oVFxcZHsyfTpcXGR7Mn0oOlxcZHsyfShcXC5cXGR7M30pPyk/KFp8Wy0rXVxcZHsyfTpcXGR7Mn0pPyk/JC8pKSB7XG4gICAgICBpZiAoZml4dHogJiYgISFtWzRdICYmICFtWzddKSB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoLy0vZywgXCIvXCIpLnJlcGxhY2UoL1QvLCBcIiBcIik7XG4gICAgICB2YWx1ZSA9IG5ldyBEYXRlKHZhbHVlKTtcbiAgICB9XG4gICAgZWxzZSBjb250aW51ZTtcbiAgICBvYmplY3Rba2V5XSA9IHZhbHVlO1xuICB9XG4gIHJldHVybiBvYmplY3Q7XG59XG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9kMy9kMy1kc3YvaXNzdWVzLzQ1XG52YXIgZml4dHogPSBuZXcgRGF0ZShcIjIwMTktMDEtMDFUMDA6MDBcIikuZ2V0SG91cnMoKSB8fCBuZXcgRGF0ZShcIjIwMTktMDctMDFUMDA6MDBcIikuZ2V0SG91cnMoKTsiLCJleHBvcnQgZnVuY3Rpb24gbGluZWFyKHQpIHtcbiAgcmV0dXJuICt0O1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIHF1YWRJbih0KSB7XG4gIHJldHVybiB0ICogdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHF1YWRPdXQodCkge1xuICByZXR1cm4gdCAqICgyIC0gdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBxdWFkSW5PdXQodCkge1xuICByZXR1cm4gKCh0ICo9IDIpIDw9IDEgPyB0ICogdCA6IC0tdCAqICgyIC0gdCkgKyAxKSAvIDI7XG59XG4iLCJ2YXIgZXhwb25lbnQgPSAzO1xuXG5leHBvcnQgdmFyIHBvbHlJbiA9IChmdW5jdGlvbiBjdXN0b20oZSkge1xuICBlID0gK2U7XG5cbiAgZnVuY3Rpb24gcG9seUluKHQpIHtcbiAgICByZXR1cm4gTWF0aC5wb3codCwgZSk7XG4gIH1cblxuICBwb2x5SW4uZXhwb25lbnQgPSBjdXN0b207XG5cbiAgcmV0dXJuIHBvbHlJbjtcbn0pKGV4cG9uZW50KTtcblxuZXhwb3J0IHZhciBwb2x5T3V0ID0gKGZ1bmN0aW9uIGN1c3RvbShlKSB7XG4gIGUgPSArZTtcblxuICBmdW5jdGlvbiBwb2x5T3V0KHQpIHtcbiAgICByZXR1cm4gMSAtIE1hdGgucG93KDEgLSB0LCBlKTtcbiAgfVxuXG4gIHBvbHlPdXQuZXhwb25lbnQgPSBjdXN0b207XG5cbiAgcmV0dXJuIHBvbHlPdXQ7XG59KShleHBvbmVudCk7XG5cbmV4cG9ydCB2YXIgcG9seUluT3V0ID0gKGZ1bmN0aW9uIGN1c3RvbShlKSB7XG4gIGUgPSArZTtcblxuICBmdW5jdGlvbiBwb2x5SW5PdXQodCkge1xuICAgIHJldHVybiAoKHQgKj0gMikgPD0gMSA/IE1hdGgucG93KHQsIGUpIDogMiAtIE1hdGgucG93KDIgLSB0LCBlKSkgLyAyO1xuICB9XG5cbiAgcG9seUluT3V0LmV4cG9uZW50ID0gY3VzdG9tO1xuXG4gIHJldHVybiBwb2x5SW5PdXQ7XG59KShleHBvbmVudCk7XG4iLCJ2YXIgcGkgPSBNYXRoLlBJLFxuICAgIGhhbGZQaSA9IHBpIC8gMjtcblxuZXhwb3J0IGZ1bmN0aW9uIHNpbkluKHQpIHtcbiAgcmV0dXJuIDEgLSBNYXRoLmNvcyh0ICogaGFsZlBpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNpbk91dCh0KSB7XG4gIHJldHVybiBNYXRoLnNpbih0ICogaGFsZlBpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNpbkluT3V0KHQpIHtcbiAgcmV0dXJuICgxIC0gTWF0aC5jb3MocGkgKiB0KSkgLyAyO1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGV4cEluKHQpIHtcbiAgcmV0dXJuIE1hdGgucG93KDIsIDEwICogdCAtIDEwKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGV4cE91dCh0KSB7XG4gIHJldHVybiAxIC0gTWF0aC5wb3coMiwgLTEwICogdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleHBJbk91dCh0KSB7XG4gIHJldHVybiAoKHQgKj0gMikgPD0gMSA/IE1hdGgucG93KDIsIDEwICogdCAtIDEwKSA6IDIgLSBNYXRoLnBvdygyLCAxMCAtIDEwICogdCkpIC8gMjtcbn1cbiIsImV4cG9ydCBmdW5jdGlvbiBjaXJjbGVJbih0KSB7XG4gIHJldHVybiAxIC0gTWF0aC5zcXJ0KDEgLSB0ICogdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjaXJjbGVPdXQodCkge1xuICByZXR1cm4gTWF0aC5zcXJ0KDEgLSAtLXQgKiB0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNpcmNsZUluT3V0KHQpIHtcbiAgcmV0dXJuICgodCAqPSAyKSA8PSAxID8gMSAtIE1hdGguc3FydCgxIC0gdCAqIHQpIDogTWF0aC5zcXJ0KDEgLSAodCAtPSAyKSAqIHQpICsgMSkgLyAyO1xufVxuIiwidmFyIGIxID0gNCAvIDExLFxuICAgIGIyID0gNiAvIDExLFxuICAgIGIzID0gOCAvIDExLFxuICAgIGI0ID0gMyAvIDQsXG4gICAgYjUgPSA5IC8gMTEsXG4gICAgYjYgPSAxMCAvIDExLFxuICAgIGI3ID0gMTUgLyAxNixcbiAgICBiOCA9IDIxIC8gMjIsXG4gICAgYjkgPSA2MyAvIDY0LFxuICAgIGIwID0gMSAvIGIxIC8gYjE7XG5cbmV4cG9ydCBmdW5jdGlvbiBib3VuY2VJbih0KSB7XG4gIHJldHVybiAxIC0gYm91bmNlT3V0KDEgLSB0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJvdW5jZU91dCh0KSB7XG4gIHJldHVybiAodCA9ICt0KSA8IGIxID8gYjAgKiB0ICogdCA6IHQgPCBiMyA/IGIwICogKHQgLT0gYjIpICogdCArIGI0IDogdCA8IGI2ID8gYjAgKiAodCAtPSBiNSkgKiB0ICsgYjcgOiBiMCAqICh0IC09IGI4KSAqIHQgKyBiOTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJvdW5jZUluT3V0KHQpIHtcbiAgcmV0dXJuICgodCAqPSAyKSA8PSAxID8gMSAtIGJvdW5jZU91dCgxIC0gdCkgOiBib3VuY2VPdXQodCAtIDEpICsgMSkgLyAyO1xufVxuIiwidmFyIG92ZXJzaG9vdCA9IDEuNzAxNTg7XG5cbmV4cG9ydCB2YXIgYmFja0luID0gKGZ1bmN0aW9uIGN1c3RvbShzKSB7XG4gIHMgPSArcztcblxuICBmdW5jdGlvbiBiYWNrSW4odCkge1xuICAgIHJldHVybiB0ICogdCAqICgocyArIDEpICogdCAtIHMpO1xuICB9XG5cbiAgYmFja0luLm92ZXJzaG9vdCA9IGN1c3RvbTtcblxuICByZXR1cm4gYmFja0luO1xufSkob3ZlcnNob290KTtcblxuZXhwb3J0IHZhciBiYWNrT3V0ID0gKGZ1bmN0aW9uIGN1c3RvbShzKSB7XG4gIHMgPSArcztcblxuICBmdW5jdGlvbiBiYWNrT3V0KHQpIHtcbiAgICByZXR1cm4gLS10ICogdCAqICgocyArIDEpICogdCArIHMpICsgMTtcbiAgfVxuXG4gIGJhY2tPdXQub3ZlcnNob290ID0gY3VzdG9tO1xuXG4gIHJldHVybiBiYWNrT3V0O1xufSkob3ZlcnNob290KTtcblxuZXhwb3J0IHZhciBiYWNrSW5PdXQgPSAoZnVuY3Rpb24gY3VzdG9tKHMpIHtcbiAgcyA9ICtzO1xuXG4gIGZ1bmN0aW9uIGJhY2tJbk91dCh0KSB7XG4gICAgcmV0dXJuICgodCAqPSAyKSA8IDEgPyB0ICogdCAqICgocyArIDEpICogdCAtIHMpIDogKHQgLT0gMikgKiB0ICogKChzICsgMSkgKiB0ICsgcykgKyAyKSAvIDI7XG4gIH1cblxuICBiYWNrSW5PdXQub3ZlcnNob290ID0gY3VzdG9tO1xuXG4gIHJldHVybiBiYWNrSW5PdXQ7XG59KShvdmVyc2hvb3QpO1xuIiwidmFyIHRhdSA9IDIgKiBNYXRoLlBJLFxuICAgIGFtcGxpdHVkZSA9IDEsXG4gICAgcGVyaW9kID0gMC4zO1xuXG5leHBvcnQgdmFyIGVsYXN0aWNJbiA9IChmdW5jdGlvbiBjdXN0b20oYSwgcCkge1xuICB2YXIgcyA9IE1hdGguYXNpbigxIC8gKGEgPSBNYXRoLm1heCgxLCBhKSkpICogKHAgLz0gdGF1KTtcblxuICBmdW5jdGlvbiBlbGFzdGljSW4odCkge1xuICAgIHJldHVybiBhICogTWF0aC5wb3coMiwgMTAgKiAtLXQpICogTWF0aC5zaW4oKHMgLSB0KSAvIHApO1xuICB9XG5cbiAgZWxhc3RpY0luLmFtcGxpdHVkZSA9IGZ1bmN0aW9uKGEpIHsgcmV0dXJuIGN1c3RvbShhLCBwICogdGF1KTsgfTtcbiAgZWxhc3RpY0luLnBlcmlvZCA9IGZ1bmN0aW9uKHApIHsgcmV0dXJuIGN1c3RvbShhLCBwKTsgfTtcblxuICByZXR1cm4gZWxhc3RpY0luO1xufSkoYW1wbGl0dWRlLCBwZXJpb2QpO1xuXG5leHBvcnQgdmFyIGVsYXN0aWNPdXQgPSAoZnVuY3Rpb24gY3VzdG9tKGEsIHApIHtcbiAgdmFyIHMgPSBNYXRoLmFzaW4oMSAvIChhID0gTWF0aC5tYXgoMSwgYSkpKSAqIChwIC89IHRhdSk7XG5cbiAgZnVuY3Rpb24gZWxhc3RpY091dCh0KSB7XG4gICAgcmV0dXJuIDEgLSBhICogTWF0aC5wb3coMiwgLTEwICogKHQgPSArdCkpICogTWF0aC5zaW4oKHQgKyBzKSAvIHApO1xuICB9XG5cbiAgZWxhc3RpY091dC5hbXBsaXR1ZGUgPSBmdW5jdGlvbihhKSB7IHJldHVybiBjdXN0b20oYSwgcCAqIHRhdSk7IH07XG4gIGVsYXN0aWNPdXQucGVyaW9kID0gZnVuY3Rpb24ocCkgeyByZXR1cm4gY3VzdG9tKGEsIHApOyB9O1xuXG4gIHJldHVybiBlbGFzdGljT3V0O1xufSkoYW1wbGl0dWRlLCBwZXJpb2QpO1xuXG5leHBvcnQgdmFyIGVsYXN0aWNJbk91dCA9IChmdW5jdGlvbiBjdXN0b20oYSwgcCkge1xuICB2YXIgcyA9IE1hdGguYXNpbigxIC8gKGEgPSBNYXRoLm1heCgxLCBhKSkpICogKHAgLz0gdGF1KTtcblxuICBmdW5jdGlvbiBlbGFzdGljSW5PdXQodCkge1xuICAgIHJldHVybiAoKHQgPSB0ICogMiAtIDEpIDwgMFxuICAgICAgICA/IGEgKiBNYXRoLnBvdygyLCAxMCAqIHQpICogTWF0aC5zaW4oKHMgLSB0KSAvIHApXG4gICAgICAgIDogMiAtIGEgKiBNYXRoLnBvdygyLCAtMTAgKiB0KSAqIE1hdGguc2luKChzICsgdCkgLyBwKSkgLyAyO1xuICB9XG5cbiAgZWxhc3RpY0luT3V0LmFtcGxpdHVkZSA9IGZ1bmN0aW9uKGEpIHsgcmV0dXJuIGN1c3RvbShhLCBwICogdGF1KTsgfTtcbiAgZWxhc3RpY0luT3V0LnBlcmlvZCA9IGZ1bmN0aW9uKHApIHsgcmV0dXJuIGN1c3RvbShhLCBwKTsgfTtcblxuICByZXR1cm4gZWxhc3RpY0luT3V0O1xufSkoYW1wbGl0dWRlLCBwZXJpb2QpO1xuIiwiZnVuY3Rpb24gcmVzcG9uc2VCbG9iKHJlc3BvbnNlKSB7XG4gIGlmICghcmVzcG9uc2Uub2spIHRocm93IG5ldyBFcnJvcihyZXNwb25zZS5zdGF0dXMgKyBcIiBcIiArIHJlc3BvbnNlLnN0YXR1c1RleHQpO1xuICByZXR1cm4gcmVzcG9uc2UuYmxvYigpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnB1dCwgaW5pdCkge1xuICByZXR1cm4gZmV0Y2goaW5wdXQsIGluaXQpLnRoZW4ocmVzcG9uc2VCbG9iKTtcbn1cbiIsImZ1bmN0aW9uIHJlc3BvbnNlQXJyYXlCdWZmZXIocmVzcG9uc2UpIHtcbiAgaWYgKCFyZXNwb25zZS5vaykgdGhyb3cgbmV3IEVycm9yKHJlc3BvbnNlLnN0YXR1cyArIFwiIFwiICsgcmVzcG9uc2Uuc3RhdHVzVGV4dCk7XG4gIHJldHVybiByZXNwb25zZS5hcnJheUJ1ZmZlcigpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnB1dCwgaW5pdCkge1xuICByZXR1cm4gZmV0Y2goaW5wdXQsIGluaXQpLnRoZW4ocmVzcG9uc2VBcnJheUJ1ZmZlcik7XG59XG4iLCJmdW5jdGlvbiByZXNwb25zZVRleHQocmVzcG9uc2UpIHtcbiAgaWYgKCFyZXNwb25zZS5vaykgdGhyb3cgbmV3IEVycm9yKHJlc3BvbnNlLnN0YXR1cyArIFwiIFwiICsgcmVzcG9uc2Uuc3RhdHVzVGV4dCk7XG4gIHJldHVybiByZXNwb25zZS50ZXh0KCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGlucHV0LCBpbml0KSB7XG4gIHJldHVybiBmZXRjaChpbnB1dCwgaW5pdCkudGhlbihyZXNwb25zZVRleHQpO1xufVxuIiwiaW1wb3J0IHtjc3ZQYXJzZSwgZHN2Rm9ybWF0LCB0c3ZQYXJzZX0gZnJvbSBcImQzLWRzdlwiO1xuaW1wb3J0IHRleHQgZnJvbSBcIi4vdGV4dFwiO1xuXG5mdW5jdGlvbiBkc3ZQYXJzZShwYXJzZSkge1xuICByZXR1cm4gZnVuY3Rpb24oaW5wdXQsIGluaXQsIHJvdykge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyICYmIHR5cGVvZiBpbml0ID09PSBcImZ1bmN0aW9uXCIpIHJvdyA9IGluaXQsIGluaXQgPSB1bmRlZmluZWQ7XG4gICAgcmV0dXJuIHRleHQoaW5wdXQsIGluaXQpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgIHJldHVybiBwYXJzZShyZXNwb25zZSwgcm93KTtcbiAgICB9KTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZHN2KGRlbGltaXRlciwgaW5wdXQsIGluaXQsIHJvdykge1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMyAmJiB0eXBlb2YgaW5pdCA9PT0gXCJmdW5jdGlvblwiKSByb3cgPSBpbml0LCBpbml0ID0gdW5kZWZpbmVkO1xuICB2YXIgZm9ybWF0ID0gZHN2Rm9ybWF0KGRlbGltaXRlcik7XG4gIHJldHVybiB0ZXh0KGlucHV0LCBpbml0KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgcmV0dXJuIGZvcm1hdC5wYXJzZShyZXNwb25zZSwgcm93KTtcbiAgfSk7XG59XG5cbmV4cG9ydCB2YXIgY3N2ID0gZHN2UGFyc2UoY3N2UGFyc2UpO1xuZXhwb3J0IHZhciB0c3YgPSBkc3ZQYXJzZSh0c3ZQYXJzZSk7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnB1dCwgaW5pdCkge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgdmFyIGltYWdlID0gbmV3IEltYWdlO1xuICAgIGZvciAodmFyIGtleSBpbiBpbml0KSBpbWFnZVtrZXldID0gaW5pdFtrZXldO1xuICAgIGltYWdlLm9uZXJyb3IgPSByZWplY3Q7XG4gICAgaW1hZ2Uub25sb2FkID0gZnVuY3Rpb24oKSB7IHJlc29sdmUoaW1hZ2UpOyB9O1xuICAgIGltYWdlLnNyYyA9IGlucHV0O1xuICB9KTtcbn1cbiIsImZ1bmN0aW9uIHJlc3BvbnNlSnNvbihyZXNwb25zZSkge1xuICBpZiAoIXJlc3BvbnNlLm9rKSB0aHJvdyBuZXcgRXJyb3IocmVzcG9uc2Uuc3RhdHVzICsgXCIgXCIgKyByZXNwb25zZS5zdGF0dXNUZXh0KTtcbiAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5wdXQsIGluaXQpIHtcbiAgcmV0dXJuIGZldGNoKGlucHV0LCBpbml0KS50aGVuKHJlc3BvbnNlSnNvbik7XG59XG4iLCJpbXBvcnQgdGV4dCBmcm9tIFwiLi90ZXh0XCI7XG5cbmZ1bmN0aW9uIHBhcnNlcih0eXBlKSB7XG4gIHJldHVybiBmdW5jdGlvbihpbnB1dCwgaW5pdCkgIHtcbiAgICByZXR1cm4gdGV4dChpbnB1dCwgaW5pdCkudGhlbihmdW5jdGlvbih0ZXh0KSB7XG4gICAgICByZXR1cm4gKG5ldyBET01QYXJzZXIpLnBhcnNlRnJvbVN0cmluZyh0ZXh0LCB0eXBlKTtcbiAgICB9KTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcGFyc2VyKFwiYXBwbGljYXRpb24veG1sXCIpO1xuXG5leHBvcnQgdmFyIGh0bWwgPSBwYXJzZXIoXCJ0ZXh0L2h0bWxcIik7XG5cbmV4cG9ydCB2YXIgc3ZnID0gcGFyc2VyKFwiaW1hZ2Uvc3ZnK3htbFwiKTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgsIHkpIHtcbiAgdmFyIG5vZGVzO1xuXG4gIGlmICh4ID09IG51bGwpIHggPSAwO1xuICBpZiAoeSA9PSBudWxsKSB5ID0gMDtcblxuICBmdW5jdGlvbiBmb3JjZSgpIHtcbiAgICB2YXIgaSxcbiAgICAgICAgbiA9IG5vZGVzLmxlbmd0aCxcbiAgICAgICAgbm9kZSxcbiAgICAgICAgc3ggPSAwLFxuICAgICAgICBzeSA9IDA7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBub2RlID0gbm9kZXNbaV0sIHN4ICs9IG5vZGUueCwgc3kgKz0gbm9kZS55O1xuICAgIH1cblxuICAgIGZvciAoc3ggPSBzeCAvIG4gLSB4LCBzeSA9IHN5IC8gbiAtIHksIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBub2RlID0gbm9kZXNbaV0sIG5vZGUueCAtPSBzeCwgbm9kZS55IC09IHN5O1xuICAgIH1cbiAgfVxuXG4gIGZvcmNlLmluaXRpYWxpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgbm9kZXMgPSBfO1xuICB9O1xuXG4gIGZvcmNlLnggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeCA9ICtfLCBmb3JjZSkgOiB4O1xuICB9O1xuXG4gIGZvcmNlLnkgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeSA9ICtfLCBmb3JjZSkgOiB5O1xuICB9O1xuXG4gIHJldHVybiBmb3JjZTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiAoTWF0aC5yYW5kb20oKSAtIDAuNSkgKiAxZS02O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZCkge1xuICB2YXIgeCA9ICt0aGlzLl94LmNhbGwobnVsbCwgZCksXG4gICAgICB5ID0gK3RoaXMuX3kuY2FsbChudWxsLCBkKTtcbiAgcmV0dXJuIGFkZCh0aGlzLmNvdmVyKHgsIHkpLCB4LCB5LCBkKTtcbn1cblxuZnVuY3Rpb24gYWRkKHRyZWUsIHgsIHksIGQpIHtcbiAgaWYgKGlzTmFOKHgpIHx8IGlzTmFOKHkpKSByZXR1cm4gdHJlZTsgLy8gaWdub3JlIGludmFsaWQgcG9pbnRzXG5cbiAgdmFyIHBhcmVudCxcbiAgICAgIG5vZGUgPSB0cmVlLl9yb290LFxuICAgICAgbGVhZiA9IHtkYXRhOiBkfSxcbiAgICAgIHgwID0gdHJlZS5feDAsXG4gICAgICB5MCA9IHRyZWUuX3kwLFxuICAgICAgeDEgPSB0cmVlLl94MSxcbiAgICAgIHkxID0gdHJlZS5feTEsXG4gICAgICB4bSxcbiAgICAgIHltLFxuICAgICAgeHAsXG4gICAgICB5cCxcbiAgICAgIHJpZ2h0LFxuICAgICAgYm90dG9tLFxuICAgICAgaSxcbiAgICAgIGo7XG5cbiAgLy8gSWYgdGhlIHRyZWUgaXMgZW1wdHksIGluaXRpYWxpemUgdGhlIHJvb3QgYXMgYSBsZWFmLlxuICBpZiAoIW5vZGUpIHJldHVybiB0cmVlLl9yb290ID0gbGVhZiwgdHJlZTtcblxuICAvLyBGaW5kIHRoZSBleGlzdGluZyBsZWFmIGZvciB0aGUgbmV3IHBvaW50LCBvciBhZGQgaXQuXG4gIHdoaWxlIChub2RlLmxlbmd0aCkge1xuICAgIGlmIChyaWdodCA9IHggPj0gKHhtID0gKHgwICsgeDEpIC8gMikpIHgwID0geG07IGVsc2UgeDEgPSB4bTtcbiAgICBpZiAoYm90dG9tID0geSA+PSAoeW0gPSAoeTAgKyB5MSkgLyAyKSkgeTAgPSB5bTsgZWxzZSB5MSA9IHltO1xuICAgIGlmIChwYXJlbnQgPSBub2RlLCAhKG5vZGUgPSBub2RlW2kgPSBib3R0b20gPDwgMSB8IHJpZ2h0XSkpIHJldHVybiBwYXJlbnRbaV0gPSBsZWFmLCB0cmVlO1xuICB9XG5cbiAgLy8gSXMgdGhlIG5ldyBwb2ludCBpcyBleGFjdGx5IGNvaW5jaWRlbnQgd2l0aCB0aGUgZXhpc3RpbmcgcG9pbnQ/XG4gIHhwID0gK3RyZWUuX3guY2FsbChudWxsLCBub2RlLmRhdGEpO1xuICB5cCA9ICt0cmVlLl95LmNhbGwobnVsbCwgbm9kZS5kYXRhKTtcbiAgaWYgKHggPT09IHhwICYmIHkgPT09IHlwKSByZXR1cm4gbGVhZi5uZXh0ID0gbm9kZSwgcGFyZW50ID8gcGFyZW50W2ldID0gbGVhZiA6IHRyZWUuX3Jvb3QgPSBsZWFmLCB0cmVlO1xuXG4gIC8vIE90aGVyd2lzZSwgc3BsaXQgdGhlIGxlYWYgbm9kZSB1bnRpbCB0aGUgb2xkIGFuZCBuZXcgcG9pbnQgYXJlIHNlcGFyYXRlZC5cbiAgZG8ge1xuICAgIHBhcmVudCA9IHBhcmVudCA/IHBhcmVudFtpXSA9IG5ldyBBcnJheSg0KSA6IHRyZWUuX3Jvb3QgPSBuZXcgQXJyYXkoNCk7XG4gICAgaWYgKHJpZ2h0ID0geCA+PSAoeG0gPSAoeDAgKyB4MSkgLyAyKSkgeDAgPSB4bTsgZWxzZSB4MSA9IHhtO1xuICAgIGlmIChib3R0b20gPSB5ID49ICh5bSA9ICh5MCArIHkxKSAvIDIpKSB5MCA9IHltOyBlbHNlIHkxID0geW07XG4gIH0gd2hpbGUgKChpID0gYm90dG9tIDw8IDEgfCByaWdodCkgPT09IChqID0gKHlwID49IHltKSA8PCAxIHwgKHhwID49IHhtKSkpO1xuICByZXR1cm4gcGFyZW50W2pdID0gbm9kZSwgcGFyZW50W2ldID0gbGVhZiwgdHJlZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZEFsbChkYXRhKSB7XG4gIHZhciBkLCBpLCBuID0gZGF0YS5sZW5ndGgsXG4gICAgICB4LFxuICAgICAgeSxcbiAgICAgIHh6ID0gbmV3IEFycmF5KG4pLFxuICAgICAgeXogPSBuZXcgQXJyYXkobiksXG4gICAgICB4MCA9IEluZmluaXR5LFxuICAgICAgeTAgPSBJbmZpbml0eSxcbiAgICAgIHgxID0gLUluZmluaXR5LFxuICAgICAgeTEgPSAtSW5maW5pdHk7XG5cbiAgLy8gQ29tcHV0ZSB0aGUgcG9pbnRzIGFuZCB0aGVpciBleHRlbnQuXG4gIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICBpZiAoaXNOYU4oeCA9ICt0aGlzLl94LmNhbGwobnVsbCwgZCA9IGRhdGFbaV0pKSB8fCBpc05hTih5ID0gK3RoaXMuX3kuY2FsbChudWxsLCBkKSkpIGNvbnRpbnVlO1xuICAgIHh6W2ldID0geDtcbiAgICB5eltpXSA9IHk7XG4gICAgaWYgKHggPCB4MCkgeDAgPSB4O1xuICAgIGlmICh4ID4geDEpIHgxID0geDtcbiAgICBpZiAoeSA8IHkwKSB5MCA9IHk7XG4gICAgaWYgKHkgPiB5MSkgeTEgPSB5O1xuICB9XG5cbiAgLy8gSWYgdGhlcmUgd2VyZSBubyAodmFsaWQpIHBvaW50cywgYWJvcnQuXG4gIGlmICh4MCA+IHgxIHx8IHkwID4geTEpIHJldHVybiB0aGlzO1xuXG4gIC8vIEV4cGFuZCB0aGUgdHJlZSB0byBjb3ZlciB0aGUgbmV3IHBvaW50cy5cbiAgdGhpcy5jb3Zlcih4MCwgeTApLmNvdmVyKHgxLCB5MSk7XG5cbiAgLy8gQWRkIHRoZSBuZXcgcG9pbnRzLlxuICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgYWRkKHRoaXMsIHh6W2ldLCB5eltpXSwgZGF0YVtpXSk7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgsIHkpIHtcbiAgaWYgKGlzTmFOKHggPSAreCkgfHwgaXNOYU4oeSA9ICt5KSkgcmV0dXJuIHRoaXM7IC8vIGlnbm9yZSBpbnZhbGlkIHBvaW50c1xuXG4gIHZhciB4MCA9IHRoaXMuX3gwLFxuICAgICAgeTAgPSB0aGlzLl95MCxcbiAgICAgIHgxID0gdGhpcy5feDEsXG4gICAgICB5MSA9IHRoaXMuX3kxO1xuXG4gIC8vIElmIHRoZSBxdWFkdHJlZSBoYXMgbm8gZXh0ZW50LCBpbml0aWFsaXplIHRoZW0uXG4gIC8vIEludGVnZXIgZXh0ZW50IGFyZSBuZWNlc3Nhcnkgc28gdGhhdCBpZiB3ZSBsYXRlciBkb3VibGUgdGhlIGV4dGVudCxcbiAgLy8gdGhlIGV4aXN0aW5nIHF1YWRyYW50IGJvdW5kYXJpZXMgZG9u4oCZdCBjaGFuZ2UgZHVlIHRvIGZsb2F0aW5nIHBvaW50IGVycm9yIVxuICBpZiAoaXNOYU4oeDApKSB7XG4gICAgeDEgPSAoeDAgPSBNYXRoLmZsb29yKHgpKSArIDE7XG4gICAgeTEgPSAoeTAgPSBNYXRoLmZsb29yKHkpKSArIDE7XG4gIH1cblxuICAvLyBPdGhlcndpc2UsIGRvdWJsZSByZXBlYXRlZGx5IHRvIGNvdmVyLlxuICBlbHNlIHtcbiAgICB2YXIgeiA9IHgxIC0geDAsXG4gICAgICAgIG5vZGUgPSB0aGlzLl9yb290LFxuICAgICAgICBwYXJlbnQsXG4gICAgICAgIGk7XG5cbiAgICB3aGlsZSAoeDAgPiB4IHx8IHggPj0geDEgfHwgeTAgPiB5IHx8IHkgPj0geTEpIHtcbiAgICAgIGkgPSAoeSA8IHkwKSA8PCAxIHwgKHggPCB4MCk7XG4gICAgICBwYXJlbnQgPSBuZXcgQXJyYXkoNCksIHBhcmVudFtpXSA9IG5vZGUsIG5vZGUgPSBwYXJlbnQsIHogKj0gMjtcbiAgICAgIHN3aXRjaCAoaSkge1xuICAgICAgICBjYXNlIDA6IHgxID0geDAgKyB6LCB5MSA9IHkwICsgejsgYnJlYWs7XG4gICAgICAgIGNhc2UgMTogeDAgPSB4MSAtIHosIHkxID0geTAgKyB6OyBicmVhaztcbiAgICAgICAgY2FzZSAyOiB4MSA9IHgwICsgeiwgeTAgPSB5MSAtIHo7IGJyZWFrO1xuICAgICAgICBjYXNlIDM6IHgwID0geDEgLSB6LCB5MCA9IHkxIC0gejsgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX3Jvb3QgJiYgdGhpcy5fcm9vdC5sZW5ndGgpIHRoaXMuX3Jvb3QgPSBub2RlO1xuICB9XG5cbiAgdGhpcy5feDAgPSB4MDtcbiAgdGhpcy5feTAgPSB5MDtcbiAgdGhpcy5feDEgPSB4MTtcbiAgdGhpcy5feTEgPSB5MTtcbiAgcmV0dXJuIHRoaXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihub2RlLCB4MCwgeTAsIHgxLCB5MSkge1xuICB0aGlzLm5vZGUgPSBub2RlO1xuICB0aGlzLngwID0geDA7XG4gIHRoaXMueTAgPSB5MDtcbiAgdGhpcy54MSA9IHgxO1xuICB0aGlzLnkxID0geTE7XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gZGVmYXVsdFgoZCkge1xuICByZXR1cm4gZFswXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oXykge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0aGlzLl94ID0gXywgdGhpcykgOiB0aGlzLl94O1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRZKGQpIHtcbiAgcmV0dXJuIGRbMV07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKF8pIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhpcy5feSA9IF8sIHRoaXMpIDogdGhpcy5feTtcbn1cbiIsImltcG9ydCB0cmVlX2FkZCwge2FkZEFsbCBhcyB0cmVlX2FkZEFsbH0gZnJvbSBcIi4vYWRkLmpzXCI7XG5pbXBvcnQgdHJlZV9jb3ZlciBmcm9tIFwiLi9jb3Zlci5qc1wiO1xuaW1wb3J0IHRyZWVfZGF0YSBmcm9tIFwiLi9kYXRhLmpzXCI7XG5pbXBvcnQgdHJlZV9leHRlbnQgZnJvbSBcIi4vZXh0ZW50LmpzXCI7XG5pbXBvcnQgdHJlZV9maW5kIGZyb20gXCIuL2ZpbmQuanNcIjtcbmltcG9ydCB0cmVlX3JlbW92ZSwge3JlbW92ZUFsbCBhcyB0cmVlX3JlbW92ZUFsbH0gZnJvbSBcIi4vcmVtb3ZlLmpzXCI7XG5pbXBvcnQgdHJlZV9yb290IGZyb20gXCIuL3Jvb3QuanNcIjtcbmltcG9ydCB0cmVlX3NpemUgZnJvbSBcIi4vc2l6ZS5qc1wiO1xuaW1wb3J0IHRyZWVfdmlzaXQgZnJvbSBcIi4vdmlzaXQuanNcIjtcbmltcG9ydCB0cmVlX3Zpc2l0QWZ0ZXIgZnJvbSBcIi4vdmlzaXRBZnRlci5qc1wiO1xuaW1wb3J0IHRyZWVfeCwge2RlZmF1bHRYfSBmcm9tIFwiLi94LmpzXCI7XG5pbXBvcnQgdHJlZV95LCB7ZGVmYXVsdFl9IGZyb20gXCIuL3kuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcXVhZHRyZWUobm9kZXMsIHgsIHkpIHtcbiAgdmFyIHRyZWUgPSBuZXcgUXVhZHRyZWUoeCA9PSBudWxsID8gZGVmYXVsdFggOiB4LCB5ID09IG51bGwgPyBkZWZhdWx0WSA6IHksIE5hTiwgTmFOLCBOYU4sIE5hTik7XG4gIHJldHVybiBub2RlcyA9PSBudWxsID8gdHJlZSA6IHRyZWUuYWRkQWxsKG5vZGVzKTtcbn1cblxuZnVuY3Rpb24gUXVhZHRyZWUoeCwgeSwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgdGhpcy5feCA9IHg7XG4gIHRoaXMuX3kgPSB5O1xuICB0aGlzLl94MCA9IHgwO1xuICB0aGlzLl95MCA9IHkwO1xuICB0aGlzLl94MSA9IHgxO1xuICB0aGlzLl95MSA9IHkxO1xuICB0aGlzLl9yb290ID0gdW5kZWZpbmVkO1xufVxuXG5mdW5jdGlvbiBsZWFmX2NvcHkobGVhZikge1xuICB2YXIgY29weSA9IHtkYXRhOiBsZWFmLmRhdGF9LCBuZXh0ID0gY29weTtcbiAgd2hpbGUgKGxlYWYgPSBsZWFmLm5leHQpIG5leHQgPSBuZXh0Lm5leHQgPSB7ZGF0YTogbGVhZi5kYXRhfTtcbiAgcmV0dXJuIGNvcHk7XG59XG5cbnZhciB0cmVlUHJvdG8gPSBxdWFkdHJlZS5wcm90b3R5cGUgPSBRdWFkdHJlZS5wcm90b3R5cGU7XG5cbnRyZWVQcm90by5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gIHZhciBjb3B5ID0gbmV3IFF1YWR0cmVlKHRoaXMuX3gsIHRoaXMuX3ksIHRoaXMuX3gwLCB0aGlzLl95MCwgdGhpcy5feDEsIHRoaXMuX3kxKSxcbiAgICAgIG5vZGUgPSB0aGlzLl9yb290LFxuICAgICAgbm9kZXMsXG4gICAgICBjaGlsZDtcblxuICBpZiAoIW5vZGUpIHJldHVybiBjb3B5O1xuXG4gIGlmICghbm9kZS5sZW5ndGgpIHJldHVybiBjb3B5Ll9yb290ID0gbGVhZl9jb3B5KG5vZGUpLCBjb3B5O1xuXG4gIG5vZGVzID0gW3tzb3VyY2U6IG5vZGUsIHRhcmdldDogY29weS5fcm9vdCA9IG5ldyBBcnJheSg0KX1dO1xuICB3aGlsZSAobm9kZSA9IG5vZGVzLnBvcCgpKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCA0OyArK2kpIHtcbiAgICAgIGlmIChjaGlsZCA9IG5vZGUuc291cmNlW2ldKSB7XG4gICAgICAgIGlmIChjaGlsZC5sZW5ndGgpIG5vZGVzLnB1c2goe3NvdXJjZTogY2hpbGQsIHRhcmdldDogbm9kZS50YXJnZXRbaV0gPSBuZXcgQXJyYXkoNCl9KTtcbiAgICAgICAgZWxzZSBub2RlLnRhcmdldFtpXSA9IGxlYWZfY29weShjaGlsZCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGNvcHk7XG59O1xuXG50cmVlUHJvdG8uYWRkID0gdHJlZV9hZGQ7XG50cmVlUHJvdG8uYWRkQWxsID0gdHJlZV9hZGRBbGw7XG50cmVlUHJvdG8uY292ZXIgPSB0cmVlX2NvdmVyO1xudHJlZVByb3RvLmRhdGEgPSB0cmVlX2RhdGE7XG50cmVlUHJvdG8uZXh0ZW50ID0gdHJlZV9leHRlbnQ7XG50cmVlUHJvdG8uZmluZCA9IHRyZWVfZmluZDtcbnRyZWVQcm90by5yZW1vdmUgPSB0cmVlX3JlbW92ZTtcbnRyZWVQcm90by5yZW1vdmVBbGwgPSB0cmVlX3JlbW92ZUFsbDtcbnRyZWVQcm90by5yb290ID0gdHJlZV9yb290O1xudHJlZVByb3RvLnNpemUgPSB0cmVlX3NpemU7XG50cmVlUHJvdG8udmlzaXQgPSB0cmVlX3Zpc2l0O1xudHJlZVByb3RvLnZpc2l0QWZ0ZXIgPSB0cmVlX3Zpc2l0QWZ0ZXI7XG50cmVlUHJvdG8ueCA9IHRyZWVfeDtcbnRyZWVQcm90by55ID0gdHJlZV95O1xuIiwiaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5pbXBvcnQgamlnZ2xlIGZyb20gXCIuL2ppZ2dsZVwiO1xuaW1wb3J0IHtxdWFkdHJlZX0gZnJvbSBcImQzLXF1YWR0cmVlXCI7XG5cbmZ1bmN0aW9uIHgoZCkge1xuICByZXR1cm4gZC54ICsgZC52eDtcbn1cblxuZnVuY3Rpb24geShkKSB7XG4gIHJldHVybiBkLnkgKyBkLnZ5O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihyYWRpdXMpIHtcbiAgdmFyIG5vZGVzLFxuICAgICAgcmFkaWksXG4gICAgICBzdHJlbmd0aCA9IDEsXG4gICAgICBpdGVyYXRpb25zID0gMTtcblxuICBpZiAodHlwZW9mIHJhZGl1cyAhPT0gXCJmdW5jdGlvblwiKSByYWRpdXMgPSBjb25zdGFudChyYWRpdXMgPT0gbnVsbCA/IDEgOiArcmFkaXVzKTtcblxuICBmdW5jdGlvbiBmb3JjZSgpIHtcbiAgICB2YXIgaSwgbiA9IG5vZGVzLmxlbmd0aCxcbiAgICAgICAgdHJlZSxcbiAgICAgICAgbm9kZSxcbiAgICAgICAgeGksXG4gICAgICAgIHlpLFxuICAgICAgICByaSxcbiAgICAgICAgcmkyO1xuXG4gICAgZm9yICh2YXIgayA9IDA7IGsgPCBpdGVyYXRpb25zOyArK2spIHtcbiAgICAgIHRyZWUgPSBxdWFkdHJlZShub2RlcywgeCwgeSkudmlzaXRBZnRlcihwcmVwYXJlKTtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgbm9kZSA9IG5vZGVzW2ldO1xuICAgICAgICByaSA9IHJhZGlpW25vZGUuaW5kZXhdLCByaTIgPSByaSAqIHJpO1xuICAgICAgICB4aSA9IG5vZGUueCArIG5vZGUudng7XG4gICAgICAgIHlpID0gbm9kZS55ICsgbm9kZS52eTtcbiAgICAgICAgdHJlZS52aXNpdChhcHBseSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gYXBwbHkocXVhZCwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgICAgIHZhciBkYXRhID0gcXVhZC5kYXRhLCByaiA9IHF1YWQuciwgciA9IHJpICsgcmo7XG4gICAgICBpZiAoZGF0YSkge1xuICAgICAgICBpZiAoZGF0YS5pbmRleCA+IG5vZGUuaW5kZXgpIHtcbiAgICAgICAgICB2YXIgeCA9IHhpIC0gZGF0YS54IC0gZGF0YS52eCxcbiAgICAgICAgICAgICAgeSA9IHlpIC0gZGF0YS55IC0gZGF0YS52eSxcbiAgICAgICAgICAgICAgbCA9IHggKiB4ICsgeSAqIHk7XG4gICAgICAgICAgaWYgKGwgPCByICogcikge1xuICAgICAgICAgICAgaWYgKHggPT09IDApIHggPSBqaWdnbGUoKSwgbCArPSB4ICogeDtcbiAgICAgICAgICAgIGlmICh5ID09PSAwKSB5ID0gamlnZ2xlKCksIGwgKz0geSAqIHk7XG4gICAgICAgICAgICBsID0gKHIgLSAobCA9IE1hdGguc3FydChsKSkpIC8gbCAqIHN0cmVuZ3RoO1xuICAgICAgICAgICAgbm9kZS52eCArPSAoeCAqPSBsKSAqIChyID0gKHJqICo9IHJqKSAvIChyaTIgKyByaikpO1xuICAgICAgICAgICAgbm9kZS52eSArPSAoeSAqPSBsKSAqIHI7XG4gICAgICAgICAgICBkYXRhLnZ4IC09IHggKiAociA9IDEgLSByKTtcbiAgICAgICAgICAgIGRhdGEudnkgLT0geSAqIHI7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHJldHVybiB4MCA+IHhpICsgciB8fCB4MSA8IHhpIC0gciB8fCB5MCA+IHlpICsgciB8fCB5MSA8IHlpIC0gcjtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwcmVwYXJlKHF1YWQpIHtcbiAgICBpZiAocXVhZC5kYXRhKSByZXR1cm4gcXVhZC5yID0gcmFkaWlbcXVhZC5kYXRhLmluZGV4XTtcbiAgICBmb3IgKHZhciBpID0gcXVhZC5yID0gMDsgaSA8IDQ7ICsraSkge1xuICAgICAgaWYgKHF1YWRbaV0gJiYgcXVhZFtpXS5yID4gcXVhZC5yKSB7XG4gICAgICAgIHF1YWQuciA9IHF1YWRbaV0ucjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBpbml0aWFsaXplKCkge1xuICAgIGlmICghbm9kZXMpIHJldHVybjtcbiAgICB2YXIgaSwgbiA9IG5vZGVzLmxlbmd0aCwgbm9kZTtcbiAgICByYWRpaSA9IG5ldyBBcnJheShuKTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSBub2RlID0gbm9kZXNbaV0sIHJhZGlpW25vZGUuaW5kZXhdID0gK3JhZGl1cyhub2RlLCBpLCBub2Rlcyk7XG4gIH1cblxuICBmb3JjZS5pbml0aWFsaXplID0gZnVuY3Rpb24oXykge1xuICAgIG5vZGVzID0gXztcbiAgICBpbml0aWFsaXplKCk7XG4gIH07XG5cbiAgZm9yY2UuaXRlcmF0aW9ucyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpdGVyYXRpb25zID0gK18sIGZvcmNlKSA6IGl0ZXJhdGlvbnM7XG4gIH07XG5cbiAgZm9yY2Uuc3RyZW5ndGggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3RyZW5ndGggPSArXywgZm9yY2UpIDogc3RyZW5ndGg7XG4gIH07XG5cbiAgZm9yY2UucmFkaXVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJhZGl1cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBpbml0aWFsaXplKCksIGZvcmNlKSA6IHJhZGl1cztcbiAgfTtcblxuICByZXR1cm4gZm9yY2U7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGRhdGEgPSBbXTtcbiAgdGhpcy52aXNpdChmdW5jdGlvbihub2RlKSB7XG4gICAgaWYgKCFub2RlLmxlbmd0aCkgZG8gZGF0YS5wdXNoKG5vZGUuZGF0YSk7IHdoaWxlIChub2RlID0gbm9kZS5uZXh0KVxuICB9KTtcbiAgcmV0dXJuIGRhdGE7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihfKSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoXG4gICAgICA/IHRoaXMuY292ZXIoK19bMF1bMF0sICtfWzBdWzFdKS5jb3ZlcigrX1sxXVswXSwgK19bMV1bMV0pXG4gICAgICA6IGlzTmFOKHRoaXMuX3gwKSA/IHVuZGVmaW5lZCA6IFtbdGhpcy5feDAsIHRoaXMuX3kwXSwgW3RoaXMuX3gxLCB0aGlzLl95MV1dO1xufVxuIiwiaW1wb3J0IFF1YWQgZnJvbSBcIi4vcXVhZC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4LCB5LCByYWRpdXMpIHtcbiAgdmFyIGRhdGEsXG4gICAgICB4MCA9IHRoaXMuX3gwLFxuICAgICAgeTAgPSB0aGlzLl95MCxcbiAgICAgIHgxLFxuICAgICAgeTEsXG4gICAgICB4MixcbiAgICAgIHkyLFxuICAgICAgeDMgPSB0aGlzLl94MSxcbiAgICAgIHkzID0gdGhpcy5feTEsXG4gICAgICBxdWFkcyA9IFtdLFxuICAgICAgbm9kZSA9IHRoaXMuX3Jvb3QsXG4gICAgICBxLFxuICAgICAgaTtcblxuICBpZiAobm9kZSkgcXVhZHMucHVzaChuZXcgUXVhZChub2RlLCB4MCwgeTAsIHgzLCB5MykpO1xuICBpZiAocmFkaXVzID09IG51bGwpIHJhZGl1cyA9IEluZmluaXR5O1xuICBlbHNlIHtcbiAgICB4MCA9IHggLSByYWRpdXMsIHkwID0geSAtIHJhZGl1cztcbiAgICB4MyA9IHggKyByYWRpdXMsIHkzID0geSArIHJhZGl1cztcbiAgICByYWRpdXMgKj0gcmFkaXVzO1xuICB9XG5cbiAgd2hpbGUgKHEgPSBxdWFkcy5wb3AoKSkge1xuXG4gICAgLy8gU3RvcCBzZWFyY2hpbmcgaWYgdGhpcyBxdWFkcmFudCBjYW7igJl0IGNvbnRhaW4gYSBjbG9zZXIgbm9kZS5cbiAgICBpZiAoIShub2RlID0gcS5ub2RlKVxuICAgICAgICB8fCAoeDEgPSBxLngwKSA+IHgzXG4gICAgICAgIHx8ICh5MSA9IHEueTApID4geTNcbiAgICAgICAgfHwgKHgyID0gcS54MSkgPCB4MFxuICAgICAgICB8fCAoeTIgPSBxLnkxKSA8IHkwKSBjb250aW51ZTtcblxuICAgIC8vIEJpc2VjdCB0aGUgY3VycmVudCBxdWFkcmFudC5cbiAgICBpZiAobm9kZS5sZW5ndGgpIHtcbiAgICAgIHZhciB4bSA9ICh4MSArIHgyKSAvIDIsXG4gICAgICAgICAgeW0gPSAoeTEgKyB5MikgLyAyO1xuXG4gICAgICBxdWFkcy5wdXNoKFxuICAgICAgICBuZXcgUXVhZChub2RlWzNdLCB4bSwgeW0sIHgyLCB5MiksXG4gICAgICAgIG5ldyBRdWFkKG5vZGVbMl0sIHgxLCB5bSwgeG0sIHkyKSxcbiAgICAgICAgbmV3IFF1YWQobm9kZVsxXSwgeG0sIHkxLCB4MiwgeW0pLFxuICAgICAgICBuZXcgUXVhZChub2RlWzBdLCB4MSwgeTEsIHhtLCB5bSlcbiAgICAgICk7XG5cbiAgICAgIC8vIFZpc2l0IHRoZSBjbG9zZXN0IHF1YWRyYW50IGZpcnN0LlxuICAgICAgaWYgKGkgPSAoeSA+PSB5bSkgPDwgMSB8ICh4ID49IHhtKSkge1xuICAgICAgICBxID0gcXVhZHNbcXVhZHMubGVuZ3RoIC0gMV07XG4gICAgICAgIHF1YWRzW3F1YWRzLmxlbmd0aCAtIDFdID0gcXVhZHNbcXVhZHMubGVuZ3RoIC0gMSAtIGldO1xuICAgICAgICBxdWFkc1txdWFkcy5sZW5ndGggLSAxIC0gaV0gPSBxO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFZpc2l0IHRoaXMgcG9pbnQuIChWaXNpdGluZyBjb2luY2lkZW50IHBvaW50cyBpc27igJl0IG5lY2Vzc2FyeSEpXG4gICAgZWxzZSB7XG4gICAgICB2YXIgZHggPSB4IC0gK3RoaXMuX3guY2FsbChudWxsLCBub2RlLmRhdGEpLFxuICAgICAgICAgIGR5ID0geSAtICt0aGlzLl95LmNhbGwobnVsbCwgbm9kZS5kYXRhKSxcbiAgICAgICAgICBkMiA9IGR4ICogZHggKyBkeSAqIGR5O1xuICAgICAgaWYgKGQyIDwgcmFkaXVzKSB7XG4gICAgICAgIHZhciBkID0gTWF0aC5zcXJ0KHJhZGl1cyA9IGQyKTtcbiAgICAgICAgeDAgPSB4IC0gZCwgeTAgPSB5IC0gZDtcbiAgICAgICAgeDMgPSB4ICsgZCwgeTMgPSB5ICsgZDtcbiAgICAgICAgZGF0YSA9IG5vZGUuZGF0YTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gZGF0YTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGQpIHtcbiAgaWYgKGlzTmFOKHggPSArdGhpcy5feC5jYWxsKG51bGwsIGQpKSB8fCBpc05hTih5ID0gK3RoaXMuX3kuY2FsbChudWxsLCBkKSkpIHJldHVybiB0aGlzOyAvLyBpZ25vcmUgaW52YWxpZCBwb2ludHNcblxuICB2YXIgcGFyZW50LFxuICAgICAgbm9kZSA9IHRoaXMuX3Jvb3QsXG4gICAgICByZXRhaW5lcixcbiAgICAgIHByZXZpb3VzLFxuICAgICAgbmV4dCxcbiAgICAgIHgwID0gdGhpcy5feDAsXG4gICAgICB5MCA9IHRoaXMuX3kwLFxuICAgICAgeDEgPSB0aGlzLl94MSxcbiAgICAgIHkxID0gdGhpcy5feTEsXG4gICAgICB4LFxuICAgICAgeSxcbiAgICAgIHhtLFxuICAgICAgeW0sXG4gICAgICByaWdodCxcbiAgICAgIGJvdHRvbSxcbiAgICAgIGksXG4gICAgICBqO1xuXG4gIC8vIElmIHRoZSB0cmVlIGlzIGVtcHR5LCBpbml0aWFsaXplIHRoZSByb290IGFzIGEgbGVhZi5cbiAgaWYgKCFub2RlKSByZXR1cm4gdGhpcztcblxuICAvLyBGaW5kIHRoZSBsZWFmIG5vZGUgZm9yIHRoZSBwb2ludC5cbiAgLy8gV2hpbGUgZGVzY2VuZGluZywgYWxzbyByZXRhaW4gdGhlIGRlZXBlc3QgcGFyZW50IHdpdGggYSBub24tcmVtb3ZlZCBzaWJsaW5nLlxuICBpZiAobm9kZS5sZW5ndGgpIHdoaWxlICh0cnVlKSB7XG4gICAgaWYgKHJpZ2h0ID0geCA+PSAoeG0gPSAoeDAgKyB4MSkgLyAyKSkgeDAgPSB4bTsgZWxzZSB4MSA9IHhtO1xuICAgIGlmIChib3R0b20gPSB5ID49ICh5bSA9ICh5MCArIHkxKSAvIDIpKSB5MCA9IHltOyBlbHNlIHkxID0geW07XG4gICAgaWYgKCEocGFyZW50ID0gbm9kZSwgbm9kZSA9IG5vZGVbaSA9IGJvdHRvbSA8PCAxIHwgcmlnaHRdKSkgcmV0dXJuIHRoaXM7XG4gICAgaWYgKCFub2RlLmxlbmd0aCkgYnJlYWs7XG4gICAgaWYgKHBhcmVudFsoaSArIDEpICYgM10gfHwgcGFyZW50WyhpICsgMikgJiAzXSB8fCBwYXJlbnRbKGkgKyAzKSAmIDNdKSByZXRhaW5lciA9IHBhcmVudCwgaiA9IGk7XG4gIH1cblxuICAvLyBGaW5kIHRoZSBwb2ludCB0byByZW1vdmUuXG4gIHdoaWxlIChub2RlLmRhdGEgIT09IGQpIGlmICghKHByZXZpb3VzID0gbm9kZSwgbm9kZSA9IG5vZGUubmV4dCkpIHJldHVybiB0aGlzO1xuICBpZiAobmV4dCA9IG5vZGUubmV4dCkgZGVsZXRlIG5vZGUubmV4dDtcblxuICAvLyBJZiB0aGVyZSBhcmUgbXVsdGlwbGUgY29pbmNpZGVudCBwb2ludHMsIHJlbW92ZSBqdXN0IHRoZSBwb2ludC5cbiAgaWYgKHByZXZpb3VzKSByZXR1cm4gKG5leHQgPyBwcmV2aW91cy5uZXh0ID0gbmV4dCA6IGRlbGV0ZSBwcmV2aW91cy5uZXh0KSwgdGhpcztcblxuICAvLyBJZiB0aGlzIGlzIHRoZSByb290IHBvaW50LCByZW1vdmUgaXQuXG4gIGlmICghcGFyZW50KSByZXR1cm4gdGhpcy5fcm9vdCA9IG5leHQsIHRoaXM7XG5cbiAgLy8gUmVtb3ZlIHRoaXMgbGVhZi5cbiAgbmV4dCA/IHBhcmVudFtpXSA9IG5leHQgOiBkZWxldGUgcGFyZW50W2ldO1xuXG4gIC8vIElmIHRoZSBwYXJlbnQgbm93IGNvbnRhaW5zIGV4YWN0bHkgb25lIGxlYWYsIGNvbGxhcHNlIHN1cGVyZmx1b3VzIHBhcmVudHMuXG4gIGlmICgobm9kZSA9IHBhcmVudFswXSB8fCBwYXJlbnRbMV0gfHwgcGFyZW50WzJdIHx8IHBhcmVudFszXSlcbiAgICAgICYmIG5vZGUgPT09IChwYXJlbnRbM10gfHwgcGFyZW50WzJdIHx8IHBhcmVudFsxXSB8fCBwYXJlbnRbMF0pXG4gICAgICAmJiAhbm9kZS5sZW5ndGgpIHtcbiAgICBpZiAocmV0YWluZXIpIHJldGFpbmVyW2pdID0gbm9kZTtcbiAgICBlbHNlIHRoaXMuX3Jvb3QgPSBub2RlO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVBbGwoZGF0YSkge1xuICBmb3IgKHZhciBpID0gMCwgbiA9IGRhdGEubGVuZ3RoOyBpIDwgbjsgKytpKSB0aGlzLnJlbW92ZShkYXRhW2ldKTtcbiAgcmV0dXJuIHRoaXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuX3Jvb3Q7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHNpemUgPSAwO1xuICB0aGlzLnZpc2l0KGZ1bmN0aW9uKG5vZGUpIHtcbiAgICBpZiAoIW5vZGUubGVuZ3RoKSBkbyArK3NpemU7IHdoaWxlIChub2RlID0gbm9kZS5uZXh0KVxuICB9KTtcbiAgcmV0dXJuIHNpemU7XG59XG4iLCJpbXBvcnQgUXVhZCBmcm9tIFwiLi9xdWFkLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHZhciBxdWFkcyA9IFtdLCBxLCBub2RlID0gdGhpcy5fcm9vdCwgY2hpbGQsIHgwLCB5MCwgeDEsIHkxO1xuICBpZiAobm9kZSkgcXVhZHMucHVzaChuZXcgUXVhZChub2RlLCB0aGlzLl94MCwgdGhpcy5feTAsIHRoaXMuX3gxLCB0aGlzLl95MSkpO1xuICB3aGlsZSAocSA9IHF1YWRzLnBvcCgpKSB7XG4gICAgaWYgKCFjYWxsYmFjayhub2RlID0gcS5ub2RlLCB4MCA9IHEueDAsIHkwID0gcS55MCwgeDEgPSBxLngxLCB5MSA9IHEueTEpICYmIG5vZGUubGVuZ3RoKSB7XG4gICAgICB2YXIgeG0gPSAoeDAgKyB4MSkgLyAyLCB5bSA9ICh5MCArIHkxKSAvIDI7XG4gICAgICBpZiAoY2hpbGQgPSBub2RlWzNdKSBxdWFkcy5wdXNoKG5ldyBRdWFkKGNoaWxkLCB4bSwgeW0sIHgxLCB5MSkpO1xuICAgICAgaWYgKGNoaWxkID0gbm9kZVsyXSkgcXVhZHMucHVzaChuZXcgUXVhZChjaGlsZCwgeDAsIHltLCB4bSwgeTEpKTtcbiAgICAgIGlmIChjaGlsZCA9IG5vZGVbMV0pIHF1YWRzLnB1c2gobmV3IFF1YWQoY2hpbGQsIHhtLCB5MCwgeDEsIHltKSk7XG4gICAgICBpZiAoY2hpbGQgPSBub2RlWzBdKSBxdWFkcy5wdXNoKG5ldyBRdWFkKGNoaWxkLCB4MCwgeTAsIHhtLCB5bSkpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGhpcztcbn1cbiIsImltcG9ydCBRdWFkIGZyb20gXCIuL3F1YWQuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIHF1YWRzID0gW10sIG5leHQgPSBbXSwgcTtcbiAgaWYgKHRoaXMuX3Jvb3QpIHF1YWRzLnB1c2gobmV3IFF1YWQodGhpcy5fcm9vdCwgdGhpcy5feDAsIHRoaXMuX3kwLCB0aGlzLl94MSwgdGhpcy5feTEpKTtcbiAgd2hpbGUgKHEgPSBxdWFkcy5wb3AoKSkge1xuICAgIHZhciBub2RlID0gcS5ub2RlO1xuICAgIGlmIChub2RlLmxlbmd0aCkge1xuICAgICAgdmFyIGNoaWxkLCB4MCA9IHEueDAsIHkwID0gcS55MCwgeDEgPSBxLngxLCB5MSA9IHEueTEsIHhtID0gKHgwICsgeDEpIC8gMiwgeW0gPSAoeTAgKyB5MSkgLyAyO1xuICAgICAgaWYgKGNoaWxkID0gbm9kZVswXSkgcXVhZHMucHVzaChuZXcgUXVhZChjaGlsZCwgeDAsIHkwLCB4bSwgeW0pKTtcbiAgICAgIGlmIChjaGlsZCA9IG5vZGVbMV0pIHF1YWRzLnB1c2gobmV3IFF1YWQoY2hpbGQsIHhtLCB5MCwgeDEsIHltKSk7XG4gICAgICBpZiAoY2hpbGQgPSBub2RlWzJdKSBxdWFkcy5wdXNoKG5ldyBRdWFkKGNoaWxkLCB4MCwgeW0sIHhtLCB5MSkpO1xuICAgICAgaWYgKGNoaWxkID0gbm9kZVszXSkgcXVhZHMucHVzaChuZXcgUXVhZChjaGlsZCwgeG0sIHltLCB4MSwgeTEpKTtcbiAgICB9XG4gICAgbmV4dC5wdXNoKHEpO1xuICB9XG4gIHdoaWxlIChxID0gbmV4dC5wb3AoKSkge1xuICAgIGNhbGxiYWNrKHEubm9kZSwgcS54MCwgcS55MCwgcS54MSwgcS55MSk7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59XG4iLCJpbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCBqaWdnbGUgZnJvbSBcIi4vamlnZ2xlXCI7XG5pbXBvcnQge21hcH0gZnJvbSBcImQzLWNvbGxlY3Rpb25cIjtcblxuZnVuY3Rpb24gaW5kZXgoZCkge1xuICByZXR1cm4gZC5pbmRleDtcbn1cblxuZnVuY3Rpb24gZmluZChub2RlQnlJZCwgbm9kZUlkKSB7XG4gIHZhciBub2RlID0gbm9kZUJ5SWQuZ2V0KG5vZGVJZCk7XG4gIGlmICghbm9kZSkgdGhyb3cgbmV3IEVycm9yKFwibWlzc2luZzogXCIgKyBub2RlSWQpO1xuICByZXR1cm4gbm9kZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obGlua3MpIHtcbiAgdmFyIGlkID0gaW5kZXgsXG4gICAgICBzdHJlbmd0aCA9IGRlZmF1bHRTdHJlbmd0aCxcbiAgICAgIHN0cmVuZ3RocyxcbiAgICAgIGRpc3RhbmNlID0gY29uc3RhbnQoMzApLFxuICAgICAgZGlzdGFuY2VzLFxuICAgICAgbm9kZXMsXG4gICAgICBjb3VudCxcbiAgICAgIGJpYXMsXG4gICAgICBpdGVyYXRpb25zID0gMTtcblxuICBpZiAobGlua3MgPT0gbnVsbCkgbGlua3MgPSBbXTtcblxuICBmdW5jdGlvbiBkZWZhdWx0U3RyZW5ndGgobGluaykge1xuICAgIHJldHVybiAxIC8gTWF0aC5taW4oY291bnRbbGluay5zb3VyY2UuaW5kZXhdLCBjb3VudFtsaW5rLnRhcmdldC5pbmRleF0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9yY2UoYWxwaGEpIHtcbiAgICBmb3IgKHZhciBrID0gMCwgbiA9IGxpbmtzLmxlbmd0aDsgayA8IGl0ZXJhdGlvbnM7ICsraykge1xuICAgICAgZm9yICh2YXIgaSA9IDAsIGxpbmssIHNvdXJjZSwgdGFyZ2V0LCB4LCB5LCBsLCBiOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGxpbmsgPSBsaW5rc1tpXSwgc291cmNlID0gbGluay5zb3VyY2UsIHRhcmdldCA9IGxpbmsudGFyZ2V0O1xuICAgICAgICB4ID0gdGFyZ2V0LnggKyB0YXJnZXQudnggLSBzb3VyY2UueCAtIHNvdXJjZS52eCB8fCBqaWdnbGUoKTtcbiAgICAgICAgeSA9IHRhcmdldC55ICsgdGFyZ2V0LnZ5IC0gc291cmNlLnkgLSBzb3VyY2UudnkgfHwgamlnZ2xlKCk7XG4gICAgICAgIGwgPSBNYXRoLnNxcnQoeCAqIHggKyB5ICogeSk7XG4gICAgICAgIGwgPSAobCAtIGRpc3RhbmNlc1tpXSkgLyBsICogYWxwaGEgKiBzdHJlbmd0aHNbaV07XG4gICAgICAgIHggKj0gbCwgeSAqPSBsO1xuICAgICAgICB0YXJnZXQudnggLT0geCAqIChiID0gYmlhc1tpXSk7XG4gICAgICAgIHRhcmdldC52eSAtPSB5ICogYjtcbiAgICAgICAgc291cmNlLnZ4ICs9IHggKiAoYiA9IDEgLSBiKTtcbiAgICAgICAgc291cmNlLnZ5ICs9IHkgKiBiO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XG4gICAgaWYgKCFub2RlcykgcmV0dXJuO1xuXG4gICAgdmFyIGksXG4gICAgICAgIG4gPSBub2Rlcy5sZW5ndGgsXG4gICAgICAgIG0gPSBsaW5rcy5sZW5ndGgsXG4gICAgICAgIG5vZGVCeUlkID0gbWFwKG5vZGVzLCBpZCksXG4gICAgICAgIGxpbms7XG5cbiAgICBmb3IgKGkgPSAwLCBjb3VudCA9IG5ldyBBcnJheShuKTsgaSA8IG07ICsraSkge1xuICAgICAgbGluayA9IGxpbmtzW2ldLCBsaW5rLmluZGV4ID0gaTtcbiAgICAgIGlmICh0eXBlb2YgbGluay5zb3VyY2UgIT09IFwib2JqZWN0XCIpIGxpbmsuc291cmNlID0gZmluZChub2RlQnlJZCwgbGluay5zb3VyY2UpO1xuICAgICAgaWYgKHR5cGVvZiBsaW5rLnRhcmdldCAhPT0gXCJvYmplY3RcIikgbGluay50YXJnZXQgPSBmaW5kKG5vZGVCeUlkLCBsaW5rLnRhcmdldCk7XG4gICAgICBjb3VudFtsaW5rLnNvdXJjZS5pbmRleF0gPSAoY291bnRbbGluay5zb3VyY2UuaW5kZXhdIHx8IDApICsgMTtcbiAgICAgIGNvdW50W2xpbmsudGFyZ2V0LmluZGV4XSA9IChjb3VudFtsaW5rLnRhcmdldC5pbmRleF0gfHwgMCkgKyAxO1xuICAgIH1cblxuICAgIGZvciAoaSA9IDAsIGJpYXMgPSBuZXcgQXJyYXkobSk7IGkgPCBtOyArK2kpIHtcbiAgICAgIGxpbmsgPSBsaW5rc1tpXSwgYmlhc1tpXSA9IGNvdW50W2xpbmsuc291cmNlLmluZGV4XSAvIChjb3VudFtsaW5rLnNvdXJjZS5pbmRleF0gKyBjb3VudFtsaW5rLnRhcmdldC5pbmRleF0pO1xuICAgIH1cblxuICAgIHN0cmVuZ3RocyA9IG5ldyBBcnJheShtKSwgaW5pdGlhbGl6ZVN0cmVuZ3RoKCk7XG4gICAgZGlzdGFuY2VzID0gbmV3IEFycmF5KG0pLCBpbml0aWFsaXplRGlzdGFuY2UoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRpYWxpemVTdHJlbmd0aCgpIHtcbiAgICBpZiAoIW5vZGVzKSByZXR1cm47XG5cbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IGxpbmtzLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgc3RyZW5ndGhzW2ldID0gK3N0cmVuZ3RoKGxpbmtzW2ldLCBpLCBsaW5rcyk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaW5pdGlhbGl6ZURpc3RhbmNlKCkge1xuICAgIGlmICghbm9kZXMpIHJldHVybjtcblxuICAgIGZvciAodmFyIGkgPSAwLCBuID0gbGlua3MubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICBkaXN0YW5jZXNbaV0gPSArZGlzdGFuY2UobGlua3NbaV0sIGksIGxpbmtzKTtcbiAgICB9XG4gIH1cblxuICBmb3JjZS5pbml0aWFsaXplID0gZnVuY3Rpb24oXykge1xuICAgIG5vZGVzID0gXztcbiAgICBpbml0aWFsaXplKCk7XG4gIH07XG5cbiAgZm9yY2UubGlua3MgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobGlua3MgPSBfLCBpbml0aWFsaXplKCksIGZvcmNlKSA6IGxpbmtzO1xuICB9O1xuXG4gIGZvcmNlLmlkID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGlkID0gXywgZm9yY2UpIDogaWQ7XG4gIH07XG5cbiAgZm9yY2UuaXRlcmF0aW9ucyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpdGVyYXRpb25zID0gK18sIGZvcmNlKSA6IGl0ZXJhdGlvbnM7XG4gIH07XG5cbiAgZm9yY2Uuc3RyZW5ndGggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3RyZW5ndGggPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgaW5pdGlhbGl6ZVN0cmVuZ3RoKCksIGZvcmNlKSA6IHN0cmVuZ3RoO1xuICB9O1xuXG4gIGZvcmNlLmRpc3RhbmNlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGRpc3RhbmNlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGluaXRpYWxpemVEaXN0YW5jZSgpLCBmb3JjZSkgOiBkaXN0YW5jZTtcbiAgfTtcblxuICByZXR1cm4gZm9yY2U7XG59XG4iLCJpbXBvcnQge2Rpc3BhdGNofSBmcm9tIFwiZDMtZGlzcGF0Y2hcIjtcbmltcG9ydCB7bWFwfSBmcm9tIFwiZDMtY29sbGVjdGlvblwiO1xuaW1wb3J0IHt0aW1lcn0gZnJvbSBcImQzLXRpbWVyXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiB4KGQpIHtcbiAgcmV0dXJuIGQueDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHkoZCkge1xuICByZXR1cm4gZC55O1xufVxuXG52YXIgaW5pdGlhbFJhZGl1cyA9IDEwLFxuICAgIGluaXRpYWxBbmdsZSA9IE1hdGguUEkgKiAoMyAtIE1hdGguc3FydCg1KSk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGVzKSB7XG4gIHZhciBzaW11bGF0aW9uLFxuICAgICAgYWxwaGEgPSAxLFxuICAgICAgYWxwaGFNaW4gPSAwLjAwMSxcbiAgICAgIGFscGhhRGVjYXkgPSAxIC0gTWF0aC5wb3coYWxwaGFNaW4sIDEgLyAzMDApLFxuICAgICAgYWxwaGFUYXJnZXQgPSAwLFxuICAgICAgdmVsb2NpdHlEZWNheSA9IDAuNixcbiAgICAgIGZvcmNlcyA9IG1hcCgpLFxuICAgICAgc3RlcHBlciA9IHRpbWVyKHN0ZXApLFxuICAgICAgZXZlbnQgPSBkaXNwYXRjaChcInRpY2tcIiwgXCJlbmRcIik7XG5cbiAgaWYgKG5vZGVzID09IG51bGwpIG5vZGVzID0gW107XG5cbiAgZnVuY3Rpb24gc3RlcCgpIHtcbiAgICB0aWNrKCk7XG4gICAgZXZlbnQuY2FsbChcInRpY2tcIiwgc2ltdWxhdGlvbik7XG4gICAgaWYgKGFscGhhIDwgYWxwaGFNaW4pIHtcbiAgICAgIHN0ZXBwZXIuc3RvcCgpO1xuICAgICAgZXZlbnQuY2FsbChcImVuZFwiLCBzaW11bGF0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiB0aWNrKGl0ZXJhdGlvbnMpIHtcbiAgICB2YXIgaSwgbiA9IG5vZGVzLmxlbmd0aCwgbm9kZTtcblxuICAgIGlmIChpdGVyYXRpb25zID09PSB1bmRlZmluZWQpIGl0ZXJhdGlvbnMgPSAxO1xuXG4gICAgZm9yICh2YXIgayA9IDA7IGsgPCBpdGVyYXRpb25zOyArK2spIHtcbiAgICAgIGFscGhhICs9IChhbHBoYVRhcmdldCAtIGFscGhhKSAqIGFscGhhRGVjYXk7XG5cbiAgICAgIGZvcmNlcy5lYWNoKGZ1bmN0aW9uIChmb3JjZSkge1xuICAgICAgICBmb3JjZShhbHBoYSk7XG4gICAgICB9KTtcblxuICAgICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgICBub2RlID0gbm9kZXNbaV07XG4gICAgICAgIGlmIChub2RlLmZ4ID09IG51bGwpIG5vZGUueCArPSBub2RlLnZ4ICo9IHZlbG9jaXR5RGVjYXk7XG4gICAgICAgIGVsc2Ugbm9kZS54ID0gbm9kZS5meCwgbm9kZS52eCA9IDA7XG4gICAgICAgIGlmIChub2RlLmZ5ID09IG51bGwpIG5vZGUueSArPSBub2RlLnZ5ICo9IHZlbG9jaXR5RGVjYXk7XG4gICAgICAgIGVsc2Ugbm9kZS55ID0gbm9kZS5meSwgbm9kZS52eSA9IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHNpbXVsYXRpb247XG4gIH1cblxuICBmdW5jdGlvbiBpbml0aWFsaXplTm9kZXMoKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIG4gPSBub2Rlcy5sZW5ndGgsIG5vZGU7IGkgPCBuOyArK2kpIHtcbiAgICAgIG5vZGUgPSBub2Rlc1tpXSwgbm9kZS5pbmRleCA9IGk7XG4gICAgICBpZiAobm9kZS5meCAhPSBudWxsKSBub2RlLnggPSBub2RlLmZ4O1xuICAgICAgaWYgKG5vZGUuZnkgIT0gbnVsbCkgbm9kZS55ID0gbm9kZS5meTtcbiAgICAgIGlmIChpc05hTihub2RlLngpIHx8IGlzTmFOKG5vZGUueSkpIHtcbiAgICAgICAgdmFyIHJhZGl1cyA9IGluaXRpYWxSYWRpdXMgKiBNYXRoLnNxcnQoaSksIGFuZ2xlID0gaSAqIGluaXRpYWxBbmdsZTtcbiAgICAgICAgbm9kZS54ID0gcmFkaXVzICogTWF0aC5jb3MoYW5nbGUpO1xuICAgICAgICBub2RlLnkgPSByYWRpdXMgKiBNYXRoLnNpbihhbmdsZSk7XG4gICAgICB9XG4gICAgICBpZiAoaXNOYU4obm9kZS52eCkgfHwgaXNOYU4obm9kZS52eSkpIHtcbiAgICAgICAgbm9kZS52eCA9IG5vZGUudnkgPSAwO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRpYWxpemVGb3JjZShmb3JjZSkge1xuICAgIGlmIChmb3JjZS5pbml0aWFsaXplKSBmb3JjZS5pbml0aWFsaXplKG5vZGVzKTtcbiAgICByZXR1cm4gZm9yY2U7XG4gIH1cblxuICBpbml0aWFsaXplTm9kZXMoKTtcblxuICByZXR1cm4gc2ltdWxhdGlvbiA9IHtcbiAgICB0aWNrOiB0aWNrLFxuXG4gICAgcmVzdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gc3RlcHBlci5yZXN0YXJ0KHN0ZXApLCBzaW11bGF0aW9uO1xuICAgIH0sXG5cbiAgICBzdG9wOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBzdGVwcGVyLnN0b3AoKSwgc2ltdWxhdGlvbjtcbiAgICB9LFxuXG4gICAgbm9kZXM6IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG5vZGVzID0gXywgaW5pdGlhbGl6ZU5vZGVzKCksIGZvcmNlcy5lYWNoKGluaXRpYWxpemVGb3JjZSksIHNpbXVsYXRpb24pIDogbm9kZXM7XG4gICAgfSxcblxuICAgIGFscGhhOiBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhbHBoYSA9ICtfLCBzaW11bGF0aW9uKSA6IGFscGhhO1xuICAgIH0sXG5cbiAgICBhbHBoYU1pbjogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYWxwaGFNaW4gPSArXywgc2ltdWxhdGlvbikgOiBhbHBoYU1pbjtcbiAgICB9LFxuXG4gICAgYWxwaGFEZWNheTogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYWxwaGFEZWNheSA9ICtfLCBzaW11bGF0aW9uKSA6ICthbHBoYURlY2F5O1xuICAgIH0sXG5cbiAgICBhbHBoYVRhcmdldDogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYWxwaGFUYXJnZXQgPSArXywgc2ltdWxhdGlvbikgOiBhbHBoYVRhcmdldDtcbiAgICB9LFxuXG4gICAgdmVsb2NpdHlEZWNheTogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodmVsb2NpdHlEZWNheSA9IDEgLSBfLCBzaW11bGF0aW9uKSA6IDEgLSB2ZWxvY2l0eURlY2F5O1xuICAgIH0sXG5cbiAgICBmb3JjZTogZnVuY3Rpb24obmFtZSwgXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gKChfID09IG51bGwgPyBmb3JjZXMucmVtb3ZlKG5hbWUpIDogZm9yY2VzLnNldChuYW1lLCBpbml0aWFsaXplRm9yY2UoXykpKSwgc2ltdWxhdGlvbikgOiBmb3JjZXMuZ2V0KG5hbWUpO1xuICAgIH0sXG5cbiAgICBmaW5kOiBmdW5jdGlvbih4LCB5LCByYWRpdXMpIHtcbiAgICAgIHZhciBpID0gMCxcbiAgICAgICAgICBuID0gbm9kZXMubGVuZ3RoLFxuICAgICAgICAgIGR4LFxuICAgICAgICAgIGR5LFxuICAgICAgICAgIGQyLFxuICAgICAgICAgIG5vZGUsXG4gICAgICAgICAgY2xvc2VzdDtcblxuICAgICAgaWYgKHJhZGl1cyA9PSBudWxsKSByYWRpdXMgPSBJbmZpbml0eTtcbiAgICAgIGVsc2UgcmFkaXVzICo9IHJhZGl1cztcblxuICAgICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgICBub2RlID0gbm9kZXNbaV07XG4gICAgICAgIGR4ID0geCAtIG5vZGUueDtcbiAgICAgICAgZHkgPSB5IC0gbm9kZS55O1xuICAgICAgICBkMiA9IGR4ICogZHggKyBkeSAqIGR5O1xuICAgICAgICBpZiAoZDIgPCByYWRpdXMpIGNsb3Nlc3QgPSBub2RlLCByYWRpdXMgPSBkMjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNsb3Nlc3Q7XG4gICAgfSxcblxuICAgIG9uOiBmdW5jdGlvbihuYW1lLCBfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyAoZXZlbnQub24obmFtZSwgXyksIHNpbXVsYXRpb24pIDogZXZlbnQub24obmFtZSk7XG4gICAgfVxuICB9O1xufVxuIiwiaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5pbXBvcnQgamlnZ2xlIGZyb20gXCIuL2ppZ2dsZVwiO1xuaW1wb3J0IHtxdWFkdHJlZX0gZnJvbSBcImQzLXF1YWR0cmVlXCI7XG5pbXBvcnQge3gsIHl9IGZyb20gXCIuL3NpbXVsYXRpb25cIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBub2RlcyxcbiAgICAgIG5vZGUsXG4gICAgICBhbHBoYSxcbiAgICAgIHN0cmVuZ3RoID0gY29uc3RhbnQoLTMwKSxcbiAgICAgIHN0cmVuZ3RocyxcbiAgICAgIGRpc3RhbmNlTWluMiA9IDEsXG4gICAgICBkaXN0YW5jZU1heDIgPSBJbmZpbml0eSxcbiAgICAgIHRoZXRhMiA9IDAuODE7XG5cbiAgZnVuY3Rpb24gZm9yY2UoXykge1xuICAgIHZhciBpLCBuID0gbm9kZXMubGVuZ3RoLCB0cmVlID0gcXVhZHRyZWUobm9kZXMsIHgsIHkpLnZpc2l0QWZ0ZXIoYWNjdW11bGF0ZSk7XG4gICAgZm9yIChhbHBoYSA9IF8sIGkgPSAwOyBpIDwgbjsgKytpKSBub2RlID0gbm9kZXNbaV0sIHRyZWUudmlzaXQoYXBwbHkpO1xuICB9XG5cbiAgZnVuY3Rpb24gaW5pdGlhbGl6ZSgpIHtcbiAgICBpZiAoIW5vZGVzKSByZXR1cm47XG4gICAgdmFyIGksIG4gPSBub2Rlcy5sZW5ndGgsIG5vZGU7XG4gICAgc3RyZW5ndGhzID0gbmV3IEFycmF5KG4pO1xuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIG5vZGUgPSBub2Rlc1tpXSwgc3RyZW5ndGhzW25vZGUuaW5kZXhdID0gK3N0cmVuZ3RoKG5vZGUsIGksIG5vZGVzKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFjY3VtdWxhdGUocXVhZCkge1xuICAgIHZhciBzdHJlbmd0aCA9IDAsIHEsIGMsIHdlaWdodCA9IDAsIHgsIHksIGk7XG5cbiAgICAvLyBGb3IgaW50ZXJuYWwgbm9kZXMsIGFjY3VtdWxhdGUgZm9yY2VzIGZyb20gY2hpbGQgcXVhZHJhbnRzLlxuICAgIGlmIChxdWFkLmxlbmd0aCkge1xuICAgICAgZm9yICh4ID0geSA9IGkgPSAwOyBpIDwgNDsgKytpKSB7XG4gICAgICAgIGlmICgocSA9IHF1YWRbaV0pICYmIChjID0gTWF0aC5hYnMocS52YWx1ZSkpKSB7XG4gICAgICAgICAgc3RyZW5ndGggKz0gcS52YWx1ZSwgd2VpZ2h0ICs9IGMsIHggKz0gYyAqIHEueCwgeSArPSBjICogcS55O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBxdWFkLnggPSB4IC8gd2VpZ2h0O1xuICAgICAgcXVhZC55ID0geSAvIHdlaWdodDtcbiAgICB9XG5cbiAgICAvLyBGb3IgbGVhZiBub2RlcywgYWNjdW11bGF0ZSBmb3JjZXMgZnJvbSBjb2luY2lkZW50IHF1YWRyYW50cy5cbiAgICBlbHNlIHtcbiAgICAgIHEgPSBxdWFkO1xuICAgICAgcS54ID0gcS5kYXRhLng7XG4gICAgICBxLnkgPSBxLmRhdGEueTtcbiAgICAgIGRvIHN0cmVuZ3RoICs9IHN0cmVuZ3Roc1txLmRhdGEuaW5kZXhdO1xuICAgICAgd2hpbGUgKHEgPSBxLm5leHQpO1xuICAgIH1cblxuICAgIHF1YWQudmFsdWUgPSBzdHJlbmd0aDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFwcGx5KHF1YWQsIHgxLCBfLCB4Mikge1xuICAgIGlmICghcXVhZC52YWx1ZSkgcmV0dXJuIHRydWU7XG5cbiAgICB2YXIgeCA9IHF1YWQueCAtIG5vZGUueCxcbiAgICAgICAgeSA9IHF1YWQueSAtIG5vZGUueSxcbiAgICAgICAgdyA9IHgyIC0geDEsXG4gICAgICAgIGwgPSB4ICogeCArIHkgKiB5O1xuXG4gICAgLy8gQXBwbHkgdGhlIEJhcm5lcy1IdXQgYXBwcm94aW1hdGlvbiBpZiBwb3NzaWJsZS5cbiAgICAvLyBMaW1pdCBmb3JjZXMgZm9yIHZlcnkgY2xvc2Ugbm9kZXM7IHJhbmRvbWl6ZSBkaXJlY3Rpb24gaWYgY29pbmNpZGVudC5cbiAgICBpZiAodyAqIHcgLyB0aGV0YTIgPCBsKSB7XG4gICAgICBpZiAobCA8IGRpc3RhbmNlTWF4Mikge1xuICAgICAgICBpZiAoeCA9PT0gMCkgeCA9IGppZ2dsZSgpLCBsICs9IHggKiB4O1xuICAgICAgICBpZiAoeSA9PT0gMCkgeSA9IGppZ2dsZSgpLCBsICs9IHkgKiB5O1xuICAgICAgICBpZiAobCA8IGRpc3RhbmNlTWluMikgbCA9IE1hdGguc3FydChkaXN0YW5jZU1pbjIgKiBsKTtcbiAgICAgICAgbm9kZS52eCArPSB4ICogcXVhZC52YWx1ZSAqIGFscGhhIC8gbDtcbiAgICAgICAgbm9kZS52eSArPSB5ICogcXVhZC52YWx1ZSAqIGFscGhhIC8gbDtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIC8vIE90aGVyd2lzZSwgcHJvY2VzcyBwb2ludHMgZGlyZWN0bHkuXG4gICAgZWxzZSBpZiAocXVhZC5sZW5ndGggfHwgbCA+PSBkaXN0YW5jZU1heDIpIHJldHVybjtcblxuICAgIC8vIExpbWl0IGZvcmNlcyBmb3IgdmVyeSBjbG9zZSBub2RlczsgcmFuZG9taXplIGRpcmVjdGlvbiBpZiBjb2luY2lkZW50LlxuICAgIGlmIChxdWFkLmRhdGEgIT09IG5vZGUgfHwgcXVhZC5uZXh0KSB7XG4gICAgICBpZiAoeCA9PT0gMCkgeCA9IGppZ2dsZSgpLCBsICs9IHggKiB4O1xuICAgICAgaWYgKHkgPT09IDApIHkgPSBqaWdnbGUoKSwgbCArPSB5ICogeTtcbiAgICAgIGlmIChsIDwgZGlzdGFuY2VNaW4yKSBsID0gTWF0aC5zcXJ0KGRpc3RhbmNlTWluMiAqIGwpO1xuICAgIH1cblxuICAgIGRvIGlmIChxdWFkLmRhdGEgIT09IG5vZGUpIHtcbiAgICAgIHcgPSBzdHJlbmd0aHNbcXVhZC5kYXRhLmluZGV4XSAqIGFscGhhIC8gbDtcbiAgICAgIG5vZGUudnggKz0geCAqIHc7XG4gICAgICBub2RlLnZ5ICs9IHkgKiB3O1xuICAgIH0gd2hpbGUgKHF1YWQgPSBxdWFkLm5leHQpO1xuICB9XG5cbiAgZm9yY2UuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICBub2RlcyA9IF87XG4gICAgaW5pdGlhbGl6ZSgpO1xuICB9O1xuXG4gIGZvcmNlLnN0cmVuZ3RoID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHN0cmVuZ3RoID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGluaXRpYWxpemUoKSwgZm9yY2UpIDogc3RyZW5ndGg7XG4gIH07XG5cbiAgZm9yY2UuZGlzdGFuY2VNaW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZGlzdGFuY2VNaW4yID0gXyAqIF8sIGZvcmNlKSA6IE1hdGguc3FydChkaXN0YW5jZU1pbjIpO1xuICB9O1xuXG4gIGZvcmNlLmRpc3RhbmNlTWF4ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGRpc3RhbmNlTWF4MiA9IF8gKiBfLCBmb3JjZSkgOiBNYXRoLnNxcnQoZGlzdGFuY2VNYXgyKTtcbiAgfTtcblxuICBmb3JjZS50aGV0YSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0aGV0YTIgPSBfICogXywgZm9yY2UpIDogTWF0aC5zcXJ0KHRoZXRhMik7XG4gIH07XG5cbiAgcmV0dXJuIGZvcmNlO1xufVxuIiwiaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHJhZGl1cywgeCwgeSkge1xuICB2YXIgbm9kZXMsXG4gICAgICBzdHJlbmd0aCA9IGNvbnN0YW50KDAuMSksXG4gICAgICBzdHJlbmd0aHMsXG4gICAgICByYWRpdXNlcztcblxuICBpZiAodHlwZW9mIHJhZGl1cyAhPT0gXCJmdW5jdGlvblwiKSByYWRpdXMgPSBjb25zdGFudCgrcmFkaXVzKTtcbiAgaWYgKHggPT0gbnVsbCkgeCA9IDA7XG4gIGlmICh5ID09IG51bGwpIHkgPSAwO1xuXG4gIGZ1bmN0aW9uIGZvcmNlKGFscGhhKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIG4gPSBub2Rlcy5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgIHZhciBub2RlID0gbm9kZXNbaV0sXG4gICAgICAgICAgZHggPSBub2RlLnggLSB4IHx8IDFlLTYsXG4gICAgICAgICAgZHkgPSBub2RlLnkgLSB5IHx8IDFlLTYsXG4gICAgICAgICAgciA9IE1hdGguc3FydChkeCAqIGR4ICsgZHkgKiBkeSksXG4gICAgICAgICAgayA9IChyYWRpdXNlc1tpXSAtIHIpICogc3RyZW5ndGhzW2ldICogYWxwaGEgLyByO1xuICAgICAgbm9kZS52eCArPSBkeCAqIGs7XG4gICAgICBub2RlLnZ5ICs9IGR5ICogaztcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBpbml0aWFsaXplKCkge1xuICAgIGlmICghbm9kZXMpIHJldHVybjtcbiAgICB2YXIgaSwgbiA9IG5vZGVzLmxlbmd0aDtcbiAgICBzdHJlbmd0aHMgPSBuZXcgQXJyYXkobik7XG4gICAgcmFkaXVzZXMgPSBuZXcgQXJyYXkobik7XG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgcmFkaXVzZXNbaV0gPSArcmFkaXVzKG5vZGVzW2ldLCBpLCBub2Rlcyk7XG4gICAgICBzdHJlbmd0aHNbaV0gPSBpc05hTihyYWRpdXNlc1tpXSkgPyAwIDogK3N0cmVuZ3RoKG5vZGVzW2ldLCBpLCBub2Rlcyk7XG4gICAgfVxuICB9XG5cbiAgZm9yY2UuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICBub2RlcyA9IF8sIGluaXRpYWxpemUoKTtcbiAgfTtcblxuICBmb3JjZS5zdHJlbmd0aCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzdHJlbmd0aCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBpbml0aWFsaXplKCksIGZvcmNlKSA6IHN0cmVuZ3RoO1xuICB9O1xuXG4gIGZvcmNlLnJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyYWRpdXMgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgaW5pdGlhbGl6ZSgpLCBmb3JjZSkgOiByYWRpdXM7XG4gIH07XG5cbiAgZm9yY2UueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4ID0gK18sIGZvcmNlKSA6IHg7XG4gIH07XG5cbiAgZm9yY2UueSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh5ID0gK18sIGZvcmNlKSA6IHk7XG4gIH07XG5cbiAgcmV0dXJuIGZvcmNlO1xufVxuIiwiaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgdmFyIHN0cmVuZ3RoID0gY29uc3RhbnQoMC4xKSxcbiAgICAgIG5vZGVzLFxuICAgICAgc3RyZW5ndGhzLFxuICAgICAgeHo7XG5cbiAgaWYgKHR5cGVvZiB4ICE9PSBcImZ1bmN0aW9uXCIpIHggPSBjb25zdGFudCh4ID09IG51bGwgPyAwIDogK3gpO1xuXG4gIGZ1bmN0aW9uIGZvcmNlKGFscGhhKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIG4gPSBub2Rlcy5sZW5ndGgsIG5vZGU7IGkgPCBuOyArK2kpIHtcbiAgICAgIG5vZGUgPSBub2Rlc1tpXSwgbm9kZS52eCArPSAoeHpbaV0gLSBub2RlLngpICogc3RyZW5ndGhzW2ldICogYWxwaGE7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaW5pdGlhbGl6ZSgpIHtcbiAgICBpZiAoIW5vZGVzKSByZXR1cm47XG4gICAgdmFyIGksIG4gPSBub2Rlcy5sZW5ndGg7XG4gICAgc3RyZW5ndGhzID0gbmV3IEFycmF5KG4pO1xuICAgIHh6ID0gbmV3IEFycmF5KG4pO1xuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIHN0cmVuZ3Roc1tpXSA9IGlzTmFOKHh6W2ldID0gK3gobm9kZXNbaV0sIGksIG5vZGVzKSkgPyAwIDogK3N0cmVuZ3RoKG5vZGVzW2ldLCBpLCBub2Rlcyk7XG4gICAgfVxuICB9XG5cbiAgZm9yY2UuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICBub2RlcyA9IF87XG4gICAgaW5pdGlhbGl6ZSgpO1xuICB9O1xuXG4gIGZvcmNlLnN0cmVuZ3RoID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHN0cmVuZ3RoID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGluaXRpYWxpemUoKSwgZm9yY2UpIDogc3RyZW5ndGg7XG4gIH07XG5cbiAgZm9yY2UueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGluaXRpYWxpemUoKSwgZm9yY2UpIDogeDtcbiAgfTtcblxuICByZXR1cm4gZm9yY2U7XG59XG4iLCJpbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeSkge1xuICB2YXIgc3RyZW5ndGggPSBjb25zdGFudCgwLjEpLFxuICAgICAgbm9kZXMsXG4gICAgICBzdHJlbmd0aHMsXG4gICAgICB5ejtcblxuICBpZiAodHlwZW9mIHkgIT09IFwiZnVuY3Rpb25cIikgeSA9IGNvbnN0YW50KHkgPT0gbnVsbCA/IDAgOiAreSk7XG5cbiAgZnVuY3Rpb24gZm9yY2UoYWxwaGEpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IG5vZGVzLmxlbmd0aCwgbm9kZTsgaSA8IG47ICsraSkge1xuICAgICAgbm9kZSA9IG5vZGVzW2ldLCBub2RlLnZ5ICs9ICh5eltpXSAtIG5vZGUueSkgKiBzdHJlbmd0aHNbaV0gKiBhbHBoYTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBpbml0aWFsaXplKCkge1xuICAgIGlmICghbm9kZXMpIHJldHVybjtcbiAgICB2YXIgaSwgbiA9IG5vZGVzLmxlbmd0aDtcbiAgICBzdHJlbmd0aHMgPSBuZXcgQXJyYXkobik7XG4gICAgeXogPSBuZXcgQXJyYXkobik7XG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgc3RyZW5ndGhzW2ldID0gaXNOYU4oeXpbaV0gPSAreShub2Rlc1tpXSwgaSwgbm9kZXMpKSA/IDAgOiArc3RyZW5ndGgobm9kZXNbaV0sIGksIG5vZGVzKTtcbiAgICB9XG4gIH1cblxuICBmb3JjZS5pbml0aWFsaXplID0gZnVuY3Rpb24oXykge1xuICAgIG5vZGVzID0gXztcbiAgICBpbml0aWFsaXplKCk7XG4gIH07XG5cbiAgZm9yY2Uuc3RyZW5ndGggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3RyZW5ndGggPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgaW5pdGlhbGl6ZSgpLCBmb3JjZSkgOiBzdHJlbmd0aDtcbiAgfTtcblxuICBmb3JjZS55ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgaW5pdGlhbGl6ZSgpLCBmb3JjZSkgOiB5O1xuICB9O1xuXG4gIHJldHVybiBmb3JjZTtcbn1cbiIsIi8vIENvbXB1dGVzIHRoZSBkZWNpbWFsIGNvZWZmaWNpZW50IGFuZCBleHBvbmVudCBvZiB0aGUgc3BlY2lmaWVkIG51bWJlciB4IHdpdGhcbi8vIHNpZ25pZmljYW50IGRpZ2l0cyBwLCB3aGVyZSB4IGlzIHBvc2l0aXZlIGFuZCBwIGlzIGluIFsxLCAyMV0gb3IgdW5kZWZpbmVkLlxuLy8gRm9yIGV4YW1wbGUsIGZvcm1hdERlY2ltYWwoMS4yMykgcmV0dXJucyBbXCIxMjNcIiwgMF0uXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4LCBwKSB7XG4gIGlmICgoaSA9ICh4ID0gcCA/IHgudG9FeHBvbmVudGlhbChwIC0gMSkgOiB4LnRvRXhwb25lbnRpYWwoKSkuaW5kZXhPZihcImVcIikpIDwgMCkgcmV0dXJuIG51bGw7IC8vIE5hTiwgwrFJbmZpbml0eVxuICB2YXIgaSwgY29lZmZpY2llbnQgPSB4LnNsaWNlKDAsIGkpO1xuXG4gIC8vIFRoZSBzdHJpbmcgcmV0dXJuZWQgYnkgdG9FeHBvbmVudGlhbCBlaXRoZXIgaGFzIHRoZSBmb3JtIFxcZFxcLlxcZCtlWy0rXVxcZCtcbiAgLy8gKGUuZy4sIDEuMmUrMykgb3IgdGhlIGZvcm0gXFxkZVstK11cXGQrIChlLmcuLCAxZSszKS5cbiAgcmV0dXJuIFtcbiAgICBjb2VmZmljaWVudC5sZW5ndGggPiAxID8gY29lZmZpY2llbnRbMF0gKyBjb2VmZmljaWVudC5zbGljZSgyKSA6IGNvZWZmaWNpZW50LFxuICAgICt4LnNsaWNlKGkgKyAxKVxuICBdO1xufVxuIiwiaW1wb3J0IGZvcm1hdERlY2ltYWwgZnJvbSBcIi4vZm9ybWF0RGVjaW1hbC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiB4ID0gZm9ybWF0RGVjaW1hbChNYXRoLmFicyh4KSksIHggPyB4WzFdIDogTmFOO1xufVxuIiwiLy8gW1tmaWxsXWFsaWduXVtzaWduXVtzeW1ib2xdWzBdW3dpZHRoXVssXVsucHJlY2lzaW9uXVt+XVt0eXBlXVxudmFyIHJlID0gL14oPzooLik/KFs8Pj1eXSkpPyhbK1xcLSggXSk/KFskI10pPygwKT8oXFxkKyk/KCwpPyhcXC5cXGQrKT8ofik/KFthLXolXSk/JC9pO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmb3JtYXRTcGVjaWZpZXIoc3BlY2lmaWVyKSB7XG4gIGlmICghKG1hdGNoID0gcmUuZXhlYyhzcGVjaWZpZXIpKSkgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBmb3JtYXQ6IFwiICsgc3BlY2lmaWVyKTtcbiAgdmFyIG1hdGNoO1xuICByZXR1cm4gbmV3IEZvcm1hdFNwZWNpZmllcih7XG4gICAgZmlsbDogbWF0Y2hbMV0sXG4gICAgYWxpZ246IG1hdGNoWzJdLFxuICAgIHNpZ246IG1hdGNoWzNdLFxuICAgIHN5bWJvbDogbWF0Y2hbNF0sXG4gICAgemVybzogbWF0Y2hbNV0sXG4gICAgd2lkdGg6IG1hdGNoWzZdLFxuICAgIGNvbW1hOiBtYXRjaFs3XSxcbiAgICBwcmVjaXNpb246IG1hdGNoWzhdICYmIG1hdGNoWzhdLnNsaWNlKDEpLFxuICAgIHRyaW06IG1hdGNoWzldLFxuICAgIHR5cGU6IG1hdGNoWzEwXVxuICB9KTtcbn1cblxuZm9ybWF0U3BlY2lmaWVyLnByb3RvdHlwZSA9IEZvcm1hdFNwZWNpZmllci5wcm90b3R5cGU7IC8vIGluc3RhbmNlb2ZcblxuZXhwb3J0IGZ1bmN0aW9uIEZvcm1hdFNwZWNpZmllcihzcGVjaWZpZXIpIHtcbiAgdGhpcy5maWxsID0gc3BlY2lmaWVyLmZpbGwgPT09IHVuZGVmaW5lZCA/IFwiIFwiIDogc3BlY2lmaWVyLmZpbGwgKyBcIlwiO1xuICB0aGlzLmFsaWduID0gc3BlY2lmaWVyLmFsaWduID09PSB1bmRlZmluZWQgPyBcIj5cIiA6IHNwZWNpZmllci5hbGlnbiArIFwiXCI7XG4gIHRoaXMuc2lnbiA9IHNwZWNpZmllci5zaWduID09PSB1bmRlZmluZWQgPyBcIi1cIiA6IHNwZWNpZmllci5zaWduICsgXCJcIjtcbiAgdGhpcy5zeW1ib2wgPSBzcGVjaWZpZXIuc3ltYm9sID09PSB1bmRlZmluZWQgPyBcIlwiIDogc3BlY2lmaWVyLnN5bWJvbCArIFwiXCI7XG4gIHRoaXMuemVybyA9ICEhc3BlY2lmaWVyLnplcm87XG4gIHRoaXMud2lkdGggPSBzcGVjaWZpZXIud2lkdGggPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6ICtzcGVjaWZpZXIud2lkdGg7XG4gIHRoaXMuY29tbWEgPSAhIXNwZWNpZmllci5jb21tYTtcbiAgdGhpcy5wcmVjaXNpb24gPSBzcGVjaWZpZXIucHJlY2lzaW9uID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiArc3BlY2lmaWVyLnByZWNpc2lvbjtcbiAgdGhpcy50cmltID0gISFzcGVjaWZpZXIudHJpbTtcbiAgdGhpcy50eXBlID0gc3BlY2lmaWVyLnR5cGUgPT09IHVuZGVmaW5lZCA/IFwiXCIgOiBzcGVjaWZpZXIudHlwZSArIFwiXCI7XG59XG5cbkZvcm1hdFNwZWNpZmllci5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuZmlsbFxuICAgICAgKyB0aGlzLmFsaWduXG4gICAgICArIHRoaXMuc2lnblxuICAgICAgKyB0aGlzLnN5bWJvbFxuICAgICAgKyAodGhpcy56ZXJvID8gXCIwXCIgOiBcIlwiKVxuICAgICAgKyAodGhpcy53aWR0aCA9PT0gdW5kZWZpbmVkID8gXCJcIiA6IE1hdGgubWF4KDEsIHRoaXMud2lkdGggfCAwKSlcbiAgICAgICsgKHRoaXMuY29tbWEgPyBcIixcIiA6IFwiXCIpXG4gICAgICArICh0aGlzLnByZWNpc2lvbiA9PT0gdW5kZWZpbmVkID8gXCJcIiA6IFwiLlwiICsgTWF0aC5tYXgoMCwgdGhpcy5wcmVjaXNpb24gfCAwKSlcbiAgICAgICsgKHRoaXMudHJpbSA/IFwiflwiIDogXCJcIilcbiAgICAgICsgdGhpcy50eXBlO1xufTtcbiIsIi8vIFRyaW1zIGluc2lnbmlmaWNhbnQgemVyb3MsIGUuZy4sIHJlcGxhY2VzIDEuMjAwMGsgd2l0aCAxLjJrLlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocykge1xuICBvdXQ6IGZvciAodmFyIG4gPSBzLmxlbmd0aCwgaSA9IDEsIGkwID0gLTEsIGkxOyBpIDwgbjsgKytpKSB7XG4gICAgc3dpdGNoIChzW2ldKSB7XG4gICAgICBjYXNlIFwiLlwiOiBpMCA9IGkxID0gaTsgYnJlYWs7XG4gICAgICBjYXNlIFwiMFwiOiBpZiAoaTAgPT09IDApIGkwID0gaTsgaTEgPSBpOyBicmVhaztcbiAgICAgIGRlZmF1bHQ6IGlmICghK3NbaV0pIGJyZWFrIG91dDsgaWYgKGkwID4gMCkgaTAgPSAwOyBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGkwID4gMCA/IHMuc2xpY2UoMCwgaTApICsgcy5zbGljZShpMSArIDEpIDogcztcbn1cbiIsImltcG9ydCBmb3JtYXREZWNpbWFsIGZyb20gXCIuL2Zvcm1hdERlY2ltYWwuanNcIjtcblxuZXhwb3J0IHZhciBwcmVmaXhFeHBvbmVudDtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCwgcCkge1xuICB2YXIgZCA9IGZvcm1hdERlY2ltYWwoeCwgcCk7XG4gIGlmICghZCkgcmV0dXJuIHggKyBcIlwiO1xuICB2YXIgY29lZmZpY2llbnQgPSBkWzBdLFxuICAgICAgZXhwb25lbnQgPSBkWzFdLFxuICAgICAgaSA9IGV4cG9uZW50IC0gKHByZWZpeEV4cG9uZW50ID0gTWF0aC5tYXgoLTgsIE1hdGgubWluKDgsIE1hdGguZmxvb3IoZXhwb25lbnQgLyAzKSkpICogMykgKyAxLFxuICAgICAgbiA9IGNvZWZmaWNpZW50Lmxlbmd0aDtcbiAgcmV0dXJuIGkgPT09IG4gPyBjb2VmZmljaWVudFxuICAgICAgOiBpID4gbiA/IGNvZWZmaWNpZW50ICsgbmV3IEFycmF5KGkgLSBuICsgMSkuam9pbihcIjBcIilcbiAgICAgIDogaSA+IDAgPyBjb2VmZmljaWVudC5zbGljZSgwLCBpKSArIFwiLlwiICsgY29lZmZpY2llbnQuc2xpY2UoaSlcbiAgICAgIDogXCIwLlwiICsgbmV3IEFycmF5KDEgLSBpKS5qb2luKFwiMFwiKSArIGZvcm1hdERlY2ltYWwoeCwgTWF0aC5tYXgoMCwgcCArIGkgLSAxKSlbMF07IC8vIGxlc3MgdGhhbiAxeSFcbn1cbiIsImltcG9ydCBmb3JtYXRMb2NhbGUgZnJvbSBcIi4vbG9jYWxlLmpzXCI7XG5cbnZhciBsb2NhbGU7XG5leHBvcnQgdmFyIGZvcm1hdDtcbmV4cG9ydCB2YXIgZm9ybWF0UHJlZml4O1xuXG5kZWZhdWx0TG9jYWxlKHtcbiAgZGVjaW1hbDogXCIuXCIsXG4gIHRob3VzYW5kczogXCIsXCIsXG4gIGdyb3VwaW5nOiBbM10sXG4gIGN1cnJlbmN5OiBbXCIkXCIsIFwiXCJdLFxuICBtaW51czogXCItXCJcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkZWZhdWx0TG9jYWxlKGRlZmluaXRpb24pIHtcbiAgbG9jYWxlID0gZm9ybWF0TG9jYWxlKGRlZmluaXRpb24pO1xuICBmb3JtYXQgPSBsb2NhbGUuZm9ybWF0O1xuICBmb3JtYXRQcmVmaXggPSBsb2NhbGUuZm9ybWF0UHJlZml4O1xuICByZXR1cm4gbG9jYWxlO1xufVxuIiwiaW1wb3J0IGZvcm1hdERlY2ltYWwgZnJvbSBcIi4vZm9ybWF0RGVjaW1hbC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4LCBwKSB7XG4gIHZhciBkID0gZm9ybWF0RGVjaW1hbCh4LCBwKTtcbiAgaWYgKCFkKSByZXR1cm4geCArIFwiXCI7XG4gIHZhciBjb2VmZmljaWVudCA9IGRbMF0sXG4gICAgICBleHBvbmVudCA9IGRbMV07XG4gIHJldHVybiBleHBvbmVudCA8IDAgPyBcIjAuXCIgKyBuZXcgQXJyYXkoLWV4cG9uZW50KS5qb2luKFwiMFwiKSArIGNvZWZmaWNpZW50XG4gICAgICA6IGNvZWZmaWNpZW50Lmxlbmd0aCA+IGV4cG9uZW50ICsgMSA/IGNvZWZmaWNpZW50LnNsaWNlKDAsIGV4cG9uZW50ICsgMSkgKyBcIi5cIiArIGNvZWZmaWNpZW50LnNsaWNlKGV4cG9uZW50ICsgMSlcbiAgICAgIDogY29lZmZpY2llbnQgKyBuZXcgQXJyYXkoZXhwb25lbnQgLSBjb2VmZmljaWVudC5sZW5ndGggKyAyKS5qb2luKFwiMFwiKTtcbn1cbiIsImltcG9ydCBmb3JtYXRQcmVmaXhBdXRvIGZyb20gXCIuL2Zvcm1hdFByZWZpeEF1dG8uanNcIjtcbmltcG9ydCBmb3JtYXRSb3VuZGVkIGZyb20gXCIuL2Zvcm1hdFJvdW5kZWQuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBcIiVcIjogZnVuY3Rpb24oeCwgcCkgeyByZXR1cm4gKHggKiAxMDApLnRvRml4ZWQocCk7IH0sXG4gIFwiYlwiOiBmdW5jdGlvbih4KSB7IHJldHVybiBNYXRoLnJvdW5kKHgpLnRvU3RyaW5nKDIpOyB9LFxuICBcImNcIjogZnVuY3Rpb24oeCkgeyByZXR1cm4geCArIFwiXCI7IH0sXG4gIFwiZFwiOiBmdW5jdGlvbih4KSB7IHJldHVybiBNYXRoLnJvdW5kKHgpLnRvU3RyaW5nKDEwKTsgfSxcbiAgXCJlXCI6IGZ1bmN0aW9uKHgsIHApIHsgcmV0dXJuIHgudG9FeHBvbmVudGlhbChwKTsgfSxcbiAgXCJmXCI6IGZ1bmN0aW9uKHgsIHApIHsgcmV0dXJuIHgudG9GaXhlZChwKTsgfSxcbiAgXCJnXCI6IGZ1bmN0aW9uKHgsIHApIHsgcmV0dXJuIHgudG9QcmVjaXNpb24ocCk7IH0sXG4gIFwib1wiOiBmdW5jdGlvbih4KSB7IHJldHVybiBNYXRoLnJvdW5kKHgpLnRvU3RyaW5nKDgpOyB9LFxuICBcInBcIjogZnVuY3Rpb24oeCwgcCkgeyByZXR1cm4gZm9ybWF0Um91bmRlZCh4ICogMTAwLCBwKTsgfSxcbiAgXCJyXCI6IGZvcm1hdFJvdW5kZWQsXG4gIFwic1wiOiBmb3JtYXRQcmVmaXhBdXRvLFxuICBcIlhcIjogZnVuY3Rpb24oeCkgeyByZXR1cm4gTWF0aC5yb3VuZCh4KS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKTsgfSxcbiAgXCJ4XCI6IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIE1hdGgucm91bmQoeCkudG9TdHJpbmcoMTYpOyB9XG59O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4geDtcbn1cbiIsImltcG9ydCBleHBvbmVudCBmcm9tIFwiLi9leHBvbmVudC5qc1wiO1xuaW1wb3J0IGZvcm1hdEdyb3VwIGZyb20gXCIuL2Zvcm1hdEdyb3VwLmpzXCI7XG5pbXBvcnQgZm9ybWF0TnVtZXJhbHMgZnJvbSBcIi4vZm9ybWF0TnVtZXJhbHMuanNcIjtcbmltcG9ydCBmb3JtYXRTcGVjaWZpZXIgZnJvbSBcIi4vZm9ybWF0U3BlY2lmaWVyLmpzXCI7XG5pbXBvcnQgZm9ybWF0VHJpbSBmcm9tIFwiLi9mb3JtYXRUcmltLmpzXCI7XG5pbXBvcnQgZm9ybWF0VHlwZXMgZnJvbSBcIi4vZm9ybWF0VHlwZXMuanNcIjtcbmltcG9ydCB7cHJlZml4RXhwb25lbnR9IGZyb20gXCIuL2Zvcm1hdFByZWZpeEF1dG8uanNcIjtcbmltcG9ydCBpZGVudGl0eSBmcm9tIFwiLi9pZGVudGl0eS5qc1wiO1xuXG52YXIgbWFwID0gQXJyYXkucHJvdG90eXBlLm1hcCxcbiAgICBwcmVmaXhlcyA9IFtcInlcIixcInpcIixcImFcIixcImZcIixcInBcIixcIm5cIixcIsK1XCIsXCJtXCIsXCJcIixcImtcIixcIk1cIixcIkdcIixcIlRcIixcIlBcIixcIkVcIixcIlpcIixcIllcIl07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGxvY2FsZSkge1xuICB2YXIgZ3JvdXAgPSBsb2NhbGUuZ3JvdXBpbmcgPT09IHVuZGVmaW5lZCB8fCBsb2NhbGUudGhvdXNhbmRzID09PSB1bmRlZmluZWQgPyBpZGVudGl0eSA6IGZvcm1hdEdyb3VwKG1hcC5jYWxsKGxvY2FsZS5ncm91cGluZywgTnVtYmVyKSwgbG9jYWxlLnRob3VzYW5kcyArIFwiXCIpLFxuICAgICAgY3VycmVuY3lQcmVmaXggPSBsb2NhbGUuY3VycmVuY3kgPT09IHVuZGVmaW5lZCA/IFwiXCIgOiBsb2NhbGUuY3VycmVuY3lbMF0gKyBcIlwiLFxuICAgICAgY3VycmVuY3lTdWZmaXggPSBsb2NhbGUuY3VycmVuY3kgPT09IHVuZGVmaW5lZCA/IFwiXCIgOiBsb2NhbGUuY3VycmVuY3lbMV0gKyBcIlwiLFxuICAgICAgZGVjaW1hbCA9IGxvY2FsZS5kZWNpbWFsID09PSB1bmRlZmluZWQgPyBcIi5cIiA6IGxvY2FsZS5kZWNpbWFsICsgXCJcIixcbiAgICAgIG51bWVyYWxzID0gbG9jYWxlLm51bWVyYWxzID09PSB1bmRlZmluZWQgPyBpZGVudGl0eSA6IGZvcm1hdE51bWVyYWxzKG1hcC5jYWxsKGxvY2FsZS5udW1lcmFscywgU3RyaW5nKSksXG4gICAgICBwZXJjZW50ID0gbG9jYWxlLnBlcmNlbnQgPT09IHVuZGVmaW5lZCA/IFwiJVwiIDogbG9jYWxlLnBlcmNlbnQgKyBcIlwiLFxuICAgICAgbWludXMgPSBsb2NhbGUubWludXMgPT09IHVuZGVmaW5lZCA/IFwiLVwiIDogbG9jYWxlLm1pbnVzICsgXCJcIixcbiAgICAgIG5hbiA9IGxvY2FsZS5uYW4gPT09IHVuZGVmaW5lZCA/IFwiTmFOXCIgOiBsb2NhbGUubmFuICsgXCJcIjtcblxuICBmdW5jdGlvbiBuZXdGb3JtYXQoc3BlY2lmaWVyKSB7XG4gICAgc3BlY2lmaWVyID0gZm9ybWF0U3BlY2lmaWVyKHNwZWNpZmllcik7XG5cbiAgICB2YXIgZmlsbCA9IHNwZWNpZmllci5maWxsLFxuICAgICAgICBhbGlnbiA9IHNwZWNpZmllci5hbGlnbixcbiAgICAgICAgc2lnbiA9IHNwZWNpZmllci5zaWduLFxuICAgICAgICBzeW1ib2wgPSBzcGVjaWZpZXIuc3ltYm9sLFxuICAgICAgICB6ZXJvID0gc3BlY2lmaWVyLnplcm8sXG4gICAgICAgIHdpZHRoID0gc3BlY2lmaWVyLndpZHRoLFxuICAgICAgICBjb21tYSA9IHNwZWNpZmllci5jb21tYSxcbiAgICAgICAgcHJlY2lzaW9uID0gc3BlY2lmaWVyLnByZWNpc2lvbixcbiAgICAgICAgdHJpbSA9IHNwZWNpZmllci50cmltLFxuICAgICAgICB0eXBlID0gc3BlY2lmaWVyLnR5cGU7XG5cbiAgICAvLyBUaGUgXCJuXCIgdHlwZSBpcyBhbiBhbGlhcyBmb3IgXCIsZ1wiLlxuICAgIGlmICh0eXBlID09PSBcIm5cIikgY29tbWEgPSB0cnVlLCB0eXBlID0gXCJnXCI7XG5cbiAgICAvLyBUaGUgXCJcIiB0eXBlLCBhbmQgYW55IGludmFsaWQgdHlwZSwgaXMgYW4gYWxpYXMgZm9yIFwiLjEyfmdcIi5cbiAgICBlbHNlIGlmICghZm9ybWF0VHlwZXNbdHlwZV0pIHByZWNpc2lvbiA9PT0gdW5kZWZpbmVkICYmIChwcmVjaXNpb24gPSAxMiksIHRyaW0gPSB0cnVlLCB0eXBlID0gXCJnXCI7XG5cbiAgICAvLyBJZiB6ZXJvIGZpbGwgaXMgc3BlY2lmaWVkLCBwYWRkaW5nIGdvZXMgYWZ0ZXIgc2lnbiBhbmQgYmVmb3JlIGRpZ2l0cy5cbiAgICBpZiAoemVybyB8fCAoZmlsbCA9PT0gXCIwXCIgJiYgYWxpZ24gPT09IFwiPVwiKSkgemVybyA9IHRydWUsIGZpbGwgPSBcIjBcIiwgYWxpZ24gPSBcIj1cIjtcblxuICAgIC8vIENvbXB1dGUgdGhlIHByZWZpeCBhbmQgc3VmZml4LlxuICAgIC8vIEZvciBTSS1wcmVmaXgsIHRoZSBzdWZmaXggaXMgbGF6aWx5IGNvbXB1dGVkLlxuICAgIHZhciBwcmVmaXggPSBzeW1ib2wgPT09IFwiJFwiID8gY3VycmVuY3lQcmVmaXggOiBzeW1ib2wgPT09IFwiI1wiICYmIC9bYm94WF0vLnRlc3QodHlwZSkgPyBcIjBcIiArIHR5cGUudG9Mb3dlckNhc2UoKSA6IFwiXCIsXG4gICAgICAgIHN1ZmZpeCA9IHN5bWJvbCA9PT0gXCIkXCIgPyBjdXJyZW5jeVN1ZmZpeCA6IC9bJXBdLy50ZXN0KHR5cGUpID8gcGVyY2VudCA6IFwiXCI7XG5cbiAgICAvLyBXaGF0IGZvcm1hdCBmdW5jdGlvbiBzaG91bGQgd2UgdXNlP1xuICAgIC8vIElzIHRoaXMgYW4gaW50ZWdlciB0eXBlP1xuICAgIC8vIENhbiB0aGlzIHR5cGUgZ2VuZXJhdGUgZXhwb25lbnRpYWwgbm90YXRpb24/XG4gICAgdmFyIGZvcm1hdFR5cGUgPSBmb3JtYXRUeXBlc1t0eXBlXSxcbiAgICAgICAgbWF5YmVTdWZmaXggPSAvW2RlZmdwcnMlXS8udGVzdCh0eXBlKTtcblxuICAgIC8vIFNldCB0aGUgZGVmYXVsdCBwcmVjaXNpb24gaWYgbm90IHNwZWNpZmllZCxcbiAgICAvLyBvciBjbGFtcCB0aGUgc3BlY2lmaWVkIHByZWNpc2lvbiB0byB0aGUgc3VwcG9ydGVkIHJhbmdlLlxuICAgIC8vIEZvciBzaWduaWZpY2FudCBwcmVjaXNpb24sIGl0IG11c3QgYmUgaW4gWzEsIDIxXS5cbiAgICAvLyBGb3IgZml4ZWQgcHJlY2lzaW9uLCBpdCBtdXN0IGJlIGluIFswLCAyMF0uXG4gICAgcHJlY2lzaW9uID0gcHJlY2lzaW9uID09PSB1bmRlZmluZWQgPyA2XG4gICAgICAgIDogL1tncHJzXS8udGVzdCh0eXBlKSA/IE1hdGgubWF4KDEsIE1hdGgubWluKDIxLCBwcmVjaXNpb24pKVxuICAgICAgICA6IE1hdGgubWF4KDAsIE1hdGgubWluKDIwLCBwcmVjaXNpb24pKTtcblxuICAgIGZ1bmN0aW9uIGZvcm1hdCh2YWx1ZSkge1xuICAgICAgdmFyIHZhbHVlUHJlZml4ID0gcHJlZml4LFxuICAgICAgICAgIHZhbHVlU3VmZml4ID0gc3VmZml4LFxuICAgICAgICAgIGksIG4sIGM7XG5cbiAgICAgIGlmICh0eXBlID09PSBcImNcIikge1xuICAgICAgICB2YWx1ZVN1ZmZpeCA9IGZvcm1hdFR5cGUodmFsdWUpICsgdmFsdWVTdWZmaXg7XG4gICAgICAgIHZhbHVlID0gXCJcIjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhbHVlID0gK3ZhbHVlO1xuXG4gICAgICAgIC8vIFBlcmZvcm0gdGhlIGluaXRpYWwgZm9ybWF0dGluZy5cbiAgICAgICAgdmFyIHZhbHVlTmVnYXRpdmUgPSB2YWx1ZSA8IDA7XG4gICAgICAgIHZhbHVlID0gaXNOYU4odmFsdWUpID8gbmFuIDogZm9ybWF0VHlwZShNYXRoLmFicyh2YWx1ZSksIHByZWNpc2lvbik7XG5cbiAgICAgICAgLy8gVHJpbSBpbnNpZ25pZmljYW50IHplcm9zLlxuICAgICAgICBpZiAodHJpbSkgdmFsdWUgPSBmb3JtYXRUcmltKHZhbHVlKTtcblxuICAgICAgICAvLyBJZiBhIG5lZ2F0aXZlIHZhbHVlIHJvdW5kcyB0byB6ZXJvIGR1cmluZyBmb3JtYXR0aW5nLCB0cmVhdCBhcyBwb3NpdGl2ZS5cbiAgICAgICAgaWYgKHZhbHVlTmVnYXRpdmUgJiYgK3ZhbHVlID09PSAwKSB2YWx1ZU5lZ2F0aXZlID0gZmFsc2U7XG5cbiAgICAgICAgLy8gQ29tcHV0ZSB0aGUgcHJlZml4IGFuZCBzdWZmaXguXG4gICAgICAgIHZhbHVlUHJlZml4ID0gKHZhbHVlTmVnYXRpdmUgPyAoc2lnbiA9PT0gXCIoXCIgPyBzaWduIDogbWludXMpIDogc2lnbiA9PT0gXCItXCIgfHwgc2lnbiA9PT0gXCIoXCIgPyBcIlwiIDogc2lnbikgKyB2YWx1ZVByZWZpeDtcblxuICAgICAgICB2YWx1ZVN1ZmZpeCA9ICh0eXBlID09PSBcInNcIiA/IHByZWZpeGVzWzggKyBwcmVmaXhFeHBvbmVudCAvIDNdIDogXCJcIikgKyB2YWx1ZVN1ZmZpeCArICh2YWx1ZU5lZ2F0aXZlICYmIHNpZ24gPT09IFwiKFwiID8gXCIpXCIgOiBcIlwiKTtcblxuICAgICAgICAvLyBCcmVhayB0aGUgZm9ybWF0dGVkIHZhbHVlIGludG8gdGhlIGludGVnZXIg4oCcdmFsdWXigJ0gcGFydCB0aGF0IGNhbiBiZVxuICAgICAgICAvLyBncm91cGVkLCBhbmQgZnJhY3Rpb25hbCBvciBleHBvbmVudGlhbCDigJxzdWZmaXjigJ0gcGFydCB0aGF0IGlzIG5vdC5cbiAgICAgICAgaWYgKG1heWJlU3VmZml4KSB7XG4gICAgICAgICAgaSA9IC0xLCBuID0gdmFsdWUubGVuZ3RoO1xuICAgICAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgICAgICBpZiAoYyA9IHZhbHVlLmNoYXJDb2RlQXQoaSksIDQ4ID4gYyB8fCBjID4gNTcpIHtcbiAgICAgICAgICAgICAgdmFsdWVTdWZmaXggPSAoYyA9PT0gNDYgPyBkZWNpbWFsICsgdmFsdWUuc2xpY2UoaSArIDEpIDogdmFsdWUuc2xpY2UoaSkpICsgdmFsdWVTdWZmaXg7XG4gICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUuc2xpY2UoMCwgaSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBJZiB0aGUgZmlsbCBjaGFyYWN0ZXIgaXMgbm90IFwiMFwiLCBncm91cGluZyBpcyBhcHBsaWVkIGJlZm9yZSBwYWRkaW5nLlxuICAgICAgaWYgKGNvbW1hICYmICF6ZXJvKSB2YWx1ZSA9IGdyb3VwKHZhbHVlLCBJbmZpbml0eSk7XG5cbiAgICAgIC8vIENvbXB1dGUgdGhlIHBhZGRpbmcuXG4gICAgICB2YXIgbGVuZ3RoID0gdmFsdWVQcmVmaXgubGVuZ3RoICsgdmFsdWUubGVuZ3RoICsgdmFsdWVTdWZmaXgubGVuZ3RoLFxuICAgICAgICAgIHBhZGRpbmcgPSBsZW5ndGggPCB3aWR0aCA/IG5ldyBBcnJheSh3aWR0aCAtIGxlbmd0aCArIDEpLmpvaW4oZmlsbCkgOiBcIlwiO1xuXG4gICAgICAvLyBJZiB0aGUgZmlsbCBjaGFyYWN0ZXIgaXMgXCIwXCIsIGdyb3VwaW5nIGlzIGFwcGxpZWQgYWZ0ZXIgcGFkZGluZy5cbiAgICAgIGlmIChjb21tYSAmJiB6ZXJvKSB2YWx1ZSA9IGdyb3VwKHBhZGRpbmcgKyB2YWx1ZSwgcGFkZGluZy5sZW5ndGggPyB3aWR0aCAtIHZhbHVlU3VmZml4Lmxlbmd0aCA6IEluZmluaXR5KSwgcGFkZGluZyA9IFwiXCI7XG5cbiAgICAgIC8vIFJlY29uc3RydWN0IHRoZSBmaW5hbCBvdXRwdXQgYmFzZWQgb24gdGhlIGRlc2lyZWQgYWxpZ25tZW50LlxuICAgICAgc3dpdGNoIChhbGlnbikge1xuICAgICAgICBjYXNlIFwiPFwiOiB2YWx1ZSA9IHZhbHVlUHJlZml4ICsgdmFsdWUgKyB2YWx1ZVN1ZmZpeCArIHBhZGRpbmc7IGJyZWFrO1xuICAgICAgICBjYXNlIFwiPVwiOiB2YWx1ZSA9IHZhbHVlUHJlZml4ICsgcGFkZGluZyArIHZhbHVlICsgdmFsdWVTdWZmaXg7IGJyZWFrO1xuICAgICAgICBjYXNlIFwiXlwiOiB2YWx1ZSA9IHBhZGRpbmcuc2xpY2UoMCwgbGVuZ3RoID0gcGFkZGluZy5sZW5ndGggPj4gMSkgKyB2YWx1ZVByZWZpeCArIHZhbHVlICsgdmFsdWVTdWZmaXggKyBwYWRkaW5nLnNsaWNlKGxlbmd0aCk7IGJyZWFrO1xuICAgICAgICBkZWZhdWx0OiB2YWx1ZSA9IHBhZGRpbmcgKyB2YWx1ZVByZWZpeCArIHZhbHVlICsgdmFsdWVTdWZmaXg7IGJyZWFrO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVtZXJhbHModmFsdWUpO1xuICAgIH1cblxuICAgIGZvcm1hdC50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHNwZWNpZmllciArIFwiXCI7XG4gICAgfTtcblxuICAgIHJldHVybiBmb3JtYXQ7XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXRQcmVmaXgoc3BlY2lmaWVyLCB2YWx1ZSkge1xuICAgIHZhciBmID0gbmV3Rm9ybWF0KChzcGVjaWZpZXIgPSBmb3JtYXRTcGVjaWZpZXIoc3BlY2lmaWVyKSwgc3BlY2lmaWVyLnR5cGUgPSBcImZcIiwgc3BlY2lmaWVyKSksXG4gICAgICAgIGUgPSBNYXRoLm1heCgtOCwgTWF0aC5taW4oOCwgTWF0aC5mbG9vcihleHBvbmVudCh2YWx1ZSkgLyAzKSkpICogMyxcbiAgICAgICAgayA9IE1hdGgucG93KDEwLCAtZSksXG4gICAgICAgIHByZWZpeCA9IHByZWZpeGVzWzggKyBlIC8gM107XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICByZXR1cm4gZihrICogdmFsdWUpICsgcHJlZml4O1xuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGZvcm1hdDogbmV3Rm9ybWF0LFxuICAgIGZvcm1hdFByZWZpeDogZm9ybWF0UHJlZml4XG4gIH07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihncm91cGluZywgdGhvdXNhbmRzKSB7XG4gIHJldHVybiBmdW5jdGlvbih2YWx1ZSwgd2lkdGgpIHtcbiAgICB2YXIgaSA9IHZhbHVlLmxlbmd0aCxcbiAgICAgICAgdCA9IFtdLFxuICAgICAgICBqID0gMCxcbiAgICAgICAgZyA9IGdyb3VwaW5nWzBdLFxuICAgICAgICBsZW5ndGggPSAwO1xuXG4gICAgd2hpbGUgKGkgPiAwICYmIGcgPiAwKSB7XG4gICAgICBpZiAobGVuZ3RoICsgZyArIDEgPiB3aWR0aCkgZyA9IE1hdGgubWF4KDEsIHdpZHRoIC0gbGVuZ3RoKTtcbiAgICAgIHQucHVzaCh2YWx1ZS5zdWJzdHJpbmcoaSAtPSBnLCBpICsgZykpO1xuICAgICAgaWYgKChsZW5ndGggKz0gZyArIDEpID4gd2lkdGgpIGJyZWFrO1xuICAgICAgZyA9IGdyb3VwaW5nW2ogPSAoaiArIDEpICUgZ3JvdXBpbmcubGVuZ3RoXTtcbiAgICB9XG5cbiAgICByZXR1cm4gdC5yZXZlcnNlKCkuam9pbih0aG91c2FuZHMpO1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obnVtZXJhbHMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoL1swLTldL2csIGZ1bmN0aW9uKGkpIHtcbiAgICAgIHJldHVybiBudW1lcmFsc1sraV07XG4gICAgfSk7XG4gIH07XG59XG4iLCJpbXBvcnQgZXhwb25lbnQgZnJvbSBcIi4vZXhwb25lbnQuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc3RlcCkge1xuICByZXR1cm4gTWF0aC5tYXgoMCwgLWV4cG9uZW50KE1hdGguYWJzKHN0ZXApKSk7XG59XG4iLCJpbXBvcnQgZXhwb25lbnQgZnJvbSBcIi4vZXhwb25lbnQuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc3RlcCwgdmFsdWUpIHtcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWF4KC04LCBNYXRoLm1pbig4LCBNYXRoLmZsb29yKGV4cG9uZW50KHZhbHVlKSAvIDMpKSkgKiAzIC0gZXhwb25lbnQoTWF0aC5hYnMoc3RlcCkpKTtcbn1cbiIsImltcG9ydCBleHBvbmVudCBmcm9tIFwiLi9leHBvbmVudC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzdGVwLCBtYXgpIHtcbiAgc3RlcCA9IE1hdGguYWJzKHN0ZXApLCBtYXggPSBNYXRoLmFicyhtYXgpIC0gc3RlcDtcbiAgcmV0dXJuIE1hdGgubWF4KDAsIGV4cG9uZW50KG1heCkgLSBleHBvbmVudChzdGVwKSkgKyAxO1xufVxuIiwiLy8gQWRkcyBmbG9hdGluZyBwb2ludCBudW1iZXJzIHdpdGggdHdpY2UgdGhlIG5vcm1hbCBwcmVjaXNpb24uXG4vLyBSZWZlcmVuY2U6IEouIFIuIFNoZXdjaHVrLCBBZGFwdGl2ZSBQcmVjaXNpb24gRmxvYXRpbmctUG9pbnQgQXJpdGhtZXRpYyBhbmRcbi8vIEZhc3QgUm9idXN0IEdlb21ldHJpYyBQcmVkaWNhdGVzLCBEaXNjcmV0ZSAmIENvbXB1dGF0aW9uYWwgR2VvbWV0cnkgMTgoMylcbi8vIDMwNeKAkzM2MyAoMTk5NykuXG4vLyBDb2RlIGFkYXB0ZWQgZnJvbSBHZW9ncmFwaGljTGliIGJ5IENoYXJsZXMgRi4gRi4gS2FybmV5LFxuLy8gaHR0cDovL2dlb2dyYXBoaWNsaWIuc291cmNlZm9yZ2UubmV0L1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBBZGRlcjtcbn1cblxuZnVuY3Rpb24gQWRkZXIoKSB7XG4gIHRoaXMucmVzZXQoKTtcbn1cblxuQWRkZXIucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogQWRkZXIsXG4gIHJlc2V0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnMgPSAvLyByb3VuZGVkIHZhbHVlXG4gICAgdGhpcy50ID0gMDsgLy8gZXhhY3QgZXJyb3JcbiAgfSxcbiAgYWRkOiBmdW5jdGlvbih5KSB7XG4gICAgYWRkKHRlbXAsIHksIHRoaXMudCk7XG4gICAgYWRkKHRoaXMsIHRlbXAucywgdGhpcy5zKTtcbiAgICBpZiAodGhpcy5zKSB0aGlzLnQgKz0gdGVtcC50O1xuICAgIGVsc2UgdGhpcy5zID0gdGVtcC50O1xuICB9LFxuICB2YWx1ZU9mOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5zO1xuICB9XG59O1xuXG52YXIgdGVtcCA9IG5ldyBBZGRlcjtcblxuZnVuY3Rpb24gYWRkKGFkZGVyLCBhLCBiKSB7XG4gIHZhciB4ID0gYWRkZXIucyA9IGEgKyBiLFxuICAgICAgYnYgPSB4IC0gYSxcbiAgICAgIGF2ID0geCAtIGJ2O1xuICBhZGRlci50ID0gKGEgLSBhdikgKyAoYiAtIGJ2KTtcbn1cbiIsImV4cG9ydCB2YXIgZXBzaWxvbiA9IDFlLTY7XG5leHBvcnQgdmFyIGVwc2lsb24yID0gMWUtMTI7XG5leHBvcnQgdmFyIHBpID0gTWF0aC5QSTtcbmV4cG9ydCB2YXIgaGFsZlBpID0gcGkgLyAyO1xuZXhwb3J0IHZhciBxdWFydGVyUGkgPSBwaSAvIDQ7XG5leHBvcnQgdmFyIHRhdSA9IHBpICogMjtcblxuZXhwb3J0IHZhciBkZWdyZWVzID0gMTgwIC8gcGk7XG5leHBvcnQgdmFyIHJhZGlhbnMgPSBwaSAvIDE4MDtcblxuZXhwb3J0IHZhciBhYnMgPSBNYXRoLmFicztcbmV4cG9ydCB2YXIgYXRhbiA9IE1hdGguYXRhbjtcbmV4cG9ydCB2YXIgYXRhbjIgPSBNYXRoLmF0YW4yO1xuZXhwb3J0IHZhciBjb3MgPSBNYXRoLmNvcztcbmV4cG9ydCB2YXIgY2VpbCA9IE1hdGguY2VpbDtcbmV4cG9ydCB2YXIgZXhwID0gTWF0aC5leHA7XG5leHBvcnQgdmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbmV4cG9ydCB2YXIgbG9nID0gTWF0aC5sb2c7XG5leHBvcnQgdmFyIHBvdyA9IE1hdGgucG93O1xuZXhwb3J0IHZhciBzaW4gPSBNYXRoLnNpbjtcbmV4cG9ydCB2YXIgc2lnbiA9IE1hdGguc2lnbiB8fCBmdW5jdGlvbih4KSB7IHJldHVybiB4ID4gMCA/IDEgOiB4IDwgMCA/IC0xIDogMDsgfTtcbmV4cG9ydCB2YXIgc3FydCA9IE1hdGguc3FydDtcbmV4cG9ydCB2YXIgdGFuID0gTWF0aC50YW47XG5cbmV4cG9ydCBmdW5jdGlvbiBhY29zKHgpIHtcbiAgcmV0dXJuIHggPiAxID8gMCA6IHggPCAtMSA/IHBpIDogTWF0aC5hY29zKHgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNpbih4KSB7XG4gIHJldHVybiB4ID4gMSA/IGhhbGZQaSA6IHggPCAtMSA/IC1oYWxmUGkgOiBNYXRoLmFzaW4oeCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoYXZlcnNpbih4KSB7XG4gIHJldHVybiAoeCA9IHNpbih4IC8gMikpICogeDtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vb3AoKSB7fVxuIiwiZnVuY3Rpb24gc3RyZWFtR2VvbWV0cnkoZ2VvbWV0cnksIHN0cmVhbSkge1xuICBpZiAoZ2VvbWV0cnkgJiYgc3RyZWFtR2VvbWV0cnlUeXBlLmhhc093blByb3BlcnR5KGdlb21ldHJ5LnR5cGUpKSB7XG4gICAgc3RyZWFtR2VvbWV0cnlUeXBlW2dlb21ldHJ5LnR5cGVdKGdlb21ldHJ5LCBzdHJlYW0pO1xuICB9XG59XG5cbnZhciBzdHJlYW1PYmplY3RUeXBlID0ge1xuICBGZWF0dXJlOiBmdW5jdGlvbihvYmplY3QsIHN0cmVhbSkge1xuICAgIHN0cmVhbUdlb21ldHJ5KG9iamVjdC5nZW9tZXRyeSwgc3RyZWFtKTtcbiAgfSxcbiAgRmVhdHVyZUNvbGxlY3Rpb246IGZ1bmN0aW9uKG9iamVjdCwgc3RyZWFtKSB7XG4gICAgdmFyIGZlYXR1cmVzID0gb2JqZWN0LmZlYXR1cmVzLCBpID0gLTEsIG4gPSBmZWF0dXJlcy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIHN0cmVhbUdlb21ldHJ5KGZlYXR1cmVzW2ldLmdlb21ldHJ5LCBzdHJlYW0pO1xuICB9XG59O1xuXG52YXIgc3RyZWFtR2VvbWV0cnlUeXBlID0ge1xuICBTcGhlcmU6IGZ1bmN0aW9uKG9iamVjdCwgc3RyZWFtKSB7XG4gICAgc3RyZWFtLnNwaGVyZSgpO1xuICB9LFxuICBQb2ludDogZnVuY3Rpb24ob2JqZWN0LCBzdHJlYW0pIHtcbiAgICBvYmplY3QgPSBvYmplY3QuY29vcmRpbmF0ZXM7XG4gICAgc3RyZWFtLnBvaW50KG9iamVjdFswXSwgb2JqZWN0WzFdLCBvYmplY3RbMl0pO1xuICB9LFxuICBNdWx0aVBvaW50OiBmdW5jdGlvbihvYmplY3QsIHN0cmVhbSkge1xuICAgIHZhciBjb29yZGluYXRlcyA9IG9iamVjdC5jb29yZGluYXRlcywgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBvYmplY3QgPSBjb29yZGluYXRlc1tpXSwgc3RyZWFtLnBvaW50KG9iamVjdFswXSwgb2JqZWN0WzFdLCBvYmplY3RbMl0pO1xuICB9LFxuICBMaW5lU3RyaW5nOiBmdW5jdGlvbihvYmplY3QsIHN0cmVhbSkge1xuICAgIHN0cmVhbUxpbmUob2JqZWN0LmNvb3JkaW5hdGVzLCBzdHJlYW0sIDApO1xuICB9LFxuICBNdWx0aUxpbmVTdHJpbmc6IGZ1bmN0aW9uKG9iamVjdCwgc3RyZWFtKSB7XG4gICAgdmFyIGNvb3JkaW5hdGVzID0gb2JqZWN0LmNvb3JkaW5hdGVzLCBpID0gLTEsIG4gPSBjb29yZGluYXRlcy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIHN0cmVhbUxpbmUoY29vcmRpbmF0ZXNbaV0sIHN0cmVhbSwgMCk7XG4gIH0sXG4gIFBvbHlnb246IGZ1bmN0aW9uKG9iamVjdCwgc3RyZWFtKSB7XG4gICAgc3RyZWFtUG9seWdvbihvYmplY3QuY29vcmRpbmF0ZXMsIHN0cmVhbSk7XG4gIH0sXG4gIE11bHRpUG9seWdvbjogZnVuY3Rpb24ob2JqZWN0LCBzdHJlYW0pIHtcbiAgICB2YXIgY29vcmRpbmF0ZXMgPSBvYmplY3QuY29vcmRpbmF0ZXMsIGkgPSAtMSwgbiA9IGNvb3JkaW5hdGVzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikgc3RyZWFtUG9seWdvbihjb29yZGluYXRlc1tpXSwgc3RyZWFtKTtcbiAgfSxcbiAgR2VvbWV0cnlDb2xsZWN0aW9uOiBmdW5jdGlvbihvYmplY3QsIHN0cmVhbSkge1xuICAgIHZhciBnZW9tZXRyaWVzID0gb2JqZWN0Lmdlb21ldHJpZXMsIGkgPSAtMSwgbiA9IGdlb21ldHJpZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBzdHJlYW1HZW9tZXRyeShnZW9tZXRyaWVzW2ldLCBzdHJlYW0pO1xuICB9XG59O1xuXG5mdW5jdGlvbiBzdHJlYW1MaW5lKGNvb3JkaW5hdGVzLCBzdHJlYW0sIGNsb3NlZCkge1xuICB2YXIgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoIC0gY2xvc2VkLCBjb29yZGluYXRlO1xuICBzdHJlYW0ubGluZVN0YXJ0KCk7XG4gIHdoaWxlICgrK2kgPCBuKSBjb29yZGluYXRlID0gY29vcmRpbmF0ZXNbaV0sIHN0cmVhbS5wb2ludChjb29yZGluYXRlWzBdLCBjb29yZGluYXRlWzFdLCBjb29yZGluYXRlWzJdKTtcbiAgc3RyZWFtLmxpbmVFbmQoKTtcbn1cblxuZnVuY3Rpb24gc3RyZWFtUG9seWdvbihjb29yZGluYXRlcywgc3RyZWFtKSB7XG4gIHZhciBpID0gLTEsIG4gPSBjb29yZGluYXRlcy5sZW5ndGg7XG4gIHN0cmVhbS5wb2x5Z29uU3RhcnQoKTtcbiAgd2hpbGUgKCsraSA8IG4pIHN0cmVhbUxpbmUoY29vcmRpbmF0ZXNbaV0sIHN0cmVhbSwgMSk7XG4gIHN0cmVhbS5wb2x5Z29uRW5kKCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iamVjdCwgc3RyZWFtKSB7XG4gIGlmIChvYmplY3QgJiYgc3RyZWFtT2JqZWN0VHlwZS5oYXNPd25Qcm9wZXJ0eShvYmplY3QudHlwZSkpIHtcbiAgICBzdHJlYW1PYmplY3RUeXBlW29iamVjdC50eXBlXShvYmplY3QsIHN0cmVhbSk7XG4gIH0gZWxzZSB7XG4gICAgc3RyZWFtR2VvbWV0cnkob2JqZWN0LCBzdHJlYW0pO1xuICB9XG59XG4iLCJpbXBvcnQgYWRkZXIgZnJvbSBcIi4vYWRkZXIuanNcIjtcbmltcG9ydCB7YXRhbjIsIGNvcywgcXVhcnRlclBpLCByYWRpYW5zLCBzaW4sIHRhdX0gZnJvbSBcIi4vbWF0aC5qc1wiO1xuaW1wb3J0IG5vb3AgZnJvbSBcIi4vbm9vcC5qc1wiO1xuaW1wb3J0IHN0cmVhbSBmcm9tIFwiLi9zdHJlYW0uanNcIjtcblxuZXhwb3J0IHZhciBhcmVhUmluZ1N1bSA9IGFkZGVyKCk7XG5cbnZhciBhcmVhU3VtID0gYWRkZXIoKSxcbiAgICBsYW1iZGEwMCxcbiAgICBwaGkwMCxcbiAgICBsYW1iZGEwLFxuICAgIGNvc1BoaTAsXG4gICAgc2luUGhpMDtcblxuZXhwb3J0IHZhciBhcmVhU3RyZWFtID0ge1xuICBwb2ludDogbm9vcCxcbiAgbGluZVN0YXJ0OiBub29wLFxuICBsaW5lRW5kOiBub29wLFxuICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIGFyZWFSaW5nU3VtLnJlc2V0KCk7XG4gICAgYXJlYVN0cmVhbS5saW5lU3RhcnQgPSBhcmVhUmluZ1N0YXJ0O1xuICAgIGFyZWFTdHJlYW0ubGluZUVuZCA9IGFyZWFSaW5nRW5kO1xuICB9LFxuICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgYXJlYVJpbmcgPSArYXJlYVJpbmdTdW07XG4gICAgYXJlYVN1bS5hZGQoYXJlYVJpbmcgPCAwID8gdGF1ICsgYXJlYVJpbmcgOiBhcmVhUmluZyk7XG4gICAgdGhpcy5saW5lU3RhcnQgPSB0aGlzLmxpbmVFbmQgPSB0aGlzLnBvaW50ID0gbm9vcDtcbiAgfSxcbiAgc3BoZXJlOiBmdW5jdGlvbigpIHtcbiAgICBhcmVhU3VtLmFkZCh0YXUpO1xuICB9XG59O1xuXG5mdW5jdGlvbiBhcmVhUmluZ1N0YXJ0KCkge1xuICBhcmVhU3RyZWFtLnBvaW50ID0gYXJlYVBvaW50Rmlyc3Q7XG59XG5cbmZ1bmN0aW9uIGFyZWFSaW5nRW5kKCkge1xuICBhcmVhUG9pbnQobGFtYmRhMDAsIHBoaTAwKTtcbn1cblxuZnVuY3Rpb24gYXJlYVBvaW50Rmlyc3QobGFtYmRhLCBwaGkpIHtcbiAgYXJlYVN0cmVhbS5wb2ludCA9IGFyZWFQb2ludDtcbiAgbGFtYmRhMDAgPSBsYW1iZGEsIHBoaTAwID0gcGhpO1xuICBsYW1iZGEgKj0gcmFkaWFucywgcGhpICo9IHJhZGlhbnM7XG4gIGxhbWJkYTAgPSBsYW1iZGEsIGNvc1BoaTAgPSBjb3MocGhpID0gcGhpIC8gMiArIHF1YXJ0ZXJQaSksIHNpblBoaTAgPSBzaW4ocGhpKTtcbn1cblxuZnVuY3Rpb24gYXJlYVBvaW50KGxhbWJkYSwgcGhpKSB7XG4gIGxhbWJkYSAqPSByYWRpYW5zLCBwaGkgKj0gcmFkaWFucztcbiAgcGhpID0gcGhpIC8gMiArIHF1YXJ0ZXJQaTsgLy8gaGFsZiB0aGUgYW5ndWxhciBkaXN0YW5jZSBmcm9tIHNvdXRoIHBvbGVcblxuICAvLyBTcGhlcmljYWwgZXhjZXNzIEUgZm9yIGEgc3BoZXJpY2FsIHRyaWFuZ2xlIHdpdGggdmVydGljZXM6IHNvdXRoIHBvbGUsXG4gIC8vIHByZXZpb3VzIHBvaW50LCBjdXJyZW50IHBvaW50LiAgVXNlcyBhIGZvcm11bGEgZGVyaXZlZCBmcm9tIENhZ25vbGnigJlzXG4gIC8vIHRoZW9yZW0uICBTZWUgVG9kaHVudGVyLCBTcGhlcmljYWwgVHJpZy4gKDE4NzEpLCBTZWMuIDEwMywgRXEuICgyKS5cbiAgdmFyIGRMYW1iZGEgPSBsYW1iZGEgLSBsYW1iZGEwLFxuICAgICAgc2RMYW1iZGEgPSBkTGFtYmRhID49IDAgPyAxIDogLTEsXG4gICAgICBhZExhbWJkYSA9IHNkTGFtYmRhICogZExhbWJkYSxcbiAgICAgIGNvc1BoaSA9IGNvcyhwaGkpLFxuICAgICAgc2luUGhpID0gc2luKHBoaSksXG4gICAgICBrID0gc2luUGhpMCAqIHNpblBoaSxcbiAgICAgIHUgPSBjb3NQaGkwICogY29zUGhpICsgayAqIGNvcyhhZExhbWJkYSksXG4gICAgICB2ID0gayAqIHNkTGFtYmRhICogc2luKGFkTGFtYmRhKTtcbiAgYXJlYVJpbmdTdW0uYWRkKGF0YW4yKHYsIHUpKTtcblxuICAvLyBBZHZhbmNlIHRoZSBwcmV2aW91cyBwb2ludHMuXG4gIGxhbWJkYTAgPSBsYW1iZGEsIGNvc1BoaTAgPSBjb3NQaGksIHNpblBoaTAgPSBzaW5QaGk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iamVjdCkge1xuICBhcmVhU3VtLnJlc2V0KCk7XG4gIHN0cmVhbShvYmplY3QsIGFyZWFTdHJlYW0pO1xuICByZXR1cm4gYXJlYVN1bSAqIDI7XG59XG4iLCJpbXBvcnQge2FzaW4sIGF0YW4yLCBjb3MsIHNpbiwgc3FydH0gZnJvbSBcIi4vbWF0aC5qc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gc3BoZXJpY2FsKGNhcnRlc2lhbikge1xuICByZXR1cm4gW2F0YW4yKGNhcnRlc2lhblsxXSwgY2FydGVzaWFuWzBdKSwgYXNpbihjYXJ0ZXNpYW5bMl0pXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhcnRlc2lhbihzcGhlcmljYWwpIHtcbiAgdmFyIGxhbWJkYSA9IHNwaGVyaWNhbFswXSwgcGhpID0gc3BoZXJpY2FsWzFdLCBjb3NQaGkgPSBjb3MocGhpKTtcbiAgcmV0dXJuIFtjb3NQaGkgKiBjb3MobGFtYmRhKSwgY29zUGhpICogc2luKGxhbWJkYSksIHNpbihwaGkpXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhcnRlc2lhbkRvdChhLCBiKSB7XG4gIHJldHVybiBhWzBdICogYlswXSArIGFbMV0gKiBiWzFdICsgYVsyXSAqIGJbMl07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYXJ0ZXNpYW5Dcm9zcyhhLCBiKSB7XG4gIHJldHVybiBbYVsxXSAqIGJbMl0gLSBhWzJdICogYlsxXSwgYVsyXSAqIGJbMF0gLSBhWzBdICogYlsyXSwgYVswXSAqIGJbMV0gLSBhWzFdICogYlswXV07XG59XG5cbi8vIFRPRE8gcmV0dXJuIGFcbmV4cG9ydCBmdW5jdGlvbiBjYXJ0ZXNpYW5BZGRJblBsYWNlKGEsIGIpIHtcbiAgYVswXSArPSBiWzBdLCBhWzFdICs9IGJbMV0sIGFbMl0gKz0gYlsyXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhcnRlc2lhblNjYWxlKHZlY3Rvciwgaykge1xuICByZXR1cm4gW3ZlY3RvclswXSAqIGssIHZlY3RvclsxXSAqIGssIHZlY3RvclsyXSAqIGtdO1xufVxuXG4vLyBUT0RPIHJldHVybiBkXG5leHBvcnQgZnVuY3Rpb24gY2FydGVzaWFuTm9ybWFsaXplSW5QbGFjZShkKSB7XG4gIHZhciBsID0gc3FydChkWzBdICogZFswXSArIGRbMV0gKiBkWzFdICsgZFsyXSAqIGRbMl0pO1xuICBkWzBdIC89IGwsIGRbMV0gLz0gbCwgZFsyXSAvPSBsO1xufVxuIiwiaW1wb3J0IGFkZGVyIGZyb20gXCIuL2FkZGVyLmpzXCI7XG5pbXBvcnQge2FyZWFTdHJlYW0sIGFyZWFSaW5nU3VtfSBmcm9tIFwiLi9hcmVhLmpzXCI7XG5pbXBvcnQge2NhcnRlc2lhbiwgY2FydGVzaWFuQ3Jvc3MsIGNhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2UsIHNwaGVyaWNhbH0gZnJvbSBcIi4vY2FydGVzaWFuLmpzXCI7XG5pbXBvcnQge2FicywgZGVncmVlcywgZXBzaWxvbiwgcmFkaWFuc30gZnJvbSBcIi4vbWF0aC5qc1wiO1xuaW1wb3J0IHN0cmVhbSBmcm9tIFwiLi9zdHJlYW0uanNcIjtcblxudmFyIGxhbWJkYTAsIHBoaTAsIGxhbWJkYTEsIHBoaTEsIC8vIGJvdW5kc1xuICAgIGxhbWJkYTIsIC8vIHByZXZpb3VzIGxhbWJkYS1jb29yZGluYXRlXG4gICAgbGFtYmRhMDAsIHBoaTAwLCAvLyBmaXJzdCBwb2ludFxuICAgIHAwLCAvLyBwcmV2aW91cyAzRCBwb2ludFxuICAgIGRlbHRhU3VtID0gYWRkZXIoKSxcbiAgICByYW5nZXMsXG4gICAgcmFuZ2U7XG5cbnZhciBib3VuZHNTdHJlYW0gPSB7XG4gIHBvaW50OiBib3VuZHNQb2ludCxcbiAgbGluZVN0YXJ0OiBib3VuZHNMaW5lU3RhcnQsXG4gIGxpbmVFbmQ6IGJvdW5kc0xpbmVFbmQsXG4gIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgYm91bmRzU3RyZWFtLnBvaW50ID0gYm91bmRzUmluZ1BvaW50O1xuICAgIGJvdW5kc1N0cmVhbS5saW5lU3RhcnQgPSBib3VuZHNSaW5nU3RhcnQ7XG4gICAgYm91bmRzU3RyZWFtLmxpbmVFbmQgPSBib3VuZHNSaW5nRW5kO1xuICAgIGRlbHRhU3VtLnJlc2V0KCk7XG4gICAgYXJlYVN0cmVhbS5wb2x5Z29uU3RhcnQoKTtcbiAgfSxcbiAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgYXJlYVN0cmVhbS5wb2x5Z29uRW5kKCk7XG4gICAgYm91bmRzU3RyZWFtLnBvaW50ID0gYm91bmRzUG9pbnQ7XG4gICAgYm91bmRzU3RyZWFtLmxpbmVTdGFydCA9IGJvdW5kc0xpbmVTdGFydDtcbiAgICBib3VuZHNTdHJlYW0ubGluZUVuZCA9IGJvdW5kc0xpbmVFbmQ7XG4gICAgaWYgKGFyZWFSaW5nU3VtIDwgMCkgbGFtYmRhMCA9IC0obGFtYmRhMSA9IDE4MCksIHBoaTAgPSAtKHBoaTEgPSA5MCk7XG4gICAgZWxzZSBpZiAoZGVsdGFTdW0gPiBlcHNpbG9uKSBwaGkxID0gOTA7XG4gICAgZWxzZSBpZiAoZGVsdGFTdW0gPCAtZXBzaWxvbikgcGhpMCA9IC05MDtcbiAgICByYW5nZVswXSA9IGxhbWJkYTAsIHJhbmdlWzFdID0gbGFtYmRhMTtcbiAgfSxcbiAgc3BoZXJlOiBmdW5jdGlvbigpIHtcbiAgICBsYW1iZGEwID0gLShsYW1iZGExID0gMTgwKSwgcGhpMCA9IC0ocGhpMSA9IDkwKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gYm91bmRzUG9pbnQobGFtYmRhLCBwaGkpIHtcbiAgcmFuZ2VzLnB1c2gocmFuZ2UgPSBbbGFtYmRhMCA9IGxhbWJkYSwgbGFtYmRhMSA9IGxhbWJkYV0pO1xuICBpZiAocGhpIDwgcGhpMCkgcGhpMCA9IHBoaTtcbiAgaWYgKHBoaSA+IHBoaTEpIHBoaTEgPSBwaGk7XG59XG5cbmZ1bmN0aW9uIGxpbmVQb2ludChsYW1iZGEsIHBoaSkge1xuICB2YXIgcCA9IGNhcnRlc2lhbihbbGFtYmRhICogcmFkaWFucywgcGhpICogcmFkaWFuc10pO1xuICBpZiAocDApIHtcbiAgICB2YXIgbm9ybWFsID0gY2FydGVzaWFuQ3Jvc3MocDAsIHApLFxuICAgICAgICBlcXVhdG9yaWFsID0gW25vcm1hbFsxXSwgLW5vcm1hbFswXSwgMF0sXG4gICAgICAgIGluZmxlY3Rpb24gPSBjYXJ0ZXNpYW5Dcm9zcyhlcXVhdG9yaWFsLCBub3JtYWwpO1xuICAgIGNhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2UoaW5mbGVjdGlvbik7XG4gICAgaW5mbGVjdGlvbiA9IHNwaGVyaWNhbChpbmZsZWN0aW9uKTtcbiAgICB2YXIgZGVsdGEgPSBsYW1iZGEgLSBsYW1iZGEyLFxuICAgICAgICBzaWduID0gZGVsdGEgPiAwID8gMSA6IC0xLFxuICAgICAgICBsYW1iZGFpID0gaW5mbGVjdGlvblswXSAqIGRlZ3JlZXMgKiBzaWduLFxuICAgICAgICBwaGlpLFxuICAgICAgICBhbnRpbWVyaWRpYW4gPSBhYnMoZGVsdGEpID4gMTgwO1xuICAgIGlmIChhbnRpbWVyaWRpYW4gXiAoc2lnbiAqIGxhbWJkYTIgPCBsYW1iZGFpICYmIGxhbWJkYWkgPCBzaWduICogbGFtYmRhKSkge1xuICAgICAgcGhpaSA9IGluZmxlY3Rpb25bMV0gKiBkZWdyZWVzO1xuICAgICAgaWYgKHBoaWkgPiBwaGkxKSBwaGkxID0gcGhpaTtcbiAgICB9IGVsc2UgaWYgKGxhbWJkYWkgPSAobGFtYmRhaSArIDM2MCkgJSAzNjAgLSAxODAsIGFudGltZXJpZGlhbiBeIChzaWduICogbGFtYmRhMiA8IGxhbWJkYWkgJiYgbGFtYmRhaSA8IHNpZ24gKiBsYW1iZGEpKSB7XG4gICAgICBwaGlpID0gLWluZmxlY3Rpb25bMV0gKiBkZWdyZWVzO1xuICAgICAgaWYgKHBoaWkgPCBwaGkwKSBwaGkwID0gcGhpaTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHBoaSA8IHBoaTApIHBoaTAgPSBwaGk7XG4gICAgICBpZiAocGhpID4gcGhpMSkgcGhpMSA9IHBoaTtcbiAgICB9XG4gICAgaWYgKGFudGltZXJpZGlhbikge1xuICAgICAgaWYgKGxhbWJkYSA8IGxhbWJkYTIpIHtcbiAgICAgICAgaWYgKGFuZ2xlKGxhbWJkYTAsIGxhbWJkYSkgPiBhbmdsZShsYW1iZGEwLCBsYW1iZGExKSkgbGFtYmRhMSA9IGxhbWJkYTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChhbmdsZShsYW1iZGEsIGxhbWJkYTEpID4gYW5nbGUobGFtYmRhMCwgbGFtYmRhMSkpIGxhbWJkYTAgPSBsYW1iZGE7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChsYW1iZGExID49IGxhbWJkYTApIHtcbiAgICAgICAgaWYgKGxhbWJkYSA8IGxhbWJkYTApIGxhbWJkYTAgPSBsYW1iZGE7XG4gICAgICAgIGlmIChsYW1iZGEgPiBsYW1iZGExKSBsYW1iZGExID0gbGFtYmRhO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGxhbWJkYSA+IGxhbWJkYTIpIHtcbiAgICAgICAgICBpZiAoYW5nbGUobGFtYmRhMCwgbGFtYmRhKSA+IGFuZ2xlKGxhbWJkYTAsIGxhbWJkYTEpKSBsYW1iZGExID0gbGFtYmRhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChhbmdsZShsYW1iZGEsIGxhbWJkYTEpID4gYW5nbGUobGFtYmRhMCwgbGFtYmRhMSkpIGxhbWJkYTAgPSBsYW1iZGE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmFuZ2VzLnB1c2gocmFuZ2UgPSBbbGFtYmRhMCA9IGxhbWJkYSwgbGFtYmRhMSA9IGxhbWJkYV0pO1xuICB9XG4gIGlmIChwaGkgPCBwaGkwKSBwaGkwID0gcGhpO1xuICBpZiAocGhpID4gcGhpMSkgcGhpMSA9IHBoaTtcbiAgcDAgPSBwLCBsYW1iZGEyID0gbGFtYmRhO1xufVxuXG5mdW5jdGlvbiBib3VuZHNMaW5lU3RhcnQoKSB7XG4gIGJvdW5kc1N0cmVhbS5wb2ludCA9IGxpbmVQb2ludDtcbn1cblxuZnVuY3Rpb24gYm91bmRzTGluZUVuZCgpIHtcbiAgcmFuZ2VbMF0gPSBsYW1iZGEwLCByYW5nZVsxXSA9IGxhbWJkYTE7XG4gIGJvdW5kc1N0cmVhbS5wb2ludCA9IGJvdW5kc1BvaW50O1xuICBwMCA9IG51bGw7XG59XG5cbmZ1bmN0aW9uIGJvdW5kc1JpbmdQb2ludChsYW1iZGEsIHBoaSkge1xuICBpZiAocDApIHtcbiAgICB2YXIgZGVsdGEgPSBsYW1iZGEgLSBsYW1iZGEyO1xuICAgIGRlbHRhU3VtLmFkZChhYnMoZGVsdGEpID4gMTgwID8gZGVsdGEgKyAoZGVsdGEgPiAwID8gMzYwIDogLTM2MCkgOiBkZWx0YSk7XG4gIH0gZWxzZSB7XG4gICAgbGFtYmRhMDAgPSBsYW1iZGEsIHBoaTAwID0gcGhpO1xuICB9XG4gIGFyZWFTdHJlYW0ucG9pbnQobGFtYmRhLCBwaGkpO1xuICBsaW5lUG9pbnQobGFtYmRhLCBwaGkpO1xufVxuXG5mdW5jdGlvbiBib3VuZHNSaW5nU3RhcnQoKSB7XG4gIGFyZWFTdHJlYW0ubGluZVN0YXJ0KCk7XG59XG5cbmZ1bmN0aW9uIGJvdW5kc1JpbmdFbmQoKSB7XG4gIGJvdW5kc1JpbmdQb2ludChsYW1iZGEwMCwgcGhpMDApO1xuICBhcmVhU3RyZWFtLmxpbmVFbmQoKTtcbiAgaWYgKGFicyhkZWx0YVN1bSkgPiBlcHNpbG9uKSBsYW1iZGEwID0gLShsYW1iZGExID0gMTgwKTtcbiAgcmFuZ2VbMF0gPSBsYW1iZGEwLCByYW5nZVsxXSA9IGxhbWJkYTE7XG4gIHAwID0gbnVsbDtcbn1cblxuLy8gRmluZHMgdGhlIGxlZnQtcmlnaHQgZGlzdGFuY2UgYmV0d2VlbiB0d28gbG9uZ2l0dWRlcy5cbi8vIFRoaXMgaXMgYWxtb3N0IHRoZSBzYW1lIGFzIChsYW1iZGExIC0gbGFtYmRhMCArIDM2MMKwKSAlIDM2MMKwLCBleGNlcHQgdGhhdCB3ZSB3YW50XG4vLyB0aGUgZGlzdGFuY2UgYmV0d2VlbiDCsTE4MMKwIHRvIGJlIDM2MMKwLlxuZnVuY3Rpb24gYW5nbGUobGFtYmRhMCwgbGFtYmRhMSkge1xuICByZXR1cm4gKGxhbWJkYTEgLT0gbGFtYmRhMCkgPCAwID8gbGFtYmRhMSArIDM2MCA6IGxhbWJkYTE7XG59XG5cbmZ1bmN0aW9uIHJhbmdlQ29tcGFyZShhLCBiKSB7XG4gIHJldHVybiBhWzBdIC0gYlswXTtcbn1cblxuZnVuY3Rpb24gcmFuZ2VDb250YWlucyhyYW5nZSwgeCkge1xuICByZXR1cm4gcmFuZ2VbMF0gPD0gcmFuZ2VbMV0gPyByYW5nZVswXSA8PSB4ICYmIHggPD0gcmFuZ2VbMV0gOiB4IDwgcmFuZ2VbMF0gfHwgcmFuZ2VbMV0gPCB4O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihmZWF0dXJlKSB7XG4gIHZhciBpLCBuLCBhLCBiLCBtZXJnZWQsIGRlbHRhTWF4LCBkZWx0YTtcblxuICBwaGkxID0gbGFtYmRhMSA9IC0obGFtYmRhMCA9IHBoaTAgPSBJbmZpbml0eSk7XG4gIHJhbmdlcyA9IFtdO1xuICBzdHJlYW0oZmVhdHVyZSwgYm91bmRzU3RyZWFtKTtcblxuICAvLyBGaXJzdCwgc29ydCByYW5nZXMgYnkgdGhlaXIgbWluaW11bSBsb25naXR1ZGVzLlxuICBpZiAobiA9IHJhbmdlcy5sZW5ndGgpIHtcbiAgICByYW5nZXMuc29ydChyYW5nZUNvbXBhcmUpO1xuXG4gICAgLy8gVGhlbiwgbWVyZ2UgYW55IHJhbmdlcyB0aGF0IG92ZXJsYXAuXG4gICAgZm9yIChpID0gMSwgYSA9IHJhbmdlc1swXSwgbWVyZ2VkID0gW2FdOyBpIDwgbjsgKytpKSB7XG4gICAgICBiID0gcmFuZ2VzW2ldO1xuICAgICAgaWYgKHJhbmdlQ29udGFpbnMoYSwgYlswXSkgfHwgcmFuZ2VDb250YWlucyhhLCBiWzFdKSkge1xuICAgICAgICBpZiAoYW5nbGUoYVswXSwgYlsxXSkgPiBhbmdsZShhWzBdLCBhWzFdKSkgYVsxXSA9IGJbMV07XG4gICAgICAgIGlmIChhbmdsZShiWzBdLCBhWzFdKSA+IGFuZ2xlKGFbMF0sIGFbMV0pKSBhWzBdID0gYlswXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG1lcmdlZC5wdXNoKGEgPSBiKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBGaW5hbGx5LCBmaW5kIHRoZSBsYXJnZXN0IGdhcCBiZXR3ZWVuIHRoZSBtZXJnZWQgcmFuZ2VzLlxuICAgIC8vIFRoZSBmaW5hbCBib3VuZGluZyBib3ggd2lsbCBiZSB0aGUgaW52ZXJzZSBvZiB0aGlzIGdhcC5cbiAgICBmb3IgKGRlbHRhTWF4ID0gLUluZmluaXR5LCBuID0gbWVyZ2VkLmxlbmd0aCAtIDEsIGkgPSAwLCBhID0gbWVyZ2VkW25dOyBpIDw9IG47IGEgPSBiLCArK2kpIHtcbiAgICAgIGIgPSBtZXJnZWRbaV07XG4gICAgICBpZiAoKGRlbHRhID0gYW5nbGUoYVsxXSwgYlswXSkpID4gZGVsdGFNYXgpIGRlbHRhTWF4ID0gZGVsdGEsIGxhbWJkYTAgPSBiWzBdLCBsYW1iZGExID0gYVsxXTtcbiAgICB9XG4gIH1cblxuICByYW5nZXMgPSByYW5nZSA9IG51bGw7XG5cbiAgcmV0dXJuIGxhbWJkYTAgPT09IEluZmluaXR5IHx8IHBoaTAgPT09IEluZmluaXR5XG4gICAgICA/IFtbTmFOLCBOYU5dLCBbTmFOLCBOYU5dXVxuICAgICAgOiBbW2xhbWJkYTAsIHBoaTBdLCBbbGFtYmRhMSwgcGhpMV1dO1xufVxuIiwiaW1wb3J0IHthc2luLCBhdGFuMiwgY29zLCBkZWdyZWVzLCBlcHNpbG9uLCBlcHNpbG9uMiwgcmFkaWFucywgc2luLCBzcXJ0fSBmcm9tIFwiLi9tYXRoLmpzXCI7XG5pbXBvcnQgbm9vcCBmcm9tIFwiLi9ub29wLmpzXCI7XG5pbXBvcnQgc3RyZWFtIGZyb20gXCIuL3N0cmVhbS5qc1wiO1xuXG52YXIgVzAsIFcxLFxuICAgIFgwLCBZMCwgWjAsXG4gICAgWDEsIFkxLCBaMSxcbiAgICBYMiwgWTIsIFoyLFxuICAgIGxhbWJkYTAwLCBwaGkwMCwgLy8gZmlyc3QgcG9pbnRcbiAgICB4MCwgeTAsIHowOyAvLyBwcmV2aW91cyBwb2ludFxuXG52YXIgY2VudHJvaWRTdHJlYW0gPSB7XG4gIHNwaGVyZTogbm9vcCxcbiAgcG9pbnQ6IGNlbnRyb2lkUG9pbnQsXG4gIGxpbmVTdGFydDogY2VudHJvaWRMaW5lU3RhcnQsXG4gIGxpbmVFbmQ6IGNlbnRyb2lkTGluZUVuZCxcbiAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICBjZW50cm9pZFN0cmVhbS5saW5lU3RhcnQgPSBjZW50cm9pZFJpbmdTdGFydDtcbiAgICBjZW50cm9pZFN0cmVhbS5saW5lRW5kID0gY2VudHJvaWRSaW5nRW5kO1xuICB9LFxuICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICBjZW50cm9pZFN0cmVhbS5saW5lU3RhcnQgPSBjZW50cm9pZExpbmVTdGFydDtcbiAgICBjZW50cm9pZFN0cmVhbS5saW5lRW5kID0gY2VudHJvaWRMaW5lRW5kO1xuICB9XG59O1xuXG4vLyBBcml0aG1ldGljIG1lYW4gb2YgQ2FydGVzaWFuIHZlY3RvcnMuXG5mdW5jdGlvbiBjZW50cm9pZFBvaW50KGxhbWJkYSwgcGhpKSB7XG4gIGxhbWJkYSAqPSByYWRpYW5zLCBwaGkgKj0gcmFkaWFucztcbiAgdmFyIGNvc1BoaSA9IGNvcyhwaGkpO1xuICBjZW50cm9pZFBvaW50Q2FydGVzaWFuKGNvc1BoaSAqIGNvcyhsYW1iZGEpLCBjb3NQaGkgKiBzaW4obGFtYmRhKSwgc2luKHBoaSkpO1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZFBvaW50Q2FydGVzaWFuKHgsIHksIHopIHtcbiAgKytXMDtcbiAgWDAgKz0gKHggLSBYMCkgLyBXMDtcbiAgWTAgKz0gKHkgLSBZMCkgLyBXMDtcbiAgWjAgKz0gKHogLSBaMCkgLyBXMDtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRMaW5lU3RhcnQoKSB7XG4gIGNlbnRyb2lkU3RyZWFtLnBvaW50ID0gY2VudHJvaWRMaW5lUG9pbnRGaXJzdDtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRMaW5lUG9pbnRGaXJzdChsYW1iZGEsIHBoaSkge1xuICBsYW1iZGEgKj0gcmFkaWFucywgcGhpICo9IHJhZGlhbnM7XG4gIHZhciBjb3NQaGkgPSBjb3MocGhpKTtcbiAgeDAgPSBjb3NQaGkgKiBjb3MobGFtYmRhKTtcbiAgeTAgPSBjb3NQaGkgKiBzaW4obGFtYmRhKTtcbiAgejAgPSBzaW4ocGhpKTtcbiAgY2VudHJvaWRTdHJlYW0ucG9pbnQgPSBjZW50cm9pZExpbmVQb2ludDtcbiAgY2VudHJvaWRQb2ludENhcnRlc2lhbih4MCwgeTAsIHowKTtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRMaW5lUG9pbnQobGFtYmRhLCBwaGkpIHtcbiAgbGFtYmRhICo9IHJhZGlhbnMsIHBoaSAqPSByYWRpYW5zO1xuICB2YXIgY29zUGhpID0gY29zKHBoaSksXG4gICAgICB4ID0gY29zUGhpICogY29zKGxhbWJkYSksXG4gICAgICB5ID0gY29zUGhpICogc2luKGxhbWJkYSksXG4gICAgICB6ID0gc2luKHBoaSksXG4gICAgICB3ID0gYXRhbjIoc3FydCgodyA9IHkwICogeiAtIHowICogeSkgKiB3ICsgKHcgPSB6MCAqIHggLSB4MCAqIHopICogdyArICh3ID0geDAgKiB5IC0geTAgKiB4KSAqIHcpLCB4MCAqIHggKyB5MCAqIHkgKyB6MCAqIHopO1xuICBXMSArPSB3O1xuICBYMSArPSB3ICogKHgwICsgKHgwID0geCkpO1xuICBZMSArPSB3ICogKHkwICsgKHkwID0geSkpO1xuICBaMSArPSB3ICogKHowICsgKHowID0geikpO1xuICBjZW50cm9pZFBvaW50Q2FydGVzaWFuKHgwLCB5MCwgejApO1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZExpbmVFbmQoKSB7XG4gIGNlbnRyb2lkU3RyZWFtLnBvaW50ID0gY2VudHJvaWRQb2ludDtcbn1cblxuLy8gU2VlIEouIEUuIEJyb2NrLCBUaGUgSW5lcnRpYSBUZW5zb3IgZm9yIGEgU3BoZXJpY2FsIFRyaWFuZ2xlLFxuLy8gSi4gQXBwbGllZCBNZWNoYW5pY3MgNDIsIDIzOSAoMTk3NSkuXG5mdW5jdGlvbiBjZW50cm9pZFJpbmdTdGFydCgpIHtcbiAgY2VudHJvaWRTdHJlYW0ucG9pbnQgPSBjZW50cm9pZFJpbmdQb2ludEZpcnN0O1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZFJpbmdFbmQoKSB7XG4gIGNlbnRyb2lkUmluZ1BvaW50KGxhbWJkYTAwLCBwaGkwMCk7XG4gIGNlbnRyb2lkU3RyZWFtLnBvaW50ID0gY2VudHJvaWRQb2ludDtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRSaW5nUG9pbnRGaXJzdChsYW1iZGEsIHBoaSkge1xuICBsYW1iZGEwMCA9IGxhbWJkYSwgcGhpMDAgPSBwaGk7XG4gIGxhbWJkYSAqPSByYWRpYW5zLCBwaGkgKj0gcmFkaWFucztcbiAgY2VudHJvaWRTdHJlYW0ucG9pbnQgPSBjZW50cm9pZFJpbmdQb2ludDtcbiAgdmFyIGNvc1BoaSA9IGNvcyhwaGkpO1xuICB4MCA9IGNvc1BoaSAqIGNvcyhsYW1iZGEpO1xuICB5MCA9IGNvc1BoaSAqIHNpbihsYW1iZGEpO1xuICB6MCA9IHNpbihwaGkpO1xuICBjZW50cm9pZFBvaW50Q2FydGVzaWFuKHgwLCB5MCwgejApO1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZFJpbmdQb2ludChsYW1iZGEsIHBoaSkge1xuICBsYW1iZGEgKj0gcmFkaWFucywgcGhpICo9IHJhZGlhbnM7XG4gIHZhciBjb3NQaGkgPSBjb3MocGhpKSxcbiAgICAgIHggPSBjb3NQaGkgKiBjb3MobGFtYmRhKSxcbiAgICAgIHkgPSBjb3NQaGkgKiBzaW4obGFtYmRhKSxcbiAgICAgIHogPSBzaW4ocGhpKSxcbiAgICAgIGN4ID0geTAgKiB6IC0gejAgKiB5LFxuICAgICAgY3kgPSB6MCAqIHggLSB4MCAqIHosXG4gICAgICBjeiA9IHgwICogeSAtIHkwICogeCxcbiAgICAgIG0gPSBzcXJ0KGN4ICogY3ggKyBjeSAqIGN5ICsgY3ogKiBjeiksXG4gICAgICB3ID0gYXNpbihtKSwgLy8gbGluZSB3ZWlnaHQgPSBhbmdsZVxuICAgICAgdiA9IG0gJiYgLXcgLyBtOyAvLyBhcmVhIHdlaWdodCBtdWx0aXBsaWVyXG4gIFgyICs9IHYgKiBjeDtcbiAgWTIgKz0gdiAqIGN5O1xuICBaMiArPSB2ICogY3o7XG4gIFcxICs9IHc7XG4gIFgxICs9IHcgKiAoeDAgKyAoeDAgPSB4KSk7XG4gIFkxICs9IHcgKiAoeTAgKyAoeTAgPSB5KSk7XG4gIFoxICs9IHcgKiAoejAgKyAoejAgPSB6KSk7XG4gIGNlbnRyb2lkUG9pbnRDYXJ0ZXNpYW4oeDAsIHkwLCB6MCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iamVjdCkge1xuICBXMCA9IFcxID1cbiAgWDAgPSBZMCA9IFowID1cbiAgWDEgPSBZMSA9IFoxID1cbiAgWDIgPSBZMiA9IFoyID0gMDtcbiAgc3RyZWFtKG9iamVjdCwgY2VudHJvaWRTdHJlYW0pO1xuXG4gIHZhciB4ID0gWDIsXG4gICAgICB5ID0gWTIsXG4gICAgICB6ID0gWjIsXG4gICAgICBtID0geCAqIHggKyB5ICogeSArIHogKiB6O1xuXG4gIC8vIElmIHRoZSBhcmVhLXdlaWdodGVkIGNjZW50cm9pZCBpcyB1bmRlZmluZWQsIGZhbGwgYmFjayB0byBsZW5ndGgtd2VpZ2h0ZWQgY2NlbnRyb2lkLlxuICBpZiAobSA8IGVwc2lsb24yKSB7XG4gICAgeCA9IFgxLCB5ID0gWTEsIHogPSBaMTtcbiAgICAvLyBJZiB0aGUgZmVhdHVyZSBoYXMgemVybyBsZW5ndGgsIGZhbGwgYmFjayB0byBhcml0aG1ldGljIG1lYW4gb2YgcG9pbnQgdmVjdG9ycy5cbiAgICBpZiAoVzEgPCBlcHNpbG9uKSB4ID0gWDAsIHkgPSBZMCwgeiA9IFowO1xuICAgIG0gPSB4ICogeCArIHkgKiB5ICsgeiAqIHo7XG4gICAgLy8gSWYgdGhlIGZlYXR1cmUgc3RpbGwgaGFzIGFuIHVuZGVmaW5lZCBjY2VudHJvaWQsIHRoZW4gcmV0dXJuLlxuICAgIGlmIChtIDwgZXBzaWxvbjIpIHJldHVybiBbTmFOLCBOYU5dO1xuICB9XG5cbiAgcmV0dXJuIFthdGFuMih5LCB4KSAqIGRlZ3JlZXMsIGFzaW4oeiAvIHNxcnQobSkpICogZGVncmVlc107XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcblxuICBmdW5jdGlvbiBjb21wb3NlKHgsIHkpIHtcbiAgICByZXR1cm4geCA9IGEoeCwgeSksIGIoeFswXSwgeFsxXSk7XG4gIH1cblxuICBpZiAoYS5pbnZlcnQgJiYgYi5pbnZlcnQpIGNvbXBvc2UuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgIHJldHVybiB4ID0gYi5pbnZlcnQoeCwgeSksIHggJiYgYS5pbnZlcnQoeFswXSwgeFsxXSk7XG4gIH07XG5cbiAgcmV0dXJuIGNvbXBvc2U7XG59XG4iLCJpbXBvcnQgY29tcG9zZSBmcm9tIFwiLi9jb21wb3NlLmpzXCI7XG5pbXBvcnQge2FicywgYXNpbiwgYXRhbjIsIGNvcywgZGVncmVlcywgcGksIHJhZGlhbnMsIHNpbiwgdGF1fSBmcm9tIFwiLi9tYXRoLmpzXCI7XG5cbmZ1bmN0aW9uIHJvdGF0aW9uSWRlbnRpdHkobGFtYmRhLCBwaGkpIHtcbiAgcmV0dXJuIFthYnMobGFtYmRhKSA+IHBpID8gbGFtYmRhICsgTWF0aC5yb3VuZCgtbGFtYmRhIC8gdGF1KSAqIHRhdSA6IGxhbWJkYSwgcGhpXTtcbn1cblxucm90YXRpb25JZGVudGl0eS5pbnZlcnQgPSByb3RhdGlvbklkZW50aXR5O1xuXG5leHBvcnQgZnVuY3Rpb24gcm90YXRlUmFkaWFucyhkZWx0YUxhbWJkYSwgZGVsdGFQaGksIGRlbHRhR2FtbWEpIHtcbiAgcmV0dXJuIChkZWx0YUxhbWJkYSAlPSB0YXUpID8gKGRlbHRhUGhpIHx8IGRlbHRhR2FtbWEgPyBjb21wb3NlKHJvdGF0aW9uTGFtYmRhKGRlbHRhTGFtYmRhKSwgcm90YXRpb25QaGlHYW1tYShkZWx0YVBoaSwgZGVsdGFHYW1tYSkpXG4gICAgOiByb3RhdGlvbkxhbWJkYShkZWx0YUxhbWJkYSkpXG4gICAgOiAoZGVsdGFQaGkgfHwgZGVsdGFHYW1tYSA/IHJvdGF0aW9uUGhpR2FtbWEoZGVsdGFQaGksIGRlbHRhR2FtbWEpXG4gICAgOiByb3RhdGlvbklkZW50aXR5KTtcbn1cblxuZnVuY3Rpb24gZm9yd2FyZFJvdGF0aW9uTGFtYmRhKGRlbHRhTGFtYmRhKSB7XG4gIHJldHVybiBmdW5jdGlvbihsYW1iZGEsIHBoaSkge1xuICAgIHJldHVybiBsYW1iZGEgKz0gZGVsdGFMYW1iZGEsIFtsYW1iZGEgPiBwaSA/IGxhbWJkYSAtIHRhdSA6IGxhbWJkYSA8IC1waSA/IGxhbWJkYSArIHRhdSA6IGxhbWJkYSwgcGhpXTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gcm90YXRpb25MYW1iZGEoZGVsdGFMYW1iZGEpIHtcbiAgdmFyIHJvdGF0aW9uID0gZm9yd2FyZFJvdGF0aW9uTGFtYmRhKGRlbHRhTGFtYmRhKTtcbiAgcm90YXRpb24uaW52ZXJ0ID0gZm9yd2FyZFJvdGF0aW9uTGFtYmRhKC1kZWx0YUxhbWJkYSk7XG4gIHJldHVybiByb3RhdGlvbjtcbn1cblxuZnVuY3Rpb24gcm90YXRpb25QaGlHYW1tYShkZWx0YVBoaSwgZGVsdGFHYW1tYSkge1xuICB2YXIgY29zRGVsdGFQaGkgPSBjb3MoZGVsdGFQaGkpLFxuICAgICAgc2luRGVsdGFQaGkgPSBzaW4oZGVsdGFQaGkpLFxuICAgICAgY29zRGVsdGFHYW1tYSA9IGNvcyhkZWx0YUdhbW1hKSxcbiAgICAgIHNpbkRlbHRhR2FtbWEgPSBzaW4oZGVsdGFHYW1tYSk7XG5cbiAgZnVuY3Rpb24gcm90YXRpb24obGFtYmRhLCBwaGkpIHtcbiAgICB2YXIgY29zUGhpID0gY29zKHBoaSksXG4gICAgICAgIHggPSBjb3MobGFtYmRhKSAqIGNvc1BoaSxcbiAgICAgICAgeSA9IHNpbihsYW1iZGEpICogY29zUGhpLFxuICAgICAgICB6ID0gc2luKHBoaSksXG4gICAgICAgIGsgPSB6ICogY29zRGVsdGFQaGkgKyB4ICogc2luRGVsdGFQaGk7XG4gICAgcmV0dXJuIFtcbiAgICAgIGF0YW4yKHkgKiBjb3NEZWx0YUdhbW1hIC0gayAqIHNpbkRlbHRhR2FtbWEsIHggKiBjb3NEZWx0YVBoaSAtIHogKiBzaW5EZWx0YVBoaSksXG4gICAgICBhc2luKGsgKiBjb3NEZWx0YUdhbW1hICsgeSAqIHNpbkRlbHRhR2FtbWEpXG4gICAgXTtcbiAgfVxuXG4gIHJvdGF0aW9uLmludmVydCA9IGZ1bmN0aW9uKGxhbWJkYSwgcGhpKSB7XG4gICAgdmFyIGNvc1BoaSA9IGNvcyhwaGkpLFxuICAgICAgICB4ID0gY29zKGxhbWJkYSkgKiBjb3NQaGksXG4gICAgICAgIHkgPSBzaW4obGFtYmRhKSAqIGNvc1BoaSxcbiAgICAgICAgeiA9IHNpbihwaGkpLFxuICAgICAgICBrID0geiAqIGNvc0RlbHRhR2FtbWEgLSB5ICogc2luRGVsdGFHYW1tYTtcbiAgICByZXR1cm4gW1xuICAgICAgYXRhbjIoeSAqIGNvc0RlbHRhR2FtbWEgKyB6ICogc2luRGVsdGFHYW1tYSwgeCAqIGNvc0RlbHRhUGhpICsgayAqIHNpbkRlbHRhUGhpKSxcbiAgICAgIGFzaW4oayAqIGNvc0RlbHRhUGhpIC0geCAqIHNpbkRlbHRhUGhpKVxuICAgIF07XG4gIH07XG5cbiAgcmV0dXJuIHJvdGF0aW9uO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihyb3RhdGUpIHtcbiAgcm90YXRlID0gcm90YXRlUmFkaWFucyhyb3RhdGVbMF0gKiByYWRpYW5zLCByb3RhdGVbMV0gKiByYWRpYW5zLCByb3RhdGUubGVuZ3RoID4gMiA/IHJvdGF0ZVsyXSAqIHJhZGlhbnMgOiAwKTtcblxuICBmdW5jdGlvbiBmb3J3YXJkKGNvb3JkaW5hdGVzKSB7XG4gICAgY29vcmRpbmF0ZXMgPSByb3RhdGUoY29vcmRpbmF0ZXNbMF0gKiByYWRpYW5zLCBjb29yZGluYXRlc1sxXSAqIHJhZGlhbnMpO1xuICAgIHJldHVybiBjb29yZGluYXRlc1swXSAqPSBkZWdyZWVzLCBjb29yZGluYXRlc1sxXSAqPSBkZWdyZWVzLCBjb29yZGluYXRlcztcbiAgfVxuXG4gIGZvcndhcmQuaW52ZXJ0ID0gZnVuY3Rpb24oY29vcmRpbmF0ZXMpIHtcbiAgICBjb29yZGluYXRlcyA9IHJvdGF0ZS5pbnZlcnQoY29vcmRpbmF0ZXNbMF0gKiByYWRpYW5zLCBjb29yZGluYXRlc1sxXSAqIHJhZGlhbnMpO1xuICAgIHJldHVybiBjb29yZGluYXRlc1swXSAqPSBkZWdyZWVzLCBjb29yZGluYXRlc1sxXSAqPSBkZWdyZWVzLCBjb29yZGluYXRlcztcbiAgfTtcblxuICByZXR1cm4gZm9yd2FyZDtcbn1cbiIsImltcG9ydCB7Y2FydGVzaWFuLCBjYXJ0ZXNpYW5Ob3JtYWxpemVJblBsYWNlLCBzcGhlcmljYWx9IGZyb20gXCIuL2NhcnRlc2lhbi5qc1wiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50LmpzXCI7XG5pbXBvcnQge2Fjb3MsIGNvcywgZGVncmVlcywgZXBzaWxvbiwgcmFkaWFucywgc2luLCB0YXV9IGZyb20gXCIuL21hdGguanNcIjtcbmltcG9ydCB7cm90YXRlUmFkaWFuc30gZnJvbSBcIi4vcm90YXRpb24uanNcIjtcblxuLy8gR2VuZXJhdGVzIGEgY2lyY2xlIGNlbnRlcmVkIGF0IFswwrAsIDDCsF0sIHdpdGggYSBnaXZlbiByYWRpdXMgYW5kIHByZWNpc2lvbi5cbmV4cG9ydCBmdW5jdGlvbiBjaXJjbGVTdHJlYW0oc3RyZWFtLCByYWRpdXMsIGRlbHRhLCBkaXJlY3Rpb24sIHQwLCB0MSkge1xuICBpZiAoIWRlbHRhKSByZXR1cm47XG4gIHZhciBjb3NSYWRpdXMgPSBjb3MocmFkaXVzKSxcbiAgICAgIHNpblJhZGl1cyA9IHNpbihyYWRpdXMpLFxuICAgICAgc3RlcCA9IGRpcmVjdGlvbiAqIGRlbHRhO1xuICBpZiAodDAgPT0gbnVsbCkge1xuICAgIHQwID0gcmFkaXVzICsgZGlyZWN0aW9uICogdGF1O1xuICAgIHQxID0gcmFkaXVzIC0gc3RlcCAvIDI7XG4gIH0gZWxzZSB7XG4gICAgdDAgPSBjaXJjbGVSYWRpdXMoY29zUmFkaXVzLCB0MCk7XG4gICAgdDEgPSBjaXJjbGVSYWRpdXMoY29zUmFkaXVzLCB0MSk7XG4gICAgaWYgKGRpcmVjdGlvbiA+IDAgPyB0MCA8IHQxIDogdDAgPiB0MSkgdDAgKz0gZGlyZWN0aW9uICogdGF1O1xuICB9XG4gIGZvciAodmFyIHBvaW50LCB0ID0gdDA7IGRpcmVjdGlvbiA+IDAgPyB0ID4gdDEgOiB0IDwgdDE7IHQgLT0gc3RlcCkge1xuICAgIHBvaW50ID0gc3BoZXJpY2FsKFtjb3NSYWRpdXMsIC1zaW5SYWRpdXMgKiBjb3ModCksIC1zaW5SYWRpdXMgKiBzaW4odCldKTtcbiAgICBzdHJlYW0ucG9pbnQocG9pbnRbMF0sIHBvaW50WzFdKTtcbiAgfVxufVxuXG4vLyBSZXR1cm5zIHRoZSBzaWduZWQgYW5nbGUgb2YgYSBjYXJ0ZXNpYW4gcG9pbnQgcmVsYXRpdmUgdG8gW2Nvc1JhZGl1cywgMCwgMF0uXG5mdW5jdGlvbiBjaXJjbGVSYWRpdXMoY29zUmFkaXVzLCBwb2ludCkge1xuICBwb2ludCA9IGNhcnRlc2lhbihwb2ludCksIHBvaW50WzBdIC09IGNvc1JhZGl1cztcbiAgY2FydGVzaWFuTm9ybWFsaXplSW5QbGFjZShwb2ludCk7XG4gIHZhciByYWRpdXMgPSBhY29zKC1wb2ludFsxXSk7XG4gIHJldHVybiAoKC1wb2ludFsyXSA8IDAgPyAtcmFkaXVzIDogcmFkaXVzKSArIHRhdSAtIGVwc2lsb24pICUgdGF1O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGNlbnRlciA9IGNvbnN0YW50KFswLCAwXSksXG4gICAgICByYWRpdXMgPSBjb25zdGFudCg5MCksXG4gICAgICBwcmVjaXNpb24gPSBjb25zdGFudCg2KSxcbiAgICAgIHJpbmcsXG4gICAgICByb3RhdGUsXG4gICAgICBzdHJlYW0gPSB7cG9pbnQ6IHBvaW50fTtcblxuICBmdW5jdGlvbiBwb2ludCh4LCB5KSB7XG4gICAgcmluZy5wdXNoKHggPSByb3RhdGUoeCwgeSkpO1xuICAgIHhbMF0gKj0gZGVncmVlcywgeFsxXSAqPSBkZWdyZWVzO1xuICB9XG5cbiAgZnVuY3Rpb24gY2lyY2xlKCkge1xuICAgIHZhciBjID0gY2VudGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksXG4gICAgICAgIHIgPSByYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSAqIHJhZGlhbnMsXG4gICAgICAgIHAgPSBwcmVjaXNpb24uYXBwbHkodGhpcywgYXJndW1lbnRzKSAqIHJhZGlhbnM7XG4gICAgcmluZyA9IFtdO1xuICAgIHJvdGF0ZSA9IHJvdGF0ZVJhZGlhbnMoLWNbMF0gKiByYWRpYW5zLCAtY1sxXSAqIHJhZGlhbnMsIDApLmludmVydDtcbiAgICBjaXJjbGVTdHJlYW0oc3RyZWFtLCByLCBwLCAxKTtcbiAgICBjID0ge3R5cGU6IFwiUG9seWdvblwiLCBjb29yZGluYXRlczogW3JpbmddfTtcbiAgICByaW5nID0gcm90YXRlID0gbnVsbDtcbiAgICByZXR1cm4gYztcbiAgfVxuXG4gIGNpcmNsZS5jZW50ZXIgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY2VudGVyID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChbK19bMF0sICtfWzFdXSksIGNpcmNsZSkgOiBjZW50ZXI7XG4gIH07XG5cbiAgY2lyY2xlLnJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyYWRpdXMgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgY2lyY2xlKSA6IHJhZGl1cztcbiAgfTtcblxuICBjaXJjbGUucHJlY2lzaW9uID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHByZWNpc2lvbiA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBjaXJjbGUpIDogcHJlY2lzaW9uO1xuICB9O1xuXG4gIHJldHVybiBjaXJjbGU7XG59XG4iLCJpbXBvcnQgbm9vcCBmcm9tIFwiLi4vbm9vcC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGxpbmVzID0gW10sXG4gICAgICBsaW5lO1xuICByZXR1cm4ge1xuICAgIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgICBsaW5lLnB1c2goW3gsIHldKTtcbiAgICB9LFxuICAgIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICBsaW5lcy5wdXNoKGxpbmUgPSBbXSk7XG4gICAgfSxcbiAgICBsaW5lRW5kOiBub29wLFxuICAgIHJlam9pbjogZnVuY3Rpb24oKSB7XG4gICAgICBpZiAobGluZXMubGVuZ3RoID4gMSkgbGluZXMucHVzaChsaW5lcy5wb3AoKS5jb25jYXQobGluZXMuc2hpZnQoKSkpO1xuICAgIH0sXG4gICAgcmVzdWx0OiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciByZXN1bHQgPSBsaW5lcztcbiAgICAgIGxpbmVzID0gW107XG4gICAgICBsaW5lID0gbnVsbDtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICB9O1xufVxuIiwiaW1wb3J0IHthYnMsIGVwc2lsb259IGZyb20gXCIuL21hdGguanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICByZXR1cm4gYWJzKGFbMF0gLSBiWzBdKSA8IGVwc2lsb24gJiYgYWJzKGFbMV0gLSBiWzFdKSA8IGVwc2lsb247XG59XG4iLCJpbXBvcnQgcG9pbnRFcXVhbCBmcm9tIFwiLi4vcG9pbnRFcXVhbC5qc1wiO1xuXG5mdW5jdGlvbiBJbnRlcnNlY3Rpb24ocG9pbnQsIHBvaW50cywgb3RoZXIsIGVudHJ5KSB7XG4gIHRoaXMueCA9IHBvaW50O1xuICB0aGlzLnogPSBwb2ludHM7XG4gIHRoaXMubyA9IG90aGVyOyAvLyBhbm90aGVyIGludGVyc2VjdGlvblxuICB0aGlzLmUgPSBlbnRyeTsgLy8gaXMgYW4gZW50cnk/XG4gIHRoaXMudiA9IGZhbHNlOyAvLyB2aXNpdGVkXG4gIHRoaXMubiA9IHRoaXMucCA9IG51bGw7IC8vIG5leHQgJiBwcmV2aW91c1xufVxuXG4vLyBBIGdlbmVyYWxpemVkIHBvbHlnb24gY2xpcHBpbmcgYWxnb3JpdGhtOiBnaXZlbiBhIHBvbHlnb24gdGhhdCBoYXMgYmVlbiBjdXRcbi8vIGludG8gaXRzIHZpc2libGUgbGluZSBzZWdtZW50cywgYW5kIHJlam9pbnMgdGhlIHNlZ21lbnRzIGJ5IGludGVycG9sYXRpbmdcbi8vIGFsb25nIHRoZSBjbGlwIGVkZ2UuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWdtZW50cywgY29tcGFyZUludGVyc2VjdGlvbiwgc3RhcnRJbnNpZGUsIGludGVycG9sYXRlLCBzdHJlYW0pIHtcbiAgdmFyIHN1YmplY3QgPSBbXSxcbiAgICAgIGNsaXAgPSBbXSxcbiAgICAgIGksXG4gICAgICBuO1xuXG4gIHNlZ21lbnRzLmZvckVhY2goZnVuY3Rpb24oc2VnbWVudCkge1xuICAgIGlmICgobiA9IHNlZ21lbnQubGVuZ3RoIC0gMSkgPD0gMCkgcmV0dXJuO1xuICAgIHZhciBuLCBwMCA9IHNlZ21lbnRbMF0sIHAxID0gc2VnbWVudFtuXSwgeDtcblxuICAgIC8vIElmIHRoZSBmaXJzdCBhbmQgbGFzdCBwb2ludHMgb2YgYSBzZWdtZW50IGFyZSBjb2luY2lkZW50LCB0aGVuIHRyZWF0IGFzIGFcbiAgICAvLyBjbG9zZWQgcmluZy4gVE9ETyBpZiBhbGwgcmluZ3MgYXJlIGNsb3NlZCwgdGhlbiB0aGUgd2luZGluZyBvcmRlciBvZiB0aGVcbiAgICAvLyBleHRlcmlvciByaW5nIHNob3VsZCBiZSBjaGVja2VkLlxuICAgIGlmIChwb2ludEVxdWFsKHAwLCBwMSkpIHtcbiAgICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHN0cmVhbS5wb2ludCgocDAgPSBzZWdtZW50W2ldKVswXSwgcDBbMV0pO1xuICAgICAgc3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzdWJqZWN0LnB1c2goeCA9IG5ldyBJbnRlcnNlY3Rpb24ocDAsIHNlZ21lbnQsIG51bGwsIHRydWUpKTtcbiAgICBjbGlwLnB1c2goeC5vID0gbmV3IEludGVyc2VjdGlvbihwMCwgbnVsbCwgeCwgZmFsc2UpKTtcbiAgICBzdWJqZWN0LnB1c2goeCA9IG5ldyBJbnRlcnNlY3Rpb24ocDEsIHNlZ21lbnQsIG51bGwsIGZhbHNlKSk7XG4gICAgY2xpcC5wdXNoKHgubyA9IG5ldyBJbnRlcnNlY3Rpb24ocDEsIG51bGwsIHgsIHRydWUpKTtcbiAgfSk7XG5cbiAgaWYgKCFzdWJqZWN0Lmxlbmd0aCkgcmV0dXJuO1xuXG4gIGNsaXAuc29ydChjb21wYXJlSW50ZXJzZWN0aW9uKTtcbiAgbGluayhzdWJqZWN0KTtcbiAgbGluayhjbGlwKTtcblxuICBmb3IgKGkgPSAwLCBuID0gY2xpcC5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICBjbGlwW2ldLmUgPSBzdGFydEluc2lkZSA9ICFzdGFydEluc2lkZTtcbiAgfVxuXG4gIHZhciBzdGFydCA9IHN1YmplY3RbMF0sXG4gICAgICBwb2ludHMsXG4gICAgICBwb2ludDtcblxuICB3aGlsZSAoMSkge1xuICAgIC8vIEZpbmQgZmlyc3QgdW52aXNpdGVkIGludGVyc2VjdGlvbi5cbiAgICB2YXIgY3VycmVudCA9IHN0YXJ0LFxuICAgICAgICBpc1N1YmplY3QgPSB0cnVlO1xuICAgIHdoaWxlIChjdXJyZW50LnYpIGlmICgoY3VycmVudCA9IGN1cnJlbnQubikgPT09IHN0YXJ0KSByZXR1cm47XG4gICAgcG9pbnRzID0gY3VycmVudC56O1xuICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICBkbyB7XG4gICAgICBjdXJyZW50LnYgPSBjdXJyZW50Lm8udiA9IHRydWU7XG4gICAgICBpZiAoY3VycmVudC5lKSB7XG4gICAgICAgIGlmIChpc1N1YmplY3QpIHtcbiAgICAgICAgICBmb3IgKGkgPSAwLCBuID0gcG9pbnRzLmxlbmd0aDsgaSA8IG47ICsraSkgc3RyZWFtLnBvaW50KChwb2ludCA9IHBvaW50c1tpXSlbMF0sIHBvaW50WzFdKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpbnRlcnBvbGF0ZShjdXJyZW50LngsIGN1cnJlbnQubi54LCAxLCBzdHJlYW0pO1xuICAgICAgICB9XG4gICAgICAgIGN1cnJlbnQgPSBjdXJyZW50Lm47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoaXNTdWJqZWN0KSB7XG4gICAgICAgICAgcG9pbnRzID0gY3VycmVudC5wLno7XG4gICAgICAgICAgZm9yIChpID0gcG9pbnRzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSBzdHJlYW0ucG9pbnQoKHBvaW50ID0gcG9pbnRzW2ldKVswXSwgcG9pbnRbMV0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGludGVycG9sYXRlKGN1cnJlbnQueCwgY3VycmVudC5wLngsIC0xLCBzdHJlYW0pO1xuICAgICAgICB9XG4gICAgICAgIGN1cnJlbnQgPSBjdXJyZW50LnA7XG4gICAgICB9XG4gICAgICBjdXJyZW50ID0gY3VycmVudC5vO1xuICAgICAgcG9pbnRzID0gY3VycmVudC56O1xuICAgICAgaXNTdWJqZWN0ID0gIWlzU3ViamVjdDtcbiAgICB9IHdoaWxlICghY3VycmVudC52KTtcbiAgICBzdHJlYW0ubGluZUVuZCgpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGxpbmsoYXJyYXkpIHtcbiAgaWYgKCEobiA9IGFycmF5Lmxlbmd0aCkpIHJldHVybjtcbiAgdmFyIG4sXG4gICAgICBpID0gMCxcbiAgICAgIGEgPSBhcnJheVswXSxcbiAgICAgIGI7XG4gIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgYS5uID0gYiA9IGFycmF5W2ldO1xuICAgIGIucCA9IGE7XG4gICAgYSA9IGI7XG4gIH1cbiAgYS5uID0gYiA9IGFycmF5WzBdO1xuICBiLnAgPSBhO1xufVxuIiwiaW1wb3J0IGFkZGVyIGZyb20gXCIuL2FkZGVyLmpzXCI7XG5pbXBvcnQge2NhcnRlc2lhbiwgY2FydGVzaWFuQ3Jvc3MsIGNhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2V9IGZyb20gXCIuL2NhcnRlc2lhbi5qc1wiO1xuaW1wb3J0IHthYnMsIGFzaW4sIGF0YW4yLCBjb3MsIGVwc2lsb24sIGhhbGZQaSwgcGksIHF1YXJ0ZXJQaSwgc2lnbiwgc2luLCB0YXV9IGZyb20gXCIuL21hdGguanNcIjtcblxudmFyIHN1bSA9IGFkZGVyKCk7XG5cbmZ1bmN0aW9uIGxvbmdpdHVkZShwb2ludCkge1xuICBpZiAoYWJzKHBvaW50WzBdKSA8PSBwaSlcbiAgICByZXR1cm4gcG9pbnRbMF07XG4gIGVsc2VcbiAgICByZXR1cm4gc2lnbihwb2ludFswXSkgKiAoKGFicyhwb2ludFswXSkgKyBwaSkgJSB0YXUgLSBwaSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHBvbHlnb24sIHBvaW50KSB7XG4gIHZhciBsYW1iZGEgPSBsb25naXR1ZGUocG9pbnQpLFxuICAgICAgcGhpID0gcG9pbnRbMV0sXG4gICAgICBzaW5QaGkgPSBzaW4ocGhpKSxcbiAgICAgIG5vcm1hbCA9IFtzaW4obGFtYmRhKSwgLWNvcyhsYW1iZGEpLCAwXSxcbiAgICAgIGFuZ2xlID0gMCxcbiAgICAgIHdpbmRpbmcgPSAwO1xuXG4gIHN1bS5yZXNldCgpO1xuXG4gIGlmIChzaW5QaGkgPT09IDEpIHBoaSA9IGhhbGZQaSArIGVwc2lsb247XG4gIGVsc2UgaWYgKHNpblBoaSA9PT0gLTEpIHBoaSA9IC1oYWxmUGkgLSBlcHNpbG9uO1xuXG4gIGZvciAodmFyIGkgPSAwLCBuID0gcG9seWdvbi5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICBpZiAoIShtID0gKHJpbmcgPSBwb2x5Z29uW2ldKS5sZW5ndGgpKSBjb250aW51ZTtcbiAgICB2YXIgcmluZyxcbiAgICAgICAgbSxcbiAgICAgICAgcG9pbnQwID0gcmluZ1ttIC0gMV0sXG4gICAgICAgIGxhbWJkYTAgPSBsb25naXR1ZGUocG9pbnQwKSxcbiAgICAgICAgcGhpMCA9IHBvaW50MFsxXSAvIDIgKyBxdWFydGVyUGksXG4gICAgICAgIHNpblBoaTAgPSBzaW4ocGhpMCksXG4gICAgICAgIGNvc1BoaTAgPSBjb3MocGhpMCk7XG5cbiAgICBmb3IgKHZhciBqID0gMDsgaiA8IG07ICsraiwgbGFtYmRhMCA9IGxhbWJkYTEsIHNpblBoaTAgPSBzaW5QaGkxLCBjb3NQaGkwID0gY29zUGhpMSwgcG9pbnQwID0gcG9pbnQxKSB7XG4gICAgICB2YXIgcG9pbnQxID0gcmluZ1tqXSxcbiAgICAgICAgICBsYW1iZGExID0gbG9uZ2l0dWRlKHBvaW50MSksXG4gICAgICAgICAgcGhpMSA9IHBvaW50MVsxXSAvIDIgKyBxdWFydGVyUGksXG4gICAgICAgICAgc2luUGhpMSA9IHNpbihwaGkxKSxcbiAgICAgICAgICBjb3NQaGkxID0gY29zKHBoaTEpLFxuICAgICAgICAgIGRlbHRhID0gbGFtYmRhMSAtIGxhbWJkYTAsXG4gICAgICAgICAgc2lnbiA9IGRlbHRhID49IDAgPyAxIDogLTEsXG4gICAgICAgICAgYWJzRGVsdGEgPSBzaWduICogZGVsdGEsXG4gICAgICAgICAgYW50aW1lcmlkaWFuID0gYWJzRGVsdGEgPiBwaSxcbiAgICAgICAgICBrID0gc2luUGhpMCAqIHNpblBoaTE7XG5cbiAgICAgIHN1bS5hZGQoYXRhbjIoayAqIHNpZ24gKiBzaW4oYWJzRGVsdGEpLCBjb3NQaGkwICogY29zUGhpMSArIGsgKiBjb3MoYWJzRGVsdGEpKSk7XG4gICAgICBhbmdsZSArPSBhbnRpbWVyaWRpYW4gPyBkZWx0YSArIHNpZ24gKiB0YXUgOiBkZWx0YTtcblxuICAgICAgLy8gQXJlIHRoZSBsb25naXR1ZGVzIGVpdGhlciBzaWRlIG9mIHRoZSBwb2ludOKAmXMgbWVyaWRpYW4gKGxhbWJkYSksXG4gICAgICAvLyBhbmQgYXJlIHRoZSBsYXRpdHVkZXMgc21hbGxlciB0aGFuIHRoZSBwYXJhbGxlbCAocGhpKT9cbiAgICAgIGlmIChhbnRpbWVyaWRpYW4gXiBsYW1iZGEwID49IGxhbWJkYSBeIGxhbWJkYTEgPj0gbGFtYmRhKSB7XG4gICAgICAgIHZhciBhcmMgPSBjYXJ0ZXNpYW5Dcm9zcyhjYXJ0ZXNpYW4ocG9pbnQwKSwgY2FydGVzaWFuKHBvaW50MSkpO1xuICAgICAgICBjYXJ0ZXNpYW5Ob3JtYWxpemVJblBsYWNlKGFyYyk7XG4gICAgICAgIHZhciBpbnRlcnNlY3Rpb24gPSBjYXJ0ZXNpYW5Dcm9zcyhub3JtYWwsIGFyYyk7XG4gICAgICAgIGNhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2UoaW50ZXJzZWN0aW9uKTtcbiAgICAgICAgdmFyIHBoaUFyYyA9IChhbnRpbWVyaWRpYW4gXiBkZWx0YSA+PSAwID8gLTEgOiAxKSAqIGFzaW4oaW50ZXJzZWN0aW9uWzJdKTtcbiAgICAgICAgaWYgKHBoaSA+IHBoaUFyYyB8fCBwaGkgPT09IHBoaUFyYyAmJiAoYXJjWzBdIHx8IGFyY1sxXSkpIHtcbiAgICAgICAgICB3aW5kaW5nICs9IGFudGltZXJpZGlhbiBeIGRlbHRhID49IDAgPyAxIDogLTE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBGaXJzdCwgZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIFNvdXRoIHBvbGUgaXMgaW5zaWRlIG9yIG91dHNpZGU6XG4gIC8vXG4gIC8vIEl0IGlzIGluc2lkZSBpZjpcbiAgLy8gKiB0aGUgcG9seWdvbiB3aW5kcyBhcm91bmQgaXQgaW4gYSBjbG9ja3dpc2UgZGlyZWN0aW9uLlxuICAvLyAqIHRoZSBwb2x5Z29uIGRvZXMgbm90IChjdW11bGF0aXZlbHkpIHdpbmQgYXJvdW5kIGl0LCBidXQgaGFzIGEgbmVnYXRpdmVcbiAgLy8gICAoY291bnRlci1jbG9ja3dpc2UpIGFyZWEuXG4gIC8vXG4gIC8vIFNlY29uZCwgY291bnQgdGhlIChzaWduZWQpIG51bWJlciBvZiB0aW1lcyBhIHNlZ21lbnQgY3Jvc3NlcyBhIGxhbWJkYVxuICAvLyBmcm9tIHRoZSBwb2ludCB0byB0aGUgU291dGggcG9sZS4gIElmIGl0IGlzIHplcm8sIHRoZW4gdGhlIHBvaW50IGlzIHRoZVxuICAvLyBzYW1lIHNpZGUgYXMgdGhlIFNvdXRoIHBvbGUuXG5cbiAgcmV0dXJuIChhbmdsZSA8IC1lcHNpbG9uIHx8IGFuZ2xlIDwgZXBzaWxvbiAmJiBzdW0gPCAtZXBzaWxvbikgXiAod2luZGluZyAmIDEpO1xufVxuIiwiaW1wb3J0IGNsaXBCdWZmZXIgZnJvbSBcIi4vYnVmZmVyLmpzXCI7XG5pbXBvcnQgY2xpcFJlam9pbiBmcm9tIFwiLi9yZWpvaW4uanNcIjtcbmltcG9ydCB7ZXBzaWxvbiwgaGFsZlBpfSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuaW1wb3J0IHBvbHlnb25Db250YWlucyBmcm9tIFwiLi4vcG9seWdvbkNvbnRhaW5zLmpzXCI7XG5pbXBvcnQge21lcmdlfSBmcm9tIFwiZDMtYXJyYXlcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocG9pbnRWaXNpYmxlLCBjbGlwTGluZSwgaW50ZXJwb2xhdGUsIHN0YXJ0KSB7XG4gIHJldHVybiBmdW5jdGlvbihzaW5rKSB7XG4gICAgdmFyIGxpbmUgPSBjbGlwTGluZShzaW5rKSxcbiAgICAgICAgcmluZ0J1ZmZlciA9IGNsaXBCdWZmZXIoKSxcbiAgICAgICAgcmluZ1NpbmsgPSBjbGlwTGluZShyaW5nQnVmZmVyKSxcbiAgICAgICAgcG9seWdvblN0YXJ0ZWQgPSBmYWxzZSxcbiAgICAgICAgcG9seWdvbixcbiAgICAgICAgc2VnbWVudHMsXG4gICAgICAgIHJpbmc7XG5cbiAgICB2YXIgY2xpcCA9IHtcbiAgICAgIHBvaW50OiBwb2ludCxcbiAgICAgIGxpbmVTdGFydDogbGluZVN0YXJ0LFxuICAgICAgbGluZUVuZDogbGluZUVuZCxcbiAgICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGNsaXAucG9pbnQgPSBwb2ludFJpbmc7XG4gICAgICAgIGNsaXAubGluZVN0YXJ0ID0gcmluZ1N0YXJ0O1xuICAgICAgICBjbGlwLmxpbmVFbmQgPSByaW5nRW5kO1xuICAgICAgICBzZWdtZW50cyA9IFtdO1xuICAgICAgICBwb2x5Z29uID0gW107XG4gICAgICB9LFxuICAgICAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGNsaXAucG9pbnQgPSBwb2ludDtcbiAgICAgICAgY2xpcC5saW5lU3RhcnQgPSBsaW5lU3RhcnQ7XG4gICAgICAgIGNsaXAubGluZUVuZCA9IGxpbmVFbmQ7XG4gICAgICAgIHNlZ21lbnRzID0gbWVyZ2Uoc2VnbWVudHMpO1xuICAgICAgICB2YXIgc3RhcnRJbnNpZGUgPSBwb2x5Z29uQ29udGFpbnMocG9seWdvbiwgc3RhcnQpO1xuICAgICAgICBpZiAoc2VnbWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgaWYgKCFwb2x5Z29uU3RhcnRlZCkgc2luay5wb2x5Z29uU3RhcnQoKSwgcG9seWdvblN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgICAgIGNsaXBSZWpvaW4oc2VnbWVudHMsIGNvbXBhcmVJbnRlcnNlY3Rpb24sIHN0YXJ0SW5zaWRlLCBpbnRlcnBvbGF0ZSwgc2luayk7XG4gICAgICAgIH0gZWxzZSBpZiAoc3RhcnRJbnNpZGUpIHtcbiAgICAgICAgICBpZiAoIXBvbHlnb25TdGFydGVkKSBzaW5rLnBvbHlnb25TdGFydCgpLCBwb2x5Z29uU3RhcnRlZCA9IHRydWU7XG4gICAgICAgICAgc2luay5saW5lU3RhcnQoKTtcbiAgICAgICAgICBpbnRlcnBvbGF0ZShudWxsLCBudWxsLCAxLCBzaW5rKTtcbiAgICAgICAgICBzaW5rLmxpbmVFbmQoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocG9seWdvblN0YXJ0ZWQpIHNpbmsucG9seWdvbkVuZCgpLCBwb2x5Z29uU3RhcnRlZCA9IGZhbHNlO1xuICAgICAgICBzZWdtZW50cyA9IHBvbHlnb24gPSBudWxsO1xuICAgICAgfSxcbiAgICAgIHNwaGVyZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHNpbmsucG9seWdvblN0YXJ0KCk7XG4gICAgICAgIHNpbmsubGluZVN0YXJ0KCk7XG4gICAgICAgIGludGVycG9sYXRlKG51bGwsIG51bGwsIDEsIHNpbmspO1xuICAgICAgICBzaW5rLmxpbmVFbmQoKTtcbiAgICAgICAgc2luay5wb2x5Z29uRW5kKCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIHBvaW50KGxhbWJkYSwgcGhpKSB7XG4gICAgICBpZiAocG9pbnRWaXNpYmxlKGxhbWJkYSwgcGhpKSkgc2luay5wb2ludChsYW1iZGEsIHBoaSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcG9pbnRMaW5lKGxhbWJkYSwgcGhpKSB7XG4gICAgICBsaW5lLnBvaW50KGxhbWJkYSwgcGhpKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBsaW5lU3RhcnQoKSB7XG4gICAgICBjbGlwLnBvaW50ID0gcG9pbnRMaW5lO1xuICAgICAgbGluZS5saW5lU3RhcnQoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBsaW5lRW5kKCkge1xuICAgICAgY2xpcC5wb2ludCA9IHBvaW50O1xuICAgICAgbGluZS5saW5lRW5kKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcG9pbnRSaW5nKGxhbWJkYSwgcGhpKSB7XG4gICAgICByaW5nLnB1c2goW2xhbWJkYSwgcGhpXSk7XG4gICAgICByaW5nU2luay5wb2ludChsYW1iZGEsIHBoaSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmluZ1N0YXJ0KCkge1xuICAgICAgcmluZ1NpbmsubGluZVN0YXJ0KCk7XG4gICAgICByaW5nID0gW107XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmluZ0VuZCgpIHtcbiAgICAgIHBvaW50UmluZyhyaW5nWzBdWzBdLCByaW5nWzBdWzFdKTtcbiAgICAgIHJpbmdTaW5rLmxpbmVFbmQoKTtcblxuICAgICAgdmFyIGNsZWFuID0gcmluZ1NpbmsuY2xlYW4oKSxcbiAgICAgICAgICByaW5nU2VnbWVudHMgPSByaW5nQnVmZmVyLnJlc3VsdCgpLFxuICAgICAgICAgIGksIG4gPSByaW5nU2VnbWVudHMubGVuZ3RoLCBtLFxuICAgICAgICAgIHNlZ21lbnQsXG4gICAgICAgICAgcG9pbnQ7XG5cbiAgICAgIHJpbmcucG9wKCk7XG4gICAgICBwb2x5Z29uLnB1c2gocmluZyk7XG4gICAgICByaW5nID0gbnVsbDtcblxuICAgICAgaWYgKCFuKSByZXR1cm47XG5cbiAgICAgIC8vIE5vIGludGVyc2VjdGlvbnMuXG4gICAgICBpZiAoY2xlYW4gJiAxKSB7XG4gICAgICAgIHNlZ21lbnQgPSByaW5nU2VnbWVudHNbMF07XG4gICAgICAgIGlmICgobSA9IHNlZ21lbnQubGVuZ3RoIC0gMSkgPiAwKSB7XG4gICAgICAgICAgaWYgKCFwb2x5Z29uU3RhcnRlZCkgc2luay5wb2x5Z29uU3RhcnQoKSwgcG9seWdvblN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgICAgIHNpbmsubGluZVN0YXJ0KCk7XG4gICAgICAgICAgZm9yIChpID0gMDsgaSA8IG07ICsraSkgc2luay5wb2ludCgocG9pbnQgPSBzZWdtZW50W2ldKVswXSwgcG9pbnRbMV0pO1xuICAgICAgICAgIHNpbmsubGluZUVuZCgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gUmVqb2luIGNvbm5lY3RlZCBzZWdtZW50cy5cbiAgICAgIC8vIFRPRE8gcmV1c2UgcmluZ0J1ZmZlci5yZWpvaW4oKT9cbiAgICAgIGlmIChuID4gMSAmJiBjbGVhbiAmIDIpIHJpbmdTZWdtZW50cy5wdXNoKHJpbmdTZWdtZW50cy5wb3AoKS5jb25jYXQocmluZ1NlZ21lbnRzLnNoaWZ0KCkpKTtcblxuICAgICAgc2VnbWVudHMucHVzaChyaW5nU2VnbWVudHMuZmlsdGVyKHZhbGlkU2VnbWVudCkpO1xuICAgIH1cblxuICAgIHJldHVybiBjbGlwO1xuICB9O1xufVxuXG5mdW5jdGlvbiB2YWxpZFNlZ21lbnQoc2VnbWVudCkge1xuICByZXR1cm4gc2VnbWVudC5sZW5ndGggPiAxO1xufVxuXG4vLyBJbnRlcnNlY3Rpb25zIGFyZSBzb3J0ZWQgYWxvbmcgdGhlIGNsaXAgZWRnZS4gRm9yIGJvdGggYW50aW1lcmlkaWFuIGN1dHRpbmdcbi8vIGFuZCBjaXJjbGUgY2xpcHBpbmcsIHRoZSBzYW1lIGNvbXBhcmlzb24gaXMgdXNlZC5cbmZ1bmN0aW9uIGNvbXBhcmVJbnRlcnNlY3Rpb24oYSwgYikge1xuICByZXR1cm4gKChhID0gYS54KVswXSA8IDAgPyBhWzFdIC0gaGFsZlBpIC0gZXBzaWxvbiA6IGhhbGZQaSAtIGFbMV0pXG4gICAgICAgLSAoKGIgPSBiLngpWzBdIDwgMCA/IGJbMV0gLSBoYWxmUGkgLSBlcHNpbG9uIDogaGFsZlBpIC0gYlsxXSk7XG59XG4iLCJpbXBvcnQgY2xpcCBmcm9tIFwiLi9pbmRleC5qc1wiO1xuaW1wb3J0IHthYnMsIGF0YW4sIGNvcywgZXBzaWxvbiwgaGFsZlBpLCBwaSwgc2lufSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGlwKFxuICBmdW5jdGlvbigpIHsgcmV0dXJuIHRydWU7IH0sXG4gIGNsaXBBbnRpbWVyaWRpYW5MaW5lLFxuICBjbGlwQW50aW1lcmlkaWFuSW50ZXJwb2xhdGUsXG4gIFstcGksIC1oYWxmUGldXG4pO1xuXG4vLyBUYWtlcyBhIGxpbmUgYW5kIGN1dHMgaW50byB2aXNpYmxlIHNlZ21lbnRzLiBSZXR1cm4gdmFsdWVzOiAwIC0gdGhlcmUgd2VyZVxuLy8gaW50ZXJzZWN0aW9ucyBvciB0aGUgbGluZSB3YXMgZW1wdHk7IDEgLSBubyBpbnRlcnNlY3Rpb25zOyAyIC0gdGhlcmUgd2VyZVxuLy8gaW50ZXJzZWN0aW9ucywgYW5kIHRoZSBmaXJzdCBhbmQgbGFzdCBzZWdtZW50cyBzaG91bGQgYmUgcmVqb2luZWQuXG5mdW5jdGlvbiBjbGlwQW50aW1lcmlkaWFuTGluZShzdHJlYW0pIHtcbiAgdmFyIGxhbWJkYTAgPSBOYU4sXG4gICAgICBwaGkwID0gTmFOLFxuICAgICAgc2lnbjAgPSBOYU4sXG4gICAgICBjbGVhbjsgLy8gbm8gaW50ZXJzZWN0aW9uc1xuXG4gIHJldHVybiB7XG4gICAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgIGNsZWFuID0gMTtcbiAgICB9LFxuICAgIHBvaW50OiBmdW5jdGlvbihsYW1iZGExLCBwaGkxKSB7XG4gICAgICB2YXIgc2lnbjEgPSBsYW1iZGExID4gMCA/IHBpIDogLXBpLFxuICAgICAgICAgIGRlbHRhID0gYWJzKGxhbWJkYTEgLSBsYW1iZGEwKTtcbiAgICAgIGlmIChhYnMoZGVsdGEgLSBwaSkgPCBlcHNpbG9uKSB7IC8vIGxpbmUgY3Jvc3NlcyBhIHBvbGVcbiAgICAgICAgc3RyZWFtLnBvaW50KGxhbWJkYTAsIHBoaTAgPSAocGhpMCArIHBoaTEpIC8gMiA+IDAgPyBoYWxmUGkgOiAtaGFsZlBpKTtcbiAgICAgICAgc3RyZWFtLnBvaW50KHNpZ24wLCBwaGkwKTtcbiAgICAgICAgc3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgICAgc3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgICBzdHJlYW0ucG9pbnQoc2lnbjEsIHBoaTApO1xuICAgICAgICBzdHJlYW0ucG9pbnQobGFtYmRhMSwgcGhpMCk7XG4gICAgICAgIGNsZWFuID0gMDtcbiAgICAgIH0gZWxzZSBpZiAoc2lnbjAgIT09IHNpZ24xICYmIGRlbHRhID49IHBpKSB7IC8vIGxpbmUgY3Jvc3NlcyBhbnRpbWVyaWRpYW5cbiAgICAgICAgaWYgKGFicyhsYW1iZGEwIC0gc2lnbjApIDwgZXBzaWxvbikgbGFtYmRhMCAtPSBzaWduMCAqIGVwc2lsb247IC8vIGhhbmRsZSBkZWdlbmVyYWNpZXNcbiAgICAgICAgaWYgKGFicyhsYW1iZGExIC0gc2lnbjEpIDwgZXBzaWxvbikgbGFtYmRhMSAtPSBzaWduMSAqIGVwc2lsb247XG4gICAgICAgIHBoaTAgPSBjbGlwQW50aW1lcmlkaWFuSW50ZXJzZWN0KGxhbWJkYTAsIHBoaTAsIGxhbWJkYTEsIHBoaTEpO1xuICAgICAgICBzdHJlYW0ucG9pbnQoc2lnbjAsIHBoaTApO1xuICAgICAgICBzdHJlYW0ubGluZUVuZCgpO1xuICAgICAgICBzdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgIHN0cmVhbS5wb2ludChzaWduMSwgcGhpMCk7XG4gICAgICAgIGNsZWFuID0gMDtcbiAgICAgIH1cbiAgICAgIHN0cmVhbS5wb2ludChsYW1iZGEwID0gbGFtYmRhMSwgcGhpMCA9IHBoaTEpO1xuICAgICAgc2lnbjAgPSBzaWduMTtcbiAgICB9LFxuICAgIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgc3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgIGxhbWJkYTAgPSBwaGkwID0gTmFOO1xuICAgIH0sXG4gICAgY2xlYW46IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIDIgLSBjbGVhbjsgLy8gaWYgaW50ZXJzZWN0aW9ucywgcmVqb2luIGZpcnN0IGFuZCBsYXN0IHNlZ21lbnRzXG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBjbGlwQW50aW1lcmlkaWFuSW50ZXJzZWN0KGxhbWJkYTAsIHBoaTAsIGxhbWJkYTEsIHBoaTEpIHtcbiAgdmFyIGNvc1BoaTAsXG4gICAgICBjb3NQaGkxLFxuICAgICAgc2luTGFtYmRhMExhbWJkYTEgPSBzaW4obGFtYmRhMCAtIGxhbWJkYTEpO1xuICByZXR1cm4gYWJzKHNpbkxhbWJkYTBMYW1iZGExKSA+IGVwc2lsb25cbiAgICAgID8gYXRhbigoc2luKHBoaTApICogKGNvc1BoaTEgPSBjb3MocGhpMSkpICogc2luKGxhbWJkYTEpXG4gICAgICAgICAgLSBzaW4ocGhpMSkgKiAoY29zUGhpMCA9IGNvcyhwaGkwKSkgKiBzaW4obGFtYmRhMCkpXG4gICAgICAgICAgLyAoY29zUGhpMCAqIGNvc1BoaTEgKiBzaW5MYW1iZGEwTGFtYmRhMSkpXG4gICAgICA6IChwaGkwICsgcGhpMSkgLyAyO1xufVxuXG5mdW5jdGlvbiBjbGlwQW50aW1lcmlkaWFuSW50ZXJwb2xhdGUoZnJvbSwgdG8sIGRpcmVjdGlvbiwgc3RyZWFtKSB7XG4gIHZhciBwaGk7XG4gIGlmIChmcm9tID09IG51bGwpIHtcbiAgICBwaGkgPSBkaXJlY3Rpb24gKiBoYWxmUGk7XG4gICAgc3RyZWFtLnBvaW50KC1waSwgcGhpKTtcbiAgICBzdHJlYW0ucG9pbnQoMCwgcGhpKTtcbiAgICBzdHJlYW0ucG9pbnQocGksIHBoaSk7XG4gICAgc3RyZWFtLnBvaW50KHBpLCAwKTtcbiAgICBzdHJlYW0ucG9pbnQocGksIC1waGkpO1xuICAgIHN0cmVhbS5wb2ludCgwLCAtcGhpKTtcbiAgICBzdHJlYW0ucG9pbnQoLXBpLCAtcGhpKTtcbiAgICBzdHJlYW0ucG9pbnQoLXBpLCAwKTtcbiAgICBzdHJlYW0ucG9pbnQoLXBpLCBwaGkpO1xuICB9IGVsc2UgaWYgKGFicyhmcm9tWzBdIC0gdG9bMF0pID4gZXBzaWxvbikge1xuICAgIHZhciBsYW1iZGEgPSBmcm9tWzBdIDwgdG9bMF0gPyBwaSA6IC1waTtcbiAgICBwaGkgPSBkaXJlY3Rpb24gKiBsYW1iZGEgLyAyO1xuICAgIHN0cmVhbS5wb2ludCgtbGFtYmRhLCBwaGkpO1xuICAgIHN0cmVhbS5wb2ludCgwLCBwaGkpO1xuICAgIHN0cmVhbS5wb2ludChsYW1iZGEsIHBoaSk7XG4gIH0gZWxzZSB7XG4gICAgc3RyZWFtLnBvaW50KHRvWzBdLCB0b1sxXSk7XG4gIH1cbn1cbiIsImltcG9ydCB7Y2FydGVzaWFuLCBjYXJ0ZXNpYW5BZGRJblBsYWNlLCBjYXJ0ZXNpYW5Dcm9zcywgY2FydGVzaWFuRG90LCBjYXJ0ZXNpYW5TY2FsZSwgc3BoZXJpY2FsfSBmcm9tIFwiLi4vY2FydGVzaWFuLmpzXCI7XG5pbXBvcnQge2NpcmNsZVN0cmVhbX0gZnJvbSBcIi4uL2NpcmNsZS5qc1wiO1xuaW1wb3J0IHthYnMsIGNvcywgZXBzaWxvbiwgcGksIHJhZGlhbnMsIHNxcnR9IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5pbXBvcnQgcG9pbnRFcXVhbCBmcm9tIFwiLi4vcG9pbnRFcXVhbC5qc1wiO1xuaW1wb3J0IGNsaXAgZnJvbSBcIi4vaW5kZXguanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocmFkaXVzKSB7XG4gIHZhciBjciA9IGNvcyhyYWRpdXMpLFxuICAgICAgZGVsdGEgPSA2ICogcmFkaWFucyxcbiAgICAgIHNtYWxsUmFkaXVzID0gY3IgPiAwLFxuICAgICAgbm90SGVtaXNwaGVyZSA9IGFicyhjcikgPiBlcHNpbG9uOyAvLyBUT0RPIG9wdGltaXNlIGZvciB0aGlzIGNvbW1vbiBjYXNlXG5cbiAgZnVuY3Rpb24gaW50ZXJwb2xhdGUoZnJvbSwgdG8sIGRpcmVjdGlvbiwgc3RyZWFtKSB7XG4gICAgY2lyY2xlU3RyZWFtKHN0cmVhbSwgcmFkaXVzLCBkZWx0YSwgZGlyZWN0aW9uLCBmcm9tLCB0byk7XG4gIH1cblxuICBmdW5jdGlvbiB2aXNpYmxlKGxhbWJkYSwgcGhpKSB7XG4gICAgcmV0dXJuIGNvcyhsYW1iZGEpICogY29zKHBoaSkgPiBjcjtcbiAgfVxuXG4gIC8vIFRha2VzIGEgbGluZSBhbmQgY3V0cyBpbnRvIHZpc2libGUgc2VnbWVudHMuIFJldHVybiB2YWx1ZXMgdXNlZCBmb3IgcG9seWdvblxuICAvLyBjbGlwcGluZzogMCAtIHRoZXJlIHdlcmUgaW50ZXJzZWN0aW9ucyBvciB0aGUgbGluZSB3YXMgZW1wdHk7IDEgLSBub1xuICAvLyBpbnRlcnNlY3Rpb25zIDIgLSB0aGVyZSB3ZXJlIGludGVyc2VjdGlvbnMsIGFuZCB0aGUgZmlyc3QgYW5kIGxhc3Qgc2VnbWVudHNcbiAgLy8gc2hvdWxkIGJlIHJlam9pbmVkLlxuICBmdW5jdGlvbiBjbGlwTGluZShzdHJlYW0pIHtcbiAgICB2YXIgcG9pbnQwLCAvLyBwcmV2aW91cyBwb2ludFxuICAgICAgICBjMCwgLy8gY29kZSBmb3IgcHJldmlvdXMgcG9pbnRcbiAgICAgICAgdjAsIC8vIHZpc2liaWxpdHkgb2YgcHJldmlvdXMgcG9pbnRcbiAgICAgICAgdjAwLCAvLyB2aXNpYmlsaXR5IG9mIGZpcnN0IHBvaW50XG4gICAgICAgIGNsZWFuOyAvLyBubyBpbnRlcnNlY3Rpb25zXG4gICAgcmV0dXJuIHtcbiAgICAgIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHYwMCA9IHYwID0gZmFsc2U7XG4gICAgICAgIGNsZWFuID0gMTtcbiAgICAgIH0sXG4gICAgICBwb2ludDogZnVuY3Rpb24obGFtYmRhLCBwaGkpIHtcbiAgICAgICAgdmFyIHBvaW50MSA9IFtsYW1iZGEsIHBoaV0sXG4gICAgICAgICAgICBwb2ludDIsXG4gICAgICAgICAgICB2ID0gdmlzaWJsZShsYW1iZGEsIHBoaSksXG4gICAgICAgICAgICBjID0gc21hbGxSYWRpdXNcbiAgICAgICAgICAgICAgPyB2ID8gMCA6IGNvZGUobGFtYmRhLCBwaGkpXG4gICAgICAgICAgICAgIDogdiA/IGNvZGUobGFtYmRhICsgKGxhbWJkYSA8IDAgPyBwaSA6IC1waSksIHBoaSkgOiAwO1xuICAgICAgICBpZiAoIXBvaW50MCAmJiAodjAwID0gdjAgPSB2KSkgc3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgICAvLyBIYW5kbGUgZGVnZW5lcmFjaWVzLlxuICAgICAgICAvLyBUT0RPIGlnbm9yZSBpZiBub3QgY2xpcHBpbmcgcG9seWdvbnMuXG4gICAgICAgIGlmICh2ICE9PSB2MCkge1xuICAgICAgICAgIHBvaW50MiA9IGludGVyc2VjdChwb2ludDAsIHBvaW50MSk7XG4gICAgICAgICAgaWYgKCFwb2ludDIgfHwgcG9pbnRFcXVhbChwb2ludDAsIHBvaW50MikgfHwgcG9pbnRFcXVhbChwb2ludDEsIHBvaW50MikpIHtcbiAgICAgICAgICAgIHBvaW50MVswXSArPSBlcHNpbG9uO1xuICAgICAgICAgICAgcG9pbnQxWzFdICs9IGVwc2lsb247XG4gICAgICAgICAgICB2ID0gdmlzaWJsZShwb2ludDFbMF0sIHBvaW50MVsxXSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh2ICE9PSB2MCkge1xuICAgICAgICAgIGNsZWFuID0gMDtcbiAgICAgICAgICBpZiAodikge1xuICAgICAgICAgICAgLy8gb3V0c2lkZSBnb2luZyBpblxuICAgICAgICAgICAgc3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgICAgICAgcG9pbnQyID0gaW50ZXJzZWN0KHBvaW50MSwgcG9pbnQwKTtcbiAgICAgICAgICAgIHN0cmVhbS5wb2ludChwb2ludDJbMF0sIHBvaW50MlsxXSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIGluc2lkZSBnb2luZyBvdXRcbiAgICAgICAgICAgIHBvaW50MiA9IGludGVyc2VjdChwb2ludDAsIHBvaW50MSk7XG4gICAgICAgICAgICBzdHJlYW0ucG9pbnQocG9pbnQyWzBdLCBwb2ludDJbMV0pO1xuICAgICAgICAgICAgc3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcG9pbnQwID0gcG9pbnQyO1xuICAgICAgICB9IGVsc2UgaWYgKG5vdEhlbWlzcGhlcmUgJiYgcG9pbnQwICYmIHNtYWxsUmFkaXVzIF4gdikge1xuICAgICAgICAgIHZhciB0O1xuICAgICAgICAgIC8vIElmIHRoZSBjb2RlcyBmb3IgdHdvIHBvaW50cyBhcmUgZGlmZmVyZW50LCBvciBhcmUgYm90aCB6ZXJvLFxuICAgICAgICAgIC8vIGFuZCB0aGVyZSB0aGlzIHNlZ21lbnQgaW50ZXJzZWN0cyB3aXRoIHRoZSBzbWFsbCBjaXJjbGUuXG4gICAgICAgICAgaWYgKCEoYyAmIGMwKSAmJiAodCA9IGludGVyc2VjdChwb2ludDEsIHBvaW50MCwgdHJ1ZSkpKSB7XG4gICAgICAgICAgICBjbGVhbiA9IDA7XG4gICAgICAgICAgICBpZiAoc21hbGxSYWRpdXMpIHtcbiAgICAgICAgICAgICAgc3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgICAgICAgICBzdHJlYW0ucG9pbnQodFswXVswXSwgdFswXVsxXSk7XG4gICAgICAgICAgICAgIHN0cmVhbS5wb2ludCh0WzFdWzBdLCB0WzFdWzFdKTtcbiAgICAgICAgICAgICAgc3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHN0cmVhbS5wb2ludCh0WzFdWzBdLCB0WzFdWzFdKTtcbiAgICAgICAgICAgICAgc3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgICAgICAgICAgc3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgICAgICAgICBzdHJlYW0ucG9pbnQodFswXVswXSwgdFswXVsxXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh2ICYmICghcG9pbnQwIHx8ICFwb2ludEVxdWFsKHBvaW50MCwgcG9pbnQxKSkpIHtcbiAgICAgICAgICBzdHJlYW0ucG9pbnQocG9pbnQxWzBdLCBwb2ludDFbMV0pO1xuICAgICAgICB9XG4gICAgICAgIHBvaW50MCA9IHBvaW50MSwgdjAgPSB2LCBjMCA9IGM7XG4gICAgICB9LFxuICAgICAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICh2MCkgc3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgICAgcG9pbnQwID0gbnVsbDtcbiAgICAgIH0sXG4gICAgICAvLyBSZWpvaW4gZmlyc3QgYW5kIGxhc3Qgc2VnbWVudHMgaWYgdGhlcmUgd2VyZSBpbnRlcnNlY3Rpb25zIGFuZCB0aGUgZmlyc3RcbiAgICAgIC8vIGFuZCBsYXN0IHBvaW50cyB3ZXJlIHZpc2libGUuXG4gICAgICBjbGVhbjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBjbGVhbiB8ICgodjAwICYmIHYwKSA8PCAxKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgLy8gSW50ZXJzZWN0cyB0aGUgZ3JlYXQgY2lyY2xlIGJldHdlZW4gYSBhbmQgYiB3aXRoIHRoZSBjbGlwIGNpcmNsZS5cbiAgZnVuY3Rpb24gaW50ZXJzZWN0KGEsIGIsIHR3bykge1xuICAgIHZhciBwYSA9IGNhcnRlc2lhbihhKSxcbiAgICAgICAgcGIgPSBjYXJ0ZXNpYW4oYik7XG5cbiAgICAvLyBXZSBoYXZlIHR3byBwbGFuZXMsIG4xLnAgPSBkMSBhbmQgbjIucCA9IGQyLlxuICAgIC8vIEZpbmQgaW50ZXJzZWN0aW9uIGxpbmUgcCh0KSA9IGMxIG4xICsgYzIgbjIgKyB0IChuMSDiqK8gbjIpLlxuICAgIHZhciBuMSA9IFsxLCAwLCAwXSwgLy8gbm9ybWFsXG4gICAgICAgIG4yID0gY2FydGVzaWFuQ3Jvc3MocGEsIHBiKSxcbiAgICAgICAgbjJuMiA9IGNhcnRlc2lhbkRvdChuMiwgbjIpLFxuICAgICAgICBuMW4yID0gbjJbMF0sIC8vIGNhcnRlc2lhbkRvdChuMSwgbjIpLFxuICAgICAgICBkZXRlcm1pbmFudCA9IG4ybjIgLSBuMW4yICogbjFuMjtcblxuICAgIC8vIFR3byBwb2xhciBwb2ludHMuXG4gICAgaWYgKCFkZXRlcm1pbmFudCkgcmV0dXJuICF0d28gJiYgYTtcblxuICAgIHZhciBjMSA9ICBjciAqIG4ybjIgLyBkZXRlcm1pbmFudCxcbiAgICAgICAgYzIgPSAtY3IgKiBuMW4yIC8gZGV0ZXJtaW5hbnQsXG4gICAgICAgIG4xeG4yID0gY2FydGVzaWFuQ3Jvc3MobjEsIG4yKSxcbiAgICAgICAgQSA9IGNhcnRlc2lhblNjYWxlKG4xLCBjMSksXG4gICAgICAgIEIgPSBjYXJ0ZXNpYW5TY2FsZShuMiwgYzIpO1xuICAgIGNhcnRlc2lhbkFkZEluUGxhY2UoQSwgQik7XG5cbiAgICAvLyBTb2x2ZSB8cCh0KXxeMiA9IDEuXG4gICAgdmFyIHUgPSBuMXhuMixcbiAgICAgICAgdyA9IGNhcnRlc2lhbkRvdChBLCB1KSxcbiAgICAgICAgdXUgPSBjYXJ0ZXNpYW5Eb3QodSwgdSksXG4gICAgICAgIHQyID0gdyAqIHcgLSB1dSAqIChjYXJ0ZXNpYW5Eb3QoQSwgQSkgLSAxKTtcblxuICAgIGlmICh0MiA8IDApIHJldHVybjtcblxuICAgIHZhciB0ID0gc3FydCh0MiksXG4gICAgICAgIHEgPSBjYXJ0ZXNpYW5TY2FsZSh1LCAoLXcgLSB0KSAvIHV1KTtcbiAgICBjYXJ0ZXNpYW5BZGRJblBsYWNlKHEsIEEpO1xuICAgIHEgPSBzcGhlcmljYWwocSk7XG5cbiAgICBpZiAoIXR3bykgcmV0dXJuIHE7XG5cbiAgICAvLyBUd28gaW50ZXJzZWN0aW9uIHBvaW50cy5cbiAgICB2YXIgbGFtYmRhMCA9IGFbMF0sXG4gICAgICAgIGxhbWJkYTEgPSBiWzBdLFxuICAgICAgICBwaGkwID0gYVsxXSxcbiAgICAgICAgcGhpMSA9IGJbMV0sXG4gICAgICAgIHo7XG5cbiAgICBpZiAobGFtYmRhMSA8IGxhbWJkYTApIHogPSBsYW1iZGEwLCBsYW1iZGEwID0gbGFtYmRhMSwgbGFtYmRhMSA9IHo7XG5cbiAgICB2YXIgZGVsdGEgPSBsYW1iZGExIC0gbGFtYmRhMCxcbiAgICAgICAgcG9sYXIgPSBhYnMoZGVsdGEgLSBwaSkgPCBlcHNpbG9uLFxuICAgICAgICBtZXJpZGlhbiA9IHBvbGFyIHx8IGRlbHRhIDwgZXBzaWxvbjtcblxuICAgIGlmICghcG9sYXIgJiYgcGhpMSA8IHBoaTApIHogPSBwaGkwLCBwaGkwID0gcGhpMSwgcGhpMSA9IHo7XG5cbiAgICAvLyBDaGVjayB0aGF0IHRoZSBmaXJzdCBwb2ludCBpcyBiZXR3ZWVuIGEgYW5kIGIuXG4gICAgaWYgKG1lcmlkaWFuXG4gICAgICAgID8gcG9sYXJcbiAgICAgICAgICA/IHBoaTAgKyBwaGkxID4gMCBeIHFbMV0gPCAoYWJzKHFbMF0gLSBsYW1iZGEwKSA8IGVwc2lsb24gPyBwaGkwIDogcGhpMSlcbiAgICAgICAgICA6IHBoaTAgPD0gcVsxXSAmJiBxWzFdIDw9IHBoaTFcbiAgICAgICAgOiBkZWx0YSA+IHBpIF4gKGxhbWJkYTAgPD0gcVswXSAmJiBxWzBdIDw9IGxhbWJkYTEpKSB7XG4gICAgICB2YXIgcTEgPSBjYXJ0ZXNpYW5TY2FsZSh1LCAoLXcgKyB0KSAvIHV1KTtcbiAgICAgIGNhcnRlc2lhbkFkZEluUGxhY2UocTEsIEEpO1xuICAgICAgcmV0dXJuIFtxLCBzcGhlcmljYWwocTEpXTtcbiAgICB9XG4gIH1cblxuICAvLyBHZW5lcmF0ZXMgYSA0LWJpdCB2ZWN0b3IgcmVwcmVzZW50aW5nIHRoZSBsb2NhdGlvbiBvZiBhIHBvaW50IHJlbGF0aXZlIHRvXG4gIC8vIHRoZSBzbWFsbCBjaXJjbGUncyBib3VuZGluZyBib3guXG4gIGZ1bmN0aW9uIGNvZGUobGFtYmRhLCBwaGkpIHtcbiAgICB2YXIgciA9IHNtYWxsUmFkaXVzID8gcmFkaXVzIDogcGkgLSByYWRpdXMsXG4gICAgICAgIGNvZGUgPSAwO1xuICAgIGlmIChsYW1iZGEgPCAtcikgY29kZSB8PSAxOyAvLyBsZWZ0XG4gICAgZWxzZSBpZiAobGFtYmRhID4gcikgY29kZSB8PSAyOyAvLyByaWdodFxuICAgIGlmIChwaGkgPCAtcikgY29kZSB8PSA0OyAvLyBiZWxvd1xuICAgIGVsc2UgaWYgKHBoaSA+IHIpIGNvZGUgfD0gODsgLy8gYWJvdmVcbiAgICByZXR1cm4gY29kZTtcbiAgfVxuXG4gIHJldHVybiBjbGlwKHZpc2libGUsIGNsaXBMaW5lLCBpbnRlcnBvbGF0ZSwgc21hbGxSYWRpdXMgPyBbMCwgLXJhZGl1c10gOiBbLXBpLCByYWRpdXMgLSBwaV0pO1xufVxuIiwiaW1wb3J0IHthYnMsIGVwc2lsb259IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5pbXBvcnQgY2xpcEJ1ZmZlciBmcm9tIFwiLi9idWZmZXIuanNcIjtcbmltcG9ydCBjbGlwTGluZSBmcm9tIFwiLi9saW5lLmpzXCI7XG5pbXBvcnQgY2xpcFJlam9pbiBmcm9tIFwiLi9yZWpvaW4uanNcIjtcbmltcG9ydCB7bWVyZ2V9IGZyb20gXCJkMy1hcnJheVwiO1xuXG52YXIgY2xpcE1heCA9IDFlOSwgY2xpcE1pbiA9IC1jbGlwTWF4O1xuXG4vLyBUT0RPIFVzZSBkMy1wb2x5Z29u4oCZcyBwb2x5Z29uQ29udGFpbnMgaGVyZSBmb3IgdGhlIHJpbmcgY2hlY2s/XG4vLyBUT0RPIEVsaW1pbmF0ZSBkdXBsaWNhdGUgYnVmZmVyaW5nIGluIGNsaXBCdWZmZXIgYW5kIHBvbHlnb24ucHVzaD9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY2xpcFJlY3RhbmdsZSh4MCwgeTAsIHgxLCB5MSkge1xuXG4gIGZ1bmN0aW9uIHZpc2libGUoeCwgeSkge1xuICAgIHJldHVybiB4MCA8PSB4ICYmIHggPD0geDEgJiYgeTAgPD0geSAmJiB5IDw9IHkxO1xuICB9XG5cbiAgZnVuY3Rpb24gaW50ZXJwb2xhdGUoZnJvbSwgdG8sIGRpcmVjdGlvbiwgc3RyZWFtKSB7XG4gICAgdmFyIGEgPSAwLCBhMSA9IDA7XG4gICAgaWYgKGZyb20gPT0gbnVsbFxuICAgICAgICB8fCAoYSA9IGNvcm5lcihmcm9tLCBkaXJlY3Rpb24pKSAhPT0gKGExID0gY29ybmVyKHRvLCBkaXJlY3Rpb24pKVxuICAgICAgICB8fCBjb21wYXJlUG9pbnQoZnJvbSwgdG8pIDwgMCBeIGRpcmVjdGlvbiA+IDApIHtcbiAgICAgIGRvIHN0cmVhbS5wb2ludChhID09PSAwIHx8IGEgPT09IDMgPyB4MCA6IHgxLCBhID4gMSA/IHkxIDogeTApO1xuICAgICAgd2hpbGUgKChhID0gKGEgKyBkaXJlY3Rpb24gKyA0KSAlIDQpICE9PSBhMSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0cmVhbS5wb2ludCh0b1swXSwgdG9bMV0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGNvcm5lcihwLCBkaXJlY3Rpb24pIHtcbiAgICByZXR1cm4gYWJzKHBbMF0gLSB4MCkgPCBlcHNpbG9uID8gZGlyZWN0aW9uID4gMCA/IDAgOiAzXG4gICAgICAgIDogYWJzKHBbMF0gLSB4MSkgPCBlcHNpbG9uID8gZGlyZWN0aW9uID4gMCA/IDIgOiAxXG4gICAgICAgIDogYWJzKHBbMV0gLSB5MCkgPCBlcHNpbG9uID8gZGlyZWN0aW9uID4gMCA/IDEgOiAwXG4gICAgICAgIDogZGlyZWN0aW9uID4gMCA/IDMgOiAyOyAvLyBhYnMocFsxXSAtIHkxKSA8IGVwc2lsb25cbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbXBhcmVJbnRlcnNlY3Rpb24oYSwgYikge1xuICAgIHJldHVybiBjb21wYXJlUG9pbnQoYS54LCBiLngpO1xuICB9XG5cbiAgZnVuY3Rpb24gY29tcGFyZVBvaW50KGEsIGIpIHtcbiAgICB2YXIgY2EgPSBjb3JuZXIoYSwgMSksXG4gICAgICAgIGNiID0gY29ybmVyKGIsIDEpO1xuICAgIHJldHVybiBjYSAhPT0gY2IgPyBjYSAtIGNiXG4gICAgICAgIDogY2EgPT09IDAgPyBiWzFdIC0gYVsxXVxuICAgICAgICA6IGNhID09PSAxID8gYVswXSAtIGJbMF1cbiAgICAgICAgOiBjYSA9PT0gMiA/IGFbMV0gLSBiWzFdXG4gICAgICAgIDogYlswXSAtIGFbMF07XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24oc3RyZWFtKSB7XG4gICAgdmFyIGFjdGl2ZVN0cmVhbSA9IHN0cmVhbSxcbiAgICAgICAgYnVmZmVyU3RyZWFtID0gY2xpcEJ1ZmZlcigpLFxuICAgICAgICBzZWdtZW50cyxcbiAgICAgICAgcG9seWdvbixcbiAgICAgICAgcmluZyxcbiAgICAgICAgeF9fLCB5X18sIHZfXywgLy8gZmlyc3QgcG9pbnRcbiAgICAgICAgeF8sIHlfLCB2XywgLy8gcHJldmlvdXMgcG9pbnRcbiAgICAgICAgZmlyc3QsXG4gICAgICAgIGNsZWFuO1xuXG4gICAgdmFyIGNsaXBTdHJlYW0gPSB7XG4gICAgICBwb2ludDogcG9pbnQsXG4gICAgICBsaW5lU3RhcnQ6IGxpbmVTdGFydCxcbiAgICAgIGxpbmVFbmQ6IGxpbmVFbmQsXG4gICAgICBwb2x5Z29uU3RhcnQ6IHBvbHlnb25TdGFydCxcbiAgICAgIHBvbHlnb25FbmQ6IHBvbHlnb25FbmRcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gcG9pbnQoeCwgeSkge1xuICAgICAgaWYgKHZpc2libGUoeCwgeSkpIGFjdGl2ZVN0cmVhbS5wb2ludCh4LCB5KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwb2x5Z29uSW5zaWRlKCkge1xuICAgICAgdmFyIHdpbmRpbmcgPSAwO1xuXG4gICAgICBmb3IgKHZhciBpID0gMCwgbiA9IHBvbHlnb24ubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGZvciAodmFyIHJpbmcgPSBwb2x5Z29uW2ldLCBqID0gMSwgbSA9IHJpbmcubGVuZ3RoLCBwb2ludCA9IHJpbmdbMF0sIGEwLCBhMSwgYjAgPSBwb2ludFswXSwgYjEgPSBwb2ludFsxXTsgaiA8IG07ICsraikge1xuICAgICAgICAgIGEwID0gYjAsIGExID0gYjEsIHBvaW50ID0gcmluZ1tqXSwgYjAgPSBwb2ludFswXSwgYjEgPSBwb2ludFsxXTtcbiAgICAgICAgICBpZiAoYTEgPD0geTEpIHsgaWYgKGIxID4geTEgJiYgKGIwIC0gYTApICogKHkxIC0gYTEpID4gKGIxIC0gYTEpICogKHgwIC0gYTApKSArK3dpbmRpbmc7IH1cbiAgICAgICAgICBlbHNlIHsgaWYgKGIxIDw9IHkxICYmIChiMCAtIGEwKSAqICh5MSAtIGExKSA8IChiMSAtIGExKSAqICh4MCAtIGEwKSkgLS13aW5kaW5nOyB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHdpbmRpbmc7XG4gICAgfVxuXG4gICAgLy8gQnVmZmVyIGdlb21ldHJ5IHdpdGhpbiBhIHBvbHlnb24gYW5kIHRoZW4gY2xpcCBpdCBlbiBtYXNzZS5cbiAgICBmdW5jdGlvbiBwb2x5Z29uU3RhcnQoKSB7XG4gICAgICBhY3RpdmVTdHJlYW0gPSBidWZmZXJTdHJlYW0sIHNlZ21lbnRzID0gW10sIHBvbHlnb24gPSBbXSwgY2xlYW4gPSB0cnVlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHBvbHlnb25FbmQoKSB7XG4gICAgICB2YXIgc3RhcnRJbnNpZGUgPSBwb2x5Z29uSW5zaWRlKCksXG4gICAgICAgICAgY2xlYW5JbnNpZGUgPSBjbGVhbiAmJiBzdGFydEluc2lkZSxcbiAgICAgICAgICB2aXNpYmxlID0gKHNlZ21lbnRzID0gbWVyZ2Uoc2VnbWVudHMpKS5sZW5ndGg7XG4gICAgICBpZiAoY2xlYW5JbnNpZGUgfHwgdmlzaWJsZSkge1xuICAgICAgICBzdHJlYW0ucG9seWdvblN0YXJ0KCk7XG4gICAgICAgIGlmIChjbGVhbkluc2lkZSkge1xuICAgICAgICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgICAgICBpbnRlcnBvbGF0ZShudWxsLCBudWxsLCAxLCBzdHJlYW0pO1xuICAgICAgICAgIHN0cmVhbS5saW5lRW5kKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZpc2libGUpIHtcbiAgICAgICAgICBjbGlwUmVqb2luKHNlZ21lbnRzLCBjb21wYXJlSW50ZXJzZWN0aW9uLCBzdGFydEluc2lkZSwgaW50ZXJwb2xhdGUsIHN0cmVhbSk7XG4gICAgICAgIH1cbiAgICAgICAgc3RyZWFtLnBvbHlnb25FbmQoKTtcbiAgICAgIH1cbiAgICAgIGFjdGl2ZVN0cmVhbSA9IHN0cmVhbSwgc2VnbWVudHMgPSBwb2x5Z29uID0gcmluZyA9IG51bGw7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbGluZVN0YXJ0KCkge1xuICAgICAgY2xpcFN0cmVhbS5wb2ludCA9IGxpbmVQb2ludDtcbiAgICAgIGlmIChwb2x5Z29uKSBwb2x5Z29uLnB1c2gocmluZyA9IFtdKTtcbiAgICAgIGZpcnN0ID0gdHJ1ZTtcbiAgICAgIHZfID0gZmFsc2U7XG4gICAgICB4XyA9IHlfID0gTmFOO1xuICAgIH1cblxuICAgIC8vIFRPRE8gcmF0aGVyIHRoYW4gc3BlY2lhbC1jYXNlIHBvbHlnb25zLCBzaW1wbHkgaGFuZGxlIHRoZW0gc2VwYXJhdGVseS5cbiAgICAvLyBJZGVhbGx5LCBjb2luY2lkZW50IGludGVyc2VjdGlvbiBwb2ludHMgc2hvdWxkIGJlIGppdHRlcmVkIHRvIGF2b2lkXG4gICAgLy8gY2xpcHBpbmcgaXNzdWVzLlxuICAgIGZ1bmN0aW9uIGxpbmVFbmQoKSB7XG4gICAgICBpZiAoc2VnbWVudHMpIHtcbiAgICAgICAgbGluZVBvaW50KHhfXywgeV9fKTtcbiAgICAgICAgaWYgKHZfXyAmJiB2XykgYnVmZmVyU3RyZWFtLnJlam9pbigpO1xuICAgICAgICBzZWdtZW50cy5wdXNoKGJ1ZmZlclN0cmVhbS5yZXN1bHQoKSk7XG4gICAgICB9XG4gICAgICBjbGlwU3RyZWFtLnBvaW50ID0gcG9pbnQ7XG4gICAgICBpZiAodl8pIGFjdGl2ZVN0cmVhbS5saW5lRW5kKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbGluZVBvaW50KHgsIHkpIHtcbiAgICAgIHZhciB2ID0gdmlzaWJsZSh4LCB5KTtcbiAgICAgIGlmIChwb2x5Z29uKSByaW5nLnB1c2goW3gsIHldKTtcbiAgICAgIGlmIChmaXJzdCkge1xuICAgICAgICB4X18gPSB4LCB5X18gPSB5LCB2X18gPSB2O1xuICAgICAgICBmaXJzdCA9IGZhbHNlO1xuICAgICAgICBpZiAodikge1xuICAgICAgICAgIGFjdGl2ZVN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgICAgICBhY3RpdmVTdHJlYW0ucG9pbnQoeCwgeSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICh2ICYmIHZfKSBhY3RpdmVTdHJlYW0ucG9pbnQoeCwgeSk7XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIHZhciBhID0gW3hfID0gTWF0aC5tYXgoY2xpcE1pbiwgTWF0aC5taW4oY2xpcE1heCwgeF8pKSwgeV8gPSBNYXRoLm1heChjbGlwTWluLCBNYXRoLm1pbihjbGlwTWF4LCB5XykpXSxcbiAgICAgICAgICAgICAgYiA9IFt4ID0gTWF0aC5tYXgoY2xpcE1pbiwgTWF0aC5taW4oY2xpcE1heCwgeCkpLCB5ID0gTWF0aC5tYXgoY2xpcE1pbiwgTWF0aC5taW4oY2xpcE1heCwgeSkpXTtcbiAgICAgICAgICBpZiAoY2xpcExpbmUoYSwgYiwgeDAsIHkwLCB4MSwgeTEpKSB7XG4gICAgICAgICAgICBpZiAoIXZfKSB7XG4gICAgICAgICAgICAgIGFjdGl2ZVN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgICAgICAgICAgYWN0aXZlU3RyZWFtLnBvaW50KGFbMF0sIGFbMV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYWN0aXZlU3RyZWFtLnBvaW50KGJbMF0sIGJbMV0pO1xuICAgICAgICAgICAgaWYgKCF2KSBhY3RpdmVTdHJlYW0ubGluZUVuZCgpO1xuICAgICAgICAgICAgY2xlYW4gPSBmYWxzZTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHYpIHtcbiAgICAgICAgICAgIGFjdGl2ZVN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgICAgICAgIGFjdGl2ZVN0cmVhbS5wb2ludCh4LCB5KTtcbiAgICAgICAgICAgIGNsZWFuID0gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICB4XyA9IHgsIHlfID0geSwgdl8gPSB2O1xuICAgIH1cblxuICAgIHJldHVybiBjbGlwU3RyZWFtO1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYiwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgdmFyIGF4ID0gYVswXSxcbiAgICAgIGF5ID0gYVsxXSxcbiAgICAgIGJ4ID0gYlswXSxcbiAgICAgIGJ5ID0gYlsxXSxcbiAgICAgIHQwID0gMCxcbiAgICAgIHQxID0gMSxcbiAgICAgIGR4ID0gYnggLSBheCxcbiAgICAgIGR5ID0gYnkgLSBheSxcbiAgICAgIHI7XG5cbiAgciA9IHgwIC0gYXg7XG4gIGlmICghZHggJiYgciA+IDApIHJldHVybjtcbiAgciAvPSBkeDtcbiAgaWYgKGR4IDwgMCkge1xuICAgIGlmIChyIDwgdDApIHJldHVybjtcbiAgICBpZiAociA8IHQxKSB0MSA9IHI7XG4gIH0gZWxzZSBpZiAoZHggPiAwKSB7XG4gICAgaWYgKHIgPiB0MSkgcmV0dXJuO1xuICAgIGlmIChyID4gdDApIHQwID0gcjtcbiAgfVxuXG4gIHIgPSB4MSAtIGF4O1xuICBpZiAoIWR4ICYmIHIgPCAwKSByZXR1cm47XG4gIHIgLz0gZHg7XG4gIGlmIChkeCA8IDApIHtcbiAgICBpZiAociA+IHQxKSByZXR1cm47XG4gICAgaWYgKHIgPiB0MCkgdDAgPSByO1xuICB9IGVsc2UgaWYgKGR4ID4gMCkge1xuICAgIGlmIChyIDwgdDApIHJldHVybjtcbiAgICBpZiAociA8IHQxKSB0MSA9IHI7XG4gIH1cblxuICByID0geTAgLSBheTtcbiAgaWYgKCFkeSAmJiByID4gMCkgcmV0dXJuO1xuICByIC89IGR5O1xuICBpZiAoZHkgPCAwKSB7XG4gICAgaWYgKHIgPCB0MCkgcmV0dXJuO1xuICAgIGlmIChyIDwgdDEpIHQxID0gcjtcbiAgfSBlbHNlIGlmIChkeSA+IDApIHtcbiAgICBpZiAociA+IHQxKSByZXR1cm47XG4gICAgaWYgKHIgPiB0MCkgdDAgPSByO1xuICB9XG5cbiAgciA9IHkxIC0gYXk7XG4gIGlmICghZHkgJiYgciA8IDApIHJldHVybjtcbiAgciAvPSBkeTtcbiAgaWYgKGR5IDwgMCkge1xuICAgIGlmIChyID4gdDEpIHJldHVybjtcbiAgICBpZiAociA+IHQwKSB0MCA9IHI7XG4gIH0gZWxzZSBpZiAoZHkgPiAwKSB7XG4gICAgaWYgKHIgPCB0MCkgcmV0dXJuO1xuICAgIGlmIChyIDwgdDEpIHQxID0gcjtcbiAgfVxuXG4gIGlmICh0MCA+IDApIGFbMF0gPSBheCArIHQwICogZHgsIGFbMV0gPSBheSArIHQwICogZHk7XG4gIGlmICh0MSA8IDEpIGJbMF0gPSBheCArIHQxICogZHgsIGJbMV0gPSBheSArIHQxICogZHk7XG4gIHJldHVybiB0cnVlO1xufVxuIiwiaW1wb3J0IGNsaXBSZWN0YW5nbGUgZnJvbSBcIi4vcmVjdGFuZ2xlLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgeDAgPSAwLFxuICAgICAgeTAgPSAwLFxuICAgICAgeDEgPSA5NjAsXG4gICAgICB5MSA9IDUwMCxcbiAgICAgIGNhY2hlLFxuICAgICAgY2FjaGVTdHJlYW0sXG4gICAgICBjbGlwO1xuXG4gIHJldHVybiBjbGlwID0ge1xuICAgIHN0cmVhbTogZnVuY3Rpb24oc3RyZWFtKSB7XG4gICAgICByZXR1cm4gY2FjaGUgJiYgY2FjaGVTdHJlYW0gPT09IHN0cmVhbSA/IGNhY2hlIDogY2FjaGUgPSBjbGlwUmVjdGFuZ2xlKHgwLCB5MCwgeDEsIHkxKShjYWNoZVN0cmVhbSA9IHN0cmVhbSk7XG4gICAgfSxcbiAgICBleHRlbnQ6IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHgwID0gK19bMF1bMF0sIHkwID0gK19bMF1bMV0sIHgxID0gK19bMV1bMF0sIHkxID0gK19bMV1bMV0sIGNhY2hlID0gY2FjaGVTdHJlYW0gPSBudWxsLCBjbGlwKSA6IFtbeDAsIHkwXSwgW3gxLCB5MV1dO1xuICAgIH1cbiAgfTtcbn1cbiIsImltcG9ydCBhZGRlciBmcm9tIFwiLi9hZGRlci5qc1wiO1xuaW1wb3J0IHthYnMsIGF0YW4yLCBjb3MsIHJhZGlhbnMsIHNpbiwgc3FydH0gZnJvbSBcIi4vbWF0aC5qc1wiO1xuaW1wb3J0IG5vb3AgZnJvbSBcIi4vbm9vcC5qc1wiO1xuaW1wb3J0IHN0cmVhbSBmcm9tIFwiLi9zdHJlYW0uanNcIjtcblxudmFyIGxlbmd0aFN1bSA9IGFkZGVyKCksXG4gICAgbGFtYmRhMCxcbiAgICBzaW5QaGkwLFxuICAgIGNvc1BoaTA7XG5cbnZhciBsZW5ndGhTdHJlYW0gPSB7XG4gIHNwaGVyZTogbm9vcCxcbiAgcG9pbnQ6IG5vb3AsXG4gIGxpbmVTdGFydDogbGVuZ3RoTGluZVN0YXJ0LFxuICBsaW5lRW5kOiBub29wLFxuICBwb2x5Z29uU3RhcnQ6IG5vb3AsXG4gIHBvbHlnb25FbmQ6IG5vb3Bcbn07XG5cbmZ1bmN0aW9uIGxlbmd0aExpbmVTdGFydCgpIHtcbiAgbGVuZ3RoU3RyZWFtLnBvaW50ID0gbGVuZ3RoUG9pbnRGaXJzdDtcbiAgbGVuZ3RoU3RyZWFtLmxpbmVFbmQgPSBsZW5ndGhMaW5lRW5kO1xufVxuXG5mdW5jdGlvbiBsZW5ndGhMaW5lRW5kKCkge1xuICBsZW5ndGhTdHJlYW0ucG9pbnQgPSBsZW5ndGhTdHJlYW0ubGluZUVuZCA9IG5vb3A7XG59XG5cbmZ1bmN0aW9uIGxlbmd0aFBvaW50Rmlyc3QobGFtYmRhLCBwaGkpIHtcbiAgbGFtYmRhICo9IHJhZGlhbnMsIHBoaSAqPSByYWRpYW5zO1xuICBsYW1iZGEwID0gbGFtYmRhLCBzaW5QaGkwID0gc2luKHBoaSksIGNvc1BoaTAgPSBjb3MocGhpKTtcbiAgbGVuZ3RoU3RyZWFtLnBvaW50ID0gbGVuZ3RoUG9pbnQ7XG59XG5cbmZ1bmN0aW9uIGxlbmd0aFBvaW50KGxhbWJkYSwgcGhpKSB7XG4gIGxhbWJkYSAqPSByYWRpYW5zLCBwaGkgKj0gcmFkaWFucztcbiAgdmFyIHNpblBoaSA9IHNpbihwaGkpLFxuICAgICAgY29zUGhpID0gY29zKHBoaSksXG4gICAgICBkZWx0YSA9IGFicyhsYW1iZGEgLSBsYW1iZGEwKSxcbiAgICAgIGNvc0RlbHRhID0gY29zKGRlbHRhKSxcbiAgICAgIHNpbkRlbHRhID0gc2luKGRlbHRhKSxcbiAgICAgIHggPSBjb3NQaGkgKiBzaW5EZWx0YSxcbiAgICAgIHkgPSBjb3NQaGkwICogc2luUGhpIC0gc2luUGhpMCAqIGNvc1BoaSAqIGNvc0RlbHRhLFxuICAgICAgeiA9IHNpblBoaTAgKiBzaW5QaGkgKyBjb3NQaGkwICogY29zUGhpICogY29zRGVsdGE7XG4gIGxlbmd0aFN1bS5hZGQoYXRhbjIoc3FydCh4ICogeCArIHkgKiB5KSwgeikpO1xuICBsYW1iZGEwID0gbGFtYmRhLCBzaW5QaGkwID0gc2luUGhpLCBjb3NQaGkwID0gY29zUGhpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvYmplY3QpIHtcbiAgbGVuZ3RoU3VtLnJlc2V0KCk7XG4gIHN0cmVhbShvYmplY3QsIGxlbmd0aFN0cmVhbSk7XG4gIHJldHVybiArbGVuZ3RoU3VtO1xufVxuIiwiaW1wb3J0IGxlbmd0aCBmcm9tIFwiLi9sZW5ndGguanNcIjtcblxudmFyIGNvb3JkaW5hdGVzID0gW251bGwsIG51bGxdLFxuICAgIG9iamVjdCA9IHt0eXBlOiBcIkxpbmVTdHJpbmdcIiwgY29vcmRpbmF0ZXM6IGNvb3JkaW5hdGVzfTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICBjb29yZGluYXRlc1swXSA9IGE7XG4gIGNvb3JkaW5hdGVzWzFdID0gYjtcbiAgcmV0dXJuIGxlbmd0aChvYmplY3QpO1xufVxuIiwiaW1wb3J0IHtkZWZhdWx0IGFzIHBvbHlnb25Db250YWluc30gZnJvbSBcIi4vcG9seWdvbkNvbnRhaW5zLmpzXCI7XG5pbXBvcnQge2RlZmF1bHQgYXMgZGlzdGFuY2V9IGZyb20gXCIuL2Rpc3RhbmNlLmpzXCI7XG5pbXBvcnQge2Vwc2lsb24yLCByYWRpYW5zfSBmcm9tIFwiLi9tYXRoLmpzXCI7XG5cbnZhciBjb250YWluc09iamVjdFR5cGUgPSB7XG4gIEZlYXR1cmU6IGZ1bmN0aW9uKG9iamVjdCwgcG9pbnQpIHtcbiAgICByZXR1cm4gY29udGFpbnNHZW9tZXRyeShvYmplY3QuZ2VvbWV0cnksIHBvaW50KTtcbiAgfSxcbiAgRmVhdHVyZUNvbGxlY3Rpb246IGZ1bmN0aW9uKG9iamVjdCwgcG9pbnQpIHtcbiAgICB2YXIgZmVhdHVyZXMgPSBvYmplY3QuZmVhdHVyZXMsIGkgPSAtMSwgbiA9IGZlYXR1cmVzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikgaWYgKGNvbnRhaW5zR2VvbWV0cnkoZmVhdHVyZXNbaV0uZ2VvbWV0cnksIHBvaW50KSkgcmV0dXJuIHRydWU7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59O1xuXG52YXIgY29udGFpbnNHZW9tZXRyeVR5cGUgPSB7XG4gIFNwaGVyZTogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0sXG4gIFBvaW50OiBmdW5jdGlvbihvYmplY3QsIHBvaW50KSB7XG4gICAgcmV0dXJuIGNvbnRhaW5zUG9pbnQob2JqZWN0LmNvb3JkaW5hdGVzLCBwb2ludCk7XG4gIH0sXG4gIE11bHRpUG9pbnQ6IGZ1bmN0aW9uKG9iamVjdCwgcG9pbnQpIHtcbiAgICB2YXIgY29vcmRpbmF0ZXMgPSBvYmplY3QuY29vcmRpbmF0ZXMsIGkgPSAtMSwgbiA9IGNvb3JkaW5hdGVzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikgaWYgKGNvbnRhaW5zUG9pbnQoY29vcmRpbmF0ZXNbaV0sIHBvaW50KSkgcmV0dXJuIHRydWU7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9LFxuICBMaW5lU3RyaW5nOiBmdW5jdGlvbihvYmplY3QsIHBvaW50KSB7XG4gICAgcmV0dXJuIGNvbnRhaW5zTGluZShvYmplY3QuY29vcmRpbmF0ZXMsIHBvaW50KTtcbiAgfSxcbiAgTXVsdGlMaW5lU3RyaW5nOiBmdW5jdGlvbihvYmplY3QsIHBvaW50KSB7XG4gICAgdmFyIGNvb3JkaW5hdGVzID0gb2JqZWN0LmNvb3JkaW5hdGVzLCBpID0gLTEsIG4gPSBjb29yZGluYXRlcy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIGlmIChjb250YWluc0xpbmUoY29vcmRpbmF0ZXNbaV0sIHBvaW50KSkgcmV0dXJuIHRydWU7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9LFxuICBQb2x5Z29uOiBmdW5jdGlvbihvYmplY3QsIHBvaW50KSB7XG4gICAgcmV0dXJuIGNvbnRhaW5zUG9seWdvbihvYmplY3QuY29vcmRpbmF0ZXMsIHBvaW50KTtcbiAgfSxcbiAgTXVsdGlQb2x5Z29uOiBmdW5jdGlvbihvYmplY3QsIHBvaW50KSB7XG4gICAgdmFyIGNvb3JkaW5hdGVzID0gb2JqZWN0LmNvb3JkaW5hdGVzLCBpID0gLTEsIG4gPSBjb29yZGluYXRlcy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIGlmIChjb250YWluc1BvbHlnb24oY29vcmRpbmF0ZXNbaV0sIHBvaW50KSkgcmV0dXJuIHRydWU7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9LFxuICBHZW9tZXRyeUNvbGxlY3Rpb246IGZ1bmN0aW9uKG9iamVjdCwgcG9pbnQpIHtcbiAgICB2YXIgZ2VvbWV0cmllcyA9IG9iamVjdC5nZW9tZXRyaWVzLCBpID0gLTEsIG4gPSBnZW9tZXRyaWVzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikgaWYgKGNvbnRhaW5zR2VvbWV0cnkoZ2VvbWV0cmllc1tpXSwgcG9pbnQpKSByZXR1cm4gdHJ1ZTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGNvbnRhaW5zR2VvbWV0cnkoZ2VvbWV0cnksIHBvaW50KSB7XG4gIHJldHVybiBnZW9tZXRyeSAmJiBjb250YWluc0dlb21ldHJ5VHlwZS5oYXNPd25Qcm9wZXJ0eShnZW9tZXRyeS50eXBlKVxuICAgICAgPyBjb250YWluc0dlb21ldHJ5VHlwZVtnZW9tZXRyeS50eXBlXShnZW9tZXRyeSwgcG9pbnQpXG4gICAgICA6IGZhbHNlO1xufVxuXG5mdW5jdGlvbiBjb250YWluc1BvaW50KGNvb3JkaW5hdGVzLCBwb2ludCkge1xuICByZXR1cm4gZGlzdGFuY2UoY29vcmRpbmF0ZXMsIHBvaW50KSA9PT0gMDtcbn1cblxuZnVuY3Rpb24gY29udGFpbnNMaW5lKGNvb3JkaW5hdGVzLCBwb2ludCkge1xuICB2YXIgYW8sIGJvLCBhYjtcbiAgZm9yICh2YXIgaSA9IDAsIG4gPSBjb29yZGluYXRlcy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICBibyA9IGRpc3RhbmNlKGNvb3JkaW5hdGVzW2ldLCBwb2ludCk7XG4gICAgaWYgKGJvID09PSAwKSByZXR1cm4gdHJ1ZTtcbiAgICBpZiAoaSA+IDApIHtcbiAgICAgIGFiID0gZGlzdGFuY2UoY29vcmRpbmF0ZXNbaV0sIGNvb3JkaW5hdGVzW2kgLSAxXSk7XG4gICAgICBpZiAoXG4gICAgICAgIGFiID4gMCAmJlxuICAgICAgICBhbyA8PSBhYiAmJlxuICAgICAgICBibyA8PSBhYiAmJlxuICAgICAgICAoYW8gKyBibyAtIGFiKSAqICgxIC0gTWF0aC5wb3coKGFvIC0gYm8pIC8gYWIsIDIpKSA8IGVwc2lsb24yICogYWJcbiAgICAgIClcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGFvID0gYm87XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBjb250YWluc1BvbHlnb24oY29vcmRpbmF0ZXMsIHBvaW50KSB7XG4gIHJldHVybiAhIXBvbHlnb25Db250YWlucyhjb29yZGluYXRlcy5tYXAocmluZ1JhZGlhbnMpLCBwb2ludFJhZGlhbnMocG9pbnQpKTtcbn1cblxuZnVuY3Rpb24gcmluZ1JhZGlhbnMocmluZykge1xuICByZXR1cm4gcmluZyA9IHJpbmcubWFwKHBvaW50UmFkaWFucyksIHJpbmcucG9wKCksIHJpbmc7XG59XG5cbmZ1bmN0aW9uIHBvaW50UmFkaWFucyhwb2ludCkge1xuICByZXR1cm4gW3BvaW50WzBdICogcmFkaWFucywgcG9pbnRbMV0gKiByYWRpYW5zXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ob2JqZWN0LCBwb2ludCkge1xuICByZXR1cm4gKG9iamVjdCAmJiBjb250YWluc09iamVjdFR5cGUuaGFzT3duUHJvcGVydHkob2JqZWN0LnR5cGUpXG4gICAgICA/IGNvbnRhaW5zT2JqZWN0VHlwZVtvYmplY3QudHlwZV1cbiAgICAgIDogY29udGFpbnNHZW9tZXRyeSkob2JqZWN0LCBwb2ludCk7XG59XG4iLCJpbXBvcnQge3JhbmdlfSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7YWJzLCBjZWlsLCBlcHNpbG9ufSBmcm9tIFwiLi9tYXRoLmpzXCI7XG5cbmZ1bmN0aW9uIGdyYXRpY3VsZVgoeTAsIHkxLCBkeSkge1xuICB2YXIgeSA9IHJhbmdlKHkwLCB5MSAtIGVwc2lsb24sIGR5KS5jb25jYXQoeTEpO1xuICByZXR1cm4gZnVuY3Rpb24oeCkgeyByZXR1cm4geS5tYXAoZnVuY3Rpb24oeSkgeyByZXR1cm4gW3gsIHldOyB9KTsgfTtcbn1cblxuZnVuY3Rpb24gZ3JhdGljdWxlWSh4MCwgeDEsIGR4KSB7XG4gIHZhciB4ID0gcmFuZ2UoeDAsIHgxIC0gZXBzaWxvbiwgZHgpLmNvbmNhdCh4MSk7XG4gIHJldHVybiBmdW5jdGlvbih5KSB7IHJldHVybiB4Lm1hcChmdW5jdGlvbih4KSB7IHJldHVybiBbeCwgeV07IH0pOyB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBncmF0aWN1bGUoKSB7XG4gIHZhciB4MSwgeDAsIFgxLCBYMCxcbiAgICAgIHkxLCB5MCwgWTEsIFkwLFxuICAgICAgZHggPSAxMCwgZHkgPSBkeCwgRFggPSA5MCwgRFkgPSAzNjAsXG4gICAgICB4LCB5LCBYLCBZLFxuICAgICAgcHJlY2lzaW9uID0gMi41O1xuXG4gIGZ1bmN0aW9uIGdyYXRpY3VsZSgpIHtcbiAgICByZXR1cm4ge3R5cGU6IFwiTXVsdGlMaW5lU3RyaW5nXCIsIGNvb3JkaW5hdGVzOiBsaW5lcygpfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpbmVzKCkge1xuICAgIHJldHVybiByYW5nZShjZWlsKFgwIC8gRFgpICogRFgsIFgxLCBEWCkubWFwKFgpXG4gICAgICAgIC5jb25jYXQocmFuZ2UoY2VpbChZMCAvIERZKSAqIERZLCBZMSwgRFkpLm1hcChZKSlcbiAgICAgICAgLmNvbmNhdChyYW5nZShjZWlsKHgwIC8gZHgpICogZHgsIHgxLCBkeCkuZmlsdGVyKGZ1bmN0aW9uKHgpIHsgcmV0dXJuIGFicyh4ICUgRFgpID4gZXBzaWxvbjsgfSkubWFwKHgpKVxuICAgICAgICAuY29uY2F0KHJhbmdlKGNlaWwoeTAgLyBkeSkgKiBkeSwgeTEsIGR5KS5maWx0ZXIoZnVuY3Rpb24oeSkgeyByZXR1cm4gYWJzKHkgJSBEWSkgPiBlcHNpbG9uOyB9KS5tYXAoeSkpO1xuICB9XG5cbiAgZ3JhdGljdWxlLmxpbmVzID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGxpbmVzKCkubWFwKGZ1bmN0aW9uKGNvb3JkaW5hdGVzKSB7IHJldHVybiB7dHlwZTogXCJMaW5lU3RyaW5nXCIsIGNvb3JkaW5hdGVzOiBjb29yZGluYXRlc307IH0pO1xuICB9O1xuXG4gIGdyYXRpY3VsZS5vdXRsaW5lID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFwiUG9seWdvblwiLFxuICAgICAgY29vcmRpbmF0ZXM6IFtcbiAgICAgICAgWChYMCkuY29uY2F0KFxuICAgICAgICBZKFkxKS5zbGljZSgxKSxcbiAgICAgICAgWChYMSkucmV2ZXJzZSgpLnNsaWNlKDEpLFxuICAgICAgICBZKFkwKS5yZXZlcnNlKCkuc2xpY2UoMSkpXG4gICAgICBdXG4gICAgfTtcbiAgfTtcblxuICBncmF0aWN1bGUuZXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGdyYXRpY3VsZS5leHRlbnRNaW5vcigpO1xuICAgIHJldHVybiBncmF0aWN1bGUuZXh0ZW50TWFqb3IoXykuZXh0ZW50TWlub3IoXyk7XG4gIH07XG5cbiAgZ3JhdGljdWxlLmV4dGVudE1ham9yID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFtbWDAsIFkwXSwgW1gxLCBZMV1dO1xuICAgIFgwID0gK19bMF1bMF0sIFgxID0gK19bMV1bMF07XG4gICAgWTAgPSArX1swXVsxXSwgWTEgPSArX1sxXVsxXTtcbiAgICBpZiAoWDAgPiBYMSkgXyA9IFgwLCBYMCA9IFgxLCBYMSA9IF87XG4gICAgaWYgKFkwID4gWTEpIF8gPSBZMCwgWTAgPSBZMSwgWTEgPSBfO1xuICAgIHJldHVybiBncmF0aWN1bGUucHJlY2lzaW9uKHByZWNpc2lvbik7XG4gIH07XG5cbiAgZ3JhdGljdWxlLmV4dGVudE1pbm9yID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFtbeDAsIHkwXSwgW3gxLCB5MV1dO1xuICAgIHgwID0gK19bMF1bMF0sIHgxID0gK19bMV1bMF07XG4gICAgeTAgPSArX1swXVsxXSwgeTEgPSArX1sxXVsxXTtcbiAgICBpZiAoeDAgPiB4MSkgXyA9IHgwLCB4MCA9IHgxLCB4MSA9IF87XG4gICAgaWYgKHkwID4geTEpIF8gPSB5MCwgeTAgPSB5MSwgeTEgPSBfO1xuICAgIHJldHVybiBncmF0aWN1bGUucHJlY2lzaW9uKHByZWNpc2lvbik7XG4gIH07XG5cbiAgZ3JhdGljdWxlLnN0ZXAgPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZ3JhdGljdWxlLnN0ZXBNaW5vcigpO1xuICAgIHJldHVybiBncmF0aWN1bGUuc3RlcE1ham9yKF8pLnN0ZXBNaW5vcihfKTtcbiAgfTtcblxuICBncmF0aWN1bGUuc3RlcE1ham9yID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFtEWCwgRFldO1xuICAgIERYID0gK19bMF0sIERZID0gK19bMV07XG4gICAgcmV0dXJuIGdyYXRpY3VsZTtcbiAgfTtcblxuICBncmF0aWN1bGUuc3RlcE1pbm9yID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFtkeCwgZHldO1xuICAgIGR4ID0gK19bMF0sIGR5ID0gK19bMV07XG4gICAgcmV0dXJuIGdyYXRpY3VsZTtcbiAgfTtcblxuICBncmF0aWN1bGUucHJlY2lzaW9uID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHByZWNpc2lvbjtcbiAgICBwcmVjaXNpb24gPSArXztcbiAgICB4ID0gZ3JhdGljdWxlWCh5MCwgeTEsIDkwKTtcbiAgICB5ID0gZ3JhdGljdWxlWSh4MCwgeDEsIHByZWNpc2lvbik7XG4gICAgWCA9IGdyYXRpY3VsZVgoWTAsIFkxLCA5MCk7XG4gICAgWSA9IGdyYXRpY3VsZVkoWDAsIFgxLCBwcmVjaXNpb24pO1xuICAgIHJldHVybiBncmF0aWN1bGU7XG4gIH07XG5cbiAgcmV0dXJuIGdyYXRpY3VsZVxuICAgICAgLmV4dGVudE1ham9yKFtbLTE4MCwgLTkwICsgZXBzaWxvbl0sIFsxODAsIDkwIC0gZXBzaWxvbl1dKVxuICAgICAgLmV4dGVudE1pbm9yKFtbLTE4MCwgLTgwIC0gZXBzaWxvbl0sIFsxODAsIDgwICsgZXBzaWxvbl1dKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdyYXRpY3VsZTEwKCkge1xuICByZXR1cm4gZ3JhdGljdWxlKCkoKTtcbn1cbiIsImltcG9ydCB7YXNpbiwgYXRhbjIsIGNvcywgZGVncmVlcywgaGF2ZXJzaW4sIHJhZGlhbnMsIHNpbiwgc3FydH0gZnJvbSBcIi4vbWF0aC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHZhciB4MCA9IGFbMF0gKiByYWRpYW5zLFxuICAgICAgeTAgPSBhWzFdICogcmFkaWFucyxcbiAgICAgIHgxID0gYlswXSAqIHJhZGlhbnMsXG4gICAgICB5MSA9IGJbMV0gKiByYWRpYW5zLFxuICAgICAgY3kwID0gY29zKHkwKSxcbiAgICAgIHN5MCA9IHNpbih5MCksXG4gICAgICBjeTEgPSBjb3MoeTEpLFxuICAgICAgc3kxID0gc2luKHkxKSxcbiAgICAgIGt4MCA9IGN5MCAqIGNvcyh4MCksXG4gICAgICBreTAgPSBjeTAgKiBzaW4oeDApLFxuICAgICAga3gxID0gY3kxICogY29zKHgxKSxcbiAgICAgIGt5MSA9IGN5MSAqIHNpbih4MSksXG4gICAgICBkID0gMiAqIGFzaW4oc3FydChoYXZlcnNpbih5MSAtIHkwKSArIGN5MCAqIGN5MSAqIGhhdmVyc2luKHgxIC0geDApKSksXG4gICAgICBrID0gc2luKGQpO1xuXG4gIHZhciBpbnRlcnBvbGF0ZSA9IGQgPyBmdW5jdGlvbih0KSB7XG4gICAgdmFyIEIgPSBzaW4odCAqPSBkKSAvIGssXG4gICAgICAgIEEgPSBzaW4oZCAtIHQpIC8gayxcbiAgICAgICAgeCA9IEEgKiBreDAgKyBCICoga3gxLFxuICAgICAgICB5ID0gQSAqIGt5MCArIEIgKiBreTEsXG4gICAgICAgIHogPSBBICogc3kwICsgQiAqIHN5MTtcbiAgICByZXR1cm4gW1xuICAgICAgYXRhbjIoeSwgeCkgKiBkZWdyZWVzLFxuICAgICAgYXRhbjIoeiwgc3FydCh4ICogeCArIHkgKiB5KSkgKiBkZWdyZWVzXG4gICAgXTtcbiAgfSA6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBbeDAgKiBkZWdyZWVzLCB5MCAqIGRlZ3JlZXNdO1xuICB9O1xuXG4gIGludGVycG9sYXRlLmRpc3RhbmNlID0gZDtcblxuICByZXR1cm4gaW50ZXJwb2xhdGU7XG59XG4iLCJpbXBvcnQgYWRkZXIgZnJvbSBcIi4uL2FkZGVyLmpzXCI7XG5pbXBvcnQge2Fic30gZnJvbSBcIi4uL21hdGguanNcIjtcbmltcG9ydCBub29wIGZyb20gXCIuLi9ub29wLmpzXCI7XG5cbnZhciBhcmVhU3VtID0gYWRkZXIoKSxcbiAgICBhcmVhUmluZ1N1bSA9IGFkZGVyKCksXG4gICAgeDAwLFxuICAgIHkwMCxcbiAgICB4MCxcbiAgICB5MDtcblxudmFyIGFyZWFTdHJlYW0gPSB7XG4gIHBvaW50OiBub29wLFxuICBsaW5lU3RhcnQ6IG5vb3AsXG4gIGxpbmVFbmQ6IG5vb3AsXG4gIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgYXJlYVN0cmVhbS5saW5lU3RhcnQgPSBhcmVhUmluZ1N0YXJ0O1xuICAgIGFyZWFTdHJlYW0ubGluZUVuZCA9IGFyZWFSaW5nRW5kO1xuICB9LFxuICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICBhcmVhU3RyZWFtLmxpbmVTdGFydCA9IGFyZWFTdHJlYW0ubGluZUVuZCA9IGFyZWFTdHJlYW0ucG9pbnQgPSBub29wO1xuICAgIGFyZWFTdW0uYWRkKGFicyhhcmVhUmluZ1N1bSkpO1xuICAgIGFyZWFSaW5nU3VtLnJlc2V0KCk7XG4gIH0sXG4gIHJlc3VsdDogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGFyZWEgPSBhcmVhU3VtIC8gMjtcbiAgICBhcmVhU3VtLnJlc2V0KCk7XG4gICAgcmV0dXJuIGFyZWE7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGFyZWFSaW5nU3RhcnQoKSB7XG4gIGFyZWFTdHJlYW0ucG9pbnQgPSBhcmVhUG9pbnRGaXJzdDtcbn1cblxuZnVuY3Rpb24gYXJlYVBvaW50Rmlyc3QoeCwgeSkge1xuICBhcmVhU3RyZWFtLnBvaW50ID0gYXJlYVBvaW50O1xuICB4MDAgPSB4MCA9IHgsIHkwMCA9IHkwID0geTtcbn1cblxuZnVuY3Rpb24gYXJlYVBvaW50KHgsIHkpIHtcbiAgYXJlYVJpbmdTdW0uYWRkKHkwICogeCAtIHgwICogeSk7XG4gIHgwID0geCwgeTAgPSB5O1xufVxuXG5mdW5jdGlvbiBhcmVhUmluZ0VuZCgpIHtcbiAgYXJlYVBvaW50KHgwMCwgeTAwKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYXJlYVN0cmVhbTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIHg7XG59XG4iLCJpbXBvcnQgbm9vcCBmcm9tIFwiLi4vbm9vcC5qc1wiO1xuXG52YXIgeDAgPSBJbmZpbml0eSxcbiAgICB5MCA9IHgwLFxuICAgIHgxID0gLXgwLFxuICAgIHkxID0geDE7XG5cbnZhciBib3VuZHNTdHJlYW0gPSB7XG4gIHBvaW50OiBib3VuZHNQb2ludCxcbiAgbGluZVN0YXJ0OiBub29wLFxuICBsaW5lRW5kOiBub29wLFxuICBwb2x5Z29uU3RhcnQ6IG5vb3AsXG4gIHBvbHlnb25FbmQ6IG5vb3AsXG4gIHJlc3VsdDogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGJvdW5kcyA9IFtbeDAsIHkwXSwgW3gxLCB5MV1dO1xuICAgIHgxID0geTEgPSAtKHkwID0geDAgPSBJbmZpbml0eSk7XG4gICAgcmV0dXJuIGJvdW5kcztcbiAgfVxufTtcblxuZnVuY3Rpb24gYm91bmRzUG9pbnQoeCwgeSkge1xuICBpZiAoeCA8IHgwKSB4MCA9IHg7XG4gIGlmICh4ID4geDEpIHgxID0geDtcbiAgaWYgKHkgPCB5MCkgeTAgPSB5O1xuICBpZiAoeSA+IHkxKSB5MSA9IHk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGJvdW5kc1N0cmVhbTtcbiIsImltcG9ydCB7c3FydH0gZnJvbSBcIi4uL21hdGguanNcIjtcblxuLy8gVE9ETyBFbmZvcmNlIHBvc2l0aXZlIGFyZWEgZm9yIGV4dGVyaW9yLCBuZWdhdGl2ZSBhcmVhIGZvciBpbnRlcmlvcj9cblxudmFyIFgwID0gMCxcbiAgICBZMCA9IDAsXG4gICAgWjAgPSAwLFxuICAgIFgxID0gMCxcbiAgICBZMSA9IDAsXG4gICAgWjEgPSAwLFxuICAgIFgyID0gMCxcbiAgICBZMiA9IDAsXG4gICAgWjIgPSAwLFxuICAgIHgwMCxcbiAgICB5MDAsXG4gICAgeDAsXG4gICAgeTA7XG5cbnZhciBjZW50cm9pZFN0cmVhbSA9IHtcbiAgcG9pbnQ6IGNlbnRyb2lkUG9pbnQsXG4gIGxpbmVTdGFydDogY2VudHJvaWRMaW5lU3RhcnQsXG4gIGxpbmVFbmQ6IGNlbnRyb2lkTGluZUVuZCxcbiAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICBjZW50cm9pZFN0cmVhbS5saW5lU3RhcnQgPSBjZW50cm9pZFJpbmdTdGFydDtcbiAgICBjZW50cm9pZFN0cmVhbS5saW5lRW5kID0gY2VudHJvaWRSaW5nRW5kO1xuICB9LFxuICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICBjZW50cm9pZFN0cmVhbS5wb2ludCA9IGNlbnRyb2lkUG9pbnQ7XG4gICAgY2VudHJvaWRTdHJlYW0ubGluZVN0YXJ0ID0gY2VudHJvaWRMaW5lU3RhcnQ7XG4gICAgY2VudHJvaWRTdHJlYW0ubGluZUVuZCA9IGNlbnRyb2lkTGluZUVuZDtcbiAgfSxcbiAgcmVzdWx0OiBmdW5jdGlvbigpIHtcbiAgICB2YXIgY2VudHJvaWQgPSBaMiA/IFtYMiAvIFoyLCBZMiAvIFoyXVxuICAgICAgICA6IFoxID8gW1gxIC8gWjEsIFkxIC8gWjFdXG4gICAgICAgIDogWjAgPyBbWDAgLyBaMCwgWTAgLyBaMF1cbiAgICAgICAgOiBbTmFOLCBOYU5dO1xuICAgIFgwID0gWTAgPSBaMCA9XG4gICAgWDEgPSBZMSA9IFoxID1cbiAgICBYMiA9IFkyID0gWjIgPSAwO1xuICAgIHJldHVybiBjZW50cm9pZDtcbiAgfVxufTtcblxuZnVuY3Rpb24gY2VudHJvaWRQb2ludCh4LCB5KSB7XG4gIFgwICs9IHg7XG4gIFkwICs9IHk7XG4gICsrWjA7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkTGluZVN0YXJ0KCkge1xuICBjZW50cm9pZFN0cmVhbS5wb2ludCA9IGNlbnRyb2lkUG9pbnRGaXJzdExpbmU7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkUG9pbnRGaXJzdExpbmUoeCwgeSkge1xuICBjZW50cm9pZFN0cmVhbS5wb2ludCA9IGNlbnRyb2lkUG9pbnRMaW5lO1xuICBjZW50cm9pZFBvaW50KHgwID0geCwgeTAgPSB5KTtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRQb2ludExpbmUoeCwgeSkge1xuICB2YXIgZHggPSB4IC0geDAsIGR5ID0geSAtIHkwLCB6ID0gc3FydChkeCAqIGR4ICsgZHkgKiBkeSk7XG4gIFgxICs9IHogKiAoeDAgKyB4KSAvIDI7XG4gIFkxICs9IHogKiAoeTAgKyB5KSAvIDI7XG4gIFoxICs9IHo7XG4gIGNlbnRyb2lkUG9pbnQoeDAgPSB4LCB5MCA9IHkpO1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZExpbmVFbmQoKSB7XG4gIGNlbnRyb2lkU3RyZWFtLnBvaW50ID0gY2VudHJvaWRQb2ludDtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRSaW5nU3RhcnQoKSB7XG4gIGNlbnRyb2lkU3RyZWFtLnBvaW50ID0gY2VudHJvaWRQb2ludEZpcnN0UmluZztcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRSaW5nRW5kKCkge1xuICBjZW50cm9pZFBvaW50UmluZyh4MDAsIHkwMCk7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkUG9pbnRGaXJzdFJpbmcoeCwgeSkge1xuICBjZW50cm9pZFN0cmVhbS5wb2ludCA9IGNlbnRyb2lkUG9pbnRSaW5nO1xuICBjZW50cm9pZFBvaW50KHgwMCA9IHgwID0geCwgeTAwID0geTAgPSB5KTtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRQb2ludFJpbmcoeCwgeSkge1xuICB2YXIgZHggPSB4IC0geDAsXG4gICAgICBkeSA9IHkgLSB5MCxcbiAgICAgIHogPSBzcXJ0KGR4ICogZHggKyBkeSAqIGR5KTtcblxuICBYMSArPSB6ICogKHgwICsgeCkgLyAyO1xuICBZMSArPSB6ICogKHkwICsgeSkgLyAyO1xuICBaMSArPSB6O1xuXG4gIHogPSB5MCAqIHggLSB4MCAqIHk7XG4gIFgyICs9IHogKiAoeDAgKyB4KTtcbiAgWTIgKz0geiAqICh5MCArIHkpO1xuICBaMiArPSB6ICogMztcbiAgY2VudHJvaWRQb2ludCh4MCA9IHgsIHkwID0geSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNlbnRyb2lkU3RyZWFtO1xuIiwiaW1wb3J0IHt0YXV9IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5pbXBvcnQgbm9vcCBmcm9tIFwiLi4vbm9vcC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQYXRoQ29udGV4dChjb250ZXh0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xufVxuXG5QYXRoQ29udGV4dC5wcm90b3R5cGUgPSB7XG4gIF9yYWRpdXM6IDQuNSxcbiAgcG9pbnRSYWRpdXM6IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gdGhpcy5fcmFkaXVzID0gXywgdGhpcztcbiAgfSxcbiAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gMDtcbiAgfSxcbiAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IE5hTjtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9saW5lID09PSAwKSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIHRoaXMuX3BvaW50ID0gTmFOO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDoge1xuICAgICAgICB0aGlzLl9jb250ZXh0Lm1vdmVUbyh4LCB5KTtcbiAgICAgICAgdGhpcy5fcG9pbnQgPSAxO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgMToge1xuICAgICAgICB0aGlzLl9jb250ZXh0LmxpbmVUbyh4LCB5KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBkZWZhdWx0OiB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubW92ZVRvKHggKyB0aGlzLl9yYWRpdXMsIHkpO1xuICAgICAgICB0aGlzLl9jb250ZXh0LmFyYyh4LCB5LCB0aGlzLl9yYWRpdXMsIDAsIHRhdSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgcmVzdWx0OiBub29wXG59O1xuIiwiaW1wb3J0IGFkZGVyIGZyb20gXCIuLi9hZGRlci5qc1wiO1xuaW1wb3J0IHtzcXJ0fSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuaW1wb3J0IG5vb3AgZnJvbSBcIi4uL25vb3AuanNcIjtcblxudmFyIGxlbmd0aFN1bSA9IGFkZGVyKCksXG4gICAgbGVuZ3RoUmluZyxcbiAgICB4MDAsXG4gICAgeTAwLFxuICAgIHgwLFxuICAgIHkwO1xuXG52YXIgbGVuZ3RoU3RyZWFtID0ge1xuICBwb2ludDogbm9vcCxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICBsZW5ndGhTdHJlYW0ucG9pbnQgPSBsZW5ndGhQb2ludEZpcnN0O1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBpZiAobGVuZ3RoUmluZykgbGVuZ3RoUG9pbnQoeDAwLCB5MDApO1xuICAgIGxlbmd0aFN0cmVhbS5wb2ludCA9IG5vb3A7XG4gIH0sXG4gIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgbGVuZ3RoUmluZyA9IHRydWU7XG4gIH0sXG4gIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGxlbmd0aFJpbmcgPSBudWxsO1xuICB9LFxuICByZXN1bHQ6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBsZW5ndGggPSArbGVuZ3RoU3VtO1xuICAgIGxlbmd0aFN1bS5yZXNldCgpO1xuICAgIHJldHVybiBsZW5ndGg7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGxlbmd0aFBvaW50Rmlyc3QoeCwgeSkge1xuICBsZW5ndGhTdHJlYW0ucG9pbnQgPSBsZW5ndGhQb2ludDtcbiAgeDAwID0geDAgPSB4LCB5MDAgPSB5MCA9IHk7XG59XG5cbmZ1bmN0aW9uIGxlbmd0aFBvaW50KHgsIHkpIHtcbiAgeDAgLT0geCwgeTAgLT0geTtcbiAgbGVuZ3RoU3VtLmFkZChzcXJ0KHgwICogeDAgKyB5MCAqIHkwKSk7XG4gIHgwID0geCwgeTAgPSB5O1xufVxuXG5leHBvcnQgZGVmYXVsdCBsZW5ndGhTdHJlYW07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQYXRoU3RyaW5nKCkge1xuICB0aGlzLl9zdHJpbmcgPSBbXTtcbn1cblxuUGF0aFN0cmluZy5wcm90b3R5cGUgPSB7XG4gIF9yYWRpdXM6IDQuNSxcbiAgX2NpcmNsZTogY2lyY2xlKDQuNSksXG4gIHBvaW50UmFkaXVzOiBmdW5jdGlvbihfKSB7XG4gICAgaWYgKChfID0gK18pICE9PSB0aGlzLl9yYWRpdXMpIHRoaXMuX3JhZGl1cyA9IF8sIHRoaXMuX2NpcmNsZSA9IG51bGw7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG4gIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fbGluZSA9PT0gMCkgdGhpcy5fc3RyaW5nLnB1c2goXCJaXCIpO1xuICAgIHRoaXMuX3BvaW50ID0gTmFOO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDoge1xuICAgICAgICB0aGlzLl9zdHJpbmcucHVzaChcIk1cIiwgeCwgXCIsXCIsIHkpO1xuICAgICAgICB0aGlzLl9wb2ludCA9IDE7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAxOiB7XG4gICAgICAgIHRoaXMuX3N0cmluZy5wdXNoKFwiTFwiLCB4LCBcIixcIiwgeSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgZGVmYXVsdDoge1xuICAgICAgICBpZiAodGhpcy5fY2lyY2xlID09IG51bGwpIHRoaXMuX2NpcmNsZSA9IGNpcmNsZSh0aGlzLl9yYWRpdXMpO1xuICAgICAgICB0aGlzLl9zdHJpbmcucHVzaChcIk1cIiwgeCwgXCIsXCIsIHksIHRoaXMuX2NpcmNsZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgcmVzdWx0OiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fc3RyaW5nLmxlbmd0aCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuX3N0cmluZy5qb2luKFwiXCIpO1xuICAgICAgdGhpcy5fc3RyaW5nID0gW107XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGNpcmNsZShyYWRpdXMpIHtcbiAgcmV0dXJuIFwibTAsXCIgKyByYWRpdXNcbiAgICAgICsgXCJhXCIgKyByYWRpdXMgKyBcIixcIiArIHJhZGl1cyArIFwiIDAgMSwxIDAsXCIgKyAtMiAqIHJhZGl1c1xuICAgICAgKyBcImFcIiArIHJhZGl1cyArIFwiLFwiICsgcmFkaXVzICsgXCIgMCAxLDEgMCxcIiArIDIgKiByYWRpdXNcbiAgICAgICsgXCJ6XCI7XG59XG4iLCJpbXBvcnQgaWRlbnRpdHkgZnJvbSBcIi4uL2lkZW50aXR5LmpzXCI7XG5pbXBvcnQgc3RyZWFtIGZyb20gXCIuLi9zdHJlYW0uanNcIjtcbmltcG9ydCBwYXRoQXJlYSBmcm9tIFwiLi9hcmVhLmpzXCI7XG5pbXBvcnQgcGF0aEJvdW5kcyBmcm9tIFwiLi9ib3VuZHMuanNcIjtcbmltcG9ydCBwYXRoQ2VudHJvaWQgZnJvbSBcIi4vY2VudHJvaWQuanNcIjtcbmltcG9ydCBQYXRoQ29udGV4dCBmcm9tIFwiLi9jb250ZXh0LmpzXCI7XG5pbXBvcnQgcGF0aE1lYXN1cmUgZnJvbSBcIi4vbWVhc3VyZS5qc1wiO1xuaW1wb3J0IFBhdGhTdHJpbmcgZnJvbSBcIi4vc3RyaW5nLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHByb2plY3Rpb24sIGNvbnRleHQpIHtcbiAgdmFyIHBvaW50UmFkaXVzID0gNC41LFxuICAgICAgcHJvamVjdGlvblN0cmVhbSxcbiAgICAgIGNvbnRleHRTdHJlYW07XG5cbiAgZnVuY3Rpb24gcGF0aChvYmplY3QpIHtcbiAgICBpZiAob2JqZWN0KSB7XG4gICAgICBpZiAodHlwZW9mIHBvaW50UmFkaXVzID09PSBcImZ1bmN0aW9uXCIpIGNvbnRleHRTdHJlYW0ucG9pbnRSYWRpdXMoK3BvaW50UmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICAgICAgc3RyZWFtKG9iamVjdCwgcHJvamVjdGlvblN0cmVhbShjb250ZXh0U3RyZWFtKSk7XG4gICAgfVxuICAgIHJldHVybiBjb250ZXh0U3RyZWFtLnJlc3VsdCgpO1xuICB9XG5cbiAgcGF0aC5hcmVhID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgc3RyZWFtKG9iamVjdCwgcHJvamVjdGlvblN0cmVhbShwYXRoQXJlYSkpO1xuICAgIHJldHVybiBwYXRoQXJlYS5yZXN1bHQoKTtcbiAgfTtcblxuICBwYXRoLm1lYXN1cmUgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICBzdHJlYW0ob2JqZWN0LCBwcm9qZWN0aW9uU3RyZWFtKHBhdGhNZWFzdXJlKSk7XG4gICAgcmV0dXJuIHBhdGhNZWFzdXJlLnJlc3VsdCgpO1xuICB9O1xuXG4gIHBhdGguYm91bmRzID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgc3RyZWFtKG9iamVjdCwgcHJvamVjdGlvblN0cmVhbShwYXRoQm91bmRzKSk7XG4gICAgcmV0dXJuIHBhdGhCb3VuZHMucmVzdWx0KCk7XG4gIH07XG5cbiAgcGF0aC5jZW50cm9pZCA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHN0cmVhbShvYmplY3QsIHByb2plY3Rpb25TdHJlYW0ocGF0aENlbnRyb2lkKSk7XG4gICAgcmV0dXJuIHBhdGhDZW50cm9pZC5yZXN1bHQoKTtcbiAgfTtcblxuICBwYXRoLnByb2plY3Rpb24gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocHJvamVjdGlvblN0cmVhbSA9IF8gPT0gbnVsbCA/IChwcm9qZWN0aW9uID0gbnVsbCwgaWRlbnRpdHkpIDogKHByb2plY3Rpb24gPSBfKS5zdHJlYW0sIHBhdGgpIDogcHJvamVjdGlvbjtcbiAgfTtcblxuICBwYXRoLmNvbnRleHQgPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gY29udGV4dDtcbiAgICBjb250ZXh0U3RyZWFtID0gXyA9PSBudWxsID8gKGNvbnRleHQgPSBudWxsLCBuZXcgUGF0aFN0cmluZykgOiBuZXcgUGF0aENvbnRleHQoY29udGV4dCA9IF8pO1xuICAgIGlmICh0eXBlb2YgcG9pbnRSYWRpdXMgIT09IFwiZnVuY3Rpb25cIikgY29udGV4dFN0cmVhbS5wb2ludFJhZGl1cyhwb2ludFJhZGl1cyk7XG4gICAgcmV0dXJuIHBhdGg7XG4gIH07XG5cbiAgcGF0aC5wb2ludFJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBwb2ludFJhZGl1cztcbiAgICBwb2ludFJhZGl1cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogKGNvbnRleHRTdHJlYW0ucG9pbnRSYWRpdXMoK18pLCArXyk7XG4gICAgcmV0dXJuIHBhdGg7XG4gIH07XG5cbiAgcmV0dXJuIHBhdGgucHJvamVjdGlvbihwcm9qZWN0aW9uKS5jb250ZXh0KGNvbnRleHQpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obWV0aG9kcykge1xuICByZXR1cm4ge1xuICAgIHN0cmVhbTogdHJhbnNmb3JtZXIobWV0aG9kcylcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRyYW5zZm9ybWVyKG1ldGhvZHMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHN0cmVhbSkge1xuICAgIHZhciBzID0gbmV3IFRyYW5zZm9ybVN0cmVhbTtcbiAgICBmb3IgKHZhciBrZXkgaW4gbWV0aG9kcykgc1trZXldID0gbWV0aG9kc1trZXldO1xuICAgIHMuc3RyZWFtID0gc3RyZWFtO1xuICAgIHJldHVybiBzO1xuICB9O1xufVxuXG5mdW5jdGlvbiBUcmFuc2Zvcm1TdHJlYW0oKSB7fVxuXG5UcmFuc2Zvcm1TdHJlYW0ucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogVHJhbnNmb3JtU3RyZWFtLFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkgeyB0aGlzLnN0cmVhbS5wb2ludCh4LCB5KTsgfSxcbiAgc3BoZXJlOiBmdW5jdGlvbigpIHsgdGhpcy5zdHJlYW0uc3BoZXJlKCk7IH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7IHRoaXMuc3RyZWFtLmxpbmVTdGFydCgpOyB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHsgdGhpcy5zdHJlYW0ubGluZUVuZCgpOyB9LFxuICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkgeyB0aGlzLnN0cmVhbS5wb2x5Z29uU3RhcnQoKTsgfSxcbiAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7IHRoaXMuc3RyZWFtLnBvbHlnb25FbmQoKTsgfVxufTtcbiIsImltcG9ydCB7ZGVmYXVsdCBhcyBnZW9TdHJlYW19IGZyb20gXCIuLi9zdHJlYW0uanNcIjtcbmltcG9ydCBib3VuZHNTdHJlYW0gZnJvbSBcIi4uL3BhdGgvYm91bmRzLmpzXCI7XG5cbmZ1bmN0aW9uIGZpdChwcm9qZWN0aW9uLCBmaXRCb3VuZHMsIG9iamVjdCkge1xuICB2YXIgY2xpcCA9IHByb2plY3Rpb24uY2xpcEV4dGVudCAmJiBwcm9qZWN0aW9uLmNsaXBFeHRlbnQoKTtcbiAgcHJvamVjdGlvbi5zY2FsZSgxNTApLnRyYW5zbGF0ZShbMCwgMF0pO1xuICBpZiAoY2xpcCAhPSBudWxsKSBwcm9qZWN0aW9uLmNsaXBFeHRlbnQobnVsbCk7XG4gIGdlb1N0cmVhbShvYmplY3QsIHByb2plY3Rpb24uc3RyZWFtKGJvdW5kc1N0cmVhbSkpO1xuICBmaXRCb3VuZHMoYm91bmRzU3RyZWFtLnJlc3VsdCgpKTtcbiAgaWYgKGNsaXAgIT0gbnVsbCkgcHJvamVjdGlvbi5jbGlwRXh0ZW50KGNsaXApO1xuICByZXR1cm4gcHJvamVjdGlvbjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZpdEV4dGVudChwcm9qZWN0aW9uLCBleHRlbnQsIG9iamVjdCkge1xuICByZXR1cm4gZml0KHByb2plY3Rpb24sIGZ1bmN0aW9uKGIpIHtcbiAgICB2YXIgdyA9IGV4dGVudFsxXVswXSAtIGV4dGVudFswXVswXSxcbiAgICAgICAgaCA9IGV4dGVudFsxXVsxXSAtIGV4dGVudFswXVsxXSxcbiAgICAgICAgayA9IE1hdGgubWluKHcgLyAoYlsxXVswXSAtIGJbMF1bMF0pLCBoIC8gKGJbMV1bMV0gLSBiWzBdWzFdKSksXG4gICAgICAgIHggPSArZXh0ZW50WzBdWzBdICsgKHcgLSBrICogKGJbMV1bMF0gKyBiWzBdWzBdKSkgLyAyLFxuICAgICAgICB5ID0gK2V4dGVudFswXVsxXSArIChoIC0gayAqIChiWzFdWzFdICsgYlswXVsxXSkpIC8gMjtcbiAgICBwcm9qZWN0aW9uLnNjYWxlKDE1MCAqIGspLnRyYW5zbGF0ZShbeCwgeV0pO1xuICB9LCBvYmplY3QpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZml0U2l6ZShwcm9qZWN0aW9uLCBzaXplLCBvYmplY3QpIHtcbiAgcmV0dXJuIGZpdEV4dGVudChwcm9qZWN0aW9uLCBbWzAsIDBdLCBzaXplXSwgb2JqZWN0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZpdFdpZHRoKHByb2plY3Rpb24sIHdpZHRoLCBvYmplY3QpIHtcbiAgcmV0dXJuIGZpdChwcm9qZWN0aW9uLCBmdW5jdGlvbihiKSB7XG4gICAgdmFyIHcgPSArd2lkdGgsXG4gICAgICAgIGsgPSB3IC8gKGJbMV1bMF0gLSBiWzBdWzBdKSxcbiAgICAgICAgeCA9ICh3IC0gayAqIChiWzFdWzBdICsgYlswXVswXSkpIC8gMixcbiAgICAgICAgeSA9IC1rICogYlswXVsxXTtcbiAgICBwcm9qZWN0aW9uLnNjYWxlKDE1MCAqIGspLnRyYW5zbGF0ZShbeCwgeV0pO1xuICB9LCBvYmplY3QpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZml0SGVpZ2h0KHByb2plY3Rpb24sIGhlaWdodCwgb2JqZWN0KSB7XG4gIHJldHVybiBmaXQocHJvamVjdGlvbiwgZnVuY3Rpb24oYikge1xuICAgIHZhciBoID0gK2hlaWdodCxcbiAgICAgICAgayA9IGggLyAoYlsxXVsxXSAtIGJbMF1bMV0pLFxuICAgICAgICB4ID0gLWsgKiBiWzBdWzBdLFxuICAgICAgICB5ID0gKGggLSBrICogKGJbMV1bMV0gKyBiWzBdWzFdKSkgLyAyO1xuICAgIHByb2plY3Rpb24uc2NhbGUoMTUwICogaykudHJhbnNsYXRlKFt4LCB5XSk7XG4gIH0sIG9iamVjdCk7XG59XG4iLCJpbXBvcnQge2NhcnRlc2lhbn0gZnJvbSBcIi4uL2NhcnRlc2lhbi5qc1wiO1xuaW1wb3J0IHthYnMsIGFzaW4sIGF0YW4yLCBjb3MsIGVwc2lsb24sIHJhZGlhbnMsIHNxcnR9IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5pbXBvcnQge3RyYW5zZm9ybWVyfSBmcm9tIFwiLi4vdHJhbnNmb3JtLmpzXCI7XG5cbnZhciBtYXhEZXB0aCA9IDE2LCAvLyBtYXhpbXVtIGRlcHRoIG9mIHN1YmRpdmlzaW9uXG4gICAgY29zTWluRGlzdGFuY2UgPSBjb3MoMzAgKiByYWRpYW5zKTsgLy8gY29zKG1pbmltdW0gYW5ndWxhciBkaXN0YW5jZSlcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocHJvamVjdCwgZGVsdGEyKSB7XG4gIHJldHVybiArZGVsdGEyID8gcmVzYW1wbGUocHJvamVjdCwgZGVsdGEyKSA6IHJlc2FtcGxlTm9uZShwcm9qZWN0KTtcbn1cblxuZnVuY3Rpb24gcmVzYW1wbGVOb25lKHByb2plY3QpIHtcbiAgcmV0dXJuIHRyYW5zZm9ybWVyKHtcbiAgICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgICAgeCA9IHByb2plY3QoeCwgeSk7XG4gICAgICB0aGlzLnN0cmVhbS5wb2ludCh4WzBdLCB4WzFdKTtcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiByZXNhbXBsZShwcm9qZWN0LCBkZWx0YTIpIHtcblxuICBmdW5jdGlvbiByZXNhbXBsZUxpbmVUbyh4MCwgeTAsIGxhbWJkYTAsIGEwLCBiMCwgYzAsIHgxLCB5MSwgbGFtYmRhMSwgYTEsIGIxLCBjMSwgZGVwdGgsIHN0cmVhbSkge1xuICAgIHZhciBkeCA9IHgxIC0geDAsXG4gICAgICAgIGR5ID0geTEgLSB5MCxcbiAgICAgICAgZDIgPSBkeCAqIGR4ICsgZHkgKiBkeTtcbiAgICBpZiAoZDIgPiA0ICogZGVsdGEyICYmIGRlcHRoLS0pIHtcbiAgICAgIHZhciBhID0gYTAgKyBhMSxcbiAgICAgICAgICBiID0gYjAgKyBiMSxcbiAgICAgICAgICBjID0gYzAgKyBjMSxcbiAgICAgICAgICBtID0gc3FydChhICogYSArIGIgKiBiICsgYyAqIGMpLFxuICAgICAgICAgIHBoaTIgPSBhc2luKGMgLz0gbSksXG4gICAgICAgICAgbGFtYmRhMiA9IGFicyhhYnMoYykgLSAxKSA8IGVwc2lsb24gfHwgYWJzKGxhbWJkYTAgLSBsYW1iZGExKSA8IGVwc2lsb24gPyAobGFtYmRhMCArIGxhbWJkYTEpIC8gMiA6IGF0YW4yKGIsIGEpLFxuICAgICAgICAgIHAgPSBwcm9qZWN0KGxhbWJkYTIsIHBoaTIpLFxuICAgICAgICAgIHgyID0gcFswXSxcbiAgICAgICAgICB5MiA9IHBbMV0sXG4gICAgICAgICAgZHgyID0geDIgLSB4MCxcbiAgICAgICAgICBkeTIgPSB5MiAtIHkwLFxuICAgICAgICAgIGR6ID0gZHkgKiBkeDIgLSBkeCAqIGR5MjtcbiAgICAgIGlmIChkeiAqIGR6IC8gZDIgPiBkZWx0YTIgLy8gcGVycGVuZGljdWxhciBwcm9qZWN0ZWQgZGlzdGFuY2VcbiAgICAgICAgICB8fCBhYnMoKGR4ICogZHgyICsgZHkgKiBkeTIpIC8gZDIgLSAwLjUpID4gMC4zIC8vIG1pZHBvaW50IGNsb3NlIHRvIGFuIGVuZFxuICAgICAgICAgIHx8IGEwICogYTEgKyBiMCAqIGIxICsgYzAgKiBjMSA8IGNvc01pbkRpc3RhbmNlKSB7IC8vIGFuZ3VsYXIgZGlzdGFuY2VcbiAgICAgICAgcmVzYW1wbGVMaW5lVG8oeDAsIHkwLCBsYW1iZGEwLCBhMCwgYjAsIGMwLCB4MiwgeTIsIGxhbWJkYTIsIGEgLz0gbSwgYiAvPSBtLCBjLCBkZXB0aCwgc3RyZWFtKTtcbiAgICAgICAgc3RyZWFtLnBvaW50KHgyLCB5Mik7XG4gICAgICAgIHJlc2FtcGxlTGluZVRvKHgyLCB5MiwgbGFtYmRhMiwgYSwgYiwgYywgeDEsIHkxLCBsYW1iZGExLCBhMSwgYjEsIGMxLCBkZXB0aCwgc3RyZWFtKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uKHN0cmVhbSkge1xuICAgIHZhciBsYW1iZGEwMCwgeDAwLCB5MDAsIGEwMCwgYjAwLCBjMDAsIC8vIGZpcnN0IHBvaW50XG4gICAgICAgIGxhbWJkYTAsIHgwLCB5MCwgYTAsIGIwLCBjMDsgLy8gcHJldmlvdXMgcG9pbnRcblxuICAgIHZhciByZXNhbXBsZVN0cmVhbSA9IHtcbiAgICAgIHBvaW50OiBwb2ludCxcbiAgICAgIGxpbmVTdGFydDogbGluZVN0YXJ0LFxuICAgICAgbGluZUVuZDogbGluZUVuZCxcbiAgICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7IHN0cmVhbS5wb2x5Z29uU3RhcnQoKTsgcmVzYW1wbGVTdHJlYW0ubGluZVN0YXJ0ID0gcmluZ1N0YXJ0OyB9LFxuICAgICAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7IHN0cmVhbS5wb2x5Z29uRW5kKCk7IHJlc2FtcGxlU3RyZWFtLmxpbmVTdGFydCA9IGxpbmVTdGFydDsgfVxuICAgIH07XG5cbiAgICBmdW5jdGlvbiBwb2ludCh4LCB5KSB7XG4gICAgICB4ID0gcHJvamVjdCh4LCB5KTtcbiAgICAgIHN0cmVhbS5wb2ludCh4WzBdLCB4WzFdKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBsaW5lU3RhcnQoKSB7XG4gICAgICB4MCA9IE5hTjtcbiAgICAgIHJlc2FtcGxlU3RyZWFtLnBvaW50ID0gbGluZVBvaW50O1xuICAgICAgc3RyZWFtLmxpbmVTdGFydCgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxpbmVQb2ludChsYW1iZGEsIHBoaSkge1xuICAgICAgdmFyIGMgPSBjYXJ0ZXNpYW4oW2xhbWJkYSwgcGhpXSksIHAgPSBwcm9qZWN0KGxhbWJkYSwgcGhpKTtcbiAgICAgIHJlc2FtcGxlTGluZVRvKHgwLCB5MCwgbGFtYmRhMCwgYTAsIGIwLCBjMCwgeDAgPSBwWzBdLCB5MCA9IHBbMV0sIGxhbWJkYTAgPSBsYW1iZGEsIGEwID0gY1swXSwgYjAgPSBjWzFdLCBjMCA9IGNbMl0sIG1heERlcHRoLCBzdHJlYW0pO1xuICAgICAgc3RyZWFtLnBvaW50KHgwLCB5MCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbGluZUVuZCgpIHtcbiAgICAgIHJlc2FtcGxlU3RyZWFtLnBvaW50ID0gcG9pbnQ7XG4gICAgICBzdHJlYW0ubGluZUVuZCgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJpbmdTdGFydCgpIHtcbiAgICAgIGxpbmVTdGFydCgpO1xuICAgICAgcmVzYW1wbGVTdHJlYW0ucG9pbnQgPSByaW5nUG9pbnQ7XG4gICAgICByZXNhbXBsZVN0cmVhbS5saW5lRW5kID0gcmluZ0VuZDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByaW5nUG9pbnQobGFtYmRhLCBwaGkpIHtcbiAgICAgIGxpbmVQb2ludChsYW1iZGEwMCA9IGxhbWJkYSwgcGhpKSwgeDAwID0geDAsIHkwMCA9IHkwLCBhMDAgPSBhMCwgYjAwID0gYjAsIGMwMCA9IGMwO1xuICAgICAgcmVzYW1wbGVTdHJlYW0ucG9pbnQgPSBsaW5lUG9pbnQ7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmluZ0VuZCgpIHtcbiAgICAgIHJlc2FtcGxlTGluZVRvKHgwLCB5MCwgbGFtYmRhMCwgYTAsIGIwLCBjMCwgeDAwLCB5MDAsIGxhbWJkYTAwLCBhMDAsIGIwMCwgYzAwLCBtYXhEZXB0aCwgc3RyZWFtKTtcbiAgICAgIHJlc2FtcGxlU3RyZWFtLmxpbmVFbmQgPSBsaW5lRW5kO1xuICAgICAgbGluZUVuZCgpO1xuICAgIH1cblxuICAgIHJldHVybiByZXNhbXBsZVN0cmVhbTtcbiAgfTtcbn1cbiIsImltcG9ydCBjbGlwQW50aW1lcmlkaWFuIGZyb20gXCIuLi9jbGlwL2FudGltZXJpZGlhbi5qc1wiO1xuaW1wb3J0IGNsaXBDaXJjbGUgZnJvbSBcIi4uL2NsaXAvY2lyY2xlLmpzXCI7XG5pbXBvcnQgY2xpcFJlY3RhbmdsZSBmcm9tIFwiLi4vY2xpcC9yZWN0YW5nbGUuanNcIjtcbmltcG9ydCBjb21wb3NlIGZyb20gXCIuLi9jb21wb3NlLmpzXCI7XG5pbXBvcnQgaWRlbnRpdHkgZnJvbSBcIi4uL2lkZW50aXR5LmpzXCI7XG5pbXBvcnQge2NvcywgZGVncmVlcywgcmFkaWFucywgc2luLCBzcXJ0fSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuaW1wb3J0IHtyb3RhdGVSYWRpYW5zfSBmcm9tIFwiLi4vcm90YXRpb24uanNcIjtcbmltcG9ydCB7dHJhbnNmb3JtZXJ9IGZyb20gXCIuLi90cmFuc2Zvcm0uanNcIjtcbmltcG9ydCB7Zml0RXh0ZW50LCBmaXRTaXplLCBmaXRXaWR0aCwgZml0SGVpZ2h0fSBmcm9tIFwiLi9maXQuanNcIjtcbmltcG9ydCByZXNhbXBsZSBmcm9tIFwiLi9yZXNhbXBsZS5qc1wiO1xuXG52YXIgdHJhbnNmb3JtUmFkaWFucyA9IHRyYW5zZm9ybWVyKHtcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB0aGlzLnN0cmVhbS5wb2ludCh4ICogcmFkaWFucywgeSAqIHJhZGlhbnMpO1xuICB9XG59KTtcblxuZnVuY3Rpb24gdHJhbnNmb3JtUm90YXRlKHJvdGF0ZSkge1xuICByZXR1cm4gdHJhbnNmb3JtZXIoe1xuICAgIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgICB2YXIgciA9IHJvdGF0ZSh4LCB5KTtcbiAgICAgIHJldHVybiB0aGlzLnN0cmVhbS5wb2ludChyWzBdLCByWzFdKTtcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBzY2FsZVRyYW5zbGF0ZShrLCBkeCwgZHkpIHtcbiAgZnVuY3Rpb24gdHJhbnNmb3JtKHgsIHkpIHtcbiAgICByZXR1cm4gW2R4ICsgayAqIHgsIGR5IC0gayAqIHldO1xuICB9XG4gIHRyYW5zZm9ybS5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgcmV0dXJuIFsoeCAtIGR4KSAvIGssIChkeSAtIHkpIC8ga107XG4gIH07XG4gIHJldHVybiB0cmFuc2Zvcm07XG59XG5cbmZ1bmN0aW9uIHNjYWxlVHJhbnNsYXRlUm90YXRlKGssIGR4LCBkeSwgYWxwaGEpIHtcbiAgdmFyIGNvc0FscGhhID0gY29zKGFscGhhKSxcbiAgICAgIHNpbkFscGhhID0gc2luKGFscGhhKSxcbiAgICAgIGEgPSBjb3NBbHBoYSAqIGssXG4gICAgICBiID0gc2luQWxwaGEgKiBrLFxuICAgICAgYWkgPSBjb3NBbHBoYSAvIGssXG4gICAgICBiaSA9IHNpbkFscGhhIC8gayxcbiAgICAgIGNpID0gKHNpbkFscGhhICogZHkgLSBjb3NBbHBoYSAqIGR4KSAvIGssXG4gICAgICBmaSA9IChzaW5BbHBoYSAqIGR4ICsgY29zQWxwaGEgKiBkeSkgLyBrO1xuICBmdW5jdGlvbiB0cmFuc2Zvcm0oeCwgeSkge1xuICAgIHJldHVybiBbYSAqIHggLSBiICogeSArIGR4LCBkeSAtIGIgKiB4IC0gYSAqIHldO1xuICB9XG4gIHRyYW5zZm9ybS5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgcmV0dXJuIFthaSAqIHggLSBiaSAqIHkgKyBjaSwgZmkgLSBiaSAqIHggLSBhaSAqIHldO1xuICB9O1xuICByZXR1cm4gdHJhbnNmb3JtO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwcm9qZWN0aW9uKHByb2plY3QpIHtcbiAgcmV0dXJuIHByb2plY3Rpb25NdXRhdG9yKGZ1bmN0aW9uKCkgeyByZXR1cm4gcHJvamVjdDsgfSkoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHByb2plY3Rpb25NdXRhdG9yKHByb2plY3RBdCkge1xuICB2YXIgcHJvamVjdCxcbiAgICAgIGsgPSAxNTAsIC8vIHNjYWxlXG4gICAgICB4ID0gNDgwLCB5ID0gMjUwLCAvLyB0cmFuc2xhdGVcbiAgICAgIGxhbWJkYSA9IDAsIHBoaSA9IDAsIC8vIGNlbnRlclxuICAgICAgZGVsdGFMYW1iZGEgPSAwLCBkZWx0YVBoaSA9IDAsIGRlbHRhR2FtbWEgPSAwLCByb3RhdGUsIC8vIHByZS1yb3RhdGVcbiAgICAgIGFscGhhID0gMCwgLy8gcG9zdC1yb3RhdGVcbiAgICAgIHRoZXRhID0gbnVsbCwgcHJlY2xpcCA9IGNsaXBBbnRpbWVyaWRpYW4sIC8vIHByZS1jbGlwIGFuZ2xlXG4gICAgICB4MCA9IG51bGwsIHkwLCB4MSwgeTEsIHBvc3RjbGlwID0gaWRlbnRpdHksIC8vIHBvc3QtY2xpcCBleHRlbnRcbiAgICAgIGRlbHRhMiA9IDAuNSwgLy8gcHJlY2lzaW9uXG4gICAgICBwcm9qZWN0UmVzYW1wbGUsXG4gICAgICBwcm9qZWN0VHJhbnNmb3JtLFxuICAgICAgcHJvamVjdFJvdGF0ZVRyYW5zZm9ybSxcbiAgICAgIGNhY2hlLFxuICAgICAgY2FjaGVTdHJlYW07XG5cbiAgZnVuY3Rpb24gcHJvamVjdGlvbihwb2ludCkge1xuICAgIHJldHVybiBwcm9qZWN0Um90YXRlVHJhbnNmb3JtKHBvaW50WzBdICogcmFkaWFucywgcG9pbnRbMV0gKiByYWRpYW5zKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGludmVydChwb2ludCkge1xuICAgIHBvaW50ID0gcHJvamVjdFJvdGF0ZVRyYW5zZm9ybS5pbnZlcnQocG9pbnRbMF0sIHBvaW50WzFdKTtcbiAgICByZXR1cm4gcG9pbnQgJiYgW3BvaW50WzBdICogZGVncmVlcywgcG9pbnRbMV0gKiBkZWdyZWVzXTtcbiAgfVxuXG4gIHByb2plY3Rpb24uc3RyZWFtID0gZnVuY3Rpb24oc3RyZWFtKSB7XG4gICAgcmV0dXJuIGNhY2hlICYmIGNhY2hlU3RyZWFtID09PSBzdHJlYW0gPyBjYWNoZSA6IGNhY2hlID0gdHJhbnNmb3JtUmFkaWFucyh0cmFuc2Zvcm1Sb3RhdGUocm90YXRlKShwcmVjbGlwKHByb2plY3RSZXNhbXBsZShwb3N0Y2xpcChjYWNoZVN0cmVhbSA9IHN0cmVhbSkpKSkpO1xuICB9O1xuXG4gIHByb2plY3Rpb24ucHJlY2xpcCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwcmVjbGlwID0gXywgdGhldGEgPSB1bmRlZmluZWQsIHJlc2V0KCkpIDogcHJlY2xpcDtcbiAgfTtcblxuICBwcm9qZWN0aW9uLnBvc3RjbGlwID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBvc3RjbGlwID0gXywgeDAgPSB5MCA9IHgxID0geTEgPSBudWxsLCByZXNldCgpKSA6IHBvc3RjbGlwO1xuICB9O1xuXG4gIHByb2plY3Rpb24uY2xpcEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHByZWNsaXAgPSArXyA/IGNsaXBDaXJjbGUodGhldGEgPSBfICogcmFkaWFucykgOiAodGhldGEgPSBudWxsLCBjbGlwQW50aW1lcmlkaWFuKSwgcmVzZXQoKSkgOiB0aGV0YSAqIGRlZ3JlZXM7XG4gIH07XG5cbiAgcHJvamVjdGlvbi5jbGlwRXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBvc3RjbGlwID0gXyA9PSBudWxsID8gKHgwID0geTAgPSB4MSA9IHkxID0gbnVsbCwgaWRlbnRpdHkpIDogY2xpcFJlY3RhbmdsZSh4MCA9ICtfWzBdWzBdLCB5MCA9ICtfWzBdWzFdLCB4MSA9ICtfWzFdWzBdLCB5MSA9ICtfWzFdWzFdKSwgcmVzZXQoKSkgOiB4MCA9PSBudWxsID8gbnVsbCA6IFtbeDAsIHkwXSwgW3gxLCB5MV1dO1xuICB9O1xuXG4gIHByb2plY3Rpb24uc2NhbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoayA9ICtfLCByZWNlbnRlcigpKSA6IGs7XG4gIH07XG5cbiAgcHJvamVjdGlvbi50cmFuc2xhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeCA9ICtfWzBdLCB5ID0gK19bMV0sIHJlY2VudGVyKCkpIDogW3gsIHldO1xuICB9O1xuXG4gIHByb2plY3Rpb24uY2VudGVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGxhbWJkYSA9IF9bMF0gJSAzNjAgKiByYWRpYW5zLCBwaGkgPSBfWzFdICUgMzYwICogcmFkaWFucywgcmVjZW50ZXIoKSkgOiBbbGFtYmRhICogZGVncmVlcywgcGhpICogZGVncmVlc107XG4gIH07XG5cbiAgcHJvamVjdGlvbi5yb3RhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZGVsdGFMYW1iZGEgPSBfWzBdICUgMzYwICogcmFkaWFucywgZGVsdGFQaGkgPSBfWzFdICUgMzYwICogcmFkaWFucywgZGVsdGFHYW1tYSA9IF8ubGVuZ3RoID4gMiA/IF9bMl0gJSAzNjAgKiByYWRpYW5zIDogMCwgcmVjZW50ZXIoKSkgOiBbZGVsdGFMYW1iZGEgKiBkZWdyZWVzLCBkZWx0YVBoaSAqIGRlZ3JlZXMsIGRlbHRhR2FtbWEgKiBkZWdyZWVzXTtcbiAgfTtcblxuICBwcm9qZWN0aW9uLmFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGFscGhhID0gXyAlIDM2MCAqIHJhZGlhbnMsIHJlY2VudGVyKCkpIDogYWxwaGEgKiBkZWdyZWVzO1xuICB9O1xuXG4gIHByb2plY3Rpb24ucHJlY2lzaW9uID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHByb2plY3RSZXNhbXBsZSA9IHJlc2FtcGxlKHByb2plY3RUcmFuc2Zvcm0sIGRlbHRhMiA9IF8gKiBfKSwgcmVzZXQoKSkgOiBzcXJ0KGRlbHRhMik7XG4gIH07XG5cbiAgcHJvamVjdGlvbi5maXRFeHRlbnQgPSBmdW5jdGlvbihleHRlbnQsIG9iamVjdCkge1xuICAgIHJldHVybiBmaXRFeHRlbnQocHJvamVjdGlvbiwgZXh0ZW50LCBvYmplY3QpO1xuICB9O1xuXG4gIHByb2plY3Rpb24uZml0U2l6ZSA9IGZ1bmN0aW9uKHNpemUsIG9iamVjdCkge1xuICAgIHJldHVybiBmaXRTaXplKHByb2plY3Rpb24sIHNpemUsIG9iamVjdCk7XG4gIH07XG5cbiAgcHJvamVjdGlvbi5maXRXaWR0aCA9IGZ1bmN0aW9uKHdpZHRoLCBvYmplY3QpIHtcbiAgICByZXR1cm4gZml0V2lkdGgocHJvamVjdGlvbiwgd2lkdGgsIG9iamVjdCk7XG4gIH07XG5cbiAgcHJvamVjdGlvbi5maXRIZWlnaHQgPSBmdW5jdGlvbihoZWlnaHQsIG9iamVjdCkge1xuICAgIHJldHVybiBmaXRIZWlnaHQocHJvamVjdGlvbiwgaGVpZ2h0LCBvYmplY3QpO1xuICB9O1xuXG4gIGZ1bmN0aW9uIHJlY2VudGVyKCkge1xuICAgIHZhciBjZW50ZXIgPSBzY2FsZVRyYW5zbGF0ZVJvdGF0ZShrLCAwLCAwLCBhbHBoYSkuYXBwbHkobnVsbCwgcHJvamVjdChsYW1iZGEsIHBoaSkpLFxuICAgICAgICB0cmFuc2Zvcm0gPSAoYWxwaGEgPyBzY2FsZVRyYW5zbGF0ZVJvdGF0ZSA6IHNjYWxlVHJhbnNsYXRlKShrLCB4IC0gY2VudGVyWzBdLCB5IC0gY2VudGVyWzFdLCBhbHBoYSk7XG4gICAgcm90YXRlID0gcm90YXRlUmFkaWFucyhkZWx0YUxhbWJkYSwgZGVsdGFQaGksIGRlbHRhR2FtbWEpO1xuICAgIHByb2plY3RUcmFuc2Zvcm0gPSBjb21wb3NlKHByb2plY3QsIHRyYW5zZm9ybSk7XG4gICAgcHJvamVjdFJvdGF0ZVRyYW5zZm9ybSA9IGNvbXBvc2Uocm90YXRlLCBwcm9qZWN0VHJhbnNmb3JtKTtcbiAgICBwcm9qZWN0UmVzYW1wbGUgPSByZXNhbXBsZShwcm9qZWN0VHJhbnNmb3JtLCBkZWx0YTIpO1xuICAgIHJldHVybiByZXNldCgpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgY2FjaGUgPSBjYWNoZVN0cmVhbSA9IG51bGw7XG4gICAgcmV0dXJuIHByb2plY3Rpb247XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcHJvamVjdCA9IHByb2plY3RBdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIHByb2plY3Rpb24uaW52ZXJ0ID0gcHJvamVjdC5pbnZlcnQgJiYgaW52ZXJ0O1xuICAgIHJldHVybiByZWNlbnRlcigpO1xuICB9O1xufVxuIiwiaW1wb3J0IHtkZWdyZWVzLCBwaSwgcmFkaWFuc30gZnJvbSBcIi4uL21hdGguanNcIjtcbmltcG9ydCB7cHJvamVjdGlvbk11dGF0b3J9IGZyb20gXCIuL2luZGV4LmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjb25pY1Byb2plY3Rpb24ocHJvamVjdEF0KSB7XG4gIHZhciBwaGkwID0gMCxcbiAgICAgIHBoaTEgPSBwaSAvIDMsXG4gICAgICBtID0gcHJvamVjdGlvbk11dGF0b3IocHJvamVjdEF0KSxcbiAgICAgIHAgPSBtKHBoaTAsIHBoaTEpO1xuXG4gIHAucGFyYWxsZWxzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gbShwaGkwID0gX1swXSAqIHJhZGlhbnMsIHBoaTEgPSBfWzFdICogcmFkaWFucykgOiBbcGhpMCAqIGRlZ3JlZXMsIHBoaTEgKiBkZWdyZWVzXTtcbiAgfTtcblxuICByZXR1cm4gcDtcbn1cbiIsImltcG9ydCB7YWJzLCBhc2luLCBhdGFuMiwgY29zLCBlcHNpbG9uLCBzaWduLCBzaW4sIHNxcnR9IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5pbXBvcnQge2NvbmljUHJvamVjdGlvbn0gZnJvbSBcIi4vY29uaWMuanNcIjtcbmltcG9ydCB7Y3lsaW5kcmljYWxFcXVhbEFyZWFSYXd9IGZyb20gXCIuL2N5bGluZHJpY2FsRXF1YWxBcmVhLmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjb25pY0VxdWFsQXJlYVJhdyh5MCwgeTEpIHtcbiAgdmFyIHN5MCA9IHNpbih5MCksIG4gPSAoc3kwICsgc2luKHkxKSkgLyAyO1xuXG4gIC8vIEFyZSB0aGUgcGFyYWxsZWxzIHN5bW1ldHJpY2FsIGFyb3VuZCB0aGUgRXF1YXRvcj9cbiAgaWYgKGFicyhuKSA8IGVwc2lsb24pIHJldHVybiBjeWxpbmRyaWNhbEVxdWFsQXJlYVJhdyh5MCk7XG5cbiAgdmFyIGMgPSAxICsgc3kwICogKDIgKiBuIC0gc3kwKSwgcjAgPSBzcXJ0KGMpIC8gbjtcblxuICBmdW5jdGlvbiBwcm9qZWN0KHgsIHkpIHtcbiAgICB2YXIgciA9IHNxcnQoYyAtIDIgKiBuICogc2luKHkpKSAvIG47XG4gICAgcmV0dXJuIFtyICogc2luKHggKj0gbiksIHIwIC0gciAqIGNvcyh4KV07XG4gIH1cblxuICBwcm9qZWN0LmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB2YXIgcjB5ID0gcjAgLSB5O1xuICAgIHJldHVybiBbYXRhbjIoeCwgYWJzKHIweSkpIC8gbiAqIHNpZ24ocjB5KSwgYXNpbigoYyAtICh4ICogeCArIHIweSAqIHIweSkgKiBuICogbikgLyAoMiAqIG4pKV07XG4gIH07XG5cbiAgcmV0dXJuIHByb2plY3Q7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gY29uaWNQcm9qZWN0aW9uKGNvbmljRXF1YWxBcmVhUmF3KVxuICAgICAgLnNjYWxlKDE1NS40MjQpXG4gICAgICAuY2VudGVyKFswLCAzMy42NDQyXSk7XG59XG4iLCJpbXBvcnQge2FzaW4sIGNvcywgc2lufSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gY3lsaW5kcmljYWxFcXVhbEFyZWFSYXcocGhpMCkge1xuICB2YXIgY29zUGhpMCA9IGNvcyhwaGkwKTtcblxuICBmdW5jdGlvbiBmb3J3YXJkKGxhbWJkYSwgcGhpKSB7XG4gICAgcmV0dXJuIFtsYW1iZGEgKiBjb3NQaGkwLCBzaW4ocGhpKSAvIGNvc1BoaTBdO1xuICB9XG5cbiAgZm9yd2FyZC5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgcmV0dXJuIFt4IC8gY29zUGhpMCwgYXNpbih5ICogY29zUGhpMCldO1xuICB9O1xuXG4gIHJldHVybiBmb3J3YXJkO1xufVxuIiwiaW1wb3J0IGNvbmljRXF1YWxBcmVhIGZyb20gXCIuL2NvbmljRXF1YWxBcmVhLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gY29uaWNFcXVhbEFyZWEoKVxuICAgICAgLnBhcmFsbGVscyhbMjkuNSwgNDUuNV0pXG4gICAgICAuc2NhbGUoMTA3MClcbiAgICAgIC50cmFuc2xhdGUoWzQ4MCwgMjUwXSlcbiAgICAgIC5yb3RhdGUoWzk2LCAwXSlcbiAgICAgIC5jZW50ZXIoWy0wLjYsIDM4LjddKTtcbn1cbiIsImltcG9ydCB7ZXBzaWxvbn0gZnJvbSBcIi4uL21hdGguanNcIjtcbmltcG9ydCBhbGJlcnMgZnJvbSBcIi4vYWxiZXJzLmpzXCI7XG5pbXBvcnQgY29uaWNFcXVhbEFyZWEgZnJvbSBcIi4vY29uaWNFcXVhbEFyZWEuanNcIjtcbmltcG9ydCB7Zml0RXh0ZW50LCBmaXRTaXplLCBmaXRXaWR0aCwgZml0SGVpZ2h0fSBmcm9tIFwiLi9maXQuanNcIjtcblxuLy8gVGhlIHByb2plY3Rpb25zIG11c3QgaGF2ZSBtdXR1YWxseSBleGNsdXNpdmUgY2xpcCByZWdpb25zIG9uIHRoZSBzcGhlcmUsXG4vLyBhcyB0aGlzIHdpbGwgYXZvaWQgZW1pdHRpbmcgaW50ZXJsZWF2aW5nIGxpbmVzIGFuZCBwb2x5Z29ucy5cbmZ1bmN0aW9uIG11bHRpcGxleChzdHJlYW1zKSB7XG4gIHZhciBuID0gc3RyZWFtcy5sZW5ndGg7XG4gIHJldHVybiB7XG4gICAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHsgdmFyIGkgPSAtMTsgd2hpbGUgKCsraSA8IG4pIHN0cmVhbXNbaV0ucG9pbnQoeCwgeSk7IH0sXG4gICAgc3BoZXJlOiBmdW5jdGlvbigpIHsgdmFyIGkgPSAtMTsgd2hpbGUgKCsraSA8IG4pIHN0cmVhbXNbaV0uc3BoZXJlKCk7IH0sXG4gICAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHsgdmFyIGkgPSAtMTsgd2hpbGUgKCsraSA8IG4pIHN0cmVhbXNbaV0ubGluZVN0YXJ0KCk7IH0sXG4gICAgbGluZUVuZDogZnVuY3Rpb24oKSB7IHZhciBpID0gLTE7IHdoaWxlICgrK2kgPCBuKSBzdHJlYW1zW2ldLmxpbmVFbmQoKTsgfSxcbiAgICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkgeyB2YXIgaSA9IC0xOyB3aGlsZSAoKytpIDwgbikgc3RyZWFtc1tpXS5wb2x5Z29uU3RhcnQoKTsgfSxcbiAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHsgdmFyIGkgPSAtMTsgd2hpbGUgKCsraSA8IG4pIHN0cmVhbXNbaV0ucG9seWdvbkVuZCgpOyB9XG4gIH07XG59XG5cbi8vIEEgY29tcG9zaXRlIHByb2plY3Rpb24gZm9yIHRoZSBVbml0ZWQgU3RhdGVzLCBjb25maWd1cmVkIGJ5IGRlZmF1bHQgZm9yXG4vLyA5NjDDlzUwMC4gVGhlIHByb2plY3Rpb24gYWxzbyB3b3JrcyBxdWl0ZSB3ZWxsIGF0IDk2MMOXNjAwIGlmIHlvdSBjaGFuZ2UgdGhlXG4vLyBzY2FsZSB0byAxMjg1IGFuZCBhZGp1c3QgdGhlIHRyYW5zbGF0ZSBhY2NvcmRpbmdseS4gVGhlIHNldCBvZiBzdGFuZGFyZFxuLy8gcGFyYWxsZWxzIGZvciBlYWNoIHJlZ2lvbiBjb21lcyBmcm9tIFVTR1MsIHdoaWNoIGlzIHB1Ymxpc2hlZCBoZXJlOlxuLy8gaHR0cDovL2Vnc2MudXNncy5nb3YvaXNiL3B1YnMvTWFwUHJvamVjdGlvbnMvcHJvamVjdGlvbnMuaHRtbCNhbGJlcnNcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgY2FjaGUsXG4gICAgICBjYWNoZVN0cmVhbSxcbiAgICAgIGxvd2VyNDggPSBhbGJlcnMoKSwgbG93ZXI0OFBvaW50LFxuICAgICAgYWxhc2thID0gY29uaWNFcXVhbEFyZWEoKS5yb3RhdGUoWzE1NCwgMF0pLmNlbnRlcihbLTIsIDU4LjVdKS5wYXJhbGxlbHMoWzU1LCA2NV0pLCBhbGFza2FQb2ludCwgLy8gRVBTRzozMzM4XG4gICAgICBoYXdhaWkgPSBjb25pY0VxdWFsQXJlYSgpLnJvdGF0ZShbMTU3LCAwXSkuY2VudGVyKFstMywgMTkuOV0pLnBhcmFsbGVscyhbOCwgMThdKSwgaGF3YWlpUG9pbnQsIC8vIEVTUkk6MTAyMDA3XG4gICAgICBwb2ludCwgcG9pbnRTdHJlYW0gPSB7cG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHsgcG9pbnQgPSBbeCwgeV07IH19O1xuXG4gIGZ1bmN0aW9uIGFsYmVyc1VzYShjb29yZGluYXRlcykge1xuICAgIHZhciB4ID0gY29vcmRpbmF0ZXNbMF0sIHkgPSBjb29yZGluYXRlc1sxXTtcbiAgICByZXR1cm4gcG9pbnQgPSBudWxsLFxuICAgICAgICAobG93ZXI0OFBvaW50LnBvaW50KHgsIHkpLCBwb2ludClcbiAgICAgICAgfHwgKGFsYXNrYVBvaW50LnBvaW50KHgsIHkpLCBwb2ludClcbiAgICAgICAgfHwgKGhhd2FpaVBvaW50LnBvaW50KHgsIHkpLCBwb2ludCk7XG4gIH1cblxuICBhbGJlcnNVc2EuaW52ZXJ0ID0gZnVuY3Rpb24oY29vcmRpbmF0ZXMpIHtcbiAgICB2YXIgayA9IGxvd2VyNDguc2NhbGUoKSxcbiAgICAgICAgdCA9IGxvd2VyNDgudHJhbnNsYXRlKCksXG4gICAgICAgIHggPSAoY29vcmRpbmF0ZXNbMF0gLSB0WzBdKSAvIGssXG4gICAgICAgIHkgPSAoY29vcmRpbmF0ZXNbMV0gLSB0WzFdKSAvIGs7XG4gICAgcmV0dXJuICh5ID49IDAuMTIwICYmIHkgPCAwLjIzNCAmJiB4ID49IC0wLjQyNSAmJiB4IDwgLTAuMjE0ID8gYWxhc2thXG4gICAgICAgIDogeSA+PSAwLjE2NiAmJiB5IDwgMC4yMzQgJiYgeCA+PSAtMC4yMTQgJiYgeCA8IC0wLjExNSA/IGhhd2FpaVxuICAgICAgICA6IGxvd2VyNDgpLmludmVydChjb29yZGluYXRlcyk7XG4gIH07XG5cbiAgYWxiZXJzVXNhLnN0cmVhbSA9IGZ1bmN0aW9uKHN0cmVhbSkge1xuICAgIHJldHVybiBjYWNoZSAmJiBjYWNoZVN0cmVhbSA9PT0gc3RyZWFtID8gY2FjaGUgOiBjYWNoZSA9IG11bHRpcGxleChbbG93ZXI0OC5zdHJlYW0oY2FjaGVTdHJlYW0gPSBzdHJlYW0pLCBhbGFza2Euc3RyZWFtKHN0cmVhbSksIGhhd2FpaS5zdHJlYW0oc3RyZWFtKV0pO1xuICB9O1xuXG4gIGFsYmVyc1VzYS5wcmVjaXNpb24gPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbG93ZXI0OC5wcmVjaXNpb24oKTtcbiAgICBsb3dlcjQ4LnByZWNpc2lvbihfKSwgYWxhc2thLnByZWNpc2lvbihfKSwgaGF3YWlpLnByZWNpc2lvbihfKTtcbiAgICByZXR1cm4gcmVzZXQoKTtcbiAgfTtcblxuICBhbGJlcnNVc2Euc2NhbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbG93ZXI0OC5zY2FsZSgpO1xuICAgIGxvd2VyNDguc2NhbGUoXyksIGFsYXNrYS5zY2FsZShfICogMC4zNSksIGhhd2FpaS5zY2FsZShfKTtcbiAgICByZXR1cm4gYWxiZXJzVXNhLnRyYW5zbGF0ZShsb3dlcjQ4LnRyYW5zbGF0ZSgpKTtcbiAgfTtcblxuICBhbGJlcnNVc2EudHJhbnNsYXRlID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGxvd2VyNDgudHJhbnNsYXRlKCk7XG4gICAgdmFyIGsgPSBsb3dlcjQ4LnNjYWxlKCksIHggPSArX1swXSwgeSA9ICtfWzFdO1xuXG4gICAgbG93ZXI0OFBvaW50ID0gbG93ZXI0OFxuICAgICAgICAudHJhbnNsYXRlKF8pXG4gICAgICAgIC5jbGlwRXh0ZW50KFtbeCAtIDAuNDU1ICogaywgeSAtIDAuMjM4ICoga10sIFt4ICsgMC40NTUgKiBrLCB5ICsgMC4yMzggKiBrXV0pXG4gICAgICAgIC5zdHJlYW0ocG9pbnRTdHJlYW0pO1xuXG4gICAgYWxhc2thUG9pbnQgPSBhbGFza2FcbiAgICAgICAgLnRyYW5zbGF0ZShbeCAtIDAuMzA3ICogaywgeSArIDAuMjAxICoga10pXG4gICAgICAgIC5jbGlwRXh0ZW50KFtbeCAtIDAuNDI1ICogayArIGVwc2lsb24sIHkgKyAwLjEyMCAqIGsgKyBlcHNpbG9uXSwgW3ggLSAwLjIxNCAqIGsgLSBlcHNpbG9uLCB5ICsgMC4yMzQgKiBrIC0gZXBzaWxvbl1dKVxuICAgICAgICAuc3RyZWFtKHBvaW50U3RyZWFtKTtcblxuICAgIGhhd2FpaVBvaW50ID0gaGF3YWlpXG4gICAgICAgIC50cmFuc2xhdGUoW3ggLSAwLjIwNSAqIGssIHkgKyAwLjIxMiAqIGtdKVxuICAgICAgICAuY2xpcEV4dGVudChbW3ggLSAwLjIxNCAqIGsgKyBlcHNpbG9uLCB5ICsgMC4xNjYgKiBrICsgZXBzaWxvbl0sIFt4IC0gMC4xMTUgKiBrIC0gZXBzaWxvbiwgeSArIDAuMjM0ICogayAtIGVwc2lsb25dXSlcbiAgICAgICAgLnN0cmVhbShwb2ludFN0cmVhbSk7XG5cbiAgICByZXR1cm4gcmVzZXQoKTtcbiAgfTtcblxuICBhbGJlcnNVc2EuZml0RXh0ZW50ID0gZnVuY3Rpb24oZXh0ZW50LCBvYmplY3QpIHtcbiAgICByZXR1cm4gZml0RXh0ZW50KGFsYmVyc1VzYSwgZXh0ZW50LCBvYmplY3QpO1xuICB9O1xuXG4gIGFsYmVyc1VzYS5maXRTaXplID0gZnVuY3Rpb24oc2l6ZSwgb2JqZWN0KSB7XG4gICAgcmV0dXJuIGZpdFNpemUoYWxiZXJzVXNhLCBzaXplLCBvYmplY3QpO1xuICB9O1xuXG4gIGFsYmVyc1VzYS5maXRXaWR0aCA9IGZ1bmN0aW9uKHdpZHRoLCBvYmplY3QpIHtcbiAgICByZXR1cm4gZml0V2lkdGgoYWxiZXJzVXNhLCB3aWR0aCwgb2JqZWN0KTtcbiAgfTtcblxuICBhbGJlcnNVc2EuZml0SGVpZ2h0ID0gZnVuY3Rpb24oaGVpZ2h0LCBvYmplY3QpIHtcbiAgICByZXR1cm4gZml0SGVpZ2h0KGFsYmVyc1VzYSwgaGVpZ2h0LCBvYmplY3QpO1xuICB9O1xuXG4gIGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgIGNhY2hlID0gY2FjaGVTdHJlYW0gPSBudWxsO1xuICAgIHJldHVybiBhbGJlcnNVc2E7XG4gIH1cblxuICByZXR1cm4gYWxiZXJzVXNhLnNjYWxlKDEwNzApO1xufVxuIiwiaW1wb3J0IHthc2luLCBhdGFuMiwgY29zLCBzaW4sIHNxcnR9IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBhemltdXRoYWxSYXcoc2NhbGUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB2YXIgY3ggPSBjb3MoeCksXG4gICAgICAgIGN5ID0gY29zKHkpLFxuICAgICAgICBrID0gc2NhbGUoY3ggKiBjeSk7XG4gICAgcmV0dXJuIFtcbiAgICAgIGsgKiBjeSAqIHNpbih4KSxcbiAgICAgIGsgKiBzaW4oeSlcbiAgICBdO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhemltdXRoYWxJbnZlcnQoYW5nbGUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB2YXIgeiA9IHNxcnQoeCAqIHggKyB5ICogeSksXG4gICAgICAgIGMgPSBhbmdsZSh6KSxcbiAgICAgICAgc2MgPSBzaW4oYyksXG4gICAgICAgIGNjID0gY29zKGMpO1xuICAgIHJldHVybiBbXG4gICAgICBhdGFuMih4ICogc2MsIHogKiBjYyksXG4gICAgICBhc2luKHogJiYgeSAqIHNjIC8geilcbiAgICBdO1xuICB9XG59XG4iLCJpbXBvcnQge2FzaW4sIHNxcnR9IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5pbXBvcnQge2F6aW11dGhhbFJhdywgYXppbXV0aGFsSW52ZXJ0fSBmcm9tIFwiLi9hemltdXRoYWwuanNcIjtcbmltcG9ydCBwcm9qZWN0aW9uIGZyb20gXCIuL2luZGV4LmpzXCI7XG5cbmV4cG9ydCB2YXIgYXppbXV0aGFsRXF1YWxBcmVhUmF3ID0gYXppbXV0aGFsUmF3KGZ1bmN0aW9uKGN4Y3kpIHtcbiAgcmV0dXJuIHNxcnQoMiAvICgxICsgY3hjeSkpO1xufSk7XG5cbmF6aW11dGhhbEVxdWFsQXJlYVJhdy5pbnZlcnQgPSBhemltdXRoYWxJbnZlcnQoZnVuY3Rpb24oeikge1xuICByZXR1cm4gMiAqIGFzaW4oeiAvIDIpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcHJvamVjdGlvbihhemltdXRoYWxFcXVhbEFyZWFSYXcpXG4gICAgICAuc2NhbGUoMTI0Ljc1KVxuICAgICAgLmNsaXBBbmdsZSgxODAgLSAxZS0zKTtcbn1cbiIsImltcG9ydCB7YWNvcywgc2lufSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuaW1wb3J0IHthemltdXRoYWxSYXcsIGF6aW11dGhhbEludmVydH0gZnJvbSBcIi4vYXppbXV0aGFsLmpzXCI7XG5pbXBvcnQgcHJvamVjdGlvbiBmcm9tIFwiLi9pbmRleC5qc1wiO1xuXG5leHBvcnQgdmFyIGF6aW11dGhhbEVxdWlkaXN0YW50UmF3ID0gYXppbXV0aGFsUmF3KGZ1bmN0aW9uKGMpIHtcbiAgcmV0dXJuIChjID0gYWNvcyhjKSkgJiYgYyAvIHNpbihjKTtcbn0pO1xuXG5hemltdXRoYWxFcXVpZGlzdGFudFJhdy5pbnZlcnQgPSBhemltdXRoYWxJbnZlcnQoZnVuY3Rpb24oeikge1xuICByZXR1cm4gejtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHByb2plY3Rpb24oYXppbXV0aGFsRXF1aWRpc3RhbnRSYXcpXG4gICAgICAuc2NhbGUoNzkuNDE4OClcbiAgICAgIC5jbGlwQW5nbGUoMTgwIC0gMWUtMyk7XG59XG4iLCJpbXBvcnQge2F0YW4sIGV4cCwgaGFsZlBpLCBsb2csIHBpLCB0YW4sIHRhdX0gZnJvbSBcIi4uL21hdGguanNcIjtcbmltcG9ydCByb3RhdGlvbiBmcm9tIFwiLi4vcm90YXRpb24uanNcIjtcbmltcG9ydCBwcm9qZWN0aW9uIGZyb20gXCIuL2luZGV4LmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBtZXJjYXRvclJhdyhsYW1iZGEsIHBoaSkge1xuICByZXR1cm4gW2xhbWJkYSwgbG9nKHRhbigoaGFsZlBpICsgcGhpKSAvIDIpKV07XG59XG5cbm1lcmNhdG9yUmF3LmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgcmV0dXJuIFt4LCAyICogYXRhbihleHAoeSkpIC0gaGFsZlBpXTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbWVyY2F0b3JQcm9qZWN0aW9uKG1lcmNhdG9yUmF3KVxuICAgICAgLnNjYWxlKDk2MSAvIHRhdSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtZXJjYXRvclByb2plY3Rpb24ocHJvamVjdCkge1xuICB2YXIgbSA9IHByb2plY3Rpb24ocHJvamVjdCksXG4gICAgICBjZW50ZXIgPSBtLmNlbnRlcixcbiAgICAgIHNjYWxlID0gbS5zY2FsZSxcbiAgICAgIHRyYW5zbGF0ZSA9IG0udHJhbnNsYXRlLFxuICAgICAgY2xpcEV4dGVudCA9IG0uY2xpcEV4dGVudCxcbiAgICAgIHgwID0gbnVsbCwgeTAsIHgxLCB5MTsgLy8gY2xpcCBleHRlbnRcblxuICBtLnNjYWxlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNjYWxlKF8pLCByZWNsaXAoKSkgOiBzY2FsZSgpO1xuICB9O1xuXG4gIG0udHJhbnNsYXRlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRyYW5zbGF0ZShfKSwgcmVjbGlwKCkpIDogdHJhbnNsYXRlKCk7XG4gIH07XG5cbiAgbS5jZW50ZXIgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY2VudGVyKF8pLCByZWNsaXAoKSkgOiBjZW50ZXIoKTtcbiAgfTtcblxuICBtLmNsaXBFeHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoKF8gPT0gbnVsbCA/IHgwID0geTAgPSB4MSA9IHkxID0gbnVsbCA6ICh4MCA9ICtfWzBdWzBdLCB5MCA9ICtfWzBdWzFdLCB4MSA9ICtfWzFdWzBdLCB5MSA9ICtfWzFdWzFdKSksIHJlY2xpcCgpKSA6IHgwID09IG51bGwgPyBudWxsIDogW1t4MCwgeTBdLCBbeDEsIHkxXV07XG4gIH07XG5cbiAgZnVuY3Rpb24gcmVjbGlwKCkge1xuICAgIHZhciBrID0gcGkgKiBzY2FsZSgpLFxuICAgICAgICB0ID0gbShyb3RhdGlvbihtLnJvdGF0ZSgpKS5pbnZlcnQoWzAsIDBdKSk7XG4gICAgcmV0dXJuIGNsaXBFeHRlbnQoeDAgPT0gbnVsbFxuICAgICAgICA/IFtbdFswXSAtIGssIHRbMV0gLSBrXSwgW3RbMF0gKyBrLCB0WzFdICsga11dIDogcHJvamVjdCA9PT0gbWVyY2F0b3JSYXdcbiAgICAgICAgPyBbW01hdGgubWF4KHRbMF0gLSBrLCB4MCksIHkwXSwgW01hdGgubWluKHRbMF0gKyBrLCB4MSksIHkxXV1cbiAgICAgICAgOiBbW3gwLCBNYXRoLm1heCh0WzFdIC0gaywgeTApXSwgW3gxLCBNYXRoLm1pbih0WzFdICsgaywgeTEpXV0pO1xuICB9XG5cbiAgcmV0dXJuIHJlY2xpcCgpO1xufVxuIiwiaW1wb3J0IHthYnMsIGF0YW4sIGF0YW4yLCBjb3MsIGVwc2lsb24sIGhhbGZQaSwgbG9nLCBwb3csIHNpZ24sIHNpbiwgc3FydCwgdGFufSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuaW1wb3J0IHtjb25pY1Byb2plY3Rpb259IGZyb20gXCIuL2NvbmljLmpzXCI7XG5pbXBvcnQge21lcmNhdG9yUmF3fSBmcm9tIFwiLi9tZXJjYXRvci5qc1wiO1xuXG5mdW5jdGlvbiB0YW55KHkpIHtcbiAgcmV0dXJuIHRhbigoaGFsZlBpICsgeSkgLyAyKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbmljQ29uZm9ybWFsUmF3KHkwLCB5MSkge1xuICB2YXIgY3kwID0gY29zKHkwKSxcbiAgICAgIG4gPSB5MCA9PT0geTEgPyBzaW4oeTApIDogbG9nKGN5MCAvIGNvcyh5MSkpIC8gbG9nKHRhbnkoeTEpIC8gdGFueSh5MCkpLFxuICAgICAgZiA9IGN5MCAqIHBvdyh0YW55KHkwKSwgbikgLyBuO1xuXG4gIGlmICghbikgcmV0dXJuIG1lcmNhdG9yUmF3O1xuXG4gIGZ1bmN0aW9uIHByb2plY3QoeCwgeSkge1xuICAgIGlmIChmID4gMCkgeyBpZiAoeSA8IC1oYWxmUGkgKyBlcHNpbG9uKSB5ID0gLWhhbGZQaSArIGVwc2lsb247IH1cbiAgICBlbHNlIHsgaWYgKHkgPiBoYWxmUGkgLSBlcHNpbG9uKSB5ID0gaGFsZlBpIC0gZXBzaWxvbjsgfVxuICAgIHZhciByID0gZiAvIHBvdyh0YW55KHkpLCBuKTtcbiAgICByZXR1cm4gW3IgKiBzaW4obiAqIHgpLCBmIC0gciAqIGNvcyhuICogeCldO1xuICB9XG5cbiAgcHJvamVjdC5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgdmFyIGZ5ID0gZiAtIHksIHIgPSBzaWduKG4pICogc3FydCh4ICogeCArIGZ5ICogZnkpO1xuICAgIHJldHVybiBbYXRhbjIoeCwgYWJzKGZ5KSkgLyBuICogc2lnbihmeSksIDIgKiBhdGFuKHBvdyhmIC8gciwgMSAvIG4pKSAtIGhhbGZQaV07XG4gIH07XG5cbiAgcmV0dXJuIHByb2plY3Q7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gY29uaWNQcm9qZWN0aW9uKGNvbmljQ29uZm9ybWFsUmF3KVxuICAgICAgLnNjYWxlKDEwOS41KVxuICAgICAgLnBhcmFsbGVscyhbMzAsIDMwXSk7XG59XG4iLCJpbXBvcnQgcHJvamVjdGlvbiBmcm9tIFwiLi9pbmRleC5qc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gZXF1aXJlY3Rhbmd1bGFyUmF3KGxhbWJkYSwgcGhpKSB7XG4gIHJldHVybiBbbGFtYmRhLCBwaGldO1xufVxuXG5lcXVpcmVjdGFuZ3VsYXJSYXcuaW52ZXJ0ID0gZXF1aXJlY3Rhbmd1bGFyUmF3O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHByb2plY3Rpb24oZXF1aXJlY3Rhbmd1bGFyUmF3KVxuICAgICAgLnNjYWxlKDE1Mi42Myk7XG59XG4iLCJpbXBvcnQge2FicywgYXRhbjIsIGNvcywgZXBzaWxvbiwgc2lnbiwgc2luLCBzcXJ0fSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuaW1wb3J0IHtjb25pY1Byb2plY3Rpb259IGZyb20gXCIuL2NvbmljLmpzXCI7XG5pbXBvcnQge2VxdWlyZWN0YW5ndWxhclJhd30gZnJvbSBcIi4vZXF1aXJlY3Rhbmd1bGFyLmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjb25pY0VxdWlkaXN0YW50UmF3KHkwLCB5MSkge1xuICB2YXIgY3kwID0gY29zKHkwKSxcbiAgICAgIG4gPSB5MCA9PT0geTEgPyBzaW4oeTApIDogKGN5MCAtIGNvcyh5MSkpIC8gKHkxIC0geTApLFxuICAgICAgZyA9IGN5MCAvIG4gKyB5MDtcblxuICBpZiAoYWJzKG4pIDwgZXBzaWxvbikgcmV0dXJuIGVxdWlyZWN0YW5ndWxhclJhdztcblxuICBmdW5jdGlvbiBwcm9qZWN0KHgsIHkpIHtcbiAgICB2YXIgZ3kgPSBnIC0geSwgbnggPSBuICogeDtcbiAgICByZXR1cm4gW2d5ICogc2luKG54KSwgZyAtIGd5ICogY29zKG54KV07XG4gIH1cblxuICBwcm9qZWN0LmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB2YXIgZ3kgPSBnIC0geTtcbiAgICByZXR1cm4gW2F0YW4yKHgsIGFicyhneSkpIC8gbiAqIHNpZ24oZ3kpLCBnIC0gc2lnbihuKSAqIHNxcnQoeCAqIHggKyBneSAqIGd5KV07XG4gIH07XG5cbiAgcmV0dXJuIHByb2plY3Q7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gY29uaWNQcm9qZWN0aW9uKGNvbmljRXF1aWRpc3RhbnRSYXcpXG4gICAgICAuc2NhbGUoMTMxLjE1NClcbiAgICAgIC5jZW50ZXIoWzAsIDEzLjkzODldKTtcbn1cbiIsImltcG9ydCBwcm9qZWN0aW9uIGZyb20gXCIuL2luZGV4LmpzXCI7XG5pbXBvcnQge2FicywgYXNpbiwgY29zLCBlcHNpbG9uMiwgc2luLCBzcXJ0fSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuXG52YXIgQTEgPSAxLjM0MDI2NCxcbiAgICBBMiA9IC0wLjA4MTEwNixcbiAgICBBMyA9IDAuMDAwODkzLFxuICAgIEE0ID0gMC4wMDM3OTYsXG4gICAgTSA9IHNxcnQoMykgLyAyLFxuICAgIGl0ZXJhdGlvbnMgPSAxMjtcblxuZXhwb3J0IGZ1bmN0aW9uIGVxdWFsRWFydGhSYXcobGFtYmRhLCBwaGkpIHtcbiAgdmFyIGwgPSBhc2luKE0gKiBzaW4ocGhpKSksIGwyID0gbCAqIGwsIGw2ID0gbDIgKiBsMiAqIGwyO1xuICByZXR1cm4gW1xuICAgIGxhbWJkYSAqIGNvcyhsKSAvIChNICogKEExICsgMyAqIEEyICogbDIgKyBsNiAqICg3ICogQTMgKyA5ICogQTQgKiBsMikpKSxcbiAgICBsICogKEExICsgQTIgKiBsMiArIGw2ICogKEEzICsgQTQgKiBsMikpXG4gIF07XG59XG5cbmVxdWFsRWFydGhSYXcuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICB2YXIgbCA9IHksIGwyID0gbCAqIGwsIGw2ID0gbDIgKiBsMiAqIGwyO1xuICBmb3IgKHZhciBpID0gMCwgZGVsdGEsIGZ5LCBmcHk7IGkgPCBpdGVyYXRpb25zOyArK2kpIHtcbiAgICBmeSA9IGwgKiAoQTEgKyBBMiAqIGwyICsgbDYgKiAoQTMgKyBBNCAqIGwyKSkgLSB5O1xuICAgIGZweSA9IEExICsgMyAqIEEyICogbDIgKyBsNiAqICg3ICogQTMgKyA5ICogQTQgKiBsMik7XG4gICAgbCAtPSBkZWx0YSA9IGZ5IC8gZnB5LCBsMiA9IGwgKiBsLCBsNiA9IGwyICogbDIgKiBsMjtcbiAgICBpZiAoYWJzKGRlbHRhKSA8IGVwc2lsb24yKSBicmVhaztcbiAgfVxuICByZXR1cm4gW1xuICAgIE0gKiB4ICogKEExICsgMyAqIEEyICogbDIgKyBsNiAqICg3ICogQTMgKyA5ICogQTQgKiBsMikpIC8gY29zKGwpLFxuICAgIGFzaW4oc2luKGwpIC8gTSlcbiAgXTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcHJvamVjdGlvbihlcXVhbEVhcnRoUmF3KVxuICAgICAgLnNjYWxlKDE3Ny4xNTgpO1xufVxuIiwiaW1wb3J0IHthdGFuLCBjb3MsIHNpbn0gZnJvbSBcIi4uL21hdGguanNcIjtcbmltcG9ydCB7YXppbXV0aGFsSW52ZXJ0fSBmcm9tIFwiLi9hemltdXRoYWwuanNcIjtcbmltcG9ydCBwcm9qZWN0aW9uIGZyb20gXCIuL2luZGV4LmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBnbm9tb25pY1Jhdyh4LCB5KSB7XG4gIHZhciBjeSA9IGNvcyh5KSwgayA9IGNvcyh4KSAqIGN5O1xuICByZXR1cm4gW2N5ICogc2luKHgpIC8gaywgc2luKHkpIC8ga107XG59XG5cbmdub21vbmljUmF3LmludmVydCA9IGF6aW11dGhhbEludmVydChhdGFuKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBwcm9qZWN0aW9uKGdub21vbmljUmF3KVxuICAgICAgLnNjYWxlKDE0NC4wNDkpXG4gICAgICAuY2xpcEFuZ2xlKDYwKTtcbn1cbiIsImltcG9ydCBjbGlwUmVjdGFuZ2xlIGZyb20gXCIuLi9jbGlwL3JlY3RhbmdsZS5qc1wiO1xuaW1wb3J0IGlkZW50aXR5IGZyb20gXCIuLi9pZGVudGl0eS5qc1wiO1xuaW1wb3J0IHt0cmFuc2Zvcm1lcn0gZnJvbSBcIi4uL3RyYW5zZm9ybS5qc1wiO1xuaW1wb3J0IHtmaXRFeHRlbnQsIGZpdFNpemUsIGZpdFdpZHRoLCBmaXRIZWlnaHR9IGZyb20gXCIuL2ZpdC5qc1wiO1xuXG5mdW5jdGlvbiBzY2FsZVRyYW5zbGF0ZShreCwga3ksIHR4LCB0eSkge1xuICByZXR1cm4ga3ggPT09IDEgJiYga3kgPT09IDEgJiYgdHggPT09IDAgJiYgdHkgPT09IDAgPyBpZGVudGl0eSA6IHRyYW5zZm9ybWVyKHtcbiAgICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgICAgdGhpcy5zdHJlYW0ucG9pbnQoeCAqIGt4ICsgdHgsIHkgKiBreSArIHR5KTtcbiAgICB9XG4gIH0pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGsgPSAxLCB0eCA9IDAsIHR5ID0gMCwgc3ggPSAxLCBzeSA9IDEsIHRyYW5zZm9ybSA9IGlkZW50aXR5LCAvLyBzY2FsZSwgdHJhbnNsYXRlIGFuZCByZWZsZWN0XG4gICAgICB4MCA9IG51bGwsIHkwLCB4MSwgeTEsIC8vIGNsaXAgZXh0ZW50XG4gICAgICBwb3N0Y2xpcCA9IGlkZW50aXR5LFxuICAgICAgY2FjaGUsXG4gICAgICBjYWNoZVN0cmVhbSxcbiAgICAgIHByb2plY3Rpb247XG5cbiAgZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgY2FjaGUgPSBjYWNoZVN0cmVhbSA9IG51bGw7XG4gICAgcmV0dXJuIHByb2plY3Rpb247XG4gIH1cblxuICByZXR1cm4gcHJvamVjdGlvbiA9IHtcbiAgICBzdHJlYW06IGZ1bmN0aW9uKHN0cmVhbSkge1xuICAgICAgcmV0dXJuIGNhY2hlICYmIGNhY2hlU3RyZWFtID09PSBzdHJlYW0gPyBjYWNoZSA6IGNhY2hlID0gdHJhbnNmb3JtKHBvc3RjbGlwKGNhY2hlU3RyZWFtID0gc3RyZWFtKSk7XG4gICAgfSxcbiAgICBwb3N0Y2xpcDogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocG9zdGNsaXAgPSBfLCB4MCA9IHkwID0geDEgPSB5MSA9IG51bGwsIHJlc2V0KCkpIDogcG9zdGNsaXA7XG4gICAgfSxcbiAgICBjbGlwRXh0ZW50OiBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwb3N0Y2xpcCA9IF8gPT0gbnVsbCA/ICh4MCA9IHkwID0geDEgPSB5MSA9IG51bGwsIGlkZW50aXR5KSA6IGNsaXBSZWN0YW5nbGUoeDAgPSArX1swXVswXSwgeTAgPSArX1swXVsxXSwgeDEgPSArX1sxXVswXSwgeTEgPSArX1sxXVsxXSksIHJlc2V0KCkpIDogeDAgPT0gbnVsbCA/IG51bGwgOiBbW3gwLCB5MF0sIFt4MSwgeTFdXTtcbiAgICB9LFxuICAgIHNjYWxlOiBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0cmFuc2Zvcm0gPSBzY2FsZVRyYW5zbGF0ZSgoayA9ICtfKSAqIHN4LCBrICogc3ksIHR4LCB0eSksIHJlc2V0KCkpIDogaztcbiAgICB9LFxuICAgIHRyYW5zbGF0ZTogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodHJhbnNmb3JtID0gc2NhbGVUcmFuc2xhdGUoayAqIHN4LCBrICogc3ksIHR4ID0gK19bMF0sIHR5ID0gK19bMV0pLCByZXNldCgpKSA6IFt0eCwgdHldO1xuICAgIH0sXG4gICAgcmVmbGVjdFg6IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRyYW5zZm9ybSA9IHNjYWxlVHJhbnNsYXRlKGsgKiAoc3ggPSBfID8gLTEgOiAxKSwgayAqIHN5LCB0eCwgdHkpLCByZXNldCgpKSA6IHN4IDwgMDtcbiAgICB9LFxuICAgIHJlZmxlY3RZOiBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0cmFuc2Zvcm0gPSBzY2FsZVRyYW5zbGF0ZShrICogc3gsIGsgKiAoc3kgPSBfID8gLTEgOiAxKSwgdHgsIHR5KSwgcmVzZXQoKSkgOiBzeSA8IDA7XG4gICAgfSxcbiAgICBmaXRFeHRlbnQ6IGZ1bmN0aW9uKGV4dGVudCwgb2JqZWN0KSB7XG4gICAgICByZXR1cm4gZml0RXh0ZW50KHByb2plY3Rpb24sIGV4dGVudCwgb2JqZWN0KTtcbiAgICB9LFxuICAgIGZpdFNpemU6IGZ1bmN0aW9uKHNpemUsIG9iamVjdCkge1xuICAgICAgcmV0dXJuIGZpdFNpemUocHJvamVjdGlvbiwgc2l6ZSwgb2JqZWN0KTtcbiAgICB9LFxuICAgIGZpdFdpZHRoOiBmdW5jdGlvbih3aWR0aCwgb2JqZWN0KSB7XG4gICAgICByZXR1cm4gZml0V2lkdGgocHJvamVjdGlvbiwgd2lkdGgsIG9iamVjdCk7XG4gICAgfSxcbiAgICBmaXRIZWlnaHQ6IGZ1bmN0aW9uKGhlaWdodCwgb2JqZWN0KSB7XG4gICAgICByZXR1cm4gZml0SGVpZ2h0KHByb2plY3Rpb24sIGhlaWdodCwgb2JqZWN0KTtcbiAgICB9XG4gIH07XG59XG4iLCJpbXBvcnQgcHJvamVjdGlvbiBmcm9tIFwiLi9pbmRleC5qc1wiO1xuaW1wb3J0IHthYnMsIGVwc2lsb259IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBuYXR1cmFsRWFydGgxUmF3KGxhbWJkYSwgcGhpKSB7XG4gIHZhciBwaGkyID0gcGhpICogcGhpLCBwaGk0ID0gcGhpMiAqIHBoaTI7XG4gIHJldHVybiBbXG4gICAgbGFtYmRhICogKDAuODcwNyAtIDAuMTMxOTc5ICogcGhpMiArIHBoaTQgKiAoLTAuMDEzNzkxICsgcGhpNCAqICgwLjAwMzk3MSAqIHBoaTIgLSAwLjAwMTUyOSAqIHBoaTQpKSksXG4gICAgcGhpICogKDEuMDA3MjI2ICsgcGhpMiAqICgwLjAxNTA4NSArIHBoaTQgKiAoLTAuMDQ0NDc1ICsgMC4wMjg4NzQgKiBwaGkyIC0gMC4wMDU5MTYgKiBwaGk0KSkpXG4gIF07XG59XG5cbm5hdHVyYWxFYXJ0aDFSYXcuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICB2YXIgcGhpID0geSwgaSA9IDI1LCBkZWx0YTtcbiAgZG8ge1xuICAgIHZhciBwaGkyID0gcGhpICogcGhpLCBwaGk0ID0gcGhpMiAqIHBoaTI7XG4gICAgcGhpIC09IGRlbHRhID0gKHBoaSAqICgxLjAwNzIyNiArIHBoaTIgKiAoMC4wMTUwODUgKyBwaGk0ICogKC0wLjA0NDQ3NSArIDAuMDI4ODc0ICogcGhpMiAtIDAuMDA1OTE2ICogcGhpNCkpKSAtIHkpIC9cbiAgICAgICAgKDEuMDA3MjI2ICsgcGhpMiAqICgwLjAxNTA4NSAqIDMgKyBwaGk0ICogKC0wLjA0NDQ3NSAqIDcgKyAwLjAyODg3NCAqIDkgKiBwaGkyIC0gMC4wMDU5MTYgKiAxMSAqIHBoaTQpKSk7XG4gIH0gd2hpbGUgKGFicyhkZWx0YSkgPiBlcHNpbG9uICYmIC0taSA+IDApO1xuICByZXR1cm4gW1xuICAgIHggLyAoMC44NzA3ICsgKHBoaTIgPSBwaGkgKiBwaGkpICogKC0wLjEzMTk3OSArIHBoaTIgKiAoLTAuMDEzNzkxICsgcGhpMiAqIHBoaTIgKiBwaGkyICogKDAuMDAzOTcxIC0gMC4wMDE1MjkgKiBwaGkyKSkpKSxcbiAgICBwaGlcbiAgXTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcHJvamVjdGlvbihuYXR1cmFsRWFydGgxUmF3KVxuICAgICAgLnNjYWxlKDE3NS4yOTUpO1xufVxuIiwiaW1wb3J0IHthc2luLCBjb3MsIGVwc2lsb24sIHNpbn0gZnJvbSBcIi4uL21hdGguanNcIjtcbmltcG9ydCB7YXppbXV0aGFsSW52ZXJ0fSBmcm9tIFwiLi9hemltdXRoYWwuanNcIjtcbmltcG9ydCBwcm9qZWN0aW9uIGZyb20gXCIuL2luZGV4LmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBvcnRob2dyYXBoaWNSYXcoeCwgeSkge1xuICByZXR1cm4gW2Nvcyh5KSAqIHNpbih4KSwgc2luKHkpXTtcbn1cblxub3J0aG9ncmFwaGljUmF3LmludmVydCA9IGF6aW11dGhhbEludmVydChhc2luKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBwcm9qZWN0aW9uKG9ydGhvZ3JhcGhpY1JhdylcbiAgICAgIC5zY2FsZSgyNDkuNSlcbiAgICAgIC5jbGlwQW5nbGUoOTAgKyBlcHNpbG9uKTtcbn1cbiIsImltcG9ydCB7YXRhbiwgY29zLCBzaW59IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5pbXBvcnQge2F6aW11dGhhbEludmVydH0gZnJvbSBcIi4vYXppbXV0aGFsLmpzXCI7XG5pbXBvcnQgcHJvamVjdGlvbiBmcm9tIFwiLi9pbmRleC5qc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gc3RlcmVvZ3JhcGhpY1Jhdyh4LCB5KSB7XG4gIHZhciBjeSA9IGNvcyh5KSwgayA9IDEgKyBjb3MoeCkgKiBjeTtcbiAgcmV0dXJuIFtjeSAqIHNpbih4KSAvIGssIHNpbih5KSAvIGtdO1xufVxuXG5zdGVyZW9ncmFwaGljUmF3LmludmVydCA9IGF6aW11dGhhbEludmVydChmdW5jdGlvbih6KSB7XG4gIHJldHVybiAyICogYXRhbih6KTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHByb2plY3Rpb24oc3RlcmVvZ3JhcGhpY1JhdylcbiAgICAgIC5zY2FsZSgyNTApXG4gICAgICAuY2xpcEFuZ2xlKDE0Mik7XG59XG4iLCJpbXBvcnQge2F0YW4sIGV4cCwgaGFsZlBpLCBsb2csIHRhbn0gZnJvbSBcIi4uL21hdGguanNcIjtcbmltcG9ydCB7bWVyY2F0b3JQcm9qZWN0aW9ufSBmcm9tIFwiLi9tZXJjYXRvci5qc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gdHJhbnN2ZXJzZU1lcmNhdG9yUmF3KGxhbWJkYSwgcGhpKSB7XG4gIHJldHVybiBbbG9nKHRhbigoaGFsZlBpICsgcGhpKSAvIDIpKSwgLWxhbWJkYV07XG59XG5cbnRyYW5zdmVyc2VNZXJjYXRvclJhdy5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gIHJldHVybiBbLXksIDIgKiBhdGFuKGV4cCh4KSkgLSBoYWxmUGldO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBtID0gbWVyY2F0b3JQcm9qZWN0aW9uKHRyYW5zdmVyc2VNZXJjYXRvclJhdyksXG4gICAgICBjZW50ZXIgPSBtLmNlbnRlcixcbiAgICAgIHJvdGF0ZSA9IG0ucm90YXRlO1xuXG4gIG0uY2VudGVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gY2VudGVyKFstX1sxXSwgX1swXV0pIDogKF8gPSBjZW50ZXIoKSwgW19bMV0sIC1fWzBdXSk7XG4gIH07XG5cbiAgbS5yb3RhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyByb3RhdGUoW19bMF0sIF9bMV0sIF8ubGVuZ3RoID4gMiA/IF9bMl0gKyA5MCA6IDkwXSkgOiAoXyA9IHJvdGF0ZSgpLCBbX1swXSwgX1sxXSwgX1syXSAtIDkwXSk7XG4gIH07XG5cbiAgcmV0dXJuIHJvdGF0ZShbMCwgMCwgOTBdKVxuICAgICAgLnNjYWxlKDE1OS4xNTUpO1xufVxuIiwiZnVuY3Rpb24gZGVmYXVsdFNlcGFyYXRpb24oYSwgYikge1xuICByZXR1cm4gYS5wYXJlbnQgPT09IGIucGFyZW50ID8gMSA6IDI7XG59XG5cbmZ1bmN0aW9uIG1lYW5YKGNoaWxkcmVuKSB7XG4gIHJldHVybiBjaGlsZHJlbi5yZWR1Y2UobWVhblhSZWR1Y2UsIDApIC8gY2hpbGRyZW4ubGVuZ3RoO1xufVxuXG5mdW5jdGlvbiBtZWFuWFJlZHVjZSh4LCBjKSB7XG4gIHJldHVybiB4ICsgYy54O1xufVxuXG5mdW5jdGlvbiBtYXhZKGNoaWxkcmVuKSB7XG4gIHJldHVybiAxICsgY2hpbGRyZW4ucmVkdWNlKG1heFlSZWR1Y2UsIDApO1xufVxuXG5mdW5jdGlvbiBtYXhZUmVkdWNlKHksIGMpIHtcbiAgcmV0dXJuIE1hdGgubWF4KHksIGMueSk7XG59XG5cbmZ1bmN0aW9uIGxlYWZMZWZ0KG5vZGUpIHtcbiAgdmFyIGNoaWxkcmVuO1xuICB3aGlsZSAoY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuKSBub2RlID0gY2hpbGRyZW5bMF07XG4gIHJldHVybiBub2RlO1xufVxuXG5mdW5jdGlvbiBsZWFmUmlnaHQobm9kZSkge1xuICB2YXIgY2hpbGRyZW47XG4gIHdoaWxlIChjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW4pIG5vZGUgPSBjaGlsZHJlbltjaGlsZHJlbi5sZW5ndGggLSAxXTtcbiAgcmV0dXJuIG5vZGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgc2VwYXJhdGlvbiA9IGRlZmF1bHRTZXBhcmF0aW9uLFxuICAgICAgZHggPSAxLFxuICAgICAgZHkgPSAxLFxuICAgICAgbm9kZVNpemUgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBjbHVzdGVyKHJvb3QpIHtcbiAgICB2YXIgcHJldmlvdXNOb2RlLFxuICAgICAgICB4ID0gMDtcblxuICAgIC8vIEZpcnN0IHdhbGssIGNvbXB1dGluZyB0aGUgaW5pdGlhbCB4ICYgeSB2YWx1ZXMuXG4gICAgcm9vdC5lYWNoQWZ0ZXIoZnVuY3Rpb24obm9kZSkge1xuICAgICAgdmFyIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbjtcbiAgICAgIGlmIChjaGlsZHJlbikge1xuICAgICAgICBub2RlLnggPSBtZWFuWChjaGlsZHJlbik7XG4gICAgICAgIG5vZGUueSA9IG1heFkoY2hpbGRyZW4pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbm9kZS54ID0gcHJldmlvdXNOb2RlID8geCArPSBzZXBhcmF0aW9uKG5vZGUsIHByZXZpb3VzTm9kZSkgOiAwO1xuICAgICAgICBub2RlLnkgPSAwO1xuICAgICAgICBwcmV2aW91c05vZGUgPSBub2RlO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdmFyIGxlZnQgPSBsZWFmTGVmdChyb290KSxcbiAgICAgICAgcmlnaHQgPSBsZWFmUmlnaHQocm9vdCksXG4gICAgICAgIHgwID0gbGVmdC54IC0gc2VwYXJhdGlvbihsZWZ0LCByaWdodCkgLyAyLFxuICAgICAgICB4MSA9IHJpZ2h0LnggKyBzZXBhcmF0aW9uKHJpZ2h0LCBsZWZ0KSAvIDI7XG5cbiAgICAvLyBTZWNvbmQgd2Fsaywgbm9ybWFsaXppbmcgeCAmIHkgdG8gdGhlIGRlc2lyZWQgc2l6ZS5cbiAgICByZXR1cm4gcm9vdC5lYWNoQWZ0ZXIobm9kZVNpemUgPyBmdW5jdGlvbihub2RlKSB7XG4gICAgICBub2RlLnggPSAobm9kZS54IC0gcm9vdC54KSAqIGR4O1xuICAgICAgbm9kZS55ID0gKHJvb3QueSAtIG5vZGUueSkgKiBkeTtcbiAgICB9IDogZnVuY3Rpb24obm9kZSkge1xuICAgICAgbm9kZS54ID0gKG5vZGUueCAtIHgwKSAvICh4MSAtIHgwKSAqIGR4O1xuICAgICAgbm9kZS55ID0gKDEgLSAocm9vdC55ID8gbm9kZS55IC8gcm9vdC55IDogMSkpICogZHk7XG4gICAgfSk7XG4gIH1cblxuICBjbHVzdGVyLnNlcGFyYXRpb24gPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc2VwYXJhdGlvbiA9IHgsIGNsdXN0ZXIpIDogc2VwYXJhdGlvbjtcbiAgfTtcblxuICBjbHVzdGVyLnNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobm9kZVNpemUgPSBmYWxzZSwgZHggPSAreFswXSwgZHkgPSAreFsxXSwgY2x1c3RlcikgOiAobm9kZVNpemUgPyBudWxsIDogW2R4LCBkeV0pO1xuICB9O1xuXG4gIGNsdXN0ZXIubm9kZVNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobm9kZVNpemUgPSB0cnVlLCBkeCA9ICt4WzBdLCBkeSA9ICt4WzFdLCBjbHVzdGVyKSA6IChub2RlU2l6ZSA/IFtkeCwgZHldIDogbnVsbCk7XG4gIH07XG5cbiAgcmV0dXJuIGNsdXN0ZXI7XG59XG4iLCJmdW5jdGlvbiBjb3VudChub2RlKSB7XG4gIHZhciBzdW0gPSAwLFxuICAgICAgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuLFxuICAgICAgaSA9IGNoaWxkcmVuICYmIGNoaWxkcmVuLmxlbmd0aDtcbiAgaWYgKCFpKSBzdW0gPSAxO1xuICBlbHNlIHdoaWxlICgtLWkgPj0gMCkgc3VtICs9IGNoaWxkcmVuW2ldLnZhbHVlO1xuICBub2RlLnZhbHVlID0gc3VtO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaEFmdGVyKGNvdW50KTtcbn1cbiIsImltcG9ydCBub2RlX2NvdW50IGZyb20gXCIuL2NvdW50LmpzXCI7XG5pbXBvcnQgbm9kZV9lYWNoIGZyb20gXCIuL2VhY2guanNcIjtcbmltcG9ydCBub2RlX2VhY2hCZWZvcmUgZnJvbSBcIi4vZWFjaEJlZm9yZS5qc1wiO1xuaW1wb3J0IG5vZGVfZWFjaEFmdGVyIGZyb20gXCIuL2VhY2hBZnRlci5qc1wiO1xuaW1wb3J0IG5vZGVfc3VtIGZyb20gXCIuL3N1bS5qc1wiO1xuaW1wb3J0IG5vZGVfc29ydCBmcm9tIFwiLi9zb3J0LmpzXCI7XG5pbXBvcnQgbm9kZV9wYXRoIGZyb20gXCIuL3BhdGguanNcIjtcbmltcG9ydCBub2RlX2FuY2VzdG9ycyBmcm9tIFwiLi9hbmNlc3RvcnMuanNcIjtcbmltcG9ydCBub2RlX2Rlc2NlbmRhbnRzIGZyb20gXCIuL2Rlc2NlbmRhbnRzLmpzXCI7XG5pbXBvcnQgbm9kZV9sZWF2ZXMgZnJvbSBcIi4vbGVhdmVzLmpzXCI7XG5pbXBvcnQgbm9kZV9saW5rcyBmcm9tIFwiLi9saW5rcy5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBoaWVyYXJjaHkoZGF0YSwgY2hpbGRyZW4pIHtcbiAgdmFyIHJvb3QgPSBuZXcgTm9kZShkYXRhKSxcbiAgICAgIHZhbHVlZCA9ICtkYXRhLnZhbHVlICYmIChyb290LnZhbHVlID0gZGF0YS52YWx1ZSksXG4gICAgICBub2RlLFxuICAgICAgbm9kZXMgPSBbcm9vdF0sXG4gICAgICBjaGlsZCxcbiAgICAgIGNoaWxkcyxcbiAgICAgIGksXG4gICAgICBuO1xuXG4gIGlmIChjaGlsZHJlbiA9PSBudWxsKSBjaGlsZHJlbiA9IGRlZmF1bHRDaGlsZHJlbjtcblxuICB3aGlsZSAobm9kZSA9IG5vZGVzLnBvcCgpKSB7XG4gICAgaWYgKHZhbHVlZCkgbm9kZS52YWx1ZSA9ICtub2RlLmRhdGEudmFsdWU7XG4gICAgaWYgKChjaGlsZHMgPSBjaGlsZHJlbihub2RlLmRhdGEpKSAmJiAobiA9IGNoaWxkcy5sZW5ndGgpKSB7XG4gICAgICBub2RlLmNoaWxkcmVuID0gbmV3IEFycmF5KG4pO1xuICAgICAgZm9yIChpID0gbiAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIG5vZGVzLnB1c2goY2hpbGQgPSBub2RlLmNoaWxkcmVuW2ldID0gbmV3IE5vZGUoY2hpbGRzW2ldKSk7XG4gICAgICAgIGNoaWxkLnBhcmVudCA9IG5vZGU7XG4gICAgICAgIGNoaWxkLmRlcHRoID0gbm9kZS5kZXB0aCArIDE7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJvb3QuZWFjaEJlZm9yZShjb21wdXRlSGVpZ2h0KTtcbn1cblxuZnVuY3Rpb24gbm9kZV9jb3B5KCkge1xuICByZXR1cm4gaGllcmFyY2h5KHRoaXMpLmVhY2hCZWZvcmUoY29weURhdGEpO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0Q2hpbGRyZW4oZCkge1xuICByZXR1cm4gZC5jaGlsZHJlbjtcbn1cblxuZnVuY3Rpb24gY29weURhdGEobm9kZSkge1xuICBub2RlLmRhdGEgPSBub2RlLmRhdGEuZGF0YTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbXB1dGVIZWlnaHQobm9kZSkge1xuICB2YXIgaGVpZ2h0ID0gMDtcbiAgZG8gbm9kZS5oZWlnaHQgPSBoZWlnaHQ7XG4gIHdoaWxlICgobm9kZSA9IG5vZGUucGFyZW50KSAmJiAobm9kZS5oZWlnaHQgPCArK2hlaWdodCkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gTm9kZShkYXRhKSB7XG4gIHRoaXMuZGF0YSA9IGRhdGE7XG4gIHRoaXMuZGVwdGggPVxuICB0aGlzLmhlaWdodCA9IDA7XG4gIHRoaXMucGFyZW50ID0gbnVsbDtcbn1cblxuTm9kZS5wcm90b3R5cGUgPSBoaWVyYXJjaHkucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogTm9kZSxcbiAgY291bnQ6IG5vZGVfY291bnQsXG4gIGVhY2g6IG5vZGVfZWFjaCxcbiAgZWFjaEFmdGVyOiBub2RlX2VhY2hBZnRlcixcbiAgZWFjaEJlZm9yZTogbm9kZV9lYWNoQmVmb3JlLFxuICBzdW06IG5vZGVfc3VtLFxuICBzb3J0OiBub2RlX3NvcnQsXG4gIHBhdGg6IG5vZGVfcGF0aCxcbiAgYW5jZXN0b3JzOiBub2RlX2FuY2VzdG9ycyxcbiAgZGVzY2VuZGFudHM6IG5vZGVfZGVzY2VuZGFudHMsXG4gIGxlYXZlczogbm9kZV9sZWF2ZXMsXG4gIGxpbmtzOiBub2RlX2xpbmtzLFxuICBjb3B5OiBub2RlX2NvcHlcbn07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjYWxsYmFjaykge1xuICB2YXIgbm9kZSA9IHRoaXMsIGN1cnJlbnQsIG5leHQgPSBbbm9kZV0sIGNoaWxkcmVuLCBpLCBuO1xuICBkbyB7XG4gICAgY3VycmVudCA9IG5leHQucmV2ZXJzZSgpLCBuZXh0ID0gW107XG4gICAgd2hpbGUgKG5vZGUgPSBjdXJyZW50LnBvcCgpKSB7XG4gICAgICBjYWxsYmFjayhub2RlKSwgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgICAgaWYgKGNoaWxkcmVuKSBmb3IgKGkgPSAwLCBuID0gY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIG5leHQucHVzaChjaGlsZHJlbltpXSk7XG4gICAgICB9XG4gICAgfVxuICB9IHdoaWxlIChuZXh0Lmxlbmd0aCk7XG4gIHJldHVybiB0aGlzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIG5vZGUgPSB0aGlzLCBub2RlcyA9IFtub2RlXSwgbmV4dCA9IFtdLCBjaGlsZHJlbiwgaSwgbjtcbiAgd2hpbGUgKG5vZGUgPSBub2Rlcy5wb3AoKSkge1xuICAgIG5leHQucHVzaChub2RlKSwgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgIGlmIChjaGlsZHJlbikgZm9yIChpID0gMCwgbiA9IGNoaWxkcmVuLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgbm9kZXMucHVzaChjaGlsZHJlbltpXSk7XG4gICAgfVxuICB9XG4gIHdoaWxlIChub2RlID0gbmV4dC5wb3AoKSkge1xuICAgIGNhbGxiYWNrKG5vZGUpO1xuICB9XG4gIHJldHVybiB0aGlzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIG5vZGUgPSB0aGlzLCBub2RlcyA9IFtub2RlXSwgY2hpbGRyZW4sIGk7XG4gIHdoaWxlIChub2RlID0gbm9kZXMucG9wKCkpIHtcbiAgICBjYWxsYmFjayhub2RlKSwgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgIGlmIChjaGlsZHJlbikgZm9yIChpID0gY2hpbGRyZW4ubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgIG5vZGVzLnB1c2goY2hpbGRyZW5baV0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGhpcztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiB0aGlzLmVhY2hBZnRlcihmdW5jdGlvbihub2RlKSB7XG4gICAgdmFyIHN1bSA9ICt2YWx1ZShub2RlLmRhdGEpIHx8IDAsXG4gICAgICAgIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbixcbiAgICAgICAgaSA9IGNoaWxkcmVuICYmIGNoaWxkcmVuLmxlbmd0aDtcbiAgICB3aGlsZSAoLS1pID49IDApIHN1bSArPSBjaGlsZHJlbltpXS52YWx1ZTtcbiAgICBub2RlLnZhbHVlID0gc3VtO1xuICB9KTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbXBhcmUpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaEJlZm9yZShmdW5jdGlvbihub2RlKSB7XG4gICAgaWYgKG5vZGUuY2hpbGRyZW4pIHtcbiAgICAgIG5vZGUuY2hpbGRyZW4uc29ydChjb21wYXJlKTtcbiAgICB9XG4gIH0pO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZW5kKSB7XG4gIHZhciBzdGFydCA9IHRoaXMsXG4gICAgICBhbmNlc3RvciA9IGxlYXN0Q29tbW9uQW5jZXN0b3Ioc3RhcnQsIGVuZCksXG4gICAgICBub2RlcyA9IFtzdGFydF07XG4gIHdoaWxlIChzdGFydCAhPT0gYW5jZXN0b3IpIHtcbiAgICBzdGFydCA9IHN0YXJ0LnBhcmVudDtcbiAgICBub2Rlcy5wdXNoKHN0YXJ0KTtcbiAgfVxuICB2YXIgayA9IG5vZGVzLmxlbmd0aDtcbiAgd2hpbGUgKGVuZCAhPT0gYW5jZXN0b3IpIHtcbiAgICBub2Rlcy5zcGxpY2UoaywgMCwgZW5kKTtcbiAgICBlbmQgPSBlbmQucGFyZW50O1xuICB9XG4gIHJldHVybiBub2Rlcztcbn1cblxuZnVuY3Rpb24gbGVhc3RDb21tb25BbmNlc3RvcihhLCBiKSB7XG4gIGlmIChhID09PSBiKSByZXR1cm4gYTtcbiAgdmFyIGFOb2RlcyA9IGEuYW5jZXN0b3JzKCksXG4gICAgICBiTm9kZXMgPSBiLmFuY2VzdG9ycygpLFxuICAgICAgYyA9IG51bGw7XG4gIGEgPSBhTm9kZXMucG9wKCk7XG4gIGIgPSBiTm9kZXMucG9wKCk7XG4gIHdoaWxlIChhID09PSBiKSB7XG4gICAgYyA9IGE7XG4gICAgYSA9IGFOb2Rlcy5wb3AoKTtcbiAgICBiID0gYk5vZGVzLnBvcCgpO1xuICB9XG4gIHJldHVybiBjO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBub2RlID0gdGhpcywgbm9kZXMgPSBbbm9kZV07XG4gIHdoaWxlIChub2RlID0gbm9kZS5wYXJlbnQpIHtcbiAgICBub2Rlcy5wdXNoKG5vZGUpO1xuICB9XG4gIHJldHVybiBub2Rlcztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgbm9kZXMgPSBbXTtcbiAgdGhpcy5lYWNoKGZ1bmN0aW9uKG5vZGUpIHtcbiAgICBub2Rlcy5wdXNoKG5vZGUpO1xuICB9KTtcbiAgcmV0dXJuIG5vZGVzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBsZWF2ZXMgPSBbXTtcbiAgdGhpcy5lYWNoQmVmb3JlKGZ1bmN0aW9uKG5vZGUpIHtcbiAgICBpZiAoIW5vZGUuY2hpbGRyZW4pIHtcbiAgICAgIGxlYXZlcy5wdXNoKG5vZGUpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBsZWF2ZXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHJvb3QgPSB0aGlzLCBsaW5rcyA9IFtdO1xuICByb290LmVhY2goZnVuY3Rpb24obm9kZSkge1xuICAgIGlmIChub2RlICE9PSByb290KSB7IC8vIERvbuKAmXQgaW5jbHVkZSB0aGUgcm9vdOKAmXMgcGFyZW50LCBpZiBhbnkuXG4gICAgICBsaW5rcy5wdXNoKHtzb3VyY2U6IG5vZGUucGFyZW50LCB0YXJnZXQ6IG5vZGV9KTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gbGlua3M7XG59XG4iLCJleHBvcnQgdmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlO1xuXG5leHBvcnQgZnVuY3Rpb24gc2h1ZmZsZShhcnJheSkge1xuICB2YXIgbSA9IGFycmF5Lmxlbmd0aCxcbiAgICAgIHQsXG4gICAgICBpO1xuXG4gIHdoaWxlIChtKSB7XG4gICAgaSA9IE1hdGgucmFuZG9tKCkgKiBtLS0gfCAwO1xuICAgIHQgPSBhcnJheVttXTtcbiAgICBhcnJheVttXSA9IGFycmF5W2ldO1xuICAgIGFycmF5W2ldID0gdDtcbiAgfVxuXG4gIHJldHVybiBhcnJheTtcbn1cbiIsImltcG9ydCB7c2h1ZmZsZSwgc2xpY2V9IGZyb20gXCIuLi9hcnJheS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjaXJjbGVzKSB7XG4gIHZhciBpID0gMCwgbiA9IChjaXJjbGVzID0gc2h1ZmZsZShzbGljZS5jYWxsKGNpcmNsZXMpKSkubGVuZ3RoLCBCID0gW10sIHAsIGU7XG5cbiAgd2hpbGUgKGkgPCBuKSB7XG4gICAgcCA9IGNpcmNsZXNbaV07XG4gICAgaWYgKGUgJiYgZW5jbG9zZXNXZWFrKGUsIHApKSArK2k7XG4gICAgZWxzZSBlID0gZW5jbG9zZUJhc2lzKEIgPSBleHRlbmRCYXNpcyhCLCBwKSksIGkgPSAwO1xuICB9XG5cbiAgcmV0dXJuIGU7XG59XG5cbmZ1bmN0aW9uIGV4dGVuZEJhc2lzKEIsIHApIHtcbiAgdmFyIGksIGo7XG5cbiAgaWYgKGVuY2xvc2VzV2Vha0FsbChwLCBCKSkgcmV0dXJuIFtwXTtcblxuICAvLyBJZiB3ZSBnZXQgaGVyZSB0aGVuIEIgbXVzdCBoYXZlIGF0IGxlYXN0IG9uZSBlbGVtZW50LlxuICBmb3IgKGkgPSAwOyBpIDwgQi5sZW5ndGg7ICsraSkge1xuICAgIGlmIChlbmNsb3Nlc05vdChwLCBCW2ldKVxuICAgICAgICAmJiBlbmNsb3Nlc1dlYWtBbGwoZW5jbG9zZUJhc2lzMihCW2ldLCBwKSwgQikpIHtcbiAgICAgIHJldHVybiBbQltpXSwgcF07XG4gICAgfVxuICB9XG5cbiAgLy8gSWYgd2UgZ2V0IGhlcmUgdGhlbiBCIG11c3QgaGF2ZSBhdCBsZWFzdCB0d28gZWxlbWVudHMuXG4gIGZvciAoaSA9IDA7IGkgPCBCLmxlbmd0aCAtIDE7ICsraSkge1xuICAgIGZvciAoaiA9IGkgKyAxOyBqIDwgQi5sZW5ndGg7ICsraikge1xuICAgICAgaWYgKGVuY2xvc2VzTm90KGVuY2xvc2VCYXNpczIoQltpXSwgQltqXSksIHApXG4gICAgICAgICAgJiYgZW5jbG9zZXNOb3QoZW5jbG9zZUJhc2lzMihCW2ldLCBwKSwgQltqXSlcbiAgICAgICAgICAmJiBlbmNsb3Nlc05vdChlbmNsb3NlQmFzaXMyKEJbal0sIHApLCBCW2ldKVxuICAgICAgICAgICYmIGVuY2xvc2VzV2Vha0FsbChlbmNsb3NlQmFzaXMzKEJbaV0sIEJbal0sIHApLCBCKSkge1xuICAgICAgICByZXR1cm4gW0JbaV0sIEJbal0sIHBdO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIElmIHdlIGdldCBoZXJlIHRoZW4gc29tZXRoaW5nIGlzIHZlcnkgd3JvbmcuXG4gIHRocm93IG5ldyBFcnJvcjtcbn1cblxuZnVuY3Rpb24gZW5jbG9zZXNOb3QoYSwgYikge1xuICB2YXIgZHIgPSBhLnIgLSBiLnIsIGR4ID0gYi54IC0gYS54LCBkeSA9IGIueSAtIGEueTtcbiAgcmV0dXJuIGRyIDwgMCB8fCBkciAqIGRyIDwgZHggKiBkeCArIGR5ICogZHk7XG59XG5cbmZ1bmN0aW9uIGVuY2xvc2VzV2VhayhhLCBiKSB7XG4gIHZhciBkciA9IGEuciAtIGIuciArIDFlLTYsIGR4ID0gYi54IC0gYS54LCBkeSA9IGIueSAtIGEueTtcbiAgcmV0dXJuIGRyID4gMCAmJiBkciAqIGRyID4gZHggKiBkeCArIGR5ICogZHk7XG59XG5cbmZ1bmN0aW9uIGVuY2xvc2VzV2Vha0FsbChhLCBCKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgQi5sZW5ndGg7ICsraSkge1xuICAgIGlmICghZW5jbG9zZXNXZWFrKGEsIEJbaV0pKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBlbmNsb3NlQmFzaXMoQikge1xuICBzd2l0Y2ggKEIubGVuZ3RoKSB7XG4gICAgY2FzZSAxOiByZXR1cm4gZW5jbG9zZUJhc2lzMShCWzBdKTtcbiAgICBjYXNlIDI6IHJldHVybiBlbmNsb3NlQmFzaXMyKEJbMF0sIEJbMV0pO1xuICAgIGNhc2UgMzogcmV0dXJuIGVuY2xvc2VCYXNpczMoQlswXSwgQlsxXSwgQlsyXSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZW5jbG9zZUJhc2lzMShhKSB7XG4gIHJldHVybiB7XG4gICAgeDogYS54LFxuICAgIHk6IGEueSxcbiAgICByOiBhLnJcbiAgfTtcbn1cblxuZnVuY3Rpb24gZW5jbG9zZUJhc2lzMihhLCBiKSB7XG4gIHZhciB4MSA9IGEueCwgeTEgPSBhLnksIHIxID0gYS5yLFxuICAgICAgeDIgPSBiLngsIHkyID0gYi55LCByMiA9IGIucixcbiAgICAgIHgyMSA9IHgyIC0geDEsIHkyMSA9IHkyIC0geTEsIHIyMSA9IHIyIC0gcjEsXG4gICAgICBsID0gTWF0aC5zcXJ0KHgyMSAqIHgyMSArIHkyMSAqIHkyMSk7XG4gIHJldHVybiB7XG4gICAgeDogKHgxICsgeDIgKyB4MjEgLyBsICogcjIxKSAvIDIsXG4gICAgeTogKHkxICsgeTIgKyB5MjEgLyBsICogcjIxKSAvIDIsXG4gICAgcjogKGwgKyByMSArIHIyKSAvIDJcbiAgfTtcbn1cblxuZnVuY3Rpb24gZW5jbG9zZUJhc2lzMyhhLCBiLCBjKSB7XG4gIHZhciB4MSA9IGEueCwgeTEgPSBhLnksIHIxID0gYS5yLFxuICAgICAgeDIgPSBiLngsIHkyID0gYi55LCByMiA9IGIucixcbiAgICAgIHgzID0gYy54LCB5MyA9IGMueSwgcjMgPSBjLnIsXG4gICAgICBhMiA9IHgxIC0geDIsXG4gICAgICBhMyA9IHgxIC0geDMsXG4gICAgICBiMiA9IHkxIC0geTIsXG4gICAgICBiMyA9IHkxIC0geTMsXG4gICAgICBjMiA9IHIyIC0gcjEsXG4gICAgICBjMyA9IHIzIC0gcjEsXG4gICAgICBkMSA9IHgxICogeDEgKyB5MSAqIHkxIC0gcjEgKiByMSxcbiAgICAgIGQyID0gZDEgLSB4MiAqIHgyIC0geTIgKiB5MiArIHIyICogcjIsXG4gICAgICBkMyA9IGQxIC0geDMgKiB4MyAtIHkzICogeTMgKyByMyAqIHIzLFxuICAgICAgYWIgPSBhMyAqIGIyIC0gYTIgKiBiMyxcbiAgICAgIHhhID0gKGIyICogZDMgLSBiMyAqIGQyKSAvIChhYiAqIDIpIC0geDEsXG4gICAgICB4YiA9IChiMyAqIGMyIC0gYjIgKiBjMykgLyBhYixcbiAgICAgIHlhID0gKGEzICogZDIgLSBhMiAqIGQzKSAvIChhYiAqIDIpIC0geTEsXG4gICAgICB5YiA9IChhMiAqIGMzIC0gYTMgKiBjMikgLyBhYixcbiAgICAgIEEgPSB4YiAqIHhiICsgeWIgKiB5YiAtIDEsXG4gICAgICBCID0gMiAqIChyMSArIHhhICogeGIgKyB5YSAqIHliKSxcbiAgICAgIEMgPSB4YSAqIHhhICsgeWEgKiB5YSAtIHIxICogcjEsXG4gICAgICByID0gLShBID8gKEIgKyBNYXRoLnNxcnQoQiAqIEIgLSA0ICogQSAqIEMpKSAvICgyICogQSkgOiBDIC8gQik7XG4gIHJldHVybiB7XG4gICAgeDogeDEgKyB4YSArIHhiICogcixcbiAgICB5OiB5MSArIHlhICsgeWIgKiByLFxuICAgIHI6IHJcbiAgfTtcbn1cbiIsImltcG9ydCBlbmNsb3NlIGZyb20gXCIuL2VuY2xvc2UuanNcIjtcblxuZnVuY3Rpb24gcGxhY2UoYiwgYSwgYykge1xuICB2YXIgZHggPSBiLnggLSBhLngsIHgsIGEyLFxuICAgICAgZHkgPSBiLnkgLSBhLnksIHksIGIyLFxuICAgICAgZDIgPSBkeCAqIGR4ICsgZHkgKiBkeTtcbiAgaWYgKGQyKSB7XG4gICAgYTIgPSBhLnIgKyBjLnIsIGEyICo9IGEyO1xuICAgIGIyID0gYi5yICsgYy5yLCBiMiAqPSBiMjtcbiAgICBpZiAoYTIgPiBiMikge1xuICAgICAgeCA9IChkMiArIGIyIC0gYTIpIC8gKDIgKiBkMik7XG4gICAgICB5ID0gTWF0aC5zcXJ0KE1hdGgubWF4KDAsIGIyIC8gZDIgLSB4ICogeCkpO1xuICAgICAgYy54ID0gYi54IC0geCAqIGR4IC0geSAqIGR5O1xuICAgICAgYy55ID0gYi55IC0geCAqIGR5ICsgeSAqIGR4O1xuICAgIH0gZWxzZSB7XG4gICAgICB4ID0gKGQyICsgYTIgLSBiMikgLyAoMiAqIGQyKTtcbiAgICAgIHkgPSBNYXRoLnNxcnQoTWF0aC5tYXgoMCwgYTIgLyBkMiAtIHggKiB4KSk7XG4gICAgICBjLnggPSBhLnggKyB4ICogZHggLSB5ICogZHk7XG4gICAgICBjLnkgPSBhLnkgKyB4ICogZHkgKyB5ICogZHg7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGMueCA9IGEueCArIGMucjtcbiAgICBjLnkgPSBhLnk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaW50ZXJzZWN0cyhhLCBiKSB7XG4gIHZhciBkciA9IGEuciArIGIuciAtIDFlLTYsIGR4ID0gYi54IC0gYS54LCBkeSA9IGIueSAtIGEueTtcbiAgcmV0dXJuIGRyID4gMCAmJiBkciAqIGRyID4gZHggKiBkeCArIGR5ICogZHk7XG59XG5cbmZ1bmN0aW9uIHNjb3JlKG5vZGUpIHtcbiAgdmFyIGEgPSBub2RlLl8sXG4gICAgICBiID0gbm9kZS5uZXh0Ll8sXG4gICAgICBhYiA9IGEuciArIGIucixcbiAgICAgIGR4ID0gKGEueCAqIGIuciArIGIueCAqIGEucikgLyBhYixcbiAgICAgIGR5ID0gKGEueSAqIGIuciArIGIueSAqIGEucikgLyBhYjtcbiAgcmV0dXJuIGR4ICogZHggKyBkeSAqIGR5O1xufVxuXG5mdW5jdGlvbiBOb2RlKGNpcmNsZSkge1xuICB0aGlzLl8gPSBjaXJjbGU7XG4gIHRoaXMubmV4dCA9IG51bGw7XG4gIHRoaXMucHJldmlvdXMgPSBudWxsO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFja0VuY2xvc2UoY2lyY2xlcykge1xuICBpZiAoIShuID0gY2lyY2xlcy5sZW5ndGgpKSByZXR1cm4gMDtcblxuICB2YXIgYSwgYiwgYywgbiwgYWEsIGNhLCBpLCBqLCBrLCBzaiwgc2s7XG5cbiAgLy8gUGxhY2UgdGhlIGZpcnN0IGNpcmNsZS5cbiAgYSA9IGNpcmNsZXNbMF0sIGEueCA9IDAsIGEueSA9IDA7XG4gIGlmICghKG4gPiAxKSkgcmV0dXJuIGEucjtcblxuICAvLyBQbGFjZSB0aGUgc2Vjb25kIGNpcmNsZS5cbiAgYiA9IGNpcmNsZXNbMV0sIGEueCA9IC1iLnIsIGIueCA9IGEuciwgYi55ID0gMDtcbiAgaWYgKCEobiA+IDIpKSByZXR1cm4gYS5yICsgYi5yO1xuXG4gIC8vIFBsYWNlIHRoZSB0aGlyZCBjaXJjbGUuXG4gIHBsYWNlKGIsIGEsIGMgPSBjaXJjbGVzWzJdKTtcblxuICAvLyBJbml0aWFsaXplIHRoZSBmcm9udC1jaGFpbiB1c2luZyB0aGUgZmlyc3QgdGhyZWUgY2lyY2xlcyBhLCBiIGFuZCBjLlxuICBhID0gbmV3IE5vZGUoYSksIGIgPSBuZXcgTm9kZShiKSwgYyA9IG5ldyBOb2RlKGMpO1xuICBhLm5leHQgPSBjLnByZXZpb3VzID0gYjtcbiAgYi5uZXh0ID0gYS5wcmV2aW91cyA9IGM7XG4gIGMubmV4dCA9IGIucHJldmlvdXMgPSBhO1xuXG4gIC8vIEF0dGVtcHQgdG8gcGxhY2UgZWFjaCByZW1haW5pbmcgY2lyY2xl4oCmXG4gIHBhY2s6IGZvciAoaSA9IDM7IGkgPCBuOyArK2kpIHtcbiAgICBwbGFjZShhLl8sIGIuXywgYyA9IGNpcmNsZXNbaV0pLCBjID0gbmV3IE5vZGUoYyk7XG5cbiAgICAvLyBGaW5kIHRoZSBjbG9zZXN0IGludGVyc2VjdGluZyBjaXJjbGUgb24gdGhlIGZyb250LWNoYWluLCBpZiBhbnkuXG4gICAgLy8g4oCcQ2xvc2VuZXNz4oCdIGlzIGRldGVybWluZWQgYnkgbGluZWFyIGRpc3RhbmNlIGFsb25nIHRoZSBmcm9udC1jaGFpbi5cbiAgICAvLyDigJxBaGVhZOKAnSBvciDigJxiZWhpbmTigJ0gaXMgbGlrZXdpc2UgZGV0ZXJtaW5lZCBieSBsaW5lYXIgZGlzdGFuY2UuXG4gICAgaiA9IGIubmV4dCwgayA9IGEucHJldmlvdXMsIHNqID0gYi5fLnIsIHNrID0gYS5fLnI7XG4gICAgZG8ge1xuICAgICAgaWYgKHNqIDw9IHNrKSB7XG4gICAgICAgIGlmIChpbnRlcnNlY3RzKGouXywgYy5fKSkge1xuICAgICAgICAgIGIgPSBqLCBhLm5leHQgPSBiLCBiLnByZXZpb3VzID0gYSwgLS1pO1xuICAgICAgICAgIGNvbnRpbnVlIHBhY2s7XG4gICAgICAgIH1cbiAgICAgICAgc2ogKz0gai5fLnIsIGogPSBqLm5leHQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoaW50ZXJzZWN0cyhrLl8sIGMuXykpIHtcbiAgICAgICAgICBhID0gaywgYS5uZXh0ID0gYiwgYi5wcmV2aW91cyA9IGEsIC0taTtcbiAgICAgICAgICBjb250aW51ZSBwYWNrO1xuICAgICAgICB9XG4gICAgICAgIHNrICs9IGsuXy5yLCBrID0gay5wcmV2aW91cztcbiAgICAgIH1cbiAgICB9IHdoaWxlIChqICE9PSBrLm5leHQpO1xuXG4gICAgLy8gU3VjY2VzcyEgSW5zZXJ0IHRoZSBuZXcgY2lyY2xlIGMgYmV0d2VlbiBhIGFuZCBiLlxuICAgIGMucHJldmlvdXMgPSBhLCBjLm5leHQgPSBiLCBhLm5leHQgPSBiLnByZXZpb3VzID0gYiA9IGM7XG5cbiAgICAvLyBDb21wdXRlIHRoZSBuZXcgY2xvc2VzdCBjaXJjbGUgcGFpciB0byB0aGUgY2VudHJvaWQuXG4gICAgYWEgPSBzY29yZShhKTtcbiAgICB3aGlsZSAoKGMgPSBjLm5leHQpICE9PSBiKSB7XG4gICAgICBpZiAoKGNhID0gc2NvcmUoYykpIDwgYWEpIHtcbiAgICAgICAgYSA9IGMsIGFhID0gY2E7XG4gICAgICB9XG4gICAgfVxuICAgIGIgPSBhLm5leHQ7XG4gIH1cblxuICAvLyBDb21wdXRlIHRoZSBlbmNsb3NpbmcgY2lyY2xlIG9mIHRoZSBmcm9udCBjaGFpbi5cbiAgYSA9IFtiLl9dLCBjID0gYjsgd2hpbGUgKChjID0gYy5uZXh0KSAhPT0gYikgYS5wdXNoKGMuXyk7IGMgPSBlbmNsb3NlKGEpO1xuXG4gIC8vIFRyYW5zbGF0ZSB0aGUgY2lyY2xlcyB0byBwdXQgdGhlIGVuY2xvc2luZyBjaXJjbGUgYXJvdW5kIHRoZSBvcmlnaW4uXG4gIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIGEgPSBjaXJjbGVzW2ldLCBhLnggLT0gYy54LCBhLnkgLT0gYy55O1xuXG4gIHJldHVybiBjLnI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNpcmNsZXMpIHtcbiAgcGFja0VuY2xvc2UoY2lyY2xlcyk7XG4gIHJldHVybiBjaXJjbGVzO1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIG9wdGlvbmFsKGYpIHtcbiAgcmV0dXJuIGYgPT0gbnVsbCA/IG51bGwgOiByZXF1aXJlZChmKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlcXVpcmVkKGYpIHtcbiAgaWYgKHR5cGVvZiBmICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcjtcbiAgcmV0dXJuIGY7XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gY29uc3RhbnRaZXJvKCkge1xuICByZXR1cm4gMDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHg7XG4gIH07XG59XG4iLCJpbXBvcnQge3BhY2tFbmNsb3NlfSBmcm9tIFwiLi9zaWJsaW5ncy5qc1wiO1xuaW1wb3J0IHtvcHRpb25hbH0gZnJvbSBcIi4uL2FjY2Vzc29ycy5qc1wiO1xuaW1wb3J0IGNvbnN0YW50LCB7Y29uc3RhbnRaZXJvfSBmcm9tIFwiLi4vY29uc3RhbnQuanNcIjtcblxuZnVuY3Rpb24gZGVmYXVsdFJhZGl1cyhkKSB7XG4gIHJldHVybiBNYXRoLnNxcnQoZC52YWx1ZSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgcmFkaXVzID0gbnVsbCxcbiAgICAgIGR4ID0gMSxcbiAgICAgIGR5ID0gMSxcbiAgICAgIHBhZGRpbmcgPSBjb25zdGFudFplcm87XG5cbiAgZnVuY3Rpb24gcGFjayhyb290KSB7XG4gICAgcm9vdC54ID0gZHggLyAyLCByb290LnkgPSBkeSAvIDI7XG4gICAgaWYgKHJhZGl1cykge1xuICAgICAgcm9vdC5lYWNoQmVmb3JlKHJhZGl1c0xlYWYocmFkaXVzKSlcbiAgICAgICAgICAuZWFjaEFmdGVyKHBhY2tDaGlsZHJlbihwYWRkaW5nLCAwLjUpKVxuICAgICAgICAgIC5lYWNoQmVmb3JlKHRyYW5zbGF0ZUNoaWxkKDEpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcm9vdC5lYWNoQmVmb3JlKHJhZGl1c0xlYWYoZGVmYXVsdFJhZGl1cykpXG4gICAgICAgICAgLmVhY2hBZnRlcihwYWNrQ2hpbGRyZW4oY29uc3RhbnRaZXJvLCAxKSlcbiAgICAgICAgICAuZWFjaEFmdGVyKHBhY2tDaGlsZHJlbihwYWRkaW5nLCByb290LnIgLyBNYXRoLm1pbihkeCwgZHkpKSlcbiAgICAgICAgICAuZWFjaEJlZm9yZSh0cmFuc2xhdGVDaGlsZChNYXRoLm1pbihkeCwgZHkpIC8gKDIgKiByb290LnIpKSk7XG4gICAgfVxuICAgIHJldHVybiByb290O1xuICB9XG5cbiAgcGFjay5yYWRpdXMgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocmFkaXVzID0gb3B0aW9uYWwoeCksIHBhY2spIDogcmFkaXVzO1xuICB9O1xuXG4gIHBhY2suc2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChkeCA9ICt4WzBdLCBkeSA9ICt4WzFdLCBwYWNrKSA6IFtkeCwgZHldO1xuICB9O1xuXG4gIHBhY2sucGFkZGluZyA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRkaW5nID0gdHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IHggOiBjb25zdGFudCgreCksIHBhY2spIDogcGFkZGluZztcbiAgfTtcblxuICByZXR1cm4gcGFjaztcbn1cblxuZnVuY3Rpb24gcmFkaXVzTGVhZihyYWRpdXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICBpZiAoIW5vZGUuY2hpbGRyZW4pIHtcbiAgICAgIG5vZGUuciA9IE1hdGgubWF4KDAsICtyYWRpdXMobm9kZSkgfHwgMCk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBwYWNrQ2hpbGRyZW4ocGFkZGluZywgaykge1xuICByZXR1cm4gZnVuY3Rpb24obm9kZSkge1xuICAgIGlmIChjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW4pIHtcbiAgICAgIHZhciBjaGlsZHJlbixcbiAgICAgICAgICBpLFxuICAgICAgICAgIG4gPSBjaGlsZHJlbi5sZW5ndGgsXG4gICAgICAgICAgciA9IHBhZGRpbmcobm9kZSkgKiBrIHx8IDAsXG4gICAgICAgICAgZTtcblxuICAgICAgaWYgKHIpIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIGNoaWxkcmVuW2ldLnIgKz0gcjtcbiAgICAgIGUgPSBwYWNrRW5jbG9zZShjaGlsZHJlbik7XG4gICAgICBpZiAocikgZm9yIChpID0gMDsgaSA8IG47ICsraSkgY2hpbGRyZW5baV0uciAtPSByO1xuICAgICAgbm9kZS5yID0gZSArIHI7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiB0cmFuc2xhdGVDaGlsZChrKSB7XG4gIHJldHVybiBmdW5jdGlvbihub2RlKSB7XG4gICAgdmFyIHBhcmVudCA9IG5vZGUucGFyZW50O1xuICAgIG5vZGUuciAqPSBrO1xuICAgIGlmIChwYXJlbnQpIHtcbiAgICAgIG5vZGUueCA9IHBhcmVudC54ICsgayAqIG5vZGUueDtcbiAgICAgIG5vZGUueSA9IHBhcmVudC55ICsgayAqIG5vZGUueTtcbiAgICB9XG4gIH07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihub2RlKSB7XG4gIG5vZGUueDAgPSBNYXRoLnJvdW5kKG5vZGUueDApO1xuICBub2RlLnkwID0gTWF0aC5yb3VuZChub2RlLnkwKTtcbiAgbm9kZS54MSA9IE1hdGgucm91bmQobm9kZS54MSk7XG4gIG5vZGUueTEgPSBNYXRoLnJvdW5kKG5vZGUueTEpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocGFyZW50LCB4MCwgeTAsIHgxLCB5MSkge1xuICB2YXIgbm9kZXMgPSBwYXJlbnQuY2hpbGRyZW4sXG4gICAgICBub2RlLFxuICAgICAgaSA9IC0xLFxuICAgICAgbiA9IG5vZGVzLmxlbmd0aCxcbiAgICAgIGsgPSBwYXJlbnQudmFsdWUgJiYgKHgxIC0geDApIC8gcGFyZW50LnZhbHVlO1xuXG4gIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgbm9kZSA9IG5vZGVzW2ldLCBub2RlLnkwID0geTAsIG5vZGUueTEgPSB5MTtcbiAgICBub2RlLngwID0geDAsIG5vZGUueDEgPSB4MCArPSBub2RlLnZhbHVlICogaztcbiAgfVxufVxuIiwiaW1wb3J0IHJvdW5kTm9kZSBmcm9tIFwiLi90cmVlbWFwL3JvdW5kLmpzXCI7XG5pbXBvcnQgdHJlZW1hcERpY2UgZnJvbSBcIi4vdHJlZW1hcC9kaWNlLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgZHggPSAxLFxuICAgICAgZHkgPSAxLFxuICAgICAgcGFkZGluZyA9IDAsXG4gICAgICByb3VuZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIHBhcnRpdGlvbihyb290KSB7XG4gICAgdmFyIG4gPSByb290LmhlaWdodCArIDE7XG4gICAgcm9vdC54MCA9XG4gICAgcm9vdC55MCA9IHBhZGRpbmc7XG4gICAgcm9vdC54MSA9IGR4O1xuICAgIHJvb3QueTEgPSBkeSAvIG47XG4gICAgcm9vdC5lYWNoQmVmb3JlKHBvc2l0aW9uTm9kZShkeSwgbikpO1xuICAgIGlmIChyb3VuZCkgcm9vdC5lYWNoQmVmb3JlKHJvdW5kTm9kZSk7XG4gICAgcmV0dXJuIHJvb3Q7XG4gIH1cblxuICBmdW5jdGlvbiBwb3NpdGlvbk5vZGUoZHksIG4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24obm9kZSkge1xuICAgICAgaWYgKG5vZGUuY2hpbGRyZW4pIHtcbiAgICAgICAgdHJlZW1hcERpY2Uobm9kZSwgbm9kZS54MCwgZHkgKiAobm9kZS5kZXB0aCArIDEpIC8gbiwgbm9kZS54MSwgZHkgKiAobm9kZS5kZXB0aCArIDIpIC8gbik7XG4gICAgICB9XG4gICAgICB2YXIgeDAgPSBub2RlLngwLFxuICAgICAgICAgIHkwID0gbm9kZS55MCxcbiAgICAgICAgICB4MSA9IG5vZGUueDEgLSBwYWRkaW5nLFxuICAgICAgICAgIHkxID0gbm9kZS55MSAtIHBhZGRpbmc7XG4gICAgICBpZiAoeDEgPCB4MCkgeDAgPSB4MSA9ICh4MCArIHgxKSAvIDI7XG4gICAgICBpZiAoeTEgPCB5MCkgeTAgPSB5MSA9ICh5MCArIHkxKSAvIDI7XG4gICAgICBub2RlLngwID0geDA7XG4gICAgICBub2RlLnkwID0geTA7XG4gICAgICBub2RlLngxID0geDE7XG4gICAgICBub2RlLnkxID0geTE7XG4gICAgfTtcbiAgfVxuXG4gIHBhcnRpdGlvbi5yb3VuZCA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyb3VuZCA9ICEheCwgcGFydGl0aW9uKSA6IHJvdW5kO1xuICB9O1xuXG4gIHBhcnRpdGlvbi5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGR4ID0gK3hbMF0sIGR5ID0gK3hbMV0sIHBhcnRpdGlvbikgOiBbZHgsIGR5XTtcbiAgfTtcblxuICBwYXJ0aXRpb24ucGFkZGluZyA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRkaW5nID0gK3gsIHBhcnRpdGlvbikgOiBwYWRkaW5nO1xuICB9O1xuXG4gIHJldHVybiBwYXJ0aXRpb247XG59XG4iLCJpbXBvcnQge3JlcXVpcmVkfSBmcm9tIFwiLi9hY2Nlc3NvcnMuanNcIjtcbmltcG9ydCB7Tm9kZSwgY29tcHV0ZUhlaWdodH0gZnJvbSBcIi4vaGllcmFyY2h5L2luZGV4LmpzXCI7XG5cbnZhciBrZXlQcmVmaXggPSBcIiRcIiwgLy8gUHJvdGVjdCBhZ2FpbnN0IGtleXMgbGlrZSDigJxfX3Byb3RvX1/igJ0uXG4gICAgcHJlcm9vdCA9IHtkZXB0aDogLTF9LFxuICAgIGFtYmlndW91cyA9IHt9O1xuXG5mdW5jdGlvbiBkZWZhdWx0SWQoZCkge1xuICByZXR1cm4gZC5pZDtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdFBhcmVudElkKGQpIHtcbiAgcmV0dXJuIGQucGFyZW50SWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgaWQgPSBkZWZhdWx0SWQsXG4gICAgICBwYXJlbnRJZCA9IGRlZmF1bHRQYXJlbnRJZDtcblxuICBmdW5jdGlvbiBzdHJhdGlmeShkYXRhKSB7XG4gICAgdmFyIGQsXG4gICAgICAgIGksXG4gICAgICAgIG4gPSBkYXRhLmxlbmd0aCxcbiAgICAgICAgcm9vdCxcbiAgICAgICAgcGFyZW50LFxuICAgICAgICBub2RlLFxuICAgICAgICBub2RlcyA9IG5ldyBBcnJheShuKSxcbiAgICAgICAgbm9kZUlkLFxuICAgICAgICBub2RlS2V5LFxuICAgICAgICBub2RlQnlLZXkgPSB7fTtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGQgPSBkYXRhW2ldLCBub2RlID0gbm9kZXNbaV0gPSBuZXcgTm9kZShkKTtcbiAgICAgIGlmICgobm9kZUlkID0gaWQoZCwgaSwgZGF0YSkpICE9IG51bGwgJiYgKG5vZGVJZCArPSBcIlwiKSkge1xuICAgICAgICBub2RlS2V5ID0ga2V5UHJlZml4ICsgKG5vZGUuaWQgPSBub2RlSWQpO1xuICAgICAgICBub2RlQnlLZXlbbm9kZUtleV0gPSBub2RlS2V5IGluIG5vZGVCeUtleSA/IGFtYmlndW91cyA6IG5vZGU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgbm9kZSA9IG5vZGVzW2ldLCBub2RlSWQgPSBwYXJlbnRJZChkYXRhW2ldLCBpLCBkYXRhKTtcbiAgICAgIGlmIChub2RlSWQgPT0gbnVsbCB8fCAhKG5vZGVJZCArPSBcIlwiKSkge1xuICAgICAgICBpZiAocm9vdCkgdGhyb3cgbmV3IEVycm9yKFwibXVsdGlwbGUgcm9vdHNcIik7XG4gICAgICAgIHJvb3QgPSBub2RlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFyZW50ID0gbm9kZUJ5S2V5W2tleVByZWZpeCArIG5vZGVJZF07XG4gICAgICAgIGlmICghcGFyZW50KSB0aHJvdyBuZXcgRXJyb3IoXCJtaXNzaW5nOiBcIiArIG5vZGVJZCk7XG4gICAgICAgIGlmIChwYXJlbnQgPT09IGFtYmlndW91cykgdGhyb3cgbmV3IEVycm9yKFwiYW1iaWd1b3VzOiBcIiArIG5vZGVJZCk7XG4gICAgICAgIGlmIChwYXJlbnQuY2hpbGRyZW4pIHBhcmVudC5jaGlsZHJlbi5wdXNoKG5vZGUpO1xuICAgICAgICBlbHNlIHBhcmVudC5jaGlsZHJlbiA9IFtub2RlXTtcbiAgICAgICAgbm9kZS5wYXJlbnQgPSBwYXJlbnQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCFyb290KSB0aHJvdyBuZXcgRXJyb3IoXCJubyByb290XCIpO1xuICAgIHJvb3QucGFyZW50ID0gcHJlcm9vdDtcbiAgICByb290LmVhY2hCZWZvcmUoZnVuY3Rpb24obm9kZSkgeyBub2RlLmRlcHRoID0gbm9kZS5wYXJlbnQuZGVwdGggKyAxOyAtLW47IH0pLmVhY2hCZWZvcmUoY29tcHV0ZUhlaWdodCk7XG4gICAgcm9vdC5wYXJlbnQgPSBudWxsO1xuICAgIGlmIChuID4gMCkgdGhyb3cgbmV3IEVycm9yKFwiY3ljbGVcIik7XG5cbiAgICByZXR1cm4gcm9vdDtcbiAgfVxuXG4gIHN0cmF0aWZ5LmlkID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGlkID0gcmVxdWlyZWQoeCksIHN0cmF0aWZ5KSA6IGlkO1xuICB9O1xuXG4gIHN0cmF0aWZ5LnBhcmVudElkID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhcmVudElkID0gcmVxdWlyZWQoeCksIHN0cmF0aWZ5KSA6IHBhcmVudElkO1xuICB9O1xuXG4gIHJldHVybiBzdHJhdGlmeTtcbn1cbiIsImltcG9ydCB7Tm9kZX0gZnJvbSBcIi4vaGllcmFyY2h5L2luZGV4LmpzXCI7XG5cbmZ1bmN0aW9uIGRlZmF1bHRTZXBhcmF0aW9uKGEsIGIpIHtcbiAgcmV0dXJuIGEucGFyZW50ID09PSBiLnBhcmVudCA/IDEgOiAyO1xufVxuXG4vLyBmdW5jdGlvbiByYWRpYWxTZXBhcmF0aW9uKGEsIGIpIHtcbi8vICAgcmV0dXJuIChhLnBhcmVudCA9PT0gYi5wYXJlbnQgPyAxIDogMikgLyBhLmRlcHRoO1xuLy8gfVxuXG4vLyBUaGlzIGZ1bmN0aW9uIGlzIHVzZWQgdG8gdHJhdmVyc2UgdGhlIGxlZnQgY29udG91ciBvZiBhIHN1YnRyZWUgKG9yXG4vLyBzdWJmb3Jlc3QpLiBJdCByZXR1cm5zIHRoZSBzdWNjZXNzb3Igb2YgdiBvbiB0aGlzIGNvbnRvdXIuIFRoaXMgc3VjY2Vzc29yIGlzXG4vLyBlaXRoZXIgZ2l2ZW4gYnkgdGhlIGxlZnRtb3N0IGNoaWxkIG9mIHYgb3IgYnkgdGhlIHRocmVhZCBvZiB2LiBUaGUgZnVuY3Rpb25cbi8vIHJldHVybnMgbnVsbCBpZiBhbmQgb25seSBpZiB2IGlzIG9uIHRoZSBoaWdoZXN0IGxldmVsIG9mIGl0cyBzdWJ0cmVlLlxuZnVuY3Rpb24gbmV4dExlZnQodikge1xuICB2YXIgY2hpbGRyZW4gPSB2LmNoaWxkcmVuO1xuICByZXR1cm4gY2hpbGRyZW4gPyBjaGlsZHJlblswXSA6IHYudDtcbn1cblxuLy8gVGhpcyBmdW5jdGlvbiB3b3JrcyBhbmFsb2dvdXNseSB0byBuZXh0TGVmdC5cbmZ1bmN0aW9uIG5leHRSaWdodCh2KSB7XG4gIHZhciBjaGlsZHJlbiA9IHYuY2hpbGRyZW47XG4gIHJldHVybiBjaGlsZHJlbiA/IGNoaWxkcmVuW2NoaWxkcmVuLmxlbmd0aCAtIDFdIDogdi50O1xufVxuXG4vLyBTaGlmdHMgdGhlIGN1cnJlbnQgc3VidHJlZSByb290ZWQgYXQgdysuIFRoaXMgaXMgZG9uZSBieSBpbmNyZWFzaW5nXG4vLyBwcmVsaW0odyspIGFuZCBtb2QodyspIGJ5IHNoaWZ0LlxuZnVuY3Rpb24gbW92ZVN1YnRyZWUod20sIHdwLCBzaGlmdCkge1xuICB2YXIgY2hhbmdlID0gc2hpZnQgLyAod3AuaSAtIHdtLmkpO1xuICB3cC5jIC09IGNoYW5nZTtcbiAgd3AucyArPSBzaGlmdDtcbiAgd20uYyArPSBjaGFuZ2U7XG4gIHdwLnogKz0gc2hpZnQ7XG4gIHdwLm0gKz0gc2hpZnQ7XG59XG5cbi8vIEFsbCBvdGhlciBzaGlmdHMsIGFwcGxpZWQgdG8gdGhlIHNtYWxsZXIgc3VidHJlZXMgYmV0d2VlbiB3LSBhbmQgdyssIGFyZVxuLy8gcGVyZm9ybWVkIGJ5IHRoaXMgZnVuY3Rpb24uIFRvIHByZXBhcmUgdGhlIHNoaWZ0cywgd2UgaGF2ZSB0byBhZGp1c3Rcbi8vIGNoYW5nZSh3KyksIHNoaWZ0KHcrKSwgYW5kIGNoYW5nZSh3LSkuXG5mdW5jdGlvbiBleGVjdXRlU2hpZnRzKHYpIHtcbiAgdmFyIHNoaWZ0ID0gMCxcbiAgICAgIGNoYW5nZSA9IDAsXG4gICAgICBjaGlsZHJlbiA9IHYuY2hpbGRyZW4sXG4gICAgICBpID0gY2hpbGRyZW4ubGVuZ3RoLFxuICAgICAgdztcbiAgd2hpbGUgKC0taSA+PSAwKSB7XG4gICAgdyA9IGNoaWxkcmVuW2ldO1xuICAgIHcueiArPSBzaGlmdDtcbiAgICB3Lm0gKz0gc2hpZnQ7XG4gICAgc2hpZnQgKz0gdy5zICsgKGNoYW5nZSArPSB3LmMpO1xuICB9XG59XG5cbi8vIElmIHZpLeKAmXMgYW5jZXN0b3IgaXMgYSBzaWJsaW5nIG9mIHYsIHJldHVybnMgdmkt4oCZcyBhbmNlc3Rvci4gT3RoZXJ3aXNlLFxuLy8gcmV0dXJucyB0aGUgc3BlY2lmaWVkIChkZWZhdWx0KSBhbmNlc3Rvci5cbmZ1bmN0aW9uIG5leHRBbmNlc3Rvcih2aW0sIHYsIGFuY2VzdG9yKSB7XG4gIHJldHVybiB2aW0uYS5wYXJlbnQgPT09IHYucGFyZW50ID8gdmltLmEgOiBhbmNlc3Rvcjtcbn1cblxuZnVuY3Rpb24gVHJlZU5vZGUobm9kZSwgaSkge1xuICB0aGlzLl8gPSBub2RlO1xuICB0aGlzLnBhcmVudCA9IG51bGw7XG4gIHRoaXMuY2hpbGRyZW4gPSBudWxsO1xuICB0aGlzLkEgPSBudWxsOyAvLyBkZWZhdWx0IGFuY2VzdG9yXG4gIHRoaXMuYSA9IHRoaXM7IC8vIGFuY2VzdG9yXG4gIHRoaXMueiA9IDA7IC8vIHByZWxpbVxuICB0aGlzLm0gPSAwOyAvLyBtb2RcbiAgdGhpcy5jID0gMDsgLy8gY2hhbmdlXG4gIHRoaXMucyA9IDA7IC8vIHNoaWZ0XG4gIHRoaXMudCA9IG51bGw7IC8vIHRocmVhZFxuICB0aGlzLmkgPSBpOyAvLyBudW1iZXJcbn1cblxuVHJlZU5vZGUucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShOb2RlLnByb3RvdHlwZSk7XG5cbmZ1bmN0aW9uIHRyZWVSb290KHJvb3QpIHtcbiAgdmFyIHRyZWUgPSBuZXcgVHJlZU5vZGUocm9vdCwgMCksXG4gICAgICBub2RlLFxuICAgICAgbm9kZXMgPSBbdHJlZV0sXG4gICAgICBjaGlsZCxcbiAgICAgIGNoaWxkcmVuLFxuICAgICAgaSxcbiAgICAgIG47XG5cbiAgd2hpbGUgKG5vZGUgPSBub2Rlcy5wb3AoKSkge1xuICAgIGlmIChjaGlsZHJlbiA9IG5vZGUuXy5jaGlsZHJlbikge1xuICAgICAgbm9kZS5jaGlsZHJlbiA9IG5ldyBBcnJheShuID0gY2hpbGRyZW4ubGVuZ3RoKTtcbiAgICAgIGZvciAoaSA9IG4gLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICBub2Rlcy5wdXNoKGNoaWxkID0gbm9kZS5jaGlsZHJlbltpXSA9IG5ldyBUcmVlTm9kZShjaGlsZHJlbltpXSwgaSkpO1xuICAgICAgICBjaGlsZC5wYXJlbnQgPSBub2RlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICh0cmVlLnBhcmVudCA9IG5ldyBUcmVlTm9kZShudWxsLCAwKSkuY2hpbGRyZW4gPSBbdHJlZV07XG4gIHJldHVybiB0cmVlO1xufVxuXG4vLyBOb2RlLWxpbmsgdHJlZSBkaWFncmFtIHVzaW5nIHRoZSBSZWluZ29sZC1UaWxmb3JkIFwidGlkeVwiIGFsZ29yaXRobVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBzZXBhcmF0aW9uID0gZGVmYXVsdFNlcGFyYXRpb24sXG4gICAgICBkeCA9IDEsXG4gICAgICBkeSA9IDEsXG4gICAgICBub2RlU2l6ZSA9IG51bGw7XG5cbiAgZnVuY3Rpb24gdHJlZShyb290KSB7XG4gICAgdmFyIHQgPSB0cmVlUm9vdChyb290KTtcblxuICAgIC8vIENvbXB1dGUgdGhlIGxheW91dCB1c2luZyBCdWNoaGVpbSBldCBhbC7igJlzIGFsZ29yaXRobS5cbiAgICB0LmVhY2hBZnRlcihmaXJzdFdhbGspLCB0LnBhcmVudC5tID0gLXQuejtcbiAgICB0LmVhY2hCZWZvcmUoc2Vjb25kV2Fsayk7XG5cbiAgICAvLyBJZiBhIGZpeGVkIG5vZGUgc2l6ZSBpcyBzcGVjaWZpZWQsIHNjYWxlIHggYW5kIHkuXG4gICAgaWYgKG5vZGVTaXplKSByb290LmVhY2hCZWZvcmUoc2l6ZU5vZGUpO1xuXG4gICAgLy8gSWYgYSBmaXhlZCB0cmVlIHNpemUgaXMgc3BlY2lmaWVkLCBzY2FsZSB4IGFuZCB5IGJhc2VkIG9uIHRoZSBleHRlbnQuXG4gICAgLy8gQ29tcHV0ZSB0aGUgbGVmdC1tb3N0LCByaWdodC1tb3N0LCBhbmQgZGVwdGgtbW9zdCBub2RlcyBmb3IgZXh0ZW50cy5cbiAgICBlbHNlIHtcbiAgICAgIHZhciBsZWZ0ID0gcm9vdCxcbiAgICAgICAgICByaWdodCA9IHJvb3QsXG4gICAgICAgICAgYm90dG9tID0gcm9vdDtcbiAgICAgIHJvb3QuZWFjaEJlZm9yZShmdW5jdGlvbihub2RlKSB7XG4gICAgICAgIGlmIChub2RlLnggPCBsZWZ0LngpIGxlZnQgPSBub2RlO1xuICAgICAgICBpZiAobm9kZS54ID4gcmlnaHQueCkgcmlnaHQgPSBub2RlO1xuICAgICAgICBpZiAobm9kZS5kZXB0aCA+IGJvdHRvbS5kZXB0aCkgYm90dG9tID0gbm9kZTtcbiAgICAgIH0pO1xuICAgICAgdmFyIHMgPSBsZWZ0ID09PSByaWdodCA/IDEgOiBzZXBhcmF0aW9uKGxlZnQsIHJpZ2h0KSAvIDIsXG4gICAgICAgICAgdHggPSBzIC0gbGVmdC54LFxuICAgICAgICAgIGt4ID0gZHggLyAocmlnaHQueCArIHMgKyB0eCksXG4gICAgICAgICAga3kgPSBkeSAvIChib3R0b20uZGVwdGggfHwgMSk7XG4gICAgICByb290LmVhY2hCZWZvcmUoZnVuY3Rpb24obm9kZSkge1xuICAgICAgICBub2RlLnggPSAobm9kZS54ICsgdHgpICoga3g7XG4gICAgICAgIG5vZGUueSA9IG5vZGUuZGVwdGggKiBreTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiByb290O1xuICB9XG5cbiAgLy8gQ29tcHV0ZXMgYSBwcmVsaW1pbmFyeSB4LWNvb3JkaW5hdGUgZm9yIHYuIEJlZm9yZSB0aGF0LCBGSVJTVCBXQUxLIGlzXG4gIC8vIGFwcGxpZWQgcmVjdXJzaXZlbHkgdG8gdGhlIGNoaWxkcmVuIG9mIHYsIGFzIHdlbGwgYXMgdGhlIGZ1bmN0aW9uXG4gIC8vIEFQUE9SVElPTi4gQWZ0ZXIgc3BhY2luZyBvdXQgdGhlIGNoaWxkcmVuIGJ5IGNhbGxpbmcgRVhFQ1VURSBTSElGVFMsIHRoZVxuICAvLyBub2RlIHYgaXMgcGxhY2VkIHRvIHRoZSBtaWRwb2ludCBvZiBpdHMgb3V0ZXJtb3N0IGNoaWxkcmVuLlxuICBmdW5jdGlvbiBmaXJzdFdhbGsodikge1xuICAgIHZhciBjaGlsZHJlbiA9IHYuY2hpbGRyZW4sXG4gICAgICAgIHNpYmxpbmdzID0gdi5wYXJlbnQuY2hpbGRyZW4sXG4gICAgICAgIHcgPSB2LmkgPyBzaWJsaW5nc1t2LmkgLSAxXSA6IG51bGw7XG4gICAgaWYgKGNoaWxkcmVuKSB7XG4gICAgICBleGVjdXRlU2hpZnRzKHYpO1xuICAgICAgdmFyIG1pZHBvaW50ID0gKGNoaWxkcmVuWzBdLnogKyBjaGlsZHJlbltjaGlsZHJlbi5sZW5ndGggLSAxXS56KSAvIDI7XG4gICAgICBpZiAodykge1xuICAgICAgICB2LnogPSB3LnogKyBzZXBhcmF0aW9uKHYuXywgdy5fKTtcbiAgICAgICAgdi5tID0gdi56IC0gbWlkcG9pbnQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2LnogPSBtaWRwb2ludDtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHcpIHtcbiAgICAgIHYueiA9IHcueiArIHNlcGFyYXRpb24odi5fLCB3Ll8pO1xuICAgIH1cbiAgICB2LnBhcmVudC5BID0gYXBwb3J0aW9uKHYsIHcsIHYucGFyZW50LkEgfHwgc2libGluZ3NbMF0pO1xuICB9XG5cbiAgLy8gQ29tcHV0ZXMgYWxsIHJlYWwgeC1jb29yZGluYXRlcyBieSBzdW1taW5nIHVwIHRoZSBtb2RpZmllcnMgcmVjdXJzaXZlbHkuXG4gIGZ1bmN0aW9uIHNlY29uZFdhbGsodikge1xuICAgIHYuXy54ID0gdi56ICsgdi5wYXJlbnQubTtcbiAgICB2Lm0gKz0gdi5wYXJlbnQubTtcbiAgfVxuXG4gIC8vIFRoZSBjb3JlIG9mIHRoZSBhbGdvcml0aG0uIEhlcmUsIGEgbmV3IHN1YnRyZWUgaXMgY29tYmluZWQgd2l0aCB0aGVcbiAgLy8gcHJldmlvdXMgc3VidHJlZXMuIFRocmVhZHMgYXJlIHVzZWQgdG8gdHJhdmVyc2UgdGhlIGluc2lkZSBhbmQgb3V0c2lkZVxuICAvLyBjb250b3VycyBvZiB0aGUgbGVmdCBhbmQgcmlnaHQgc3VidHJlZSB1cCB0byB0aGUgaGlnaGVzdCBjb21tb24gbGV2ZWwuIFRoZVxuICAvLyB2ZXJ0aWNlcyB1c2VkIGZvciB0aGUgdHJhdmVyc2FscyBhcmUgdmkrLCB2aS0sIHZvLSwgYW5kIHZvKywgd2hlcmUgdGhlXG4gIC8vIHN1cGVyc2NyaXB0IG8gbWVhbnMgb3V0c2lkZSBhbmQgaSBtZWFucyBpbnNpZGUsIHRoZSBzdWJzY3JpcHQgLSBtZWFucyBsZWZ0XG4gIC8vIHN1YnRyZWUgYW5kICsgbWVhbnMgcmlnaHQgc3VidHJlZS4gRm9yIHN1bW1pbmcgdXAgdGhlIG1vZGlmaWVycyBhbG9uZyB0aGVcbiAgLy8gY29udG91ciwgd2UgdXNlIHJlc3BlY3RpdmUgdmFyaWFibGVzIHNpKywgc2ktLCBzby0sIGFuZCBzbysuIFdoZW5ldmVyIHR3b1xuICAvLyBub2RlcyBvZiB0aGUgaW5zaWRlIGNvbnRvdXJzIGNvbmZsaWN0LCB3ZSBjb21wdXRlIHRoZSBsZWZ0IG9uZSBvZiB0aGVcbiAgLy8gZ3JlYXRlc3QgdW5jb21tb24gYW5jZXN0b3JzIHVzaW5nIHRoZSBmdW5jdGlvbiBBTkNFU1RPUiBhbmQgY2FsbCBNT1ZFXG4gIC8vIFNVQlRSRUUgdG8gc2hpZnQgdGhlIHN1YnRyZWUgYW5kIHByZXBhcmUgdGhlIHNoaWZ0cyBvZiBzbWFsbGVyIHN1YnRyZWVzLlxuICAvLyBGaW5hbGx5LCB3ZSBhZGQgYSBuZXcgdGhyZWFkIChpZiBuZWNlc3NhcnkpLlxuICBmdW5jdGlvbiBhcHBvcnRpb24odiwgdywgYW5jZXN0b3IpIHtcbiAgICBpZiAodykge1xuICAgICAgdmFyIHZpcCA9IHYsXG4gICAgICAgICAgdm9wID0gdixcbiAgICAgICAgICB2aW0gPSB3LFxuICAgICAgICAgIHZvbSA9IHZpcC5wYXJlbnQuY2hpbGRyZW5bMF0sXG4gICAgICAgICAgc2lwID0gdmlwLm0sXG4gICAgICAgICAgc29wID0gdm9wLm0sXG4gICAgICAgICAgc2ltID0gdmltLm0sXG4gICAgICAgICAgc29tID0gdm9tLm0sXG4gICAgICAgICAgc2hpZnQ7XG4gICAgICB3aGlsZSAodmltID0gbmV4dFJpZ2h0KHZpbSksIHZpcCA9IG5leHRMZWZ0KHZpcCksIHZpbSAmJiB2aXApIHtcbiAgICAgICAgdm9tID0gbmV4dExlZnQodm9tKTtcbiAgICAgICAgdm9wID0gbmV4dFJpZ2h0KHZvcCk7XG4gICAgICAgIHZvcC5hID0gdjtcbiAgICAgICAgc2hpZnQgPSB2aW0ueiArIHNpbSAtIHZpcC56IC0gc2lwICsgc2VwYXJhdGlvbih2aW0uXywgdmlwLl8pO1xuICAgICAgICBpZiAoc2hpZnQgPiAwKSB7XG4gICAgICAgICAgbW92ZVN1YnRyZWUobmV4dEFuY2VzdG9yKHZpbSwgdiwgYW5jZXN0b3IpLCB2LCBzaGlmdCk7XG4gICAgICAgICAgc2lwICs9IHNoaWZ0O1xuICAgICAgICAgIHNvcCArPSBzaGlmdDtcbiAgICAgICAgfVxuICAgICAgICBzaW0gKz0gdmltLm07XG4gICAgICAgIHNpcCArPSB2aXAubTtcbiAgICAgICAgc29tICs9IHZvbS5tO1xuICAgICAgICBzb3AgKz0gdm9wLm07XG4gICAgICB9XG4gICAgICBpZiAodmltICYmICFuZXh0UmlnaHQodm9wKSkge1xuICAgICAgICB2b3AudCA9IHZpbTtcbiAgICAgICAgdm9wLm0gKz0gc2ltIC0gc29wO1xuICAgICAgfVxuICAgICAgaWYgKHZpcCAmJiAhbmV4dExlZnQodm9tKSkge1xuICAgICAgICB2b20udCA9IHZpcDtcbiAgICAgICAgdm9tLm0gKz0gc2lwIC0gc29tO1xuICAgICAgICBhbmNlc3RvciA9IHY7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBhbmNlc3RvcjtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNpemVOb2RlKG5vZGUpIHtcbiAgICBub2RlLnggKj0gZHg7XG4gICAgbm9kZS55ID0gbm9kZS5kZXB0aCAqIGR5O1xuICB9XG5cbiAgdHJlZS5zZXBhcmF0aW9uID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNlcGFyYXRpb24gPSB4LCB0cmVlKSA6IHNlcGFyYXRpb247XG4gIH07XG5cbiAgdHJlZS5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG5vZGVTaXplID0gZmFsc2UsIGR4ID0gK3hbMF0sIGR5ID0gK3hbMV0sIHRyZWUpIDogKG5vZGVTaXplID8gbnVsbCA6IFtkeCwgZHldKTtcbiAgfTtcblxuICB0cmVlLm5vZGVTaXplID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG5vZGVTaXplID0gdHJ1ZSwgZHggPSAreFswXSwgZHkgPSAreFsxXSwgdHJlZSkgOiAobm9kZVNpemUgPyBbZHgsIGR5XSA6IG51bGwpO1xuICB9O1xuXG4gIHJldHVybiB0cmVlO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocGFyZW50LCB4MCwgeTAsIHgxLCB5MSkge1xuICB2YXIgbm9kZXMgPSBwYXJlbnQuY2hpbGRyZW4sXG4gICAgICBub2RlLFxuICAgICAgaSA9IC0xLFxuICAgICAgbiA9IG5vZGVzLmxlbmd0aCxcbiAgICAgIGsgPSBwYXJlbnQudmFsdWUgJiYgKHkxIC0geTApIC8gcGFyZW50LnZhbHVlO1xuXG4gIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgbm9kZSA9IG5vZGVzW2ldLCBub2RlLngwID0geDAsIG5vZGUueDEgPSB4MTtcbiAgICBub2RlLnkwID0geTAsIG5vZGUueTEgPSB5MCArPSBub2RlLnZhbHVlICogaztcbiAgfVxufVxuIiwiaW1wb3J0IHRyZWVtYXBEaWNlIGZyb20gXCIuL2RpY2UuanNcIjtcbmltcG9ydCB0cmVlbWFwU2xpY2UgZnJvbSBcIi4vc2xpY2UuanNcIjtcblxuZXhwb3J0IHZhciBwaGkgPSAoMSArIE1hdGguc3FydCg1KSkgLyAyO1xuXG5leHBvcnQgZnVuY3Rpb24gc3F1YXJpZnlSYXRpbyhyYXRpbywgcGFyZW50LCB4MCwgeTAsIHgxLCB5MSkge1xuICB2YXIgcm93cyA9IFtdLFxuICAgICAgbm9kZXMgPSBwYXJlbnQuY2hpbGRyZW4sXG4gICAgICByb3csXG4gICAgICBub2RlVmFsdWUsXG4gICAgICBpMCA9IDAsXG4gICAgICBpMSA9IDAsXG4gICAgICBuID0gbm9kZXMubGVuZ3RoLFxuICAgICAgZHgsIGR5LFxuICAgICAgdmFsdWUgPSBwYXJlbnQudmFsdWUsXG4gICAgICBzdW1WYWx1ZSxcbiAgICAgIG1pblZhbHVlLFxuICAgICAgbWF4VmFsdWUsXG4gICAgICBuZXdSYXRpbyxcbiAgICAgIG1pblJhdGlvLFxuICAgICAgYWxwaGEsXG4gICAgICBiZXRhO1xuXG4gIHdoaWxlIChpMCA8IG4pIHtcbiAgICBkeCA9IHgxIC0geDAsIGR5ID0geTEgLSB5MDtcblxuICAgIC8vIEZpbmQgdGhlIG5leHQgbm9uLWVtcHR5IG5vZGUuXG4gICAgZG8gc3VtVmFsdWUgPSBub2Rlc1tpMSsrXS52YWx1ZTsgd2hpbGUgKCFzdW1WYWx1ZSAmJiBpMSA8IG4pO1xuICAgIG1pblZhbHVlID0gbWF4VmFsdWUgPSBzdW1WYWx1ZTtcbiAgICBhbHBoYSA9IE1hdGgubWF4KGR5IC8gZHgsIGR4IC8gZHkpIC8gKHZhbHVlICogcmF0aW8pO1xuICAgIGJldGEgPSBzdW1WYWx1ZSAqIHN1bVZhbHVlICogYWxwaGE7XG4gICAgbWluUmF0aW8gPSBNYXRoLm1heChtYXhWYWx1ZSAvIGJldGEsIGJldGEgLyBtaW5WYWx1ZSk7XG5cbiAgICAvLyBLZWVwIGFkZGluZyBub2RlcyB3aGlsZSB0aGUgYXNwZWN0IHJhdGlvIG1haW50YWlucyBvciBpbXByb3Zlcy5cbiAgICBmb3IgKDsgaTEgPCBuOyArK2kxKSB7XG4gICAgICBzdW1WYWx1ZSArPSBub2RlVmFsdWUgPSBub2Rlc1tpMV0udmFsdWU7XG4gICAgICBpZiAobm9kZVZhbHVlIDwgbWluVmFsdWUpIG1pblZhbHVlID0gbm9kZVZhbHVlO1xuICAgICAgaWYgKG5vZGVWYWx1ZSA+IG1heFZhbHVlKSBtYXhWYWx1ZSA9IG5vZGVWYWx1ZTtcbiAgICAgIGJldGEgPSBzdW1WYWx1ZSAqIHN1bVZhbHVlICogYWxwaGE7XG4gICAgICBuZXdSYXRpbyA9IE1hdGgubWF4KG1heFZhbHVlIC8gYmV0YSwgYmV0YSAvIG1pblZhbHVlKTtcbiAgICAgIGlmIChuZXdSYXRpbyA+IG1pblJhdGlvKSB7IHN1bVZhbHVlIC09IG5vZGVWYWx1ZTsgYnJlYWs7IH1cbiAgICAgIG1pblJhdGlvID0gbmV3UmF0aW87XG4gICAgfVxuXG4gICAgLy8gUG9zaXRpb24gYW5kIHJlY29yZCB0aGUgcm93IG9yaWVudGF0aW9uLlxuICAgIHJvd3MucHVzaChyb3cgPSB7dmFsdWU6IHN1bVZhbHVlLCBkaWNlOiBkeCA8IGR5LCBjaGlsZHJlbjogbm9kZXMuc2xpY2UoaTAsIGkxKX0pO1xuICAgIGlmIChyb3cuZGljZSkgdHJlZW1hcERpY2Uocm93LCB4MCwgeTAsIHgxLCB2YWx1ZSA/IHkwICs9IGR5ICogc3VtVmFsdWUgLyB2YWx1ZSA6IHkxKTtcbiAgICBlbHNlIHRyZWVtYXBTbGljZShyb3csIHgwLCB5MCwgdmFsdWUgPyB4MCArPSBkeCAqIHN1bVZhbHVlIC8gdmFsdWUgOiB4MSwgeTEpO1xuICAgIHZhbHVlIC09IHN1bVZhbHVlLCBpMCA9IGkxO1xuICB9XG5cbiAgcmV0dXJuIHJvd3M7XG59XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBjdXN0b20ocmF0aW8pIHtcblxuICBmdW5jdGlvbiBzcXVhcmlmeShwYXJlbnQsIHgwLCB5MCwgeDEsIHkxKSB7XG4gICAgc3F1YXJpZnlSYXRpbyhyYXRpbywgcGFyZW50LCB4MCwgeTAsIHgxLCB5MSk7XG4gIH1cblxuICBzcXVhcmlmeS5yYXRpbyA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gY3VzdG9tKCh4ID0gK3gpID4gMSA/IHggOiAxKTtcbiAgfTtcblxuICByZXR1cm4gc3F1YXJpZnk7XG59KShwaGkpO1xuIiwiaW1wb3J0IHJvdW5kTm9kZSBmcm9tIFwiLi9yb3VuZC5qc1wiO1xuaW1wb3J0IHNxdWFyaWZ5IGZyb20gXCIuL3NxdWFyaWZ5LmpzXCI7XG5pbXBvcnQge3JlcXVpcmVkfSBmcm9tIFwiLi4vYWNjZXNzb3JzLmpzXCI7XG5pbXBvcnQgY29uc3RhbnQsIHtjb25zdGFudFplcm99IGZyb20gXCIuLi9jb25zdGFudC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHRpbGUgPSBzcXVhcmlmeSxcbiAgICAgIHJvdW5kID0gZmFsc2UsXG4gICAgICBkeCA9IDEsXG4gICAgICBkeSA9IDEsXG4gICAgICBwYWRkaW5nU3RhY2sgPSBbMF0sXG4gICAgICBwYWRkaW5nSW5uZXIgPSBjb25zdGFudFplcm8sXG4gICAgICBwYWRkaW5nVG9wID0gY29uc3RhbnRaZXJvLFxuICAgICAgcGFkZGluZ1JpZ2h0ID0gY29uc3RhbnRaZXJvLFxuICAgICAgcGFkZGluZ0JvdHRvbSA9IGNvbnN0YW50WmVybyxcbiAgICAgIHBhZGRpbmdMZWZ0ID0gY29uc3RhbnRaZXJvO1xuXG4gIGZ1bmN0aW9uIHRyZWVtYXAocm9vdCkge1xuICAgIHJvb3QueDAgPVxuICAgIHJvb3QueTAgPSAwO1xuICAgIHJvb3QueDEgPSBkeDtcbiAgICByb290LnkxID0gZHk7XG4gICAgcm9vdC5lYWNoQmVmb3JlKHBvc2l0aW9uTm9kZSk7XG4gICAgcGFkZGluZ1N0YWNrID0gWzBdO1xuICAgIGlmIChyb3VuZCkgcm9vdC5lYWNoQmVmb3JlKHJvdW5kTm9kZSk7XG4gICAgcmV0dXJuIHJvb3Q7XG4gIH1cblxuICBmdW5jdGlvbiBwb3NpdGlvbk5vZGUobm9kZSkge1xuICAgIHZhciBwID0gcGFkZGluZ1N0YWNrW25vZGUuZGVwdGhdLFxuICAgICAgICB4MCA9IG5vZGUueDAgKyBwLFxuICAgICAgICB5MCA9IG5vZGUueTAgKyBwLFxuICAgICAgICB4MSA9IG5vZGUueDEgLSBwLFxuICAgICAgICB5MSA9IG5vZGUueTEgLSBwO1xuICAgIGlmICh4MSA8IHgwKSB4MCA9IHgxID0gKHgwICsgeDEpIC8gMjtcbiAgICBpZiAoeTEgPCB5MCkgeTAgPSB5MSA9ICh5MCArIHkxKSAvIDI7XG4gICAgbm9kZS54MCA9IHgwO1xuICAgIG5vZGUueTAgPSB5MDtcbiAgICBub2RlLngxID0geDE7XG4gICAgbm9kZS55MSA9IHkxO1xuICAgIGlmIChub2RlLmNoaWxkcmVuKSB7XG4gICAgICBwID0gcGFkZGluZ1N0YWNrW25vZGUuZGVwdGggKyAxXSA9IHBhZGRpbmdJbm5lcihub2RlKSAvIDI7XG4gICAgICB4MCArPSBwYWRkaW5nTGVmdChub2RlKSAtIHA7XG4gICAgICB5MCArPSBwYWRkaW5nVG9wKG5vZGUpIC0gcDtcbiAgICAgIHgxIC09IHBhZGRpbmdSaWdodChub2RlKSAtIHA7XG4gICAgICB5MSAtPSBwYWRkaW5nQm90dG9tKG5vZGUpIC0gcDtcbiAgICAgIGlmICh4MSA8IHgwKSB4MCA9IHgxID0gKHgwICsgeDEpIC8gMjtcbiAgICAgIGlmICh5MSA8IHkwKSB5MCA9IHkxID0gKHkwICsgeTEpIC8gMjtcbiAgICAgIHRpbGUobm9kZSwgeDAsIHkwLCB4MSwgeTEpO1xuICAgIH1cbiAgfVxuXG4gIHRyZWVtYXAucm91bmQgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocm91bmQgPSAhIXgsIHRyZWVtYXApIDogcm91bmQ7XG4gIH07XG5cbiAgdHJlZW1hcC5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGR4ID0gK3hbMF0sIGR5ID0gK3hbMV0sIHRyZWVtYXApIDogW2R4LCBkeV07XG4gIH07XG5cbiAgdHJlZW1hcC50aWxlID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRpbGUgPSByZXF1aXJlZCh4KSwgdHJlZW1hcCkgOiB0aWxlO1xuICB9O1xuXG4gIHRyZWVtYXAucGFkZGluZyA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHRyZWVtYXAucGFkZGluZ0lubmVyKHgpLnBhZGRpbmdPdXRlcih4KSA6IHRyZWVtYXAucGFkZGluZ0lubmVyKCk7XG4gIH07XG5cbiAgdHJlZW1hcC5wYWRkaW5nSW5uZXIgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkZGluZ0lubmVyID0gdHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IHggOiBjb25zdGFudCgreCksIHRyZWVtYXApIDogcGFkZGluZ0lubmVyO1xuICB9O1xuXG4gIHRyZWVtYXAucGFkZGluZ091dGVyID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gdHJlZW1hcC5wYWRkaW5nVG9wKHgpLnBhZGRpbmdSaWdodCh4KS5wYWRkaW5nQm90dG9tKHgpLnBhZGRpbmdMZWZ0KHgpIDogdHJlZW1hcC5wYWRkaW5nVG9wKCk7XG4gIH07XG5cbiAgdHJlZW1hcC5wYWRkaW5nVG9wID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmdUb3AgPSB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8geCA6IGNvbnN0YW50KCt4KSwgdHJlZW1hcCkgOiBwYWRkaW5nVG9wO1xuICB9O1xuXG4gIHRyZWVtYXAucGFkZGluZ1JpZ2h0ID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmdSaWdodCA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogY29uc3RhbnQoK3gpLCB0cmVlbWFwKSA6IHBhZGRpbmdSaWdodDtcbiAgfTtcblxuICB0cmVlbWFwLnBhZGRpbmdCb3R0b20gPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkZGluZ0JvdHRvbSA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogY29uc3RhbnQoK3gpLCB0cmVlbWFwKSA6IHBhZGRpbmdCb3R0b207XG4gIH07XG5cbiAgdHJlZW1hcC5wYWRkaW5nTGVmdCA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRkaW5nTGVmdCA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogY29uc3RhbnQoK3gpLCB0cmVlbWFwKSA6IHBhZGRpbmdMZWZ0O1xuICB9O1xuXG4gIHJldHVybiB0cmVlbWFwO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocGFyZW50LCB4MCwgeTAsIHgxLCB5MSkge1xuICB2YXIgbm9kZXMgPSBwYXJlbnQuY2hpbGRyZW4sXG4gICAgICBpLCBuID0gbm9kZXMubGVuZ3RoLFxuICAgICAgc3VtLCBzdW1zID0gbmV3IEFycmF5KG4gKyAxKTtcblxuICBmb3IgKHN1bXNbMF0gPSBzdW0gPSBpID0gMDsgaSA8IG47ICsraSkge1xuICAgIHN1bXNbaSArIDFdID0gc3VtICs9IG5vZGVzW2ldLnZhbHVlO1xuICB9XG5cbiAgcGFydGl0aW9uKDAsIG4sIHBhcmVudC52YWx1ZSwgeDAsIHkwLCB4MSwgeTEpO1xuXG4gIGZ1bmN0aW9uIHBhcnRpdGlvbihpLCBqLCB2YWx1ZSwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgICBpZiAoaSA+PSBqIC0gMSkge1xuICAgICAgdmFyIG5vZGUgPSBub2Rlc1tpXTtcbiAgICAgIG5vZGUueDAgPSB4MCwgbm9kZS55MCA9IHkwO1xuICAgICAgbm9kZS54MSA9IHgxLCBub2RlLnkxID0geTE7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIHZhbHVlT2Zmc2V0ID0gc3Vtc1tpXSxcbiAgICAgICAgdmFsdWVUYXJnZXQgPSAodmFsdWUgLyAyKSArIHZhbHVlT2Zmc2V0LFxuICAgICAgICBrID0gaSArIDEsXG4gICAgICAgIGhpID0gaiAtIDE7XG5cbiAgICB3aGlsZSAoayA8IGhpKSB7XG4gICAgICB2YXIgbWlkID0gayArIGhpID4+PiAxO1xuICAgICAgaWYgKHN1bXNbbWlkXSA8IHZhbHVlVGFyZ2V0KSBrID0gbWlkICsgMTtcbiAgICAgIGVsc2UgaGkgPSBtaWQ7XG4gICAgfVxuXG4gICAgaWYgKCh2YWx1ZVRhcmdldCAtIHN1bXNbayAtIDFdKSA8IChzdW1zW2tdIC0gdmFsdWVUYXJnZXQpICYmIGkgKyAxIDwgaykgLS1rO1xuXG4gICAgdmFyIHZhbHVlTGVmdCA9IHN1bXNba10gLSB2YWx1ZU9mZnNldCxcbiAgICAgICAgdmFsdWVSaWdodCA9IHZhbHVlIC0gdmFsdWVMZWZ0O1xuXG4gICAgaWYgKCh4MSAtIHgwKSA+ICh5MSAtIHkwKSkge1xuICAgICAgdmFyIHhrID0gKHgwICogdmFsdWVSaWdodCArIHgxICogdmFsdWVMZWZ0KSAvIHZhbHVlO1xuICAgICAgcGFydGl0aW9uKGksIGssIHZhbHVlTGVmdCwgeDAsIHkwLCB4aywgeTEpO1xuICAgICAgcGFydGl0aW9uKGssIGosIHZhbHVlUmlnaHQsIHhrLCB5MCwgeDEsIHkxKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHlrID0gKHkwICogdmFsdWVSaWdodCArIHkxICogdmFsdWVMZWZ0KSAvIHZhbHVlO1xuICAgICAgcGFydGl0aW9uKGksIGssIHZhbHVlTGVmdCwgeDAsIHkwLCB4MSwgeWspO1xuICAgICAgcGFydGl0aW9uKGssIGosIHZhbHVlUmlnaHQsIHgwLCB5aywgeDEsIHkxKTtcbiAgICB9XG4gIH1cbn1cbiIsImltcG9ydCBkaWNlIGZyb20gXCIuL2RpY2UuanNcIjtcbmltcG9ydCBzbGljZSBmcm9tIFwiLi9zbGljZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwYXJlbnQsIHgwLCB5MCwgeDEsIHkxKSB7XG4gIChwYXJlbnQuZGVwdGggJiAxID8gc2xpY2UgOiBkaWNlKShwYXJlbnQsIHgwLCB5MCwgeDEsIHkxKTtcbn1cbiIsImltcG9ydCB0cmVlbWFwRGljZSBmcm9tIFwiLi9kaWNlLmpzXCI7XG5pbXBvcnQgdHJlZW1hcFNsaWNlIGZyb20gXCIuL3NsaWNlLmpzXCI7XG5pbXBvcnQge3BoaSwgc3F1YXJpZnlSYXRpb30gZnJvbSBcIi4vc3F1YXJpZnkuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIGN1c3RvbShyYXRpbykge1xuXG4gIGZ1bmN0aW9uIHJlc3F1YXJpZnkocGFyZW50LCB4MCwgeTAsIHgxLCB5MSkge1xuICAgIGlmICgocm93cyA9IHBhcmVudC5fc3F1YXJpZnkpICYmIChyb3dzLnJhdGlvID09PSByYXRpbykpIHtcbiAgICAgIHZhciByb3dzLFxuICAgICAgICAgIHJvdyxcbiAgICAgICAgICBub2RlcyxcbiAgICAgICAgICBpLFxuICAgICAgICAgIGogPSAtMSxcbiAgICAgICAgICBuLFxuICAgICAgICAgIG0gPSByb3dzLmxlbmd0aCxcbiAgICAgICAgICB2YWx1ZSA9IHBhcmVudC52YWx1ZTtcblxuICAgICAgd2hpbGUgKCsraiA8IG0pIHtcbiAgICAgICAgcm93ID0gcm93c1tqXSwgbm9kZXMgPSByb3cuY2hpbGRyZW47XG4gICAgICAgIGZvciAoaSA9IHJvdy52YWx1ZSA9IDAsIG4gPSBub2Rlcy5sZW5ndGg7IGkgPCBuOyArK2kpIHJvdy52YWx1ZSArPSBub2Rlc1tpXS52YWx1ZTtcbiAgICAgICAgaWYgKHJvdy5kaWNlKSB0cmVlbWFwRGljZShyb3csIHgwLCB5MCwgeDEsIHkwICs9ICh5MSAtIHkwKSAqIHJvdy52YWx1ZSAvIHZhbHVlKTtcbiAgICAgICAgZWxzZSB0cmVlbWFwU2xpY2Uocm93LCB4MCwgeTAsIHgwICs9ICh4MSAtIHgwKSAqIHJvdy52YWx1ZSAvIHZhbHVlLCB5MSk7XG4gICAgICAgIHZhbHVlIC09IHJvdy52YWx1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcGFyZW50Ll9zcXVhcmlmeSA9IHJvd3MgPSBzcXVhcmlmeVJhdGlvKHJhdGlvLCBwYXJlbnQsIHgwLCB5MCwgeDEsIHkxKTtcbiAgICAgIHJvd3MucmF0aW8gPSByYXRpbztcbiAgICB9XG4gIH1cblxuICByZXNxdWFyaWZ5LnJhdGlvID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBjdXN0b20oKHggPSAreCkgPiAxID8geCA6IDEpO1xuICB9O1xuXG4gIHJldHVybiByZXNxdWFyaWZ5O1xufSkocGhpKTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHJhbmdlKSB7XG4gIHZhciBuID0gcmFuZ2UubGVuZ3RoO1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHJldHVybiByYW5nZVtNYXRoLm1heCgwLCBNYXRoLm1pbihuIC0gMSwgTWF0aC5mbG9vcih0ICogbikpKV07XG4gIH07XG59XG4iLCJpbXBvcnQge2h1ZX0gZnJvbSBcIi4vY29sb3IuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICB2YXIgaSA9IGh1ZSgrYSwgK2IpO1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHZhciB4ID0gaSh0KTtcbiAgICByZXR1cm4geCAtIDM2MCAqIE1hdGguZmxvb3IoeCAvIDM2MCk7XG4gIH07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHJldHVybiBhID0gK2EsIGIgPSArYiwgZnVuY3Rpb24odCkge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKGEgKiAoMSAtIHQpICsgYiAqIHQpO1xuICB9O1xufVxuIiwidmFyIHJobyA9IE1hdGguU1FSVDIsXG4gICAgcmhvMiA9IDIsXG4gICAgcmhvNCA9IDQsXG4gICAgZXBzaWxvbjIgPSAxZS0xMjtcblxuZnVuY3Rpb24gY29zaCh4KSB7XG4gIHJldHVybiAoKHggPSBNYXRoLmV4cCh4KSkgKyAxIC8geCkgLyAyO1xufVxuXG5mdW5jdGlvbiBzaW5oKHgpIHtcbiAgcmV0dXJuICgoeCA9IE1hdGguZXhwKHgpKSAtIDEgLyB4KSAvIDI7XG59XG5cbmZ1bmN0aW9uIHRhbmgoeCkge1xuICByZXR1cm4gKCh4ID0gTWF0aC5leHAoMiAqIHgpKSAtIDEpIC8gKHggKyAxKTtcbn1cblxuLy8gcDAgPSBbdXgwLCB1eTAsIHcwXVxuLy8gcDEgPSBbdXgxLCB1eTEsIHcxXVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocDAsIHAxKSB7XG4gIHZhciB1eDAgPSBwMFswXSwgdXkwID0gcDBbMV0sIHcwID0gcDBbMl0sXG4gICAgICB1eDEgPSBwMVswXSwgdXkxID0gcDFbMV0sIHcxID0gcDFbMl0sXG4gICAgICBkeCA9IHV4MSAtIHV4MCxcbiAgICAgIGR5ID0gdXkxIC0gdXkwLFxuICAgICAgZDIgPSBkeCAqIGR4ICsgZHkgKiBkeSxcbiAgICAgIGksXG4gICAgICBTO1xuXG4gIC8vIFNwZWNpYWwgY2FzZSBmb3IgdTAg4omFIHUxLlxuICBpZiAoZDIgPCBlcHNpbG9uMikge1xuICAgIFMgPSBNYXRoLmxvZyh3MSAvIHcwKSAvIHJobztcbiAgICBpID0gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIFtcbiAgICAgICAgdXgwICsgdCAqIGR4LFxuICAgICAgICB1eTAgKyB0ICogZHksXG4gICAgICAgIHcwICogTWF0aC5leHAocmhvICogdCAqIFMpXG4gICAgICBdO1xuICAgIH1cbiAgfVxuXG4gIC8vIEdlbmVyYWwgY2FzZS5cbiAgZWxzZSB7XG4gICAgdmFyIGQxID0gTWF0aC5zcXJ0KGQyKSxcbiAgICAgICAgYjAgPSAodzEgKiB3MSAtIHcwICogdzAgKyByaG80ICogZDIpIC8gKDIgKiB3MCAqIHJobzIgKiBkMSksXG4gICAgICAgIGIxID0gKHcxICogdzEgLSB3MCAqIHcwIC0gcmhvNCAqIGQyKSAvICgyICogdzEgKiByaG8yICogZDEpLFxuICAgICAgICByMCA9IE1hdGgubG9nKE1hdGguc3FydChiMCAqIGIwICsgMSkgLSBiMCksXG4gICAgICAgIHIxID0gTWF0aC5sb2coTWF0aC5zcXJ0KGIxICogYjEgKyAxKSAtIGIxKTtcbiAgICBTID0gKHIxIC0gcjApIC8gcmhvO1xuICAgIGkgPSBmdW5jdGlvbih0KSB7XG4gICAgICB2YXIgcyA9IHQgKiBTLFxuICAgICAgICAgIGNvc2hyMCA9IGNvc2gocjApLFxuICAgICAgICAgIHUgPSB3MCAvIChyaG8yICogZDEpICogKGNvc2hyMCAqIHRhbmgocmhvICogcyArIHIwKSAtIHNpbmgocjApKTtcbiAgICAgIHJldHVybiBbXG4gICAgICAgIHV4MCArIHUgKiBkeCxcbiAgICAgICAgdXkwICsgdSAqIGR5LFxuICAgICAgICB3MCAqIGNvc2hyMCAvIGNvc2gocmhvICogcyArIHIwKVxuICAgICAgXTtcbiAgICB9XG4gIH1cblxuICBpLmR1cmF0aW9uID0gUyAqIDEwMDA7XG5cbiAgcmV0dXJuIGk7XG59XG4iLCJpbXBvcnQge2hzbCBhcyBjb2xvckhzbH0gZnJvbSBcImQzLWNvbG9yXCI7XG5pbXBvcnQgY29sb3IsIHtodWV9IGZyb20gXCIuL2NvbG9yLmpzXCI7XG5cbmZ1bmN0aW9uIGhzbChodWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgICB2YXIgaCA9IGh1ZSgoc3RhcnQgPSBjb2xvckhzbChzdGFydCkpLmgsIChlbmQgPSBjb2xvckhzbChlbmQpKS5oKSxcbiAgICAgICAgcyA9IGNvbG9yKHN0YXJ0LnMsIGVuZC5zKSxcbiAgICAgICAgbCA9IGNvbG9yKHN0YXJ0LmwsIGVuZC5sKSxcbiAgICAgICAgb3BhY2l0eSA9IGNvbG9yKHN0YXJ0Lm9wYWNpdHksIGVuZC5vcGFjaXR5KTtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgc3RhcnQuaCA9IGgodCk7XG4gICAgICBzdGFydC5zID0gcyh0KTtcbiAgICAgIHN0YXJ0LmwgPSBsKHQpO1xuICAgICAgc3RhcnQub3BhY2l0eSA9IG9wYWNpdHkodCk7XG4gICAgICByZXR1cm4gc3RhcnQgKyBcIlwiO1xuICAgIH07XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgaHNsKGh1ZSk7XG5leHBvcnQgdmFyIGhzbExvbmcgPSBoc2woY29sb3IpO1xuIiwiaW1wb3J0IHtsYWIgYXMgY29sb3JMYWJ9IGZyb20gXCJkMy1jb2xvclwiO1xuaW1wb3J0IGNvbG9yIGZyb20gXCIuL2NvbG9yLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxhYihzdGFydCwgZW5kKSB7XG4gIHZhciBsID0gY29sb3IoKHN0YXJ0ID0gY29sb3JMYWIoc3RhcnQpKS5sLCAoZW5kID0gY29sb3JMYWIoZW5kKSkubCksXG4gICAgICBhID0gY29sb3Ioc3RhcnQuYSwgZW5kLmEpLFxuICAgICAgYiA9IGNvbG9yKHN0YXJ0LmIsIGVuZC5iKSxcbiAgICAgIG9wYWNpdHkgPSBjb2xvcihzdGFydC5vcGFjaXR5LCBlbmQub3BhY2l0eSk7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgc3RhcnQubCA9IGwodCk7XG4gICAgc3RhcnQuYSA9IGEodCk7XG4gICAgc3RhcnQuYiA9IGIodCk7XG4gICAgc3RhcnQub3BhY2l0eSA9IG9wYWNpdHkodCk7XG4gICAgcmV0dXJuIHN0YXJ0ICsgXCJcIjtcbiAgfTtcbn1cbiIsImltcG9ydCB7aGNsIGFzIGNvbG9ySGNsfSBmcm9tIFwiZDMtY29sb3JcIjtcbmltcG9ydCBjb2xvciwge2h1ZX0gZnJvbSBcIi4vY29sb3IuanNcIjtcblxuZnVuY3Rpb24gaGNsKGh1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICAgIHZhciBoID0gaHVlKChzdGFydCA9IGNvbG9ySGNsKHN0YXJ0KSkuaCwgKGVuZCA9IGNvbG9ySGNsKGVuZCkpLmgpLFxuICAgICAgICBjID0gY29sb3Ioc3RhcnQuYywgZW5kLmMpLFxuICAgICAgICBsID0gY29sb3Ioc3RhcnQubCwgZW5kLmwpLFxuICAgICAgICBvcGFjaXR5ID0gY29sb3Ioc3RhcnQub3BhY2l0eSwgZW5kLm9wYWNpdHkpO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICBzdGFydC5oID0gaCh0KTtcbiAgICAgIHN0YXJ0LmMgPSBjKHQpO1xuICAgICAgc3RhcnQubCA9IGwodCk7XG4gICAgICBzdGFydC5vcGFjaXR5ID0gb3BhY2l0eSh0KTtcbiAgICAgIHJldHVybiBzdGFydCArIFwiXCI7XG4gICAgfTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBoY2woaHVlKTtcbmV4cG9ydCB2YXIgaGNsTG9uZyA9IGhjbChjb2xvcik7XG4iLCJpbXBvcnQge2N1YmVoZWxpeCBhcyBjb2xvckN1YmVoZWxpeH0gZnJvbSBcImQzLWNvbG9yXCI7XG5pbXBvcnQgY29sb3IsIHtodWV9IGZyb20gXCIuL2NvbG9yLmpzXCI7XG5cbmZ1bmN0aW9uIGN1YmVoZWxpeChodWUpIHtcbiAgcmV0dXJuIChmdW5jdGlvbiBjdWJlaGVsaXhHYW1tYSh5KSB7XG4gICAgeSA9ICt5O1xuXG4gICAgZnVuY3Rpb24gY3ViZWhlbGl4KHN0YXJ0LCBlbmQpIHtcbiAgICAgIHZhciBoID0gaHVlKChzdGFydCA9IGNvbG9yQ3ViZWhlbGl4KHN0YXJ0KSkuaCwgKGVuZCA9IGNvbG9yQ3ViZWhlbGl4KGVuZCkpLmgpLFxuICAgICAgICAgIHMgPSBjb2xvcihzdGFydC5zLCBlbmQucyksXG4gICAgICAgICAgbCA9IGNvbG9yKHN0YXJ0LmwsIGVuZC5sKSxcbiAgICAgICAgICBvcGFjaXR5ID0gY29sb3Ioc3RhcnQub3BhY2l0eSwgZW5kLm9wYWNpdHkpO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgc3RhcnQuaCA9IGgodCk7XG4gICAgICAgIHN0YXJ0LnMgPSBzKHQpO1xuICAgICAgICBzdGFydC5sID0gbChNYXRoLnBvdyh0LCB5KSk7XG4gICAgICAgIHN0YXJ0Lm9wYWNpdHkgPSBvcGFjaXR5KHQpO1xuICAgICAgICByZXR1cm4gc3RhcnQgKyBcIlwiO1xuICAgICAgfTtcbiAgICB9XG5cbiAgICBjdWJlaGVsaXguZ2FtbWEgPSBjdWJlaGVsaXhHYW1tYTtcblxuICAgIHJldHVybiBjdWJlaGVsaXg7XG4gIH0pKDEpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjdWJlaGVsaXgoaHVlKTtcbmV4cG9ydCB2YXIgY3ViZWhlbGl4TG9uZyA9IGN1YmVoZWxpeChjb2xvcik7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwaWVjZXdpc2UoaW50ZXJwb2xhdGUsIHZhbHVlcykge1xuICB2YXIgaSA9IDAsIG4gPSB2YWx1ZXMubGVuZ3RoIC0gMSwgdiA9IHZhbHVlc1swXSwgSSA9IG5ldyBBcnJheShuIDwgMCA/IDAgOiBuKTtcbiAgd2hpbGUgKGkgPCBuKSBJW2ldID0gaW50ZXJwb2xhdGUodiwgdiA9IHZhbHVlc1srK2ldKTtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB2YXIgaSA9IE1hdGgubWF4KDAsIE1hdGgubWluKG4gLSAxLCBNYXRoLmZsb29yKHQgKj0gbikpKTtcbiAgICByZXR1cm4gSVtpXSh0IC0gaSk7XG4gIH07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnRlcnBvbGF0b3IsIG4pIHtcbiAgdmFyIHNhbXBsZXMgPSBuZXcgQXJyYXkobik7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbjsgKytpKSBzYW1wbGVzW2ldID0gaW50ZXJwb2xhdG9yKGkgLyAobiAtIDEpKTtcbiAgcmV0dXJuIHNhbXBsZXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwb2x5Z29uKSB7XG4gIHZhciBpID0gLTEsXG4gICAgICBuID0gcG9seWdvbi5sZW5ndGgsXG4gICAgICBhLFxuICAgICAgYiA9IHBvbHlnb25bbiAtIDFdLFxuICAgICAgYXJlYSA9IDA7XG5cbiAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICBhID0gYjtcbiAgICBiID0gcG9seWdvbltpXTtcbiAgICBhcmVhICs9IGFbMV0gKiBiWzBdIC0gYVswXSAqIGJbMV07XG4gIH1cblxuICByZXR1cm4gYXJlYSAvIDI7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwb2x5Z29uKSB7XG4gIHZhciBpID0gLTEsXG4gICAgICBuID0gcG9seWdvbi5sZW5ndGgsXG4gICAgICB4ID0gMCxcbiAgICAgIHkgPSAwLFxuICAgICAgYSxcbiAgICAgIGIgPSBwb2x5Z29uW24gLSAxXSxcbiAgICAgIGMsXG4gICAgICBrID0gMDtcblxuICB3aGlsZSAoKytpIDwgbikge1xuICAgIGEgPSBiO1xuICAgIGIgPSBwb2x5Z29uW2ldO1xuICAgIGsgKz0gYyA9IGFbMF0gKiBiWzFdIC0gYlswXSAqIGFbMV07XG4gICAgeCArPSAoYVswXSArIGJbMF0pICogYztcbiAgICB5ICs9IChhWzFdICsgYlsxXSkgKiBjO1xuICB9XG5cbiAgcmV0dXJuIGsgKj0gMywgW3ggLyBrLCB5IC8ga107XG59XG4iLCJpbXBvcnQgY3Jvc3MgZnJvbSBcIi4vY3Jvc3MuanNcIjtcblxuZnVuY3Rpb24gbGV4aWNvZ3JhcGhpY09yZGVyKGEsIGIpIHtcbiAgcmV0dXJuIGFbMF0gLSBiWzBdIHx8IGFbMV0gLSBiWzFdO1xufVxuXG4vLyBDb21wdXRlcyB0aGUgdXBwZXIgY29udmV4IGh1bGwgcGVyIHRoZSBtb25vdG9uZSBjaGFpbiBhbGdvcml0aG0uXG4vLyBBc3N1bWVzIHBvaW50cy5sZW5ndGggPj0gMywgaXMgc29ydGVkIGJ5IHgsIHVuaXF1ZSBpbiB5LlxuLy8gUmV0dXJucyBhbiBhcnJheSBvZiBpbmRpY2VzIGludG8gcG9pbnRzIGluIGxlZnQtdG8tcmlnaHQgb3JkZXIuXG5mdW5jdGlvbiBjb21wdXRlVXBwZXJIdWxsSW5kZXhlcyhwb2ludHMpIHtcbiAgdmFyIG4gPSBwb2ludHMubGVuZ3RoLFxuICAgICAgaW5kZXhlcyA9IFswLCAxXSxcbiAgICAgIHNpemUgPSAyO1xuXG4gIGZvciAodmFyIGkgPSAyOyBpIDwgbjsgKytpKSB7XG4gICAgd2hpbGUgKHNpemUgPiAxICYmIGNyb3NzKHBvaW50c1tpbmRleGVzW3NpemUgLSAyXV0sIHBvaW50c1tpbmRleGVzW3NpemUgLSAxXV0sIHBvaW50c1tpXSkgPD0gMCkgLS1zaXplO1xuICAgIGluZGV4ZXNbc2l6ZSsrXSA9IGk7XG4gIH1cblxuICByZXR1cm4gaW5kZXhlcy5zbGljZSgwLCBzaXplKTsgLy8gcmVtb3ZlIHBvcHBlZCBwb2ludHNcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocG9pbnRzKSB7XG4gIGlmICgobiA9IHBvaW50cy5sZW5ndGgpIDwgMykgcmV0dXJuIG51bGw7XG5cbiAgdmFyIGksXG4gICAgICBuLFxuICAgICAgc29ydGVkUG9pbnRzID0gbmV3IEFycmF5KG4pLFxuICAgICAgZmxpcHBlZFBvaW50cyA9IG5ldyBBcnJheShuKTtcblxuICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSBzb3J0ZWRQb2ludHNbaV0gPSBbK3BvaW50c1tpXVswXSwgK3BvaW50c1tpXVsxXSwgaV07XG4gIHNvcnRlZFBvaW50cy5zb3J0KGxleGljb2dyYXBoaWNPcmRlcik7XG4gIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIGZsaXBwZWRQb2ludHNbaV0gPSBbc29ydGVkUG9pbnRzW2ldWzBdLCAtc29ydGVkUG9pbnRzW2ldWzFdXTtcblxuICB2YXIgdXBwZXJJbmRleGVzID0gY29tcHV0ZVVwcGVySHVsbEluZGV4ZXMoc29ydGVkUG9pbnRzKSxcbiAgICAgIGxvd2VySW5kZXhlcyA9IGNvbXB1dGVVcHBlckh1bGxJbmRleGVzKGZsaXBwZWRQb2ludHMpO1xuXG4gIC8vIENvbnN0cnVjdCB0aGUgaHVsbCBwb2x5Z29uLCByZW1vdmluZyBwb3NzaWJsZSBkdXBsaWNhdGUgZW5kcG9pbnRzLlxuICB2YXIgc2tpcExlZnQgPSBsb3dlckluZGV4ZXNbMF0gPT09IHVwcGVySW5kZXhlc1swXSxcbiAgICAgIHNraXBSaWdodCA9IGxvd2VySW5kZXhlc1tsb3dlckluZGV4ZXMubGVuZ3RoIC0gMV0gPT09IHVwcGVySW5kZXhlc1t1cHBlckluZGV4ZXMubGVuZ3RoIC0gMV0sXG4gICAgICBodWxsID0gW107XG5cbiAgLy8gQWRkIHVwcGVyIGh1bGwgaW4gcmlnaHQtdG8tbCBvcmRlci5cbiAgLy8gVGhlbiBhZGQgbG93ZXIgaHVsbCBpbiBsZWZ0LXRvLXJpZ2h0IG9yZGVyLlxuICBmb3IgKGkgPSB1cHBlckluZGV4ZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIGh1bGwucHVzaChwb2ludHNbc29ydGVkUG9pbnRzW3VwcGVySW5kZXhlc1tpXV1bMl1dKTtcbiAgZm9yIChpID0gK3NraXBMZWZ0OyBpIDwgbG93ZXJJbmRleGVzLmxlbmd0aCAtIHNraXBSaWdodDsgKytpKSBodWxsLnB1c2gocG9pbnRzW3NvcnRlZFBvaW50c1tsb3dlckluZGV4ZXNbaV1dWzJdXSk7XG5cbiAgcmV0dXJuIGh1bGw7XG59XG4iLCIvLyBSZXR1cm5zIHRoZSAyRCBjcm9zcyBwcm9kdWN0IG9mIEFCIGFuZCBBQyB2ZWN0b3JzLCBpLmUuLCB0aGUgei1jb21wb25lbnQgb2Zcbi8vIHRoZSAzRCBjcm9zcyBwcm9kdWN0IGluIGEgcXVhZHJhbnQgSSBDYXJ0ZXNpYW4gY29vcmRpbmF0ZSBzeXN0ZW0gKCt4IGlzXG4vLyByaWdodCwgK3kgaXMgdXApLiBSZXR1cm5zIGEgcG9zaXRpdmUgdmFsdWUgaWYgQUJDIGlzIGNvdW50ZXItY2xvY2t3aXNlLFxuLy8gbmVnYXRpdmUgaWYgY2xvY2t3aXNlLCBhbmQgemVybyBpZiB0aGUgcG9pbnRzIGFyZSBjb2xsaW5lYXIuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiLCBjKSB7XG4gIHJldHVybiAoYlswXSAtIGFbMF0pICogKGNbMV0gLSBhWzFdKSAtIChiWzFdIC0gYVsxXSkgKiAoY1swXSAtIGFbMF0pO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocG9seWdvbiwgcG9pbnQpIHtcbiAgdmFyIG4gPSBwb2x5Z29uLmxlbmd0aCxcbiAgICAgIHAgPSBwb2x5Z29uW24gLSAxXSxcbiAgICAgIHggPSBwb2ludFswXSwgeSA9IHBvaW50WzFdLFxuICAgICAgeDAgPSBwWzBdLCB5MCA9IHBbMV0sXG4gICAgICB4MSwgeTEsXG4gICAgICBpbnNpZGUgPSBmYWxzZTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IG47ICsraSkge1xuICAgIHAgPSBwb2x5Z29uW2ldLCB4MSA9IHBbMF0sIHkxID0gcFsxXTtcbiAgICBpZiAoKCh5MSA+IHkpICE9PSAoeTAgPiB5KSkgJiYgKHggPCAoeDAgLSB4MSkgKiAoeSAtIHkxKSAvICh5MCAtIHkxKSArIHgxKSkgaW5zaWRlID0gIWluc2lkZTtcbiAgICB4MCA9IHgxLCB5MCA9IHkxO1xuICB9XG5cbiAgcmV0dXJuIGluc2lkZTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHBvbHlnb24pIHtcbiAgdmFyIGkgPSAtMSxcbiAgICAgIG4gPSBwb2x5Z29uLmxlbmd0aCxcbiAgICAgIGIgPSBwb2x5Z29uW24gLSAxXSxcbiAgICAgIHhhLFxuICAgICAgeWEsXG4gICAgICB4YiA9IGJbMF0sXG4gICAgICB5YiA9IGJbMV0sXG4gICAgICBwZXJpbWV0ZXIgPSAwO1xuXG4gIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgeGEgPSB4YjtcbiAgICB5YSA9IHliO1xuICAgIGIgPSBwb2x5Z29uW2ldO1xuICAgIHhiID0gYlswXTtcbiAgICB5YiA9IGJbMV07XG4gICAgeGEgLT0geGI7XG4gICAgeWEgLT0geWI7XG4gICAgcGVyaW1ldGVyICs9IE1hdGguc3FydCh4YSAqIHhhICsgeWEgKiB5YSk7XG4gIH1cblxuICByZXR1cm4gcGVyaW1ldGVyO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBNYXRoLnJhbmRvbSgpO1xufVxuIiwiaW1wb3J0IGRlZmF1bHRTb3VyY2UgZnJvbSBcIi4vZGVmYXVsdFNvdXJjZVwiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gc291cmNlUmFuZG9tVW5pZm9ybShzb3VyY2UpIHtcbiAgZnVuY3Rpb24gcmFuZG9tVW5pZm9ybShtaW4sIG1heCkge1xuICAgIG1pbiA9IG1pbiA9PSBudWxsID8gMCA6ICttaW47XG4gICAgbWF4ID0gbWF4ID09IG51bGwgPyAxIDogK21heDtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkgbWF4ID0gbWluLCBtaW4gPSAwO1xuICAgIGVsc2UgbWF4IC09IG1pbjtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gc291cmNlKCkgKiBtYXggKyBtaW47XG4gICAgfTtcbiAgfVxuXG4gIHJhbmRvbVVuaWZvcm0uc291cmNlID0gc291cmNlUmFuZG9tVW5pZm9ybTtcblxuICByZXR1cm4gcmFuZG9tVW5pZm9ybTtcbn0pKGRlZmF1bHRTb3VyY2UpO1xuIiwiaW1wb3J0IGRlZmF1bHRTb3VyY2UgZnJvbSBcIi4vZGVmYXVsdFNvdXJjZVwiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gc291cmNlUmFuZG9tTm9ybWFsKHNvdXJjZSkge1xuICBmdW5jdGlvbiByYW5kb21Ob3JtYWwobXUsIHNpZ21hKSB7XG4gICAgdmFyIHgsIHI7XG4gICAgbXUgPSBtdSA9PSBudWxsID8gMCA6ICttdTtcbiAgICBzaWdtYSA9IHNpZ21hID09IG51bGwgPyAxIDogK3NpZ21hO1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB5O1xuXG4gICAgICAvLyBJZiBhdmFpbGFibGUsIHVzZSB0aGUgc2Vjb25kIHByZXZpb3VzbHktZ2VuZXJhdGVkIHVuaWZvcm0gcmFuZG9tLlxuICAgICAgaWYgKHggIT0gbnVsbCkgeSA9IHgsIHggPSBudWxsO1xuXG4gICAgICAvLyBPdGhlcndpc2UsIGdlbmVyYXRlIGEgbmV3IHggYW5kIHkuXG4gICAgICBlbHNlIGRvIHtcbiAgICAgICAgeCA9IHNvdXJjZSgpICogMiAtIDE7XG4gICAgICAgIHkgPSBzb3VyY2UoKSAqIDIgLSAxO1xuICAgICAgICByID0geCAqIHggKyB5ICogeTtcbiAgICAgIH0gd2hpbGUgKCFyIHx8IHIgPiAxKTtcblxuICAgICAgcmV0dXJuIG11ICsgc2lnbWEgKiB5ICogTWF0aC5zcXJ0KC0yICogTWF0aC5sb2cocikgLyByKTtcbiAgICB9O1xuICB9XG5cbiAgcmFuZG9tTm9ybWFsLnNvdXJjZSA9IHNvdXJjZVJhbmRvbU5vcm1hbDtcblxuICByZXR1cm4gcmFuZG9tTm9ybWFsO1xufSkoZGVmYXVsdFNvdXJjZSk7XG4iLCJpbXBvcnQgZGVmYXVsdFNvdXJjZSBmcm9tIFwiLi9kZWZhdWx0U291cmNlXCI7XG5pbXBvcnQgbm9ybWFsIGZyb20gXCIuL25vcm1hbFwiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gc291cmNlUmFuZG9tTG9nTm9ybWFsKHNvdXJjZSkge1xuICBmdW5jdGlvbiByYW5kb21Mb2dOb3JtYWwoKSB7XG4gICAgdmFyIHJhbmRvbU5vcm1hbCA9IG5vcm1hbC5zb3VyY2Uoc291cmNlKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBNYXRoLmV4cChyYW5kb21Ob3JtYWwoKSk7XG4gICAgfTtcbiAgfVxuXG4gIHJhbmRvbUxvZ05vcm1hbC5zb3VyY2UgPSBzb3VyY2VSYW5kb21Mb2dOb3JtYWw7XG5cbiAgcmV0dXJuIHJhbmRvbUxvZ05vcm1hbDtcbn0pKGRlZmF1bHRTb3VyY2UpO1xuIiwiaW1wb3J0IGRlZmF1bHRTb3VyY2UgZnJvbSBcIi4vZGVmYXVsdFNvdXJjZVwiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gc291cmNlUmFuZG9tSXJ3aW5IYWxsKHNvdXJjZSkge1xuICBmdW5jdGlvbiByYW5kb21JcndpbkhhbGwobikge1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIGZvciAodmFyIHN1bSA9IDAsIGkgPSAwOyBpIDwgbjsgKytpKSBzdW0gKz0gc291cmNlKCk7XG4gICAgICByZXR1cm4gc3VtO1xuICAgIH07XG4gIH1cblxuICByYW5kb21JcndpbkhhbGwuc291cmNlID0gc291cmNlUmFuZG9tSXJ3aW5IYWxsO1xuXG4gIHJldHVybiByYW5kb21JcndpbkhhbGw7XG59KShkZWZhdWx0U291cmNlKTtcbiIsImltcG9ydCBkZWZhdWx0U291cmNlIGZyb20gXCIuL2RlZmF1bHRTb3VyY2VcIjtcbmltcG9ydCBpcndpbkhhbGwgZnJvbSBcIi4vaXJ3aW5IYWxsXCI7XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBzb3VyY2VSYW5kb21CYXRlcyhzb3VyY2UpIHtcbiAgZnVuY3Rpb24gcmFuZG9tQmF0ZXMobikge1xuICAgIHZhciByYW5kb21JcndpbkhhbGwgPSBpcndpbkhhbGwuc291cmNlKHNvdXJjZSkobik7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHJhbmRvbUlyd2luSGFsbCgpIC8gbjtcbiAgICB9O1xuICB9XG5cbiAgcmFuZG9tQmF0ZXMuc291cmNlID0gc291cmNlUmFuZG9tQmF0ZXM7XG5cbiAgcmV0dXJuIHJhbmRvbUJhdGVzO1xufSkoZGVmYXVsdFNvdXJjZSk7XG4iLCJpbXBvcnQgZGVmYXVsdFNvdXJjZSBmcm9tIFwiLi9kZWZhdWx0U291cmNlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBzb3VyY2VSYW5kb21FeHBvbmVudGlhbChzb3VyY2UpIHtcbiAgZnVuY3Rpb24gcmFuZG9tRXhwb25lbnRpYWwobGFtYmRhKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIC1NYXRoLmxvZygxIC0gc291cmNlKCkpIC8gbGFtYmRhO1xuICAgIH07XG4gIH1cblxuICByYW5kb21FeHBvbmVudGlhbC5zb3VyY2UgPSBzb3VyY2VSYW5kb21FeHBvbmVudGlhbDtcblxuICByZXR1cm4gcmFuZG9tRXhwb25lbnRpYWw7XG59KShkZWZhdWx0U291cmNlKTtcbiIsImV4cG9ydCBmdW5jdGlvbiBpbml0UmFuZ2UoZG9tYWluLCByYW5nZSkge1xuICBzd2l0Y2ggKGFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICBjYXNlIDA6IGJyZWFrO1xuICAgIGNhc2UgMTogdGhpcy5yYW5nZShkb21haW4pOyBicmVhaztcbiAgICBkZWZhdWx0OiB0aGlzLnJhbmdlKHJhbmdlKS5kb21haW4oZG9tYWluKTsgYnJlYWs7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0SW50ZXJwb2xhdG9yKGRvbWFpbiwgaW50ZXJwb2xhdG9yKSB7XG4gIHN3aXRjaCAoYXJndW1lbnRzLmxlbmd0aCkge1xuICAgIGNhc2UgMDogYnJlYWs7XG4gICAgY2FzZSAxOiB0aGlzLmludGVycG9sYXRvcihkb21haW4pOyBicmVhaztcbiAgICBkZWZhdWx0OiB0aGlzLmludGVycG9sYXRvcihpbnRlcnBvbGF0b3IpLmRvbWFpbihkb21haW4pOyBicmVhaztcbiAgfVxuICByZXR1cm4gdGhpcztcbn1cbiIsInZhciBhcnJheSA9IEFycmF5LnByb3RvdHlwZTtcblxuZXhwb3J0IHZhciBtYXAgPSBhcnJheS5tYXA7XG5leHBvcnQgdmFyIHNsaWNlID0gYXJyYXkuc2xpY2U7XG4iLCJpbXBvcnQge21hcH0gZnJvbSBcImQzLWNvbGxlY3Rpb25cIjtcbmltcG9ydCB7c2xpY2V9IGZyb20gXCIuL2FycmF5XCI7XG5pbXBvcnQge2luaXRSYW5nZX0gZnJvbSBcIi4vaW5pdFwiO1xuXG5leHBvcnQgdmFyIGltcGxpY2l0ID0ge25hbWU6IFwiaW1wbGljaXRcIn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG9yZGluYWwoKSB7XG4gIHZhciBpbmRleCA9IG1hcCgpLFxuICAgICAgZG9tYWluID0gW10sXG4gICAgICByYW5nZSA9IFtdLFxuICAgICAgdW5rbm93biA9IGltcGxpY2l0O1xuXG4gIGZ1bmN0aW9uIHNjYWxlKGQpIHtcbiAgICB2YXIga2V5ID0gZCArIFwiXCIsIGkgPSBpbmRleC5nZXQoa2V5KTtcbiAgICBpZiAoIWkpIHtcbiAgICAgIGlmICh1bmtub3duICE9PSBpbXBsaWNpdCkgcmV0dXJuIHVua25vd247XG4gICAgICBpbmRleC5zZXQoa2V5LCBpID0gZG9tYWluLnB1c2goZCkpO1xuICAgIH1cbiAgICByZXR1cm4gcmFuZ2VbKGkgLSAxKSAlIHJhbmdlLmxlbmd0aF07XG4gIH1cblxuICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZG9tYWluLnNsaWNlKCk7XG4gICAgZG9tYWluID0gW10sIGluZGV4ID0gbWFwKCk7XG4gICAgdmFyIGkgPSAtMSwgbiA9IF8ubGVuZ3RoLCBkLCBrZXk7XG4gICAgd2hpbGUgKCsraSA8IG4pIGlmICghaW5kZXguaGFzKGtleSA9IChkID0gX1tpXSkgKyBcIlwiKSkgaW5kZXguc2V0KGtleSwgZG9tYWluLnB1c2goZCkpO1xuICAgIHJldHVybiBzY2FsZTtcbiAgfTtcblxuICBzY2FsZS5yYW5nZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyYW5nZSA9IHNsaWNlLmNhbGwoXyksIHNjYWxlKSA6IHJhbmdlLnNsaWNlKCk7XG4gIH07XG5cbiAgc2NhbGUudW5rbm93biA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh1bmtub3duID0gXywgc2NhbGUpIDogdW5rbm93bjtcbiAgfTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIG9yZGluYWwoZG9tYWluLCByYW5nZSkudW5rbm93bih1bmtub3duKTtcbiAgfTtcblxuICBpbml0UmFuZ2UuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG5cbiAgcmV0dXJuIHNjYWxlO1xufVxuIiwiaW1wb3J0IHtyYW5nZSBhcyBzZXF1ZW5jZX0gZnJvbSBcImQzLWFycmF5XCI7XG5pbXBvcnQge2luaXRSYW5nZX0gZnJvbSBcIi4vaW5pdFwiO1xuaW1wb3J0IG9yZGluYWwgZnJvbSBcIi4vb3JkaW5hbFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBiYW5kKCkge1xuICB2YXIgc2NhbGUgPSBvcmRpbmFsKCkudW5rbm93bih1bmRlZmluZWQpLFxuICAgICAgZG9tYWluID0gc2NhbGUuZG9tYWluLFxuICAgICAgb3JkaW5hbFJhbmdlID0gc2NhbGUucmFuZ2UsXG4gICAgICByYW5nZSA9IFswLCAxXSxcbiAgICAgIHN0ZXAsXG4gICAgICBiYW5kd2lkdGgsXG4gICAgICByb3VuZCA9IGZhbHNlLFxuICAgICAgcGFkZGluZ0lubmVyID0gMCxcbiAgICAgIHBhZGRpbmdPdXRlciA9IDAsXG4gICAgICBhbGlnbiA9IDAuNTtcblxuICBkZWxldGUgc2NhbGUudW5rbm93bjtcblxuICBmdW5jdGlvbiByZXNjYWxlKCkge1xuICAgIHZhciBuID0gZG9tYWluKCkubGVuZ3RoLFxuICAgICAgICByZXZlcnNlID0gcmFuZ2VbMV0gPCByYW5nZVswXSxcbiAgICAgICAgc3RhcnQgPSByYW5nZVtyZXZlcnNlIC0gMF0sXG4gICAgICAgIHN0b3AgPSByYW5nZVsxIC0gcmV2ZXJzZV07XG4gICAgc3RlcCA9IChzdG9wIC0gc3RhcnQpIC8gTWF0aC5tYXgoMSwgbiAtIHBhZGRpbmdJbm5lciArIHBhZGRpbmdPdXRlciAqIDIpO1xuICAgIGlmIChyb3VuZCkgc3RlcCA9IE1hdGguZmxvb3Ioc3RlcCk7XG4gICAgc3RhcnQgKz0gKHN0b3AgLSBzdGFydCAtIHN0ZXAgKiAobiAtIHBhZGRpbmdJbm5lcikpICogYWxpZ247XG4gICAgYmFuZHdpZHRoID0gc3RlcCAqICgxIC0gcGFkZGluZ0lubmVyKTtcbiAgICBpZiAocm91bmQpIHN0YXJ0ID0gTWF0aC5yb3VuZChzdGFydCksIGJhbmR3aWR0aCA9IE1hdGgucm91bmQoYmFuZHdpZHRoKTtcbiAgICB2YXIgdmFsdWVzID0gc2VxdWVuY2UobikubWFwKGZ1bmN0aW9uKGkpIHsgcmV0dXJuIHN0YXJ0ICsgc3RlcCAqIGk7IH0pO1xuICAgIHJldHVybiBvcmRpbmFsUmFuZ2UocmV2ZXJzZSA/IHZhbHVlcy5yZXZlcnNlKCkgOiB2YWx1ZXMpO1xuICB9XG5cbiAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGRvbWFpbihfKSwgcmVzY2FsZSgpKSA6IGRvbWFpbigpO1xuICB9O1xuXG4gIHNjYWxlLnJhbmdlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJhbmdlID0gWytfWzBdLCArX1sxXV0sIHJlc2NhbGUoKSkgOiByYW5nZS5zbGljZSgpO1xuICB9O1xuXG4gIHNjYWxlLnJhbmdlUm91bmQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIHJhbmdlID0gWytfWzBdLCArX1sxXV0sIHJvdW5kID0gdHJ1ZSwgcmVzY2FsZSgpO1xuICB9O1xuXG4gIHNjYWxlLmJhbmR3aWR0aCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBiYW5kd2lkdGg7XG4gIH07XG5cbiAgc2NhbGUuc3RlcCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBzdGVwO1xuICB9O1xuXG4gIHNjYWxlLnJvdW5kID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJvdW5kID0gISFfLCByZXNjYWxlKCkpIDogcm91bmQ7XG4gIH07XG5cbiAgc2NhbGUucGFkZGluZyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRkaW5nSW5uZXIgPSBNYXRoLm1pbigxLCBwYWRkaW5nT3V0ZXIgPSArXyksIHJlc2NhbGUoKSkgOiBwYWRkaW5nSW5uZXI7XG4gIH07XG5cbiAgc2NhbGUucGFkZGluZ0lubmVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmdJbm5lciA9IE1hdGgubWluKDEsIF8pLCByZXNjYWxlKCkpIDogcGFkZGluZ0lubmVyO1xuICB9O1xuXG4gIHNjYWxlLnBhZGRpbmdPdXRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRkaW5nT3V0ZXIgPSArXywgcmVzY2FsZSgpKSA6IHBhZGRpbmdPdXRlcjtcbiAgfTtcblxuICBzY2FsZS5hbGlnbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhbGlnbiA9IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIF8pKSwgcmVzY2FsZSgpKSA6IGFsaWduO1xuICB9O1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gYmFuZChkb21haW4oKSwgcmFuZ2UpXG4gICAgICAgIC5yb3VuZChyb3VuZClcbiAgICAgICAgLnBhZGRpbmdJbm5lcihwYWRkaW5nSW5uZXIpXG4gICAgICAgIC5wYWRkaW5nT3V0ZXIocGFkZGluZ091dGVyKVxuICAgICAgICAuYWxpZ24oYWxpZ24pO1xuICB9O1xuXG4gIHJldHVybiBpbml0UmFuZ2UuYXBwbHkocmVzY2FsZSgpLCBhcmd1bWVudHMpO1xufVxuXG5mdW5jdGlvbiBwb2ludGlzaChzY2FsZSkge1xuICB2YXIgY29weSA9IHNjYWxlLmNvcHk7XG5cbiAgc2NhbGUucGFkZGluZyA9IHNjYWxlLnBhZGRpbmdPdXRlcjtcbiAgZGVsZXRlIHNjYWxlLnBhZGRpbmdJbm5lcjtcbiAgZGVsZXRlIHNjYWxlLnBhZGRpbmdPdXRlcjtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHBvaW50aXNoKGNvcHkoKSk7XG4gIH07XG5cbiAgcmV0dXJuIHNjYWxlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcG9pbnQoKSB7XG4gIHJldHVybiBwb2ludGlzaChiYW5kLmFwcGx5KG51bGwsIGFyZ3VtZW50cykucGFkZGluZ0lubmVyKDEpKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gK3g7XG59XG4iLCJpbXBvcnQge2Jpc2VjdH0gZnJvbSBcImQzLWFycmF5XCI7XG5pbXBvcnQge2ludGVycG9sYXRlIGFzIGludGVycG9sYXRlVmFsdWUsIGludGVycG9sYXRlTnVtYmVyLCBpbnRlcnBvbGF0ZVJvdW5kfSBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcbmltcG9ydCB7bWFwLCBzbGljZX0gZnJvbSBcIi4vYXJyYXlcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuaW1wb3J0IG51bWJlciBmcm9tIFwiLi9udW1iZXJcIjtcblxudmFyIHVuaXQgPSBbMCwgMV07XG5cbmV4cG9ydCBmdW5jdGlvbiBpZGVudGl0eSh4KSB7XG4gIHJldHVybiB4O1xufVxuXG5mdW5jdGlvbiBub3JtYWxpemUoYSwgYikge1xuICByZXR1cm4gKGIgLT0gKGEgPSArYSkpXG4gICAgICA/IGZ1bmN0aW9uKHgpIHsgcmV0dXJuICh4IC0gYSkgLyBiOyB9XG4gICAgICA6IGNvbnN0YW50KGlzTmFOKGIpID8gTmFOIDogMC41KTtcbn1cblxuZnVuY3Rpb24gY2xhbXBlcihkb21haW4pIHtcbiAgdmFyIGEgPSBkb21haW5bMF0sIGIgPSBkb21haW5bZG9tYWluLmxlbmd0aCAtIDFdLCB0O1xuICBpZiAoYSA+IGIpIHQgPSBhLCBhID0gYiwgYiA9IHQ7XG4gIHJldHVybiBmdW5jdGlvbih4KSB7IHJldHVybiBNYXRoLm1heChhLCBNYXRoLm1pbihiLCB4KSk7IH07XG59XG5cbi8vIG5vcm1hbGl6ZShhLCBiKSh4KSB0YWtlcyBhIGRvbWFpbiB2YWx1ZSB4IGluIFthLGJdIGFuZCByZXR1cm5zIHRoZSBjb3JyZXNwb25kaW5nIHBhcmFtZXRlciB0IGluIFswLDFdLlxuLy8gaW50ZXJwb2xhdGUoYSwgYikodCkgdGFrZXMgYSBwYXJhbWV0ZXIgdCBpbiBbMCwxXSBhbmQgcmV0dXJucyB0aGUgY29ycmVzcG9uZGluZyByYW5nZSB2YWx1ZSB4IGluIFthLGJdLlxuZnVuY3Rpb24gYmltYXAoZG9tYWluLCByYW5nZSwgaW50ZXJwb2xhdGUpIHtcbiAgdmFyIGQwID0gZG9tYWluWzBdLCBkMSA9IGRvbWFpblsxXSwgcjAgPSByYW5nZVswXSwgcjEgPSByYW5nZVsxXTtcbiAgaWYgKGQxIDwgZDApIGQwID0gbm9ybWFsaXplKGQxLCBkMCksIHIwID0gaW50ZXJwb2xhdGUocjEsIHIwKTtcbiAgZWxzZSBkMCA9IG5vcm1hbGl6ZShkMCwgZDEpLCByMCA9IGludGVycG9sYXRlKHIwLCByMSk7XG4gIHJldHVybiBmdW5jdGlvbih4KSB7IHJldHVybiByMChkMCh4KSk7IH07XG59XG5cbmZ1bmN0aW9uIHBvbHltYXAoZG9tYWluLCByYW5nZSwgaW50ZXJwb2xhdGUpIHtcbiAgdmFyIGogPSBNYXRoLm1pbihkb21haW4ubGVuZ3RoLCByYW5nZS5sZW5ndGgpIC0gMSxcbiAgICAgIGQgPSBuZXcgQXJyYXkoaiksXG4gICAgICByID0gbmV3IEFycmF5KGopLFxuICAgICAgaSA9IC0xO1xuXG4gIC8vIFJldmVyc2UgZGVzY2VuZGluZyBkb21haW5zLlxuICBpZiAoZG9tYWluW2pdIDwgZG9tYWluWzBdKSB7XG4gICAgZG9tYWluID0gZG9tYWluLnNsaWNlKCkucmV2ZXJzZSgpO1xuICAgIHJhbmdlID0gcmFuZ2Uuc2xpY2UoKS5yZXZlcnNlKCk7XG4gIH1cblxuICB3aGlsZSAoKytpIDwgaikge1xuICAgIGRbaV0gPSBub3JtYWxpemUoZG9tYWluW2ldLCBkb21haW5baSArIDFdKTtcbiAgICByW2ldID0gaW50ZXJwb2xhdGUocmFuZ2VbaV0sIHJhbmdlW2kgKyAxXSk7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24oeCkge1xuICAgIHZhciBpID0gYmlzZWN0KGRvbWFpbiwgeCwgMSwgaikgLSAxO1xuICAgIHJldHVybiByW2ldKGRbaV0oeCkpO1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29weShzb3VyY2UsIHRhcmdldCkge1xuICByZXR1cm4gdGFyZ2V0XG4gICAgICAuZG9tYWluKHNvdXJjZS5kb21haW4oKSlcbiAgICAgIC5yYW5nZShzb3VyY2UucmFuZ2UoKSlcbiAgICAgIC5pbnRlcnBvbGF0ZShzb3VyY2UuaW50ZXJwb2xhdGUoKSlcbiAgICAgIC5jbGFtcChzb3VyY2UuY2xhbXAoKSlcbiAgICAgIC51bmtub3duKHNvdXJjZS51bmtub3duKCkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdHJhbnNmb3JtZXIoKSB7XG4gIHZhciBkb21haW4gPSB1bml0LFxuICAgICAgcmFuZ2UgPSB1bml0LFxuICAgICAgaW50ZXJwb2xhdGUgPSBpbnRlcnBvbGF0ZVZhbHVlLFxuICAgICAgdHJhbnNmb3JtLFxuICAgICAgdW50cmFuc2Zvcm0sXG4gICAgICB1bmtub3duLFxuICAgICAgY2xhbXAgPSBpZGVudGl0eSxcbiAgICAgIHBpZWNld2lzZSxcbiAgICAgIG91dHB1dCxcbiAgICAgIGlucHV0O1xuXG4gIGZ1bmN0aW9uIHJlc2NhbGUoKSB7XG4gICAgcGllY2V3aXNlID0gTWF0aC5taW4oZG9tYWluLmxlbmd0aCwgcmFuZ2UubGVuZ3RoKSA+IDIgPyBwb2x5bWFwIDogYmltYXA7XG4gICAgb3V0cHV0ID0gaW5wdXQgPSBudWxsO1xuICAgIHJldHVybiBzY2FsZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICByZXR1cm4gaXNOYU4oeCA9ICt4KSA/IHVua25vd24gOiAob3V0cHV0IHx8IChvdXRwdXQgPSBwaWVjZXdpc2UoZG9tYWluLm1hcCh0cmFuc2Zvcm0pLCByYW5nZSwgaW50ZXJwb2xhdGUpKSkodHJhbnNmb3JtKGNsYW1wKHgpKSk7XG4gIH1cblxuICBzY2FsZS5pbnZlcnQgPSBmdW5jdGlvbih5KSB7XG4gICAgcmV0dXJuIGNsYW1wKHVudHJhbnNmb3JtKChpbnB1dCB8fCAoaW5wdXQgPSBwaWVjZXdpc2UocmFuZ2UsIGRvbWFpbi5tYXAodHJhbnNmb3JtKSwgaW50ZXJwb2xhdGVOdW1iZXIpKSkoeSkpKTtcbiAgfTtcblxuICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZG9tYWluID0gbWFwLmNhbGwoXywgbnVtYmVyKSwgY2xhbXAgPT09IGlkZW50aXR5IHx8IChjbGFtcCA9IGNsYW1wZXIoZG9tYWluKSksIHJlc2NhbGUoKSkgOiBkb21haW4uc2xpY2UoKTtcbiAgfTtcblxuICBzY2FsZS5yYW5nZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyYW5nZSA9IHNsaWNlLmNhbGwoXyksIHJlc2NhbGUoKSkgOiByYW5nZS5zbGljZSgpO1xuICB9O1xuXG4gIHNjYWxlLnJhbmdlUm91bmQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIHJhbmdlID0gc2xpY2UuY2FsbChfKSwgaW50ZXJwb2xhdGUgPSBpbnRlcnBvbGF0ZVJvdW5kLCByZXNjYWxlKCk7XG4gIH07XG5cbiAgc2NhbGUuY2xhbXAgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY2xhbXAgPSBfID8gY2xhbXBlcihkb21haW4pIDogaWRlbnRpdHksIHNjYWxlKSA6IGNsYW1wICE9PSBpZGVudGl0eTtcbiAgfTtcblxuICBzY2FsZS5pbnRlcnBvbGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpbnRlcnBvbGF0ZSA9IF8sIHJlc2NhbGUoKSkgOiBpbnRlcnBvbGF0ZTtcbiAgfTtcblxuICBzY2FsZS51bmtub3duID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHVua25vd24gPSBfLCBzY2FsZSkgOiB1bmtub3duO1xuICB9O1xuXG4gIHJldHVybiBmdW5jdGlvbih0LCB1KSB7XG4gICAgdHJhbnNmb3JtID0gdCwgdW50cmFuc2Zvcm0gPSB1O1xuICAgIHJldHVybiByZXNjYWxlKCk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbnRpbnVvdXModHJhbnNmb3JtLCB1bnRyYW5zZm9ybSkge1xuICByZXR1cm4gdHJhbnNmb3JtZXIoKSh0cmFuc2Zvcm0sIHVudHJhbnNmb3JtKTtcbn1cbiIsImltcG9ydCB7dGlja1N0ZXB9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHtmb3JtYXQsIGZvcm1hdFByZWZpeCwgZm9ybWF0U3BlY2lmaWVyLCBwcmVjaXNpb25GaXhlZCwgcHJlY2lzaW9uUHJlZml4LCBwcmVjaXNpb25Sb3VuZH0gZnJvbSBcImQzLWZvcm1hdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzdGFydCwgc3RvcCwgY291bnQsIHNwZWNpZmllcikge1xuICB2YXIgc3RlcCA9IHRpY2tTdGVwKHN0YXJ0LCBzdG9wLCBjb3VudCksXG4gICAgICBwcmVjaXNpb247XG4gIHNwZWNpZmllciA9IGZvcm1hdFNwZWNpZmllcihzcGVjaWZpZXIgPT0gbnVsbCA/IFwiLGZcIiA6IHNwZWNpZmllcik7XG4gIHN3aXRjaCAoc3BlY2lmaWVyLnR5cGUpIHtcbiAgICBjYXNlIFwic1wiOiB7XG4gICAgICB2YXIgdmFsdWUgPSBNYXRoLm1heChNYXRoLmFicyhzdGFydCksIE1hdGguYWJzKHN0b3ApKTtcbiAgICAgIGlmIChzcGVjaWZpZXIucHJlY2lzaW9uID09IG51bGwgJiYgIWlzTmFOKHByZWNpc2lvbiA9IHByZWNpc2lvblByZWZpeChzdGVwLCB2YWx1ZSkpKSBzcGVjaWZpZXIucHJlY2lzaW9uID0gcHJlY2lzaW9uO1xuICAgICAgcmV0dXJuIGZvcm1hdFByZWZpeChzcGVjaWZpZXIsIHZhbHVlKTtcbiAgICB9XG4gICAgY2FzZSBcIlwiOlxuICAgIGNhc2UgXCJlXCI6XG4gICAgY2FzZSBcImdcIjpcbiAgICBjYXNlIFwicFwiOlxuICAgIGNhc2UgXCJyXCI6IHtcbiAgICAgIGlmIChzcGVjaWZpZXIucHJlY2lzaW9uID09IG51bGwgJiYgIWlzTmFOKHByZWNpc2lvbiA9IHByZWNpc2lvblJvdW5kKHN0ZXAsIE1hdGgubWF4KE1hdGguYWJzKHN0YXJ0KSwgTWF0aC5hYnMoc3RvcCkpKSkpIHNwZWNpZmllci5wcmVjaXNpb24gPSBwcmVjaXNpb24gLSAoc3BlY2lmaWVyLnR5cGUgPT09IFwiZVwiKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBjYXNlIFwiZlwiOlxuICAgIGNhc2UgXCIlXCI6IHtcbiAgICAgIGlmIChzcGVjaWZpZXIucHJlY2lzaW9uID09IG51bGwgJiYgIWlzTmFOKHByZWNpc2lvbiA9IHByZWNpc2lvbkZpeGVkKHN0ZXApKSkgc3BlY2lmaWVyLnByZWNpc2lvbiA9IHByZWNpc2lvbiAtIChzcGVjaWZpZXIudHlwZSA9PT0gXCIlXCIpICogMjtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZm9ybWF0KHNwZWNpZmllcik7XG59XG4iLCJpbXBvcnQge3RpY2tzLCB0aWNrSW5jcmVtZW50fSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCBjb250aW51b3VzLCB7Y29weSwgaWRlbnRpdHl9IGZyb20gXCIuL2NvbnRpbnVvdXNcIjtcbmltcG9ydCB7aW5pdFJhbmdlfSBmcm9tIFwiLi9pbml0XCI7XG5pbXBvcnQgdGlja0Zvcm1hdCBmcm9tIFwiLi90aWNrRm9ybWF0XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBsaW5lYXJpc2goc2NhbGUpIHtcbiAgdmFyIGRvbWFpbiA9IHNjYWxlLmRvbWFpbjtcblxuICBzY2FsZS50aWNrcyA9IGZ1bmN0aW9uKGNvdW50KSB7XG4gICAgdmFyIGQgPSBkb21haW4oKTtcbiAgICByZXR1cm4gdGlja3MoZFswXSwgZFtkLmxlbmd0aCAtIDFdLCBjb3VudCA9PSBudWxsID8gMTAgOiBjb3VudCk7XG4gIH07XG5cbiAgc2NhbGUudGlja0Zvcm1hdCA9IGZ1bmN0aW9uKGNvdW50LCBzcGVjaWZpZXIpIHtcbiAgICB2YXIgZCA9IGRvbWFpbigpO1xuICAgIHJldHVybiB0aWNrRm9ybWF0KGRbMF0sIGRbZC5sZW5ndGggLSAxXSwgY291bnQgPT0gbnVsbCA/IDEwIDogY291bnQsIHNwZWNpZmllcik7XG4gIH07XG5cbiAgc2NhbGUubmljZSA9IGZ1bmN0aW9uKGNvdW50KSB7XG4gICAgaWYgKGNvdW50ID09IG51bGwpIGNvdW50ID0gMTA7XG5cbiAgICB2YXIgZCA9IGRvbWFpbigpLFxuICAgICAgICBpMCA9IDAsXG4gICAgICAgIGkxID0gZC5sZW5ndGggLSAxLFxuICAgICAgICBzdGFydCA9IGRbaTBdLFxuICAgICAgICBzdG9wID0gZFtpMV0sXG4gICAgICAgIHN0ZXA7XG5cbiAgICBpZiAoc3RvcCA8IHN0YXJ0KSB7XG4gICAgICBzdGVwID0gc3RhcnQsIHN0YXJ0ID0gc3RvcCwgc3RvcCA9IHN0ZXA7XG4gICAgICBzdGVwID0gaTAsIGkwID0gaTEsIGkxID0gc3RlcDtcbiAgICB9XG5cbiAgICBzdGVwID0gdGlja0luY3JlbWVudChzdGFydCwgc3RvcCwgY291bnQpO1xuXG4gICAgaWYgKHN0ZXAgPiAwKSB7XG4gICAgICBzdGFydCA9IE1hdGguZmxvb3Ioc3RhcnQgLyBzdGVwKSAqIHN0ZXA7XG4gICAgICBzdG9wID0gTWF0aC5jZWlsKHN0b3AgLyBzdGVwKSAqIHN0ZXA7XG4gICAgICBzdGVwID0gdGlja0luY3JlbWVudChzdGFydCwgc3RvcCwgY291bnQpO1xuICAgIH0gZWxzZSBpZiAoc3RlcCA8IDApIHtcbiAgICAgIHN0YXJ0ID0gTWF0aC5jZWlsKHN0YXJ0ICogc3RlcCkgLyBzdGVwO1xuICAgICAgc3RvcCA9IE1hdGguZmxvb3Ioc3RvcCAqIHN0ZXApIC8gc3RlcDtcbiAgICAgIHN0ZXAgPSB0aWNrSW5jcmVtZW50KHN0YXJ0LCBzdG9wLCBjb3VudCk7XG4gICAgfVxuXG4gICAgaWYgKHN0ZXAgPiAwKSB7XG4gICAgICBkW2kwXSA9IE1hdGguZmxvb3Ioc3RhcnQgLyBzdGVwKSAqIHN0ZXA7XG4gICAgICBkW2kxXSA9IE1hdGguY2VpbChzdG9wIC8gc3RlcCkgKiBzdGVwO1xuICAgICAgZG9tYWluKGQpO1xuICAgIH0gZWxzZSBpZiAoc3RlcCA8IDApIHtcbiAgICAgIGRbaTBdID0gTWF0aC5jZWlsKHN0YXJ0ICogc3RlcCkgLyBzdGVwO1xuICAgICAgZFtpMV0gPSBNYXRoLmZsb29yKHN0b3AgKiBzdGVwKSAvIHN0ZXA7XG4gICAgICBkb21haW4oZCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHNjYWxlO1xuICB9O1xuXG4gIHJldHVybiBzY2FsZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbGluZWFyKCkge1xuICB2YXIgc2NhbGUgPSBjb250aW51b3VzKGlkZW50aXR5LCBpZGVudGl0eSk7XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBsaW5lYXIoKSk7XG4gIH07XG5cbiAgaW5pdFJhbmdlLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xuXG4gIHJldHVybiBsaW5lYXJpc2goc2NhbGUpO1xufVxuIiwiaW1wb3J0IHttYXB9IGZyb20gXCIuL2FycmF5XCI7XG5pbXBvcnQge2xpbmVhcmlzaH0gZnJvbSBcIi4vbGluZWFyXCI7XG5pbXBvcnQgbnVtYmVyIGZyb20gXCIuL251bWJlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpZGVudGl0eShkb21haW4pIHtcbiAgdmFyIHVua25vd247XG5cbiAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgIHJldHVybiBpc05hTih4ID0gK3gpID8gdW5rbm93biA6IHg7XG4gIH1cblxuICBzY2FsZS5pbnZlcnQgPSBzY2FsZTtcblxuICBzY2FsZS5kb21haW4gPSBzY2FsZS5yYW5nZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChkb21haW4gPSBtYXAuY2FsbChfLCBudW1iZXIpLCBzY2FsZSkgOiBkb21haW4uc2xpY2UoKTtcbiAgfTtcblxuICBzY2FsZS51bmtub3duID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHVua25vd24gPSBfLCBzY2FsZSkgOiB1bmtub3duO1xuICB9O1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gaWRlbnRpdHkoZG9tYWluKS51bmtub3duKHVua25vd24pO1xuICB9O1xuXG4gIGRvbWFpbiA9IGFyZ3VtZW50cy5sZW5ndGggPyBtYXAuY2FsbChkb21haW4sIG51bWJlcikgOiBbMCwgMV07XG5cbiAgcmV0dXJuIGxpbmVhcmlzaChzY2FsZSk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihkb21haW4sIGludGVydmFsKSB7XG4gIGRvbWFpbiA9IGRvbWFpbi5zbGljZSgpO1xuXG4gIHZhciBpMCA9IDAsXG4gICAgICBpMSA9IGRvbWFpbi5sZW5ndGggLSAxLFxuICAgICAgeDAgPSBkb21haW5baTBdLFxuICAgICAgeDEgPSBkb21haW5baTFdLFxuICAgICAgdDtcblxuICBpZiAoeDEgPCB4MCkge1xuICAgIHQgPSBpMCwgaTAgPSBpMSwgaTEgPSB0O1xuICAgIHQgPSB4MCwgeDAgPSB4MSwgeDEgPSB0O1xuICB9XG5cbiAgZG9tYWluW2kwXSA9IGludGVydmFsLmZsb29yKHgwKTtcbiAgZG9tYWluW2kxXSA9IGludGVydmFsLmNlaWwoeDEpO1xuICByZXR1cm4gZG9tYWluO1xufVxuIiwiaW1wb3J0IHt0aWNrc30gZnJvbSBcImQzLWFycmF5XCI7XG5pbXBvcnQge2Zvcm1hdH0gZnJvbSBcImQzLWZvcm1hdFwiO1xuaW1wb3J0IG5pY2UgZnJvbSBcIi4vbmljZVwiO1xuaW1wb3J0IHtjb3B5LCB0cmFuc2Zvcm1lcn0gZnJvbSBcIi4vY29udGludW91c1wiO1xuaW1wb3J0IHtpbml0UmFuZ2V9IGZyb20gXCIuL2luaXRcIjtcblxuZnVuY3Rpb24gdHJhbnNmb3JtTG9nKHgpIHtcbiAgcmV0dXJuIE1hdGgubG9nKHgpO1xufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm1FeHAoeCkge1xuICByZXR1cm4gTWF0aC5leHAoeCk7XG59XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybUxvZ24oeCkge1xuICByZXR1cm4gLU1hdGgubG9nKC14KTtcbn1cblxuZnVuY3Rpb24gdHJhbnNmb3JtRXhwbih4KSB7XG4gIHJldHVybiAtTWF0aC5leHAoLXgpO1xufVxuXG5mdW5jdGlvbiBwb3cxMCh4KSB7XG4gIHJldHVybiBpc0Zpbml0ZSh4KSA/ICsoXCIxZVwiICsgeCkgOiB4IDwgMCA/IDAgOiB4O1xufVxuXG5mdW5jdGlvbiBwb3dwKGJhc2UpIHtcbiAgcmV0dXJuIGJhc2UgPT09IDEwID8gcG93MTBcbiAgICAgIDogYmFzZSA9PT0gTWF0aC5FID8gTWF0aC5leHBcbiAgICAgIDogZnVuY3Rpb24oeCkgeyByZXR1cm4gTWF0aC5wb3coYmFzZSwgeCk7IH07XG59XG5cbmZ1bmN0aW9uIGxvZ3AoYmFzZSkge1xuICByZXR1cm4gYmFzZSA9PT0gTWF0aC5FID8gTWF0aC5sb2dcbiAgICAgIDogYmFzZSA9PT0gMTAgJiYgTWF0aC5sb2cxMFxuICAgICAgfHwgYmFzZSA9PT0gMiAmJiBNYXRoLmxvZzJcbiAgICAgIHx8IChiYXNlID0gTWF0aC5sb2coYmFzZSksIGZ1bmN0aW9uKHgpIHsgcmV0dXJuIE1hdGgubG9nKHgpIC8gYmFzZTsgfSk7XG59XG5cbmZ1bmN0aW9uIHJlZmxlY3QoZikge1xuICByZXR1cm4gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiAtZigteCk7XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2dnaXNoKHRyYW5zZm9ybSkge1xuICB2YXIgc2NhbGUgPSB0cmFuc2Zvcm0odHJhbnNmb3JtTG9nLCB0cmFuc2Zvcm1FeHApLFxuICAgICAgZG9tYWluID0gc2NhbGUuZG9tYWluLFxuICAgICAgYmFzZSA9IDEwLFxuICAgICAgbG9ncyxcbiAgICAgIHBvd3M7XG5cbiAgZnVuY3Rpb24gcmVzY2FsZSgpIHtcbiAgICBsb2dzID0gbG9ncChiYXNlKSwgcG93cyA9IHBvd3AoYmFzZSk7XG4gICAgaWYgKGRvbWFpbigpWzBdIDwgMCkge1xuICAgICAgbG9ncyA9IHJlZmxlY3QobG9ncyksIHBvd3MgPSByZWZsZWN0KHBvd3MpO1xuICAgICAgdHJhbnNmb3JtKHRyYW5zZm9ybUxvZ24sIHRyYW5zZm9ybUV4cG4pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0cmFuc2Zvcm0odHJhbnNmb3JtTG9nLCB0cmFuc2Zvcm1FeHApO1xuICAgIH1cbiAgICByZXR1cm4gc2NhbGU7XG4gIH1cblxuICBzY2FsZS5iYXNlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGJhc2UgPSArXywgcmVzY2FsZSgpKSA6IGJhc2U7XG4gIH07XG5cbiAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGRvbWFpbihfKSwgcmVzY2FsZSgpKSA6IGRvbWFpbigpO1xuICB9O1xuXG4gIHNjYWxlLnRpY2tzID0gZnVuY3Rpb24oY291bnQpIHtcbiAgICB2YXIgZCA9IGRvbWFpbigpLFxuICAgICAgICB1ID0gZFswXSxcbiAgICAgICAgdiA9IGRbZC5sZW5ndGggLSAxXSxcbiAgICAgICAgcjtcblxuICAgIGlmIChyID0gdiA8IHUpIGkgPSB1LCB1ID0gdiwgdiA9IGk7XG5cbiAgICB2YXIgaSA9IGxvZ3ModSksXG4gICAgICAgIGogPSBsb2dzKHYpLFxuICAgICAgICBwLFxuICAgICAgICBrLFxuICAgICAgICB0LFxuICAgICAgICBuID0gY291bnQgPT0gbnVsbCA/IDEwIDogK2NvdW50LFxuICAgICAgICB6ID0gW107XG5cbiAgICBpZiAoIShiYXNlICUgMSkgJiYgaiAtIGkgPCBuKSB7XG4gICAgICBpID0gTWF0aC5yb3VuZChpKSAtIDEsIGogPSBNYXRoLnJvdW5kKGopICsgMTtcbiAgICAgIGlmICh1ID4gMCkgZm9yICg7IGkgPCBqOyArK2kpIHtcbiAgICAgICAgZm9yIChrID0gMSwgcCA9IHBvd3MoaSk7IGsgPCBiYXNlOyArK2spIHtcbiAgICAgICAgICB0ID0gcCAqIGs7XG4gICAgICAgICAgaWYgKHQgPCB1KSBjb250aW51ZTtcbiAgICAgICAgICBpZiAodCA+IHYpIGJyZWFrO1xuICAgICAgICAgIHoucHVzaCh0KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGZvciAoOyBpIDwgajsgKytpKSB7XG4gICAgICAgIGZvciAoayA9IGJhc2UgLSAxLCBwID0gcG93cyhpKTsgayA+PSAxOyAtLWspIHtcbiAgICAgICAgICB0ID0gcCAqIGs7XG4gICAgICAgICAgaWYgKHQgPCB1KSBjb250aW51ZTtcbiAgICAgICAgICBpZiAodCA+IHYpIGJyZWFrO1xuICAgICAgICAgIHoucHVzaCh0KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB6ID0gdGlja3MoaSwgaiwgTWF0aC5taW4oaiAtIGksIG4pKS5tYXAocG93cyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHIgPyB6LnJldmVyc2UoKSA6IHo7XG4gIH07XG5cbiAgc2NhbGUudGlja0Zvcm1hdCA9IGZ1bmN0aW9uKGNvdW50LCBzcGVjaWZpZXIpIHtcbiAgICBpZiAoc3BlY2lmaWVyID09IG51bGwpIHNwZWNpZmllciA9IGJhc2UgPT09IDEwID8gXCIuMGVcIiA6IFwiLFwiO1xuICAgIGlmICh0eXBlb2Ygc3BlY2lmaWVyICE9PSBcImZ1bmN0aW9uXCIpIHNwZWNpZmllciA9IGZvcm1hdChzcGVjaWZpZXIpO1xuICAgIGlmIChjb3VudCA9PT0gSW5maW5pdHkpIHJldHVybiBzcGVjaWZpZXI7XG4gICAgaWYgKGNvdW50ID09IG51bGwpIGNvdW50ID0gMTA7XG4gICAgdmFyIGsgPSBNYXRoLm1heCgxLCBiYXNlICogY291bnQgLyBzY2FsZS50aWNrcygpLmxlbmd0aCk7IC8vIFRPRE8gZmFzdCBlc3RpbWF0ZT9cbiAgICByZXR1cm4gZnVuY3Rpb24oZCkge1xuICAgICAgdmFyIGkgPSBkIC8gcG93cyhNYXRoLnJvdW5kKGxvZ3MoZCkpKTtcbiAgICAgIGlmIChpICogYmFzZSA8IGJhc2UgLSAwLjUpIGkgKj0gYmFzZTtcbiAgICAgIHJldHVybiBpIDw9IGsgPyBzcGVjaWZpZXIoZCkgOiBcIlwiO1xuICAgIH07XG4gIH07XG5cbiAgc2NhbGUubmljZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkb21haW4obmljZShkb21haW4oKSwge1xuICAgICAgZmxvb3I6IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIHBvd3MoTWF0aC5mbG9vcihsb2dzKHgpKSk7IH0sXG4gICAgICBjZWlsOiBmdW5jdGlvbih4KSB7IHJldHVybiBwb3dzKE1hdGguY2VpbChsb2dzKHgpKSk7IH1cbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIHNjYWxlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBsb2coKSB7XG4gIHZhciBzY2FsZSA9IGxvZ2dpc2godHJhbnNmb3JtZXIoKSkuZG9tYWluKFsxLCAxMF0pO1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gY29weShzY2FsZSwgbG9nKCkpLmJhc2Uoc2NhbGUuYmFzZSgpKTtcbiAgfTtcblxuICBpbml0UmFuZ2UuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG5cbiAgcmV0dXJuIHNjYWxlO1xufVxuIiwiaW1wb3J0IHtsaW5lYXJpc2h9IGZyb20gXCIuL2xpbmVhclwiO1xuaW1wb3J0IHtjb3B5LCB0cmFuc2Zvcm1lcn0gZnJvbSBcIi4vY29udGludW91c1wiO1xuaW1wb3J0IHtpbml0UmFuZ2V9IGZyb20gXCIuL2luaXRcIjtcblxuZnVuY3Rpb24gdHJhbnNmb3JtU3ltbG9nKGMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gTWF0aC5zaWduKHgpICogTWF0aC5sb2cxcChNYXRoLmFicyh4IC8gYykpO1xuICB9O1xufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm1TeW1leHAoYykge1xuICByZXR1cm4gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBNYXRoLnNpZ24oeCkgKiBNYXRoLmV4cG0xKE1hdGguYWJzKHgpKSAqIGM7XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzeW1sb2dpc2godHJhbnNmb3JtKSB7XG4gIHZhciBjID0gMSwgc2NhbGUgPSB0cmFuc2Zvcm0odHJhbnNmb3JtU3ltbG9nKGMpLCB0cmFuc2Zvcm1TeW1leHAoYykpO1xuXG4gIHNjYWxlLmNvbnN0YW50ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gdHJhbnNmb3JtKHRyYW5zZm9ybVN5bWxvZyhjID0gK18pLCB0cmFuc2Zvcm1TeW1leHAoYykpIDogYztcbiAgfTtcblxuICByZXR1cm4gbGluZWFyaXNoKHNjYWxlKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3ltbG9nKCkge1xuICB2YXIgc2NhbGUgPSBzeW1sb2dpc2godHJhbnNmb3JtZXIoKSk7XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBzeW1sb2coKSkuY29uc3RhbnQoc2NhbGUuY29uc3RhbnQoKSk7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRSYW5nZS5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcbn1cbiIsImltcG9ydCB7bGluZWFyaXNofSBmcm9tIFwiLi9saW5lYXJcIjtcbmltcG9ydCB7Y29weSwgaWRlbnRpdHksIHRyYW5zZm9ybWVyfSBmcm9tIFwiLi9jb250aW51b3VzXCI7XG5pbXBvcnQge2luaXRSYW5nZX0gZnJvbSBcIi4vaW5pdFwiO1xuXG5mdW5jdGlvbiB0cmFuc2Zvcm1Qb3coZXhwb25lbnQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4geCA8IDAgPyAtTWF0aC5wb3coLXgsIGV4cG9uZW50KSA6IE1hdGgucG93KHgsIGV4cG9uZW50KTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gdHJhbnNmb3JtU3FydCh4KSB7XG4gIHJldHVybiB4IDwgMCA/IC1NYXRoLnNxcnQoLXgpIDogTWF0aC5zcXJ0KHgpO1xufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm1TcXVhcmUoeCkge1xuICByZXR1cm4geCA8IDAgPyAteCAqIHggOiB4ICogeDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBvd2lzaCh0cmFuc2Zvcm0pIHtcbiAgdmFyIHNjYWxlID0gdHJhbnNmb3JtKGlkZW50aXR5LCBpZGVudGl0eSksXG4gICAgICBleHBvbmVudCA9IDE7XG5cbiAgZnVuY3Rpb24gcmVzY2FsZSgpIHtcbiAgICByZXR1cm4gZXhwb25lbnQgPT09IDEgPyB0cmFuc2Zvcm0oaWRlbnRpdHksIGlkZW50aXR5KVxuICAgICAgICA6IGV4cG9uZW50ID09PSAwLjUgPyB0cmFuc2Zvcm0odHJhbnNmb3JtU3FydCwgdHJhbnNmb3JtU3F1YXJlKVxuICAgICAgICA6IHRyYW5zZm9ybSh0cmFuc2Zvcm1Qb3coZXhwb25lbnQpLCB0cmFuc2Zvcm1Qb3coMSAvIGV4cG9uZW50KSk7XG4gIH1cblxuICBzY2FsZS5leHBvbmVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChleHBvbmVudCA9ICtfLCByZXNjYWxlKCkpIDogZXhwb25lbnQ7XG4gIH07XG5cbiAgcmV0dXJuIGxpbmVhcmlzaChzY2FsZSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBvdygpIHtcbiAgdmFyIHNjYWxlID0gcG93aXNoKHRyYW5zZm9ybWVyKCkpO1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gY29weShzY2FsZSwgcG93KCkpLmV4cG9uZW50KHNjYWxlLmV4cG9uZW50KCkpO1xuICB9O1xuXG4gIGluaXRSYW5nZS5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcblxuICByZXR1cm4gc2NhbGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzcXJ0KCkge1xuICByZXR1cm4gcG93LmFwcGx5KG51bGwsIGFyZ3VtZW50cykuZXhwb25lbnQoMC41KTtcbn1cbiIsImltcG9ydCB7YXNjZW5kaW5nLCBiaXNlY3QsIHF1YW50aWxlIGFzIHRocmVzaG9sZH0gZnJvbSBcImQzLWFycmF5XCI7XG5pbXBvcnQge3NsaWNlfSBmcm9tIFwiLi9hcnJheVwiO1xuaW1wb3J0IHtpbml0UmFuZ2V9IGZyb20gXCIuL2luaXRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcXVhbnRpbGUoKSB7XG4gIHZhciBkb21haW4gPSBbXSxcbiAgICAgIHJhbmdlID0gW10sXG4gICAgICB0aHJlc2hvbGRzID0gW10sXG4gICAgICB1bmtub3duO1xuXG4gIGZ1bmN0aW9uIHJlc2NhbGUoKSB7XG4gICAgdmFyIGkgPSAwLCBuID0gTWF0aC5tYXgoMSwgcmFuZ2UubGVuZ3RoKTtcbiAgICB0aHJlc2hvbGRzID0gbmV3IEFycmF5KG4gLSAxKTtcbiAgICB3aGlsZSAoKytpIDwgbikgdGhyZXNob2xkc1tpIC0gMV0gPSB0aHJlc2hvbGQoZG9tYWluLCBpIC8gbik7XG4gICAgcmV0dXJuIHNjYWxlO1xuICB9XG5cbiAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgIHJldHVybiBpc05hTih4ID0gK3gpID8gdW5rbm93biA6IHJhbmdlW2Jpc2VjdCh0aHJlc2hvbGRzLCB4KV07XG4gIH1cblxuICBzY2FsZS5pbnZlcnRFeHRlbnQgPSBmdW5jdGlvbih5KSB7XG4gICAgdmFyIGkgPSByYW5nZS5pbmRleE9mKHkpO1xuICAgIHJldHVybiBpIDwgMCA/IFtOYU4sIE5hTl0gOiBbXG4gICAgICBpID4gMCA/IHRocmVzaG9sZHNbaSAtIDFdIDogZG9tYWluWzBdLFxuICAgICAgaSA8IHRocmVzaG9sZHMubGVuZ3RoID8gdGhyZXNob2xkc1tpXSA6IGRvbWFpbltkb21haW4ubGVuZ3RoIC0gMV1cbiAgICBdO1xuICB9O1xuXG4gIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkb21haW4uc2xpY2UoKTtcbiAgICBkb21haW4gPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IF8ubGVuZ3RoLCBkOyBpIDwgbjsgKytpKSBpZiAoZCA9IF9baV0sIGQgIT0gbnVsbCAmJiAhaXNOYU4oZCA9ICtkKSkgZG9tYWluLnB1c2goZCk7XG4gICAgZG9tYWluLnNvcnQoYXNjZW5kaW5nKTtcbiAgICByZXR1cm4gcmVzY2FsZSgpO1xuICB9O1xuXG4gIHNjYWxlLnJhbmdlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJhbmdlID0gc2xpY2UuY2FsbChfKSwgcmVzY2FsZSgpKSA6IHJhbmdlLnNsaWNlKCk7XG4gIH07XG5cbiAgc2NhbGUudW5rbm93biA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh1bmtub3duID0gXywgc2NhbGUpIDogdW5rbm93bjtcbiAgfTtcblxuICBzY2FsZS5xdWFudGlsZXMgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhyZXNob2xkcy5zbGljZSgpO1xuICB9O1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gcXVhbnRpbGUoKVxuICAgICAgICAuZG9tYWluKGRvbWFpbilcbiAgICAgICAgLnJhbmdlKHJhbmdlKVxuICAgICAgICAudW5rbm93bih1bmtub3duKTtcbiAgfTtcblxuICByZXR1cm4gaW5pdFJhbmdlLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xufVxuIiwiaW1wb3J0IHtiaXNlY3R9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHtzbGljZX0gZnJvbSBcIi4vYXJyYXlcIjtcbmltcG9ydCB7bGluZWFyaXNofSBmcm9tIFwiLi9saW5lYXJcIjtcbmltcG9ydCB7aW5pdFJhbmdlfSBmcm9tIFwiLi9pbml0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHF1YW50aXplKCkge1xuICB2YXIgeDAgPSAwLFxuICAgICAgeDEgPSAxLFxuICAgICAgbiA9IDEsXG4gICAgICBkb21haW4gPSBbMC41XSxcbiAgICAgIHJhbmdlID0gWzAsIDFdLFxuICAgICAgdW5rbm93bjtcblxuICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgcmV0dXJuIHggPD0geCA/IHJhbmdlW2Jpc2VjdChkb21haW4sIHgsIDAsIG4pXSA6IHVua25vd247XG4gIH1cblxuICBmdW5jdGlvbiByZXNjYWxlKCkge1xuICAgIHZhciBpID0gLTE7XG4gICAgZG9tYWluID0gbmV3IEFycmF5KG4pO1xuICAgIHdoaWxlICgrK2kgPCBuKSBkb21haW5baV0gPSAoKGkgKyAxKSAqIHgxIC0gKGkgLSBuKSAqIHgwKSAvIChuICsgMSk7XG4gICAgcmV0dXJuIHNjYWxlO1xuICB9XG5cbiAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHgwID0gK19bMF0sIHgxID0gK19bMV0sIHJlc2NhbGUoKSkgOiBbeDAsIHgxXTtcbiAgfTtcblxuICBzY2FsZS5yYW5nZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChuID0gKHJhbmdlID0gc2xpY2UuY2FsbChfKSkubGVuZ3RoIC0gMSwgcmVzY2FsZSgpKSA6IHJhbmdlLnNsaWNlKCk7XG4gIH07XG5cbiAgc2NhbGUuaW52ZXJ0RXh0ZW50ID0gZnVuY3Rpb24oeSkge1xuICAgIHZhciBpID0gcmFuZ2UuaW5kZXhPZih5KTtcbiAgICByZXR1cm4gaSA8IDAgPyBbTmFOLCBOYU5dXG4gICAgICAgIDogaSA8IDEgPyBbeDAsIGRvbWFpblswXV1cbiAgICAgICAgOiBpID49IG4gPyBbZG9tYWluW24gLSAxXSwgeDFdXG4gICAgICAgIDogW2RvbWFpbltpIC0gMV0sIGRvbWFpbltpXV07XG4gIH07XG5cbiAgc2NhbGUudW5rbm93biA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh1bmtub3duID0gXywgc2NhbGUpIDogc2NhbGU7XG4gIH07XG5cbiAgc2NhbGUudGhyZXNob2xkcyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkb21haW4uc2xpY2UoKTtcbiAgfTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHF1YW50aXplKClcbiAgICAgICAgLmRvbWFpbihbeDAsIHgxXSlcbiAgICAgICAgLnJhbmdlKHJhbmdlKVxuICAgICAgICAudW5rbm93bih1bmtub3duKTtcbiAgfTtcblxuICByZXR1cm4gaW5pdFJhbmdlLmFwcGx5KGxpbmVhcmlzaChzY2FsZSksIGFyZ3VtZW50cyk7XG59XG4iLCJpbXBvcnQge2Jpc2VjdH0gZnJvbSBcImQzLWFycmF5XCI7XG5pbXBvcnQge3NsaWNlfSBmcm9tIFwiLi9hcnJheVwiO1xuaW1wb3J0IHtpbml0UmFuZ2V9IGZyb20gXCIuL2luaXRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdGhyZXNob2xkKCkge1xuICB2YXIgZG9tYWluID0gWzAuNV0sXG4gICAgICByYW5nZSA9IFswLCAxXSxcbiAgICAgIHVua25vd24sXG4gICAgICBuID0gMTtcblxuICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgcmV0dXJuIHggPD0geCA/IHJhbmdlW2Jpc2VjdChkb21haW4sIHgsIDAsIG4pXSA6IHVua25vd247XG4gIH1cblxuICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZG9tYWluID0gc2xpY2UuY2FsbChfKSwgbiA9IE1hdGgubWluKGRvbWFpbi5sZW5ndGgsIHJhbmdlLmxlbmd0aCAtIDEpLCBzY2FsZSkgOiBkb21haW4uc2xpY2UoKTtcbiAgfTtcblxuICBzY2FsZS5yYW5nZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyYW5nZSA9IHNsaWNlLmNhbGwoXyksIG4gPSBNYXRoLm1pbihkb21haW4ubGVuZ3RoLCByYW5nZS5sZW5ndGggLSAxKSwgc2NhbGUpIDogcmFuZ2Uuc2xpY2UoKTtcbiAgfTtcblxuICBzY2FsZS5pbnZlcnRFeHRlbnQgPSBmdW5jdGlvbih5KSB7XG4gICAgdmFyIGkgPSByYW5nZS5pbmRleE9mKHkpO1xuICAgIHJldHVybiBbZG9tYWluW2kgLSAxXSwgZG9tYWluW2ldXTtcbiAgfTtcblxuICBzY2FsZS51bmtub3duID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHVua25vd24gPSBfLCBzY2FsZSkgOiB1bmtub3duO1xuICB9O1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhyZXNob2xkKClcbiAgICAgICAgLmRvbWFpbihkb21haW4pXG4gICAgICAgIC5yYW5nZShyYW5nZSlcbiAgICAgICAgLnVua25vd24odW5rbm93bik7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRSYW5nZS5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcbn1cbiIsInZhciB0MCA9IG5ldyBEYXRlLFxuICAgIHQxID0gbmV3IERhdGU7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5ld0ludGVydmFsKGZsb29yaSwgb2Zmc2V0aSwgY291bnQsIGZpZWxkKSB7XG5cbiAgZnVuY3Rpb24gaW50ZXJ2YWwoZGF0ZSkge1xuICAgIHJldHVybiBmbG9vcmkoZGF0ZSA9IGFyZ3VtZW50cy5sZW5ndGggPT09IDAgPyBuZXcgRGF0ZSA6IG5ldyBEYXRlKCtkYXRlKSksIGRhdGU7XG4gIH1cblxuICBpbnRlcnZhbC5mbG9vciA9IGZ1bmN0aW9uKGRhdGUpIHtcbiAgICByZXR1cm4gZmxvb3JpKGRhdGUgPSBuZXcgRGF0ZSgrZGF0ZSkpLCBkYXRlO1xuICB9O1xuXG4gIGludGVydmFsLmNlaWwgPSBmdW5jdGlvbihkYXRlKSB7XG4gICAgcmV0dXJuIGZsb29yaShkYXRlID0gbmV3IERhdGUoZGF0ZSAtIDEpKSwgb2Zmc2V0aShkYXRlLCAxKSwgZmxvb3JpKGRhdGUpLCBkYXRlO1xuICB9O1xuXG4gIGludGVydmFsLnJvdW5kID0gZnVuY3Rpb24oZGF0ZSkge1xuICAgIHZhciBkMCA9IGludGVydmFsKGRhdGUpLFxuICAgICAgICBkMSA9IGludGVydmFsLmNlaWwoZGF0ZSk7XG4gICAgcmV0dXJuIGRhdGUgLSBkMCA8IGQxIC0gZGF0ZSA/IGQwIDogZDE7XG4gIH07XG5cbiAgaW50ZXJ2YWwub2Zmc2V0ID0gZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICAgIHJldHVybiBvZmZzZXRpKGRhdGUgPSBuZXcgRGF0ZSgrZGF0ZSksIHN0ZXAgPT0gbnVsbCA/IDEgOiBNYXRoLmZsb29yKHN0ZXApKSwgZGF0ZTtcbiAgfTtcblxuICBpbnRlcnZhbC5yYW5nZSA9IGZ1bmN0aW9uKHN0YXJ0LCBzdG9wLCBzdGVwKSB7XG4gICAgdmFyIHJhbmdlID0gW10sIHByZXZpb3VzO1xuICAgIHN0YXJ0ID0gaW50ZXJ2YWwuY2VpbChzdGFydCk7XG4gICAgc3RlcCA9IHN0ZXAgPT0gbnVsbCA/IDEgOiBNYXRoLmZsb29yKHN0ZXApO1xuICAgIGlmICghKHN0YXJ0IDwgc3RvcCkgfHwgIShzdGVwID4gMCkpIHJldHVybiByYW5nZTsgLy8gYWxzbyBoYW5kbGVzIEludmFsaWQgRGF0ZVxuICAgIGRvIHJhbmdlLnB1c2gocHJldmlvdXMgPSBuZXcgRGF0ZSgrc3RhcnQpKSwgb2Zmc2V0aShzdGFydCwgc3RlcCksIGZsb29yaShzdGFydCk7XG4gICAgd2hpbGUgKHByZXZpb3VzIDwgc3RhcnQgJiYgc3RhcnQgPCBzdG9wKTtcbiAgICByZXR1cm4gcmFuZ2U7XG4gIH07XG5cbiAgaW50ZXJ2YWwuZmlsdGVyID0gZnVuY3Rpb24odGVzdCkge1xuICAgIHJldHVybiBuZXdJbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgICBpZiAoZGF0ZSA+PSBkYXRlKSB3aGlsZSAoZmxvb3JpKGRhdGUpLCAhdGVzdChkYXRlKSkgZGF0ZS5zZXRUaW1lKGRhdGUgLSAxKTtcbiAgICB9LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gICAgICBpZiAoZGF0ZSA+PSBkYXRlKSB7XG4gICAgICAgIGlmIChzdGVwIDwgMCkgd2hpbGUgKCsrc3RlcCA8PSAwKSB7XG4gICAgICAgICAgd2hpbGUgKG9mZnNldGkoZGF0ZSwgLTEpLCAhdGVzdChkYXRlKSkge30gLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1lbXB0eVxuICAgICAgICB9IGVsc2Ugd2hpbGUgKC0tc3RlcCA+PSAwKSB7XG4gICAgICAgICAgd2hpbGUgKG9mZnNldGkoZGF0ZSwgKzEpLCAhdGVzdChkYXRlKSkge30gLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1lbXB0eVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgaWYgKGNvdW50KSB7XG4gICAgaW50ZXJ2YWwuY291bnQgPSBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gICAgICB0MC5zZXRUaW1lKCtzdGFydCksIHQxLnNldFRpbWUoK2VuZCk7XG4gICAgICBmbG9vcmkodDApLCBmbG9vcmkodDEpO1xuICAgICAgcmV0dXJuIE1hdGguZmxvb3IoY291bnQodDAsIHQxKSk7XG4gICAgfTtcblxuICAgIGludGVydmFsLmV2ZXJ5ID0gZnVuY3Rpb24oc3RlcCkge1xuICAgICAgc3RlcCA9IE1hdGguZmxvb3Ioc3RlcCk7XG4gICAgICByZXR1cm4gIWlzRmluaXRlKHN0ZXApIHx8ICEoc3RlcCA+IDApID8gbnVsbFxuICAgICAgICAgIDogIShzdGVwID4gMSkgPyBpbnRlcnZhbFxuICAgICAgICAgIDogaW50ZXJ2YWwuZmlsdGVyKGZpZWxkXG4gICAgICAgICAgICAgID8gZnVuY3Rpb24oZCkgeyByZXR1cm4gZmllbGQoZCkgJSBzdGVwID09PSAwOyB9XG4gICAgICAgICAgICAgIDogZnVuY3Rpb24oZCkgeyByZXR1cm4gaW50ZXJ2YWwuY291bnQoMCwgZCkgJSBzdGVwID09PSAwOyB9KTtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGludGVydmFsO1xufVxuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsLmpzXCI7XG5cbnZhciB5ZWFyID0gaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICBkYXRlLnNldE1vbnRoKDAsIDEpO1xuICBkYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldEZ1bGxZZWFyKGRhdGUuZ2V0RnVsbFllYXIoKSArIHN0ZXApO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gZW5kLmdldEZ1bGxZZWFyKCkgLSBzdGFydC5nZXRGdWxsWWVhcigpO1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRGdWxsWWVhcigpO1xufSk7XG5cbi8vIEFuIG9wdGltaXplZCBpbXBsZW1lbnRhdGlvbiBmb3IgdGhpcyBzaW1wbGUgY2FzZS5cbnllYXIuZXZlcnkgPSBmdW5jdGlvbihrKSB7XG4gIHJldHVybiAhaXNGaW5pdGUoayA9IE1hdGguZmxvb3IoaykpIHx8ICEoayA+IDApID8gbnVsbCA6IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICBkYXRlLnNldEZ1bGxZZWFyKE1hdGguZmxvb3IoZGF0ZS5nZXRGdWxsWWVhcigpIC8gaykgKiBrKTtcbiAgICBkYXRlLnNldE1vbnRoKDAsIDEpO1xuICAgIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgICBkYXRlLnNldEZ1bGxZZWFyKGRhdGUuZ2V0RnVsbFllYXIoKSArIHN0ZXAgKiBrKTtcbiAgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB5ZWFyO1xuZXhwb3J0IHZhciB5ZWFycyA9IHllYXIucmFuZ2U7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWwuanNcIjtcblxudmFyIG1vbnRoID0gaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICBkYXRlLnNldERhdGUoMSk7XG4gIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0TW9udGgoZGF0ZS5nZXRNb250aCgpICsgc3RlcCk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiBlbmQuZ2V0TW9udGgoKSAtIHN0YXJ0LmdldE1vbnRoKCkgKyAoZW5kLmdldEZ1bGxZZWFyKCkgLSBzdGFydC5nZXRGdWxsWWVhcigpKSAqIDEyO1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRNb250aCgpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IG1vbnRoO1xuZXhwb3J0IHZhciBtb250aHMgPSBtb250aC5yYW5nZTtcbiIsImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbC5qc1wiO1xuaW1wb3J0IHtkdXJhdGlvbk1pbnV0ZSwgZHVyYXRpb25XZWVrfSBmcm9tIFwiLi9kdXJhdGlvbi5qc1wiO1xuXG5mdW5jdGlvbiB3ZWVrZGF5KGkpIHtcbiAgcmV0dXJuIGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICBkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgLSAoZGF0ZS5nZXREYXkoKSArIDcgLSBpKSAlIDcpO1xuICAgIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgICBkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgKyBzdGVwICogNyk7XG4gIH0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgICByZXR1cm4gKGVuZCAtIHN0YXJ0IC0gKGVuZC5nZXRUaW1lem9uZU9mZnNldCgpIC0gc3RhcnQuZ2V0VGltZXpvbmVPZmZzZXQoKSkgKiBkdXJhdGlvbk1pbnV0ZSkgLyBkdXJhdGlvbldlZWs7XG4gIH0pO1xufVxuXG5leHBvcnQgdmFyIHN1bmRheSA9IHdlZWtkYXkoMCk7XG5leHBvcnQgdmFyIG1vbmRheSA9IHdlZWtkYXkoMSk7XG5leHBvcnQgdmFyIHR1ZXNkYXkgPSB3ZWVrZGF5KDIpO1xuZXhwb3J0IHZhciB3ZWRuZXNkYXkgPSB3ZWVrZGF5KDMpO1xuZXhwb3J0IHZhciB0aHVyc2RheSA9IHdlZWtkYXkoNCk7XG5leHBvcnQgdmFyIGZyaWRheSA9IHdlZWtkYXkoNSk7XG5leHBvcnQgdmFyIHNhdHVyZGF5ID0gd2Vla2RheSg2KTtcblxuZXhwb3J0IHZhciBzdW5kYXlzID0gc3VuZGF5LnJhbmdlO1xuZXhwb3J0IHZhciBtb25kYXlzID0gbW9uZGF5LnJhbmdlO1xuZXhwb3J0IHZhciB0dWVzZGF5cyA9IHR1ZXNkYXkucmFuZ2U7XG5leHBvcnQgdmFyIHdlZG5lc2RheXMgPSB3ZWRuZXNkYXkucmFuZ2U7XG5leHBvcnQgdmFyIHRodXJzZGF5cyA9IHRodXJzZGF5LnJhbmdlO1xuZXhwb3J0IHZhciBmcmlkYXlzID0gZnJpZGF5LnJhbmdlO1xuZXhwb3J0IHZhciBzYXR1cmRheXMgPSBzYXR1cmRheS5yYW5nZTtcbiIsImV4cG9ydCB2YXIgZHVyYXRpb25TZWNvbmQgPSAxZTM7XG5leHBvcnQgdmFyIGR1cmF0aW9uTWludXRlID0gNmU0O1xuZXhwb3J0IHZhciBkdXJhdGlvbkhvdXIgPSAzNmU1O1xuZXhwb3J0IHZhciBkdXJhdGlvbkRheSA9IDg2NGU1O1xuZXhwb3J0IHZhciBkdXJhdGlvbldlZWsgPSA2MDQ4ZTU7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWwuanNcIjtcbmltcG9ydCB7ZHVyYXRpb25EYXksIGR1cmF0aW9uTWludXRlfSBmcm9tIFwiLi9kdXJhdGlvbi5qc1wiO1xuXG52YXIgZGF5ID0gaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICBkYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgKyBzdGVwKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIChlbmQgLSBzdGFydCAtIChlbmQuZ2V0VGltZXpvbmVPZmZzZXQoKSAtIHN0YXJ0LmdldFRpbWV6b25lT2Zmc2V0KCkpICogZHVyYXRpb25NaW51dGUpIC8gZHVyYXRpb25EYXk7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldERhdGUoKSAtIDE7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgZGF5O1xuZXhwb3J0IHZhciBkYXlzID0gZGF5LnJhbmdlO1xuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsLmpzXCI7XG5pbXBvcnQge2R1cmF0aW9uSG91ciwgZHVyYXRpb25NaW51dGUsIGR1cmF0aW9uU2Vjb25kfSBmcm9tIFwiLi9kdXJhdGlvbi5qc1wiO1xuXG52YXIgaG91ciA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRUaW1lKGRhdGUgLSBkYXRlLmdldE1pbGxpc2Vjb25kcygpIC0gZGF0ZS5nZXRTZWNvbmRzKCkgKiBkdXJhdGlvblNlY29uZCAtIGRhdGUuZ2V0TWludXRlcygpICogZHVyYXRpb25NaW51dGUpO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldFRpbWUoK2RhdGUgKyBzdGVwICogZHVyYXRpb25Ib3VyKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIChlbmQgLSBzdGFydCkgLyBkdXJhdGlvbkhvdXI7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldEhvdXJzKCk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgaG91cjtcbmV4cG9ydCB2YXIgaG91cnMgPSBob3VyLnJhbmdlO1xuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsLmpzXCI7XG5pbXBvcnQge2R1cmF0aW9uTWludXRlLCBkdXJhdGlvblNlY29uZH0gZnJvbSBcIi4vZHVyYXRpb24uanNcIjtcblxudmFyIG1pbnV0ZSA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRUaW1lKGRhdGUgLSBkYXRlLmdldE1pbGxpc2Vjb25kcygpIC0gZGF0ZS5nZXRTZWNvbmRzKCkgKiBkdXJhdGlvblNlY29uZCk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0VGltZSgrZGF0ZSArIHN0ZXAgKiBkdXJhdGlvbk1pbnV0ZSk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiAoZW5kIC0gc3RhcnQpIC8gZHVyYXRpb25NaW51dGU7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldE1pbnV0ZXMoKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBtaW51dGU7XG5leHBvcnQgdmFyIG1pbnV0ZXMgPSBtaW51dGUucmFuZ2U7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWwuanNcIjtcbmltcG9ydCB7ZHVyYXRpb25TZWNvbmR9IGZyb20gXCIuL2R1cmF0aW9uLmpzXCI7XG5cbnZhciBzZWNvbmQgPSBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0VGltZShkYXRlIC0gZGF0ZS5nZXRNaWxsaXNlY29uZHMoKSk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0VGltZSgrZGF0ZSArIHN0ZXAgKiBkdXJhdGlvblNlY29uZCk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiAoZW5kIC0gc3RhcnQpIC8gZHVyYXRpb25TZWNvbmQ7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldFVUQ1NlY29uZHMoKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBzZWNvbmQ7XG5leHBvcnQgdmFyIHNlY29uZHMgPSBzZWNvbmQucmFuZ2U7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWwuanNcIjtcblxudmFyIG1pbGxpc2Vjb25kID0gaW50ZXJ2YWwoZnVuY3Rpb24oKSB7XG4gIC8vIG5vb3Bcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRUaW1lKCtkYXRlICsgc3RlcCk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiBlbmQgLSBzdGFydDtcbn0pO1xuXG4vLyBBbiBvcHRpbWl6ZWQgaW1wbGVtZW50YXRpb24gZm9yIHRoaXMgc2ltcGxlIGNhc2UuXG5taWxsaXNlY29uZC5ldmVyeSA9IGZ1bmN0aW9uKGspIHtcbiAgayA9IE1hdGguZmxvb3Ioayk7XG4gIGlmICghaXNGaW5pdGUoaykgfHwgIShrID4gMCkpIHJldHVybiBudWxsO1xuICBpZiAoIShrID4gMSkpIHJldHVybiBtaWxsaXNlY29uZDtcbiAgcmV0dXJuIGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICBkYXRlLnNldFRpbWUoTWF0aC5mbG9vcihkYXRlIC8gaykgKiBrKTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICAgIGRhdGUuc2V0VGltZSgrZGF0ZSArIHN0ZXAgKiBrKTtcbiAgfSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICAgIHJldHVybiAoZW5kIC0gc3RhcnQpIC8gaztcbiAgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBtaWxsaXNlY29uZDtcbmV4cG9ydCB2YXIgbWlsbGlzZWNvbmRzID0gbWlsbGlzZWNvbmQucmFuZ2U7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWwuanNcIjtcbmltcG9ydCB7ZHVyYXRpb25XZWVrfSBmcm9tIFwiLi9kdXJhdGlvbi5qc1wiO1xuXG5mdW5jdGlvbiB1dGNXZWVrZGF5KGkpIHtcbiAgcmV0dXJuIGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICBkYXRlLnNldFVUQ0RhdGUoZGF0ZS5nZXRVVENEYXRlKCkgLSAoZGF0ZS5nZXRVVENEYXkoKSArIDcgLSBpKSAlIDcpO1xuICAgIGRhdGUuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgICBkYXRlLnNldFVUQ0RhdGUoZGF0ZS5nZXRVVENEYXRlKCkgKyBzdGVwICogNyk7XG4gIH0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGR1cmF0aW9uV2VlaztcbiAgfSk7XG59XG5cbmV4cG9ydCB2YXIgdXRjU3VuZGF5ID0gdXRjV2Vla2RheSgwKTtcbmV4cG9ydCB2YXIgdXRjTW9uZGF5ID0gdXRjV2Vla2RheSgxKTtcbmV4cG9ydCB2YXIgdXRjVHVlc2RheSA9IHV0Y1dlZWtkYXkoMik7XG5leHBvcnQgdmFyIHV0Y1dlZG5lc2RheSA9IHV0Y1dlZWtkYXkoMyk7XG5leHBvcnQgdmFyIHV0Y1RodXJzZGF5ID0gdXRjV2Vla2RheSg0KTtcbmV4cG9ydCB2YXIgdXRjRnJpZGF5ID0gdXRjV2Vla2RheSg1KTtcbmV4cG9ydCB2YXIgdXRjU2F0dXJkYXkgPSB1dGNXZWVrZGF5KDYpO1xuXG5leHBvcnQgdmFyIHV0Y1N1bmRheXMgPSB1dGNTdW5kYXkucmFuZ2U7XG5leHBvcnQgdmFyIHV0Y01vbmRheXMgPSB1dGNNb25kYXkucmFuZ2U7XG5leHBvcnQgdmFyIHV0Y1R1ZXNkYXlzID0gdXRjVHVlc2RheS5yYW5nZTtcbmV4cG9ydCB2YXIgdXRjV2VkbmVzZGF5cyA9IHV0Y1dlZG5lc2RheS5yYW5nZTtcbmV4cG9ydCB2YXIgdXRjVGh1cnNkYXlzID0gdXRjVGh1cnNkYXkucmFuZ2U7XG5leHBvcnQgdmFyIHV0Y0ZyaWRheXMgPSB1dGNGcmlkYXkucmFuZ2U7XG5leHBvcnQgdmFyIHV0Y1NhdHVyZGF5cyA9IHV0Y1NhdHVyZGF5LnJhbmdlO1xuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsLmpzXCI7XG5pbXBvcnQge2R1cmF0aW9uRGF5fSBmcm9tIFwiLi9kdXJhdGlvbi5qc1wiO1xuXG52YXIgdXRjRGF5ID0gaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICBkYXRlLnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldFVUQ0RhdGUoZGF0ZS5nZXRVVENEYXRlKCkgKyBzdGVwKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIChlbmQgLSBzdGFydCkgLyBkdXJhdGlvbkRheTtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0VVRDRGF0ZSgpIC0gMTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB1dGNEYXk7XG5leHBvcnQgdmFyIHV0Y0RheXMgPSB1dGNEYXkucmFuZ2U7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWwuanNcIjtcblxudmFyIHV0Y1llYXIgPSBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0VVRDTW9udGgoMCwgMSk7XG4gIGRhdGUuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0VVRDRnVsbFllYXIoZGF0ZS5nZXRVVENGdWxsWWVhcigpICsgc3RlcCk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiBlbmQuZ2V0VVRDRnVsbFllYXIoKSAtIHN0YXJ0LmdldFVUQ0Z1bGxZZWFyKCk7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldFVUQ0Z1bGxZZWFyKCk7XG59KTtcblxuLy8gQW4gb3B0aW1pemVkIGltcGxlbWVudGF0aW9uIGZvciB0aGlzIHNpbXBsZSBjYXNlLlxudXRjWWVhci5ldmVyeSA9IGZ1bmN0aW9uKGspIHtcbiAgcmV0dXJuICFpc0Zpbml0ZShrID0gTWF0aC5mbG9vcihrKSkgfHwgIShrID4gMCkgPyBudWxsIDogaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgIGRhdGUuc2V0VVRDRnVsbFllYXIoTWF0aC5mbG9vcihkYXRlLmdldFVUQ0Z1bGxZZWFyKCkgLyBrKSAqIGspO1xuICAgIGRhdGUuc2V0VVRDTW9udGgoMCwgMSk7XG4gICAgZGF0ZS5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICAgIGRhdGUuc2V0VVRDRnVsbFllYXIoZGF0ZS5nZXRVVENGdWxsWWVhcigpICsgc3RlcCAqIGspO1xuICB9KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHV0Y1llYXI7XG5leHBvcnQgdmFyIHV0Y1llYXJzID0gdXRjWWVhci5yYW5nZTtcbiIsImltcG9ydCB7XG4gIHRpbWVEYXksXG4gIHRpbWVTdW5kYXksXG4gIHRpbWVNb25kYXksXG4gIHRpbWVUaHVyc2RheSxcbiAgdGltZVllYXIsXG4gIHV0Y0RheSxcbiAgdXRjU3VuZGF5LFxuICB1dGNNb25kYXksXG4gIHV0Y1RodXJzZGF5LFxuICB1dGNZZWFyXG59IGZyb20gXCJkMy10aW1lXCI7XG5cbmZ1bmN0aW9uIGxvY2FsRGF0ZShkKSB7XG4gIGlmICgwIDw9IGQueSAmJiBkLnkgPCAxMDApIHtcbiAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKC0xLCBkLm0sIGQuZCwgZC5ILCBkLk0sIGQuUywgZC5MKTtcbiAgICBkYXRlLnNldEZ1bGxZZWFyKGQueSk7XG4gICAgcmV0dXJuIGRhdGU7XG4gIH1cbiAgcmV0dXJuIG5ldyBEYXRlKGQueSwgZC5tLCBkLmQsIGQuSCwgZC5NLCBkLlMsIGQuTCk7XG59XG5cbmZ1bmN0aW9uIHV0Y0RhdGUoZCkge1xuICBpZiAoMCA8PSBkLnkgJiYgZC55IDwgMTAwKSB7XG4gICAgdmFyIGRhdGUgPSBuZXcgRGF0ZShEYXRlLlVUQygtMSwgZC5tLCBkLmQsIGQuSCwgZC5NLCBkLlMsIGQuTCkpO1xuICAgIGRhdGUuc2V0VVRDRnVsbFllYXIoZC55KTtcbiAgICByZXR1cm4gZGF0ZTtcbiAgfVxuICByZXR1cm4gbmV3IERhdGUoRGF0ZS5VVEMoZC55LCBkLm0sIGQuZCwgZC5ILCBkLk0sIGQuUywgZC5MKSk7XG59XG5cbmZ1bmN0aW9uIG5ld0RhdGUoeSwgbSwgZCkge1xuICByZXR1cm4ge3k6IHksIG06IG0sIGQ6IGQsIEg6IDAsIE06IDAsIFM6IDAsIEw6IDB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmb3JtYXRMb2NhbGUobG9jYWxlKSB7XG4gIHZhciBsb2NhbGVfZGF0ZVRpbWUgPSBsb2NhbGUuZGF0ZVRpbWUsXG4gICAgICBsb2NhbGVfZGF0ZSA9IGxvY2FsZS5kYXRlLFxuICAgICAgbG9jYWxlX3RpbWUgPSBsb2NhbGUudGltZSxcbiAgICAgIGxvY2FsZV9wZXJpb2RzID0gbG9jYWxlLnBlcmlvZHMsXG4gICAgICBsb2NhbGVfd2Vla2RheXMgPSBsb2NhbGUuZGF5cyxcbiAgICAgIGxvY2FsZV9zaG9ydFdlZWtkYXlzID0gbG9jYWxlLnNob3J0RGF5cyxcbiAgICAgIGxvY2FsZV9tb250aHMgPSBsb2NhbGUubW9udGhzLFxuICAgICAgbG9jYWxlX3Nob3J0TW9udGhzID0gbG9jYWxlLnNob3J0TW9udGhzO1xuXG4gIHZhciBwZXJpb2RSZSA9IGZvcm1hdFJlKGxvY2FsZV9wZXJpb2RzKSxcbiAgICAgIHBlcmlvZExvb2t1cCA9IGZvcm1hdExvb2t1cChsb2NhbGVfcGVyaW9kcyksXG4gICAgICB3ZWVrZGF5UmUgPSBmb3JtYXRSZShsb2NhbGVfd2Vla2RheXMpLFxuICAgICAgd2Vla2RheUxvb2t1cCA9IGZvcm1hdExvb2t1cChsb2NhbGVfd2Vla2RheXMpLFxuICAgICAgc2hvcnRXZWVrZGF5UmUgPSBmb3JtYXRSZShsb2NhbGVfc2hvcnRXZWVrZGF5cyksXG4gICAgICBzaG9ydFdlZWtkYXlMb29rdXAgPSBmb3JtYXRMb29rdXAobG9jYWxlX3Nob3J0V2Vla2RheXMpLFxuICAgICAgbW9udGhSZSA9IGZvcm1hdFJlKGxvY2FsZV9tb250aHMpLFxuICAgICAgbW9udGhMb29rdXAgPSBmb3JtYXRMb29rdXAobG9jYWxlX21vbnRocyksXG4gICAgICBzaG9ydE1vbnRoUmUgPSBmb3JtYXRSZShsb2NhbGVfc2hvcnRNb250aHMpLFxuICAgICAgc2hvcnRNb250aExvb2t1cCA9IGZvcm1hdExvb2t1cChsb2NhbGVfc2hvcnRNb250aHMpO1xuXG4gIHZhciBmb3JtYXRzID0ge1xuICAgIFwiYVwiOiBmb3JtYXRTaG9ydFdlZWtkYXksXG4gICAgXCJBXCI6IGZvcm1hdFdlZWtkYXksXG4gICAgXCJiXCI6IGZvcm1hdFNob3J0TW9udGgsXG4gICAgXCJCXCI6IGZvcm1hdE1vbnRoLFxuICAgIFwiY1wiOiBudWxsLFxuICAgIFwiZFwiOiBmb3JtYXREYXlPZk1vbnRoLFxuICAgIFwiZVwiOiBmb3JtYXREYXlPZk1vbnRoLFxuICAgIFwiZlwiOiBmb3JtYXRNaWNyb3NlY29uZHMsXG4gICAgXCJIXCI6IGZvcm1hdEhvdXIyNCxcbiAgICBcIklcIjogZm9ybWF0SG91cjEyLFxuICAgIFwialwiOiBmb3JtYXREYXlPZlllYXIsXG4gICAgXCJMXCI6IGZvcm1hdE1pbGxpc2Vjb25kcyxcbiAgICBcIm1cIjogZm9ybWF0TW9udGhOdW1iZXIsXG4gICAgXCJNXCI6IGZvcm1hdE1pbnV0ZXMsXG4gICAgXCJwXCI6IGZvcm1hdFBlcmlvZCxcbiAgICBcInFcIjogZm9ybWF0UXVhcnRlcixcbiAgICBcIlFcIjogZm9ybWF0VW5peFRpbWVzdGFtcCxcbiAgICBcInNcIjogZm9ybWF0VW5peFRpbWVzdGFtcFNlY29uZHMsXG4gICAgXCJTXCI6IGZvcm1hdFNlY29uZHMsXG4gICAgXCJ1XCI6IGZvcm1hdFdlZWtkYXlOdW1iZXJNb25kYXksXG4gICAgXCJVXCI6IGZvcm1hdFdlZWtOdW1iZXJTdW5kYXksXG4gICAgXCJWXCI6IGZvcm1hdFdlZWtOdW1iZXJJU08sXG4gICAgXCJ3XCI6IGZvcm1hdFdlZWtkYXlOdW1iZXJTdW5kYXksXG4gICAgXCJXXCI6IGZvcm1hdFdlZWtOdW1iZXJNb25kYXksXG4gICAgXCJ4XCI6IG51bGwsXG4gICAgXCJYXCI6IG51bGwsXG4gICAgXCJ5XCI6IGZvcm1hdFllYXIsXG4gICAgXCJZXCI6IGZvcm1hdEZ1bGxZZWFyLFxuICAgIFwiWlwiOiBmb3JtYXRab25lLFxuICAgIFwiJVwiOiBmb3JtYXRMaXRlcmFsUGVyY2VudFxuICB9O1xuXG4gIHZhciB1dGNGb3JtYXRzID0ge1xuICAgIFwiYVwiOiBmb3JtYXRVVENTaG9ydFdlZWtkYXksXG4gICAgXCJBXCI6IGZvcm1hdFVUQ1dlZWtkYXksXG4gICAgXCJiXCI6IGZvcm1hdFVUQ1Nob3J0TW9udGgsXG4gICAgXCJCXCI6IGZvcm1hdFVUQ01vbnRoLFxuICAgIFwiY1wiOiBudWxsLFxuICAgIFwiZFwiOiBmb3JtYXRVVENEYXlPZk1vbnRoLFxuICAgIFwiZVwiOiBmb3JtYXRVVENEYXlPZk1vbnRoLFxuICAgIFwiZlwiOiBmb3JtYXRVVENNaWNyb3NlY29uZHMsXG4gICAgXCJIXCI6IGZvcm1hdFVUQ0hvdXIyNCxcbiAgICBcIklcIjogZm9ybWF0VVRDSG91cjEyLFxuICAgIFwialwiOiBmb3JtYXRVVENEYXlPZlllYXIsXG4gICAgXCJMXCI6IGZvcm1hdFVUQ01pbGxpc2Vjb25kcyxcbiAgICBcIm1cIjogZm9ybWF0VVRDTW9udGhOdW1iZXIsXG4gICAgXCJNXCI6IGZvcm1hdFVUQ01pbnV0ZXMsXG4gICAgXCJwXCI6IGZvcm1hdFVUQ1BlcmlvZCxcbiAgICBcInFcIjogZm9ybWF0VVRDUXVhcnRlcixcbiAgICBcIlFcIjogZm9ybWF0VW5peFRpbWVzdGFtcCxcbiAgICBcInNcIjogZm9ybWF0VW5peFRpbWVzdGFtcFNlY29uZHMsXG4gICAgXCJTXCI6IGZvcm1hdFVUQ1NlY29uZHMsXG4gICAgXCJ1XCI6IGZvcm1hdFVUQ1dlZWtkYXlOdW1iZXJNb25kYXksXG4gICAgXCJVXCI6IGZvcm1hdFVUQ1dlZWtOdW1iZXJTdW5kYXksXG4gICAgXCJWXCI6IGZvcm1hdFVUQ1dlZWtOdW1iZXJJU08sXG4gICAgXCJ3XCI6IGZvcm1hdFVUQ1dlZWtkYXlOdW1iZXJTdW5kYXksXG4gICAgXCJXXCI6IGZvcm1hdFVUQ1dlZWtOdW1iZXJNb25kYXksXG4gICAgXCJ4XCI6IG51bGwsXG4gICAgXCJYXCI6IG51bGwsXG4gICAgXCJ5XCI6IGZvcm1hdFVUQ1llYXIsXG4gICAgXCJZXCI6IGZvcm1hdFVUQ0Z1bGxZZWFyLFxuICAgIFwiWlwiOiBmb3JtYXRVVENab25lLFxuICAgIFwiJVwiOiBmb3JtYXRMaXRlcmFsUGVyY2VudFxuICB9O1xuXG4gIHZhciBwYXJzZXMgPSB7XG4gICAgXCJhXCI6IHBhcnNlU2hvcnRXZWVrZGF5LFxuICAgIFwiQVwiOiBwYXJzZVdlZWtkYXksXG4gICAgXCJiXCI6IHBhcnNlU2hvcnRNb250aCxcbiAgICBcIkJcIjogcGFyc2VNb250aCxcbiAgICBcImNcIjogcGFyc2VMb2NhbGVEYXRlVGltZSxcbiAgICBcImRcIjogcGFyc2VEYXlPZk1vbnRoLFxuICAgIFwiZVwiOiBwYXJzZURheU9mTW9udGgsXG4gICAgXCJmXCI6IHBhcnNlTWljcm9zZWNvbmRzLFxuICAgIFwiSFwiOiBwYXJzZUhvdXIyNCxcbiAgICBcIklcIjogcGFyc2VIb3VyMjQsXG4gICAgXCJqXCI6IHBhcnNlRGF5T2ZZZWFyLFxuICAgIFwiTFwiOiBwYXJzZU1pbGxpc2Vjb25kcyxcbiAgICBcIm1cIjogcGFyc2VNb250aE51bWJlcixcbiAgICBcIk1cIjogcGFyc2VNaW51dGVzLFxuICAgIFwicFwiOiBwYXJzZVBlcmlvZCxcbiAgICBcInFcIjogcGFyc2VRdWFydGVyLFxuICAgIFwiUVwiOiBwYXJzZVVuaXhUaW1lc3RhbXAsXG4gICAgXCJzXCI6IHBhcnNlVW5peFRpbWVzdGFtcFNlY29uZHMsXG4gICAgXCJTXCI6IHBhcnNlU2Vjb25kcyxcbiAgICBcInVcIjogcGFyc2VXZWVrZGF5TnVtYmVyTW9uZGF5LFxuICAgIFwiVVwiOiBwYXJzZVdlZWtOdW1iZXJTdW5kYXksXG4gICAgXCJWXCI6IHBhcnNlV2Vla051bWJlcklTTyxcbiAgICBcIndcIjogcGFyc2VXZWVrZGF5TnVtYmVyU3VuZGF5LFxuICAgIFwiV1wiOiBwYXJzZVdlZWtOdW1iZXJNb25kYXksXG4gICAgXCJ4XCI6IHBhcnNlTG9jYWxlRGF0ZSxcbiAgICBcIlhcIjogcGFyc2VMb2NhbGVUaW1lLFxuICAgIFwieVwiOiBwYXJzZVllYXIsXG4gICAgXCJZXCI6IHBhcnNlRnVsbFllYXIsXG4gICAgXCJaXCI6IHBhcnNlWm9uZSxcbiAgICBcIiVcIjogcGFyc2VMaXRlcmFsUGVyY2VudFxuICB9O1xuXG4gIC8vIFRoZXNlIHJlY3Vyc2l2ZSBkaXJlY3RpdmUgZGVmaW5pdGlvbnMgbXVzdCBiZSBkZWZlcnJlZC5cbiAgZm9ybWF0cy54ID0gbmV3Rm9ybWF0KGxvY2FsZV9kYXRlLCBmb3JtYXRzKTtcbiAgZm9ybWF0cy5YID0gbmV3Rm9ybWF0KGxvY2FsZV90aW1lLCBmb3JtYXRzKTtcbiAgZm9ybWF0cy5jID0gbmV3Rm9ybWF0KGxvY2FsZV9kYXRlVGltZSwgZm9ybWF0cyk7XG4gIHV0Y0Zvcm1hdHMueCA9IG5ld0Zvcm1hdChsb2NhbGVfZGF0ZSwgdXRjRm9ybWF0cyk7XG4gIHV0Y0Zvcm1hdHMuWCA9IG5ld0Zvcm1hdChsb2NhbGVfdGltZSwgdXRjRm9ybWF0cyk7XG4gIHV0Y0Zvcm1hdHMuYyA9IG5ld0Zvcm1hdChsb2NhbGVfZGF0ZVRpbWUsIHV0Y0Zvcm1hdHMpO1xuXG4gIGZ1bmN0aW9uIG5ld0Zvcm1hdChzcGVjaWZpZXIsIGZvcm1hdHMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgdmFyIHN0cmluZyA9IFtdLFxuICAgICAgICAgIGkgPSAtMSxcbiAgICAgICAgICBqID0gMCxcbiAgICAgICAgICBuID0gc3BlY2lmaWVyLmxlbmd0aCxcbiAgICAgICAgICBjLFxuICAgICAgICAgIHBhZCxcbiAgICAgICAgICBmb3JtYXQ7XG5cbiAgICAgIGlmICghKGRhdGUgaW5zdGFuY2VvZiBEYXRlKSkgZGF0ZSA9IG5ldyBEYXRlKCtkYXRlKTtcblxuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgaWYgKHNwZWNpZmllci5jaGFyQ29kZUF0KGkpID09PSAzNykge1xuICAgICAgICAgIHN0cmluZy5wdXNoKHNwZWNpZmllci5zbGljZShqLCBpKSk7XG4gICAgICAgICAgaWYgKChwYWQgPSBwYWRzW2MgPSBzcGVjaWZpZXIuY2hhckF0KCsraSldKSAhPSBudWxsKSBjID0gc3BlY2lmaWVyLmNoYXJBdCgrK2kpO1xuICAgICAgICAgIGVsc2UgcGFkID0gYyA9PT0gXCJlXCIgPyBcIiBcIiA6IFwiMFwiO1xuICAgICAgICAgIGlmIChmb3JtYXQgPSBmb3JtYXRzW2NdKSBjID0gZm9ybWF0KGRhdGUsIHBhZCk7XG4gICAgICAgICAgc3RyaW5nLnB1c2goYyk7XG4gICAgICAgICAgaiA9IGkgKyAxO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHN0cmluZy5wdXNoKHNwZWNpZmllci5zbGljZShqLCBpKSk7XG4gICAgICByZXR1cm4gc3RyaW5nLmpvaW4oXCJcIik7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG5ld1BhcnNlKHNwZWNpZmllciwgWikge1xuICAgIHJldHVybiBmdW5jdGlvbihzdHJpbmcpIHtcbiAgICAgIHZhciBkID0gbmV3RGF0ZSgxOTAwLCB1bmRlZmluZWQsIDEpLFxuICAgICAgICAgIGkgPSBwYXJzZVNwZWNpZmllcihkLCBzcGVjaWZpZXIsIHN0cmluZyArPSBcIlwiLCAwKSxcbiAgICAgICAgICB3ZWVrLCBkYXk7XG4gICAgICBpZiAoaSAhPSBzdHJpbmcubGVuZ3RoKSByZXR1cm4gbnVsbDtcblxuICAgICAgLy8gSWYgYSBVTklYIHRpbWVzdGFtcCBpcyBzcGVjaWZpZWQsIHJldHVybiBpdC5cbiAgICAgIGlmIChcIlFcIiBpbiBkKSByZXR1cm4gbmV3IERhdGUoZC5RKTtcbiAgICAgIGlmIChcInNcIiBpbiBkKSByZXR1cm4gbmV3IERhdGUoZC5zICogMTAwMCArIChcIkxcIiBpbiBkID8gZC5MIDogMCkpO1xuXG4gICAgICAvLyBJZiB0aGlzIGlzIHV0Y1BhcnNlLCBuZXZlciB1c2UgdGhlIGxvY2FsIHRpbWV6b25lLlxuICAgICAgaWYgKFogJiYgIShcIlpcIiBpbiBkKSkgZC5aID0gMDtcblxuICAgICAgLy8gVGhlIGFtLXBtIGZsYWcgaXMgMCBmb3IgQU0sIGFuZCAxIGZvciBQTS5cbiAgICAgIGlmIChcInBcIiBpbiBkKSBkLkggPSBkLkggJSAxMiArIGQucCAqIDEyO1xuXG4gICAgICAvLyBJZiB0aGUgbW9udGggd2FzIG5vdCBzcGVjaWZpZWQsIGluaGVyaXQgZnJvbSB0aGUgcXVhcnRlci5cbiAgICAgIGlmIChkLm0gPT09IHVuZGVmaW5lZCkgZC5tID0gXCJxXCIgaW4gZCA/IGQucSA6IDA7XG5cbiAgICAgIC8vIENvbnZlcnQgZGF5LW9mLXdlZWsgYW5kIHdlZWstb2YteWVhciB0byBkYXktb2YteWVhci5cbiAgICAgIGlmIChcIlZcIiBpbiBkKSB7XG4gICAgICAgIGlmIChkLlYgPCAxIHx8IGQuViA+IDUzKSByZXR1cm4gbnVsbDtcbiAgICAgICAgaWYgKCEoXCJ3XCIgaW4gZCkpIGQudyA9IDE7XG4gICAgICAgIGlmIChcIlpcIiBpbiBkKSB7XG4gICAgICAgICAgd2VlayA9IHV0Y0RhdGUobmV3RGF0ZShkLnksIDAsIDEpKSwgZGF5ID0gd2Vlay5nZXRVVENEYXkoKTtcbiAgICAgICAgICB3ZWVrID0gZGF5ID4gNCB8fCBkYXkgPT09IDAgPyB1dGNNb25kYXkuY2VpbCh3ZWVrKSA6IHV0Y01vbmRheSh3ZWVrKTtcbiAgICAgICAgICB3ZWVrID0gdXRjRGF5Lm9mZnNldCh3ZWVrLCAoZC5WIC0gMSkgKiA3KTtcbiAgICAgICAgICBkLnkgPSB3ZWVrLmdldFVUQ0Z1bGxZZWFyKCk7XG4gICAgICAgICAgZC5tID0gd2Vlay5nZXRVVENNb250aCgpO1xuICAgICAgICAgIGQuZCA9IHdlZWsuZ2V0VVRDRGF0ZSgpICsgKGQudyArIDYpICUgNztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB3ZWVrID0gbG9jYWxEYXRlKG5ld0RhdGUoZC55LCAwLCAxKSksIGRheSA9IHdlZWsuZ2V0RGF5KCk7XG4gICAgICAgICAgd2VlayA9IGRheSA+IDQgfHwgZGF5ID09PSAwID8gdGltZU1vbmRheS5jZWlsKHdlZWspIDogdGltZU1vbmRheSh3ZWVrKTtcbiAgICAgICAgICB3ZWVrID0gdGltZURheS5vZmZzZXQod2VlaywgKGQuViAtIDEpICogNyk7XG4gICAgICAgICAgZC55ID0gd2Vlay5nZXRGdWxsWWVhcigpO1xuICAgICAgICAgIGQubSA9IHdlZWsuZ2V0TW9udGgoKTtcbiAgICAgICAgICBkLmQgPSB3ZWVrLmdldERhdGUoKSArIChkLncgKyA2KSAlIDc7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoXCJXXCIgaW4gZCB8fCBcIlVcIiBpbiBkKSB7XG4gICAgICAgIGlmICghKFwid1wiIGluIGQpKSBkLncgPSBcInVcIiBpbiBkID8gZC51ICUgNyA6IFwiV1wiIGluIGQgPyAxIDogMDtcbiAgICAgICAgZGF5ID0gXCJaXCIgaW4gZCA/IHV0Y0RhdGUobmV3RGF0ZShkLnksIDAsIDEpKS5nZXRVVENEYXkoKSA6IGxvY2FsRGF0ZShuZXdEYXRlKGQueSwgMCwgMSkpLmdldERheSgpO1xuICAgICAgICBkLm0gPSAwO1xuICAgICAgICBkLmQgPSBcIldcIiBpbiBkID8gKGQudyArIDYpICUgNyArIGQuVyAqIDcgLSAoZGF5ICsgNSkgJSA3IDogZC53ICsgZC5VICogNyAtIChkYXkgKyA2KSAlIDc7XG4gICAgICB9XG5cbiAgICAgIC8vIElmIGEgdGltZSB6b25lIGlzIHNwZWNpZmllZCwgYWxsIGZpZWxkcyBhcmUgaW50ZXJwcmV0ZWQgYXMgVVRDIGFuZCB0aGVuXG4gICAgICAvLyBvZmZzZXQgYWNjb3JkaW5nIHRvIHRoZSBzcGVjaWZpZWQgdGltZSB6b25lLlxuICAgICAgaWYgKFwiWlwiIGluIGQpIHtcbiAgICAgICAgZC5IICs9IGQuWiAvIDEwMCB8IDA7XG4gICAgICAgIGQuTSArPSBkLlogJSAxMDA7XG4gICAgICAgIHJldHVybiB1dGNEYXRlKGQpO1xuICAgICAgfVxuXG4gICAgICAvLyBPdGhlcndpc2UsIGFsbCBmaWVsZHMgYXJlIGluIGxvY2FsIHRpbWUuXG4gICAgICByZXR1cm4gbG9jYWxEYXRlKGQpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZVNwZWNpZmllcihkLCBzcGVjaWZpZXIsIHN0cmluZywgaikge1xuICAgIHZhciBpID0gMCxcbiAgICAgICAgbiA9IHNwZWNpZmllci5sZW5ndGgsXG4gICAgICAgIG0gPSBzdHJpbmcubGVuZ3RoLFxuICAgICAgICBjLFxuICAgICAgICBwYXJzZTtcblxuICAgIHdoaWxlIChpIDwgbikge1xuICAgICAgaWYgKGogPj0gbSkgcmV0dXJuIC0xO1xuICAgICAgYyA9IHNwZWNpZmllci5jaGFyQ29kZUF0KGkrKyk7XG4gICAgICBpZiAoYyA9PT0gMzcpIHtcbiAgICAgICAgYyA9IHNwZWNpZmllci5jaGFyQXQoaSsrKTtcbiAgICAgICAgcGFyc2UgPSBwYXJzZXNbYyBpbiBwYWRzID8gc3BlY2lmaWVyLmNoYXJBdChpKyspIDogY107XG4gICAgICAgIGlmICghcGFyc2UgfHwgKChqID0gcGFyc2UoZCwgc3RyaW5nLCBqKSkgPCAwKSkgcmV0dXJuIC0xO1xuICAgICAgfSBlbHNlIGlmIChjICE9IHN0cmluZy5jaGFyQ29kZUF0KGorKykpIHtcbiAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBqO1xuICB9XG5cbiAgZnVuY3Rpb24gcGFyc2VQZXJpb2QoZCwgc3RyaW5nLCBpKSB7XG4gICAgdmFyIG4gPSBwZXJpb2RSZS5leGVjKHN0cmluZy5zbGljZShpKSk7XG4gICAgcmV0dXJuIG4gPyAoZC5wID0gcGVyaW9kTG9va3VwW25bMF0udG9Mb3dlckNhc2UoKV0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhcnNlU2hvcnRXZWVrZGF5KGQsIHN0cmluZywgaSkge1xuICAgIHZhciBuID0gc2hvcnRXZWVrZGF5UmUuZXhlYyhzdHJpbmcuc2xpY2UoaSkpO1xuICAgIHJldHVybiBuID8gKGQudyA9IHNob3J0V2Vla2RheUxvb2t1cFtuWzBdLnRvTG93ZXJDYXNlKCldLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZVdlZWtkYXkoZCwgc3RyaW5nLCBpKSB7XG4gICAgdmFyIG4gPSB3ZWVrZGF5UmUuZXhlYyhzdHJpbmcuc2xpY2UoaSkpO1xuICAgIHJldHVybiBuID8gKGQudyA9IHdlZWtkYXlMb29rdXBbblswXS50b0xvd2VyQ2FzZSgpXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG5cbiAgZnVuY3Rpb24gcGFyc2VTaG9ydE1vbnRoKGQsIHN0cmluZywgaSkge1xuICAgIHZhciBuID0gc2hvcnRNb250aFJlLmV4ZWMoc3RyaW5nLnNsaWNlKGkpKTtcbiAgICByZXR1cm4gbiA/IChkLm0gPSBzaG9ydE1vbnRoTG9va3VwW25bMF0udG9Mb3dlckNhc2UoKV0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhcnNlTW9udGgoZCwgc3RyaW5nLCBpKSB7XG4gICAgdmFyIG4gPSBtb250aFJlLmV4ZWMoc3RyaW5nLnNsaWNlKGkpKTtcbiAgICByZXR1cm4gbiA/IChkLm0gPSBtb250aExvb2t1cFtuWzBdLnRvTG93ZXJDYXNlKCldLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZUxvY2FsZURhdGVUaW1lKGQsIHN0cmluZywgaSkge1xuICAgIHJldHVybiBwYXJzZVNwZWNpZmllcihkLCBsb2NhbGVfZGF0ZVRpbWUsIHN0cmluZywgaSk7XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZUxvY2FsZURhdGUoZCwgc3RyaW5nLCBpKSB7XG4gICAgcmV0dXJuIHBhcnNlU3BlY2lmaWVyKGQsIGxvY2FsZV9kYXRlLCBzdHJpbmcsIGkpO1xuICB9XG5cbiAgZnVuY3Rpb24gcGFyc2VMb2NhbGVUaW1lKGQsIHN0cmluZywgaSkge1xuICAgIHJldHVybiBwYXJzZVNwZWNpZmllcihkLCBsb2NhbGVfdGltZSwgc3RyaW5nLCBpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFNob3J0V2Vla2RheShkKSB7XG4gICAgcmV0dXJuIGxvY2FsZV9zaG9ydFdlZWtkYXlzW2QuZ2V0RGF5KCldO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0V2Vla2RheShkKSB7XG4gICAgcmV0dXJuIGxvY2FsZV93ZWVrZGF5c1tkLmdldERheSgpXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFNob3J0TW9udGgoZCkge1xuICAgIHJldHVybiBsb2NhbGVfc2hvcnRNb250aHNbZC5nZXRNb250aCgpXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdE1vbnRoKGQpIHtcbiAgICByZXR1cm4gbG9jYWxlX21vbnRoc1tkLmdldE1vbnRoKCldO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0UGVyaW9kKGQpIHtcbiAgICByZXR1cm4gbG9jYWxlX3BlcmlvZHNbKyhkLmdldEhvdXJzKCkgPj0gMTIpXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFF1YXJ0ZXIoZCkge1xuICAgIHJldHVybiAxICsgfn4oZC5nZXRNb250aCgpIC8gMyk7XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXRVVENTaG9ydFdlZWtkYXkoZCkge1xuICAgIHJldHVybiBsb2NhbGVfc2hvcnRXZWVrZGF5c1tkLmdldFVUQ0RheSgpXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFVUQ1dlZWtkYXkoZCkge1xuICAgIHJldHVybiBsb2NhbGVfd2Vla2RheXNbZC5nZXRVVENEYXkoKV07XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXRVVENTaG9ydE1vbnRoKGQpIHtcbiAgICByZXR1cm4gbG9jYWxlX3Nob3J0TW9udGhzW2QuZ2V0VVRDTW9udGgoKV07XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXRVVENNb250aChkKSB7XG4gICAgcmV0dXJuIGxvY2FsZV9tb250aHNbZC5nZXRVVENNb250aCgpXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFVUQ1BlcmlvZChkKSB7XG4gICAgcmV0dXJuIGxvY2FsZV9wZXJpb2RzWysoZC5nZXRVVENIb3VycygpID49IDEyKV07XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXRVVENRdWFydGVyKGQpIHtcbiAgICByZXR1cm4gMSArIH5+KGQuZ2V0VVRDTW9udGgoKSAvIDMpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBmb3JtYXQ6IGZ1bmN0aW9uKHNwZWNpZmllcikge1xuICAgICAgdmFyIGYgPSBuZXdGb3JtYXQoc3BlY2lmaWVyICs9IFwiXCIsIGZvcm1hdHMpO1xuICAgICAgZi50b1N0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gc3BlY2lmaWVyOyB9O1xuICAgICAgcmV0dXJuIGY7XG4gICAgfSxcbiAgICBwYXJzZTogZnVuY3Rpb24oc3BlY2lmaWVyKSB7XG4gICAgICB2YXIgcCA9IG5ld1BhcnNlKHNwZWNpZmllciArPSBcIlwiLCBmYWxzZSk7XG4gICAgICBwLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7IHJldHVybiBzcGVjaWZpZXI7IH07XG4gICAgICByZXR1cm4gcDtcbiAgICB9LFxuICAgIHV0Y0Zvcm1hdDogZnVuY3Rpb24oc3BlY2lmaWVyKSB7XG4gICAgICB2YXIgZiA9IG5ld0Zvcm1hdChzcGVjaWZpZXIgKz0gXCJcIiwgdXRjRm9ybWF0cyk7XG4gICAgICBmLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7IHJldHVybiBzcGVjaWZpZXI7IH07XG4gICAgICByZXR1cm4gZjtcbiAgICB9LFxuICAgIHV0Y1BhcnNlOiBmdW5jdGlvbihzcGVjaWZpZXIpIHtcbiAgICAgIHZhciBwID0gbmV3UGFyc2Uoc3BlY2lmaWVyICs9IFwiXCIsIHRydWUpO1xuICAgICAgcC50b1N0cmluZyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gc3BlY2lmaWVyOyB9O1xuICAgICAgcmV0dXJuIHA7XG4gICAgfVxuICB9O1xufVxuXG52YXIgcGFkcyA9IHtcIi1cIjogXCJcIiwgXCJfXCI6IFwiIFwiLCBcIjBcIjogXCIwXCJ9LFxuICAgIG51bWJlclJlID0gL15cXHMqXFxkKy8sIC8vIG5vdGU6IGlnbm9yZXMgbmV4dCBkaXJlY3RpdmVcbiAgICBwZXJjZW50UmUgPSAvXiUvLFxuICAgIHJlcXVvdGVSZSA9IC9bXFxcXF4kKis/fFtcXF0oKS57fV0vZztcblxuZnVuY3Rpb24gcGFkKHZhbHVlLCBmaWxsLCB3aWR0aCkge1xuICB2YXIgc2lnbiA9IHZhbHVlIDwgMCA/IFwiLVwiIDogXCJcIixcbiAgICAgIHN0cmluZyA9IChzaWduID8gLXZhbHVlIDogdmFsdWUpICsgXCJcIixcbiAgICAgIGxlbmd0aCA9IHN0cmluZy5sZW5ndGg7XG4gIHJldHVybiBzaWduICsgKGxlbmd0aCA8IHdpZHRoID8gbmV3IEFycmF5KHdpZHRoIC0gbGVuZ3RoICsgMSkuam9pbihmaWxsKSArIHN0cmluZyA6IHN0cmluZyk7XG59XG5cbmZ1bmN0aW9uIHJlcXVvdGUocykge1xuICByZXR1cm4gcy5yZXBsYWNlKHJlcXVvdGVSZSwgXCJcXFxcJCZcIik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFJlKG5hbWVzKSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKFwiXig/OlwiICsgbmFtZXMubWFwKHJlcXVvdGUpLmpvaW4oXCJ8XCIpICsgXCIpXCIsIFwiaVwiKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0TG9va3VwKG5hbWVzKSB7XG4gIHZhciBtYXAgPSB7fSwgaSA9IC0xLCBuID0gbmFtZXMubGVuZ3RoO1xuICB3aGlsZSAoKytpIDwgbikgbWFwW25hbWVzW2ldLnRvTG93ZXJDYXNlKCldID0gaTtcbiAgcmV0dXJuIG1hcDtcbn1cblxuZnVuY3Rpb24gcGFyc2VXZWVrZGF5TnVtYmVyU3VuZGF5KGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAxKSk7XG4gIHJldHVybiBuID8gKGQudyA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlV2Vla2RheU51bWJlck1vbmRheShkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMSkpO1xuICByZXR1cm4gbiA/IChkLnUgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZVdlZWtOdW1iZXJTdW5kYXkoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDIpKTtcbiAgcmV0dXJuIG4gPyAoZC5VID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VXZWVrTnVtYmVySVNPKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gIHJldHVybiBuID8gKGQuViA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlV2Vla051bWJlck1vbmRheShkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICByZXR1cm4gbiA/IChkLlcgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZUZ1bGxZZWFyKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyA0KSk7XG4gIHJldHVybiBuID8gKGQueSA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlWWVhcihkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICByZXR1cm4gbiA/IChkLnkgPSArblswXSArICgrblswXSA+IDY4ID8gMTkwMCA6IDIwMDApLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlWm9uZShkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSAvXihaKXwoWystXVxcZFxcZCkoPzo6PyhcXGRcXGQpKT8vLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyA2KSk7XG4gIHJldHVybiBuID8gKGQuWiA9IG5bMV0gPyAwIDogLShuWzJdICsgKG5bM10gfHwgXCIwMFwiKSksIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VRdWFydGVyKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAxKSk7XG4gIHJldHVybiBuID8gKGQucSA9IG5bMF0gKiAzIC0gMywgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZU1vbnRoTnVtYmVyKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gIHJldHVybiBuID8gKGQubSA9IG5bMF0gLSAxLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlRGF5T2ZNb250aChkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICByZXR1cm4gbiA/IChkLmQgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZURheU9mWWVhcihkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMykpO1xuICByZXR1cm4gbiA/IChkLm0gPSAwLCBkLmQgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZUhvdXIyNChkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICByZXR1cm4gbiA/IChkLkggPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZU1pbnV0ZXMoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDIpKTtcbiAgcmV0dXJuIG4gPyAoZC5NID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VTZWNvbmRzKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gIHJldHVybiBuID8gKGQuUyA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlTWlsbGlzZWNvbmRzKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAzKSk7XG4gIHJldHVybiBuID8gKGQuTCA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlTWljcm9zZWNvbmRzKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyA2KSk7XG4gIHJldHVybiBuID8gKGQuTCA9IE1hdGguZmxvb3IoblswXSAvIDEwMDApLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlTGl0ZXJhbFBlcmNlbnQoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gcGVyY2VudFJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAxKSk7XG4gIHJldHVybiBuID8gaSArIG5bMF0ubGVuZ3RoIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlVW5peFRpbWVzdGFtcChkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpKSk7XG4gIHJldHVybiBuID8gKGQuUSA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlVW5peFRpbWVzdGFtcFNlY29uZHMoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSkpO1xuICByZXR1cm4gbiA/IChkLnMgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBmb3JtYXREYXlPZk1vbnRoKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldERhdGUoKSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdEhvdXIyNChkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRIb3VycygpLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0SG91cjEyKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldEhvdXJzKCkgJSAxMiB8fCAxMiwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdERheU9mWWVhcihkLCBwKSB7XG4gIHJldHVybiBwYWQoMSArIHRpbWVEYXkuY291bnQodGltZVllYXIoZCksIGQpLCBwLCAzKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0TWlsbGlzZWNvbmRzKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldE1pbGxpc2Vjb25kcygpLCBwLCAzKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0TWljcm9zZWNvbmRzKGQsIHApIHtcbiAgcmV0dXJuIGZvcm1hdE1pbGxpc2Vjb25kcyhkLCBwKSArIFwiMDAwXCI7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdE1vbnRoTnVtYmVyKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldE1vbnRoKCkgKyAxLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0TWludXRlcyhkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRNaW51dGVzKCksIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRTZWNvbmRzKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldFNlY29uZHMoKSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFdlZWtkYXlOdW1iZXJNb25kYXkoZCkge1xuICB2YXIgZGF5ID0gZC5nZXREYXkoKTtcbiAgcmV0dXJuIGRheSA9PT0gMCA/IDcgOiBkYXk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFdlZWtOdW1iZXJTdW5kYXkoZCwgcCkge1xuICByZXR1cm4gcGFkKHRpbWVTdW5kYXkuY291bnQodGltZVllYXIoZCkgLSAxLCBkKSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFdlZWtOdW1iZXJJU08oZCwgcCkge1xuICB2YXIgZGF5ID0gZC5nZXREYXkoKTtcbiAgZCA9IChkYXkgPj0gNCB8fCBkYXkgPT09IDApID8gdGltZVRodXJzZGF5KGQpIDogdGltZVRodXJzZGF5LmNlaWwoZCk7XG4gIHJldHVybiBwYWQodGltZVRodXJzZGF5LmNvdW50KHRpbWVZZWFyKGQpLCBkKSArICh0aW1lWWVhcihkKS5nZXREYXkoKSA9PT0gNCksIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRXZWVrZGF5TnVtYmVyU3VuZGF5KGQpIHtcbiAgcmV0dXJuIGQuZ2V0RGF5KCk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFdlZWtOdW1iZXJNb25kYXkoZCwgcCkge1xuICByZXR1cm4gcGFkKHRpbWVNb25kYXkuY291bnQodGltZVllYXIoZCkgLSAxLCBkKSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFllYXIoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0RnVsbFllYXIoKSAlIDEwMCwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdEZ1bGxZZWFyKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldEZ1bGxZZWFyKCkgJSAxMDAwMCwgcCwgNCk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFpvbmUoZCkge1xuICB2YXIgeiA9IGQuZ2V0VGltZXpvbmVPZmZzZXQoKTtcbiAgcmV0dXJuICh6ID4gMCA/IFwiLVwiIDogKHogKj0gLTEsIFwiK1wiKSlcbiAgICAgICsgcGFkKHogLyA2MCB8IDAsIFwiMFwiLCAyKVxuICAgICAgKyBwYWQoeiAlIDYwLCBcIjBcIiwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ0RheU9mTW9udGgoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0VVRDRGF0ZSgpLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDSG91cjI0KGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldFVUQ0hvdXJzKCksIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENIb3VyMTIoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0VVRDSG91cnMoKSAlIDEyIHx8IDEyLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDRGF5T2ZZZWFyKGQsIHApIHtcbiAgcmV0dXJuIHBhZCgxICsgdXRjRGF5LmNvdW50KHV0Y1llYXIoZCksIGQpLCBwLCAzKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDTWlsbGlzZWNvbmRzKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldFVUQ01pbGxpc2Vjb25kcygpLCBwLCAzKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDTWljcm9zZWNvbmRzKGQsIHApIHtcbiAgcmV0dXJuIGZvcm1hdFVUQ01pbGxpc2Vjb25kcyhkLCBwKSArIFwiMDAwXCI7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ01vbnRoTnVtYmVyKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldFVUQ01vbnRoKCkgKyAxLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDTWludXRlcyhkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRVVENNaW51dGVzKCksIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENTZWNvbmRzKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldFVUQ1NlY29uZHMoKSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ1dlZWtkYXlOdW1iZXJNb25kYXkoZCkge1xuICB2YXIgZG93ID0gZC5nZXRVVENEYXkoKTtcbiAgcmV0dXJuIGRvdyA9PT0gMCA/IDcgOiBkb3c7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ1dlZWtOdW1iZXJTdW5kYXkoZCwgcCkge1xuICByZXR1cm4gcGFkKHV0Y1N1bmRheS5jb3VudCh1dGNZZWFyKGQpIC0gMSwgZCksIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENXZWVrTnVtYmVySVNPKGQsIHApIHtcbiAgdmFyIGRheSA9IGQuZ2V0VVRDRGF5KCk7XG4gIGQgPSAoZGF5ID49IDQgfHwgZGF5ID09PSAwKSA/IHV0Y1RodXJzZGF5KGQpIDogdXRjVGh1cnNkYXkuY2VpbChkKTtcbiAgcmV0dXJuIHBhZCh1dGNUaHVyc2RheS5jb3VudCh1dGNZZWFyKGQpLCBkKSArICh1dGNZZWFyKGQpLmdldFVUQ0RheSgpID09PSA0KSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ1dlZWtkYXlOdW1iZXJTdW5kYXkoZCkge1xuICByZXR1cm4gZC5nZXRVVENEYXkoKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDV2Vla051bWJlck1vbmRheShkLCBwKSB7XG4gIHJldHVybiBwYWQodXRjTW9uZGF5LmNvdW50KHV0Y1llYXIoZCkgLSAxLCBkKSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ1llYXIoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0VVRDRnVsbFllYXIoKSAlIDEwMCwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ0Z1bGxZZWFyKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldFVUQ0Z1bGxZZWFyKCkgJSAxMDAwMCwgcCwgNCk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ1pvbmUoKSB7XG4gIHJldHVybiBcIiswMDAwXCI7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdExpdGVyYWxQZXJjZW50KCkge1xuICByZXR1cm4gXCIlXCI7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVuaXhUaW1lc3RhbXAoZCkge1xuICByZXR1cm4gK2Q7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVuaXhUaW1lc3RhbXBTZWNvbmRzKGQpIHtcbiAgcmV0dXJuIE1hdGguZmxvb3IoK2QgLyAxMDAwKTtcbn1cbiIsImltcG9ydCBmb3JtYXRMb2NhbGUgZnJvbSBcIi4vbG9jYWxlLmpzXCI7XG5cbnZhciBsb2NhbGU7XG5leHBvcnQgdmFyIHRpbWVGb3JtYXQ7XG5leHBvcnQgdmFyIHRpbWVQYXJzZTtcbmV4cG9ydCB2YXIgdXRjRm9ybWF0O1xuZXhwb3J0IHZhciB1dGNQYXJzZTtcblxuZGVmYXVsdExvY2FsZSh7XG4gIGRhdGVUaW1lOiBcIiV4LCAlWFwiLFxuICBkYXRlOiBcIiUtbS8lLWQvJVlcIixcbiAgdGltZTogXCIlLUk6JU06JVMgJXBcIixcbiAgcGVyaW9kczogW1wiQU1cIiwgXCJQTVwiXSxcbiAgZGF5czogW1wiU3VuZGF5XCIsIFwiTW9uZGF5XCIsIFwiVHVlc2RheVwiLCBcIldlZG5lc2RheVwiLCBcIlRodXJzZGF5XCIsIFwiRnJpZGF5XCIsIFwiU2F0dXJkYXlcIl0sXG4gIHNob3J0RGF5czogW1wiU3VuXCIsIFwiTW9uXCIsIFwiVHVlXCIsIFwiV2VkXCIsIFwiVGh1XCIsIFwiRnJpXCIsIFwiU2F0XCJdLFxuICBtb250aHM6IFtcIkphbnVhcnlcIiwgXCJGZWJydWFyeVwiLCBcIk1hcmNoXCIsIFwiQXByaWxcIiwgXCJNYXlcIiwgXCJKdW5lXCIsIFwiSnVseVwiLCBcIkF1Z3VzdFwiLCBcIlNlcHRlbWJlclwiLCBcIk9jdG9iZXJcIiwgXCJOb3ZlbWJlclwiLCBcIkRlY2VtYmVyXCJdLFxuICBzaG9ydE1vbnRoczogW1wiSmFuXCIsIFwiRmViXCIsIFwiTWFyXCIsIFwiQXByXCIsIFwiTWF5XCIsIFwiSnVuXCIsIFwiSnVsXCIsIFwiQXVnXCIsIFwiU2VwXCIsIFwiT2N0XCIsIFwiTm92XCIsIFwiRGVjXCJdXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGVmYXVsdExvY2FsZShkZWZpbml0aW9uKSB7XG4gIGxvY2FsZSA9IGZvcm1hdExvY2FsZShkZWZpbml0aW9uKTtcbiAgdGltZUZvcm1hdCA9IGxvY2FsZS5mb3JtYXQ7XG4gIHRpbWVQYXJzZSA9IGxvY2FsZS5wYXJzZTtcbiAgdXRjRm9ybWF0ID0gbG9jYWxlLnV0Y0Zvcm1hdDtcbiAgdXRjUGFyc2UgPSBsb2NhbGUudXRjUGFyc2U7XG4gIHJldHVybiBsb2NhbGU7XG59XG4iLCJpbXBvcnQge2Jpc2VjdG9yLCB0aWNrU3RlcH0gZnJvbSBcImQzLWFycmF5XCI7XG5pbXBvcnQge3RpbWVZZWFyLCB0aW1lTW9udGgsIHRpbWVXZWVrLCB0aW1lRGF5LCB0aW1lSG91ciwgdGltZU1pbnV0ZSwgdGltZVNlY29uZCwgdGltZU1pbGxpc2Vjb25kfSBmcm9tIFwiZDMtdGltZVwiO1xuaW1wb3J0IHt0aW1lRm9ybWF0fSBmcm9tIFwiZDMtdGltZS1mb3JtYXRcIjtcbmltcG9ydCB7bWFwfSBmcm9tIFwiLi9hcnJheVwiO1xuaW1wb3J0IGNvbnRpbnVvdXMsIHtjb3B5LCBpZGVudGl0eX0gZnJvbSBcIi4vY29udGludW91c1wiO1xuaW1wb3J0IHtpbml0UmFuZ2V9IGZyb20gXCIuL2luaXRcIjtcbmltcG9ydCBuaWNlIGZyb20gXCIuL25pY2VcIjtcblxudmFyIGR1cmF0aW9uU2Vjb25kID0gMTAwMCxcbiAgICBkdXJhdGlvbk1pbnV0ZSA9IGR1cmF0aW9uU2Vjb25kICogNjAsXG4gICAgZHVyYXRpb25Ib3VyID0gZHVyYXRpb25NaW51dGUgKiA2MCxcbiAgICBkdXJhdGlvbkRheSA9IGR1cmF0aW9uSG91ciAqIDI0LFxuICAgIGR1cmF0aW9uV2VlayA9IGR1cmF0aW9uRGF5ICogNyxcbiAgICBkdXJhdGlvbk1vbnRoID0gZHVyYXRpb25EYXkgKiAzMCxcbiAgICBkdXJhdGlvblllYXIgPSBkdXJhdGlvbkRheSAqIDM2NTtcblxuZnVuY3Rpb24gZGF0ZSh0KSB7XG4gIHJldHVybiBuZXcgRGF0ZSh0KTtcbn1cblxuZnVuY3Rpb24gbnVtYmVyKHQpIHtcbiAgcmV0dXJuIHQgaW5zdGFuY2VvZiBEYXRlID8gK3QgOiArbmV3IERhdGUoK3QpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2FsZW5kYXIoeWVhciwgbW9udGgsIHdlZWssIGRheSwgaG91ciwgbWludXRlLCBzZWNvbmQsIG1pbGxpc2Vjb25kLCBmb3JtYXQpIHtcbiAgdmFyIHNjYWxlID0gY29udGludW91cyhpZGVudGl0eSwgaWRlbnRpdHkpLFxuICAgICAgaW52ZXJ0ID0gc2NhbGUuaW52ZXJ0LFxuICAgICAgZG9tYWluID0gc2NhbGUuZG9tYWluO1xuXG4gIHZhciBmb3JtYXRNaWxsaXNlY29uZCA9IGZvcm1hdChcIi4lTFwiKSxcbiAgICAgIGZvcm1hdFNlY29uZCA9IGZvcm1hdChcIjolU1wiKSxcbiAgICAgIGZvcm1hdE1pbnV0ZSA9IGZvcm1hdChcIiVJOiVNXCIpLFxuICAgICAgZm9ybWF0SG91ciA9IGZvcm1hdChcIiVJICVwXCIpLFxuICAgICAgZm9ybWF0RGF5ID0gZm9ybWF0KFwiJWEgJWRcIiksXG4gICAgICBmb3JtYXRXZWVrID0gZm9ybWF0KFwiJWIgJWRcIiksXG4gICAgICBmb3JtYXRNb250aCA9IGZvcm1hdChcIiVCXCIpLFxuICAgICAgZm9ybWF0WWVhciA9IGZvcm1hdChcIiVZXCIpO1xuXG4gIHZhciB0aWNrSW50ZXJ2YWxzID0gW1xuICAgIFtzZWNvbmQsICAxLCAgICAgIGR1cmF0aW9uU2Vjb25kXSxcbiAgICBbc2Vjb25kLCAgNSwgIDUgKiBkdXJhdGlvblNlY29uZF0sXG4gICAgW3NlY29uZCwgMTUsIDE1ICogZHVyYXRpb25TZWNvbmRdLFxuICAgIFtzZWNvbmQsIDMwLCAzMCAqIGR1cmF0aW9uU2Vjb25kXSxcbiAgICBbbWludXRlLCAgMSwgICAgICBkdXJhdGlvbk1pbnV0ZV0sXG4gICAgW21pbnV0ZSwgIDUsICA1ICogZHVyYXRpb25NaW51dGVdLFxuICAgIFttaW51dGUsIDE1LCAxNSAqIGR1cmF0aW9uTWludXRlXSxcbiAgICBbbWludXRlLCAzMCwgMzAgKiBkdXJhdGlvbk1pbnV0ZV0sXG4gICAgWyAgaG91ciwgIDEsICAgICAgZHVyYXRpb25Ib3VyICBdLFxuICAgIFsgIGhvdXIsICAzLCAgMyAqIGR1cmF0aW9uSG91ciAgXSxcbiAgICBbICBob3VyLCAgNiwgIDYgKiBkdXJhdGlvbkhvdXIgIF0sXG4gICAgWyAgaG91ciwgMTIsIDEyICogZHVyYXRpb25Ib3VyICBdLFxuICAgIFsgICBkYXksICAxLCAgICAgIGR1cmF0aW9uRGF5ICAgXSxcbiAgICBbICAgZGF5LCAgMiwgIDIgKiBkdXJhdGlvbkRheSAgIF0sXG4gICAgWyAgd2VlaywgIDEsICAgICAgZHVyYXRpb25XZWVrICBdLFxuICAgIFsgbW9udGgsICAxLCAgICAgIGR1cmF0aW9uTW9udGggXSxcbiAgICBbIG1vbnRoLCAgMywgIDMgKiBkdXJhdGlvbk1vbnRoIF0sXG4gICAgWyAgeWVhciwgIDEsICAgICAgZHVyYXRpb25ZZWFyICBdXG4gIF07XG5cbiAgZnVuY3Rpb24gdGlja0Zvcm1hdChkYXRlKSB7XG4gICAgcmV0dXJuIChzZWNvbmQoZGF0ZSkgPCBkYXRlID8gZm9ybWF0TWlsbGlzZWNvbmRcbiAgICAgICAgOiBtaW51dGUoZGF0ZSkgPCBkYXRlID8gZm9ybWF0U2Vjb25kXG4gICAgICAgIDogaG91cihkYXRlKSA8IGRhdGUgPyBmb3JtYXRNaW51dGVcbiAgICAgICAgOiBkYXkoZGF0ZSkgPCBkYXRlID8gZm9ybWF0SG91clxuICAgICAgICA6IG1vbnRoKGRhdGUpIDwgZGF0ZSA/ICh3ZWVrKGRhdGUpIDwgZGF0ZSA/IGZvcm1hdERheSA6IGZvcm1hdFdlZWspXG4gICAgICAgIDogeWVhcihkYXRlKSA8IGRhdGUgPyBmb3JtYXRNb250aFxuICAgICAgICA6IGZvcm1hdFllYXIpKGRhdGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gdGlja0ludGVydmFsKGludGVydmFsLCBzdGFydCwgc3RvcCwgc3RlcCkge1xuICAgIGlmIChpbnRlcnZhbCA9PSBudWxsKSBpbnRlcnZhbCA9IDEwO1xuXG4gICAgLy8gSWYgYSBkZXNpcmVkIHRpY2sgY291bnQgaXMgc3BlY2lmaWVkLCBwaWNrIGEgcmVhc29uYWJsZSB0aWNrIGludGVydmFsXG4gICAgLy8gYmFzZWQgb24gdGhlIGV4dGVudCBvZiB0aGUgZG9tYWluIGFuZCBhIHJvdWdoIGVzdGltYXRlIG9mIHRpY2sgc2l6ZS5cbiAgICAvLyBPdGhlcndpc2UsIGFzc3VtZSBpbnRlcnZhbCBpcyBhbHJlYWR5IGEgdGltZSBpbnRlcnZhbCBhbmQgdXNlIGl0LlxuICAgIGlmICh0eXBlb2YgaW50ZXJ2YWwgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgIHZhciB0YXJnZXQgPSBNYXRoLmFicyhzdG9wIC0gc3RhcnQpIC8gaW50ZXJ2YWwsXG4gICAgICAgICAgaSA9IGJpc2VjdG9yKGZ1bmN0aW9uKGkpIHsgcmV0dXJuIGlbMl07IH0pLnJpZ2h0KHRpY2tJbnRlcnZhbHMsIHRhcmdldCk7XG4gICAgICBpZiAoaSA9PT0gdGlja0ludGVydmFscy5sZW5ndGgpIHtcbiAgICAgICAgc3RlcCA9IHRpY2tTdGVwKHN0YXJ0IC8gZHVyYXRpb25ZZWFyLCBzdG9wIC8gZHVyYXRpb25ZZWFyLCBpbnRlcnZhbCk7XG4gICAgICAgIGludGVydmFsID0geWVhcjtcbiAgICAgIH0gZWxzZSBpZiAoaSkge1xuICAgICAgICBpID0gdGlja0ludGVydmFsc1t0YXJnZXQgLyB0aWNrSW50ZXJ2YWxzW2kgLSAxXVsyXSA8IHRpY2tJbnRlcnZhbHNbaV1bMl0gLyB0YXJnZXQgPyBpIC0gMSA6IGldO1xuICAgICAgICBzdGVwID0gaVsxXTtcbiAgICAgICAgaW50ZXJ2YWwgPSBpWzBdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3RlcCA9IE1hdGgubWF4KHRpY2tTdGVwKHN0YXJ0LCBzdG9wLCBpbnRlcnZhbCksIDEpO1xuICAgICAgICBpbnRlcnZhbCA9IG1pbGxpc2Vjb25kO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBzdGVwID09IG51bGwgPyBpbnRlcnZhbCA6IGludGVydmFsLmV2ZXJ5KHN0ZXApO1xuICB9XG5cbiAgc2NhbGUuaW52ZXJ0ID0gZnVuY3Rpb24oeSkge1xuICAgIHJldHVybiBuZXcgRGF0ZShpbnZlcnQoeSkpO1xuICB9O1xuXG4gIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IGRvbWFpbihtYXAuY2FsbChfLCBudW1iZXIpKSA6IGRvbWFpbigpLm1hcChkYXRlKTtcbiAgfTtcblxuICBzY2FsZS50aWNrcyA9IGZ1bmN0aW9uKGludGVydmFsLCBzdGVwKSB7XG4gICAgdmFyIGQgPSBkb21haW4oKSxcbiAgICAgICAgdDAgPSBkWzBdLFxuICAgICAgICB0MSA9IGRbZC5sZW5ndGggLSAxXSxcbiAgICAgICAgciA9IHQxIDwgdDAsXG4gICAgICAgIHQ7XG4gICAgaWYgKHIpIHQgPSB0MCwgdDAgPSB0MSwgdDEgPSB0O1xuICAgIHQgPSB0aWNrSW50ZXJ2YWwoaW50ZXJ2YWwsIHQwLCB0MSwgc3RlcCk7XG4gICAgdCA9IHQgPyB0LnJhbmdlKHQwLCB0MSArIDEpIDogW107IC8vIGluY2x1c2l2ZSBzdG9wXG4gICAgcmV0dXJuIHIgPyB0LnJldmVyc2UoKSA6IHQ7XG4gIH07XG5cbiAgc2NhbGUudGlja0Zvcm1hdCA9IGZ1bmN0aW9uKGNvdW50LCBzcGVjaWZpZXIpIHtcbiAgICByZXR1cm4gc3BlY2lmaWVyID09IG51bGwgPyB0aWNrRm9ybWF0IDogZm9ybWF0KHNwZWNpZmllcik7XG4gIH07XG5cbiAgc2NhbGUubmljZSA9IGZ1bmN0aW9uKGludGVydmFsLCBzdGVwKSB7XG4gICAgdmFyIGQgPSBkb21haW4oKTtcbiAgICByZXR1cm4gKGludGVydmFsID0gdGlja0ludGVydmFsKGludGVydmFsLCBkWzBdLCBkW2QubGVuZ3RoIC0gMV0sIHN0ZXApKVxuICAgICAgICA/IGRvbWFpbihuaWNlKGQsIGludGVydmFsKSlcbiAgICAgICAgOiBzY2FsZTtcbiAgfTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvcHkoc2NhbGUsIGNhbGVuZGFyKHllYXIsIG1vbnRoLCB3ZWVrLCBkYXksIGhvdXIsIG1pbnV0ZSwgc2Vjb25kLCBtaWxsaXNlY29uZCwgZm9ybWF0KSk7XG4gIH07XG5cbiAgcmV0dXJuIHNjYWxlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGluaXRSYW5nZS5hcHBseShjYWxlbmRhcih0aW1lWWVhciwgdGltZU1vbnRoLCB0aW1lV2VlaywgdGltZURheSwgdGltZUhvdXIsIHRpbWVNaW51dGUsIHRpbWVTZWNvbmQsIHRpbWVNaWxsaXNlY29uZCwgdGltZUZvcm1hdCkuZG9tYWluKFtuZXcgRGF0ZSgyMDAwLCAwLCAxKSwgbmV3IERhdGUoMjAwMCwgMCwgMildKSwgYXJndW1lbnRzKTtcbn1cbiIsImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbC5qc1wiO1xuXG52YXIgdXRjTW9udGggPSBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0VVRDRGF0ZSgxKTtcbiAgZGF0ZS5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRVVENNb250aChkYXRlLmdldFVUQ01vbnRoKCkgKyBzdGVwKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIGVuZC5nZXRVVENNb250aCgpIC0gc3RhcnQuZ2V0VVRDTW9udGgoKSArIChlbmQuZ2V0VVRDRnVsbFllYXIoKSAtIHN0YXJ0LmdldFVUQ0Z1bGxZZWFyKCkpICogMTI7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldFVUQ01vbnRoKCk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgdXRjTW9udGg7XG5leHBvcnQgdmFyIHV0Y01vbnRocyA9IHV0Y01vbnRoLnJhbmdlO1xuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsLmpzXCI7XG5pbXBvcnQge2R1cmF0aW9uSG91cn0gZnJvbSBcIi4vZHVyYXRpb24uanNcIjtcblxudmFyIHV0Y0hvdXIgPSBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0VVRDTWludXRlcygwLCAwLCAwKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRUaW1lKCtkYXRlICsgc3RlcCAqIGR1cmF0aW9uSG91cik7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiAoZW5kIC0gc3RhcnQpIC8gZHVyYXRpb25Ib3VyO1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRVVENIb3VycygpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHV0Y0hvdXI7XG5leHBvcnQgdmFyIHV0Y0hvdXJzID0gdXRjSG91ci5yYW5nZTtcbiIsImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbC5qc1wiO1xuaW1wb3J0IHtkdXJhdGlvbk1pbnV0ZX0gZnJvbSBcIi4vZHVyYXRpb24uanNcIjtcblxudmFyIHV0Y01pbnV0ZSA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRVVENTZWNvbmRzKDAsIDApO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldFRpbWUoK2RhdGUgKyBzdGVwICogZHVyYXRpb25NaW51dGUpO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGR1cmF0aW9uTWludXRlO1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRVVENNaW51dGVzKCk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgdXRjTWludXRlO1xuZXhwb3J0IHZhciB1dGNNaW51dGVzID0gdXRjTWludXRlLnJhbmdlO1xuIiwiaW1wb3J0IHtjYWxlbmRhcn0gZnJvbSBcIi4vdGltZVwiO1xuaW1wb3J0IHt1dGNGb3JtYXR9IGZyb20gXCJkMy10aW1lLWZvcm1hdFwiO1xuaW1wb3J0IHt1dGNZZWFyLCB1dGNNb250aCwgdXRjV2VlaywgdXRjRGF5LCB1dGNIb3VyLCB1dGNNaW51dGUsIHV0Y1NlY29uZCwgdXRjTWlsbGlzZWNvbmR9IGZyb20gXCJkMy10aW1lXCI7XG5pbXBvcnQge2luaXRSYW5nZX0gZnJvbSBcIi4vaW5pdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGluaXRSYW5nZS5hcHBseShjYWxlbmRhcih1dGNZZWFyLCB1dGNNb250aCwgdXRjV2VlaywgdXRjRGF5LCB1dGNIb3VyLCB1dGNNaW51dGUsIHV0Y1NlY29uZCwgdXRjTWlsbGlzZWNvbmQsIHV0Y0Zvcm1hdCkuZG9tYWluKFtEYXRlLlVUQygyMDAwLCAwLCAxKSwgRGF0ZS5VVEMoMjAwMCwgMCwgMildKSwgYXJndW1lbnRzKTtcbn1cbiIsImltcG9ydCB7aWRlbnRpdHl9IGZyb20gXCIuL2NvbnRpbnVvdXNcIjtcbmltcG9ydCB7aW5pdEludGVycG9sYXRvcn0gZnJvbSBcIi4vaW5pdFwiO1xuaW1wb3J0IHtsaW5lYXJpc2h9IGZyb20gXCIuL2xpbmVhclwiO1xuaW1wb3J0IHtsb2dnaXNofSBmcm9tIFwiLi9sb2dcIjtcbmltcG9ydCB7c3ltbG9naXNofSBmcm9tIFwiLi9zeW1sb2dcIjtcbmltcG9ydCB7cG93aXNofSBmcm9tIFwiLi9wb3dcIjtcblxuZnVuY3Rpb24gdHJhbnNmb3JtZXIoKSB7XG4gIHZhciB4MCA9IDAsXG4gICAgICB4MSA9IDEsXG4gICAgICB0MCxcbiAgICAgIHQxLFxuICAgICAgazEwLFxuICAgICAgdHJhbnNmb3JtLFxuICAgICAgaW50ZXJwb2xhdG9yID0gaWRlbnRpdHksXG4gICAgICBjbGFtcCA9IGZhbHNlLFxuICAgICAgdW5rbm93bjtcblxuICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgcmV0dXJuIGlzTmFOKHggPSAreCkgPyB1bmtub3duIDogaW50ZXJwb2xhdG9yKGsxMCA9PT0gMCA/IDAuNSA6ICh4ID0gKHRyYW5zZm9ybSh4KSAtIHQwKSAqIGsxMCwgY2xhbXAgPyBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCB4KSkgOiB4KSk7XG4gIH1cblxuICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodDAgPSB0cmFuc2Zvcm0oeDAgPSArX1swXSksIHQxID0gdHJhbnNmb3JtKHgxID0gK19bMV0pLCBrMTAgPSB0MCA9PT0gdDEgPyAwIDogMSAvICh0MSAtIHQwKSwgc2NhbGUpIDogW3gwLCB4MV07XG4gIH07XG5cbiAgc2NhbGUuY2xhbXAgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY2xhbXAgPSAhIV8sIHNjYWxlKSA6IGNsYW1wO1xuICB9O1xuXG4gIHNjYWxlLmludGVycG9sYXRvciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpbnRlcnBvbGF0b3IgPSBfLCBzY2FsZSkgOiBpbnRlcnBvbGF0b3I7XG4gIH07XG5cbiAgc2NhbGUudW5rbm93biA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh1bmtub3duID0gXywgc2NhbGUpIDogdW5rbm93bjtcbiAgfTtcblxuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHRyYW5zZm9ybSA9IHQsIHQwID0gdCh4MCksIHQxID0gdCh4MSksIGsxMCA9IHQwID09PSB0MSA/IDAgOiAxIC8gKHQxIC0gdDApO1xuICAgIHJldHVybiBzY2FsZTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvcHkoc291cmNlLCB0YXJnZXQpIHtcbiAgcmV0dXJuIHRhcmdldFxuICAgICAgLmRvbWFpbihzb3VyY2UuZG9tYWluKCkpXG4gICAgICAuaW50ZXJwb2xhdG9yKHNvdXJjZS5pbnRlcnBvbGF0b3IoKSlcbiAgICAgIC5jbGFtcChzb3VyY2UuY2xhbXAoKSlcbiAgICAgIC51bmtub3duKHNvdXJjZS51bmtub3duKCkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzZXF1ZW50aWFsKCkge1xuICB2YXIgc2NhbGUgPSBsaW5lYXJpc2godHJhbnNmb3JtZXIoKShpZGVudGl0eSkpO1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gY29weShzY2FsZSwgc2VxdWVudGlhbCgpKTtcbiAgfTtcblxuICByZXR1cm4gaW5pdEludGVycG9sYXRvci5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNlcXVlbnRpYWxMb2coKSB7XG4gIHZhciBzY2FsZSA9IGxvZ2dpc2godHJhbnNmb3JtZXIoKSkuZG9tYWluKFsxLCAxMF0pO1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gY29weShzY2FsZSwgc2VxdWVudGlhbExvZygpKS5iYXNlKHNjYWxlLmJhc2UoKSk7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRJbnRlcnBvbGF0b3IuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXF1ZW50aWFsU3ltbG9nKCkge1xuICB2YXIgc2NhbGUgPSBzeW1sb2dpc2godHJhbnNmb3JtZXIoKSk7XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBzZXF1ZW50aWFsU3ltbG9nKCkpLmNvbnN0YW50KHNjYWxlLmNvbnN0YW50KCkpO1xuICB9O1xuXG4gIHJldHVybiBpbml0SW50ZXJwb2xhdG9yLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2VxdWVudGlhbFBvdygpIHtcbiAgdmFyIHNjYWxlID0gcG93aXNoKHRyYW5zZm9ybWVyKCkpO1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gY29weShzY2FsZSwgc2VxdWVudGlhbFBvdygpKS5leHBvbmVudChzY2FsZS5leHBvbmVudCgpKTtcbiAgfTtcblxuICByZXR1cm4gaW5pdEludGVycG9sYXRvci5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNlcXVlbnRpYWxTcXJ0KCkge1xuICByZXR1cm4gc2VxdWVudGlhbFBvdy5hcHBseShudWxsLCBhcmd1bWVudHMpLmV4cG9uZW50KDAuNSk7XG59XG4iLCJpbXBvcnQge2FzY2VuZGluZywgYmlzZWN0fSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7aWRlbnRpdHl9IGZyb20gXCIuL2NvbnRpbnVvdXNcIjtcbmltcG9ydCB7aW5pdEludGVycG9sYXRvcn0gZnJvbSBcIi4vaW5pdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzZXF1ZW50aWFsUXVhbnRpbGUoKSB7XG4gIHZhciBkb21haW4gPSBbXSxcbiAgICAgIGludGVycG9sYXRvciA9IGlkZW50aXR5O1xuXG4gIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICBpZiAoIWlzTmFOKHggPSAreCkpIHJldHVybiBpbnRlcnBvbGF0b3IoKGJpc2VjdChkb21haW4sIHgpIC0gMSkgLyAoZG9tYWluLmxlbmd0aCAtIDEpKTtcbiAgfVxuXG4gIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkb21haW4uc2xpY2UoKTtcbiAgICBkb21haW4gPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IF8ubGVuZ3RoLCBkOyBpIDwgbjsgKytpKSBpZiAoZCA9IF9baV0sIGQgIT0gbnVsbCAmJiAhaXNOYU4oZCA9ICtkKSkgZG9tYWluLnB1c2goZCk7XG4gICAgZG9tYWluLnNvcnQoYXNjZW5kaW5nKTtcbiAgICByZXR1cm4gc2NhbGU7XG4gIH07XG5cbiAgc2NhbGUuaW50ZXJwb2xhdG9yID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGludGVycG9sYXRvciA9IF8sIHNjYWxlKSA6IGludGVycG9sYXRvcjtcbiAgfTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHNlcXVlbnRpYWxRdWFudGlsZShpbnRlcnBvbGF0b3IpLmRvbWFpbihkb21haW4pO1xuICB9O1xuXG4gIHJldHVybiBpbml0SW50ZXJwb2xhdG9yLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xufVxuIiwiaW1wb3J0IHtpZGVudGl0eX0gZnJvbSBcIi4vY29udGludW91c1wiO1xuaW1wb3J0IHtpbml0SW50ZXJwb2xhdG9yfSBmcm9tIFwiLi9pbml0XCI7XG5pbXBvcnQge2xpbmVhcmlzaH0gZnJvbSBcIi4vbGluZWFyXCI7XG5pbXBvcnQge2xvZ2dpc2h9IGZyb20gXCIuL2xvZ1wiO1xuaW1wb3J0IHtjb3B5fSBmcm9tIFwiLi9zZXF1ZW50aWFsXCI7XG5pbXBvcnQge3N5bWxvZ2lzaH0gZnJvbSBcIi4vc3ltbG9nXCI7XG5pbXBvcnQge3Bvd2lzaH0gZnJvbSBcIi4vcG93XCI7XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybWVyKCkge1xuICB2YXIgeDAgPSAwLFxuICAgICAgeDEgPSAwLjUsXG4gICAgICB4MiA9IDEsXG4gICAgICB0MCxcbiAgICAgIHQxLFxuICAgICAgdDIsXG4gICAgICBrMTAsXG4gICAgICBrMjEsXG4gICAgICBpbnRlcnBvbGF0b3IgPSBpZGVudGl0eSxcbiAgICAgIHRyYW5zZm9ybSxcbiAgICAgIGNsYW1wID0gZmFsc2UsXG4gICAgICB1bmtub3duO1xuXG4gIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICByZXR1cm4gaXNOYU4oeCA9ICt4KSA/IHVua25vd24gOiAoeCA9IDAuNSArICgoeCA9ICt0cmFuc2Zvcm0oeCkpIC0gdDEpICogKHggPCB0MSA/IGsxMCA6IGsyMSksIGludGVycG9sYXRvcihjbGFtcCA/IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIHgpKSA6IHgpKTtcbiAgfVxuXG4gIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0MCA9IHRyYW5zZm9ybSh4MCA9ICtfWzBdKSwgdDEgPSB0cmFuc2Zvcm0oeDEgPSArX1sxXSksIHQyID0gdHJhbnNmb3JtKHgyID0gK19bMl0pLCBrMTAgPSB0MCA9PT0gdDEgPyAwIDogMC41IC8gKHQxIC0gdDApLCBrMjEgPSB0MSA9PT0gdDIgPyAwIDogMC41IC8gKHQyIC0gdDEpLCBzY2FsZSkgOiBbeDAsIHgxLCB4Ml07XG4gIH07XG5cbiAgc2NhbGUuY2xhbXAgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY2xhbXAgPSAhIV8sIHNjYWxlKSA6IGNsYW1wO1xuICB9O1xuXG4gIHNjYWxlLmludGVycG9sYXRvciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpbnRlcnBvbGF0b3IgPSBfLCBzY2FsZSkgOiBpbnRlcnBvbGF0b3I7XG4gIH07XG5cbiAgc2NhbGUudW5rbm93biA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh1bmtub3duID0gXywgc2NhbGUpIDogdW5rbm93bjtcbiAgfTtcblxuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHRyYW5zZm9ybSA9IHQsIHQwID0gdCh4MCksIHQxID0gdCh4MSksIHQyID0gdCh4MiksIGsxMCA9IHQwID09PSB0MSA/IDAgOiAwLjUgLyAodDEgLSB0MCksIGsyMSA9IHQxID09PSB0MiA/IDAgOiAwLjUgLyAodDIgLSB0MSk7XG4gICAgcmV0dXJuIHNjYWxlO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkaXZlcmdpbmcoKSB7XG4gIHZhciBzY2FsZSA9IGxpbmVhcmlzaCh0cmFuc2Zvcm1lcigpKGlkZW50aXR5KSk7XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBkaXZlcmdpbmcoKSk7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRJbnRlcnBvbGF0b3IuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXZlcmdpbmdMb2coKSB7XG4gIHZhciBzY2FsZSA9IGxvZ2dpc2godHJhbnNmb3JtZXIoKSkuZG9tYWluKFswLjEsIDEsIDEwXSk7XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBkaXZlcmdpbmdMb2coKSkuYmFzZShzY2FsZS5iYXNlKCkpO1xuICB9O1xuXG4gIHJldHVybiBpbml0SW50ZXJwb2xhdG9yLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGl2ZXJnaW5nU3ltbG9nKCkge1xuICB2YXIgc2NhbGUgPSBzeW1sb2dpc2godHJhbnNmb3JtZXIoKSk7XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBkaXZlcmdpbmdTeW1sb2coKSkuY29uc3RhbnQoc2NhbGUuY29uc3RhbnQoKSk7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRJbnRlcnBvbGF0b3IuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXZlcmdpbmdQb3coKSB7XG4gIHZhciBzY2FsZSA9IHBvd2lzaCh0cmFuc2Zvcm1lcigpKTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvcHkoc2NhbGUsIGRpdmVyZ2luZ1BvdygpKS5leHBvbmVudChzY2FsZS5leHBvbmVudCgpKTtcbiAgfTtcblxuICByZXR1cm4gaW5pdEludGVycG9sYXRvci5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpdmVyZ2luZ1NxcnQoKSB7XG4gIHJldHVybiBkaXZlcmdpbmdQb3cuYXBwbHkobnVsbCwgYXJndW1lbnRzKS5leHBvbmVudCgwLjUpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc3BlY2lmaWVyKSB7XG4gIHZhciBuID0gc3BlY2lmaWVyLmxlbmd0aCAvIDYgfCAwLCBjb2xvcnMgPSBuZXcgQXJyYXkobiksIGkgPSAwO1xuICB3aGlsZSAoaSA8IG4pIGNvbG9yc1tpXSA9IFwiI1wiICsgc3BlY2lmaWVyLnNsaWNlKGkgKiA2LCArK2kgKiA2KTtcbiAgcmV0dXJuIGNvbG9ycztcbn1cbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjb2xvcnMoXCIxZjc3YjRmZjdmMGUyY2EwMmNkNjI3Mjg5NDY3YmQ4YzU2NGJlMzc3YzI3ZjdmN2ZiY2JkMjIxN2JlY2ZcIik7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY29sb3JzKFwiN2ZjOTdmYmVhZWQ0ZmRjMDg2ZmZmZjk5Mzg2Y2IwZjAwMjdmYmY1YjE3NjY2NjY2XCIpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbG9ycyhcIjFiOWU3N2Q5NWYwMjc1NzBiM2U3Mjk4YTY2YTYxZWU2YWIwMmE2NzYxZDY2NjY2NlwiKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjb2xvcnMoXCJhNmNlZTMxZjc4YjRiMmRmOGEzM2EwMmNmYjlhOTllMzFhMWNmZGJmNmZmZjdmMDBjYWIyZDY2YTNkOWFmZmZmOTliMTU5MjhcIik7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY29sb3JzKFwiZmJiNGFlYjNjZGUzY2NlYmM1ZGVjYmU0ZmVkOWE2ZmZmZmNjZTVkOGJkZmRkYWVjZjJmMmYyXCIpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbG9ycyhcImIzZTJjZGZkY2RhY2NiZDVlOGY0Y2FlNGU2ZjVjOWZmZjJhZWYxZTJjY2NjY2NjY1wiKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjb2xvcnMoXCJlNDFhMWMzNzdlYjg0ZGFmNGE5ODRlYTNmZjdmMDBmZmZmMzNhNjU2MjhmNzgxYmY5OTk5OTlcIik7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY29sb3JzKFwiNjZjMmE1ZmM4ZDYyOGRhMGNiZTc4YWMzYTZkODU0ZmZkOTJmZTVjNDk0YjNiM2IzXCIpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbG9ycyhcIjhkZDNjN2ZmZmZiM2JlYmFkYWZiODA3MjgwYjFkM2ZkYjQ2MmIzZGU2OWZjY2RlNWQ5ZDlkOWJjODBiZGNjZWJjNWZmZWQ2ZlwiKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjb2xvcnMoXCI0ZTc5YTdmMjhlMmNlMTU3NTk3NmI3YjI1OWExNGZlZGM5NDlhZjdhYTFmZjlkYTc5Yzc1NWZiYWIwYWJcIik7XG4iLCJpbXBvcnQge2ludGVycG9sYXRlUmdiQmFzaXN9IGZyb20gXCJkMy1pbnRlcnBvbGF0ZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzY2hlbWUpIHtcbiAgcmV0dXJuIGludGVycG9sYXRlUmdiQmFzaXMoc2NoZW1lW3NjaGVtZS5sZW5ndGggLSAxXSk7XG59XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wLmpzXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJkOGIzNjVmNWY1ZjU1YWI0YWNcIixcbiAgXCJhNjYxMWFkZmMyN2Q4MGNkYzEwMTg1NzFcIixcbiAgXCJhNjYxMWFkZmMyN2RmNWY1ZjU4MGNkYzEwMTg1NzFcIixcbiAgXCI4YzUxMGFkOGIzNjVmNmU4YzNjN2VhZTU1YWI0YWMwMTY2NWVcIixcbiAgXCI4YzUxMGFkOGIzNjVmNmU4YzNmNWY1ZjVjN2VhZTU1YWI0YWMwMTY2NWVcIixcbiAgXCI4YzUxMGFiZjgxMmRkZmMyN2RmNmU4YzNjN2VhZTU4MGNkYzEzNTk3OGYwMTY2NWVcIixcbiAgXCI4YzUxMGFiZjgxMmRkZmMyN2RmNmU4YzNmNWY1ZjVjN2VhZTU4MGNkYzEzNTk3OGYwMTY2NWVcIixcbiAgXCI1NDMwMDU4YzUxMGFiZjgxMmRkZmMyN2RmNmU4YzNjN2VhZTU4MGNkYzEzNTk3OGYwMTY2NWUwMDNjMzBcIixcbiAgXCI1NDMwMDU4YzUxMGFiZjgxMmRkZmMyN2RmNmU4YzNmNWY1ZjVjN2VhZTU4MGNkYzEzNTk3OGYwMTY2NWUwMDNjMzBcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcC5qc1wiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiYWY4ZGMzZjdmN2Y3N2ZiZjdiXCIsXG4gIFwiN2IzMjk0YzJhNWNmYTZkYmEwMDA4ODM3XCIsXG4gIFwiN2IzMjk0YzJhNWNmZjdmN2Y3YTZkYmEwMDA4ODM3XCIsXG4gIFwiNzYyYTgzYWY4ZGMzZTdkNGU4ZDlmMGQzN2ZiZjdiMWI3ODM3XCIsXG4gIFwiNzYyYTgzYWY4ZGMzZTdkNGU4ZjdmN2Y3ZDlmMGQzN2ZiZjdiMWI3ODM3XCIsXG4gIFwiNzYyYTgzOTk3MGFiYzJhNWNmZTdkNGU4ZDlmMGQzYTZkYmEwNWFhZTYxMWI3ODM3XCIsXG4gIFwiNzYyYTgzOTk3MGFiYzJhNWNmZTdkNGU4ZjdmN2Y3ZDlmMGQzYTZkYmEwNWFhZTYxMWI3ODM3XCIsXG4gIFwiNDAwMDRiNzYyYTgzOTk3MGFiYzJhNWNmZTdkNGU4ZDlmMGQzYTZkYmEwNWFhZTYxMWI3ODM3MDA0NDFiXCIsXG4gIFwiNDAwMDRiNzYyYTgzOTk3MGFiYzJhNWNmZTdkNGU4ZjdmN2Y3ZDlmMGQzYTZkYmEwNWFhZTYxMWI3ODM3MDA0NDFiXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXAuanNcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImU5YTNjOWY3ZjdmN2ExZDc2YVwiLFxuICBcImQwMWM4YmYxYjZkYWI4ZTE4NjRkYWMyNlwiLFxuICBcImQwMWM4YmYxYjZkYWY3ZjdmN2I4ZTE4NjRkYWMyNlwiLFxuICBcImM1MWI3ZGU5YTNjOWZkZTBlZmU2ZjVkMGExZDc2YTRkOTIyMVwiLFxuICBcImM1MWI3ZGU5YTNjOWZkZTBlZmY3ZjdmN2U2ZjVkMGExZDc2YTRkOTIyMVwiLFxuICBcImM1MWI3ZGRlNzdhZWYxYjZkYWZkZTBlZmU2ZjVkMGI4ZTE4NjdmYmM0MTRkOTIyMVwiLFxuICBcImM1MWI3ZGRlNzdhZWYxYjZkYWZkZTBlZmY3ZjdmN2U2ZjVkMGI4ZTE4NjdmYmM0MTRkOTIyMVwiLFxuICBcIjhlMDE1MmM1MWI3ZGRlNzdhZWYxYjZkYWZkZTBlZmU2ZjVkMGI4ZTE4NjdmYmM0MTRkOTIyMTI3NjQxOVwiLFxuICBcIjhlMDE1MmM1MWI3ZGRlNzdhZWYxYjZkYWZkZTBlZmY3ZjdmN2U2ZjVkMGI4ZTE4NjdmYmM0MTRkOTIyMTI3NjQxOVwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wLmpzXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCI5OThlYzNmN2Y3ZjdmMWEzNDBcIixcbiAgXCI1ZTNjOTliMmFiZDJmZGI4NjNlNjYxMDFcIixcbiAgXCI1ZTNjOTliMmFiZDJmN2Y3ZjdmZGI4NjNlNjYxMDFcIixcbiAgXCI1NDI3ODg5OThlYzNkOGRhZWJmZWUwYjZmMWEzNDBiMzU4MDZcIixcbiAgXCI1NDI3ODg5OThlYzNkOGRhZWJmN2Y3ZjdmZWUwYjZmMWEzNDBiMzU4MDZcIixcbiAgXCI1NDI3ODg4MDczYWNiMmFiZDJkOGRhZWJmZWUwYjZmZGI4NjNlMDgyMTRiMzU4MDZcIixcbiAgXCI1NDI3ODg4MDczYWNiMmFiZDJkOGRhZWJmN2Y3ZjdmZWUwYjZmZGI4NjNlMDgyMTRiMzU4MDZcIixcbiAgXCIyZDAwNGI1NDI3ODg4MDczYWNiMmFiZDJkOGRhZWJmZWUwYjZmZGI4NjNlMDgyMTRiMzU4MDY3ZjNiMDhcIixcbiAgXCIyZDAwNGI1NDI3ODg4MDczYWNiMmFiZDJkOGRhZWJmN2Y3ZjdmZWUwYjZmZGI4NjNlMDgyMTRiMzU4MDY3ZjNiMDhcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcC5qc1wiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZWY4YTYyZjdmN2Y3NjdhOWNmXCIsXG4gIFwiY2EwMDIwZjRhNTgyOTJjNWRlMDU3MWIwXCIsXG4gIFwiY2EwMDIwZjRhNTgyZjdmN2Y3OTJjNWRlMDU3MWIwXCIsXG4gIFwiYjIxODJiZWY4YTYyZmRkYmM3ZDFlNWYwNjdhOWNmMjE2NmFjXCIsXG4gIFwiYjIxODJiZWY4YTYyZmRkYmM3ZjdmN2Y3ZDFlNWYwNjdhOWNmMjE2NmFjXCIsXG4gIFwiYjIxODJiZDY2MDRkZjRhNTgyZmRkYmM3ZDFlNWYwOTJjNWRlNDM5M2MzMjE2NmFjXCIsXG4gIFwiYjIxODJiZDY2MDRkZjRhNTgyZmRkYmM3ZjdmN2Y3ZDFlNWYwOTJjNWRlNDM5M2MzMjE2NmFjXCIsXG4gIFwiNjcwMDFmYjIxODJiZDY2MDRkZjRhNTgyZmRkYmM3ZDFlNWYwOTJjNWRlNDM5M2MzMjE2NmFjMDUzMDYxXCIsXG4gIFwiNjcwMDFmYjIxODJiZDY2MDRkZjRhNTgyZmRkYmM3ZjdmN2Y3ZDFlNWYwOTJjNWRlNDM5M2MzMjE2NmFjMDUzMDYxXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXAuanNcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImVmOGE2MmZmZmZmZjk5OTk5OVwiLFxuICBcImNhMDAyMGY0YTU4MmJhYmFiYTQwNDA0MFwiLFxuICBcImNhMDAyMGY0YTU4MmZmZmZmZmJhYmFiYTQwNDA0MFwiLFxuICBcImIyMTgyYmVmOGE2MmZkZGJjN2UwZTBlMDk5OTk5OTRkNGQ0ZFwiLFxuICBcImIyMTgyYmVmOGE2MmZkZGJjN2ZmZmZmZmUwZTBlMDk5OTk5OTRkNGQ0ZFwiLFxuICBcImIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2UwZTBlMGJhYmFiYTg3ODc4NzRkNGQ0ZFwiLFxuICBcImIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2ZmZmZmZmUwZTBlMGJhYmFiYTg3ODc4NzRkNGQ0ZFwiLFxuICBcIjY3MDAxZmIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2UwZTBlMGJhYmFiYTg3ODc4NzRkNGQ0ZDFhMWExYVwiLFxuICBcIjY3MDAxZmIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2ZmZmZmZmUwZTBlMGJhYmFiYTg3ODc4NzRkNGQ0ZDFhMWExYVwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wLmpzXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJmYzhkNTlmZmZmYmY5MWJmZGJcIixcbiAgXCJkNzE5MWNmZGFlNjFhYmQ5ZTkyYzdiYjZcIixcbiAgXCJkNzE5MWNmZGFlNjFmZmZmYmZhYmQ5ZTkyYzdiYjZcIixcbiAgXCJkNzMwMjdmYzhkNTlmZWUwOTBlMGYzZjg5MWJmZGI0NTc1YjRcIixcbiAgXCJkNzMwMjdmYzhkNTlmZWUwOTBmZmZmYmZlMGYzZjg5MWJmZGI0NTc1YjRcIixcbiAgXCJkNzMwMjdmNDZkNDNmZGFlNjFmZWUwOTBlMGYzZjhhYmQ5ZTk3NGFkZDE0NTc1YjRcIixcbiAgXCJkNzMwMjdmNDZkNDNmZGFlNjFmZWUwOTBmZmZmYmZlMGYzZjhhYmQ5ZTk3NGFkZDE0NTc1YjRcIixcbiAgXCJhNTAwMjZkNzMwMjdmNDZkNDNmZGFlNjFmZWUwOTBlMGYzZjhhYmQ5ZTk3NGFkZDE0NTc1YjQzMTM2OTVcIixcbiAgXCJhNTAwMjZkNzMwMjdmNDZkNDNmZGFlNjFmZWUwOTBmZmZmYmZlMGYzZjhhYmQ5ZTk3NGFkZDE0NTc1YjQzMTM2OTVcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcC5qc1wiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZmM4ZDU5ZmZmZmJmOTFjZjYwXCIsXG4gIFwiZDcxOTFjZmRhZTYxYTZkOTZhMWE5NjQxXCIsXG4gIFwiZDcxOTFjZmRhZTYxZmZmZmJmYTZkOTZhMWE5NjQxXCIsXG4gIFwiZDczMDI3ZmM4ZDU5ZmVlMDhiZDllZjhiOTFjZjYwMWE5ODUwXCIsXG4gIFwiZDczMDI3ZmM4ZDU5ZmVlMDhiZmZmZmJmZDllZjhiOTFjZjYwMWE5ODUwXCIsXG4gIFwiZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDhiZDllZjhiYTZkOTZhNjZiZDYzMWE5ODUwXCIsXG4gIFwiZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDhiZmZmZmJmZDllZjhiYTZkOTZhNjZiZDYzMWE5ODUwXCIsXG4gIFwiYTUwMDI2ZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDhiZDllZjhiYTZkOTZhNjZiZDYzMWE5ODUwMDA2ODM3XCIsXG4gIFwiYTUwMDI2ZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDhiZmZmZmJmZDllZjhiYTZkOTZhNjZiZDYzMWE5ODUwMDA2ODM3XCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXAuanNcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImZjOGQ1OWZmZmZiZjk5ZDU5NFwiLFxuICBcImQ3MTkxY2ZkYWU2MWFiZGRhNDJiODNiYVwiLFxuICBcImQ3MTkxY2ZkYWU2MWZmZmZiZmFiZGRhNDJiODNiYVwiLFxuICBcImQ1M2U0ZmZjOGQ1OWZlZTA4YmU2ZjU5ODk5ZDU5NDMyODhiZFwiLFxuICBcImQ1M2U0ZmZjOGQ1OWZlZTA4YmZmZmZiZmU2ZjU5ODk5ZDU5NDMyODhiZFwiLFxuICBcImQ1M2U0ZmY0NmQ0M2ZkYWU2MWZlZTA4YmU2ZjU5OGFiZGRhNDY2YzJhNTMyODhiZFwiLFxuICBcImQ1M2U0ZmY0NmQ0M2ZkYWU2MWZlZTA4YmZmZmZiZmU2ZjU5OGFiZGRhNDY2YzJhNTMyODhiZFwiLFxuICBcIjllMDE0MmQ1M2U0ZmY0NmQ0M2ZkYWU2MWZlZTA4YmU2ZjU5OGFiZGRhNDY2YzJhNTMyODhiZDVlNGZhMlwiLFxuICBcIjllMDE0MmQ1M2U0ZmY0NmQ0M2ZkYWU2MWZlZTA4YmZmZmZiZmU2ZjU5OGFiZGRhNDY2YzJhNTMyODhiZDVlNGZhMlwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wLmpzXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlNWY1Zjk5OWQ4YzkyY2EyNWZcIixcbiAgXCJlZGY4ZmJiMmUyZTI2NmMyYTQyMzhiNDVcIixcbiAgXCJlZGY4ZmJiMmUyZTI2NmMyYTQyY2EyNWYwMDZkMmNcIixcbiAgXCJlZGY4ZmJjY2VjZTY5OWQ4Yzk2NmMyYTQyY2EyNWYwMDZkMmNcIixcbiAgXCJlZGY4ZmJjY2VjZTY5OWQ4Yzk2NmMyYTQ0MWFlNzYyMzhiNDUwMDU4MjRcIixcbiAgXCJmN2ZjZmRlNWY1ZjljY2VjZTY5OWQ4Yzk2NmMyYTQ0MWFlNzYyMzhiNDUwMDU4MjRcIixcbiAgXCJmN2ZjZmRlNWY1ZjljY2VjZTY5OWQ4Yzk2NmMyYTQ0MWFlNzYyMzhiNDUwMDZkMmMwMDQ0MWJcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcC5qc1wiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZTBlY2Y0OWViY2RhODg1NmE3XCIsXG4gIFwiZWRmOGZiYjNjZGUzOGM5NmM2ODg0MTlkXCIsXG4gIFwiZWRmOGZiYjNjZGUzOGM5NmM2ODg1NmE3ODEwZjdjXCIsXG4gIFwiZWRmOGZiYmZkM2U2OWViY2RhOGM5NmM2ODg1NmE3ODEwZjdjXCIsXG4gIFwiZWRmOGZiYmZkM2U2OWViY2RhOGM5NmM2OGM2YmIxODg0MTlkNmUwMTZiXCIsXG4gIFwiZjdmY2ZkZTBlY2Y0YmZkM2U2OWViY2RhOGM5NmM2OGM2YmIxODg0MTlkNmUwMTZiXCIsXG4gIFwiZjdmY2ZkZTBlY2Y0YmZkM2U2OWViY2RhOGM5NmM2OGM2YmIxODg0MTlkODEwZjdjNGQwMDRiXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXAuanNcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImUwZjNkYmE4ZGRiNTQzYTJjYVwiLFxuICBcImYwZjllOGJhZTRiYzdiY2NjNDJiOGNiZVwiLFxuICBcImYwZjllOGJhZTRiYzdiY2NjNDQzYTJjYTA4NjhhY1wiLFxuICBcImYwZjllOGNjZWJjNWE4ZGRiNTdiY2NjNDQzYTJjYTA4NjhhY1wiLFxuICBcImYwZjllOGNjZWJjNWE4ZGRiNTdiY2NjNDRlYjNkMzJiOGNiZTA4NTg5ZVwiLFxuICBcImY3ZmNmMGUwZjNkYmNjZWJjNWE4ZGRiNTdiY2NjNDRlYjNkMzJiOGNiZTA4NTg5ZVwiLFxuICBcImY3ZmNmMGUwZjNkYmNjZWJjNWE4ZGRiNTdiY2NjNDRlYjNkMzJiOGNiZTA4NjhhYzA4NDA4MVwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wLmpzXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJmZWU4YzhmZGJiODRlMzRhMzNcIixcbiAgXCJmZWYwZDlmZGNjOGFmYzhkNTlkNzMwMWZcIixcbiAgXCJmZWYwZDlmZGNjOGFmYzhkNTllMzRhMzNiMzAwMDBcIixcbiAgXCJmZWYwZDlmZGQ0OWVmZGJiODRmYzhkNTllMzRhMzNiMzAwMDBcIixcbiAgXCJmZWYwZDlmZGQ0OWVmZGJiODRmYzhkNTllZjY1NDhkNzMwMWY5OTAwMDBcIixcbiAgXCJmZmY3ZWNmZWU4YzhmZGQ0OWVmZGJiODRmYzhkNTllZjY1NDhkNzMwMWY5OTAwMDBcIixcbiAgXCJmZmY3ZWNmZWU4YzhmZGQ0OWVmZGJiODRmYzhkNTllZjY1NDhkNzMwMWZiMzAwMDA3ZjAwMDBcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcC5qc1wiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZWNlMmYwYTZiZGRiMWM5MDk5XCIsXG4gIFwiZjZlZmY3YmRjOWUxNjdhOWNmMDI4MThhXCIsXG4gIFwiZjZlZmY3YmRjOWUxNjdhOWNmMWM5MDk5MDE2YzU5XCIsXG4gIFwiZjZlZmY3ZDBkMWU2YTZiZGRiNjdhOWNmMWM5MDk5MDE2YzU5XCIsXG4gIFwiZjZlZmY3ZDBkMWU2YTZiZGRiNjdhOWNmMzY5MGMwMDI4MThhMDE2NDUwXCIsXG4gIFwiZmZmN2ZiZWNlMmYwZDBkMWU2YTZiZGRiNjdhOWNmMzY5MGMwMDI4MThhMDE2NDUwXCIsXG4gIFwiZmZmN2ZiZWNlMmYwZDBkMWU2YTZiZGRiNjdhOWNmMzY5MGMwMDI4MThhMDE2YzU5MDE0NjM2XCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXAuanNcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImVjZTdmMmE2YmRkYjJiOGNiZVwiLFxuICBcImYxZWVmNmJkYzllMTc0YTljZjA1NzBiMFwiLFxuICBcImYxZWVmNmJkYzllMTc0YTljZjJiOGNiZTA0NWE4ZFwiLFxuICBcImYxZWVmNmQwZDFlNmE2YmRkYjc0YTljZjJiOGNiZTA0NWE4ZFwiLFxuICBcImYxZWVmNmQwZDFlNmE2YmRkYjc0YTljZjM2OTBjMDA1NzBiMDAzNGU3YlwiLFxuICBcImZmZjdmYmVjZTdmMmQwZDFlNmE2YmRkYjc0YTljZjM2OTBjMDA1NzBiMDAzNGU3YlwiLFxuICBcImZmZjdmYmVjZTdmMmQwZDFlNmE2YmRkYjc0YTljZjM2OTBjMDA1NzBiMDA0NWE4ZDAyMzg1OFwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wLmpzXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlN2UxZWZjOTk0YzdkZDFjNzdcIixcbiAgXCJmMWVlZjZkN2I1ZDhkZjY1YjBjZTEyNTZcIixcbiAgXCJmMWVlZjZkN2I1ZDhkZjY1YjBkZDFjNzc5ODAwNDNcIixcbiAgXCJmMWVlZjZkNGI5ZGFjOTk0YzdkZjY1YjBkZDFjNzc5ODAwNDNcIixcbiAgXCJmMWVlZjZkNGI5ZGFjOTk0YzdkZjY1YjBlNzI5OGFjZTEyNTY5MTAwM2ZcIixcbiAgXCJmN2Y0ZjllN2UxZWZkNGI5ZGFjOTk0YzdkZjY1YjBlNzI5OGFjZTEyNTY5MTAwM2ZcIixcbiAgXCJmN2Y0ZjllN2UxZWZkNGI5ZGFjOTk0YzdkZjY1YjBlNzI5OGFjZTEyNTY5ODAwNDM2NzAwMWZcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcC5qc1wiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZmRlMGRkZmE5ZmI1YzUxYjhhXCIsXG4gIFwiZmVlYmUyZmJiNGI5Zjc2OGExYWUwMTdlXCIsXG4gIFwiZmVlYmUyZmJiNGI5Zjc2OGExYzUxYjhhN2EwMTc3XCIsXG4gIFwiZmVlYmUyZmNjNWMwZmE5ZmI1Zjc2OGExYzUxYjhhN2EwMTc3XCIsXG4gIFwiZmVlYmUyZmNjNWMwZmE5ZmI1Zjc2OGExZGQzNDk3YWUwMTdlN2EwMTc3XCIsXG4gIFwiZmZmN2YzZmRlMGRkZmNjNWMwZmE5ZmI1Zjc2OGExZGQzNDk3YWUwMTdlN2EwMTc3XCIsXG4gIFwiZmZmN2YzZmRlMGRkZmNjNWMwZmE5ZmI1Zjc2OGExZGQzNDk3YWUwMTdlN2EwMTc3NDkwMDZhXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXAuanNcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImVkZjhiMTdmY2RiYjJjN2ZiOFwiLFxuICBcImZmZmZjY2ExZGFiNDQxYjZjNDIyNWVhOFwiLFxuICBcImZmZmZjY2ExZGFiNDQxYjZjNDJjN2ZiODI1MzQ5NFwiLFxuICBcImZmZmZjY2M3ZTliNDdmY2RiYjQxYjZjNDJjN2ZiODI1MzQ5NFwiLFxuICBcImZmZmZjY2M3ZTliNDdmY2RiYjQxYjZjNDFkOTFjMDIyNWVhODBjMmM4NFwiLFxuICBcImZmZmZkOWVkZjhiMWM3ZTliNDdmY2RiYjQxYjZjNDFkOTFjMDIyNWVhODBjMmM4NFwiLFxuICBcImZmZmZkOWVkZjhiMWM3ZTliNDdmY2RiYjQxYjZjNDFkOTFjMDIyNWVhODI1MzQ5NDA4MWQ1OFwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wLmpzXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJmN2ZjYjlhZGRkOGUzMWEzNTRcIixcbiAgXCJmZmZmY2NjMmU2OTk3OGM2NzkyMzg0NDNcIixcbiAgXCJmZmZmY2NjMmU2OTk3OGM2NzkzMWEzNTQwMDY4MzdcIixcbiAgXCJmZmZmY2NkOWYwYTNhZGRkOGU3OGM2NzkzMWEzNTQwMDY4MzdcIixcbiAgXCJmZmZmY2NkOWYwYTNhZGRkOGU3OGM2Nzk0MWFiNWQyMzg0NDMwMDVhMzJcIixcbiAgXCJmZmZmZTVmN2ZjYjlkOWYwYTNhZGRkOGU3OGM2Nzk0MWFiNWQyMzg0NDMwMDVhMzJcIixcbiAgXCJmZmZmZTVmN2ZjYjlkOWYwYTNhZGRkOGU3OGM2Nzk0MWFiNWQyMzg0NDMwMDY4MzcwMDQ1MjlcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcC5qc1wiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZmZmN2JjZmVjNDRmZDk1ZjBlXCIsXG4gIFwiZmZmZmQ0ZmVkOThlZmU5OTI5Y2M0YzAyXCIsXG4gIFwiZmZmZmQ0ZmVkOThlZmU5OTI5ZDk1ZjBlOTkzNDA0XCIsXG4gIFwiZmZmZmQ0ZmVlMzkxZmVjNDRmZmU5OTI5ZDk1ZjBlOTkzNDA0XCIsXG4gIFwiZmZmZmQ0ZmVlMzkxZmVjNDRmZmU5OTI5ZWM3MDE0Y2M0YzAyOGMyZDA0XCIsXG4gIFwiZmZmZmU1ZmZmN2JjZmVlMzkxZmVjNDRmZmU5OTI5ZWM3MDE0Y2M0YzAyOGMyZDA0XCIsXG4gIFwiZmZmZmU1ZmZmN2JjZmVlMzkxZmVjNDRmZmU5OTI5ZWM3MDE0Y2M0YzAyOTkzNDA0NjYyNTA2XCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXAuanNcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImZmZWRhMGZlYjI0Y2YwM2IyMFwiLFxuICBcImZmZmZiMmZlY2M1Y2ZkOGQzY2UzMWExY1wiLFxuICBcImZmZmZiMmZlY2M1Y2ZkOGQzY2YwM2IyMGJkMDAyNlwiLFxuICBcImZmZmZiMmZlZDk3NmZlYjI0Y2ZkOGQzY2YwM2IyMGJkMDAyNlwiLFxuICBcImZmZmZiMmZlZDk3NmZlYjI0Y2ZkOGQzY2ZjNGUyYWUzMWExY2IxMDAyNlwiLFxuICBcImZmZmZjY2ZmZWRhMGZlZDk3NmZlYjI0Y2ZkOGQzY2ZjNGUyYWUzMWExY2IxMDAyNlwiLFxuICBcImZmZmZjY2ZmZWRhMGZlZDk3NmZlYjI0Y2ZkOGQzY2ZjNGUyYWUzMWExY2JkMDAyNjgwMDAyNlwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wLmpzXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJkZWViZjc5ZWNhZTEzMTgyYmRcIixcbiAgXCJlZmYzZmZiZGQ3ZTc2YmFlZDYyMTcxYjVcIixcbiAgXCJlZmYzZmZiZGQ3ZTc2YmFlZDYzMTgyYmQwODUxOWNcIixcbiAgXCJlZmYzZmZjNmRiZWY5ZWNhZTE2YmFlZDYzMTgyYmQwODUxOWNcIixcbiAgXCJlZmYzZmZjNmRiZWY5ZWNhZTE2YmFlZDY0MjkyYzYyMTcxYjUwODQ1OTRcIixcbiAgXCJmN2ZiZmZkZWViZjdjNmRiZWY5ZWNhZTE2YmFlZDY0MjkyYzYyMTcxYjUwODQ1OTRcIixcbiAgXCJmN2ZiZmZkZWViZjdjNmRiZWY5ZWNhZTE2YmFlZDY0MjkyYzYyMTcxYjUwODUxOWMwODMwNmJcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcC5qc1wiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZTVmNWUwYTFkOTliMzFhMzU0XCIsXG4gIFwiZWRmOGU5YmFlNGIzNzRjNDc2MjM4YjQ1XCIsXG4gIFwiZWRmOGU5YmFlNGIzNzRjNDc2MzFhMzU0MDA2ZDJjXCIsXG4gIFwiZWRmOGU5YzdlOWMwYTFkOTliNzRjNDc2MzFhMzU0MDA2ZDJjXCIsXG4gIFwiZWRmOGU5YzdlOWMwYTFkOTliNzRjNDc2NDFhYjVkMjM4YjQ1MDA1YTMyXCIsXG4gIFwiZjdmY2Y1ZTVmNWUwYzdlOWMwYTFkOTliNzRjNDc2NDFhYjVkMjM4YjQ1MDA1YTMyXCIsXG4gIFwiZjdmY2Y1ZTVmNWUwYzdlOWMwYTFkOTliNzRjNDc2NDFhYjVkMjM4YjQ1MDA2ZDJjMDA0NDFiXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXAuanNcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImYwZjBmMGJkYmRiZDYzNjM2M1wiLFxuICBcImY3ZjdmN2NjY2NjYzk2OTY5NjUyNTI1MlwiLFxuICBcImY3ZjdmN2NjY2NjYzk2OTY5NjYzNjM2MzI1MjUyNVwiLFxuICBcImY3ZjdmN2Q5ZDlkOWJkYmRiZDk2OTY5NjYzNjM2MzI1MjUyNVwiLFxuICBcImY3ZjdmN2Q5ZDlkOWJkYmRiZDk2OTY5NjczNzM3MzUyNTI1MjI1MjUyNVwiLFxuICBcImZmZmZmZmYwZjBmMGQ5ZDlkOWJkYmRiZDk2OTY5NjczNzM3MzUyNTI1MjI1MjUyNVwiLFxuICBcImZmZmZmZmYwZjBmMGQ5ZDlkOWJkYmRiZDk2OTY5NjczNzM3MzUyNTI1MjI1MjUyNTAwMDAwMFwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wLmpzXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlZmVkZjViY2JkZGM3NTZiYjFcIixcbiAgXCJmMmYwZjdjYmM5ZTI5ZTlhYzg2YTUxYTNcIixcbiAgXCJmMmYwZjdjYmM5ZTI5ZTlhYzg3NTZiYjE1NDI3OGZcIixcbiAgXCJmMmYwZjdkYWRhZWJiY2JkZGM5ZTlhYzg3NTZiYjE1NDI3OGZcIixcbiAgXCJmMmYwZjdkYWRhZWJiY2JkZGM5ZTlhYzg4MDdkYmE2YTUxYTM0YTE0ODZcIixcbiAgXCJmY2ZiZmRlZmVkZjVkYWRhZWJiY2JkZGM5ZTlhYzg4MDdkYmE2YTUxYTM0YTE0ODZcIixcbiAgXCJmY2ZiZmRlZmVkZjVkYWRhZWJiY2JkZGM5ZTlhYzg4MDdkYmE2YTUxYTM1NDI3OGYzZjAwN2RcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcC5qc1wiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZmVlMGQyZmM5MjcyZGUyZDI2XCIsXG4gIFwiZmVlNWQ5ZmNhZTkxZmI2YTRhY2IxODFkXCIsXG4gIFwiZmVlNWQ5ZmNhZTkxZmI2YTRhZGUyZDI2YTUwZjE1XCIsXG4gIFwiZmVlNWQ5ZmNiYmExZmM5MjcyZmI2YTRhZGUyZDI2YTUwZjE1XCIsXG4gIFwiZmVlNWQ5ZmNiYmExZmM5MjcyZmI2YTRhZWYzYjJjY2IxODFkOTkwMDBkXCIsXG4gIFwiZmZmNWYwZmVlMGQyZmNiYmExZmM5MjcyZmI2YTRhZWYzYjJjY2IxODFkOTkwMDBkXCIsXG4gIFwiZmZmNWYwZmVlMGQyZmNiYmExZmM5MjcyZmI2YTRhZWYzYjJjY2IxODFkYTUwZjE1NjcwMDBkXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXAuanNcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImZlZTZjZWZkYWU2YmU2NTUwZFwiLFxuICBcImZlZWRkZWZkYmU4NWZkOGQzY2Q5NDcwMVwiLFxuICBcImZlZWRkZWZkYmU4NWZkOGQzY2U2NTUwZGE2MzYwM1wiLFxuICBcImZlZWRkZWZkZDBhMmZkYWU2YmZkOGQzY2U2NTUwZGE2MzYwM1wiLFxuICBcImZlZWRkZWZkZDBhMmZkYWU2YmZkOGQzY2YxNjkxM2Q5NDgwMThjMmQwNFwiLFxuICBcImZmZjVlYmZlZTZjZWZkZDBhMmZkYWU2YmZkOGQzY2YxNjkxM2Q5NDgwMThjMmQwNFwiLFxuICBcImZmZjVlYmZlZTZjZWZkZDBhMmZkYWU2YmZkOGQzY2YxNjkxM2Q5NDgwMWE2MzYwMzdmMjcwNFwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih0KSB7XG4gIHQgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCB0KSk7XG4gIHJldHVybiBcInJnYihcIlxuICAgICAgKyBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQoLTQuNTQgLSB0ICogKDM1LjM0IC0gdCAqICgyMzgxLjczIC0gdCAqICg2NDAyLjcgLSB0ICogKDcwMjQuNzIgLSB0ICogMjcxMC41NykpKSkpKSkgKyBcIiwgXCJcbiAgICAgICsgTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKDMyLjQ5ICsgdCAqICgxNzAuNzMgKyB0ICogKDUyLjgyIC0gdCAqICgxMzEuNDYgLSB0ICogKDE3Ni41OCAtIHQgKiA2Ny4zNykpKSkpKSkgKyBcIiwgXCJcbiAgICAgICsgTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKDgxLjI0ICsgdCAqICg0NDIuMzYgLSB0ICogKDI0ODIuNDMgLSB0ICogKDYxNjcuMjQgLSB0ICogKDY2MTQuOTQgLSB0ICogMjQ3NS42NykpKSkpKSlcbiAgICAgICsgXCIpXCI7XG59XG4iLCJpbXBvcnQge2N1YmVoZWxpeH0gZnJvbSBcImQzLWNvbG9yXCI7XG5pbXBvcnQge2ludGVycG9sYXRlQ3ViZWhlbGl4TG9uZ30gZnJvbSBcImQzLWludGVycG9sYXRlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGludGVycG9sYXRlQ3ViZWhlbGl4TG9uZyhjdWJlaGVsaXgoMzAwLCAwLjUsIDAuMCksIGN1YmVoZWxpeCgtMjQwLCAwLjUsIDEuMCkpO1xuIiwiaW1wb3J0IHtjdWJlaGVsaXh9IGZyb20gXCJkMy1jb2xvclwiO1xuaW1wb3J0IHtpbnRlcnBvbGF0ZUN1YmVoZWxpeExvbmd9IGZyb20gXCJkMy1pbnRlcnBvbGF0ZVwiO1xuXG5leHBvcnQgdmFyIHdhcm0gPSBpbnRlcnBvbGF0ZUN1YmVoZWxpeExvbmcoY3ViZWhlbGl4KC0xMDAsIDAuNzUsIDAuMzUpLCBjdWJlaGVsaXgoODAsIDEuNTAsIDAuOCkpO1xuXG5leHBvcnQgdmFyIGNvb2wgPSBpbnRlcnBvbGF0ZUN1YmVoZWxpeExvbmcoY3ViZWhlbGl4KDI2MCwgMC43NSwgMC4zNSksIGN1YmVoZWxpeCg4MCwgMS41MCwgMC44KSk7XG5cbnZhciBjID0gY3ViZWhlbGl4KCk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHQpIHtcbiAgaWYgKHQgPCAwIHx8IHQgPiAxKSB0IC09IE1hdGguZmxvb3IodCk7XG4gIHZhciB0cyA9IE1hdGguYWJzKHQgLSAwLjUpO1xuICBjLmggPSAzNjAgKiB0IC0gMTAwO1xuICBjLnMgPSAxLjUgLSAxLjUgKiB0cztcbiAgYy5sID0gMC44IC0gMC45ICogdHM7XG4gIHJldHVybiBjICsgXCJcIjtcbn1cbiIsImltcG9ydCB7cmdifSBmcm9tIFwiZDMtY29sb3JcIjtcblxudmFyIGMgPSByZ2IoKSxcbiAgICBwaV8xXzMgPSBNYXRoLlBJIC8gMyxcbiAgICBwaV8yXzMgPSBNYXRoLlBJICogMiAvIDM7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHQpIHtcbiAgdmFyIHg7XG4gIHQgPSAoMC41IC0gdCkgKiBNYXRoLlBJO1xuICBjLnIgPSAyNTUgKiAoeCA9IE1hdGguc2luKHQpKSAqIHg7XG4gIGMuZyA9IDI1NSAqICh4ID0gTWF0aC5zaW4odCArIHBpXzFfMykpICogeDtcbiAgYy5iID0gMjU1ICogKHggPSBNYXRoLnNpbih0ICsgcGlfMl8zKSkgKiB4O1xuICByZXR1cm4gYyArIFwiXCI7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih0KSB7XG4gIHQgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCB0KSk7XG4gIHJldHVybiBcInJnYihcIlxuICAgICAgKyBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQoMzQuNjEgKyB0ICogKDExNzIuMzMgLSB0ICogKDEwNzkzLjU2IC0gdCAqICgzMzMwMC4xMiAtIHQgKiAoMzgzOTQuNDkgLSB0ICogMTQ4MjUuMDUpKSkpKSkpICsgXCIsIFwiXG4gICAgICArIE1hdGgubWF4KDAsIE1hdGgubWluKDI1NSwgTWF0aC5yb3VuZCgyMy4zMSArIHQgKiAoNTU3LjMzICsgdCAqICgxMjI1LjMzIC0gdCAqICgzNTc0Ljk2IC0gdCAqICgxMDczLjc3ICsgdCAqIDcwNy41NikpKSkpKSkgKyBcIiwgXCJcbiAgICAgICsgTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKDI3LjIgKyB0ICogKDMyMTEuMSAtIHQgKiAoMTUzMjcuOTcgLSB0ICogKDI3ODE0IC0gdCAqICgyMjU2OS4xOCAtIHQgKiA2ODM4LjY2KSkpKSkpKVxuICAgICAgKyBcIilcIjtcbn1cbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuXG5mdW5jdGlvbiByYW1wKHJhbmdlKSB7XG4gIHZhciBuID0gcmFuZ2UubGVuZ3RoO1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHJldHVybiByYW5nZVtNYXRoLm1heCgwLCBNYXRoLm1pbihuIC0gMSwgTWF0aC5mbG9vcih0ICogbikpKV07XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoY29sb3JzKFwiNDQwMTU0NDQwMjU2NDUwNDU3NDUwNTU5NDYwNzVhNDYwODVjNDYwYTVkNDYwYjVlNDcwZDYwNDcwZTYxNDcxMDYzNDcxMTY0NDcxMzY1NDgxNDY3NDgxNjY4NDgxNzY5NDgxODZhNDgxYTZjNDgxYjZkNDgxYzZlNDgxZDZmNDgxZjcwNDgyMDcxNDgyMTczNDgyMzc0NDgyNDc1NDgyNTc2NDgyNjc3NDgyODc4NDgyOTc5NDcyYTdhNDcyYzdhNDcyZDdiNDcyZTdjNDcyZjdkNDYzMDdlNDYzMjdlNDYzMzdmNDYzNDgwNDUzNTgxNDUzNzgxNDUzODgyNDQzOTgzNDQzYTgzNDQzYjg0NDMzZDg0NDMzZTg1NDIzZjg1NDI0MDg2NDI0MTg2NDE0Mjg3NDE0NDg3NDA0NTg4NDA0Njg4M2Y0Nzg4M2Y0ODg5M2U0OTg5M2U0YTg5M2U0YzhhM2Q0ZDhhM2Q0ZThhM2M0ZjhhM2M1MDhiM2I1MThiM2I1MjhiM2E1MzhiM2E1NDhjMzk1NThjMzk1NjhjMzg1ODhjMzg1OThjMzc1YThjMzc1YjhkMzY1YzhkMzY1ZDhkMzU1ZThkMzU1ZjhkMzQ2MDhkMzQ2MThkMzM2MjhkMzM2MzhkMzI2NDhlMzI2NThlMzE2NjhlMzE2NzhlMzE2ODhlMzA2OThlMzA2YThlMmY2YjhlMmY2YzhlMmU2ZDhlMmU2ZThlMmU2ZjhlMmQ3MDhlMmQ3MThlMmM3MThlMmM3MjhlMmM3MzhlMmI3NDhlMmI3NThlMmE3NjhlMmE3NzhlMmE3ODhlMjk3OThlMjk3YThlMjk3YjhlMjg3YzhlMjg3ZDhlMjc3ZThlMjc3ZjhlMjc4MDhlMjY4MThlMjY4MjhlMjY4MjhlMjU4MzhlMjU4NDhlMjU4NThlMjQ4NjhlMjQ4NzhlMjM4ODhlMjM4OThlMjM4YThkMjI4YjhkMjI4YzhkMjI4ZDhkMjE4ZThkMjE4ZjhkMjE5MDhkMjE5MThjMjA5MjhjMjA5MjhjMjA5MzhjMWY5NDhjMWY5NThiMWY5NjhiMWY5NzhiMWY5ODhiMWY5OThhMWY5YThhMWU5YjhhMWU5Yzg5MWU5ZDg5MWY5ZTg5MWY5Zjg4MWZhMDg4MWZhMTg4MWZhMTg3MWZhMjg3MjBhMzg2MjBhNDg2MjFhNTg1MjFhNjg1MjJhNzg1MjJhODg0MjNhOTgzMjRhYTgzMjVhYjgyMjVhYzgyMjZhZDgxMjdhZDgxMjhhZTgwMjlhZjdmMmFiMDdmMmNiMTdlMmRiMjdkMmViMzdjMmZiNDdjMzFiNTdiMzJiNjdhMzRiNjc5MzViNzc5MzdiODc4MzhiOTc3M2FiYTc2M2JiYjc1M2RiYzc0M2ZiYzczNDBiZDcyNDJiZTcxNDRiZjcwNDZjMDZmNDhjMTZlNGFjMTZkNGNjMjZjNGVjMzZiNTBjNDZhNTJjNTY5NTRjNTY4NTZjNjY3NThjNzY1NWFjODY0NWNjODYzNWVjOTYyNjBjYTYwNjNjYjVmNjVjYjVlNjdjYzVjNjljZDViNmNjZDVhNmVjZTU4NzBjZjU3NzNkMDU2NzVkMDU0NzdkMTUzN2FkMTUxN2NkMjUwN2ZkMzRlODFkMzRkODRkNDRiODZkNTQ5ODlkNTQ4OGJkNjQ2OGVkNjQ1OTBkNzQzOTNkNzQxOTVkODQwOThkODNlOWJkOTNjOWRkOTNiYTBkYTM5YTJkYTM3YTVkYjM2YThkYjM0YWFkYzMyYWRkYzMwYjBkZDJmYjJkZDJkYjVkZTJiYjhkZTI5YmFkZTI4YmRkZjI2YzBkZjI1YzJkZjIzYzVlMDIxYzhlMDIwY2FlMTFmY2RlMTFkZDBlMTFjZDJlMjFiZDVlMjFhZDhlMjE5ZGFlMzE5ZGRlMzE4ZGZlMzE4ZTJlNDE4ZTVlNDE5ZTdlNDE5ZWFlNTFhZWNlNTFiZWZlNTFjZjFlNTFkZjRlNjFlZjZlNjIwZjhlNjIxZmJlNzIzZmRlNzI1XCIpKTtcblxuZXhwb3J0IHZhciBtYWdtYSA9IHJhbXAoY29sb3JzKFwiMDAwMDA0MDEwMDA1MDEwMTA2MDEwMTA4MDIwMTA5MDIwMjBiMDIwMjBkMDMwMzBmMDMwMzEyMDQwNDE0MDUwNDE2MDYwNTE4MDYwNTFhMDcwNjFjMDgwNzFlMDkwNzIwMGEwODIyMGIwOTI0MGMwOTI2MGQwYTI5MGUwYjJiMTAwYjJkMTEwYzJmMTIwZDMxMTMwZDM0MTQwZTM2MTUwZTM4MTYwZjNiMTgwZjNkMTkxMDNmMWExMDQyMWMxMDQ0MWQxMTQ3MWUxMTQ5MjAxMTRiMjExMTRlMjIxMTUwMjQxMjUzMjUxMjU1MjcxMjU4MjkxMTVhMmExMTVjMmMxMTVmMmQxMTYxMmYxMTYzMzExMTY1MzMxMDY3MzQxMDY5MzYxMDZiMzgxMDZjMzkwZjZlM2IwZjcwM2QwZjcxM2YwZjcyNDAwZjc0NDIwZjc1NDQwZjc2NDUxMDc3NDcxMDc4NDkxMDc4NGExMDc5NGMxMTdhNGUxMTdiNGYxMjdiNTExMjdjNTIxMzdjNTQxMzdkNTYxNDdkNTcxNTdlNTkxNTdlNWExNjdlNWMxNjdmNWQxNzdmNWYxODdmNjAxODgwNjIxOTgwNjQxYTgwNjUxYTgwNjcxYjgwNjgxYzgxNmExYzgxNmIxZDgxNmQxZDgxNmUxZTgxNzAxZjgxNzIxZjgxNzMyMDgxNzUyMTgxNzYyMTgxNzgyMjgxNzkyMjgyN2IyMzgyN2MyMzgyN2UyNDgyODAyNTgyODEyNTgxODMyNjgxODQyNjgxODYyNzgxODgyNzgxODkyODgxOGIyOTgxOGMyOTgxOGUyYTgxOTAyYTgxOTEyYjgxOTMyYjgwOTQyYzgwOTYyYzgwOTgyZDgwOTkyZDgwOWIyZTdmOWMyZTdmOWUyZjdmYTAyZjdmYTEzMDdlYTMzMDdlYTUzMTdlYTYzMTdkYTgzMjdkYWEzMzdkYWIzMzdjYWQzNDdjYWUzNDdiYjAzNTdiYjIzNTdiYjMzNjdhYjUzNjdhYjczNzc5YjgzNzc5YmEzODc4YmMzOTc4YmQzOTc3YmYzYTc3YzAzYTc2YzIzYjc1YzQzYzc1YzUzYzc0YzczZDczYzgzZTczY2EzZTcyY2MzZjcxY2Q0MDcxY2Y0MDcwZDA0MTZmZDI0MjZmZDM0MzZlZDU0NDZkZDY0NTZjZDg0NTZjZDk0NjZiZGI0NzZhZGM0ODY5ZGU0OTY4ZGY0YTY4ZTA0YzY3ZTI0ZDY2ZTM0ZTY1ZTQ0ZjY0ZTU1MDY0ZTc1MjYzZTg1MzYyZTk1NDYyZWE1NjYxZWI1NzYwZWM1ODYwZWQ1YTVmZWU1YjVlZWY1ZDVlZjA1ZjVlZjE2MDVkZjI2MjVkZjI2NDVjZjM2NTVjZjQ2NzVjZjQ2OTVjZjU2YjVjZjY2YzVjZjY2ZTVjZjc3MDVjZjc3MjVjZjg3NDVjZjg3NjVjZjk3ODVkZjk3OTVkZjk3YjVkZmE3ZDVlZmE3ZjVlZmE4MTVmZmI4MzVmZmI4NTYwZmI4NzYxZmM4OTYxZmM4YTYyZmM4YzYzZmM4ZTY0ZmM5MDY1ZmQ5MjY2ZmQ5NDY3ZmQ5NjY4ZmQ5ODY5ZmQ5YTZhZmQ5YjZiZmU5ZDZjZmU5ZjZkZmVhMTZlZmVhMzZmZmVhNTcxZmVhNzcyZmVhOTczZmVhYTc0ZmVhYzc2ZmVhZTc3ZmViMDc4ZmViMjdhZmViNDdiZmViNjdjZmViNzdlZmViOTdmZmViYjgxZmViZDgyZmViZjg0ZmVjMTg1ZmVjMjg3ZmVjNDg4ZmVjNjhhZmVjODhjZmVjYThkZmVjYzhmZmVjZDkwZmVjZjkyZmVkMTk0ZmVkMzk1ZmVkNTk3ZmVkNzk5ZmVkODlhZmRkYTljZmRkYzllZmRkZWEwZmRlMGExZmRlMmEzZmRlM2E1ZmRlNWE3ZmRlN2E5ZmRlOWFhZmRlYmFjZmNlY2FlZmNlZWIwZmNmMGIyZmNmMmI0ZmNmNGI2ZmNmNmI4ZmNmN2I5ZmNmOWJiZmNmYmJkZmNmZGJmXCIpKTtcblxuZXhwb3J0IHZhciBpbmZlcm5vID0gcmFtcChjb2xvcnMoXCIwMDAwMDQwMTAwMDUwMTAxMDYwMTAxMDgwMjAxMGEwMjAyMGMwMjAyMGUwMzAyMTAwNDAzMTIwNDAzMTQwNTA0MTcwNjA0MTkwNzA1MWIwODA1MWQwOTA2MWYwYTA3MjIwYjA3MjQwYzA4MjYwZDA4MjkwZTA5MmIxMDA5MmQxMTBhMzAxMjBhMzIxNDBiMzQxNTBiMzcxNjBiMzkxODBjM2MxOTBjM2UxYjBjNDExYzBjNDMxZTBjNDUxZjBjNDgyMTBjNGEyMzBjNGMyNDBjNGYyNjBjNTEyODBiNTMyOTBiNTUyYjBiNTcyZDBiNTkyZjBhNWIzMTBhNWMzMjBhNWUzNDBhNWYzNjA5NjEzODA5NjIzOTA5NjMzYjA5NjQzZDA5NjUzZTA5NjY0MDBhNjc0MjBhNjg0NDBhNjg0NTBhNjk0NzBiNmE0OTBiNmE0YTBjNmI0YzBjNmI0ZDBkNmM0ZjBkNmM1MTBlNmM1MjBlNmQ1NDBmNmQ1NTBmNmQ1NzEwNmU1OTEwNmU1YTExNmU1YzEyNmU1ZDEyNmU1ZjEzNmU2MTEzNmU2MjE0NmU2NDE1NmU2NTE1NmU2NzE2NmU2OTE2NmU2YTE3NmU2YzE4NmU2ZDE4NmU2ZjE5NmU3MTE5NmU3MjFhNmU3NDFhNmU3NTFiNmU3NzFjNmQ3ODFjNmQ3YTFkNmQ3YzFkNmQ3ZDFlNmQ3ZjFlNmM4MDFmNmM4MjIwNmM4NDIwNmI4NTIxNmI4NzIxNmI4ODIyNmE4YTIyNmE4YzIzNjk4ZDIzNjk4ZjI0Njk5MDI1Njg5MjI1Njg5MzI2Njc5NTI2Njc5NzI3NjY5ODI3NjY5YTI4NjU5YjI5NjQ5ZDI5NjQ5ZjJhNjNhMDJhNjNhMjJiNjJhMzJjNjFhNTJjNjBhNjJkNjBhODJlNWZhOTJlNWVhYjJmNWVhZDMwNWRhZTMwNWNiMDMxNWJiMTMyNWFiMzMyNWFiNDMzNTliNjM0NThiNzM1NTdiOTM1NTZiYTM2NTViYzM3NTRiZDM4NTNiZjM5NTJjMDNhNTFjMTNhNTBjMzNiNGZjNDNjNGVjNjNkNGRjNzNlNGNjODNmNGJjYTQwNGFjYjQxNDljYzQyNDhjZTQzNDdjZjQ0NDZkMDQ1NDVkMjQ2NDRkMzQ3NDNkNDQ4NDJkNTRhNDFkNzRiM2ZkODRjM2VkOTRkM2RkYTRlM2NkYjUwM2JkZDUxM2FkZTUyMzhkZjUzMzdlMDU1MzZlMTU2MzVlMjU3MzRlMzU5MzNlNDVhMzFlNTVjMzBlNjVkMmZlNzVlMmVlODYwMmRlOTYxMmJlYTYzMmFlYjY0MjllYjY2MjhlYzY3MjZlZDY5MjVlZTZhMjRlZjZjMjNlZjZlMjFmMDZmMjBmMTcxMWZmMTczMWRmMjc0MWNmMzc2MWJmMzc4MTlmNDc5MThmNTdiMTdmNTdkMTVmNjdlMTRmNjgwMTNmNzgyMTJmNzg0MTBmODg1MGZmODg3MGVmODg5MGNmOThiMGJmOThjMGFmOThlMDlmYTkwMDhmYTkyMDdmYTk0MDdmYjk2MDZmYjk3MDZmYjk5MDZmYjliMDZmYjlkMDdmYzlmMDdmY2ExMDhmY2EzMDlmY2E1MGFmY2E2MGNmY2E4MGRmY2FhMGZmY2FjMTFmY2FlMTJmY2IwMTRmY2IyMTZmY2I0MThmYmI2MWFmYmI4MWRmYmJhMWZmYmJjMjFmYmJlMjNmYWMwMjZmYWMyMjhmYWM0MmFmYWM2MmRmOWM3MmZmOWM5MzJmOWNiMzVmOGNkMzdmOGNmM2FmN2QxM2RmN2QzNDBmNmQ1NDNmNmQ3NDZmNWQ5NDlmNWRiNGNmNGRkNGZmNGRmNTNmNGUxNTZmM2UzNWFmM2U1NWRmMmU2NjFmMmU4NjVmMmVhNjlmMWVjNmRmMWVkNzFmMWVmNzVmMWYxNzlmMmYyN2RmMmY0ODJmM2Y1ODZmM2Y2OGFmNGY4OGVmNWY5OTJmNmZhOTZmOGZiOWFmOWZjOWRmYWZkYTFmY2ZmYTRcIikpO1xuXG5leHBvcnQgdmFyIHBsYXNtYSA9IHJhbXAoY29sb3JzKFwiMGQwODg3MTAwNzg4MTMwNzg5MTYwNzhhMTkwNjhjMWIwNjhkMWQwNjhlMjAwNjhmMjIwNjkwMjQwNjkxMjYwNTkxMjgwNTkyMmEwNTkzMmMwNTk0MmUwNTk1MmYwNTk2MzEwNTk3MzMwNTk3MzUwNDk4MzcwNDk5MzgwNDlhM2EwNDlhM2MwNDliM2UwNDljM2YwNDljNDEwNDlkNDMwMzllNDQwMzllNDYwMzlmNDgwMzlmNDkwM2EwNGIwM2ExNGMwMmExNGUwMmEyNTAwMmEyNTEwMmEzNTMwMmEzNTUwMmE0NTYwMWE0NTgwMWE0NTkwMWE1NWIwMWE1NWMwMWE2NWUwMWE2NjAwMWE2NjEwMGE3NjMwMGE3NjQwMGE3NjYwMGE3NjcwMGE4NjkwMGE4NmEwMGE4NmMwMGE4NmUwMGE4NmYwMGE4NzEwMGE4NzIwMWE4NzQwMWE4NzUwMWE4NzcwMWE4NzgwMWE4N2EwMmE4N2IwMmE4N2QwM2E4N2UwM2E4ODAwNGE4ODEwNGE3ODMwNWE3ODQwNWE3ODYwNmE2ODcwN2E2ODgwOGE2OGEwOWE1OGIwYWE1OGQwYmE1OGUwY2E0OGYwZGE0OTEwZWEzOTIwZmEzOTQxMGEyOTUxMWExOTYxM2ExOTgxNGEwOTkxNTlmOWExNjlmOWMxNzllOWQxODlkOWUxOTlkYTAxYTljYTExYjliYTIxZDlhYTMxZTlhYTUxZjk5YTYyMDk4YTcyMTk3YTgyMjk2YWEyMzk1YWIyNDk0YWMyNjk0YWQyNzkzYWUyODkyYjAyOTkxYjEyYTkwYjIyYjhmYjMyYzhlYjQyZThkYjUyZjhjYjYzMDhiYjczMThhYjgzMjg5YmEzMzg4YmIzNDg4YmMzNTg3YmQzNzg2YmUzODg1YmYzOTg0YzAzYTgzYzEzYjgyYzIzYzgxYzMzZDgwYzQzZTdmYzU0MDdlYzY0MTdkYzc0MjdjYzg0MzdiYzk0NDdhY2E0NTdhY2I0Njc5Y2M0Nzc4Y2M0OTc3Y2Q0YTc2Y2U0Yjc1Y2Y0Yzc0ZDA0ZDczZDE0ZTcyZDI0ZjcxZDM1MTcxZDQ1MjcwZDU1MzZmZDU1NDZlZDY1NTZkZDc1NjZjZDg1NzZiZDk1ODZhZGE1YTZhZGE1YjY5ZGI1YzY4ZGM1ZDY3ZGQ1ZTY2ZGU1ZjY1ZGU2MTY0ZGY2MjYzZTA2MzYzZTE2NDYyZTI2NTYxZTI2NjYwZTM2ODVmZTQ2OTVlZTU2YTVkZTU2YjVkZTY2YzVjZTc2ZTViZTc2ZjVhZTg3MDU5ZTk3MTU4ZTk3MjU3ZWE3NDU3ZWI3NTU2ZWI3NjU1ZWM3NzU0ZWQ3OTUzZWQ3YTUyZWU3YjUxZWY3YzUxZWY3ZTUwZjA3ZjRmZjA4MDRlZjE4MTRkZjE4MzRjZjI4NDRiZjM4NTRiZjM4NzRhZjQ4ODQ5ZjQ4OTQ4ZjU4YjQ3ZjU4YzQ2ZjY4ZDQ1ZjY4ZjQ0Zjc5MDQ0Zjc5MTQzZjc5MzQyZjg5NDQxZjg5NTQwZjk5NzNmZjk5ODNlZjk5YTNlZmE5YjNkZmE5YzNjZmE5ZTNiZmI5ZjNhZmJhMTM5ZmJhMjM4ZmNhMzM4ZmNhNTM3ZmNhNjM2ZmNhODM1ZmNhOTM0ZmRhYjMzZmRhYzMzZmRhZTMyZmRhZjMxZmRiMTMwZmRiMjJmZmRiNDJmZmRiNTJlZmViNzJkZmViODJjZmViYTJjZmViYjJiZmViZDJhZmViZTJhZmVjMDI5ZmRjMjI5ZmRjMzI4ZmRjNTI3ZmRjNjI3ZmRjODI3ZmRjYTI2ZmRjYjI2ZmNjZDI1ZmNjZTI1ZmNkMDI1ZmNkMjI1ZmJkMzI0ZmJkNTI0ZmJkNzI0ZmFkODI0ZmFkYTI0ZjlkYzI0ZjlkZDI1ZjhkZjI1ZjhlMTI1ZjdlMjI1ZjdlNDI1ZjZlNjI2ZjZlODI2ZjVlOTI2ZjVlYjI3ZjRlZDI3ZjNlZTI3ZjNmMDI3ZjJmMjI3ZjFmNDI2ZjFmNTI1ZjBmNzI0ZjBmOTIxXCIpKTtcbiIsImltcG9ydCBjcmVhdG9yIGZyb20gXCIuL2NyZWF0b3JcIjtcbmltcG9ydCBzZWxlY3QgZnJvbSBcIi4vc2VsZWN0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUpIHtcbiAgcmV0dXJuIHNlbGVjdChjcmVhdG9yKG5hbWUpLmNhbGwoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KSk7XG59XG4iLCJ2YXIgbmV4dElkID0gMDtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbG9jYWwoKSB7XG4gIHJldHVybiBuZXcgTG9jYWw7XG59XG5cbmZ1bmN0aW9uIExvY2FsKCkge1xuICB0aGlzLl8gPSBcIkBcIiArICgrK25leHRJZCkudG9TdHJpbmcoMzYpO1xufVxuXG5Mb2NhbC5wcm90b3R5cGUgPSBsb2NhbC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBMb2NhbCxcbiAgZ2V0OiBmdW5jdGlvbihub2RlKSB7XG4gICAgdmFyIGlkID0gdGhpcy5fO1xuICAgIHdoaWxlICghKGlkIGluIG5vZGUpKSBpZiAoIShub2RlID0gbm9kZS5wYXJlbnROb2RlKSkgcmV0dXJuO1xuICAgIHJldHVybiBub2RlW2lkXTtcbiAgfSxcbiAgc2V0OiBmdW5jdGlvbihub2RlLCB2YWx1ZSkge1xuICAgIHJldHVybiBub2RlW3RoaXMuX10gPSB2YWx1ZTtcbiAgfSxcbiAgcmVtb3ZlOiBmdW5jdGlvbihub2RlKSB7XG4gICAgcmV0dXJuIHRoaXMuXyBpbiBub2RlICYmIGRlbGV0ZSBub2RlW3RoaXMuX107XG4gIH0sXG4gIHRvU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fO1xuICB9XG59O1xuIiwiaW1wb3J0IHtTZWxlY3Rpb24sIHJvb3R9IGZyb20gXCIuL3NlbGVjdGlvbi9pbmRleFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3Rvcikge1xuICByZXR1cm4gdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiXG4gICAgICA/IG5ldyBTZWxlY3Rpb24oW2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpXSwgW2RvY3VtZW50LmRvY3VtZW50RWxlbWVudF0pXG4gICAgICA6IG5ldyBTZWxlY3Rpb24oW3NlbGVjdG9yID09IG51bGwgPyBbXSA6IHNlbGVjdG9yXSwgcm9vdCk7XG59XG4iLCJpbXBvcnQgc291cmNlRXZlbnQgZnJvbSBcIi4vc291cmNlRXZlbnRcIjtcbmltcG9ydCBwb2ludCBmcm9tIFwiLi9wb2ludFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihub2RlLCB0b3VjaGVzKSB7XG4gIGlmICh0b3VjaGVzID09IG51bGwpIHRvdWNoZXMgPSBzb3VyY2VFdmVudCgpLnRvdWNoZXM7XG5cbiAgZm9yICh2YXIgaSA9IDAsIG4gPSB0b3VjaGVzID8gdG91Y2hlcy5sZW5ndGggOiAwLCBwb2ludHMgPSBuZXcgQXJyYXkobik7IGkgPCBuOyArK2kpIHtcbiAgICBwb2ludHNbaV0gPSBwb2ludChub2RlLCB0b3VjaGVzW2ldKTtcbiAgfVxuXG4gIHJldHVybiBwb2ludHM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbiBjb25zdGFudCgpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImV4cG9ydCB2YXIgYWJzID0gTWF0aC5hYnM7XG5leHBvcnQgdmFyIGF0YW4yID0gTWF0aC5hdGFuMjtcbmV4cG9ydCB2YXIgY29zID0gTWF0aC5jb3M7XG5leHBvcnQgdmFyIG1heCA9IE1hdGgubWF4O1xuZXhwb3J0IHZhciBtaW4gPSBNYXRoLm1pbjtcbmV4cG9ydCB2YXIgc2luID0gTWF0aC5zaW47XG5leHBvcnQgdmFyIHNxcnQgPSBNYXRoLnNxcnQ7XG5cbmV4cG9ydCB2YXIgZXBzaWxvbiA9IDFlLTEyO1xuZXhwb3J0IHZhciBwaSA9IE1hdGguUEk7XG5leHBvcnQgdmFyIGhhbGZQaSA9IHBpIC8gMjtcbmV4cG9ydCB2YXIgdGF1ID0gMiAqIHBpO1xuXG5leHBvcnQgZnVuY3Rpb24gYWNvcyh4KSB7XG4gIHJldHVybiB4ID4gMSA/IDAgOiB4IDwgLTEgPyBwaSA6IE1hdGguYWNvcyh4KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzaW4oeCkge1xuICByZXR1cm4geCA+PSAxID8gaGFsZlBpIDogeCA8PSAtMSA/IC1oYWxmUGkgOiBNYXRoLmFzaW4oeCk7XG59XG4iLCJpbXBvcnQge3BhdGh9IGZyb20gXCJkMy1wYXRoXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnQuanNcIjtcbmltcG9ydCB7YWJzLCBhY29zLCBhc2luLCBhdGFuMiwgY29zLCBlcHNpbG9uLCBoYWxmUGksIG1heCwgbWluLCBwaSwgc2luLCBzcXJ0LCB0YXV9IGZyb20gXCIuL21hdGguanNcIjtcblxuZnVuY3Rpb24gYXJjSW5uZXJSYWRpdXMoZCkge1xuICByZXR1cm4gZC5pbm5lclJhZGl1cztcbn1cblxuZnVuY3Rpb24gYXJjT3V0ZXJSYWRpdXMoZCkge1xuICByZXR1cm4gZC5vdXRlclJhZGl1cztcbn1cblxuZnVuY3Rpb24gYXJjU3RhcnRBbmdsZShkKSB7XG4gIHJldHVybiBkLnN0YXJ0QW5nbGU7XG59XG5cbmZ1bmN0aW9uIGFyY0VuZEFuZ2xlKGQpIHtcbiAgcmV0dXJuIGQuZW5kQW5nbGU7XG59XG5cbmZ1bmN0aW9uIGFyY1BhZEFuZ2xlKGQpIHtcbiAgcmV0dXJuIGQgJiYgZC5wYWRBbmdsZTsgLy8gTm90ZTogb3B0aW9uYWwhXG59XG5cbmZ1bmN0aW9uIGludGVyc2VjdCh4MCwgeTAsIHgxLCB5MSwgeDIsIHkyLCB4MywgeTMpIHtcbiAgdmFyIHgxMCA9IHgxIC0geDAsIHkxMCA9IHkxIC0geTAsXG4gICAgICB4MzIgPSB4MyAtIHgyLCB5MzIgPSB5MyAtIHkyLFxuICAgICAgdCA9IHkzMiAqIHgxMCAtIHgzMiAqIHkxMDtcbiAgaWYgKHQgKiB0IDwgZXBzaWxvbikgcmV0dXJuO1xuICB0ID0gKHgzMiAqICh5MCAtIHkyKSAtIHkzMiAqICh4MCAtIHgyKSkgLyB0O1xuICByZXR1cm4gW3gwICsgdCAqIHgxMCwgeTAgKyB0ICogeTEwXTtcbn1cblxuLy8gQ29tcHV0ZSBwZXJwZW5kaWN1bGFyIG9mZnNldCBsaW5lIG9mIGxlbmd0aCByYy5cbi8vIGh0dHA6Ly9tYXRod29ybGQud29sZnJhbS5jb20vQ2lyY2xlLUxpbmVJbnRlcnNlY3Rpb24uaHRtbFxuZnVuY3Rpb24gY29ybmVyVGFuZ2VudHMoeDAsIHkwLCB4MSwgeTEsIHIxLCByYywgY3cpIHtcbiAgdmFyIHgwMSA9IHgwIC0geDEsXG4gICAgICB5MDEgPSB5MCAtIHkxLFxuICAgICAgbG8gPSAoY3cgPyByYyA6IC1yYykgLyBzcXJ0KHgwMSAqIHgwMSArIHkwMSAqIHkwMSksXG4gICAgICBveCA9IGxvICogeTAxLFxuICAgICAgb3kgPSAtbG8gKiB4MDEsXG4gICAgICB4MTEgPSB4MCArIG94LFxuICAgICAgeTExID0geTAgKyBveSxcbiAgICAgIHgxMCA9IHgxICsgb3gsXG4gICAgICB5MTAgPSB5MSArIG95LFxuICAgICAgeDAwID0gKHgxMSArIHgxMCkgLyAyLFxuICAgICAgeTAwID0gKHkxMSArIHkxMCkgLyAyLFxuICAgICAgZHggPSB4MTAgLSB4MTEsXG4gICAgICBkeSA9IHkxMCAtIHkxMSxcbiAgICAgIGQyID0gZHggKiBkeCArIGR5ICogZHksXG4gICAgICByID0gcjEgLSByYyxcbiAgICAgIEQgPSB4MTEgKiB5MTAgLSB4MTAgKiB5MTEsXG4gICAgICBkID0gKGR5IDwgMCA/IC0xIDogMSkgKiBzcXJ0KG1heCgwLCByICogciAqIGQyIC0gRCAqIEQpKSxcbiAgICAgIGN4MCA9IChEICogZHkgLSBkeCAqIGQpIC8gZDIsXG4gICAgICBjeTAgPSAoLUQgKiBkeCAtIGR5ICogZCkgLyBkMixcbiAgICAgIGN4MSA9IChEICogZHkgKyBkeCAqIGQpIC8gZDIsXG4gICAgICBjeTEgPSAoLUQgKiBkeCArIGR5ICogZCkgLyBkMixcbiAgICAgIGR4MCA9IGN4MCAtIHgwMCxcbiAgICAgIGR5MCA9IGN5MCAtIHkwMCxcbiAgICAgIGR4MSA9IGN4MSAtIHgwMCxcbiAgICAgIGR5MSA9IGN5MSAtIHkwMDtcblxuICAvLyBQaWNrIHRoZSBjbG9zZXIgb2YgdGhlIHR3byBpbnRlcnNlY3Rpb24gcG9pbnRzLlxuICAvLyBUT0RPIElzIHRoZXJlIGEgZmFzdGVyIHdheSB0byBkZXRlcm1pbmUgd2hpY2ggaW50ZXJzZWN0aW9uIHRvIHVzZT9cbiAgaWYgKGR4MCAqIGR4MCArIGR5MCAqIGR5MCA+IGR4MSAqIGR4MSArIGR5MSAqIGR5MSkgY3gwID0gY3gxLCBjeTAgPSBjeTE7XG5cbiAgcmV0dXJuIHtcbiAgICBjeDogY3gwLFxuICAgIGN5OiBjeTAsXG4gICAgeDAxOiAtb3gsXG4gICAgeTAxOiAtb3ksXG4gICAgeDExOiBjeDAgKiAocjEgLyByIC0gMSksXG4gICAgeTExOiBjeTAgKiAocjEgLyByIC0gMSlcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBpbm5lclJhZGl1cyA9IGFyY0lubmVyUmFkaXVzLFxuICAgICAgb3V0ZXJSYWRpdXMgPSBhcmNPdXRlclJhZGl1cyxcbiAgICAgIGNvcm5lclJhZGl1cyA9IGNvbnN0YW50KDApLFxuICAgICAgcGFkUmFkaXVzID0gbnVsbCxcbiAgICAgIHN0YXJ0QW5nbGUgPSBhcmNTdGFydEFuZ2xlLFxuICAgICAgZW5kQW5nbGUgPSBhcmNFbmRBbmdsZSxcbiAgICAgIHBhZEFuZ2xlID0gYXJjUGFkQW5nbGUsXG4gICAgICBjb250ZXh0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBhcmMoKSB7XG4gICAgdmFyIGJ1ZmZlcixcbiAgICAgICAgcixcbiAgICAgICAgcjAgPSAraW5uZXJSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgcjEgPSArb3V0ZXJSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgYTAgPSBzdGFydEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgLSBoYWxmUGksXG4gICAgICAgIGExID0gZW5kQW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSAtIGhhbGZQaSxcbiAgICAgICAgZGEgPSBhYnMoYTEgLSBhMCksXG4gICAgICAgIGN3ID0gYTEgPiBhMDtcblxuICAgIGlmICghY29udGV4dCkgY29udGV4dCA9IGJ1ZmZlciA9IHBhdGgoKTtcblxuICAgIC8vIEVuc3VyZSB0aGF0IHRoZSBvdXRlciByYWRpdXMgaXMgYWx3YXlzIGxhcmdlciB0aGFuIHRoZSBpbm5lciByYWRpdXMuXG4gICAgaWYgKHIxIDwgcjApIHIgPSByMSwgcjEgPSByMCwgcjAgPSByO1xuXG4gICAgLy8gSXMgaXQgYSBwb2ludD9cbiAgICBpZiAoIShyMSA+IGVwc2lsb24pKSBjb250ZXh0Lm1vdmVUbygwLCAwKTtcblxuICAgIC8vIE9yIGlzIGl0IGEgY2lyY2xlIG9yIGFubnVsdXM/XG4gICAgZWxzZSBpZiAoZGEgPiB0YXUgLSBlcHNpbG9uKSB7XG4gICAgICBjb250ZXh0Lm1vdmVUbyhyMSAqIGNvcyhhMCksIHIxICogc2luKGEwKSk7XG4gICAgICBjb250ZXh0LmFyYygwLCAwLCByMSwgYTAsIGExLCAhY3cpO1xuICAgICAgaWYgKHIwID4gZXBzaWxvbikge1xuICAgICAgICBjb250ZXh0Lm1vdmVUbyhyMCAqIGNvcyhhMSksIHIwICogc2luKGExKSk7XG4gICAgICAgIGNvbnRleHQuYXJjKDAsIDAsIHIwLCBhMSwgYTAsIGN3KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBPciBpcyBpdCBhIGNpcmN1bGFyIG9yIGFubnVsYXIgc2VjdG9yP1xuICAgIGVsc2Uge1xuICAgICAgdmFyIGEwMSA9IGEwLFxuICAgICAgICAgIGExMSA9IGExLFxuICAgICAgICAgIGEwMCA9IGEwLFxuICAgICAgICAgIGExMCA9IGExLFxuICAgICAgICAgIGRhMCA9IGRhLFxuICAgICAgICAgIGRhMSA9IGRhLFxuICAgICAgICAgIGFwID0gcGFkQW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSAvIDIsXG4gICAgICAgICAgcnAgPSAoYXAgPiBlcHNpbG9uKSAmJiAocGFkUmFkaXVzID8gK3BhZFJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogc3FydChyMCAqIHIwICsgcjEgKiByMSkpLFxuICAgICAgICAgIHJjID0gbWluKGFicyhyMSAtIHIwKSAvIDIsICtjb3JuZXJSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSksXG4gICAgICAgICAgcmMwID0gcmMsXG4gICAgICAgICAgcmMxID0gcmMsXG4gICAgICAgICAgdDAsXG4gICAgICAgICAgdDE7XG5cbiAgICAgIC8vIEFwcGx5IHBhZGRpbmc/IE5vdGUgdGhhdCBzaW5jZSByMSDiiaUgcjAsIGRhMSDiiaUgZGEwLlxuICAgICAgaWYgKHJwID4gZXBzaWxvbikge1xuICAgICAgICB2YXIgcDAgPSBhc2luKHJwIC8gcjAgKiBzaW4oYXApKSxcbiAgICAgICAgICAgIHAxID0gYXNpbihycCAvIHIxICogc2luKGFwKSk7XG4gICAgICAgIGlmICgoZGEwIC09IHAwICogMikgPiBlcHNpbG9uKSBwMCAqPSAoY3cgPyAxIDogLTEpLCBhMDAgKz0gcDAsIGExMCAtPSBwMDtcbiAgICAgICAgZWxzZSBkYTAgPSAwLCBhMDAgPSBhMTAgPSAoYTAgKyBhMSkgLyAyO1xuICAgICAgICBpZiAoKGRhMSAtPSBwMSAqIDIpID4gZXBzaWxvbikgcDEgKj0gKGN3ID8gMSA6IC0xKSwgYTAxICs9IHAxLCBhMTEgLT0gcDE7XG4gICAgICAgIGVsc2UgZGExID0gMCwgYTAxID0gYTExID0gKGEwICsgYTEpIC8gMjtcbiAgICAgIH1cblxuICAgICAgdmFyIHgwMSA9IHIxICogY29zKGEwMSksXG4gICAgICAgICAgeTAxID0gcjEgKiBzaW4oYTAxKSxcbiAgICAgICAgICB4MTAgPSByMCAqIGNvcyhhMTApLFxuICAgICAgICAgIHkxMCA9IHIwICogc2luKGExMCk7XG5cbiAgICAgIC8vIEFwcGx5IHJvdW5kZWQgY29ybmVycz9cbiAgICAgIGlmIChyYyA+IGVwc2lsb24pIHtcbiAgICAgICAgdmFyIHgxMSA9IHIxICogY29zKGExMSksXG4gICAgICAgICAgICB5MTEgPSByMSAqIHNpbihhMTEpLFxuICAgICAgICAgICAgeDAwID0gcjAgKiBjb3MoYTAwKSxcbiAgICAgICAgICAgIHkwMCA9IHIwICogc2luKGEwMCksXG4gICAgICAgICAgICBvYztcblxuICAgICAgICAvLyBSZXN0cmljdCB0aGUgY29ybmVyIHJhZGl1cyBhY2NvcmRpbmcgdG8gdGhlIHNlY3RvciBhbmdsZS5cbiAgICAgICAgaWYgKGRhIDwgcGkgJiYgKG9jID0gaW50ZXJzZWN0KHgwMSwgeTAxLCB4MDAsIHkwMCwgeDExLCB5MTEsIHgxMCwgeTEwKSkpIHtcbiAgICAgICAgICB2YXIgYXggPSB4MDEgLSBvY1swXSxcbiAgICAgICAgICAgICAgYXkgPSB5MDEgLSBvY1sxXSxcbiAgICAgICAgICAgICAgYnggPSB4MTEgLSBvY1swXSxcbiAgICAgICAgICAgICAgYnkgPSB5MTEgLSBvY1sxXSxcbiAgICAgICAgICAgICAga2MgPSAxIC8gc2luKGFjb3MoKGF4ICogYnggKyBheSAqIGJ5KSAvIChzcXJ0KGF4ICogYXggKyBheSAqIGF5KSAqIHNxcnQoYnggKiBieCArIGJ5ICogYnkpKSkgLyAyKSxcbiAgICAgICAgICAgICAgbGMgPSBzcXJ0KG9jWzBdICogb2NbMF0gKyBvY1sxXSAqIG9jWzFdKTtcbiAgICAgICAgICByYzAgPSBtaW4ocmMsIChyMCAtIGxjKSAvIChrYyAtIDEpKTtcbiAgICAgICAgICByYzEgPSBtaW4ocmMsIChyMSAtIGxjKSAvIChrYyArIDEpKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBJcyB0aGUgc2VjdG9yIGNvbGxhcHNlZCB0byBhIGxpbmU/XG4gICAgICBpZiAoIShkYTEgPiBlcHNpbG9uKSkgY29udGV4dC5tb3ZlVG8oeDAxLCB5MDEpO1xuXG4gICAgICAvLyBEb2VzIHRoZSBzZWN0b3LigJlzIG91dGVyIHJpbmcgaGF2ZSByb3VuZGVkIGNvcm5lcnM/XG4gICAgICBlbHNlIGlmIChyYzEgPiBlcHNpbG9uKSB7XG4gICAgICAgIHQwID0gY29ybmVyVGFuZ2VudHMoeDAwLCB5MDAsIHgwMSwgeTAxLCByMSwgcmMxLCBjdyk7XG4gICAgICAgIHQxID0gY29ybmVyVGFuZ2VudHMoeDExLCB5MTEsIHgxMCwgeTEwLCByMSwgcmMxLCBjdyk7XG5cbiAgICAgICAgY29udGV4dC5tb3ZlVG8odDAuY3ggKyB0MC54MDEsIHQwLmN5ICsgdDAueTAxKTtcblxuICAgICAgICAvLyBIYXZlIHRoZSBjb3JuZXJzIG1lcmdlZD9cbiAgICAgICAgaWYgKHJjMSA8IHJjKSBjb250ZXh0LmFyYyh0MC5jeCwgdDAuY3ksIHJjMSwgYXRhbjIodDAueTAxLCB0MC54MDEpLCBhdGFuMih0MS55MDEsIHQxLngwMSksICFjdyk7XG5cbiAgICAgICAgLy8gT3RoZXJ3aXNlLCBkcmF3IHRoZSB0d28gY29ybmVycyBhbmQgdGhlIHJpbmcuXG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIGNvbnRleHQuYXJjKHQwLmN4LCB0MC5jeSwgcmMxLCBhdGFuMih0MC55MDEsIHQwLngwMSksIGF0YW4yKHQwLnkxMSwgdDAueDExKSwgIWN3KTtcbiAgICAgICAgICBjb250ZXh0LmFyYygwLCAwLCByMSwgYXRhbjIodDAuY3kgKyB0MC55MTEsIHQwLmN4ICsgdDAueDExKSwgYXRhbjIodDEuY3kgKyB0MS55MTEsIHQxLmN4ICsgdDEueDExKSwgIWN3KTtcbiAgICAgICAgICBjb250ZXh0LmFyYyh0MS5jeCwgdDEuY3ksIHJjMSwgYXRhbjIodDEueTExLCB0MS54MTEpLCBhdGFuMih0MS55MDEsIHQxLngwMSksICFjdyk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gT3IgaXMgdGhlIG91dGVyIHJpbmcganVzdCBhIGNpcmN1bGFyIGFyYz9cbiAgICAgIGVsc2UgY29udGV4dC5tb3ZlVG8oeDAxLCB5MDEpLCBjb250ZXh0LmFyYygwLCAwLCByMSwgYTAxLCBhMTEsICFjdyk7XG5cbiAgICAgIC8vIElzIHRoZXJlIG5vIGlubmVyIHJpbmcsIGFuZCBpdOKAmXMgYSBjaXJjdWxhciBzZWN0b3I/XG4gICAgICAvLyBPciBwZXJoYXBzIGl04oCZcyBhbiBhbm51bGFyIHNlY3RvciBjb2xsYXBzZWQgZHVlIHRvIHBhZGRpbmc/XG4gICAgICBpZiAoIShyMCA+IGVwc2lsb24pIHx8ICEoZGEwID4gZXBzaWxvbikpIGNvbnRleHQubGluZVRvKHgxMCwgeTEwKTtcblxuICAgICAgLy8gRG9lcyB0aGUgc2VjdG9y4oCZcyBpbm5lciByaW5nIChvciBwb2ludCkgaGF2ZSByb3VuZGVkIGNvcm5lcnM/XG4gICAgICBlbHNlIGlmIChyYzAgPiBlcHNpbG9uKSB7XG4gICAgICAgIHQwID0gY29ybmVyVGFuZ2VudHMoeDEwLCB5MTAsIHgxMSwgeTExLCByMCwgLXJjMCwgY3cpO1xuICAgICAgICB0MSA9IGNvcm5lclRhbmdlbnRzKHgwMSwgeTAxLCB4MDAsIHkwMCwgcjAsIC1yYzAsIGN3KTtcblxuICAgICAgICBjb250ZXh0LmxpbmVUbyh0MC5jeCArIHQwLngwMSwgdDAuY3kgKyB0MC55MDEpO1xuXG4gICAgICAgIC8vIEhhdmUgdGhlIGNvcm5lcnMgbWVyZ2VkP1xuICAgICAgICBpZiAocmMwIDwgcmMpIGNvbnRleHQuYXJjKHQwLmN4LCB0MC5jeSwgcmMwLCBhdGFuMih0MC55MDEsIHQwLngwMSksIGF0YW4yKHQxLnkwMSwgdDEueDAxKSwgIWN3KTtcblxuICAgICAgICAvLyBPdGhlcndpc2UsIGRyYXcgdGhlIHR3byBjb3JuZXJzIGFuZCB0aGUgcmluZy5cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgY29udGV4dC5hcmModDAuY3gsIHQwLmN5LCByYzAsIGF0YW4yKHQwLnkwMSwgdDAueDAxKSwgYXRhbjIodDAueTExLCB0MC54MTEpLCAhY3cpO1xuICAgICAgICAgIGNvbnRleHQuYXJjKDAsIDAsIHIwLCBhdGFuMih0MC5jeSArIHQwLnkxMSwgdDAuY3ggKyB0MC54MTEpLCBhdGFuMih0MS5jeSArIHQxLnkxMSwgdDEuY3ggKyB0MS54MTEpLCBjdyk7XG4gICAgICAgICAgY29udGV4dC5hcmModDEuY3gsIHQxLmN5LCByYzAsIGF0YW4yKHQxLnkxMSwgdDEueDExKSwgYXRhbjIodDEueTAxLCB0MS54MDEpLCAhY3cpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIE9yIGlzIHRoZSBpbm5lciByaW5nIGp1c3QgYSBjaXJjdWxhciBhcmM/XG4gICAgICBlbHNlIGNvbnRleHQuYXJjKDAsIDAsIHIwLCBhMTAsIGEwMCwgY3cpO1xuICAgIH1cblxuICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG5cbiAgICBpZiAoYnVmZmVyKSByZXR1cm4gY29udGV4dCA9IG51bGwsIGJ1ZmZlciArIFwiXCIgfHwgbnVsbDtcbiAgfVxuXG4gIGFyYy5jZW50cm9pZCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciByID0gKCtpbm5lclJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpICsgK291dGVyUmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIC8gMixcbiAgICAgICAgYSA9ICgrc3RhcnRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpICsgK2VuZEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIC8gMiAtIHBpIC8gMjtcbiAgICByZXR1cm4gW2NvcyhhKSAqIHIsIHNpbihhKSAqIHJdO1xuICB9O1xuXG4gIGFyYy5pbm5lclJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpbm5lclJhZGl1cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmMpIDogaW5uZXJSYWRpdXM7XG4gIH07XG5cbiAgYXJjLm91dGVyUmFkaXVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG91dGVyUmFkaXVzID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGFyYykgOiBvdXRlclJhZGl1cztcbiAgfTtcblxuICBhcmMuY29ybmVyUmFkaXVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNvcm5lclJhZGl1cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmMpIDogY29ybmVyUmFkaXVzO1xuICB9O1xuXG4gIGFyYy5wYWRSYWRpdXMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkUmFkaXVzID0gXyA9PSBudWxsID8gbnVsbCA6IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmMpIDogcGFkUmFkaXVzO1xuICB9O1xuXG4gIGFyYy5zdGFydEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHN0YXJ0QW5nbGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgYXJjKSA6IHN0YXJ0QW5nbGU7XG4gIH07XG5cbiAgYXJjLmVuZEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGVuZEFuZ2xlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGFyYykgOiBlbmRBbmdsZTtcbiAgfTtcblxuICBhcmMucGFkQW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkQW5nbGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgYXJjKSA6IHBhZEFuZ2xlO1xuICB9O1xuXG4gIGFyYy5jb250ZXh0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKChjb250ZXh0ID0gXyA9PSBudWxsID8gbnVsbCA6IF8pLCBhcmMpIDogY29udGV4dDtcbiAgfTtcblxuICByZXR1cm4gYXJjO1xufVxuIiwiZnVuY3Rpb24gTGluZWFyKGNvbnRleHQpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG59XG5cbkxpbmVhci5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fbGluZSB8fCAodGhpcy5fbGluZSAhPT0gMCAmJiB0aGlzLl9wb2ludCA9PT0gMSkpIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8oeCwgeSkgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh4LCB5KTsgYnJlYWs7XG4gICAgICBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgLy8gcHJvY2VlZFxuICAgICAgZGVmYXVsdDogdGhpcy5fY29udGV4dC5saW5lVG8oeCwgeSk7IGJyZWFrO1xuICAgIH1cbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29udGV4dCkge1xuICByZXR1cm4gbmV3IExpbmVhcihjb250ZXh0KTtcbn1cbiIsImV4cG9ydCBmdW5jdGlvbiB4KHApIHtcbiAgcmV0dXJuIHBbMF07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB5KHApIHtcbiAgcmV0dXJuIHBbMV07XG59XG4iLCJpbXBvcnQge3BhdGh9IGZyb20gXCJkMy1wYXRoXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnQuanNcIjtcbmltcG9ydCBjdXJ2ZUxpbmVhciBmcm9tIFwiLi9jdXJ2ZS9saW5lYXIuanNcIjtcbmltcG9ydCB7eCBhcyBwb2ludFgsIHkgYXMgcG9pbnRZfSBmcm9tIFwiLi9wb2ludC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHggPSBwb2ludFgsXG4gICAgICB5ID0gcG9pbnRZLFxuICAgICAgZGVmaW5lZCA9IGNvbnN0YW50KHRydWUpLFxuICAgICAgY29udGV4dCA9IG51bGwsXG4gICAgICBjdXJ2ZSA9IGN1cnZlTGluZWFyLFxuICAgICAgb3V0cHV0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBsaW5lKGRhdGEpIHtcbiAgICB2YXIgaSxcbiAgICAgICAgbiA9IGRhdGEubGVuZ3RoLFxuICAgICAgICBkLFxuICAgICAgICBkZWZpbmVkMCA9IGZhbHNlLFxuICAgICAgICBidWZmZXI7XG5cbiAgICBpZiAoY29udGV4dCA9PSBudWxsKSBvdXRwdXQgPSBjdXJ2ZShidWZmZXIgPSBwYXRoKCkpO1xuXG4gICAgZm9yIChpID0gMDsgaSA8PSBuOyArK2kpIHtcbiAgICAgIGlmICghKGkgPCBuICYmIGRlZmluZWQoZCA9IGRhdGFbaV0sIGksIGRhdGEpKSA9PT0gZGVmaW5lZDApIHtcbiAgICAgICAgaWYgKGRlZmluZWQwID0gIWRlZmluZWQwKSBvdXRwdXQubGluZVN0YXJ0KCk7XG4gICAgICAgIGVsc2Ugb3V0cHV0LmxpbmVFbmQoKTtcbiAgICAgIH1cbiAgICAgIGlmIChkZWZpbmVkMCkgb3V0cHV0LnBvaW50KCt4KGQsIGksIGRhdGEpLCAreShkLCBpLCBkYXRhKSk7XG4gICAgfVxuXG4gICAgaWYgKGJ1ZmZlcikgcmV0dXJuIG91dHB1dCA9IG51bGwsIGJ1ZmZlciArIFwiXCIgfHwgbnVsbDtcbiAgfVxuXG4gIGxpbmUueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGxpbmUpIDogeDtcbiAgfTtcblxuICBsaW5lLnkgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBsaW5lKSA6IHk7XG4gIH07XG5cbiAgbGluZS5kZWZpbmVkID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGRlZmluZWQgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCEhXyksIGxpbmUpIDogZGVmaW5lZDtcbiAgfTtcblxuICBsaW5lLmN1cnZlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGN1cnZlID0gXywgY29udGV4dCAhPSBudWxsICYmIChvdXRwdXQgPSBjdXJ2ZShjb250ZXh0KSksIGxpbmUpIDogY3VydmU7XG4gIH07XG5cbiAgbGluZS5jb250ZXh0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKF8gPT0gbnVsbCA/IGNvbnRleHQgPSBvdXRwdXQgPSBudWxsIDogb3V0cHV0ID0gY3VydmUoY29udGV4dCA9IF8pLCBsaW5lKSA6IGNvbnRleHQ7XG4gIH07XG5cbiAgcmV0dXJuIGxpbmU7XG59XG4iLCJpbXBvcnQge3BhdGh9IGZyb20gXCJkMy1wYXRoXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnQuanNcIjtcbmltcG9ydCBjdXJ2ZUxpbmVhciBmcm9tIFwiLi9jdXJ2ZS9saW5lYXIuanNcIjtcbmltcG9ydCBsaW5lIGZyb20gXCIuL2xpbmUuanNcIjtcbmltcG9ydCB7eCBhcyBwb2ludFgsIHkgYXMgcG9pbnRZfSBmcm9tIFwiLi9wb2ludC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHgwID0gcG9pbnRYLFxuICAgICAgeDEgPSBudWxsLFxuICAgICAgeTAgPSBjb25zdGFudCgwKSxcbiAgICAgIHkxID0gcG9pbnRZLFxuICAgICAgZGVmaW5lZCA9IGNvbnN0YW50KHRydWUpLFxuICAgICAgY29udGV4dCA9IG51bGwsXG4gICAgICBjdXJ2ZSA9IGN1cnZlTGluZWFyLFxuICAgICAgb3V0cHV0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBhcmVhKGRhdGEpIHtcbiAgICB2YXIgaSxcbiAgICAgICAgaixcbiAgICAgICAgayxcbiAgICAgICAgbiA9IGRhdGEubGVuZ3RoLFxuICAgICAgICBkLFxuICAgICAgICBkZWZpbmVkMCA9IGZhbHNlLFxuICAgICAgICBidWZmZXIsXG4gICAgICAgIHgweiA9IG5ldyBBcnJheShuKSxcbiAgICAgICAgeTB6ID0gbmV3IEFycmF5KG4pO1xuXG4gICAgaWYgKGNvbnRleHQgPT0gbnVsbCkgb3V0cHV0ID0gY3VydmUoYnVmZmVyID0gcGF0aCgpKTtcblxuICAgIGZvciAoaSA9IDA7IGkgPD0gbjsgKytpKSB7XG4gICAgICBpZiAoIShpIDwgbiAmJiBkZWZpbmVkKGQgPSBkYXRhW2ldLCBpLCBkYXRhKSkgPT09IGRlZmluZWQwKSB7XG4gICAgICAgIGlmIChkZWZpbmVkMCA9ICFkZWZpbmVkMCkge1xuICAgICAgICAgIGogPSBpO1xuICAgICAgICAgIG91dHB1dC5hcmVhU3RhcnQoKTtcbiAgICAgICAgICBvdXRwdXQubGluZVN0YXJ0KCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb3V0cHV0LmxpbmVFbmQoKTtcbiAgICAgICAgICBvdXRwdXQubGluZVN0YXJ0KCk7XG4gICAgICAgICAgZm9yIChrID0gaSAtIDE7IGsgPj0gajsgLS1rKSB7XG4gICAgICAgICAgICBvdXRwdXQucG9pbnQoeDB6W2tdLCB5MHpba10pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBvdXRwdXQubGluZUVuZCgpO1xuICAgICAgICAgIG91dHB1dC5hcmVhRW5kKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChkZWZpbmVkMCkge1xuICAgICAgICB4MHpbaV0gPSAreDAoZCwgaSwgZGF0YSksIHkweltpXSA9ICt5MChkLCBpLCBkYXRhKTtcbiAgICAgICAgb3V0cHV0LnBvaW50KHgxID8gK3gxKGQsIGksIGRhdGEpIDogeDB6W2ldLCB5MSA/ICt5MShkLCBpLCBkYXRhKSA6IHkweltpXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGJ1ZmZlcikgcmV0dXJuIG91dHB1dCA9IG51bGwsIGJ1ZmZlciArIFwiXCIgfHwgbnVsbDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFyZWFsaW5lKCkge1xuICAgIHJldHVybiBsaW5lKCkuZGVmaW5lZChkZWZpbmVkKS5jdXJ2ZShjdXJ2ZSkuY29udGV4dChjb250ZXh0KTtcbiAgfVxuXG4gIGFyZWEueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4MCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCB4MSA9IG51bGwsIGFyZWEpIDogeDA7XG4gIH07XG5cbiAgYXJlYS54MCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4MCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmVhKSA6IHgwO1xuICB9O1xuXG4gIGFyZWEueDEgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeDEgPSBfID09IG51bGwgPyBudWxsIDogdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGFyZWEpIDogeDE7XG4gIH07XG5cbiAgYXJlYS55ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkwID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHkxID0gbnVsbCwgYXJlYSkgOiB5MDtcbiAgfTtcblxuICBhcmVhLnkwID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkwID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGFyZWEpIDogeTA7XG4gIH07XG5cbiAgYXJlYS55MSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh5MSA9IF8gPT0gbnVsbCA/IG51bGwgOiB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgYXJlYSkgOiB5MTtcbiAgfTtcblxuICBhcmVhLmxpbmVYMCA9XG4gIGFyZWEubGluZVkwID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGFyZWFsaW5lKCkueCh4MCkueSh5MCk7XG4gIH07XG5cbiAgYXJlYS5saW5lWTEgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gYXJlYWxpbmUoKS54KHgwKS55KHkxKTtcbiAgfTtcblxuICBhcmVhLmxpbmVYMSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBhcmVhbGluZSgpLngoeDEpLnkoeTApO1xuICB9O1xuXG4gIGFyZWEuZGVmaW5lZCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChkZWZpbmVkID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCghIV8pLCBhcmVhKSA6IGRlZmluZWQ7XG4gIH07XG5cbiAgYXJlYS5jdXJ2ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjdXJ2ZSA9IF8sIGNvbnRleHQgIT0gbnVsbCAmJiAob3V0cHV0ID0gY3VydmUoY29udGV4dCkpLCBhcmVhKSA6IGN1cnZlO1xuICB9O1xuXG4gIGFyZWEuY29udGV4dCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChfID09IG51bGwgPyBjb250ZXh0ID0gb3V0cHV0ID0gbnVsbCA6IG91dHB1dCA9IGN1cnZlKGNvbnRleHQgPSBfKSwgYXJlYSkgOiBjb250ZXh0O1xuICB9O1xuXG4gIHJldHVybiBhcmVhO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICByZXR1cm4gYiA8IGEgPyAtMSA6IGIgPiBhID8gMSA6IGIgPj0gYSA/IDAgOiBOYU47XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihkKSB7XG4gIHJldHVybiBkO1xufVxuIiwiaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50LmpzXCI7XG5pbXBvcnQgZGVzY2VuZGluZyBmcm9tIFwiLi9kZXNjZW5kaW5nLmpzXCI7XG5pbXBvcnQgaWRlbnRpdHkgZnJvbSBcIi4vaWRlbnRpdHkuanNcIjtcbmltcG9ydCB7dGF1fSBmcm9tIFwiLi9tYXRoLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgdmFsdWUgPSBpZGVudGl0eSxcbiAgICAgIHNvcnRWYWx1ZXMgPSBkZXNjZW5kaW5nLFxuICAgICAgc29ydCA9IG51bGwsXG4gICAgICBzdGFydEFuZ2xlID0gY29uc3RhbnQoMCksXG4gICAgICBlbmRBbmdsZSA9IGNvbnN0YW50KHRhdSksXG4gICAgICBwYWRBbmdsZSA9IGNvbnN0YW50KDApO1xuXG4gIGZ1bmN0aW9uIHBpZShkYXRhKSB7XG4gICAgdmFyIGksXG4gICAgICAgIG4gPSBkYXRhLmxlbmd0aCxcbiAgICAgICAgaixcbiAgICAgICAgayxcbiAgICAgICAgc3VtID0gMCxcbiAgICAgICAgaW5kZXggPSBuZXcgQXJyYXkobiksXG4gICAgICAgIGFyY3MgPSBuZXcgQXJyYXkobiksXG4gICAgICAgIGEwID0gK3N0YXJ0QW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgZGEgPSBNYXRoLm1pbih0YXUsIE1hdGgubWF4KC10YXUsIGVuZEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgLSBhMCkpLFxuICAgICAgICBhMSxcbiAgICAgICAgcCA9IE1hdGgubWluKE1hdGguYWJzKGRhKSAvIG4sIHBhZEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpLFxuICAgICAgICBwYSA9IHAgKiAoZGEgPCAwID8gLTEgOiAxKSxcbiAgICAgICAgdjtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgodiA9IGFyY3NbaW5kZXhbaV0gPSBpXSA9ICt2YWx1ZShkYXRhW2ldLCBpLCBkYXRhKSkgPiAwKSB7XG4gICAgICAgIHN1bSArPSB2O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIE9wdGlvbmFsbHkgc29ydCB0aGUgYXJjcyBieSBwcmV2aW91c2x5LWNvbXB1dGVkIHZhbHVlcyBvciBieSBkYXRhLlxuICAgIGlmIChzb3J0VmFsdWVzICE9IG51bGwpIGluZGV4LnNvcnQoZnVuY3Rpb24oaSwgaikgeyByZXR1cm4gc29ydFZhbHVlcyhhcmNzW2ldLCBhcmNzW2pdKTsgfSk7XG4gICAgZWxzZSBpZiAoc29ydCAhPSBudWxsKSBpbmRleC5zb3J0KGZ1bmN0aW9uKGksIGopIHsgcmV0dXJuIHNvcnQoZGF0YVtpXSwgZGF0YVtqXSk7IH0pO1xuXG4gICAgLy8gQ29tcHV0ZSB0aGUgYXJjcyEgVGhleSBhcmUgc3RvcmVkIGluIHRoZSBvcmlnaW5hbCBkYXRhJ3Mgb3JkZXIuXG4gICAgZm9yIChpID0gMCwgayA9IHN1bSA/IChkYSAtIG4gKiBwYSkgLyBzdW0gOiAwOyBpIDwgbjsgKytpLCBhMCA9IGExKSB7XG4gICAgICBqID0gaW5kZXhbaV0sIHYgPSBhcmNzW2pdLCBhMSA9IGEwICsgKHYgPiAwID8gdiAqIGsgOiAwKSArIHBhLCBhcmNzW2pdID0ge1xuICAgICAgICBkYXRhOiBkYXRhW2pdLFxuICAgICAgICBpbmRleDogaSxcbiAgICAgICAgdmFsdWU6IHYsXG4gICAgICAgIHN0YXJ0QW5nbGU6IGEwLFxuICAgICAgICBlbmRBbmdsZTogYTEsXG4gICAgICAgIHBhZEFuZ2xlOiBwXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBhcmNzO1xuICB9XG5cbiAgcGllLnZhbHVlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHZhbHVlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHBpZSkgOiB2YWx1ZTtcbiAgfTtcblxuICBwaWUuc29ydFZhbHVlcyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzb3J0VmFsdWVzID0gXywgc29ydCA9IG51bGwsIHBpZSkgOiBzb3J0VmFsdWVzO1xuICB9O1xuXG4gIHBpZS5zb3J0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNvcnQgPSBfLCBzb3J0VmFsdWVzID0gbnVsbCwgcGllKSA6IHNvcnQ7XG4gIH07XG5cbiAgcGllLnN0YXJ0QW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3RhcnRBbmdsZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBwaWUpIDogc3RhcnRBbmdsZTtcbiAgfTtcblxuICBwaWUuZW5kQW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZW5kQW5nbGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgcGllKSA6IGVuZEFuZ2xlO1xuICB9O1xuXG4gIHBpZS5wYWRBbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRBbmdsZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBwaWUpIDogcGFkQW5nbGU7XG4gIH07XG5cbiAgcmV0dXJuIHBpZTtcbn1cbiIsImltcG9ydCBjdXJ2ZUxpbmVhciBmcm9tIFwiLi9saW5lYXIuanNcIjtcblxuZXhwb3J0IHZhciBjdXJ2ZVJhZGlhbExpbmVhciA9IGN1cnZlUmFkaWFsKGN1cnZlTGluZWFyKTtcblxuZnVuY3Rpb24gUmFkaWFsKGN1cnZlKSB7XG4gIHRoaXMuX2N1cnZlID0gY3VydmU7XG59XG5cblJhZGlhbC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fY3VydmUuYXJlYVN0YXJ0KCk7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2N1cnZlLmFyZWFFbmQoKTtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9jdXJ2ZS5saW5lU3RhcnQoKTtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fY3VydmUubGluZUVuZCgpO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oYSwgcikge1xuICAgIHRoaXMuX2N1cnZlLnBvaW50KHIgKiBNYXRoLnNpbihhKSwgciAqIC1NYXRoLmNvcyhhKSk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGN1cnZlUmFkaWFsKGN1cnZlKSB7XG5cbiAgZnVuY3Rpb24gcmFkaWFsKGNvbnRleHQpIHtcbiAgICByZXR1cm4gbmV3IFJhZGlhbChjdXJ2ZShjb250ZXh0KSk7XG4gIH1cblxuICByYWRpYWwuX2N1cnZlID0gY3VydmU7XG5cbiAgcmV0dXJuIHJhZGlhbDtcbn1cbiIsImltcG9ydCBjdXJ2ZVJhZGlhbCwge2N1cnZlUmFkaWFsTGluZWFyfSBmcm9tIFwiLi9jdXJ2ZS9yYWRpYWwuanNcIjtcbmltcG9ydCBsaW5lIGZyb20gXCIuL2xpbmUuanNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGxpbmVSYWRpYWwobCkge1xuICB2YXIgYyA9IGwuY3VydmU7XG5cbiAgbC5hbmdsZSA9IGwueCwgZGVsZXRlIGwueDtcbiAgbC5yYWRpdXMgPSBsLnksIGRlbGV0ZSBsLnk7XG5cbiAgbC5jdXJ2ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IGMoY3VydmVSYWRpYWwoXykpIDogYygpLl9jdXJ2ZTtcbiAgfTtcblxuICByZXR1cm4gbDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBsaW5lUmFkaWFsKGxpbmUoKS5jdXJ2ZShjdXJ2ZVJhZGlhbExpbmVhcikpO1xufVxuIiwiaW1wb3J0IGN1cnZlUmFkaWFsLCB7Y3VydmVSYWRpYWxMaW5lYXJ9IGZyb20gXCIuL2N1cnZlL3JhZGlhbC5qc1wiO1xuaW1wb3J0IGFyZWEgZnJvbSBcIi4vYXJlYS5qc1wiO1xuaW1wb3J0IHtsaW5lUmFkaWFsfSBmcm9tIFwiLi9saW5lUmFkaWFsLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgYSA9IGFyZWEoKS5jdXJ2ZShjdXJ2ZVJhZGlhbExpbmVhciksXG4gICAgICBjID0gYS5jdXJ2ZSxcbiAgICAgIHgwID0gYS5saW5lWDAsXG4gICAgICB4MSA9IGEubGluZVgxLFxuICAgICAgeTAgPSBhLmxpbmVZMCxcbiAgICAgIHkxID0gYS5saW5lWTE7XG5cbiAgYS5hbmdsZSA9IGEueCwgZGVsZXRlIGEueDtcbiAgYS5zdGFydEFuZ2xlID0gYS54MCwgZGVsZXRlIGEueDA7XG4gIGEuZW5kQW5nbGUgPSBhLngxLCBkZWxldGUgYS54MTtcbiAgYS5yYWRpdXMgPSBhLnksIGRlbGV0ZSBhLnk7XG4gIGEuaW5uZXJSYWRpdXMgPSBhLnkwLCBkZWxldGUgYS55MDtcbiAgYS5vdXRlclJhZGl1cyA9IGEueTEsIGRlbGV0ZSBhLnkxO1xuICBhLmxpbmVTdGFydEFuZ2xlID0gZnVuY3Rpb24oKSB7IHJldHVybiBsaW5lUmFkaWFsKHgwKCkpOyB9LCBkZWxldGUgYS5saW5lWDA7XG4gIGEubGluZUVuZEFuZ2xlID0gZnVuY3Rpb24oKSB7IHJldHVybiBsaW5lUmFkaWFsKHgxKCkpOyB9LCBkZWxldGUgYS5saW5lWDE7XG4gIGEubGluZUlubmVyUmFkaXVzID0gZnVuY3Rpb24oKSB7IHJldHVybiBsaW5lUmFkaWFsKHkwKCkpOyB9LCBkZWxldGUgYS5saW5lWTA7XG4gIGEubGluZU91dGVyUmFkaXVzID0gZnVuY3Rpb24oKSB7IHJldHVybiBsaW5lUmFkaWFsKHkxKCkpOyB9LCBkZWxldGUgYS5saW5lWTE7XG5cbiAgYS5jdXJ2ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IGMoY3VydmVSYWRpYWwoXykpIDogYygpLl9jdXJ2ZTtcbiAgfTtcblxuICByZXR1cm4gYTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgsIHkpIHtcbiAgcmV0dXJuIFsoeSA9ICt5KSAqIE1hdGguY29zKHggLT0gTWF0aC5QSSAvIDIpLCB5ICogTWF0aC5zaW4oeCldO1xufVxuIiwiZXhwb3J0IHZhciBzbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTtcbiIsImltcG9ydCB7cGF0aH0gZnJvbSBcImQzLXBhdGhcIjtcbmltcG9ydCB7c2xpY2V9IGZyb20gXCIuLi9hcnJheS5qc1wiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuLi9jb25zdGFudC5qc1wiO1xuaW1wb3J0IHt4IGFzIHBvaW50WCwgeSBhcyBwb2ludFl9IGZyb20gXCIuLi9wb2ludC5qc1wiO1xuaW1wb3J0IHBvaW50UmFkaWFsIGZyb20gXCIuLi9wb2ludFJhZGlhbC5qc1wiO1xuXG5mdW5jdGlvbiBsaW5rU291cmNlKGQpIHtcbiAgcmV0dXJuIGQuc291cmNlO1xufVxuXG5mdW5jdGlvbiBsaW5rVGFyZ2V0KGQpIHtcbiAgcmV0dXJuIGQudGFyZ2V0O1xufVxuXG5mdW5jdGlvbiBsaW5rKGN1cnZlKSB7XG4gIHZhciBzb3VyY2UgPSBsaW5rU291cmNlLFxuICAgICAgdGFyZ2V0ID0gbGlua1RhcmdldCxcbiAgICAgIHggPSBwb2ludFgsXG4gICAgICB5ID0gcG9pbnRZLFxuICAgICAgY29udGV4dCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gbGluaygpIHtcbiAgICB2YXIgYnVmZmVyLCBhcmd2ID0gc2xpY2UuY2FsbChhcmd1bWVudHMpLCBzID0gc291cmNlLmFwcGx5KHRoaXMsIGFyZ3YpLCB0ID0gdGFyZ2V0LmFwcGx5KHRoaXMsIGFyZ3YpO1xuICAgIGlmICghY29udGV4dCkgY29udGV4dCA9IGJ1ZmZlciA9IHBhdGgoKTtcbiAgICBjdXJ2ZShjb250ZXh0LCAreC5hcHBseSh0aGlzLCAoYXJndlswXSA9IHMsIGFyZ3YpKSwgK3kuYXBwbHkodGhpcywgYXJndiksICt4LmFwcGx5KHRoaXMsIChhcmd2WzBdID0gdCwgYXJndikpLCAreS5hcHBseSh0aGlzLCBhcmd2KSk7XG4gICAgaWYgKGJ1ZmZlcikgcmV0dXJuIGNvbnRleHQgPSBudWxsLCBidWZmZXIgKyBcIlwiIHx8IG51bGw7XG4gIH1cblxuICBsaW5rLnNvdXJjZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzb3VyY2UgPSBfLCBsaW5rKSA6IHNvdXJjZTtcbiAgfTtcblxuICBsaW5rLnRhcmdldCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0YXJnZXQgPSBfLCBsaW5rKSA6IHRhcmdldDtcbiAgfTtcblxuICBsaW5rLnggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBsaW5rKSA6IHg7XG4gIH07XG5cbiAgbGluay55ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgbGluaykgOiB5O1xuICB9O1xuXG4gIGxpbmsuY29udGV4dCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICgoY29udGV4dCA9IF8gPT0gbnVsbCA/IG51bGwgOiBfKSwgbGluaykgOiBjb250ZXh0O1xuICB9O1xuXG4gIHJldHVybiBsaW5rO1xufVxuXG5mdW5jdGlvbiBjdXJ2ZUhvcml6b250YWwoY29udGV4dCwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgY29udGV4dC5tb3ZlVG8oeDAsIHkwKTtcbiAgY29udGV4dC5iZXppZXJDdXJ2ZVRvKHgwID0gKHgwICsgeDEpIC8gMiwgeTAsIHgwLCB5MSwgeDEsIHkxKTtcbn1cblxuZnVuY3Rpb24gY3VydmVWZXJ0aWNhbChjb250ZXh0LCB4MCwgeTAsIHgxLCB5MSkge1xuICBjb250ZXh0Lm1vdmVUbyh4MCwgeTApO1xuICBjb250ZXh0LmJlemllckN1cnZlVG8oeDAsIHkwID0gKHkwICsgeTEpIC8gMiwgeDEsIHkwLCB4MSwgeTEpO1xufVxuXG5mdW5jdGlvbiBjdXJ2ZVJhZGlhbChjb250ZXh0LCB4MCwgeTAsIHgxLCB5MSkge1xuICB2YXIgcDAgPSBwb2ludFJhZGlhbCh4MCwgeTApLFxuICAgICAgcDEgPSBwb2ludFJhZGlhbCh4MCwgeTAgPSAoeTAgKyB5MSkgLyAyKSxcbiAgICAgIHAyID0gcG9pbnRSYWRpYWwoeDEsIHkwKSxcbiAgICAgIHAzID0gcG9pbnRSYWRpYWwoeDEsIHkxKTtcbiAgY29udGV4dC5tb3ZlVG8ocDBbMF0sIHAwWzFdKTtcbiAgY29udGV4dC5iZXppZXJDdXJ2ZVRvKHAxWzBdLCBwMVsxXSwgcDJbMF0sIHAyWzFdLCBwM1swXSwgcDNbMV0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbGlua0hvcml6b250YWwoKSB7XG4gIHJldHVybiBsaW5rKGN1cnZlSG9yaXpvbnRhbCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsaW5rVmVydGljYWwoKSB7XG4gIHJldHVybiBsaW5rKGN1cnZlVmVydGljYWwpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbGlua1JhZGlhbCgpIHtcbiAgdmFyIGwgPSBsaW5rKGN1cnZlUmFkaWFsKTtcbiAgbC5hbmdsZSA9IGwueCwgZGVsZXRlIGwueDtcbiAgbC5yYWRpdXMgPSBsLnksIGRlbGV0ZSBsLnk7XG4gIHJldHVybiBsO1xufVxuIiwiaW1wb3J0IHtwaSwgdGF1fSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGRyYXc6IGZ1bmN0aW9uKGNvbnRleHQsIHNpemUpIHtcbiAgICB2YXIgciA9IE1hdGguc3FydChzaXplIC8gcGkpO1xuICAgIGNvbnRleHQubW92ZVRvKHIsIDApO1xuICAgIGNvbnRleHQuYXJjKDAsIDAsIHIsIDAsIHRhdSk7XG4gIH1cbn07XG4iLCJleHBvcnQgZGVmYXVsdCB7XG4gIGRyYXc6IGZ1bmN0aW9uKGNvbnRleHQsIHNpemUpIHtcbiAgICB2YXIgciA9IE1hdGguc3FydChzaXplIC8gNSkgLyAyO1xuICAgIGNvbnRleHQubW92ZVRvKC0zICogciwgLXIpO1xuICAgIGNvbnRleHQubGluZVRvKC1yLCAtcik7XG4gICAgY29udGV4dC5saW5lVG8oLXIsIC0zICogcik7XG4gICAgY29udGV4dC5saW5lVG8ociwgLTMgKiByKTtcbiAgICBjb250ZXh0LmxpbmVUbyhyLCAtcik7XG4gICAgY29udGV4dC5saW5lVG8oMyAqIHIsIC1yKTtcbiAgICBjb250ZXh0LmxpbmVUbygzICogciwgcik7XG4gICAgY29udGV4dC5saW5lVG8ociwgcik7XG4gICAgY29udGV4dC5saW5lVG8ociwgMyAqIHIpO1xuICAgIGNvbnRleHQubGluZVRvKC1yLCAzICogcik7XG4gICAgY29udGV4dC5saW5lVG8oLXIsIHIpO1xuICAgIGNvbnRleHQubGluZVRvKC0zICogciwgcik7XG4gICAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgfVxufTtcbiIsInZhciB0YW4zMCA9IE1hdGguc3FydCgxIC8gMyksXG4gICAgdGFuMzBfMiA9IHRhbjMwICogMjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBkcmF3OiBmdW5jdGlvbihjb250ZXh0LCBzaXplKSB7XG4gICAgdmFyIHkgPSBNYXRoLnNxcnQoc2l6ZSAvIHRhbjMwXzIpLFxuICAgICAgICB4ID0geSAqIHRhbjMwO1xuICAgIGNvbnRleHQubW92ZVRvKDAsIC15KTtcbiAgICBjb250ZXh0LmxpbmVUbyh4LCAwKTtcbiAgICBjb250ZXh0LmxpbmVUbygwLCB5KTtcbiAgICBjb250ZXh0LmxpbmVUbygteCwgMCk7XG4gICAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgfVxufTtcbiIsImltcG9ydCB7cGksIHRhdX0gZnJvbSBcIi4uL21hdGguanNcIjtcblxudmFyIGthID0gMC44OTA4MTMwOTE1MjkyODUyMjgxMCxcbiAgICBrciA9IE1hdGguc2luKHBpIC8gMTApIC8gTWF0aC5zaW4oNyAqIHBpIC8gMTApLFxuICAgIGt4ID0gTWF0aC5zaW4odGF1IC8gMTApICoga3IsXG4gICAga3kgPSAtTWF0aC5jb3ModGF1IC8gMTApICoga3I7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZHJhdzogZnVuY3Rpb24oY29udGV4dCwgc2l6ZSkge1xuICAgIHZhciByID0gTWF0aC5zcXJ0KHNpemUgKiBrYSksXG4gICAgICAgIHggPSBreCAqIHIsXG4gICAgICAgIHkgPSBreSAqIHI7XG4gICAgY29udGV4dC5tb3ZlVG8oMCwgLXIpO1xuICAgIGNvbnRleHQubGluZVRvKHgsIHkpO1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgNTsgKytpKSB7XG4gICAgICB2YXIgYSA9IHRhdSAqIGkgLyA1LFxuICAgICAgICAgIGMgPSBNYXRoLmNvcyhhKSxcbiAgICAgICAgICBzID0gTWF0aC5zaW4oYSk7XG4gICAgICBjb250ZXh0LmxpbmVUbyhzICogciwgLWMgKiByKTtcbiAgICAgIGNvbnRleHQubGluZVRvKGMgKiB4IC0gcyAqIHksIHMgKiB4ICsgYyAqIHkpO1xuICAgIH1cbiAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuICB9XG59O1xuIiwiZXhwb3J0IGRlZmF1bHQge1xuICBkcmF3OiBmdW5jdGlvbihjb250ZXh0LCBzaXplKSB7XG4gICAgdmFyIHcgPSBNYXRoLnNxcnQoc2l6ZSksXG4gICAgICAgIHggPSAtdyAvIDI7XG4gICAgY29udGV4dC5yZWN0KHgsIHgsIHcsIHcpO1xuICB9XG59O1xuIiwidmFyIHNxcnQzID0gTWF0aC5zcXJ0KDMpO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGRyYXc6IGZ1bmN0aW9uKGNvbnRleHQsIHNpemUpIHtcbiAgICB2YXIgeSA9IC1NYXRoLnNxcnQoc2l6ZSAvIChzcXJ0MyAqIDMpKTtcbiAgICBjb250ZXh0Lm1vdmVUbygwLCB5ICogMik7XG4gICAgY29udGV4dC5saW5lVG8oLXNxcnQzICogeSwgLXkpO1xuICAgIGNvbnRleHQubGluZVRvKHNxcnQzICogeSwgLXkpO1xuICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG4gIH1cbn07XG4iLCJ2YXIgYyA9IC0wLjUsXG4gICAgcyA9IE1hdGguc3FydCgzKSAvIDIsXG4gICAgayA9IDEgLyBNYXRoLnNxcnQoMTIpLFxuICAgIGEgPSAoayAvIDIgKyAxKSAqIDM7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZHJhdzogZnVuY3Rpb24oY29udGV4dCwgc2l6ZSkge1xuICAgIHZhciByID0gTWF0aC5zcXJ0KHNpemUgLyBhKSxcbiAgICAgICAgeDAgPSByIC8gMixcbiAgICAgICAgeTAgPSByICogayxcbiAgICAgICAgeDEgPSB4MCxcbiAgICAgICAgeTEgPSByICogayArIHIsXG4gICAgICAgIHgyID0gLXgxLFxuICAgICAgICB5MiA9IHkxO1xuICAgIGNvbnRleHQubW92ZVRvKHgwLCB5MCk7XG4gICAgY29udGV4dC5saW5lVG8oeDEsIHkxKTtcbiAgICBjb250ZXh0LmxpbmVUbyh4MiwgeTIpO1xuICAgIGNvbnRleHQubGluZVRvKGMgKiB4MCAtIHMgKiB5MCwgcyAqIHgwICsgYyAqIHkwKTtcbiAgICBjb250ZXh0LmxpbmVUbyhjICogeDEgLSBzICogeTEsIHMgKiB4MSArIGMgKiB5MSk7XG4gICAgY29udGV4dC5saW5lVG8oYyAqIHgyIC0gcyAqIHkyLCBzICogeDIgKyBjICogeTIpO1xuICAgIGNvbnRleHQubGluZVRvKGMgKiB4MCArIHMgKiB5MCwgYyAqIHkwIC0gcyAqIHgwKTtcbiAgICBjb250ZXh0LmxpbmVUbyhjICogeDEgKyBzICogeTEsIGMgKiB5MSAtIHMgKiB4MSk7XG4gICAgY29udGV4dC5saW5lVG8oYyAqIHgyICsgcyAqIHkyLCBjICogeTIgLSBzICogeDIpO1xuICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG4gIH1cbn07XG4iLCJpbXBvcnQge3BhdGh9IGZyb20gXCJkMy1wYXRoXCI7XG5pbXBvcnQgY2lyY2xlIGZyb20gXCIuL3N5bWJvbC9jaXJjbGUuanNcIjtcbmltcG9ydCBjcm9zcyBmcm9tIFwiLi9zeW1ib2wvY3Jvc3MuanNcIjtcbmltcG9ydCBkaWFtb25kIGZyb20gXCIuL3N5bWJvbC9kaWFtb25kLmpzXCI7XG5pbXBvcnQgc3RhciBmcm9tIFwiLi9zeW1ib2wvc3Rhci5qc1wiO1xuaW1wb3J0IHNxdWFyZSBmcm9tIFwiLi9zeW1ib2wvc3F1YXJlLmpzXCI7XG5pbXBvcnQgdHJpYW5nbGUgZnJvbSBcIi4vc3ltYm9sL3RyaWFuZ2xlLmpzXCI7XG5pbXBvcnQgd3llIGZyb20gXCIuL3N5bWJvbC93eWUuanNcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudC5qc1wiO1xuXG5leHBvcnQgdmFyIHN5bWJvbHMgPSBbXG4gIGNpcmNsZSxcbiAgY3Jvc3MsXG4gIGRpYW1vbmQsXG4gIHNxdWFyZSxcbiAgc3RhcixcbiAgdHJpYW5nbGUsXG4gIHd5ZVxuXTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciB0eXBlID0gY29uc3RhbnQoY2lyY2xlKSxcbiAgICAgIHNpemUgPSBjb25zdGFudCg2NCksXG4gICAgICBjb250ZXh0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBzeW1ib2woKSB7XG4gICAgdmFyIGJ1ZmZlcjtcbiAgICBpZiAoIWNvbnRleHQpIGNvbnRleHQgPSBidWZmZXIgPSBwYXRoKCk7XG4gICAgdHlwZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpLmRyYXcoY29udGV4dCwgK3NpemUuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gICAgaWYgKGJ1ZmZlcikgcmV0dXJuIGNvbnRleHQgPSBudWxsLCBidWZmZXIgKyBcIlwiIHx8IG51bGw7XG4gIH1cblxuICBzeW1ib2wudHlwZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0eXBlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChfKSwgc3ltYm9sKSA6IHR5cGU7XG4gIH07XG5cbiAgc3ltYm9sLnNpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc2l6ZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBzeW1ib2wpIDogc2l6ZTtcbiAgfTtcblxuICBzeW1ib2wuY29udGV4dCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjb250ZXh0ID0gXyA9PSBudWxsID8gbnVsbCA6IF8sIHN5bWJvbCkgOiBjb250ZXh0O1xuICB9O1xuXG4gIHJldHVybiBzeW1ib2w7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHt9XG4iLCJleHBvcnQgZnVuY3Rpb24gcG9pbnQodGhhdCwgeCwgeSkge1xuICB0aGF0Ll9jb250ZXh0LmJlemllckN1cnZlVG8oXG4gICAgKDIgKiB0aGF0Ll94MCArIHRoYXQuX3gxKSAvIDMsXG4gICAgKDIgKiB0aGF0Ll95MCArIHRoYXQuX3kxKSAvIDMsXG4gICAgKHRoYXQuX3gwICsgMiAqIHRoYXQuX3gxKSAvIDMsXG4gICAgKHRoYXQuX3kwICsgMiAqIHRoYXQuX3kxKSAvIDMsXG4gICAgKHRoYXQuX3gwICsgNCAqIHRoYXQuX3gxICsgeCkgLyA2LFxuICAgICh0aGF0Ll95MCArIDQgKiB0aGF0Ll95MSArIHkpIC8gNlxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQmFzaXMoY29udGV4dCkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbn1cblxuQmFzaXMucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSAwO1xuICB9LFxuICBhcmVhRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gTmFOO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEgPVxuICAgIHRoaXMuX3kwID0gdGhpcy5feTEgPSBOYU47XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDM6IHBvaW50KHRoaXMsIHRoaXMuX3gxLCB0aGlzLl95MSk7IC8vIHByb2NlZWRcbiAgICAgIGNhc2UgMjogdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDEsIHRoaXMuX3kxKTsgYnJlYWs7XG4gICAgfVxuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIHRoaXMuX3BvaW50ID09PSAxKSkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmU7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh4LCB5KSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHgsIHkpOyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyB0aGlzLl9jb250ZXh0LmxpbmVUbygoNSAqIHRoaXMuX3gwICsgdGhpcy5feDEpIC8gNiwgKDUgKiB0aGlzLl95MCArIHRoaXMuX3kxKSAvIDYpOyAvLyBwcm9jZWVkXG4gICAgICBkZWZhdWx0OiBwb2ludCh0aGlzLCB4LCB5KTsgYnJlYWs7XG4gICAgfVxuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbnRleHQpIHtcbiAgcmV0dXJuIG5ldyBCYXNpcyhjb250ZXh0KTtcbn1cbiIsImltcG9ydCBub29wIGZyb20gXCIuLi9ub29wLmpzXCI7XG5pbXBvcnQge3BvaW50fSBmcm9tIFwiLi9iYXNpcy5qc1wiO1xuXG5mdW5jdGlvbiBCYXNpc0Nsb3NlZChjb250ZXh0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xufVxuXG5CYXNpc0Nsb3NlZC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogbm9vcCxcbiAgYXJlYUVuZDogbm9vcCxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPSB0aGlzLl94MyA9IHRoaXMuX3g0ID1cbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSB0aGlzLl95MyA9IHRoaXMuX3k0ID0gTmFOO1xuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAxOiB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gyLCB0aGlzLl95Mik7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAyOiB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubW92ZVRvKCh0aGlzLl94MiArIDIgKiB0aGlzLl94MykgLyAzLCAodGhpcy5feTIgKyAyICogdGhpcy5feTMpIC8gMyk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubGluZVRvKCh0aGlzLl94MyArIDIgKiB0aGlzLl94MikgLyAzLCAodGhpcy5feTMgKyAyICogdGhpcy5feTIpIC8gMyk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAzOiB7XG4gICAgICAgIHRoaXMucG9pbnQodGhpcy5feDIsIHRoaXMuX3kyKTtcbiAgICAgICAgdGhpcy5wb2ludCh0aGlzLl94MywgdGhpcy5feTMpO1xuICAgICAgICB0aGlzLnBvaW50KHRoaXMuX3g0LCB0aGlzLl95NCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgdGhpcy5feDIgPSB4LCB0aGlzLl95MiA9IHk7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IHRoaXMuX3gzID0geCwgdGhpcy5feTMgPSB5OyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyB0aGlzLl94NCA9IHgsIHRoaXMuX3k0ID0geTsgdGhpcy5fY29udGV4dC5tb3ZlVG8oKHRoaXMuX3gwICsgNCAqIHRoaXMuX3gxICsgeCkgLyA2LCAodGhpcy5feTAgKyA0ICogdGhpcy5feTEgKyB5KSAvIDYpOyBicmVhaztcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB4O1xuICAgIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0geTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29udGV4dCkge1xuICByZXR1cm4gbmV3IEJhc2lzQ2xvc2VkKGNvbnRleHQpO1xufVxuIiwiaW1wb3J0IHtwb2ludH0gZnJvbSBcIi4vYmFzaXMuanNcIjtcblxuZnVuY3Rpb24gQmFzaXNPcGVuKGNvbnRleHQpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG59XG5cbkJhc2lzT3Blbi5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSA9IE5hTjtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIHRoaXMuX3BvaW50ID09PSAzKSkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmU7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IGJyZWFrO1xuICAgICAgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IHZhciB4MCA9ICh0aGlzLl94MCArIDQgKiB0aGlzLl94MSArIHgpIC8gNiwgeTAgPSAodGhpcy5feTAgKyA0ICogdGhpcy5feTEgKyB5KSAvIDY7IHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh4MCwgeTApIDogdGhpcy5fY29udGV4dC5tb3ZlVG8oeDAsIHkwKTsgYnJlYWs7XG4gICAgICBjYXNlIDM6IHRoaXMuX3BvaW50ID0gNDsgLy8gcHJvY2VlZFxuICAgICAgZGVmYXVsdDogcG9pbnQodGhpcywgeCwgeSk7IGJyZWFrO1xuICAgIH1cbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxLCB0aGlzLl94MSA9IHg7XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSwgdGhpcy5feTEgPSB5O1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgQmFzaXNPcGVuKGNvbnRleHQpO1xufVxuIiwiaW1wb3J0IHtCYXNpc30gZnJvbSBcIi4vYmFzaXMuanNcIjtcblxuZnVuY3Rpb24gQnVuZGxlKGNvbnRleHQsIGJldGEpIHtcbiAgdGhpcy5fYmFzaXMgPSBuZXcgQmFzaXMoY29udGV4dCk7XG4gIHRoaXMuX2JldGEgPSBiZXRhO1xufVxuXG5CdW5kbGUucHJvdG90eXBlID0ge1xuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3ggPSBbXTtcbiAgICB0aGlzLl95ID0gW107XG4gICAgdGhpcy5fYmFzaXMubGluZVN0YXJ0KCk7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHZhciB4ID0gdGhpcy5feCxcbiAgICAgICAgeSA9IHRoaXMuX3ksXG4gICAgICAgIGogPSB4Lmxlbmd0aCAtIDE7XG5cbiAgICBpZiAoaiA+IDApIHtcbiAgICAgIHZhciB4MCA9IHhbMF0sXG4gICAgICAgICAgeTAgPSB5WzBdLFxuICAgICAgICAgIGR4ID0geFtqXSAtIHgwLFxuICAgICAgICAgIGR5ID0geVtqXSAtIHkwLFxuICAgICAgICAgIGkgPSAtMSxcbiAgICAgICAgICB0O1xuXG4gICAgICB3aGlsZSAoKytpIDw9IGopIHtcbiAgICAgICAgdCA9IGkgLyBqO1xuICAgICAgICB0aGlzLl9iYXNpcy5wb2ludChcbiAgICAgICAgICB0aGlzLl9iZXRhICogeFtpXSArICgxIC0gdGhpcy5fYmV0YSkgKiAoeDAgKyB0ICogZHgpLFxuICAgICAgICAgIHRoaXMuX2JldGEgKiB5W2ldICsgKDEgLSB0aGlzLl9iZXRhKSAqICh5MCArIHQgKiBkeSlcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLl94ID0gdGhpcy5feSA9IG51bGw7XG4gICAgdGhpcy5fYmFzaXMubGluZUVuZCgpO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHRoaXMuX3gucHVzaCgreCk7XG4gICAgdGhpcy5feS5wdXNoKCt5KTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIGN1c3RvbShiZXRhKSB7XG5cbiAgZnVuY3Rpb24gYnVuZGxlKGNvbnRleHQpIHtcbiAgICByZXR1cm4gYmV0YSA9PT0gMSA/IG5ldyBCYXNpcyhjb250ZXh0KSA6IG5ldyBCdW5kbGUoY29udGV4dCwgYmV0YSk7XG4gIH1cblxuICBidW5kbGUuYmV0YSA9IGZ1bmN0aW9uKGJldGEpIHtcbiAgICByZXR1cm4gY3VzdG9tKCtiZXRhKTtcbiAgfTtcblxuICByZXR1cm4gYnVuZGxlO1xufSkoMC44NSk7XG4iLCJleHBvcnQgZnVuY3Rpb24gcG9pbnQodGhhdCwgeCwgeSkge1xuICB0aGF0Ll9jb250ZXh0LmJlemllckN1cnZlVG8oXG4gICAgdGhhdC5feDEgKyB0aGF0Ll9rICogKHRoYXQuX3gyIC0gdGhhdC5feDApLFxuICAgIHRoYXQuX3kxICsgdGhhdC5fayAqICh0aGF0Ll95MiAtIHRoYXQuX3kwKSxcbiAgICB0aGF0Ll94MiArIHRoYXQuX2sgKiAodGhhdC5feDEgLSB4KSxcbiAgICB0aGF0Ll95MiArIHRoYXQuX2sgKiAodGhhdC5feTEgLSB5KSxcbiAgICB0aGF0Ll94MixcbiAgICB0aGF0Ll95MlxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQ2FyZGluYWwoY29udGV4dCwgdGVuc2lvbikge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbiAgdGhpcy5fayA9ICgxIC0gdGVuc2lvbikgLyA2O1xufVxuXG5DYXJkaW5hbC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9IHRoaXMuX3gyID1cbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSBOYU47XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDI6IHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gyLCB0aGlzLl95Mik7IGJyZWFrO1xuICAgICAgY2FzZSAzOiBwb2ludCh0aGlzLCB0aGlzLl94MSwgdGhpcy5feTEpOyBicmVhaztcbiAgICB9XG4gICAgaWYgKHRoaXMuX2xpbmUgfHwgKHRoaXMuX2xpbmUgIT09IDAgJiYgdGhpcy5fcG9pbnQgPT09IDEpKSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZTtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHgsIHkpIDogdGhpcy5fY29udGV4dC5tb3ZlVG8oeCwgeSk7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IHRoaXMuX3gxID0geCwgdGhpcy5feTEgPSB5OyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyAvLyBwcm9jZWVkXG4gICAgICBkZWZhdWx0OiBwb2ludCh0aGlzLCB4LCB5KTsgYnJlYWs7XG4gICAgfVxuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdGhpcy5feDIsIHRoaXMuX3gyID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBjdXN0b20odGVuc2lvbikge1xuXG4gIGZ1bmN0aW9uIGNhcmRpbmFsKGNvbnRleHQpIHtcbiAgICByZXR1cm4gbmV3IENhcmRpbmFsKGNvbnRleHQsIHRlbnNpb24pO1xuICB9XG5cbiAgY2FyZGluYWwudGVuc2lvbiA9IGZ1bmN0aW9uKHRlbnNpb24pIHtcbiAgICByZXR1cm4gY3VzdG9tKCt0ZW5zaW9uKTtcbiAgfTtcblxuICByZXR1cm4gY2FyZGluYWw7XG59KSgwKTtcbiIsImltcG9ydCBub29wIGZyb20gXCIuLi9ub29wLmpzXCI7XG5pbXBvcnQge3BvaW50fSBmcm9tIFwiLi9jYXJkaW5hbC5qc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gQ2FyZGluYWxDbG9zZWQoY29udGV4dCwgdGVuc2lvbikge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbiAgdGhpcy5fayA9ICgxIC0gdGVuc2lvbikgLyA2O1xufVxuXG5DYXJkaW5hbENsb3NlZC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogbm9vcCxcbiAgYXJlYUVuZDogbm9vcCxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPSB0aGlzLl94MyA9IHRoaXMuX3g0ID0gdGhpcy5feDUgPVxuICAgIHRoaXMuX3kwID0gdGhpcy5feTEgPSB0aGlzLl95MiA9IHRoaXMuX3kzID0gdGhpcy5feTQgPSB0aGlzLl95NSA9IE5hTjtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMToge1xuICAgICAgICB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94MywgdGhpcy5feTMpO1xuICAgICAgICB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgMjoge1xuICAgICAgICB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MywgdGhpcy5feTMpO1xuICAgICAgICB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgMzoge1xuICAgICAgICB0aGlzLnBvaW50KHRoaXMuX3gzLCB0aGlzLl95Myk7XG4gICAgICAgIHRoaXMucG9pbnQodGhpcy5feDQsIHRoaXMuX3k0KTtcbiAgICAgICAgdGhpcy5wb2ludCh0aGlzLl94NSwgdGhpcy5feTUpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IHRoaXMuX3gzID0geCwgdGhpcy5feTMgPSB5OyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94NCA9IHgsIHRoaXMuX3k0ID0geSk7IGJyZWFrO1xuICAgICAgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IHRoaXMuX3g1ID0geCwgdGhpcy5feTUgPSB5OyBicmVhaztcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0aGlzLl94MiwgdGhpcy5feDIgPSB4O1xuICAgIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0gdGhpcy5feTIsIHRoaXMuX3kyID0geTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIGN1c3RvbSh0ZW5zaW9uKSB7XG5cbiAgZnVuY3Rpb24gY2FyZGluYWwoY29udGV4dCkge1xuICAgIHJldHVybiBuZXcgQ2FyZGluYWxDbG9zZWQoY29udGV4dCwgdGVuc2lvbik7XG4gIH1cblxuICBjYXJkaW5hbC50ZW5zaW9uID0gZnVuY3Rpb24odGVuc2lvbikge1xuICAgIHJldHVybiBjdXN0b20oK3RlbnNpb24pO1xuICB9O1xuXG4gIHJldHVybiBjYXJkaW5hbDtcbn0pKDApO1xuIiwiaW1wb3J0IHtwb2ludH0gZnJvbSBcIi4vY2FyZGluYWwuanNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIENhcmRpbmFsT3Blbihjb250ZXh0LCB0ZW5zaW9uKSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xuICB0aGlzLl9rID0gKDEgLSB0ZW5zaW9uKSAvIDY7XG59XG5cbkNhcmRpbmFsT3Blbi5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9IHRoaXMuX3gyID1cbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSBOYU47XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fbGluZSB8fCAodGhpcy5fbGluZSAhPT0gMCAmJiB0aGlzLl9wb2ludCA9PT0gMykpIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDIsIHRoaXMuX3kyKSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gyLCB0aGlzLl95Mik7IGJyZWFrO1xuICAgICAgY2FzZSAzOiB0aGlzLl9wb2ludCA9IDQ7IC8vIHByb2NlZWRcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0aGlzLl94MiwgdGhpcy5feDIgPSB4O1xuICAgIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0gdGhpcy5feTIsIHRoaXMuX3kyID0geTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIGN1c3RvbSh0ZW5zaW9uKSB7XG5cbiAgZnVuY3Rpb24gY2FyZGluYWwoY29udGV4dCkge1xuICAgIHJldHVybiBuZXcgQ2FyZGluYWxPcGVuKGNvbnRleHQsIHRlbnNpb24pO1xuICB9XG5cbiAgY2FyZGluYWwudGVuc2lvbiA9IGZ1bmN0aW9uKHRlbnNpb24pIHtcbiAgICByZXR1cm4gY3VzdG9tKCt0ZW5zaW9uKTtcbiAgfTtcblxuICByZXR1cm4gY2FyZGluYWw7XG59KSgwKTtcbiIsImltcG9ydCB7ZXBzaWxvbn0gZnJvbSBcIi4uL21hdGguanNcIjtcbmltcG9ydCB7Q2FyZGluYWx9IGZyb20gXCIuL2NhcmRpbmFsLmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBwb2ludCh0aGF0LCB4LCB5KSB7XG4gIHZhciB4MSA9IHRoYXQuX3gxLFxuICAgICAgeTEgPSB0aGF0Ll95MSxcbiAgICAgIHgyID0gdGhhdC5feDIsXG4gICAgICB5MiA9IHRoYXQuX3kyO1xuXG4gIGlmICh0aGF0Ll9sMDFfYSA+IGVwc2lsb24pIHtcbiAgICB2YXIgYSA9IDIgKiB0aGF0Ll9sMDFfMmEgKyAzICogdGhhdC5fbDAxX2EgKiB0aGF0Ll9sMTJfYSArIHRoYXQuX2wxMl8yYSxcbiAgICAgICAgbiA9IDMgKiB0aGF0Ll9sMDFfYSAqICh0aGF0Ll9sMDFfYSArIHRoYXQuX2wxMl9hKTtcbiAgICB4MSA9ICh4MSAqIGEgLSB0aGF0Ll94MCAqIHRoYXQuX2wxMl8yYSArIHRoYXQuX3gyICogdGhhdC5fbDAxXzJhKSAvIG47XG4gICAgeTEgPSAoeTEgKiBhIC0gdGhhdC5feTAgKiB0aGF0Ll9sMTJfMmEgKyB0aGF0Ll95MiAqIHRoYXQuX2wwMV8yYSkgLyBuO1xuICB9XG5cbiAgaWYgKHRoYXQuX2wyM19hID4gZXBzaWxvbikge1xuICAgIHZhciBiID0gMiAqIHRoYXQuX2wyM18yYSArIDMgKiB0aGF0Ll9sMjNfYSAqIHRoYXQuX2wxMl9hICsgdGhhdC5fbDEyXzJhLFxuICAgICAgICBtID0gMyAqIHRoYXQuX2wyM19hICogKHRoYXQuX2wyM19hICsgdGhhdC5fbDEyX2EpO1xuICAgIHgyID0gKHgyICogYiArIHRoYXQuX3gxICogdGhhdC5fbDIzXzJhIC0geCAqIHRoYXQuX2wxMl8yYSkgLyBtO1xuICAgIHkyID0gKHkyICogYiArIHRoYXQuX3kxICogdGhhdC5fbDIzXzJhIC0geSAqIHRoYXQuX2wxMl8yYSkgLyBtO1xuICB9XG5cbiAgdGhhdC5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKHgxLCB5MSwgeDIsIHkyLCB0aGF0Ll94MiwgdGhhdC5feTIpO1xufVxuXG5mdW5jdGlvbiBDYXRtdWxsUm9tKGNvbnRleHQsIGFscGhhKSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xuICB0aGlzLl9hbHBoYSA9IGFscGhhO1xufVxuXG5DYXRtdWxsUm9tLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gMDtcbiAgfSxcbiAgYXJlYUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IE5hTjtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPVxuICAgIHRoaXMuX3kwID0gdGhpcy5feTEgPSB0aGlzLl95MiA9IE5hTjtcbiAgICB0aGlzLl9sMDFfYSA9IHRoaXMuX2wxMl9hID0gdGhpcy5fbDIzX2EgPVxuICAgIHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSA9IHRoaXMuX2wyM18yYSA9XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDI6IHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gyLCB0aGlzLl95Mik7IGJyZWFrO1xuICAgICAgY2FzZSAzOiB0aGlzLnBvaW50KHRoaXMuX3gyLCB0aGlzLl95Mik7IGJyZWFrO1xuICAgIH1cbiAgICBpZiAodGhpcy5fbGluZSB8fCAodGhpcy5fbGluZSAhPT0gMCAmJiB0aGlzLl9wb2ludCA9PT0gMSkpIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuXG4gICAgaWYgKHRoaXMuX3BvaW50KSB7XG4gICAgICB2YXIgeDIzID0gdGhpcy5feDIgLSB4LFxuICAgICAgICAgIHkyMyA9IHRoaXMuX3kyIC0geTtcbiAgICAgIHRoaXMuX2wyM19hID0gTWF0aC5zcXJ0KHRoaXMuX2wyM18yYSA9IE1hdGgucG93KHgyMyAqIHgyMyArIHkyMyAqIHkyMywgdGhpcy5fYWxwaGEpKTtcbiAgICB9XG5cbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHgsIHkpIDogdGhpcy5fY29udGV4dC5tb3ZlVG8oeCwgeSk7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IGJyZWFrO1xuICAgICAgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IC8vIHByb2NlZWRcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG5cbiAgICB0aGlzLl9sMDFfYSA9IHRoaXMuX2wxMl9hLCB0aGlzLl9sMTJfYSA9IHRoaXMuX2wyM19hO1xuICAgIHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSwgdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhO1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdGhpcy5feDIsIHRoaXMuX3gyID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBjdXN0b20oYWxwaGEpIHtcblxuICBmdW5jdGlvbiBjYXRtdWxsUm9tKGNvbnRleHQpIHtcbiAgICByZXR1cm4gYWxwaGEgPyBuZXcgQ2F0bXVsbFJvbShjb250ZXh0LCBhbHBoYSkgOiBuZXcgQ2FyZGluYWwoY29udGV4dCwgMCk7XG4gIH1cblxuICBjYXRtdWxsUm9tLmFscGhhID0gZnVuY3Rpb24oYWxwaGEpIHtcbiAgICByZXR1cm4gY3VzdG9tKCthbHBoYSk7XG4gIH07XG5cbiAgcmV0dXJuIGNhdG11bGxSb207XG59KSgwLjUpO1xuIiwiaW1wb3J0IHtDYXJkaW5hbENsb3NlZH0gZnJvbSBcIi4vY2FyZGluYWxDbG9zZWQuanNcIjtcbmltcG9ydCBub29wIGZyb20gXCIuLi9ub29wLmpzXCI7XG5pbXBvcnQge3BvaW50fSBmcm9tIFwiLi9jYXRtdWxsUm9tLmpzXCI7XG5cbmZ1bmN0aW9uIENhdG11bGxSb21DbG9zZWQoY29udGV4dCwgYWxwaGEpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG4gIHRoaXMuX2FscGhhID0gYWxwaGE7XG59XG5cbkNhdG11bGxSb21DbG9zZWQucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IG5vb3AsXG4gIGFyZWFFbmQ6IG5vb3AsXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9IHRoaXMuX3gyID0gdGhpcy5feDMgPSB0aGlzLl94NCA9IHRoaXMuX3g1ID1cbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSB0aGlzLl95MyA9IHRoaXMuX3k0ID0gdGhpcy5feTUgPSBOYU47XG4gICAgdGhpcy5fbDAxX2EgPSB0aGlzLl9sMTJfYSA9IHRoaXMuX2wyM19hID1cbiAgICB0aGlzLl9sMDFfMmEgPSB0aGlzLl9sMTJfMmEgPSB0aGlzLl9sMjNfMmEgPVxuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAxOiB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gzLCB0aGlzLl95Myk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAyOiB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gzLCB0aGlzLl95Myk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAzOiB7XG4gICAgICAgIHRoaXMucG9pbnQodGhpcy5feDMsIHRoaXMuX3kzKTtcbiAgICAgICAgdGhpcy5wb2ludCh0aGlzLl94NCwgdGhpcy5feTQpO1xuICAgICAgICB0aGlzLnBvaW50KHRoaXMuX3g1LCB0aGlzLl95NSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcblxuICAgIGlmICh0aGlzLl9wb2ludCkge1xuICAgICAgdmFyIHgyMyA9IHRoaXMuX3gyIC0geCxcbiAgICAgICAgICB5MjMgPSB0aGlzLl95MiAtIHk7XG4gICAgICB0aGlzLl9sMjNfYSA9IE1hdGguc3FydCh0aGlzLl9sMjNfMmEgPSBNYXRoLnBvdyh4MjMgKiB4MjMgKyB5MjMgKiB5MjMsIHRoaXMuX2FscGhhKSk7XG4gICAgfVxuXG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IHRoaXMuX3gzID0geCwgdGhpcy5feTMgPSB5OyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94NCA9IHgsIHRoaXMuX3k0ID0geSk7IGJyZWFrO1xuICAgICAgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IHRoaXMuX3g1ID0geCwgdGhpcy5feTUgPSB5OyBicmVhaztcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG5cbiAgICB0aGlzLl9sMDFfYSA9IHRoaXMuX2wxMl9hLCB0aGlzLl9sMTJfYSA9IHRoaXMuX2wyM19hO1xuICAgIHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSwgdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhO1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdGhpcy5feDIsIHRoaXMuX3gyID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBjdXN0b20oYWxwaGEpIHtcblxuICBmdW5jdGlvbiBjYXRtdWxsUm9tKGNvbnRleHQpIHtcbiAgICByZXR1cm4gYWxwaGEgPyBuZXcgQ2F0bXVsbFJvbUNsb3NlZChjb250ZXh0LCBhbHBoYSkgOiBuZXcgQ2FyZGluYWxDbG9zZWQoY29udGV4dCwgMCk7XG4gIH1cblxuICBjYXRtdWxsUm9tLmFscGhhID0gZnVuY3Rpb24oYWxwaGEpIHtcbiAgICByZXR1cm4gY3VzdG9tKCthbHBoYSk7XG4gIH07XG5cbiAgcmV0dXJuIGNhdG11bGxSb207XG59KSgwLjUpO1xuIiwiaW1wb3J0IHtDYXJkaW5hbE9wZW59IGZyb20gXCIuL2NhcmRpbmFsT3Blbi5qc1wiO1xuaW1wb3J0IHtwb2ludH0gZnJvbSBcIi4vY2F0bXVsbFJvbS5qc1wiO1xuXG5mdW5jdGlvbiBDYXRtdWxsUm9tT3Blbihjb250ZXh0LCBhbHBoYSkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbiAgdGhpcy5fYWxwaGEgPSBhbHBoYTtcbn1cblxuQ2F0bXVsbFJvbU9wZW4ucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSAwO1xuICB9LFxuICBhcmVhRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gTmFOO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEgPSB0aGlzLl94MiA9XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSA9IHRoaXMuX3kyID0gTmFOO1xuICAgIHRoaXMuX2wwMV9hID0gdGhpcy5fbDEyX2EgPSB0aGlzLl9sMjNfYSA9XG4gICAgdGhpcy5fbDAxXzJhID0gdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhID1cbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIHRoaXMuX3BvaW50ID09PSAzKSkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmU7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG5cbiAgICBpZiAodGhpcy5fcG9pbnQpIHtcbiAgICAgIHZhciB4MjMgPSB0aGlzLl94MiAtIHgsXG4gICAgICAgICAgeTIzID0gdGhpcy5feTIgLSB5O1xuICAgICAgdGhpcy5fbDIzX2EgPSBNYXRoLnNxcnQodGhpcy5fbDIzXzJhID0gTWF0aC5wb3coeDIzICogeDIzICsgeTIzICogeTIzLCB0aGlzLl9hbHBoYSkpO1xuICAgIH1cblxuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDIsIHRoaXMuX3kyKSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gyLCB0aGlzLl95Mik7IGJyZWFrO1xuICAgICAgY2FzZSAzOiB0aGlzLl9wb2ludCA9IDQ7IC8vIHByb2NlZWRcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG5cbiAgICB0aGlzLl9sMDFfYSA9IHRoaXMuX2wxMl9hLCB0aGlzLl9sMTJfYSA9IHRoaXMuX2wyM19hO1xuICAgIHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSwgdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhO1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdGhpcy5feDIsIHRoaXMuX3gyID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBjdXN0b20oYWxwaGEpIHtcblxuICBmdW5jdGlvbiBjYXRtdWxsUm9tKGNvbnRleHQpIHtcbiAgICByZXR1cm4gYWxwaGEgPyBuZXcgQ2F0bXVsbFJvbU9wZW4oY29udGV4dCwgYWxwaGEpIDogbmV3IENhcmRpbmFsT3Blbihjb250ZXh0LCAwKTtcbiAgfVxuXG4gIGNhdG11bGxSb20uYWxwaGEgPSBmdW5jdGlvbihhbHBoYSkge1xuICAgIHJldHVybiBjdXN0b20oK2FscGhhKTtcbiAgfTtcblxuICByZXR1cm4gY2F0bXVsbFJvbTtcbn0pKDAuNSk7XG4iLCJpbXBvcnQgbm9vcCBmcm9tIFwiLi4vbm9vcC5qc1wiO1xuXG5mdW5jdGlvbiBMaW5lYXJDbG9zZWQoY29udGV4dCkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbn1cblxuTGluZWFyQ2xvc2VkLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBub29wLFxuICBhcmVhRW5kOiBub29wLFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX3BvaW50KSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuICAgIGlmICh0aGlzLl9wb2ludCkgdGhpcy5fY29udGV4dC5saW5lVG8oeCwgeSk7XG4gICAgZWxzZSB0aGlzLl9wb2ludCA9IDEsIHRoaXMuX2NvbnRleHQubW92ZVRvKHgsIHkpO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgTGluZWFyQ2xvc2VkKGNvbnRleHQpO1xufVxuIiwiZnVuY3Rpb24gc2lnbih4KSB7XG4gIHJldHVybiB4IDwgMCA/IC0xIDogMTtcbn1cblxuLy8gQ2FsY3VsYXRlIHRoZSBzbG9wZXMgb2YgdGhlIHRhbmdlbnRzIChIZXJtaXRlLXR5cGUgaW50ZXJwb2xhdGlvbikgYmFzZWQgb25cbi8vIHRoZSBmb2xsb3dpbmcgcGFwZXI6IFN0ZWZmZW4sIE0uIDE5OTAuIEEgU2ltcGxlIE1ldGhvZCBmb3IgTW9ub3RvbmljXG4vLyBJbnRlcnBvbGF0aW9uIGluIE9uZSBEaW1lbnNpb24uIEFzdHJvbm9teSBhbmQgQXN0cm9waHlzaWNzLCBWb2wuIDIzOSwgTk8uXG4vLyBOT1YoSUkpLCBQLiA0NDMsIDE5OTAuXG5mdW5jdGlvbiBzbG9wZTModGhhdCwgeDIsIHkyKSB7XG4gIHZhciBoMCA9IHRoYXQuX3gxIC0gdGhhdC5feDAsXG4gICAgICBoMSA9IHgyIC0gdGhhdC5feDEsXG4gICAgICBzMCA9ICh0aGF0Ll95MSAtIHRoYXQuX3kwKSAvIChoMCB8fCBoMSA8IDAgJiYgLTApLFxuICAgICAgczEgPSAoeTIgLSB0aGF0Ll95MSkgLyAoaDEgfHwgaDAgPCAwICYmIC0wKSxcbiAgICAgIHAgPSAoczAgKiBoMSArIHMxICogaDApIC8gKGgwICsgaDEpO1xuICByZXR1cm4gKHNpZ24oczApICsgc2lnbihzMSkpICogTWF0aC5taW4oTWF0aC5hYnMoczApLCBNYXRoLmFicyhzMSksIDAuNSAqIE1hdGguYWJzKHApKSB8fCAwO1xufVxuXG4vLyBDYWxjdWxhdGUgYSBvbmUtc2lkZWQgc2xvcGUuXG5mdW5jdGlvbiBzbG9wZTIodGhhdCwgdCkge1xuICB2YXIgaCA9IHRoYXQuX3gxIC0gdGhhdC5feDA7XG4gIHJldHVybiBoID8gKDMgKiAodGhhdC5feTEgLSB0aGF0Ll95MCkgLyBoIC0gdCkgLyAyIDogdDtcbn1cblxuLy8gQWNjb3JkaW5nIHRvIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0N1YmljX0hlcm1pdGVfc3BsaW5lI1JlcHJlc2VudGF0aW9uc1xuLy8gXCJ5b3UgY2FuIGV4cHJlc3MgY3ViaWMgSGVybWl0ZSBpbnRlcnBvbGF0aW9uIGluIHRlcm1zIG9mIGN1YmljIELDqXppZXIgY3VydmVzXG4vLyB3aXRoIHJlc3BlY3QgdG8gdGhlIGZvdXIgdmFsdWVzIHAwLCBwMCArIG0wIC8gMywgcDEgLSBtMSAvIDMsIHAxXCIuXG5mdW5jdGlvbiBwb2ludCh0aGF0LCB0MCwgdDEpIHtcbiAgdmFyIHgwID0gdGhhdC5feDAsXG4gICAgICB5MCA9IHRoYXQuX3kwLFxuICAgICAgeDEgPSB0aGF0Ll94MSxcbiAgICAgIHkxID0gdGhhdC5feTEsXG4gICAgICBkeCA9ICh4MSAtIHgwKSAvIDM7XG4gIHRoYXQuX2NvbnRleHQuYmV6aWVyQ3VydmVUbyh4MCArIGR4LCB5MCArIGR4ICogdDAsIHgxIC0gZHgsIHkxIC0gZHggKiB0MSwgeDEsIHkxKTtcbn1cblxuZnVuY3Rpb24gTW9ub3RvbmVYKGNvbnRleHQpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG59XG5cbk1vbm90b25lWC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSA9XG4gICAgdGhpcy5fdDAgPSBOYU47XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDI6IHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gxLCB0aGlzLl95MSk7IGJyZWFrO1xuICAgICAgY2FzZSAzOiBwb2ludCh0aGlzLCB0aGlzLl90MCwgc2xvcGUyKHRoaXMsIHRoaXMuX3QwKSk7IGJyZWFrO1xuICAgIH1cbiAgICBpZiAodGhpcy5fbGluZSB8fCAodGhpcy5fbGluZSAhPT0gMCAmJiB0aGlzLl9wb2ludCA9PT0gMSkpIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHZhciB0MSA9IE5hTjtcblxuICAgIHggPSAreCwgeSA9ICt5O1xuICAgIGlmICh4ID09PSB0aGlzLl94MSAmJiB5ID09PSB0aGlzLl95MSkgcmV0dXJuOyAvLyBJZ25vcmUgY29pbmNpZGVudCBwb2ludHMuXG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh4LCB5KSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHgsIHkpOyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyBwb2ludCh0aGlzLCBzbG9wZTIodGhpcywgdDEgPSBzbG9wZTModGhpcywgeCwgeSkpLCB0MSk7IGJyZWFrO1xuICAgICAgZGVmYXVsdDogcG9pbnQodGhpcywgdGhpcy5fdDAsIHQxID0gc2xvcGUzKHRoaXMsIHgsIHkpKTsgYnJlYWs7XG4gICAgfVxuXG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB4O1xuICAgIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0geTtcbiAgICB0aGlzLl90MCA9IHQxO1xuICB9XG59XG5cbmZ1bmN0aW9uIE1vbm90b25lWShjb250ZXh0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBuZXcgUmVmbGVjdENvbnRleHQoY29udGV4dCk7XG59XG5cbihNb25vdG9uZVkucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShNb25vdG9uZVgucHJvdG90eXBlKSkucG9pbnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gIE1vbm90b25lWC5wcm90b3R5cGUucG9pbnQuY2FsbCh0aGlzLCB5LCB4KTtcbn07XG5cbmZ1bmN0aW9uIFJlZmxlY3RDb250ZXh0KGNvbnRleHQpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG59XG5cblJlZmxlY3RDb250ZXh0LnByb3RvdHlwZSA9IHtcbiAgbW92ZVRvOiBmdW5jdGlvbih4LCB5KSB7IHRoaXMuX2NvbnRleHQubW92ZVRvKHksIHgpOyB9LFxuICBjbG9zZVBhdGg6IGZ1bmN0aW9uKCkgeyB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpOyB9LFxuICBsaW5lVG86IGZ1bmN0aW9uKHgsIHkpIHsgdGhpcy5fY29udGV4dC5saW5lVG8oeSwgeCk7IH0sXG4gIGJlemllckN1cnZlVG86IGZ1bmN0aW9uKHgxLCB5MSwgeDIsIHkyLCB4LCB5KSB7IHRoaXMuX2NvbnRleHQuYmV6aWVyQ3VydmVUbyh5MSwgeDEsIHkyLCB4MiwgeSwgeCk7IH1cbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBtb25vdG9uZVgoY29udGV4dCkge1xuICByZXR1cm4gbmV3IE1vbm90b25lWChjb250ZXh0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1vbm90b25lWShjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgTW9ub3RvbmVZKGNvbnRleHQpO1xufVxuIiwiZnVuY3Rpb24gTmF0dXJhbChjb250ZXh0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xufVxuXG5OYXR1cmFsLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gMDtcbiAgfSxcbiAgYXJlYUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IE5hTjtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94ID0gW107XG4gICAgdGhpcy5feSA9IFtdO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgeCA9IHRoaXMuX3gsXG4gICAgICAgIHkgPSB0aGlzLl95LFxuICAgICAgICBuID0geC5sZW5ndGg7XG5cbiAgICBpZiAobikge1xuICAgICAgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHhbMF0sIHlbMF0pIDogdGhpcy5fY29udGV4dC5tb3ZlVG8oeFswXSwgeVswXSk7XG4gICAgICBpZiAobiA9PT0gMikge1xuICAgICAgICB0aGlzLl9jb250ZXh0LmxpbmVUbyh4WzFdLCB5WzFdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBweCA9IGNvbnRyb2xQb2ludHMoeCksXG4gICAgICAgICAgICBweSA9IGNvbnRyb2xQb2ludHMoeSk7XG4gICAgICAgIGZvciAodmFyIGkwID0gMCwgaTEgPSAxOyBpMSA8IG47ICsraTAsICsraTEpIHtcbiAgICAgICAgICB0aGlzLl9jb250ZXh0LmJlemllckN1cnZlVG8ocHhbMF1baTBdLCBweVswXVtpMF0sIHB4WzFdW2kwXSwgcHlbMV1baTBdLCB4W2kxXSwgeVtpMV0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX2xpbmUgfHwgKHRoaXMuX2xpbmUgIT09IDAgJiYgbiA9PT0gMSkpIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lO1xuICAgIHRoaXMuX3ggPSB0aGlzLl95ID0gbnVsbDtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB0aGlzLl94LnB1c2goK3gpO1xuICAgIHRoaXMuX3kucHVzaCgreSk7XG4gIH1cbn07XG5cbi8vIFNlZSBodHRwczovL3d3dy5wYXJ0aWNsZWluY2VsbC5jb20vMjAxMi9iZXppZXItc3BsaW5lcy8gZm9yIGRlcml2YXRpb24uXG5mdW5jdGlvbiBjb250cm9sUG9pbnRzKHgpIHtcbiAgdmFyIGksXG4gICAgICBuID0geC5sZW5ndGggLSAxLFxuICAgICAgbSxcbiAgICAgIGEgPSBuZXcgQXJyYXkobiksXG4gICAgICBiID0gbmV3IEFycmF5KG4pLFxuICAgICAgciA9IG5ldyBBcnJheShuKTtcbiAgYVswXSA9IDAsIGJbMF0gPSAyLCByWzBdID0geFswXSArIDIgKiB4WzFdO1xuICBmb3IgKGkgPSAxOyBpIDwgbiAtIDE7ICsraSkgYVtpXSA9IDEsIGJbaV0gPSA0LCByW2ldID0gNCAqIHhbaV0gKyAyICogeFtpICsgMV07XG4gIGFbbiAtIDFdID0gMiwgYltuIC0gMV0gPSA3LCByW24gLSAxXSA9IDggKiB4W24gLSAxXSArIHhbbl07XG4gIGZvciAoaSA9IDE7IGkgPCBuOyArK2kpIG0gPSBhW2ldIC8gYltpIC0gMV0sIGJbaV0gLT0gbSwgcltpXSAtPSBtICogcltpIC0gMV07XG4gIGFbbiAtIDFdID0gcltuIC0gMV0gLyBiW24gLSAxXTtcbiAgZm9yIChpID0gbiAtIDI7IGkgPj0gMDsgLS1pKSBhW2ldID0gKHJbaV0gLSBhW2kgKyAxXSkgLyBiW2ldO1xuICBiW24gLSAxXSA9ICh4W25dICsgYVtuIC0gMV0pIC8gMjtcbiAgZm9yIChpID0gMDsgaSA8IG4gLSAxOyArK2kpIGJbaV0gPSAyICogeFtpICsgMV0gLSBhW2kgKyAxXTtcbiAgcmV0dXJuIFthLCBiXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29udGV4dCkge1xuICByZXR1cm4gbmV3IE5hdHVyYWwoY29udGV4dCk7XG59XG4iLCJmdW5jdGlvbiBTdGVwKGNvbnRleHQsIHQpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG4gIHRoaXMuX3QgPSB0O1xufVxuXG5TdGVwLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gMDtcbiAgfSxcbiAgYXJlYUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IE5hTjtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94ID0gdGhpcy5feSA9IE5hTjtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICgwIDwgdGhpcy5fdCAmJiB0aGlzLl90IDwgMSAmJiB0aGlzLl9wb2ludCA9PT0gMikgdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feCwgdGhpcy5feSk7XG4gICAgaWYgKHRoaXMuX2xpbmUgfHwgKHRoaXMuX2xpbmUgIT09IDAgJiYgdGhpcy5fcG9pbnQgPT09IDEpKSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIGlmICh0aGlzLl9saW5lID49IDApIHRoaXMuX3QgPSAxIC0gdGhpcy5fdCwgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8oeCwgeSkgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh4LCB5KTsgYnJlYWs7XG4gICAgICBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgLy8gcHJvY2VlZFxuICAgICAgZGVmYXVsdDoge1xuICAgICAgICBpZiAodGhpcy5fdCA8PSAwKSB7XG4gICAgICAgICAgdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feCwgeSk7XG4gICAgICAgICAgdGhpcy5fY29udGV4dC5saW5lVG8oeCwgeSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHgxID0gdGhpcy5feCAqICgxIC0gdGhpcy5fdCkgKyB4ICogdGhpcy5fdDtcbiAgICAgICAgICB0aGlzLl9jb250ZXh0LmxpbmVUbyh4MSwgdGhpcy5feSk7XG4gICAgICAgICAgdGhpcy5fY29udGV4dC5saW5lVG8oeDEsIHkpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLl94ID0geCwgdGhpcy5feSA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbnRleHQpIHtcbiAgcmV0dXJuIG5ldyBTdGVwKGNvbnRleHQsIDAuNSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdGVwQmVmb3JlKGNvbnRleHQpIHtcbiAgcmV0dXJuIG5ldyBTdGVwKGNvbnRleHQsIDApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RlcEFmdGVyKGNvbnRleHQpIHtcbiAgcmV0dXJuIG5ldyBTdGVwKGNvbnRleHQsIDEpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzLCBvcmRlcikge1xuICBpZiAoISgobiA9IHNlcmllcy5sZW5ndGgpID4gMSkpIHJldHVybjtcbiAgZm9yICh2YXIgaSA9IDEsIGosIHMwLCBzMSA9IHNlcmllc1tvcmRlclswXV0sIG4sIG0gPSBzMS5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICBzMCA9IHMxLCBzMSA9IHNlcmllc1tvcmRlcltpXV07XG4gICAgZm9yIChqID0gMDsgaiA8IG07ICsraikge1xuICAgICAgczFbal1bMV0gKz0gczFbal1bMF0gPSBpc05hTihzMFtqXVsxXSkgPyBzMFtqXVswXSA6IHMwW2pdWzFdO1xuICAgIH1cbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzKSB7XG4gIHZhciBuID0gc2VyaWVzLmxlbmd0aCwgbyA9IG5ldyBBcnJheShuKTtcbiAgd2hpbGUgKC0tbiA+PSAwKSBvW25dID0gbjtcbiAgcmV0dXJuIG87XG59XG4iLCJpbXBvcnQge3NsaWNlfSBmcm9tIFwiLi9hcnJheS5qc1wiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50LmpzXCI7XG5pbXBvcnQgb2Zmc2V0Tm9uZSBmcm9tIFwiLi9vZmZzZXQvbm9uZS5qc1wiO1xuaW1wb3J0IG9yZGVyTm9uZSBmcm9tIFwiLi9vcmRlci9ub25lLmpzXCI7XG5cbmZ1bmN0aW9uIHN0YWNrVmFsdWUoZCwga2V5KSB7XG4gIHJldHVybiBkW2tleV07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIga2V5cyA9IGNvbnN0YW50KFtdKSxcbiAgICAgIG9yZGVyID0gb3JkZXJOb25lLFxuICAgICAgb2Zmc2V0ID0gb2Zmc2V0Tm9uZSxcbiAgICAgIHZhbHVlID0gc3RhY2tWYWx1ZTtcblxuICBmdW5jdGlvbiBzdGFjayhkYXRhKSB7XG4gICAgdmFyIGt6ID0ga2V5cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpLFxuICAgICAgICBpLFxuICAgICAgICBtID0gZGF0YS5sZW5ndGgsXG4gICAgICAgIG4gPSBrei5sZW5ndGgsXG4gICAgICAgIHN6ID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBvejtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGZvciAodmFyIGtpID0ga3pbaV0sIHNpID0gc3pbaV0gPSBuZXcgQXJyYXkobSksIGogPSAwLCBzaWo7IGogPCBtOyArK2opIHtcbiAgICAgICAgc2lbal0gPSBzaWogPSBbMCwgK3ZhbHVlKGRhdGFbal0sIGtpLCBqLCBkYXRhKV07XG4gICAgICAgIHNpai5kYXRhID0gZGF0YVtqXTtcbiAgICAgIH1cbiAgICAgIHNpLmtleSA9IGtpO1xuICAgIH1cblxuICAgIGZvciAoaSA9IDAsIG96ID0gb3JkZXIoc3opOyBpIDwgbjsgKytpKSB7XG4gICAgICBzeltveltpXV0uaW5kZXggPSBpO1xuICAgIH1cblxuICAgIG9mZnNldChzeiwgb3opO1xuICAgIHJldHVybiBzejtcbiAgfVxuXG4gIHN0YWNrLmtleXMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoa2V5cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoc2xpY2UuY2FsbChfKSksIHN0YWNrKSA6IGtleXM7XG4gIH07XG5cbiAgc3RhY2sudmFsdWUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodmFsdWUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgc3RhY2spIDogdmFsdWU7XG4gIH07XG5cbiAgc3RhY2sub3JkZXIgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAob3JkZXIgPSBfID09IG51bGwgPyBvcmRlck5vbmUgOiB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KHNsaWNlLmNhbGwoXykpLCBzdGFjaykgOiBvcmRlcjtcbiAgfTtcblxuICBzdGFjay5vZmZzZXQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAob2Zmc2V0ID0gXyA9PSBudWxsID8gb2Zmc2V0Tm9uZSA6IF8sIHN0YWNrKSA6IG9mZnNldDtcbiAgfTtcblxuICByZXR1cm4gc3RhY2s7XG59XG4iLCJpbXBvcnQgbm9uZSBmcm9tIFwiLi9ub25lLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlcmllcywgb3JkZXIpIHtcbiAgaWYgKCEoKG4gPSBzZXJpZXMubGVuZ3RoKSA+IDApKSByZXR1cm47XG4gIGZvciAodmFyIGksIG4sIGogPSAwLCBtID0gc2VyaWVzWzBdLmxlbmd0aCwgeTsgaiA8IG07ICsraikge1xuICAgIGZvciAoeSA9IGkgPSAwOyBpIDwgbjsgKytpKSB5ICs9IHNlcmllc1tpXVtqXVsxXSB8fCAwO1xuICAgIGlmICh5KSBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSBzZXJpZXNbaV1bal1bMV0gLz0geTtcbiAgfVxuICBub25lKHNlcmllcywgb3JkZXIpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzLCBvcmRlcikge1xuICBpZiAoISgobiA9IHNlcmllcy5sZW5ndGgpID4gMCkpIHJldHVybjtcbiAgZm9yICh2YXIgaSwgaiA9IDAsIGQsIGR5LCB5cCwgeW4sIG4sIG0gPSBzZXJpZXNbb3JkZXJbMF1dLmxlbmd0aDsgaiA8IG07ICsraikge1xuICAgIGZvciAoeXAgPSB5biA9IDAsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKGR5ID0gKGQgPSBzZXJpZXNbb3JkZXJbaV1dW2pdKVsxXSAtIGRbMF0pID4gMCkge1xuICAgICAgICBkWzBdID0geXAsIGRbMV0gPSB5cCArPSBkeTtcbiAgICAgIH0gZWxzZSBpZiAoZHkgPCAwKSB7XG4gICAgICAgIGRbMV0gPSB5biwgZFswXSA9IHluICs9IGR5O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZFswXSA9IDAsIGRbMV0gPSBkeTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsImltcG9ydCBub25lIGZyb20gXCIuL25vbmUuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzLCBvcmRlcikge1xuICBpZiAoISgobiA9IHNlcmllcy5sZW5ndGgpID4gMCkpIHJldHVybjtcbiAgZm9yICh2YXIgaiA9IDAsIHMwID0gc2VyaWVzW29yZGVyWzBdXSwgbiwgbSA9IHMwLmxlbmd0aDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGkgPSAwLCB5ID0gMDsgaSA8IG47ICsraSkgeSArPSBzZXJpZXNbaV1bal1bMV0gfHwgMDtcbiAgICBzMFtqXVsxXSArPSBzMFtqXVswXSA9IC15IC8gMjtcbiAgfVxuICBub25lKHNlcmllcywgb3JkZXIpO1xufVxuIiwiaW1wb3J0IG5vbmUgZnJvbSBcIi4vbm9uZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMsIG9yZGVyKSB7XG4gIGlmICghKChuID0gc2VyaWVzLmxlbmd0aCkgPiAwKSB8fCAhKChtID0gKHMwID0gc2VyaWVzW29yZGVyWzBdXSkubGVuZ3RoKSA+IDApKSByZXR1cm47XG4gIGZvciAodmFyIHkgPSAwLCBqID0gMSwgczAsIG0sIG47IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBpID0gMCwgczEgPSAwLCBzMiA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIHZhciBzaSA9IHNlcmllc1tvcmRlcltpXV0sXG4gICAgICAgICAgc2lqMCA9IHNpW2pdWzFdIHx8IDAsXG4gICAgICAgICAgc2lqMSA9IHNpW2ogLSAxXVsxXSB8fCAwLFxuICAgICAgICAgIHMzID0gKHNpajAgLSBzaWoxKSAvIDI7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IGk7ICsraykge1xuICAgICAgICB2YXIgc2sgPSBzZXJpZXNbb3JkZXJba11dLFxuICAgICAgICAgICAgc2tqMCA9IHNrW2pdWzFdIHx8IDAsXG4gICAgICAgICAgICBza2oxID0gc2tbaiAtIDFdWzFdIHx8IDA7XG4gICAgICAgIHMzICs9IHNrajAgLSBza2oxO1xuICAgICAgfVxuICAgICAgczEgKz0gc2lqMCwgczIgKz0gczMgKiBzaWowO1xuICAgIH1cbiAgICBzMFtqIC0gMV1bMV0gKz0gczBbaiAtIDFdWzBdID0geTtcbiAgICBpZiAoczEpIHkgLT0gczIgLyBzMTtcbiAgfVxuICBzMFtqIC0gMV1bMV0gKz0gczBbaiAtIDFdWzBdID0geTtcbiAgbm9uZShzZXJpZXMsIG9yZGVyKTtcbn1cbiIsImltcG9ydCBub25lIGZyb20gXCIuL25vbmUuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzKSB7XG4gIHZhciBwZWFrcyA9IHNlcmllcy5tYXAocGVhayk7XG4gIHJldHVybiBub25lKHNlcmllcykuc29ydChmdW5jdGlvbihhLCBiKSB7IHJldHVybiBwZWFrc1thXSAtIHBlYWtzW2JdOyB9KTtcbn1cblxuZnVuY3Rpb24gcGVhayhzZXJpZXMpIHtcbiAgdmFyIGkgPSAtMSwgaiA9IDAsIG4gPSBzZXJpZXMubGVuZ3RoLCB2aSwgdmogPSAtSW5maW5pdHk7XG4gIHdoaWxlICgrK2kgPCBuKSBpZiAoKHZpID0gK3Nlcmllc1tpXVsxXSkgPiB2aikgdmogPSB2aSwgaiA9IGk7XG4gIHJldHVybiBqO1xufVxuIiwiaW1wb3J0IG5vbmUgZnJvbSBcIi4vbm9uZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMpIHtcbiAgdmFyIHN1bXMgPSBzZXJpZXMubWFwKHN1bSk7XG4gIHJldHVybiBub25lKHNlcmllcykuc29ydChmdW5jdGlvbihhLCBiKSB7IHJldHVybiBzdW1zW2FdIC0gc3Vtc1tiXTsgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdW0oc2VyaWVzKSB7XG4gIHZhciBzID0gMCwgaSA9IC0xLCBuID0gc2VyaWVzLmxlbmd0aCwgdjtcbiAgd2hpbGUgKCsraSA8IG4pIGlmICh2ID0gK3Nlcmllc1tpXVsxXSkgcyArPSB2O1xuICByZXR1cm4gcztcbn1cbiIsImltcG9ydCBhc2NlbmRpbmcgZnJvbSBcIi4vYXNjZW5kaW5nLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlcmllcykge1xuICByZXR1cm4gYXNjZW5kaW5nKHNlcmllcykucmV2ZXJzZSgpO1xufVxuIiwiaW1wb3J0IGFwcGVhcmFuY2UgZnJvbSBcIi4vYXBwZWFyYW5jZS5qc1wiO1xuaW1wb3J0IHtzdW19IGZyb20gXCIuL2FzY2VuZGluZy5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMpIHtcbiAgdmFyIG4gPSBzZXJpZXMubGVuZ3RoLFxuICAgICAgaSxcbiAgICAgIGosXG4gICAgICBzdW1zID0gc2VyaWVzLm1hcChzdW0pLFxuICAgICAgb3JkZXIgPSBhcHBlYXJhbmNlKHNlcmllcyksXG4gICAgICB0b3AgPSAwLFxuICAgICAgYm90dG9tID0gMCxcbiAgICAgIHRvcHMgPSBbXSxcbiAgICAgIGJvdHRvbXMgPSBbXTtcblxuICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgaiA9IG9yZGVyW2ldO1xuICAgIGlmICh0b3AgPCBib3R0b20pIHtcbiAgICAgIHRvcCArPSBzdW1zW2pdO1xuICAgICAgdG9wcy5wdXNoKGopO1xuICAgIH0gZWxzZSB7XG4gICAgICBib3R0b20gKz0gc3Vtc1tqXTtcbiAgICAgIGJvdHRvbXMucHVzaChqKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYm90dG9tcy5yZXZlcnNlKCkuY29uY2F0KHRvcHMpO1xufVxuIiwiaW1wb3J0IG5vbmUgZnJvbSBcIi4vbm9uZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMpIHtcbiAgcmV0dXJuIG5vbmUoc2VyaWVzKS5yZXZlcnNlKCk7XG59XG4iLCJpbXBvcnQge3V0Y0Zvcm1hdH0gZnJvbSBcIi4vZGVmYXVsdExvY2FsZS5qc1wiO1xuXG5leHBvcnQgdmFyIGlzb1NwZWNpZmllciA9IFwiJVktJW0tJWRUJUg6JU06JVMuJUxaXCI7XG5cbmZ1bmN0aW9uIGZvcm1hdElzb05hdGl2ZShkYXRlKSB7XG4gIHJldHVybiBkYXRlLnRvSVNPU3RyaW5nKCk7XG59XG5cbnZhciBmb3JtYXRJc28gPSBEYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZ1xuICAgID8gZm9ybWF0SXNvTmF0aXZlXG4gICAgOiB1dGNGb3JtYXQoaXNvU3BlY2lmaWVyKTtcblxuZXhwb3J0IGRlZmF1bHQgZm9ybWF0SXNvO1xuIiwiaW1wb3J0IHtpc29TcGVjaWZpZXJ9IGZyb20gXCIuL2lzb0Zvcm1hdC5qc1wiO1xuaW1wb3J0IHt1dGNQYXJzZX0gZnJvbSBcIi4vZGVmYXVsdExvY2FsZS5qc1wiO1xuXG5mdW5jdGlvbiBwYXJzZUlzb05hdGl2ZShzdHJpbmcpIHtcbiAgdmFyIGRhdGUgPSBuZXcgRGF0ZShzdHJpbmcpO1xuICByZXR1cm4gaXNOYU4oZGF0ZSkgPyBudWxsIDogZGF0ZTtcbn1cblxudmFyIHBhcnNlSXNvID0gK25ldyBEYXRlKFwiMjAwMC0wMS0wMVQwMDowMDowMC4wMDBaXCIpXG4gICAgPyBwYXJzZUlzb05hdGl2ZVxuICAgIDogdXRjUGFyc2UoaXNvU3BlY2lmaWVyKTtcblxuZXhwb3J0IGRlZmF1bHQgcGFyc2VJc287XG4iLCJpbXBvcnQge1RpbWVyLCBub3d9IGZyb20gXCIuL3RpbWVyLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNhbGxiYWNrLCBkZWxheSwgdGltZSkge1xuICB2YXIgdCA9IG5ldyBUaW1lciwgdG90YWwgPSBkZWxheTtcbiAgaWYgKGRlbGF5ID09IG51bGwpIHJldHVybiB0LnJlc3RhcnQoY2FsbGJhY2ssIGRlbGF5LCB0aW1lKSwgdDtcbiAgZGVsYXkgPSArZGVsYXksIHRpbWUgPSB0aW1lID09IG51bGwgPyBub3coKSA6ICt0aW1lO1xuICB0LnJlc3RhcnQoZnVuY3Rpb24gdGljayhlbGFwc2VkKSB7XG4gICAgZWxhcHNlZCArPSB0b3RhbDtcbiAgICB0LnJlc3RhcnQodGljaywgdG90YWwgKz0gZGVsYXksIHRpbWUpO1xuICAgIGNhbGxiYWNrKGVsYXBzZWQpO1xuICB9LCBkZWxheSwgdGltZSk7XG4gIHJldHVybiB0O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHg7XG4gIH07XG59XG4iLCJleHBvcnQgZnVuY3Rpb24geChkKSB7XG4gIHJldHVybiBkWzBdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24geShkKSB7XG4gIHJldHVybiBkWzFdO1xufVxuIiwiZnVuY3Rpb24gUmVkQmxhY2tUcmVlKCkge1xuICB0aGlzLl8gPSBudWxsOyAvLyByb290IG5vZGVcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFJlZEJsYWNrTm9kZShub2RlKSB7XG4gIG5vZGUuVSA9IC8vIHBhcmVudCBub2RlXG4gIG5vZGUuQyA9IC8vIGNvbG9yIC0gdHJ1ZSBmb3IgcmVkLCBmYWxzZSBmb3IgYmxhY2tcbiAgbm9kZS5MID0gLy8gbGVmdCBub2RlXG4gIG5vZGUuUiA9IC8vIHJpZ2h0IG5vZGVcbiAgbm9kZS5QID0gLy8gcHJldmlvdXMgbm9kZVxuICBub2RlLk4gPSBudWxsOyAvLyBuZXh0IG5vZGVcbn1cblxuUmVkQmxhY2tUcmVlLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFJlZEJsYWNrVHJlZSxcblxuICBpbnNlcnQ6IGZ1bmN0aW9uKGFmdGVyLCBub2RlKSB7XG4gICAgdmFyIHBhcmVudCwgZ3JhbmRwYSwgdW5jbGU7XG5cbiAgICBpZiAoYWZ0ZXIpIHtcbiAgICAgIG5vZGUuUCA9IGFmdGVyO1xuICAgICAgbm9kZS5OID0gYWZ0ZXIuTjtcbiAgICAgIGlmIChhZnRlci5OKSBhZnRlci5OLlAgPSBub2RlO1xuICAgICAgYWZ0ZXIuTiA9IG5vZGU7XG4gICAgICBpZiAoYWZ0ZXIuUikge1xuICAgICAgICBhZnRlciA9IGFmdGVyLlI7XG4gICAgICAgIHdoaWxlIChhZnRlci5MKSBhZnRlciA9IGFmdGVyLkw7XG4gICAgICAgIGFmdGVyLkwgPSBub2RlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYWZ0ZXIuUiA9IG5vZGU7XG4gICAgICB9XG4gICAgICBwYXJlbnQgPSBhZnRlcjtcbiAgICB9IGVsc2UgaWYgKHRoaXMuXykge1xuICAgICAgYWZ0ZXIgPSBSZWRCbGFja0ZpcnN0KHRoaXMuXyk7XG4gICAgICBub2RlLlAgPSBudWxsO1xuICAgICAgbm9kZS5OID0gYWZ0ZXI7XG4gICAgICBhZnRlci5QID0gYWZ0ZXIuTCA9IG5vZGU7XG4gICAgICBwYXJlbnQgPSBhZnRlcjtcbiAgICB9IGVsc2Uge1xuICAgICAgbm9kZS5QID0gbm9kZS5OID0gbnVsbDtcbiAgICAgIHRoaXMuXyA9IG5vZGU7XG4gICAgICBwYXJlbnQgPSBudWxsO1xuICAgIH1cbiAgICBub2RlLkwgPSBub2RlLlIgPSBudWxsO1xuICAgIG5vZGUuVSA9IHBhcmVudDtcbiAgICBub2RlLkMgPSB0cnVlO1xuXG4gICAgYWZ0ZXIgPSBub2RlO1xuICAgIHdoaWxlIChwYXJlbnQgJiYgcGFyZW50LkMpIHtcbiAgICAgIGdyYW5kcGEgPSBwYXJlbnQuVTtcbiAgICAgIGlmIChwYXJlbnQgPT09IGdyYW5kcGEuTCkge1xuICAgICAgICB1bmNsZSA9IGdyYW5kcGEuUjtcbiAgICAgICAgaWYgKHVuY2xlICYmIHVuY2xlLkMpIHtcbiAgICAgICAgICBwYXJlbnQuQyA9IHVuY2xlLkMgPSBmYWxzZTtcbiAgICAgICAgICBncmFuZHBhLkMgPSB0cnVlO1xuICAgICAgICAgIGFmdGVyID0gZ3JhbmRwYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoYWZ0ZXIgPT09IHBhcmVudC5SKSB7XG4gICAgICAgICAgICBSZWRCbGFja1JvdGF0ZUxlZnQodGhpcywgcGFyZW50KTtcbiAgICAgICAgICAgIGFmdGVyID0gcGFyZW50O1xuICAgICAgICAgICAgcGFyZW50ID0gYWZ0ZXIuVTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcGFyZW50LkMgPSBmYWxzZTtcbiAgICAgICAgICBncmFuZHBhLkMgPSB0cnVlO1xuICAgICAgICAgIFJlZEJsYWNrUm90YXRlUmlnaHQodGhpcywgZ3JhbmRwYSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHVuY2xlID0gZ3JhbmRwYS5MO1xuICAgICAgICBpZiAodW5jbGUgJiYgdW5jbGUuQykge1xuICAgICAgICAgIHBhcmVudC5DID0gdW5jbGUuQyA9IGZhbHNlO1xuICAgICAgICAgIGdyYW5kcGEuQyA9IHRydWU7XG4gICAgICAgICAgYWZ0ZXIgPSBncmFuZHBhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChhZnRlciA9PT0gcGFyZW50LkwpIHtcbiAgICAgICAgICAgIFJlZEJsYWNrUm90YXRlUmlnaHQodGhpcywgcGFyZW50KTtcbiAgICAgICAgICAgIGFmdGVyID0gcGFyZW50O1xuICAgICAgICAgICAgcGFyZW50ID0gYWZ0ZXIuVTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcGFyZW50LkMgPSBmYWxzZTtcbiAgICAgICAgICBncmFuZHBhLkMgPSB0cnVlO1xuICAgICAgICAgIFJlZEJsYWNrUm90YXRlTGVmdCh0aGlzLCBncmFuZHBhKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcGFyZW50ID0gYWZ0ZXIuVTtcbiAgICB9XG4gICAgdGhpcy5fLkMgPSBmYWxzZTtcbiAgfSxcblxuICByZW1vdmU6IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICBpZiAobm9kZS5OKSBub2RlLk4uUCA9IG5vZGUuUDtcbiAgICBpZiAobm9kZS5QKSBub2RlLlAuTiA9IG5vZGUuTjtcbiAgICBub2RlLk4gPSBub2RlLlAgPSBudWxsO1xuXG4gICAgdmFyIHBhcmVudCA9IG5vZGUuVSxcbiAgICAgICAgc2libGluZyxcbiAgICAgICAgbGVmdCA9IG5vZGUuTCxcbiAgICAgICAgcmlnaHQgPSBub2RlLlIsXG4gICAgICAgIG5leHQsXG4gICAgICAgIHJlZDtcblxuICAgIGlmICghbGVmdCkgbmV4dCA9IHJpZ2h0O1xuICAgIGVsc2UgaWYgKCFyaWdodCkgbmV4dCA9IGxlZnQ7XG4gICAgZWxzZSBuZXh0ID0gUmVkQmxhY2tGaXJzdChyaWdodCk7XG5cbiAgICBpZiAocGFyZW50KSB7XG4gICAgICBpZiAocGFyZW50LkwgPT09IG5vZGUpIHBhcmVudC5MID0gbmV4dDtcbiAgICAgIGVsc2UgcGFyZW50LlIgPSBuZXh0O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl8gPSBuZXh0O1xuICAgIH1cblxuICAgIGlmIChsZWZ0ICYmIHJpZ2h0KSB7XG4gICAgICByZWQgPSBuZXh0LkM7XG4gICAgICBuZXh0LkMgPSBub2RlLkM7XG4gICAgICBuZXh0LkwgPSBsZWZ0O1xuICAgICAgbGVmdC5VID0gbmV4dDtcbiAgICAgIGlmIChuZXh0ICE9PSByaWdodCkge1xuICAgICAgICBwYXJlbnQgPSBuZXh0LlU7XG4gICAgICAgIG5leHQuVSA9IG5vZGUuVTtcbiAgICAgICAgbm9kZSA9IG5leHQuUjtcbiAgICAgICAgcGFyZW50LkwgPSBub2RlO1xuICAgICAgICBuZXh0LlIgPSByaWdodDtcbiAgICAgICAgcmlnaHQuVSA9IG5leHQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXh0LlUgPSBwYXJlbnQ7XG4gICAgICAgIHBhcmVudCA9IG5leHQ7XG4gICAgICAgIG5vZGUgPSBuZXh0LlI7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlZCA9IG5vZGUuQztcbiAgICAgIG5vZGUgPSBuZXh0O1xuICAgIH1cblxuICAgIGlmIChub2RlKSBub2RlLlUgPSBwYXJlbnQ7XG4gICAgaWYgKHJlZCkgcmV0dXJuO1xuICAgIGlmIChub2RlICYmIG5vZGUuQykgeyBub2RlLkMgPSBmYWxzZTsgcmV0dXJuOyB9XG5cbiAgICBkbyB7XG4gICAgICBpZiAobm9kZSA9PT0gdGhpcy5fKSBicmVhaztcbiAgICAgIGlmIChub2RlID09PSBwYXJlbnQuTCkge1xuICAgICAgICBzaWJsaW5nID0gcGFyZW50LlI7XG4gICAgICAgIGlmIChzaWJsaW5nLkMpIHtcbiAgICAgICAgICBzaWJsaW5nLkMgPSBmYWxzZTtcbiAgICAgICAgICBwYXJlbnQuQyA9IHRydWU7XG4gICAgICAgICAgUmVkQmxhY2tSb3RhdGVMZWZ0KHRoaXMsIHBhcmVudCk7XG4gICAgICAgICAgc2libGluZyA9IHBhcmVudC5SO1xuICAgICAgICB9XG4gICAgICAgIGlmICgoc2libGluZy5MICYmIHNpYmxpbmcuTC5DKVxuICAgICAgICAgICAgfHwgKHNpYmxpbmcuUiAmJiBzaWJsaW5nLlIuQykpIHtcbiAgICAgICAgICBpZiAoIXNpYmxpbmcuUiB8fCAhc2libGluZy5SLkMpIHtcbiAgICAgICAgICAgIHNpYmxpbmcuTC5DID0gZmFsc2U7XG4gICAgICAgICAgICBzaWJsaW5nLkMgPSB0cnVlO1xuICAgICAgICAgICAgUmVkQmxhY2tSb3RhdGVSaWdodCh0aGlzLCBzaWJsaW5nKTtcbiAgICAgICAgICAgIHNpYmxpbmcgPSBwYXJlbnQuUjtcbiAgICAgICAgICB9XG4gICAgICAgICAgc2libGluZy5DID0gcGFyZW50LkM7XG4gICAgICAgICAgcGFyZW50LkMgPSBzaWJsaW5nLlIuQyA9IGZhbHNlO1xuICAgICAgICAgIFJlZEJsYWNrUm90YXRlTGVmdCh0aGlzLCBwYXJlbnQpO1xuICAgICAgICAgIG5vZGUgPSB0aGlzLl87XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNpYmxpbmcgPSBwYXJlbnQuTDtcbiAgICAgICAgaWYgKHNpYmxpbmcuQykge1xuICAgICAgICAgIHNpYmxpbmcuQyA9IGZhbHNlO1xuICAgICAgICAgIHBhcmVudC5DID0gdHJ1ZTtcbiAgICAgICAgICBSZWRCbGFja1JvdGF0ZVJpZ2h0KHRoaXMsIHBhcmVudCk7XG4gICAgICAgICAgc2libGluZyA9IHBhcmVudC5MO1xuICAgICAgICB9XG4gICAgICAgIGlmICgoc2libGluZy5MICYmIHNpYmxpbmcuTC5DKVxuICAgICAgICAgIHx8IChzaWJsaW5nLlIgJiYgc2libGluZy5SLkMpKSB7XG4gICAgICAgICAgaWYgKCFzaWJsaW5nLkwgfHwgIXNpYmxpbmcuTC5DKSB7XG4gICAgICAgICAgICBzaWJsaW5nLlIuQyA9IGZhbHNlO1xuICAgICAgICAgICAgc2libGluZy5DID0gdHJ1ZTtcbiAgICAgICAgICAgIFJlZEJsYWNrUm90YXRlTGVmdCh0aGlzLCBzaWJsaW5nKTtcbiAgICAgICAgICAgIHNpYmxpbmcgPSBwYXJlbnQuTDtcbiAgICAgICAgICB9XG4gICAgICAgICAgc2libGluZy5DID0gcGFyZW50LkM7XG4gICAgICAgICAgcGFyZW50LkMgPSBzaWJsaW5nLkwuQyA9IGZhbHNlO1xuICAgICAgICAgIFJlZEJsYWNrUm90YXRlUmlnaHQodGhpcywgcGFyZW50KTtcbiAgICAgICAgICBub2RlID0gdGhpcy5fO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBzaWJsaW5nLkMgPSB0cnVlO1xuICAgICAgbm9kZSA9IHBhcmVudDtcbiAgICAgIHBhcmVudCA9IHBhcmVudC5VO1xuICAgIH0gd2hpbGUgKCFub2RlLkMpO1xuXG4gICAgaWYgKG5vZGUpIG5vZGUuQyA9IGZhbHNlO1xuICB9XG59O1xuXG5mdW5jdGlvbiBSZWRCbGFja1JvdGF0ZUxlZnQodHJlZSwgbm9kZSkge1xuICB2YXIgcCA9IG5vZGUsXG4gICAgICBxID0gbm9kZS5SLFxuICAgICAgcGFyZW50ID0gcC5VO1xuXG4gIGlmIChwYXJlbnQpIHtcbiAgICBpZiAocGFyZW50LkwgPT09IHApIHBhcmVudC5MID0gcTtcbiAgICBlbHNlIHBhcmVudC5SID0gcTtcbiAgfSBlbHNlIHtcbiAgICB0cmVlLl8gPSBxO1xuICB9XG5cbiAgcS5VID0gcGFyZW50O1xuICBwLlUgPSBxO1xuICBwLlIgPSBxLkw7XG4gIGlmIChwLlIpIHAuUi5VID0gcDtcbiAgcS5MID0gcDtcbn1cblxuZnVuY3Rpb24gUmVkQmxhY2tSb3RhdGVSaWdodCh0cmVlLCBub2RlKSB7XG4gIHZhciBwID0gbm9kZSxcbiAgICAgIHEgPSBub2RlLkwsXG4gICAgICBwYXJlbnQgPSBwLlU7XG5cbiAgaWYgKHBhcmVudCkge1xuICAgIGlmIChwYXJlbnQuTCA9PT0gcCkgcGFyZW50LkwgPSBxO1xuICAgIGVsc2UgcGFyZW50LlIgPSBxO1xuICB9IGVsc2Uge1xuICAgIHRyZWUuXyA9IHE7XG4gIH1cblxuICBxLlUgPSBwYXJlbnQ7XG4gIHAuVSA9IHE7XG4gIHAuTCA9IHEuUjtcbiAgaWYgKHAuTCkgcC5MLlUgPSBwO1xuICBxLlIgPSBwO1xufVxuXG5mdW5jdGlvbiBSZWRCbGFja0ZpcnN0KG5vZGUpIHtcbiAgd2hpbGUgKG5vZGUuTCkgbm9kZSA9IG5vZGUuTDtcbiAgcmV0dXJuIG5vZGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlZEJsYWNrVHJlZTtcbiIsImltcG9ydCB7Y2VsbHMsIGVkZ2VzLCBlcHNpbG9ufSBmcm9tIFwiLi9EaWFncmFtXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFZGdlKGxlZnQsIHJpZ2h0LCB2MCwgdjEpIHtcbiAgdmFyIGVkZ2UgPSBbbnVsbCwgbnVsbF0sXG4gICAgICBpbmRleCA9IGVkZ2VzLnB1c2goZWRnZSkgLSAxO1xuICBlZGdlLmxlZnQgPSBsZWZ0O1xuICBlZGdlLnJpZ2h0ID0gcmlnaHQ7XG4gIGlmICh2MCkgc2V0RWRnZUVuZChlZGdlLCBsZWZ0LCByaWdodCwgdjApO1xuICBpZiAodjEpIHNldEVkZ2VFbmQoZWRnZSwgcmlnaHQsIGxlZnQsIHYxKTtcbiAgY2VsbHNbbGVmdC5pbmRleF0uaGFsZmVkZ2VzLnB1c2goaW5kZXgpO1xuICBjZWxsc1tyaWdodC5pbmRleF0uaGFsZmVkZ2VzLnB1c2goaW5kZXgpO1xuICByZXR1cm4gZWRnZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJvcmRlckVkZ2UobGVmdCwgdjAsIHYxKSB7XG4gIHZhciBlZGdlID0gW3YwLCB2MV07XG4gIGVkZ2UubGVmdCA9IGxlZnQ7XG4gIHJldHVybiBlZGdlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0RWRnZUVuZChlZGdlLCBsZWZ0LCByaWdodCwgdmVydGV4KSB7XG4gIGlmICghZWRnZVswXSAmJiAhZWRnZVsxXSkge1xuICAgIGVkZ2VbMF0gPSB2ZXJ0ZXg7XG4gICAgZWRnZS5sZWZ0ID0gbGVmdDtcbiAgICBlZGdlLnJpZ2h0ID0gcmlnaHQ7XG4gIH0gZWxzZSBpZiAoZWRnZS5sZWZ0ID09PSByaWdodCkge1xuICAgIGVkZ2VbMV0gPSB2ZXJ0ZXg7XG4gIH0gZWxzZSB7XG4gICAgZWRnZVswXSA9IHZlcnRleDtcbiAgfVxufVxuXG4vLyBMaWFuZ+KAk0JhcnNreSBsaW5lIGNsaXBwaW5nLlxuZnVuY3Rpb24gY2xpcEVkZ2UoZWRnZSwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgdmFyIGEgPSBlZGdlWzBdLFxuICAgICAgYiA9IGVkZ2VbMV0sXG4gICAgICBheCA9IGFbMF0sXG4gICAgICBheSA9IGFbMV0sXG4gICAgICBieCA9IGJbMF0sXG4gICAgICBieSA9IGJbMV0sXG4gICAgICB0MCA9IDAsXG4gICAgICB0MSA9IDEsXG4gICAgICBkeCA9IGJ4IC0gYXgsXG4gICAgICBkeSA9IGJ5IC0gYXksXG4gICAgICByO1xuXG4gIHIgPSB4MCAtIGF4O1xuICBpZiAoIWR4ICYmIHIgPiAwKSByZXR1cm47XG4gIHIgLz0gZHg7XG4gIGlmIChkeCA8IDApIHtcbiAgICBpZiAociA8IHQwKSByZXR1cm47XG4gICAgaWYgKHIgPCB0MSkgdDEgPSByO1xuICB9IGVsc2UgaWYgKGR4ID4gMCkge1xuICAgIGlmIChyID4gdDEpIHJldHVybjtcbiAgICBpZiAociA+IHQwKSB0MCA9IHI7XG4gIH1cblxuICByID0geDEgLSBheDtcbiAgaWYgKCFkeCAmJiByIDwgMCkgcmV0dXJuO1xuICByIC89IGR4O1xuICBpZiAoZHggPCAwKSB7XG4gICAgaWYgKHIgPiB0MSkgcmV0dXJuO1xuICAgIGlmIChyID4gdDApIHQwID0gcjtcbiAgfSBlbHNlIGlmIChkeCA+IDApIHtcbiAgICBpZiAociA8IHQwKSByZXR1cm47XG4gICAgaWYgKHIgPCB0MSkgdDEgPSByO1xuICB9XG5cbiAgciA9IHkwIC0gYXk7XG4gIGlmICghZHkgJiYgciA+IDApIHJldHVybjtcbiAgciAvPSBkeTtcbiAgaWYgKGR5IDwgMCkge1xuICAgIGlmIChyIDwgdDApIHJldHVybjtcbiAgICBpZiAociA8IHQxKSB0MSA9IHI7XG4gIH0gZWxzZSBpZiAoZHkgPiAwKSB7XG4gICAgaWYgKHIgPiB0MSkgcmV0dXJuO1xuICAgIGlmIChyID4gdDApIHQwID0gcjtcbiAgfVxuXG4gIHIgPSB5MSAtIGF5O1xuICBpZiAoIWR5ICYmIHIgPCAwKSByZXR1cm47XG4gIHIgLz0gZHk7XG4gIGlmIChkeSA8IDApIHtcbiAgICBpZiAociA+IHQxKSByZXR1cm47XG4gICAgaWYgKHIgPiB0MCkgdDAgPSByO1xuICB9IGVsc2UgaWYgKGR5ID4gMCkge1xuICAgIGlmIChyIDwgdDApIHJldHVybjtcbiAgICBpZiAociA8IHQxKSB0MSA9IHI7XG4gIH1cblxuICBpZiAoISh0MCA+IDApICYmICEodDEgPCAxKSkgcmV0dXJuIHRydWU7IC8vIFRPRE8gQmV0dGVyIGNoZWNrP1xuXG4gIGlmICh0MCA+IDApIGVkZ2VbMF0gPSBbYXggKyB0MCAqIGR4LCBheSArIHQwICogZHldO1xuICBpZiAodDEgPCAxKSBlZGdlWzFdID0gW2F4ICsgdDEgKiBkeCwgYXkgKyB0MSAqIGR5XTtcbiAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIGNvbm5lY3RFZGdlKGVkZ2UsIHgwLCB5MCwgeDEsIHkxKSB7XG4gIHZhciB2MSA9IGVkZ2VbMV07XG4gIGlmICh2MSkgcmV0dXJuIHRydWU7XG5cbiAgdmFyIHYwID0gZWRnZVswXSxcbiAgICAgIGxlZnQgPSBlZGdlLmxlZnQsXG4gICAgICByaWdodCA9IGVkZ2UucmlnaHQsXG4gICAgICBseCA9IGxlZnRbMF0sXG4gICAgICBseSA9IGxlZnRbMV0sXG4gICAgICByeCA9IHJpZ2h0WzBdLFxuICAgICAgcnkgPSByaWdodFsxXSxcbiAgICAgIGZ4ID0gKGx4ICsgcngpIC8gMixcbiAgICAgIGZ5ID0gKGx5ICsgcnkpIC8gMixcbiAgICAgIGZtLFxuICAgICAgZmI7XG5cbiAgaWYgKHJ5ID09PSBseSkge1xuICAgIGlmIChmeCA8IHgwIHx8IGZ4ID49IHgxKSByZXR1cm47XG4gICAgaWYgKGx4ID4gcngpIHtcbiAgICAgIGlmICghdjApIHYwID0gW2Z4LCB5MF07XG4gICAgICBlbHNlIGlmICh2MFsxXSA+PSB5MSkgcmV0dXJuO1xuICAgICAgdjEgPSBbZngsIHkxXTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKCF2MCkgdjAgPSBbZngsIHkxXTtcbiAgICAgIGVsc2UgaWYgKHYwWzFdIDwgeTApIHJldHVybjtcbiAgICAgIHYxID0gW2Z4LCB5MF07XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGZtID0gKGx4IC0gcngpIC8gKHJ5IC0gbHkpO1xuICAgIGZiID0gZnkgLSBmbSAqIGZ4O1xuICAgIGlmIChmbSA8IC0xIHx8IGZtID4gMSkge1xuICAgICAgaWYgKGx4ID4gcngpIHtcbiAgICAgICAgaWYgKCF2MCkgdjAgPSBbKHkwIC0gZmIpIC8gZm0sIHkwXTtcbiAgICAgICAgZWxzZSBpZiAodjBbMV0gPj0geTEpIHJldHVybjtcbiAgICAgICAgdjEgPSBbKHkxIC0gZmIpIC8gZm0sIHkxXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICghdjApIHYwID0gWyh5MSAtIGZiKSAvIGZtLCB5MV07XG4gICAgICAgIGVsc2UgaWYgKHYwWzFdIDwgeTApIHJldHVybjtcbiAgICAgICAgdjEgPSBbKHkwIC0gZmIpIC8gZm0sIHkwXTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGx5IDwgcnkpIHtcbiAgICAgICAgaWYgKCF2MCkgdjAgPSBbeDAsIGZtICogeDAgKyBmYl07XG4gICAgICAgIGVsc2UgaWYgKHYwWzBdID49IHgxKSByZXR1cm47XG4gICAgICAgIHYxID0gW3gxLCBmbSAqIHgxICsgZmJdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKCF2MCkgdjAgPSBbeDEsIGZtICogeDEgKyBmYl07XG4gICAgICAgIGVsc2UgaWYgKHYwWzBdIDwgeDApIHJldHVybjtcbiAgICAgICAgdjEgPSBbeDAsIGZtICogeDAgKyBmYl07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZWRnZVswXSA9IHYwO1xuICBlZGdlWzFdID0gdjE7XG4gIHJldHVybiB0cnVlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2xpcEVkZ2VzKHgwLCB5MCwgeDEsIHkxKSB7XG4gIHZhciBpID0gZWRnZXMubGVuZ3RoLFxuICAgICAgZWRnZTtcblxuICB3aGlsZSAoaS0tKSB7XG4gICAgaWYgKCFjb25uZWN0RWRnZShlZGdlID0gZWRnZXNbaV0sIHgwLCB5MCwgeDEsIHkxKVxuICAgICAgICB8fCAhY2xpcEVkZ2UoZWRnZSwgeDAsIHkwLCB4MSwgeTEpXG4gICAgICAgIHx8ICEoTWF0aC5hYnMoZWRnZVswXVswXSAtIGVkZ2VbMV1bMF0pID4gZXBzaWxvblxuICAgICAgICAgICAgfHwgTWF0aC5hYnMoZWRnZVswXVsxXSAtIGVkZ2VbMV1bMV0pID4gZXBzaWxvbikpIHtcbiAgICAgIGRlbGV0ZSBlZGdlc1tpXTtcbiAgICB9XG4gIH1cbn1cbiIsImltcG9ydCB7Y3JlYXRlQm9yZGVyRWRnZX0gZnJvbSBcIi4vRWRnZVwiO1xuaW1wb3J0IHtjZWxscywgZWRnZXMsIGVwc2lsb259IGZyb20gXCIuL0RpYWdyYW1cIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNlbGwoc2l0ZSkge1xuICByZXR1cm4gY2VsbHNbc2l0ZS5pbmRleF0gPSB7XG4gICAgc2l0ZTogc2l0ZSxcbiAgICBoYWxmZWRnZXM6IFtdXG4gIH07XG59XG5cbmZ1bmN0aW9uIGNlbGxIYWxmZWRnZUFuZ2xlKGNlbGwsIGVkZ2UpIHtcbiAgdmFyIHNpdGUgPSBjZWxsLnNpdGUsXG4gICAgICB2YSA9IGVkZ2UubGVmdCxcbiAgICAgIHZiID0gZWRnZS5yaWdodDtcbiAgaWYgKHNpdGUgPT09IHZiKSB2YiA9IHZhLCB2YSA9IHNpdGU7XG4gIGlmICh2YikgcmV0dXJuIE1hdGguYXRhbjIodmJbMV0gLSB2YVsxXSwgdmJbMF0gLSB2YVswXSk7XG4gIGlmIChzaXRlID09PSB2YSkgdmEgPSBlZGdlWzFdLCB2YiA9IGVkZ2VbMF07XG4gIGVsc2UgdmEgPSBlZGdlWzBdLCB2YiA9IGVkZ2VbMV07XG4gIHJldHVybiBNYXRoLmF0YW4yKHZhWzBdIC0gdmJbMF0sIHZiWzFdIC0gdmFbMV0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2VsbEhhbGZlZGdlU3RhcnQoY2VsbCwgZWRnZSkge1xuICByZXR1cm4gZWRnZVsrKGVkZ2UubGVmdCAhPT0gY2VsbC5zaXRlKV07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjZWxsSGFsZmVkZ2VFbmQoY2VsbCwgZWRnZSkge1xuICByZXR1cm4gZWRnZVsrKGVkZ2UubGVmdCA9PT0gY2VsbC5zaXRlKV07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzb3J0Q2VsbEhhbGZlZGdlcygpIHtcbiAgZm9yICh2YXIgaSA9IDAsIG4gPSBjZWxscy5sZW5ndGgsIGNlbGwsIGhhbGZlZGdlcywgaiwgbTsgaSA8IG47ICsraSkge1xuICAgIGlmICgoY2VsbCA9IGNlbGxzW2ldKSAmJiAobSA9IChoYWxmZWRnZXMgPSBjZWxsLmhhbGZlZGdlcykubGVuZ3RoKSkge1xuICAgICAgdmFyIGluZGV4ID0gbmV3IEFycmF5KG0pLFxuICAgICAgICAgIGFycmF5ID0gbmV3IEFycmF5KG0pO1xuICAgICAgZm9yIChqID0gMDsgaiA8IG07ICsraikgaW5kZXhbal0gPSBqLCBhcnJheVtqXSA9IGNlbGxIYWxmZWRnZUFuZ2xlKGNlbGwsIGVkZ2VzW2hhbGZlZGdlc1tqXV0pO1xuICAgICAgaW5kZXguc29ydChmdW5jdGlvbihpLCBqKSB7IHJldHVybiBhcnJheVtqXSAtIGFycmF5W2ldOyB9KTtcbiAgICAgIGZvciAoaiA9IDA7IGogPCBtOyArK2opIGFycmF5W2pdID0gaGFsZmVkZ2VzW2luZGV4W2pdXTtcbiAgICAgIGZvciAoaiA9IDA7IGogPCBtOyArK2opIGhhbGZlZGdlc1tqXSA9IGFycmF5W2pdO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY2xpcENlbGxzKHgwLCB5MCwgeDEsIHkxKSB7XG4gIHZhciBuQ2VsbHMgPSBjZWxscy5sZW5ndGgsXG4gICAgICBpQ2VsbCxcbiAgICAgIGNlbGwsXG4gICAgICBzaXRlLFxuICAgICAgaUhhbGZlZGdlLFxuICAgICAgaGFsZmVkZ2VzLFxuICAgICAgbkhhbGZlZGdlcyxcbiAgICAgIHN0YXJ0LFxuICAgICAgc3RhcnRYLFxuICAgICAgc3RhcnRZLFxuICAgICAgZW5kLFxuICAgICAgZW5kWCxcbiAgICAgIGVuZFksXG4gICAgICBjb3ZlciA9IHRydWU7XG5cbiAgZm9yIChpQ2VsbCA9IDA7IGlDZWxsIDwgbkNlbGxzOyArK2lDZWxsKSB7XG4gICAgaWYgKGNlbGwgPSBjZWxsc1tpQ2VsbF0pIHtcbiAgICAgIHNpdGUgPSBjZWxsLnNpdGU7XG4gICAgICBoYWxmZWRnZXMgPSBjZWxsLmhhbGZlZGdlcztcbiAgICAgIGlIYWxmZWRnZSA9IGhhbGZlZGdlcy5sZW5ndGg7XG5cbiAgICAgIC8vIFJlbW92ZSBhbnkgZGFuZ2xpbmcgY2xpcHBlZCBlZGdlcy5cbiAgICAgIHdoaWxlIChpSGFsZmVkZ2UtLSkge1xuICAgICAgICBpZiAoIWVkZ2VzW2hhbGZlZGdlc1tpSGFsZmVkZ2VdXSkge1xuICAgICAgICAgIGhhbGZlZGdlcy5zcGxpY2UoaUhhbGZlZGdlLCAxKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBJbnNlcnQgYW55IGJvcmRlciBlZGdlcyBhcyBuZWNlc3NhcnkuXG4gICAgICBpSGFsZmVkZ2UgPSAwLCBuSGFsZmVkZ2VzID0gaGFsZmVkZ2VzLmxlbmd0aDtcbiAgICAgIHdoaWxlIChpSGFsZmVkZ2UgPCBuSGFsZmVkZ2VzKSB7XG4gICAgICAgIGVuZCA9IGNlbGxIYWxmZWRnZUVuZChjZWxsLCBlZGdlc1toYWxmZWRnZXNbaUhhbGZlZGdlXV0pLCBlbmRYID0gZW5kWzBdLCBlbmRZID0gZW5kWzFdO1xuICAgICAgICBzdGFydCA9IGNlbGxIYWxmZWRnZVN0YXJ0KGNlbGwsIGVkZ2VzW2hhbGZlZGdlc1srK2lIYWxmZWRnZSAlIG5IYWxmZWRnZXNdXSksIHN0YXJ0WCA9IHN0YXJ0WzBdLCBzdGFydFkgPSBzdGFydFsxXTtcbiAgICAgICAgaWYgKE1hdGguYWJzKGVuZFggLSBzdGFydFgpID4gZXBzaWxvbiB8fCBNYXRoLmFicyhlbmRZIC0gc3RhcnRZKSA+IGVwc2lsb24pIHtcbiAgICAgICAgICBoYWxmZWRnZXMuc3BsaWNlKGlIYWxmZWRnZSwgMCwgZWRnZXMucHVzaChjcmVhdGVCb3JkZXJFZGdlKHNpdGUsIGVuZCxcbiAgICAgICAgICAgICAgTWF0aC5hYnMoZW5kWCAtIHgwKSA8IGVwc2lsb24gJiYgeTEgLSBlbmRZID4gZXBzaWxvbiA/IFt4MCwgTWF0aC5hYnMoc3RhcnRYIC0geDApIDwgZXBzaWxvbiA/IHN0YXJ0WSA6IHkxXVxuICAgICAgICAgICAgICA6IE1hdGguYWJzKGVuZFkgLSB5MSkgPCBlcHNpbG9uICYmIHgxIC0gZW5kWCA+IGVwc2lsb24gPyBbTWF0aC5hYnMoc3RhcnRZIC0geTEpIDwgZXBzaWxvbiA/IHN0YXJ0WCA6IHgxLCB5MV1cbiAgICAgICAgICAgICAgOiBNYXRoLmFicyhlbmRYIC0geDEpIDwgZXBzaWxvbiAmJiBlbmRZIC0geTAgPiBlcHNpbG9uID8gW3gxLCBNYXRoLmFicyhzdGFydFggLSB4MSkgPCBlcHNpbG9uID8gc3RhcnRZIDogeTBdXG4gICAgICAgICAgICAgIDogTWF0aC5hYnMoZW5kWSAtIHkwKSA8IGVwc2lsb24gJiYgZW5kWCAtIHgwID4gZXBzaWxvbiA/IFtNYXRoLmFicyhzdGFydFkgLSB5MCkgPCBlcHNpbG9uID8gc3RhcnRYIDogeDAsIHkwXVxuICAgICAgICAgICAgICA6IG51bGwpKSAtIDEpO1xuICAgICAgICAgICsrbkhhbGZlZGdlcztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobkhhbGZlZGdlcykgY292ZXIgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICAvLyBJZiB0aGVyZSB3ZXJlbuKAmXQgYW55IGVkZ2VzLCBoYXZlIHRoZSBjbG9zZXN0IHNpdGUgY292ZXIgdGhlIGV4dGVudC5cbiAgLy8gSXQgZG9lc27igJl0IG1hdHRlciB3aGljaCBjb3JuZXIgb2YgdGhlIGV4dGVudCB3ZSBtZWFzdXJlIVxuICBpZiAoY292ZXIpIHtcbiAgICB2YXIgZHgsIGR5LCBkMiwgZGMgPSBJbmZpbml0eTtcblxuICAgIGZvciAoaUNlbGwgPSAwLCBjb3ZlciA9IG51bGw7IGlDZWxsIDwgbkNlbGxzOyArK2lDZWxsKSB7XG4gICAgICBpZiAoY2VsbCA9IGNlbGxzW2lDZWxsXSkge1xuICAgICAgICBzaXRlID0gY2VsbC5zaXRlO1xuICAgICAgICBkeCA9IHNpdGVbMF0gLSB4MDtcbiAgICAgICAgZHkgPSBzaXRlWzFdIC0geTA7XG4gICAgICAgIGQyID0gZHggKiBkeCArIGR5ICogZHk7XG4gICAgICAgIGlmIChkMiA8IGRjKSBkYyA9IGQyLCBjb3ZlciA9IGNlbGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGNvdmVyKSB7XG4gICAgICB2YXIgdjAwID0gW3gwLCB5MF0sIHYwMSA9IFt4MCwgeTFdLCB2MTEgPSBbeDEsIHkxXSwgdjEwID0gW3gxLCB5MF07XG4gICAgICBjb3Zlci5oYWxmZWRnZXMucHVzaChcbiAgICAgICAgZWRnZXMucHVzaChjcmVhdGVCb3JkZXJFZGdlKHNpdGUgPSBjb3Zlci5zaXRlLCB2MDAsIHYwMSkpIC0gMSxcbiAgICAgICAgZWRnZXMucHVzaChjcmVhdGVCb3JkZXJFZGdlKHNpdGUsIHYwMSwgdjExKSkgLSAxLFxuICAgICAgICBlZGdlcy5wdXNoKGNyZWF0ZUJvcmRlckVkZ2Uoc2l0ZSwgdjExLCB2MTApKSAtIDEsXG4gICAgICAgIGVkZ2VzLnB1c2goY3JlYXRlQm9yZGVyRWRnZShzaXRlLCB2MTAsIHYwMCkpIC0gMVxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICAvLyBMYXN0bHkgZGVsZXRlIGFueSBjZWxscyB3aXRoIG5vIGVkZ2VzOyB0aGVzZSB3ZXJlIGVudGlyZWx5IGNsaXBwZWQuXG4gIGZvciAoaUNlbGwgPSAwOyBpQ2VsbCA8IG5DZWxsczsgKytpQ2VsbCkge1xuICAgIGlmIChjZWxsID0gY2VsbHNbaUNlbGxdKSB7XG4gICAgICBpZiAoIWNlbGwuaGFsZmVkZ2VzLmxlbmd0aCkge1xuICAgICAgICBkZWxldGUgY2VsbHNbaUNlbGxdO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IHtSZWRCbGFja05vZGV9IGZyb20gXCIuL1JlZEJsYWNrVHJlZVwiO1xuaW1wb3J0IHtjaXJjbGVzLCBlcHNpbG9uMn0gZnJvbSBcIi4vRGlhZ3JhbVwiO1xuXG52YXIgY2lyY2xlUG9vbCA9IFtdO1xuXG5leHBvcnQgdmFyIGZpcnN0Q2lyY2xlO1xuXG5mdW5jdGlvbiBDaXJjbGUoKSB7XG4gIFJlZEJsYWNrTm9kZSh0aGlzKTtcbiAgdGhpcy54ID1cbiAgdGhpcy55ID1cbiAgdGhpcy5hcmMgPVxuICB0aGlzLnNpdGUgPVxuICB0aGlzLmN5ID0gbnVsbDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGF0dGFjaENpcmNsZShhcmMpIHtcbiAgdmFyIGxBcmMgPSBhcmMuUCxcbiAgICAgIHJBcmMgPSBhcmMuTjtcblxuICBpZiAoIWxBcmMgfHwgIXJBcmMpIHJldHVybjtcblxuICB2YXIgbFNpdGUgPSBsQXJjLnNpdGUsXG4gICAgICBjU2l0ZSA9IGFyYy5zaXRlLFxuICAgICAgclNpdGUgPSByQXJjLnNpdGU7XG5cbiAgaWYgKGxTaXRlID09PSByU2l0ZSkgcmV0dXJuO1xuXG4gIHZhciBieCA9IGNTaXRlWzBdLFxuICAgICAgYnkgPSBjU2l0ZVsxXSxcbiAgICAgIGF4ID0gbFNpdGVbMF0gLSBieCxcbiAgICAgIGF5ID0gbFNpdGVbMV0gLSBieSxcbiAgICAgIGN4ID0gclNpdGVbMF0gLSBieCxcbiAgICAgIGN5ID0gclNpdGVbMV0gLSBieTtcblxuICB2YXIgZCA9IDIgKiAoYXggKiBjeSAtIGF5ICogY3gpO1xuICBpZiAoZCA+PSAtZXBzaWxvbjIpIHJldHVybjtcblxuICB2YXIgaGEgPSBheCAqIGF4ICsgYXkgKiBheSxcbiAgICAgIGhjID0gY3ggKiBjeCArIGN5ICogY3ksXG4gICAgICB4ID0gKGN5ICogaGEgLSBheSAqIGhjKSAvIGQsXG4gICAgICB5ID0gKGF4ICogaGMgLSBjeCAqIGhhKSAvIGQ7XG5cbiAgdmFyIGNpcmNsZSA9IGNpcmNsZVBvb2wucG9wKCkgfHwgbmV3IENpcmNsZTtcbiAgY2lyY2xlLmFyYyA9IGFyYztcbiAgY2lyY2xlLnNpdGUgPSBjU2l0ZTtcbiAgY2lyY2xlLnggPSB4ICsgYng7XG4gIGNpcmNsZS55ID0gKGNpcmNsZS5jeSA9IHkgKyBieSkgKyBNYXRoLnNxcnQoeCAqIHggKyB5ICogeSk7IC8vIHkgYm90dG9tXG5cbiAgYXJjLmNpcmNsZSA9IGNpcmNsZTtcblxuICB2YXIgYmVmb3JlID0gbnVsbCxcbiAgICAgIG5vZGUgPSBjaXJjbGVzLl87XG5cbiAgd2hpbGUgKG5vZGUpIHtcbiAgICBpZiAoY2lyY2xlLnkgPCBub2RlLnkgfHwgKGNpcmNsZS55ID09PSBub2RlLnkgJiYgY2lyY2xlLnggPD0gbm9kZS54KSkge1xuICAgICAgaWYgKG5vZGUuTCkgbm9kZSA9IG5vZGUuTDtcbiAgICAgIGVsc2UgeyBiZWZvcmUgPSBub2RlLlA7IGJyZWFrOyB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChub2RlLlIpIG5vZGUgPSBub2RlLlI7XG4gICAgICBlbHNlIHsgYmVmb3JlID0gbm9kZTsgYnJlYWs7IH1cbiAgICB9XG4gIH1cblxuICBjaXJjbGVzLmluc2VydChiZWZvcmUsIGNpcmNsZSk7XG4gIGlmICghYmVmb3JlKSBmaXJzdENpcmNsZSA9IGNpcmNsZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRldGFjaENpcmNsZShhcmMpIHtcbiAgdmFyIGNpcmNsZSA9IGFyYy5jaXJjbGU7XG4gIGlmIChjaXJjbGUpIHtcbiAgICBpZiAoIWNpcmNsZS5QKSBmaXJzdENpcmNsZSA9IGNpcmNsZS5OO1xuICAgIGNpcmNsZXMucmVtb3ZlKGNpcmNsZSk7XG4gICAgY2lyY2xlUG9vbC5wdXNoKGNpcmNsZSk7XG4gICAgUmVkQmxhY2tOb2RlKGNpcmNsZSk7XG4gICAgYXJjLmNpcmNsZSA9IG51bGw7XG4gIH1cbn1cbiIsImltcG9ydCB7UmVkQmxhY2tOb2RlfSBmcm9tIFwiLi9SZWRCbGFja1RyZWVcIjtcbmltcG9ydCB7Y3JlYXRlQ2VsbH0gZnJvbSBcIi4vQ2VsbFwiO1xuaW1wb3J0IHthdHRhY2hDaXJjbGUsIGRldGFjaENpcmNsZX0gZnJvbSBcIi4vQ2lyY2xlXCI7XG5pbXBvcnQge2NyZWF0ZUVkZ2UsIHNldEVkZ2VFbmR9IGZyb20gXCIuL0VkZ2VcIjtcbmltcG9ydCB7YmVhY2hlcywgZXBzaWxvbn0gZnJvbSBcIi4vRGlhZ3JhbVwiO1xuXG52YXIgYmVhY2hQb29sID0gW107XG5cbmZ1bmN0aW9uIEJlYWNoKCkge1xuICBSZWRCbGFja05vZGUodGhpcyk7XG4gIHRoaXMuZWRnZSA9XG4gIHRoaXMuc2l0ZSA9XG4gIHRoaXMuY2lyY2xlID0gbnVsbDtcbn1cblxuZnVuY3Rpb24gY3JlYXRlQmVhY2goc2l0ZSkge1xuICB2YXIgYmVhY2ggPSBiZWFjaFBvb2wucG9wKCkgfHwgbmV3IEJlYWNoO1xuICBiZWFjaC5zaXRlID0gc2l0ZTtcbiAgcmV0dXJuIGJlYWNoO1xufVxuXG5mdW5jdGlvbiBkZXRhY2hCZWFjaChiZWFjaCkge1xuICBkZXRhY2hDaXJjbGUoYmVhY2gpO1xuICBiZWFjaGVzLnJlbW92ZShiZWFjaCk7XG4gIGJlYWNoUG9vbC5wdXNoKGJlYWNoKTtcbiAgUmVkQmxhY2tOb2RlKGJlYWNoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZUJlYWNoKGJlYWNoKSB7XG4gIHZhciBjaXJjbGUgPSBiZWFjaC5jaXJjbGUsXG4gICAgICB4ID0gY2lyY2xlLngsXG4gICAgICB5ID0gY2lyY2xlLmN5LFxuICAgICAgdmVydGV4ID0gW3gsIHldLFxuICAgICAgcHJldmlvdXMgPSBiZWFjaC5QLFxuICAgICAgbmV4dCA9IGJlYWNoLk4sXG4gICAgICBkaXNhcHBlYXJpbmcgPSBbYmVhY2hdO1xuXG4gIGRldGFjaEJlYWNoKGJlYWNoKTtcblxuICB2YXIgbEFyYyA9IHByZXZpb3VzO1xuICB3aGlsZSAobEFyYy5jaXJjbGVcbiAgICAgICYmIE1hdGguYWJzKHggLSBsQXJjLmNpcmNsZS54KSA8IGVwc2lsb25cbiAgICAgICYmIE1hdGguYWJzKHkgLSBsQXJjLmNpcmNsZS5jeSkgPCBlcHNpbG9uKSB7XG4gICAgcHJldmlvdXMgPSBsQXJjLlA7XG4gICAgZGlzYXBwZWFyaW5nLnVuc2hpZnQobEFyYyk7XG4gICAgZGV0YWNoQmVhY2gobEFyYyk7XG4gICAgbEFyYyA9IHByZXZpb3VzO1xuICB9XG5cbiAgZGlzYXBwZWFyaW5nLnVuc2hpZnQobEFyYyk7XG4gIGRldGFjaENpcmNsZShsQXJjKTtcblxuICB2YXIgckFyYyA9IG5leHQ7XG4gIHdoaWxlIChyQXJjLmNpcmNsZVxuICAgICAgJiYgTWF0aC5hYnMoeCAtIHJBcmMuY2lyY2xlLngpIDwgZXBzaWxvblxuICAgICAgJiYgTWF0aC5hYnMoeSAtIHJBcmMuY2lyY2xlLmN5KSA8IGVwc2lsb24pIHtcbiAgICBuZXh0ID0gckFyYy5OO1xuICAgIGRpc2FwcGVhcmluZy5wdXNoKHJBcmMpO1xuICAgIGRldGFjaEJlYWNoKHJBcmMpO1xuICAgIHJBcmMgPSBuZXh0O1xuICB9XG5cbiAgZGlzYXBwZWFyaW5nLnB1c2gockFyYyk7XG4gIGRldGFjaENpcmNsZShyQXJjKTtcblxuICB2YXIgbkFyY3MgPSBkaXNhcHBlYXJpbmcubGVuZ3RoLFxuICAgICAgaUFyYztcbiAgZm9yIChpQXJjID0gMTsgaUFyYyA8IG5BcmNzOyArK2lBcmMpIHtcbiAgICByQXJjID0gZGlzYXBwZWFyaW5nW2lBcmNdO1xuICAgIGxBcmMgPSBkaXNhcHBlYXJpbmdbaUFyYyAtIDFdO1xuICAgIHNldEVkZ2VFbmQockFyYy5lZGdlLCBsQXJjLnNpdGUsIHJBcmMuc2l0ZSwgdmVydGV4KTtcbiAgfVxuXG4gIGxBcmMgPSBkaXNhcHBlYXJpbmdbMF07XG4gIHJBcmMgPSBkaXNhcHBlYXJpbmdbbkFyY3MgLSAxXTtcbiAgckFyYy5lZGdlID0gY3JlYXRlRWRnZShsQXJjLnNpdGUsIHJBcmMuc2l0ZSwgbnVsbCwgdmVydGV4KTtcblxuICBhdHRhY2hDaXJjbGUobEFyYyk7XG4gIGF0dGFjaENpcmNsZShyQXJjKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZEJlYWNoKHNpdGUpIHtcbiAgdmFyIHggPSBzaXRlWzBdLFxuICAgICAgZGlyZWN0cml4ID0gc2l0ZVsxXSxcbiAgICAgIGxBcmMsXG4gICAgICByQXJjLFxuICAgICAgZHhsLFxuICAgICAgZHhyLFxuICAgICAgbm9kZSA9IGJlYWNoZXMuXztcblxuICB3aGlsZSAobm9kZSkge1xuICAgIGR4bCA9IGxlZnRCcmVha1BvaW50KG5vZGUsIGRpcmVjdHJpeCkgLSB4O1xuICAgIGlmIChkeGwgPiBlcHNpbG9uKSBub2RlID0gbm9kZS5MOyBlbHNlIHtcbiAgICAgIGR4ciA9IHggLSByaWdodEJyZWFrUG9pbnQobm9kZSwgZGlyZWN0cml4KTtcbiAgICAgIGlmIChkeHIgPiBlcHNpbG9uKSB7XG4gICAgICAgIGlmICghbm9kZS5SKSB7XG4gICAgICAgICAgbEFyYyA9IG5vZGU7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgbm9kZSA9IG5vZGUuUjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChkeGwgPiAtZXBzaWxvbikge1xuICAgICAgICAgIGxBcmMgPSBub2RlLlA7XG4gICAgICAgICAgckFyYyA9IG5vZGU7XG4gICAgICAgIH0gZWxzZSBpZiAoZHhyID4gLWVwc2lsb24pIHtcbiAgICAgICAgICBsQXJjID0gbm9kZTtcbiAgICAgICAgICByQXJjID0gbm9kZS5OO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxBcmMgPSByQXJjID0gbm9kZTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBjcmVhdGVDZWxsKHNpdGUpO1xuICB2YXIgbmV3QXJjID0gY3JlYXRlQmVhY2goc2l0ZSk7XG4gIGJlYWNoZXMuaW5zZXJ0KGxBcmMsIG5ld0FyYyk7XG5cbiAgaWYgKCFsQXJjICYmICFyQXJjKSByZXR1cm47XG5cbiAgaWYgKGxBcmMgPT09IHJBcmMpIHtcbiAgICBkZXRhY2hDaXJjbGUobEFyYyk7XG4gICAgckFyYyA9IGNyZWF0ZUJlYWNoKGxBcmMuc2l0ZSk7XG4gICAgYmVhY2hlcy5pbnNlcnQobmV3QXJjLCByQXJjKTtcbiAgICBuZXdBcmMuZWRnZSA9IHJBcmMuZWRnZSA9IGNyZWF0ZUVkZ2UobEFyYy5zaXRlLCBuZXdBcmMuc2l0ZSk7XG4gICAgYXR0YWNoQ2lyY2xlKGxBcmMpO1xuICAgIGF0dGFjaENpcmNsZShyQXJjKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoIXJBcmMpIHsgLy8gJiYgbEFyY1xuICAgIG5ld0FyYy5lZGdlID0gY3JlYXRlRWRnZShsQXJjLnNpdGUsIG5ld0FyYy5zaXRlKTtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBlbHNlIGxBcmMgIT09IHJBcmNcbiAgZGV0YWNoQ2lyY2xlKGxBcmMpO1xuICBkZXRhY2hDaXJjbGUockFyYyk7XG5cbiAgdmFyIGxTaXRlID0gbEFyYy5zaXRlLFxuICAgICAgYXggPSBsU2l0ZVswXSxcbiAgICAgIGF5ID0gbFNpdGVbMV0sXG4gICAgICBieCA9IHNpdGVbMF0gLSBheCxcbiAgICAgIGJ5ID0gc2l0ZVsxXSAtIGF5LFxuICAgICAgclNpdGUgPSByQXJjLnNpdGUsXG4gICAgICBjeCA9IHJTaXRlWzBdIC0gYXgsXG4gICAgICBjeSA9IHJTaXRlWzFdIC0gYXksXG4gICAgICBkID0gMiAqIChieCAqIGN5IC0gYnkgKiBjeCksXG4gICAgICBoYiA9IGJ4ICogYnggKyBieSAqIGJ5LFxuICAgICAgaGMgPSBjeCAqIGN4ICsgY3kgKiBjeSxcbiAgICAgIHZlcnRleCA9IFsoY3kgKiBoYiAtIGJ5ICogaGMpIC8gZCArIGF4LCAoYnggKiBoYyAtIGN4ICogaGIpIC8gZCArIGF5XTtcblxuICBzZXRFZGdlRW5kKHJBcmMuZWRnZSwgbFNpdGUsIHJTaXRlLCB2ZXJ0ZXgpO1xuICBuZXdBcmMuZWRnZSA9IGNyZWF0ZUVkZ2UobFNpdGUsIHNpdGUsIG51bGwsIHZlcnRleCk7XG4gIHJBcmMuZWRnZSA9IGNyZWF0ZUVkZ2Uoc2l0ZSwgclNpdGUsIG51bGwsIHZlcnRleCk7XG4gIGF0dGFjaENpcmNsZShsQXJjKTtcbiAgYXR0YWNoQ2lyY2xlKHJBcmMpO1xufVxuXG5mdW5jdGlvbiBsZWZ0QnJlYWtQb2ludChhcmMsIGRpcmVjdHJpeCkge1xuICB2YXIgc2l0ZSA9IGFyYy5zaXRlLFxuICAgICAgcmZvY3ggPSBzaXRlWzBdLFxuICAgICAgcmZvY3kgPSBzaXRlWzFdLFxuICAgICAgcGJ5MiA9IHJmb2N5IC0gZGlyZWN0cml4O1xuXG4gIGlmICghcGJ5MikgcmV0dXJuIHJmb2N4O1xuXG4gIHZhciBsQXJjID0gYXJjLlA7XG4gIGlmICghbEFyYykgcmV0dXJuIC1JbmZpbml0eTtcblxuICBzaXRlID0gbEFyYy5zaXRlO1xuICB2YXIgbGZvY3ggPSBzaXRlWzBdLFxuICAgICAgbGZvY3kgPSBzaXRlWzFdLFxuICAgICAgcGxieTIgPSBsZm9jeSAtIGRpcmVjdHJpeDtcblxuICBpZiAoIXBsYnkyKSByZXR1cm4gbGZvY3g7XG5cbiAgdmFyIGhsID0gbGZvY3ggLSByZm9jeCxcbiAgICAgIGFieTIgPSAxIC8gcGJ5MiAtIDEgLyBwbGJ5MixcbiAgICAgIGIgPSBobCAvIHBsYnkyO1xuXG4gIGlmIChhYnkyKSByZXR1cm4gKC1iICsgTWF0aC5zcXJ0KGIgKiBiIC0gMiAqIGFieTIgKiAoaGwgKiBobCAvICgtMiAqIHBsYnkyKSAtIGxmb2N5ICsgcGxieTIgLyAyICsgcmZvY3kgLSBwYnkyIC8gMikpKSAvIGFieTIgKyByZm9jeDtcblxuICByZXR1cm4gKHJmb2N4ICsgbGZvY3gpIC8gMjtcbn1cblxuZnVuY3Rpb24gcmlnaHRCcmVha1BvaW50KGFyYywgZGlyZWN0cml4KSB7XG4gIHZhciByQXJjID0gYXJjLk47XG4gIGlmIChyQXJjKSByZXR1cm4gbGVmdEJyZWFrUG9pbnQockFyYywgZGlyZWN0cml4KTtcbiAgdmFyIHNpdGUgPSBhcmMuc2l0ZTtcbiAgcmV0dXJuIHNpdGVbMV0gPT09IGRpcmVjdHJpeCA/IHNpdGVbMF0gOiBJbmZpbml0eTtcbn1cbiIsImltcG9ydCB7YWRkQmVhY2gsIHJlbW92ZUJlYWNofSBmcm9tIFwiLi9CZWFjaFwiO1xuaW1wb3J0IHtzb3J0Q2VsbEhhbGZlZGdlcywgY2VsbEhhbGZlZGdlU3RhcnQsIGNsaXBDZWxsc30gZnJvbSBcIi4vQ2VsbFwiO1xuaW1wb3J0IHtmaXJzdENpcmNsZX0gZnJvbSBcIi4vQ2lyY2xlXCI7XG5pbXBvcnQge2NsaXBFZGdlc30gZnJvbSBcIi4vRWRnZVwiO1xuaW1wb3J0IFJlZEJsYWNrVHJlZSBmcm9tIFwiLi9SZWRCbGFja1RyZWVcIjtcblxuZXhwb3J0IHZhciBlcHNpbG9uID0gMWUtNjtcbmV4cG9ydCB2YXIgZXBzaWxvbjIgPSAxZS0xMjtcbmV4cG9ydCB2YXIgYmVhY2hlcztcbmV4cG9ydCB2YXIgY2VsbHM7XG5leHBvcnQgdmFyIGNpcmNsZXM7XG5leHBvcnQgdmFyIGVkZ2VzO1xuXG5mdW5jdGlvbiB0cmlhbmdsZUFyZWEoYSwgYiwgYykge1xuICByZXR1cm4gKGFbMF0gLSBjWzBdKSAqIChiWzFdIC0gYVsxXSkgLSAoYVswXSAtIGJbMF0pICogKGNbMV0gLSBhWzFdKTtcbn1cblxuZnVuY3Rpb24gbGV4aWNvZ3JhcGhpYyhhLCBiKSB7XG4gIHJldHVybiBiWzFdIC0gYVsxXVxuICAgICAgfHwgYlswXSAtIGFbMF07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERpYWdyYW0oc2l0ZXMsIGV4dGVudCkge1xuICB2YXIgc2l0ZSA9IHNpdGVzLnNvcnQobGV4aWNvZ3JhcGhpYykucG9wKCksXG4gICAgICB4LFxuICAgICAgeSxcbiAgICAgIGNpcmNsZTtcblxuICBlZGdlcyA9IFtdO1xuICBjZWxscyA9IG5ldyBBcnJheShzaXRlcy5sZW5ndGgpO1xuICBiZWFjaGVzID0gbmV3IFJlZEJsYWNrVHJlZTtcbiAgY2lyY2xlcyA9IG5ldyBSZWRCbGFja1RyZWU7XG5cbiAgd2hpbGUgKHRydWUpIHtcbiAgICBjaXJjbGUgPSBmaXJzdENpcmNsZTtcbiAgICBpZiAoc2l0ZSAmJiAoIWNpcmNsZSB8fCBzaXRlWzFdIDwgY2lyY2xlLnkgfHwgKHNpdGVbMV0gPT09IGNpcmNsZS55ICYmIHNpdGVbMF0gPCBjaXJjbGUueCkpKSB7XG4gICAgICBpZiAoc2l0ZVswXSAhPT0geCB8fCBzaXRlWzFdICE9PSB5KSB7XG4gICAgICAgIGFkZEJlYWNoKHNpdGUpO1xuICAgICAgICB4ID0gc2l0ZVswXSwgeSA9IHNpdGVbMV07XG4gICAgICB9XG4gICAgICBzaXRlID0gc2l0ZXMucG9wKCk7XG4gICAgfSBlbHNlIGlmIChjaXJjbGUpIHtcbiAgICAgIHJlbW92ZUJlYWNoKGNpcmNsZS5hcmMpO1xuICAgIH0gZWxzZSB7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBzb3J0Q2VsbEhhbGZlZGdlcygpO1xuXG4gIGlmIChleHRlbnQpIHtcbiAgICB2YXIgeDAgPSArZXh0ZW50WzBdWzBdLFxuICAgICAgICB5MCA9ICtleHRlbnRbMF1bMV0sXG4gICAgICAgIHgxID0gK2V4dGVudFsxXVswXSxcbiAgICAgICAgeTEgPSArZXh0ZW50WzFdWzFdO1xuICAgIGNsaXBFZGdlcyh4MCwgeTAsIHgxLCB5MSk7XG4gICAgY2xpcENlbGxzKHgwLCB5MCwgeDEsIHkxKTtcbiAgfVxuXG4gIHRoaXMuZWRnZXMgPSBlZGdlcztcbiAgdGhpcy5jZWxscyA9IGNlbGxzO1xuXG4gIGJlYWNoZXMgPVxuICBjaXJjbGVzID1cbiAgZWRnZXMgPVxuICBjZWxscyA9IG51bGw7XG59XG5cbkRpYWdyYW0ucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogRGlhZ3JhbSxcblxuICBwb2x5Z29uczogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGVkZ2VzID0gdGhpcy5lZGdlcztcblxuICAgIHJldHVybiB0aGlzLmNlbGxzLm1hcChmdW5jdGlvbihjZWxsKSB7XG4gICAgICB2YXIgcG9seWdvbiA9IGNlbGwuaGFsZmVkZ2VzLm1hcChmdW5jdGlvbihpKSB7IHJldHVybiBjZWxsSGFsZmVkZ2VTdGFydChjZWxsLCBlZGdlc1tpXSk7IH0pO1xuICAgICAgcG9seWdvbi5kYXRhID0gY2VsbC5zaXRlLmRhdGE7XG4gICAgICByZXR1cm4gcG9seWdvbjtcbiAgICB9KTtcbiAgfSxcblxuICB0cmlhbmdsZXM6IGZ1bmN0aW9uKCkge1xuICAgIHZhciB0cmlhbmdsZXMgPSBbXSxcbiAgICAgICAgZWRnZXMgPSB0aGlzLmVkZ2VzO1xuXG4gICAgdGhpcy5jZWxscy5mb3JFYWNoKGZ1bmN0aW9uKGNlbGwsIGkpIHtcbiAgICAgIGlmICghKG0gPSAoaGFsZmVkZ2VzID0gY2VsbC5oYWxmZWRnZXMpLmxlbmd0aCkpIHJldHVybjtcbiAgICAgIHZhciBzaXRlID0gY2VsbC5zaXRlLFxuICAgICAgICAgIGhhbGZlZGdlcyxcbiAgICAgICAgICBqID0gLTEsXG4gICAgICAgICAgbSxcbiAgICAgICAgICBzMCxcbiAgICAgICAgICBlMSA9IGVkZ2VzW2hhbGZlZGdlc1ttIC0gMV1dLFxuICAgICAgICAgIHMxID0gZTEubGVmdCA9PT0gc2l0ZSA/IGUxLnJpZ2h0IDogZTEubGVmdDtcblxuICAgICAgd2hpbGUgKCsraiA8IG0pIHtcbiAgICAgICAgczAgPSBzMTtcbiAgICAgICAgZTEgPSBlZGdlc1toYWxmZWRnZXNbal1dO1xuICAgICAgICBzMSA9IGUxLmxlZnQgPT09IHNpdGUgPyBlMS5yaWdodCA6IGUxLmxlZnQ7XG4gICAgICAgIGlmIChzMCAmJiBzMSAmJiBpIDwgczAuaW5kZXggJiYgaSA8IHMxLmluZGV4ICYmIHRyaWFuZ2xlQXJlYShzaXRlLCBzMCwgczEpIDwgMCkge1xuICAgICAgICAgIHRyaWFuZ2xlcy5wdXNoKFtzaXRlLmRhdGEsIHMwLmRhdGEsIHMxLmRhdGFdKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHRyaWFuZ2xlcztcbiAgfSxcblxuICBsaW5rczogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZWRnZXMuZmlsdGVyKGZ1bmN0aW9uKGVkZ2UpIHtcbiAgICAgIHJldHVybiBlZGdlLnJpZ2h0O1xuICAgIH0pLm1hcChmdW5jdGlvbihlZGdlKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzb3VyY2U6IGVkZ2UubGVmdC5kYXRhLFxuICAgICAgICB0YXJnZXQ6IGVkZ2UucmlnaHQuZGF0YVxuICAgICAgfTtcbiAgICB9KTtcbiAgfSxcblxuICBmaW5kOiBmdW5jdGlvbih4LCB5LCByYWRpdXMpIHtcbiAgICB2YXIgdGhhdCA9IHRoaXMsIGkwLCBpMSA9IHRoYXQuX2ZvdW5kIHx8IDAsIG4gPSB0aGF0LmNlbGxzLmxlbmd0aCwgY2VsbDtcblxuICAgIC8vIFVzZSB0aGUgcHJldmlvdXNseS1mb3VuZCBjZWxsLCBvciBzdGFydCB3aXRoIGFuIGFyYml0cmFyeSBvbmUuXG4gICAgd2hpbGUgKCEoY2VsbCA9IHRoYXQuY2VsbHNbaTFdKSkgaWYgKCsraTEgPj0gbikgcmV0dXJuIG51bGw7XG4gICAgdmFyIGR4ID0geCAtIGNlbGwuc2l0ZVswXSwgZHkgPSB5IC0gY2VsbC5zaXRlWzFdLCBkMiA9IGR4ICogZHggKyBkeSAqIGR5O1xuXG4gICAgLy8gVHJhdmVyc2UgdGhlIGhhbGYtZWRnZXMgdG8gZmluZCBhIGNsb3NlciBjZWxsLCBpZiBhbnkuXG4gICAgZG8ge1xuICAgICAgY2VsbCA9IHRoYXQuY2VsbHNbaTAgPSBpMV0sIGkxID0gbnVsbDtcbiAgICAgIGNlbGwuaGFsZmVkZ2VzLmZvckVhY2goZnVuY3Rpb24oZSkge1xuICAgICAgICB2YXIgZWRnZSA9IHRoYXQuZWRnZXNbZV0sIHYgPSBlZGdlLmxlZnQ7XG4gICAgICAgIGlmICgodiA9PT0gY2VsbC5zaXRlIHx8ICF2KSAmJiAhKHYgPSBlZGdlLnJpZ2h0KSkgcmV0dXJuO1xuICAgICAgICB2YXIgdnggPSB4IC0gdlswXSwgdnkgPSB5IC0gdlsxXSwgdjIgPSB2eCAqIHZ4ICsgdnkgKiB2eTtcbiAgICAgICAgaWYgKHYyIDwgZDIpIGQyID0gdjIsIGkxID0gdi5pbmRleDtcbiAgICAgIH0pO1xuICAgIH0gd2hpbGUgKGkxICE9PSBudWxsKTtcblxuICAgIHRoYXQuX2ZvdW5kID0gaTA7XG5cbiAgICByZXR1cm4gcmFkaXVzID09IG51bGwgfHwgZDIgPD0gcmFkaXVzICogcmFkaXVzID8gY2VsbC5zaXRlIDogbnVsbDtcbiAgfVxufVxuIiwiaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5pbXBvcnQge3ggYXMgcG9pbnRYLCB5IGFzIHBvaW50WX0gZnJvbSBcIi4vcG9pbnRcIjtcbmltcG9ydCBEaWFncmFtLCB7ZXBzaWxvbn0gZnJvbSBcIi4vRGlhZ3JhbVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHggPSBwb2ludFgsXG4gICAgICB5ID0gcG9pbnRZLFxuICAgICAgZXh0ZW50ID0gbnVsbDtcblxuICBmdW5jdGlvbiB2b3Jvbm9pKGRhdGEpIHtcbiAgICByZXR1cm4gbmV3IERpYWdyYW0oZGF0YS5tYXAoZnVuY3Rpb24oZCwgaSkge1xuICAgICAgdmFyIHMgPSBbTWF0aC5yb3VuZCh4KGQsIGksIGRhdGEpIC8gZXBzaWxvbikgKiBlcHNpbG9uLCBNYXRoLnJvdW5kKHkoZCwgaSwgZGF0YSkgLyBlcHNpbG9uKSAqIGVwc2lsb25dO1xuICAgICAgcy5pbmRleCA9IGk7XG4gICAgICBzLmRhdGEgPSBkO1xuICAgICAgcmV0dXJuIHM7XG4gICAgfSksIGV4dGVudCk7XG4gIH1cblxuICB2b3Jvbm9pLnBvbHlnb25zID0gZnVuY3Rpb24oZGF0YSkge1xuICAgIHJldHVybiB2b3Jvbm9pKGRhdGEpLnBvbHlnb25zKCk7XG4gIH07XG5cbiAgdm9yb25vaS5saW5rcyA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICByZXR1cm4gdm9yb25vaShkYXRhKS5saW5rcygpO1xuICB9O1xuXG4gIHZvcm9ub2kudHJpYW5nbGVzID0gZnVuY3Rpb24oZGF0YSkge1xuICAgIHJldHVybiB2b3Jvbm9pKGRhdGEpLnRyaWFuZ2xlcygpO1xuICB9O1xuXG4gIHZvcm9ub2kueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHZvcm9ub2kpIDogeDtcbiAgfTtcblxuICB2b3Jvbm9pLnkgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCB2b3Jvbm9pKSA6IHk7XG4gIH07XG5cbiAgdm9yb25vaS5leHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZXh0ZW50ID0gXyA9PSBudWxsID8gbnVsbCA6IFtbK19bMF1bMF0sICtfWzBdWzFdXSwgWytfWzFdWzBdLCArX1sxXVsxXV1dLCB2b3Jvbm9pKSA6IGV4dGVudCAmJiBbW2V4dGVudFswXVswXSwgZXh0ZW50WzBdWzFdXSwgW2V4dGVudFsxXVswXSwgZXh0ZW50WzFdWzFdXV07XG4gIH07XG5cbiAgdm9yb25vaS5zaXplID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGV4dGVudCA9IF8gPT0gbnVsbCA/IG51bGwgOiBbWzAsIDBdLCBbK19bMF0sICtfWzFdXV0sIHZvcm9ub2kpIDogZXh0ZW50ICYmIFtleHRlbnRbMV1bMF0gLSBleHRlbnRbMF1bMF0sIGV4dGVudFsxXVsxXSAtIGV4dGVudFswXVsxXV07XG4gIH07XG5cbiAgcmV0dXJuIHZvcm9ub2k7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFpvb21FdmVudCh0YXJnZXQsIHR5cGUsIHRyYW5zZm9ybSkge1xuICB0aGlzLnRhcmdldCA9IHRhcmdldDtcbiAgdGhpcy50eXBlID0gdHlwZTtcbiAgdGhpcy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm07XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gVHJhbnNmb3JtKGssIHgsIHkpIHtcbiAgdGhpcy5rID0gaztcbiAgdGhpcy54ID0geDtcbiAgdGhpcy55ID0geTtcbn1cblxuVHJhbnNmb3JtLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFRyYW5zZm9ybSxcbiAgc2NhbGU6IGZ1bmN0aW9uKGspIHtcbiAgICByZXR1cm4gayA9PT0gMSA/IHRoaXMgOiBuZXcgVHJhbnNmb3JtKHRoaXMuayAqIGssIHRoaXMueCwgdGhpcy55KTtcbiAgfSxcbiAgdHJhbnNsYXRlOiBmdW5jdGlvbih4LCB5KSB7XG4gICAgcmV0dXJuIHggPT09IDAgJiB5ID09PSAwID8gdGhpcyA6IG5ldyBUcmFuc2Zvcm0odGhpcy5rLCB0aGlzLnggKyB0aGlzLmsgKiB4LCB0aGlzLnkgKyB0aGlzLmsgKiB5KTtcbiAgfSxcbiAgYXBwbHk6IGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgcmV0dXJuIFtwb2ludFswXSAqIHRoaXMuayArIHRoaXMueCwgcG9pbnRbMV0gKiB0aGlzLmsgKyB0aGlzLnldO1xuICB9LFxuICBhcHBseVg6IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4geCAqIHRoaXMuayArIHRoaXMueDtcbiAgfSxcbiAgYXBwbHlZOiBmdW5jdGlvbih5KSB7XG4gICAgcmV0dXJuIHkgKiB0aGlzLmsgKyB0aGlzLnk7XG4gIH0sXG4gIGludmVydDogZnVuY3Rpb24obG9jYXRpb24pIHtcbiAgICByZXR1cm4gWyhsb2NhdGlvblswXSAtIHRoaXMueCkgLyB0aGlzLmssIChsb2NhdGlvblsxXSAtIHRoaXMueSkgLyB0aGlzLmtdO1xuICB9LFxuICBpbnZlcnRYOiBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuICh4IC0gdGhpcy54KSAvIHRoaXMuaztcbiAgfSxcbiAgaW52ZXJ0WTogZnVuY3Rpb24oeSkge1xuICAgIHJldHVybiAoeSAtIHRoaXMueSkgLyB0aGlzLms7XG4gIH0sXG4gIHJlc2NhbGVYOiBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIHguY29weSgpLmRvbWFpbih4LnJhbmdlKCkubWFwKHRoaXMuaW52ZXJ0WCwgdGhpcykubWFwKHguaW52ZXJ0LCB4KSk7XG4gIH0sXG4gIHJlc2NhbGVZOiBmdW5jdGlvbih5KSB7XG4gICAgcmV0dXJuIHkuY29weSgpLmRvbWFpbih5LnJhbmdlKCkubWFwKHRoaXMuaW52ZXJ0WSwgdGhpcykubWFwKHkuaW52ZXJ0LCB5KSk7XG4gIH0sXG4gIHRvU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCJ0cmFuc2xhdGUoXCIgKyB0aGlzLnggKyBcIixcIiArIHRoaXMueSArIFwiKSBzY2FsZShcIiArIHRoaXMuayArIFwiKVwiO1xuICB9XG59O1xuXG5leHBvcnQgdmFyIGlkZW50aXR5ID0gbmV3IFRyYW5zZm9ybSgxLCAwLCAwKTtcblxudHJhbnNmb3JtLnByb3RvdHlwZSA9IFRyYW5zZm9ybS5wcm90b3R5cGU7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRyYW5zZm9ybShub2RlKSB7XG4gIHdoaWxlICghbm9kZS5fX3pvb20pIGlmICghKG5vZGUgPSBub2RlLnBhcmVudE5vZGUpKSByZXR1cm4gaWRlbnRpdHk7XG4gIHJldHVybiBub2RlLl9fem9vbTtcbn1cbiIsImltcG9ydCB7ZXZlbnR9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcblxuZXhwb3J0IGZ1bmN0aW9uIG5vcHJvcGFnYXRpb24oKSB7XG4gIGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG59XG4iLCJpbXBvcnQge2Rpc3BhdGNofSBmcm9tIFwiZDMtZGlzcGF0Y2hcIjtcbmltcG9ydCB7ZHJhZ0Rpc2FibGUsIGRyYWdFbmFibGV9IGZyb20gXCJkMy1kcmFnXCI7XG5pbXBvcnQge2ludGVycG9sYXRlWm9vbX0gZnJvbSBcImQzLWludGVycG9sYXRlXCI7XG5pbXBvcnQge2V2ZW50LCBjdXN0b21FdmVudCwgc2VsZWN0LCBtb3VzZSwgdG91Y2h9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCB7aW50ZXJydXB0fSBmcm9tIFwiZDMtdHJhbnNpdGlvblwiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50LmpzXCI7XG5pbXBvcnQgWm9vbUV2ZW50IGZyb20gXCIuL2V2ZW50LmpzXCI7XG5pbXBvcnQge1RyYW5zZm9ybSwgaWRlbnRpdHl9IGZyb20gXCIuL3RyYW5zZm9ybS5qc1wiO1xuaW1wb3J0IG5vZXZlbnQsIHtub3Byb3BhZ2F0aW9ufSBmcm9tIFwiLi9ub2V2ZW50LmpzXCI7XG5cbi8vIElnbm9yZSByaWdodC1jbGljaywgc2luY2UgdGhhdCBzaG91bGQgb3BlbiB0aGUgY29udGV4dCBtZW51LlxuZnVuY3Rpb24gZGVmYXVsdEZpbHRlcigpIHtcbiAgcmV0dXJuICFldmVudC5jdHJsS2V5ICYmICFldmVudC5idXR0b247XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRFeHRlbnQoKSB7XG4gIHZhciBlID0gdGhpcztcbiAgaWYgKGUgaW5zdGFuY2VvZiBTVkdFbGVtZW50KSB7XG4gICAgZSA9IGUub3duZXJTVkdFbGVtZW50IHx8IGU7XG4gICAgaWYgKGUuaGFzQXR0cmlidXRlKFwidmlld0JveFwiKSkge1xuICAgICAgZSA9IGUudmlld0JveC5iYXNlVmFsO1xuICAgICAgcmV0dXJuIFtbZS54LCBlLnldLCBbZS54ICsgZS53aWR0aCwgZS55ICsgZS5oZWlnaHRdXTtcbiAgICB9XG4gICAgcmV0dXJuIFtbMCwgMF0sIFtlLndpZHRoLmJhc2VWYWwudmFsdWUsIGUuaGVpZ2h0LmJhc2VWYWwudmFsdWVdXTtcbiAgfVxuICByZXR1cm4gW1swLCAwXSwgW2UuY2xpZW50V2lkdGgsIGUuY2xpZW50SGVpZ2h0XV07XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRUcmFuc2Zvcm0oKSB7XG4gIHJldHVybiB0aGlzLl9fem9vbSB8fCBpZGVudGl0eTtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdFdoZWVsRGVsdGEoKSB7XG4gIHJldHVybiAtZXZlbnQuZGVsdGFZICogKGV2ZW50LmRlbHRhTW9kZSA9PT0gMSA/IDAuMDUgOiBldmVudC5kZWx0YU1vZGUgPyAxIDogMC4wMDIpO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0VG91Y2hhYmxlKCkge1xuICByZXR1cm4gbmF2aWdhdG9yLm1heFRvdWNoUG9pbnRzIHx8IChcIm9udG91Y2hzdGFydFwiIGluIHRoaXMpO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0Q29uc3RyYWluKHRyYW5zZm9ybSwgZXh0ZW50LCB0cmFuc2xhdGVFeHRlbnQpIHtcbiAgdmFyIGR4MCA9IHRyYW5zZm9ybS5pbnZlcnRYKGV4dGVudFswXVswXSkgLSB0cmFuc2xhdGVFeHRlbnRbMF1bMF0sXG4gICAgICBkeDEgPSB0cmFuc2Zvcm0uaW52ZXJ0WChleHRlbnRbMV1bMF0pIC0gdHJhbnNsYXRlRXh0ZW50WzFdWzBdLFxuICAgICAgZHkwID0gdHJhbnNmb3JtLmludmVydFkoZXh0ZW50WzBdWzFdKSAtIHRyYW5zbGF0ZUV4dGVudFswXVsxXSxcbiAgICAgIGR5MSA9IHRyYW5zZm9ybS5pbnZlcnRZKGV4dGVudFsxXVsxXSkgLSB0cmFuc2xhdGVFeHRlbnRbMV1bMV07XG4gIHJldHVybiB0cmFuc2Zvcm0udHJhbnNsYXRlKFxuICAgIGR4MSA+IGR4MCA/IChkeDAgKyBkeDEpIC8gMiA6IE1hdGgubWluKDAsIGR4MCkgfHwgTWF0aC5tYXgoMCwgZHgxKSxcbiAgICBkeTEgPiBkeTAgPyAoZHkwICsgZHkxKSAvIDIgOiBNYXRoLm1pbigwLCBkeTApIHx8IE1hdGgubWF4KDAsIGR5MSlcbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBmaWx0ZXIgPSBkZWZhdWx0RmlsdGVyLFxuICAgICAgZXh0ZW50ID0gZGVmYXVsdEV4dGVudCxcbiAgICAgIGNvbnN0cmFpbiA9IGRlZmF1bHRDb25zdHJhaW4sXG4gICAgICB3aGVlbERlbHRhID0gZGVmYXVsdFdoZWVsRGVsdGEsXG4gICAgICB0b3VjaGFibGUgPSBkZWZhdWx0VG91Y2hhYmxlLFxuICAgICAgc2NhbGVFeHRlbnQgPSBbMCwgSW5maW5pdHldLFxuICAgICAgdHJhbnNsYXRlRXh0ZW50ID0gW1stSW5maW5pdHksIC1JbmZpbml0eV0sIFtJbmZpbml0eSwgSW5maW5pdHldXSxcbiAgICAgIGR1cmF0aW9uID0gMjUwLFxuICAgICAgaW50ZXJwb2xhdGUgPSBpbnRlcnBvbGF0ZVpvb20sXG4gICAgICBsaXN0ZW5lcnMgPSBkaXNwYXRjaChcInN0YXJ0XCIsIFwiem9vbVwiLCBcImVuZFwiKSxcbiAgICAgIHRvdWNoc3RhcnRpbmcsXG4gICAgICB0b3VjaGVuZGluZyxcbiAgICAgIHRvdWNoRGVsYXkgPSA1MDAsXG4gICAgICB3aGVlbERlbGF5ID0gMTUwLFxuICAgICAgY2xpY2tEaXN0YW5jZTIgPSAwO1xuXG4gIGZ1bmN0aW9uIHpvb20oc2VsZWN0aW9uKSB7XG4gICAgc2VsZWN0aW9uXG4gICAgICAgIC5wcm9wZXJ0eShcIl9fem9vbVwiLCBkZWZhdWx0VHJhbnNmb3JtKVxuICAgICAgICAub24oXCJ3aGVlbC56b29tXCIsIHdoZWVsZWQpXG4gICAgICAgIC5vbihcIm1vdXNlZG93bi56b29tXCIsIG1vdXNlZG93bmVkKVxuICAgICAgICAub24oXCJkYmxjbGljay56b29tXCIsIGRibGNsaWNrZWQpXG4gICAgICAuZmlsdGVyKHRvdWNoYWJsZSlcbiAgICAgICAgLm9uKFwidG91Y2hzdGFydC56b29tXCIsIHRvdWNoc3RhcnRlZClcbiAgICAgICAgLm9uKFwidG91Y2htb3ZlLnpvb21cIiwgdG91Y2htb3ZlZClcbiAgICAgICAgLm9uKFwidG91Y2hlbmQuem9vbSB0b3VjaGNhbmNlbC56b29tXCIsIHRvdWNoZW5kZWQpXG4gICAgICAgIC5zdHlsZShcInRvdWNoLWFjdGlvblwiLCBcIm5vbmVcIilcbiAgICAgICAgLnN0eWxlKFwiLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yXCIsIFwicmdiYSgwLDAsMCwwKVwiKTtcbiAgfVxuXG4gIHpvb20udHJhbnNmb3JtID0gZnVuY3Rpb24oY29sbGVjdGlvbiwgdHJhbnNmb3JtLCBwb2ludCkge1xuICAgIHZhciBzZWxlY3Rpb24gPSBjb2xsZWN0aW9uLnNlbGVjdGlvbiA/IGNvbGxlY3Rpb24uc2VsZWN0aW9uKCkgOiBjb2xsZWN0aW9uO1xuICAgIHNlbGVjdGlvbi5wcm9wZXJ0eShcIl9fem9vbVwiLCBkZWZhdWx0VHJhbnNmb3JtKTtcbiAgICBpZiAoY29sbGVjdGlvbiAhPT0gc2VsZWN0aW9uKSB7XG4gICAgICBzY2hlZHVsZShjb2xsZWN0aW9uLCB0cmFuc2Zvcm0sIHBvaW50KTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2VsZWN0aW9uLmludGVycnVwdCgpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgIGdlc3R1cmUodGhpcywgYXJndW1lbnRzKVxuICAgICAgICAgICAgLnN0YXJ0KClcbiAgICAgICAgICAgIC56b29tKG51bGwsIHR5cGVvZiB0cmFuc2Zvcm0gPT09IFwiZnVuY3Rpb25cIiA/IHRyYW5zZm9ybS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogdHJhbnNmb3JtKVxuICAgICAgICAgICAgLmVuZCgpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIHpvb20uc2NhbGVCeSA9IGZ1bmN0aW9uKHNlbGVjdGlvbiwgaywgcCkge1xuICAgIHpvb20uc2NhbGVUbyhzZWxlY3Rpb24sIGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGswID0gdGhpcy5fX3pvb20uayxcbiAgICAgICAgICBrMSA9IHR5cGVvZiBrID09PSBcImZ1bmN0aW9uXCIgPyBrLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiBrO1xuICAgICAgcmV0dXJuIGswICogazE7XG4gICAgfSwgcCk7XG4gIH07XG5cbiAgem9vbS5zY2FsZVRvID0gZnVuY3Rpb24oc2VsZWN0aW9uLCBrLCBwKSB7XG4gICAgem9vbS50cmFuc2Zvcm0oc2VsZWN0aW9uLCBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBlID0gZXh0ZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksXG4gICAgICAgICAgdDAgPSB0aGlzLl9fem9vbSxcbiAgICAgICAgICBwMCA9IHAgPT0gbnVsbCA/IGNlbnRyb2lkKGUpIDogdHlwZW9mIHAgPT09IFwiZnVuY3Rpb25cIiA/IHAuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IHAsXG4gICAgICAgICAgcDEgPSB0MC5pbnZlcnQocDApLFxuICAgICAgICAgIGsxID0gdHlwZW9mIGsgPT09IFwiZnVuY3Rpb25cIiA/IGsuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IGs7XG4gICAgICByZXR1cm4gY29uc3RyYWluKHRyYW5zbGF0ZShzY2FsZSh0MCwgazEpLCBwMCwgcDEpLCBlLCB0cmFuc2xhdGVFeHRlbnQpO1xuICAgIH0sIHApO1xuICB9O1xuXG4gIHpvb20udHJhbnNsYXRlQnkgPSBmdW5jdGlvbihzZWxlY3Rpb24sIHgsIHkpIHtcbiAgICB6b29tLnRyYW5zZm9ybShzZWxlY3Rpb24sIGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGNvbnN0cmFpbih0aGlzLl9fem9vbS50cmFuc2xhdGUoXG4gICAgICAgIHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiB4LFxuICAgICAgICB0eXBlb2YgeSA9PT0gXCJmdW5jdGlvblwiID8geS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogeVxuICAgICAgKSwgZXh0ZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIHRyYW5zbGF0ZUV4dGVudCk7XG4gICAgfSk7XG4gIH07XG5cbiAgem9vbS50cmFuc2xhdGVUbyA9IGZ1bmN0aW9uKHNlbGVjdGlvbiwgeCwgeSwgcCkge1xuICAgIHpvb20udHJhbnNmb3JtKHNlbGVjdGlvbiwgZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgZSA9IGV4dGVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpLFxuICAgICAgICAgIHQgPSB0aGlzLl9fem9vbSxcbiAgICAgICAgICBwMCA9IHAgPT0gbnVsbCA/IGNlbnRyb2lkKGUpIDogdHlwZW9mIHAgPT09IFwiZnVuY3Rpb25cIiA/IHAuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IHA7XG4gICAgICByZXR1cm4gY29uc3RyYWluKGlkZW50aXR5LnRyYW5zbGF0ZShwMFswXSwgcDBbMV0pLnNjYWxlKHQuaykudHJhbnNsYXRlKFxuICAgICAgICB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8gLXguYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IC14LFxuICAgICAgICB0eXBlb2YgeSA9PT0gXCJmdW5jdGlvblwiID8gLXkuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IC15XG4gICAgICApLCBlLCB0cmFuc2xhdGVFeHRlbnQpO1xuICAgIH0sIHApO1xuICB9O1xuXG4gIGZ1bmN0aW9uIHNjYWxlKHRyYW5zZm9ybSwgaykge1xuICAgIGsgPSBNYXRoLm1heChzY2FsZUV4dGVudFswXSwgTWF0aC5taW4oc2NhbGVFeHRlbnRbMV0sIGspKTtcbiAgICByZXR1cm4gayA9PT0gdHJhbnNmb3JtLmsgPyB0cmFuc2Zvcm0gOiBuZXcgVHJhbnNmb3JtKGssIHRyYW5zZm9ybS54LCB0cmFuc2Zvcm0ueSk7XG4gIH1cblxuICBmdW5jdGlvbiB0cmFuc2xhdGUodHJhbnNmb3JtLCBwMCwgcDEpIHtcbiAgICB2YXIgeCA9IHAwWzBdIC0gcDFbMF0gKiB0cmFuc2Zvcm0uaywgeSA9IHAwWzFdIC0gcDFbMV0gKiB0cmFuc2Zvcm0uaztcbiAgICByZXR1cm4geCA9PT0gdHJhbnNmb3JtLnggJiYgeSA9PT0gdHJhbnNmb3JtLnkgPyB0cmFuc2Zvcm0gOiBuZXcgVHJhbnNmb3JtKHRyYW5zZm9ybS5rLCB4LCB5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNlbnRyb2lkKGV4dGVudCkge1xuICAgIHJldHVybiBbKCtleHRlbnRbMF1bMF0gKyArZXh0ZW50WzFdWzBdKSAvIDIsICgrZXh0ZW50WzBdWzFdICsgK2V4dGVudFsxXVsxXSkgLyAyXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNjaGVkdWxlKHRyYW5zaXRpb24sIHRyYW5zZm9ybSwgcG9pbnQpIHtcbiAgICB0cmFuc2l0aW9uXG4gICAgICAgIC5vbihcInN0YXJ0Lnpvb21cIiwgZnVuY3Rpb24oKSB7IGdlc3R1cmUodGhpcywgYXJndW1lbnRzKS5zdGFydCgpOyB9KVxuICAgICAgICAub24oXCJpbnRlcnJ1cHQuem9vbSBlbmQuem9vbVwiLCBmdW5jdGlvbigpIHsgZ2VzdHVyZSh0aGlzLCBhcmd1bWVudHMpLmVuZCgpOyB9KVxuICAgICAgICAudHdlZW4oXCJ6b29tXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHZhciB0aGF0ID0gdGhpcyxcbiAgICAgICAgICAgICAgYXJncyA9IGFyZ3VtZW50cyxcbiAgICAgICAgICAgICAgZyA9IGdlc3R1cmUodGhhdCwgYXJncyksXG4gICAgICAgICAgICAgIGUgPSBleHRlbnQuYXBwbHkodGhhdCwgYXJncyksXG4gICAgICAgICAgICAgIHAgPSBwb2ludCA9PSBudWxsID8gY2VudHJvaWQoZSkgOiB0eXBlb2YgcG9pbnQgPT09IFwiZnVuY3Rpb25cIiA/IHBvaW50LmFwcGx5KHRoYXQsIGFyZ3MpIDogcG9pbnQsXG4gICAgICAgICAgICAgIHcgPSBNYXRoLm1heChlWzFdWzBdIC0gZVswXVswXSwgZVsxXVsxXSAtIGVbMF1bMV0pLFxuICAgICAgICAgICAgICBhID0gdGhhdC5fX3pvb20sXG4gICAgICAgICAgICAgIGIgPSB0eXBlb2YgdHJhbnNmb3JtID09PSBcImZ1bmN0aW9uXCIgPyB0cmFuc2Zvcm0uYXBwbHkodGhhdCwgYXJncykgOiB0cmFuc2Zvcm0sXG4gICAgICAgICAgICAgIGkgPSBpbnRlcnBvbGF0ZShhLmludmVydChwKS5jb25jYXQodyAvIGEuayksIGIuaW52ZXJ0KHApLmNvbmNhdCh3IC8gYi5rKSk7XG4gICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICAgIGlmICh0ID09PSAxKSB0ID0gYjsgLy8gQXZvaWQgcm91bmRpbmcgZXJyb3Igb24gZW5kLlxuICAgICAgICAgICAgZWxzZSB7IHZhciBsID0gaSh0KSwgayA9IHcgLyBsWzJdOyB0ID0gbmV3IFRyYW5zZm9ybShrLCBwWzBdIC0gbFswXSAqIGssIHBbMV0gLSBsWzFdICogayk7IH1cbiAgICAgICAgICAgIGcuem9vbShudWxsLCB0KTtcbiAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdlc3R1cmUodGhhdCwgYXJncywgY2xlYW4pIHtcbiAgICByZXR1cm4gKCFjbGVhbiAmJiB0aGF0Ll9fem9vbWluZykgfHwgbmV3IEdlc3R1cmUodGhhdCwgYXJncyk7XG4gIH1cblxuICBmdW5jdGlvbiBHZXN0dXJlKHRoYXQsIGFyZ3MpIHtcbiAgICB0aGlzLnRoYXQgPSB0aGF0O1xuICAgIHRoaXMuYXJncyA9IGFyZ3M7XG4gICAgdGhpcy5hY3RpdmUgPSAwO1xuICAgIHRoaXMuZXh0ZW50ID0gZXh0ZW50LmFwcGx5KHRoYXQsIGFyZ3MpO1xuICAgIHRoaXMudGFwcyA9IDA7XG4gIH1cblxuICBHZXN0dXJlLnByb3RvdHlwZSA9IHtcbiAgICBzdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoKyt0aGlzLmFjdGl2ZSA9PT0gMSkge1xuICAgICAgICB0aGlzLnRoYXQuX196b29taW5nID0gdGhpcztcbiAgICAgICAgdGhpcy5lbWl0KFwic3RhcnRcIik7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIHpvb206IGZ1bmN0aW9uKGtleSwgdHJhbnNmb3JtKSB7XG4gICAgICBpZiAodGhpcy5tb3VzZSAmJiBrZXkgIT09IFwibW91c2VcIikgdGhpcy5tb3VzZVsxXSA9IHRyYW5zZm9ybS5pbnZlcnQodGhpcy5tb3VzZVswXSk7XG4gICAgICBpZiAodGhpcy50b3VjaDAgJiYga2V5ICE9PSBcInRvdWNoXCIpIHRoaXMudG91Y2gwWzFdID0gdHJhbnNmb3JtLmludmVydCh0aGlzLnRvdWNoMFswXSk7XG4gICAgICBpZiAodGhpcy50b3VjaDEgJiYga2V5ICE9PSBcInRvdWNoXCIpIHRoaXMudG91Y2gxWzFdID0gdHJhbnNmb3JtLmludmVydCh0aGlzLnRvdWNoMVswXSk7XG4gICAgICB0aGlzLnRoYXQuX196b29tID0gdHJhbnNmb3JtO1xuICAgICAgdGhpcy5lbWl0KFwiem9vbVwiKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgZW5kOiBmdW5jdGlvbigpIHtcbiAgICAgIGlmICgtLXRoaXMuYWN0aXZlID09PSAwKSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLnRoYXQuX196b29taW5nO1xuICAgICAgICB0aGlzLmVtaXQoXCJlbmRcIik7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIGVtaXQ6IGZ1bmN0aW9uKHR5cGUpIHtcbiAgICAgIGN1c3RvbUV2ZW50KG5ldyBab29tRXZlbnQoem9vbSwgdHlwZSwgdGhpcy50aGF0Ll9fem9vbSksIGxpc3RlbmVycy5hcHBseSwgbGlzdGVuZXJzLCBbdHlwZSwgdGhpcy50aGF0LCB0aGlzLmFyZ3NdKTtcbiAgICB9XG4gIH07XG5cbiAgZnVuY3Rpb24gd2hlZWxlZCgpIHtcbiAgICBpZiAoIWZpbHRlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSByZXR1cm47XG4gICAgdmFyIGcgPSBnZXN0dXJlKHRoaXMsIGFyZ3VtZW50cyksXG4gICAgICAgIHQgPSB0aGlzLl9fem9vbSxcbiAgICAgICAgayA9IE1hdGgubWF4KHNjYWxlRXh0ZW50WzBdLCBNYXRoLm1pbihzY2FsZUV4dGVudFsxXSwgdC5rICogTWF0aC5wb3coMiwgd2hlZWxEZWx0YS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSkpLFxuICAgICAgICBwID0gbW91c2UodGhpcyk7XG5cbiAgICAvLyBJZiB0aGUgbW91c2UgaXMgaW4gdGhlIHNhbWUgbG9jYXRpb24gYXMgYmVmb3JlLCByZXVzZSBpdC5cbiAgICAvLyBJZiB0aGVyZSB3ZXJlIHJlY2VudCB3aGVlbCBldmVudHMsIHJlc2V0IHRoZSB3aGVlbCBpZGxlIHRpbWVvdXQuXG4gICAgaWYgKGcud2hlZWwpIHtcbiAgICAgIGlmIChnLm1vdXNlWzBdWzBdICE9PSBwWzBdIHx8IGcubW91c2VbMF1bMV0gIT09IHBbMV0pIHtcbiAgICAgICAgZy5tb3VzZVsxXSA9IHQuaW52ZXJ0KGcubW91c2VbMF0gPSBwKTtcbiAgICAgIH1cbiAgICAgIGNsZWFyVGltZW91dChnLndoZWVsKTtcbiAgICB9XG5cbiAgICAvLyBJZiB0aGlzIHdoZWVsIGV2ZW50IHdvbuKAmXQgdHJpZ2dlciBhIHRyYW5zZm9ybSBjaGFuZ2UsIGlnbm9yZSBpdC5cbiAgICBlbHNlIGlmICh0LmsgPT09IGspIHJldHVybjtcblxuICAgIC8vIE90aGVyd2lzZSwgY2FwdHVyZSB0aGUgbW91c2UgcG9pbnQgYW5kIGxvY2F0aW9uIGF0IHRoZSBzdGFydC5cbiAgICBlbHNlIHtcbiAgICAgIGcubW91c2UgPSBbcCwgdC5pbnZlcnQocCldO1xuICAgICAgaW50ZXJydXB0KHRoaXMpO1xuICAgICAgZy5zdGFydCgpO1xuICAgIH1cblxuICAgIG5vZXZlbnQoKTtcbiAgICBnLndoZWVsID0gc2V0VGltZW91dCh3aGVlbGlkbGVkLCB3aGVlbERlbGF5KTtcbiAgICBnLnpvb20oXCJtb3VzZVwiLCBjb25zdHJhaW4odHJhbnNsYXRlKHNjYWxlKHQsIGspLCBnLm1vdXNlWzBdLCBnLm1vdXNlWzFdKSwgZy5leHRlbnQsIHRyYW5zbGF0ZUV4dGVudCkpO1xuXG4gICAgZnVuY3Rpb24gd2hlZWxpZGxlZCgpIHtcbiAgICAgIGcud2hlZWwgPSBudWxsO1xuICAgICAgZy5lbmQoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBtb3VzZWRvd25lZCgpIHtcbiAgICBpZiAodG91Y2hlbmRpbmcgfHwgIWZpbHRlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSByZXR1cm47XG4gICAgdmFyIGcgPSBnZXN0dXJlKHRoaXMsIGFyZ3VtZW50cywgdHJ1ZSksXG4gICAgICAgIHYgPSBzZWxlY3QoZXZlbnQudmlldykub24oXCJtb3VzZW1vdmUuem9vbVwiLCBtb3VzZW1vdmVkLCB0cnVlKS5vbihcIm1vdXNldXAuem9vbVwiLCBtb3VzZXVwcGVkLCB0cnVlKSxcbiAgICAgICAgcCA9IG1vdXNlKHRoaXMpLFxuICAgICAgICB4MCA9IGV2ZW50LmNsaWVudFgsXG4gICAgICAgIHkwID0gZXZlbnQuY2xpZW50WTtcblxuICAgIGRyYWdEaXNhYmxlKGV2ZW50LnZpZXcpO1xuICAgIG5vcHJvcGFnYXRpb24oKTtcbiAgICBnLm1vdXNlID0gW3AsIHRoaXMuX196b29tLmludmVydChwKV07XG4gICAgaW50ZXJydXB0KHRoaXMpO1xuICAgIGcuc3RhcnQoKTtcblxuICAgIGZ1bmN0aW9uIG1vdXNlbW92ZWQoKSB7XG4gICAgICBub2V2ZW50KCk7XG4gICAgICBpZiAoIWcubW92ZWQpIHtcbiAgICAgICAgdmFyIGR4ID0gZXZlbnQuY2xpZW50WCAtIHgwLCBkeSA9IGV2ZW50LmNsaWVudFkgLSB5MDtcbiAgICAgICAgZy5tb3ZlZCA9IGR4ICogZHggKyBkeSAqIGR5ID4gY2xpY2tEaXN0YW5jZTI7XG4gICAgICB9XG4gICAgICBnLnpvb20oXCJtb3VzZVwiLCBjb25zdHJhaW4odHJhbnNsYXRlKGcudGhhdC5fX3pvb20sIGcubW91c2VbMF0gPSBtb3VzZShnLnRoYXQpLCBnLm1vdXNlWzFdKSwgZy5leHRlbnQsIHRyYW5zbGF0ZUV4dGVudCkpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG1vdXNldXBwZWQoKSB7XG4gICAgICB2Lm9uKFwibW91c2Vtb3ZlLnpvb20gbW91c2V1cC56b29tXCIsIG51bGwpO1xuICAgICAgZHJhZ0VuYWJsZShldmVudC52aWV3LCBnLm1vdmVkKTtcbiAgICAgIG5vZXZlbnQoKTtcbiAgICAgIGcuZW5kKCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gZGJsY2xpY2tlZCgpIHtcbiAgICBpZiAoIWZpbHRlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSByZXR1cm47XG4gICAgdmFyIHQwID0gdGhpcy5fX3pvb20sXG4gICAgICAgIHAwID0gbW91c2UodGhpcyksXG4gICAgICAgIHAxID0gdDAuaW52ZXJ0KHAwKSxcbiAgICAgICAgazEgPSB0MC5rICogKGV2ZW50LnNoaWZ0S2V5ID8gMC41IDogMiksXG4gICAgICAgIHQxID0gY29uc3RyYWluKHRyYW5zbGF0ZShzY2FsZSh0MCwgazEpLCBwMCwgcDEpLCBleHRlbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgdHJhbnNsYXRlRXh0ZW50KTtcblxuICAgIG5vZXZlbnQoKTtcbiAgICBpZiAoZHVyYXRpb24gPiAwKSBzZWxlY3QodGhpcykudHJhbnNpdGlvbigpLmR1cmF0aW9uKGR1cmF0aW9uKS5jYWxsKHNjaGVkdWxlLCB0MSwgcDApO1xuICAgIGVsc2Ugc2VsZWN0KHRoaXMpLmNhbGwoem9vbS50cmFuc2Zvcm0sIHQxKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRvdWNoc3RhcnRlZCgpIHtcbiAgICBpZiAoIWZpbHRlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSByZXR1cm47XG4gICAgdmFyIHRvdWNoZXMgPSBldmVudC50b3VjaGVzLFxuICAgICAgICBuID0gdG91Y2hlcy5sZW5ndGgsXG4gICAgICAgIGcgPSBnZXN0dXJlKHRoaXMsIGFyZ3VtZW50cywgZXZlbnQuY2hhbmdlZFRvdWNoZXMubGVuZ3RoID09PSBuKSxcbiAgICAgICAgc3RhcnRlZCwgaSwgdCwgcDtcblxuICAgIG5vcHJvcGFnYXRpb24oKTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICB0ID0gdG91Y2hlc1tpXSwgcCA9IHRvdWNoKHRoaXMsIHRvdWNoZXMsIHQuaWRlbnRpZmllcik7XG4gICAgICBwID0gW3AsIHRoaXMuX196b29tLmludmVydChwKSwgdC5pZGVudGlmaWVyXTtcbiAgICAgIGlmICghZy50b3VjaDApIGcudG91Y2gwID0gcCwgc3RhcnRlZCA9IHRydWUsIGcudGFwcyA9IDEgKyAhIXRvdWNoc3RhcnRpbmc7XG4gICAgICBlbHNlIGlmICghZy50b3VjaDEgJiYgZy50b3VjaDBbMl0gIT09IHBbMl0pIGcudG91Y2gxID0gcCwgZy50YXBzID0gMDtcbiAgICB9XG5cbiAgICBpZiAodG91Y2hzdGFydGluZykgdG91Y2hzdGFydGluZyA9IGNsZWFyVGltZW91dCh0b3VjaHN0YXJ0aW5nKTtcblxuICAgIGlmIChzdGFydGVkKSB7XG4gICAgICBpZiAoZy50YXBzIDwgMikgdG91Y2hzdGFydGluZyA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IHRvdWNoc3RhcnRpbmcgPSBudWxsOyB9LCB0b3VjaERlbGF5KTtcbiAgICAgIGludGVycnVwdCh0aGlzKTtcbiAgICAgIGcuc3RhcnQoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiB0b3VjaG1vdmVkKCkge1xuICAgIGlmICghdGhpcy5fX3pvb21pbmcpIHJldHVybjtcbiAgICB2YXIgZyA9IGdlc3R1cmUodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgdG91Y2hlcyA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzLFxuICAgICAgICBuID0gdG91Y2hlcy5sZW5ndGgsIGksIHQsIHAsIGw7XG5cbiAgICBub2V2ZW50KCk7XG4gICAgaWYgKHRvdWNoc3RhcnRpbmcpIHRvdWNoc3RhcnRpbmcgPSBjbGVhclRpbWVvdXQodG91Y2hzdGFydGluZyk7XG4gICAgZy50YXBzID0gMDtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICB0ID0gdG91Y2hlc1tpXSwgcCA9IHRvdWNoKHRoaXMsIHRvdWNoZXMsIHQuaWRlbnRpZmllcik7XG4gICAgICBpZiAoZy50b3VjaDAgJiYgZy50b3VjaDBbMl0gPT09IHQuaWRlbnRpZmllcikgZy50b3VjaDBbMF0gPSBwO1xuICAgICAgZWxzZSBpZiAoZy50b3VjaDEgJiYgZy50b3VjaDFbMl0gPT09IHQuaWRlbnRpZmllcikgZy50b3VjaDFbMF0gPSBwO1xuICAgIH1cbiAgICB0ID0gZy50aGF0Ll9fem9vbTtcbiAgICBpZiAoZy50b3VjaDEpIHtcbiAgICAgIHZhciBwMCA9IGcudG91Y2gwWzBdLCBsMCA9IGcudG91Y2gwWzFdLFxuICAgICAgICAgIHAxID0gZy50b3VjaDFbMF0sIGwxID0gZy50b3VjaDFbMV0sXG4gICAgICAgICAgZHAgPSAoZHAgPSBwMVswXSAtIHAwWzBdKSAqIGRwICsgKGRwID0gcDFbMV0gLSBwMFsxXSkgKiBkcCxcbiAgICAgICAgICBkbCA9IChkbCA9IGwxWzBdIC0gbDBbMF0pICogZGwgKyAoZGwgPSBsMVsxXSAtIGwwWzFdKSAqIGRsO1xuICAgICAgdCA9IHNjYWxlKHQsIE1hdGguc3FydChkcCAvIGRsKSk7XG4gICAgICBwID0gWyhwMFswXSArIHAxWzBdKSAvIDIsIChwMFsxXSArIHAxWzFdKSAvIDJdO1xuICAgICAgbCA9IFsobDBbMF0gKyBsMVswXSkgLyAyLCAobDBbMV0gKyBsMVsxXSkgLyAyXTtcbiAgICB9XG4gICAgZWxzZSBpZiAoZy50b3VjaDApIHAgPSBnLnRvdWNoMFswXSwgbCA9IGcudG91Y2gwWzFdO1xuICAgIGVsc2UgcmV0dXJuO1xuICAgIGcuem9vbShcInRvdWNoXCIsIGNvbnN0cmFpbih0cmFuc2xhdGUodCwgcCwgbCksIGcuZXh0ZW50LCB0cmFuc2xhdGVFeHRlbnQpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRvdWNoZW5kZWQoKSB7XG4gICAgaWYgKCF0aGlzLl9fem9vbWluZykgcmV0dXJuO1xuICAgIHZhciBnID0gZ2VzdHVyZSh0aGlzLCBhcmd1bWVudHMpLFxuICAgICAgICB0b3VjaGVzID0gZXZlbnQuY2hhbmdlZFRvdWNoZXMsXG4gICAgICAgIG4gPSB0b3VjaGVzLmxlbmd0aCwgaSwgdDtcblxuICAgIG5vcHJvcGFnYXRpb24oKTtcbiAgICBpZiAodG91Y2hlbmRpbmcpIGNsZWFyVGltZW91dCh0b3VjaGVuZGluZyk7XG4gICAgdG91Y2hlbmRpbmcgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0b3VjaGVuZGluZyA9IG51bGw7IH0sIHRvdWNoRGVsYXkpO1xuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIHQgPSB0b3VjaGVzW2ldO1xuICAgICAgaWYgKGcudG91Y2gwICYmIGcudG91Y2gwWzJdID09PSB0LmlkZW50aWZpZXIpIGRlbGV0ZSBnLnRvdWNoMDtcbiAgICAgIGVsc2UgaWYgKGcudG91Y2gxICYmIGcudG91Y2gxWzJdID09PSB0LmlkZW50aWZpZXIpIGRlbGV0ZSBnLnRvdWNoMTtcbiAgICB9XG4gICAgaWYgKGcudG91Y2gxICYmICFnLnRvdWNoMCkgZy50b3VjaDAgPSBnLnRvdWNoMSwgZGVsZXRlIGcudG91Y2gxO1xuICAgIGlmIChnLnRvdWNoMCkgZy50b3VjaDBbMV0gPSB0aGlzLl9fem9vbS5pbnZlcnQoZy50b3VjaDBbMF0pO1xuICAgIGVsc2Uge1xuICAgICAgZy5lbmQoKTtcbiAgICAgIC8vIElmIHRoaXMgd2FzIGEgZGJsdGFwLCByZXJvdXRlIHRvIHRoZSAob3B0aW9uYWwpIGRibGNsaWNrLnpvb20gaGFuZGxlci5cbiAgICAgIGlmIChnLnRhcHMgPT09IDIpIHtcbiAgICAgICAgdmFyIHAgPSBzZWxlY3QodGhpcykub24oXCJkYmxjbGljay56b29tXCIpO1xuICAgICAgICBpZiAocCkgcC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHpvb20ud2hlZWxEZWx0YSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh3aGVlbERlbHRhID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHpvb20pIDogd2hlZWxEZWx0YTtcbiAgfTtcblxuICB6b29tLmZpbHRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChmaWx0ZXIgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCEhXyksIHpvb20pIDogZmlsdGVyO1xuICB9O1xuXG4gIHpvb20udG91Y2hhYmxlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRvdWNoYWJsZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoISFfKSwgem9vbSkgOiB0b3VjaGFibGU7XG4gIH07XG5cbiAgem9vbS5leHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZXh0ZW50ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChbWytfWzBdWzBdLCArX1swXVsxXV0sIFsrX1sxXVswXSwgK19bMV1bMV1dXSksIHpvb20pIDogZXh0ZW50O1xuICB9O1xuXG4gIHpvb20uc2NhbGVFeHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc2NhbGVFeHRlbnRbMF0gPSArX1swXSwgc2NhbGVFeHRlbnRbMV0gPSArX1sxXSwgem9vbSkgOiBbc2NhbGVFeHRlbnRbMF0sIHNjYWxlRXh0ZW50WzFdXTtcbiAgfTtcblxuICB6b29tLnRyYW5zbGF0ZUV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0cmFuc2xhdGVFeHRlbnRbMF1bMF0gPSArX1swXVswXSwgdHJhbnNsYXRlRXh0ZW50WzFdWzBdID0gK19bMV1bMF0sIHRyYW5zbGF0ZUV4dGVudFswXVsxXSA9ICtfWzBdWzFdLCB0cmFuc2xhdGVFeHRlbnRbMV1bMV0gPSArX1sxXVsxXSwgem9vbSkgOiBbW3RyYW5zbGF0ZUV4dGVudFswXVswXSwgdHJhbnNsYXRlRXh0ZW50WzBdWzFdXSwgW3RyYW5zbGF0ZUV4dGVudFsxXVswXSwgdHJhbnNsYXRlRXh0ZW50WzFdWzFdXV07XG4gIH07XG5cbiAgem9vbS5jb25zdHJhaW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY29uc3RyYWluID0gXywgem9vbSkgOiBjb25zdHJhaW47XG4gIH07XG5cbiAgem9vbS5kdXJhdGlvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChkdXJhdGlvbiA9ICtfLCB6b29tKSA6IGR1cmF0aW9uO1xuICB9O1xuXG4gIHpvb20uaW50ZXJwb2xhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaW50ZXJwb2xhdGUgPSBfLCB6b29tKSA6IGludGVycG9sYXRlO1xuICB9O1xuXG4gIHpvb20ub24gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdmFsdWUgPSBsaXN0ZW5lcnMub24uYXBwbHkobGlzdGVuZXJzLCBhcmd1bWVudHMpO1xuICAgIHJldHVybiB2YWx1ZSA9PT0gbGlzdGVuZXJzID8gem9vbSA6IHZhbHVlO1xuICB9O1xuXG4gIHpvb20uY2xpY2tEaXN0YW5jZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjbGlja0Rpc3RhbmNlMiA9IChfID0gK18pICogXywgem9vbSkgOiBNYXRoLnNxcnQoY2xpY2tEaXN0YW5jZTIpO1xuICB9O1xuXG4gIHJldHVybiB6b29tO1xufVxuIiwiZXhwb3J0IHt2ZXJzaW9ufSBmcm9tIFwiLi9kaXN0L3BhY2thZ2UuanNcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1hcnJheVwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWF4aXNcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1icnVzaFwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWNob3JkXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtY29sbGVjdGlvblwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWNvbG9yXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtY29udG91clwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWRpc3BhdGNoXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtZHJhZ1wiO1xuZXhwb3J0ICogZnJvbSBcImQzLWRzdlwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWVhc2VcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1mZXRjaFwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWZvcmNlXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtZm9ybWF0XCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtZ2VvXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtaGllcmFyY2h5XCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1wYXRoXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtcG9seWdvblwiO1xuZXhwb3J0ICogZnJvbSBcImQzLXF1YWR0cmVlXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtcmFuZG9tXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtc2NhbGVcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1zY2FsZS1jaHJvbWF0aWNcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1zaGFwZVwiO1xuZXhwb3J0ICogZnJvbSBcImQzLXRpbWVcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy10aW1lLWZvcm1hdFwiO1xuZXhwb3J0ICogZnJvbSBcImQzLXRpbWVyXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtdHJhbnNpdGlvblwiO1xuZXhwb3J0ICogZnJvbSBcImQzLXZvcm9ub2lcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy16b29tXCI7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSByZXN1bHRba10gPSBtb2Rba107XG4gICAgcmVzdWx0W1wiZGVmYXVsdFwiXSA9IG1vZDtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBkM18xID0gcmVxdWlyZShcImQzXCIpO1xudmFyIHJlYWN0XzEgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcInJlYWN0XCIpKTtcbnJlcXVpcmUoXCIuLi9zdHlsZXNoZWV0cy9zdHlsZS5zY3NzXCIpO1xudmFyIFRpbWVWaXp0c3hfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9UaW1lVml6dHN4XCIpKTtcbnZhciBWZXJ0Q29sVml6ID0gZnVuY3Rpb24gKHByb3BzKSB7XG4gICAgdmFyIHF1ZXJpZXMgPSBbXTtcbiAgICB2YXIgcmVzcG9uc2VzID0gW107XG4gICAgdmFyIGxvY2FsUXVlcnlTZWxlY3RlZCA9IFtdO1xuICAgIHZhciB0aW1lR3JhcGggPSByZWFjdF8xLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsKTtcbiAgICB2YXIgX2EgPSByZWFjdF8xLnVzZVN0YXRlKFtdKSwgc2VsZWN0ZWRRdWVyeSA9IF9hWzBdLCBzZXRTZWxlY3RlZFF1ZXJ5ID0gX2FbMV07XG4gICAgdmFyIF9iID0gcmVhY3RfMS51c2VTdGF0ZShmYWxzZSksIHJlbmRlckxpbmUgPSBfYlswXSwgc2V0UmVuZGVyTGluZSA9IF9iWzFdO1xuICAgIGZ1bmN0aW9uIGFkZE9yUmVtb3ZlKHF1ZXJ5SW4pIHtcbiAgICAgICAgaWYgKGxvY2FsUXVlcnlTZWxlY3RlZC5pbmNsdWRlcyhxdWVyeUluKSkge1xuICAgICAgICAgICAgbG9jYWxRdWVyeVNlbGVjdGVkID0gW107XG4gICAgICAgICAgICBzZXRTZWxlY3RlZFF1ZXJ5KFtdKTtcbiAgICAgICAgICAgIHNldFJlbmRlckxpbmUoZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbG9jYWxRdWVyeVNlbGVjdGVkID0gW107XG4gICAgICAgICAgICBsb2NhbFF1ZXJ5U2VsZWN0ZWQucHVzaChxdWVyeUluKTtcbiAgICAgICAgICAgIHNldFNlbGVjdGVkUXVlcnkoW10pO1xuICAgICAgICAgICAgc2V0U2VsZWN0ZWRRdWVyeShbcXVlcnlJbl0pO1xuICAgICAgICAgICAgc2V0UmVuZGVyTGluZSh0cnVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB2YXIgc3ZnUmVmID0gcmVhY3RfMS51c2VSZWYoKTtcbiAgICAvKlRoZSBtb3N0IGJhc2ljIFNWRyBmaWxlIGNvbnRhaW5zIHRoZSBmb2xsb3dpbmcgZm9ybWF0OlxuICAgXG4gICAgLS1TaXplIG9mIHRoZSB2aWV3cG9ydCAoVGhpbmsgb2YgdGhpcyBhcyB0aGUgaW1hZ2UgcmVzb2x1dGlvbilcbiAgICAtLUdyb3VwaW5nIGluc3RydWN0aW9ucyB2aWEgdGhlIGVsZW1lbnQgLS0gSG93IHNob3VsZCBlbGVtZW50cyBiZSBncm91cGVkP1xuICAgIC0tRHJhd2luZyBpbnN0cnVjdGlvbnMgdXNpbmcgdGhlIHNoYXBlcyBlbGVtZW50c1xuICAgIC0tU3R5bGUgc3BlY2lmaWNhdGlvbnMgZGVzY3JpYmluZyBob3cgZWFjaCBlbGVtZW50IHNob3VsZCBiZSBkcmF3bi4qL1xuICAgIC8vIHdpbGwgYmUgY2FsbGVkIGluaXRpYWxseSBhbmQgb24gZXZlcnkgZGF0YSBjaGFuZ2VzXG4gICAgcmVhY3RfMS51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICBzZXRSZW5kZXJMaW5lKGZhbHNlKTsgLy90aGVzZSBhcmUgbmVjZXNzYXJ5IHRvIGVmZmVjdGl2ZWx5IGJsYW5rIG91dCB0aGUgZ3JhcGggYW5kIGxpbmUgY2hhcnRzIHdoZW4gc3dpdGNoaW5nIGNhdGVnb3JpZXNcbiAgICAgICAgc2V0U2VsZWN0ZWRRdWVyeShbXSk7IC8vdGhpcyBpcyBuZWNlc3NhcnkgdG8ga2VlcCBzd2l0Y2hpbmcgY2F0ZWdvcmllcyBmcm9tIG1lc3NpbmcgdGhpbmdzIHVwXG4gICAgICAgIHZhciBfbG9vcF8xID0gZnVuY3Rpb24gKHF1ZXJ5KSB7XG4gICAgICAgICAgICB2YXIgdGltZVRvdCA9IDA7XG4gICAgICAgICAgICBxdWVyaWVzLnB1c2gocXVlcnkpO1xuICAgICAgICAgICAgcHJvcHMuZGF0YUNhdFtxdWVyeV0uZm9yRWFjaChmdW5jdGlvbiAodGltZSkge1xuICAgICAgICAgICAgICAgIHRpbWVUb3QgKz0gdGltZS50aW1pbmdbMV0gLyAxMDAwMDAwMDAwO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXNwb25zZXMucHVzaCh0aW1lVG90IC8gcHJvcHMuZGF0YUNhdFtxdWVyeV0ubGVuZ3RoKTtcbiAgICAgICAgfTtcbiAgICAgICAgZm9yICh2YXIgcXVlcnkgaW4gcHJvcHMuZGF0YUNhdCkge1xuICAgICAgICAgICAgX2xvb3BfMShxdWVyeSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHN2ZyA9IGQzXzEuc2VsZWN0KHN2Z1JlZi5jdXJyZW50KTtcbiAgICAgICAgLy91c2VkIGZvciBkeW5hbWljIHktYXhpc1xuICAgICAgICB2YXIgbWF4ID0gTWF0aC5tYXguYXBwbHkoTWF0aCwgcmVzcG9uc2VzKTtcbiAgICAgICAgdmFyIHVwcGVyID0gMS41ICogbWF4O1xuICAgICAgICB2YXIgY2hhcnREaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2hhcnRBcmVhJyk7IC8vZ3JhYiB0aGUgY2hhcnQgYXJlYSB0aGF0IHRoZSBncmFwaCBsaXZlcyBpblxuICAgICAgICB2YXIgbWFyZ2luID0geyB5aGVpZ2h0OiBjaGFydERpdi5jbGllbnRIZWlnaHQsIHh3aWR0aDogY2hhcnREaXYuY2xpZW50V2lkdGggfTsgLy9tYXJnaW5zIHJlcXVpcmVkIGZvciByZXNpemluZ1xuICAgICAgICBmdW5jdGlvbiByZWRyYXdCYXIoKSB7XG4gICAgICAgICAgICBtYXJnaW4ueWhlaWdodCA9IGNoYXJ0RGl2LmNsaWVudEhlaWdodDtcbiAgICAgICAgICAgIG1hcmdpbi54d2lkdGggPSBjaGFydERpdi5jbGllbnRXaWR0aDtcbiAgICAgICAgICAgIHhTY2FsZS5yYW5nZShbMCwgbWFyZ2luLnh3aWR0aF0pO1xuICAgICAgICAgICAgc3ZnXG4gICAgICAgICAgICAgICAgLnNlbGVjdCgnLnktYXhpcycpXG4gICAgICAgICAgICAgICAgLnN0eWxlKCd0cmFuc2Zvcm0nLCBcInRyYW5zbGF0ZVgoXCIgKyBtYXJnaW4ueHdpZHRoICsgXCJweClcIilcbiAgICAgICAgICAgICAgICAuY2FsbCh5QXhpcyk7XG4gICAgICAgICAgICB4QXhpcyA9IGQzXzEuYXhpc0JvdHRvbSh4U2NhbGUpLnRpY2tzKHJlc3BvbnNlcy5sZW5ndGggKyAxKTtcbiAgICAgICAgICAgIHN2Zy5zZWxlY3QoJy54LWF4aXMnKS5jYWxsKHhBeGlzKTtcbiAgICAgICAgICAgIHN2Z1xuICAgICAgICAgICAgICAgIC5zZWxlY3RBbGwoJy5iYXInKVxuICAgICAgICAgICAgICAgIC5hdHRyKCd4JywgZnVuY3Rpb24gKF92YWx1ZSwgaW5kZXgpIHsgcmV0dXJuIHhTY2FsZShpbmRleCk7IH0pXG4gICAgICAgICAgICAgICAgLmF0dHIoJ3dpZHRoJywgeFNjYWxlLmJhbmR3aWR0aCgpKTtcbiAgICAgICAgfVxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgcmVkcmF3QmFyKTtcbiAgICAgICAgLy8gc2NhbGVzXG4gICAgICAgIHZhciB4U2NhbGUgPSBkM18xLnNjYWxlQmFuZCgpXG4gICAgICAgICAgICAuZG9tYWluKHJlc3BvbnNlcy5tYXAoZnVuY3Rpb24gKF92YWx1ZSwgaW5kZXgpIHsgcmV0dXJuIGluZGV4OyB9KSkgLy94LWF4aXMgbGFiZWxlZCBoZXJlXG4gICAgICAgICAgICAucmFuZ2UoWzAsIG1hcmdpbi54d2lkdGhdKVxuICAgICAgICAgICAgLnBhZGRpbmcoMC41KTtcbiAgICAgICAgdmFyIHlTY2FsZSA9IGQzXzEuc2NhbGVMaW5lYXIoKVxuICAgICAgICAgICAgLmRvbWFpbihbMCwgdXBwZXJdKVxuICAgICAgICAgICAgLnJhbmdlKFszMDAsIDBdKTtcbiAgICAgICAgdmFyIGNvbG9yU2NhbGUgPSBkM18xLnNjYWxlTGluZWFyKClcbiAgICAgICAgICAgIC5kb21haW4oW3VwcGVyICogMC4yLCB1cHBlcl0pXG4gICAgICAgICAgICAucmFuZ2UoWydibHVlJywgJ3JlZCddKVxuICAgICAgICAgICAgLmNsYW1wKHRydWUpO1xuICAgICAgICB2YXIgZGVmcyA9IHN2Zy5hcHBlbmQoJ2RlZnMnKTtcbiAgICAgICAgLy9GaWx0ZXIgZm9yIHRoZSBvdXRzaWRlIGdsb3dcbiAgICAgICAgdmFyIGZpbHRlciA9IGRlZnMuYXBwZW5kKCdmaWx0ZXInKS5hdHRyKCdpZCcsICdnbG93Jyk7XG4gICAgICAgIGZpbHRlclxuICAgICAgICAgICAgLmFwcGVuZCgnZmVHYXVzc2lhbkJsdXInKVxuICAgICAgICAgICAgLmF0dHIoJ3N0ZERldmlhdGlvbicsICczLjUnKVxuICAgICAgICAgICAgLmF0dHIoJ3Jlc3VsdCcsICdjb2xvcmVkQmx1cicpO1xuICAgICAgICB2YXIgZmVNZXJnZSA9IGZpbHRlci5hcHBlbmQoJ2ZlTWVyZ2UnKTtcbiAgICAgICAgZmVNZXJnZS5hcHBlbmQoJ2ZlTWVyZ2VOb2RlJykuYXR0cignaW4nLCAnY29sb3JlZEJsdXInKTtcbiAgICAgICAgZmVNZXJnZS5hcHBlbmQoJ2ZlTWVyZ2VOb2RlJykuYXR0cignaW4nLCAnU291cmNlR3JhcGhpYycpO1xuICAgICAgICAvLyBjcmVhdGUgeC1heGlzXG4gICAgICAgIHZhciB4QXhpcyA9IGQzXzEuYXhpc0JvdHRvbSh4U2NhbGUpLnRpY2tzKHJlc3BvbnNlcy5sZW5ndGgpO1xuICAgICAgICBzdmdcbiAgICAgICAgICAgIC5zZWxlY3QoJy54LWF4aXMnKVxuICAgICAgICAgICAgLnN0eWxlKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlWSgzMDBweCknKVxuICAgICAgICAgICAgLmNhbGwoeEF4aXMpXG4gICAgICAgICAgICAuc3R5bGUoJ2ZpbHRlcicsICd1cmwoI2dsb3cpJyk7XG4gICAgICAgIC8vIGNyZWF0ZSB5LWF4aXNcbiAgICAgICAgLy9sb2NhdGlvbiBvZiBiYXJzLCB0aGUgaGlnaGVyIHRoZSBudW1iZXIsIHRoZSBoaWdoZXIgdGhlIHBvc2l0aW9uIG9uIHRoZSBncmFwaFxuICAgICAgICB2YXIgeUF4aXMgPSBkM18xLmF4aXNSaWdodCh5U2NhbGUpO1xuICAgICAgICBzdmdcbiAgICAgICAgICAgIC5zZWxlY3QoJy55LWF4aXMnKVxuICAgICAgICAgICAgLnN0eWxlKCd0cmFuc2Zvcm0nLCBcInRyYW5zbGF0ZVgoXCIgKyBtYXJnaW4ueHdpZHRoICsgXCJweClcIilcbiAgICAgICAgICAgIC5zdHlsZSgnZmlsdGVyJywgJ3VybCgjZ2xvdyknKVxuICAgICAgICAgICAgLmNhbGwoeUF4aXMpO1xuICAgICAgICBpZiAocmVzcG9uc2VzLmxlbmd0aCAhPT0gMCkge1xuICAgICAgICAgICAgc3ZnXG4gICAgICAgICAgICAgICAgLnNlbGVjdCgnLnktYXhpcycpXG4gICAgICAgICAgICAgICAgLmFwcGVuZCgndGV4dCcpXG4gICAgICAgICAgICAgICAgLmF0dHIoJ2NsYXNzJywgJ3lheGlzbGFiZWwnKVxuICAgICAgICAgICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCAncm90YXRlKDkwKScpXG4gICAgICAgICAgICAgICAgLmF0dHIoJ3knLCAyMClcbiAgICAgICAgICAgICAgICAuYXR0cignZHknLCAnLTNlbScpXG4gICAgICAgICAgICAgICAgLmF0dHIoJ3gnLCAnM2VtJylcbiAgICAgICAgICAgICAgICAuc3R5bGUoJ3RleHQtYW5jaG9yJywgJ3N0YXJ0JylcbiAgICAgICAgICAgICAgICAuc3R5bGUoJ2ZpbGwnLCAnd2hpdGUnKVxuICAgICAgICAgICAgICAgIC5hdHRyKCdmb250LXNpemUnLCAnMjBweCcpXG4gICAgICAgICAgICAgICAgLnRleHQoJ0F2Zy4gUmVzcG9uc2UgVGltZShzKScpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGRyYXcgdGhlIGJhcnNcbiAgICAgICAgc3ZnXG4gICAgICAgICAgICAuc2VsZWN0QWxsKCcuYmFyJylcbiAgICAgICAgICAgIC5kYXRhKHJlc3BvbnNlcylcbiAgICAgICAgICAgIC5qb2luKCdyZWN0JylcbiAgICAgICAgICAgIC5hdHRyKCdjbGFzcycsICdiYXInKVxuICAgICAgICAgICAgLnN0eWxlKCd0cmFuc2Zvcm0nLCAnc2NhbGUoMSwgLTEpJylcbiAgICAgICAgICAgIC5hdHRyKCd4JywgZnVuY3Rpb24gKF92YWx1ZSwgaW5kZXgpIHsgcmV0dXJuIHhTY2FsZShpbmRleCk7IH0pXG4gICAgICAgICAgICAuYXR0cigneScsIC0zMDApXG4gICAgICAgICAgICAuYXR0cignd2lkdGgnLCB4U2NhbGUuYmFuZHdpZHRoKCkpXG4gICAgICAgICAgICAub24oJ21vdXNlZW50ZXInLCBmdW5jdGlvbiAodmFsdWUsIGluZGV4KSB7XG4gICAgICAgICAgICBzdmdcbiAgICAgICAgICAgICAgICAuc2VsZWN0QWxsKCcudG9vbHRpcCcpXG4gICAgICAgICAgICAgICAgLmFwcGVuZCgnZGl2JylcbiAgICAgICAgICAgICAgICAuZGF0YShbdmFsdWVdKVxuICAgICAgICAgICAgICAgIC5qb2luKGZ1bmN0aW9uIChlbnRlcikgeyByZXR1cm4gZW50ZXIuYXBwZW5kKCd0ZXh0JykuYXR0cigneScsIHlTY2FsZSh2YWx1ZSkgLSA1MCk7IH0pXG4gICAgICAgICAgICAgICAgLmF0dHIoJ2NsYXNzJywgJ3Rvb2x0aXAnKVxuICAgICAgICAgICAgICAgIC50ZXh0KFwiXCIgKyBxdWVyaWVzW2luZGV4XSlcbiAgICAgICAgICAgICAgICAuYXR0cigneCcsIHhTY2FsZShpbmRleCkgKyB4U2NhbGUuYmFuZHdpZHRoKCkgLyAyKVxuICAgICAgICAgICAgICAgIC5hdHRyKCd0ZXh0LWFuY2hvcicsICdtaWRkbGUnKVxuICAgICAgICAgICAgICAgIC50cmFuc2l0aW9uKClcbiAgICAgICAgICAgICAgICAuYXR0cigneScsIHlTY2FsZSh2YWx1ZSkgLSA4MClcbiAgICAgICAgICAgICAgICAuc3R5bGUoJ29wYWNpdHknLCAxKTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5vbignbW91c2VsZWF2ZScsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHN2Zy5zZWxlY3QoJy50b29sdGlwJykucmVtb3ZlKCk7IH0pXG4gICAgICAgICAgICAub24oJ2NsaWNrJywgZnVuY3Rpb24gKF92YWx1ZSwgaW5kZXgpIHtcbiAgICAgICAgICAgIGFkZE9yUmVtb3ZlKFwiXCIgKyBxdWVyaWVzW2luZGV4XSk7XG4gICAgICAgIH0pXG4gICAgICAgICAgICAudHJhbnNpdGlvbigpXG4gICAgICAgICAgICAuYXR0cignZmlsbCcsIGNvbG9yU2NhbGUpXG4gICAgICAgICAgICAuYXR0cignaGVpZ2h0JywgZnVuY3Rpb24gKHZhbHVlKSB7IHJldHVybiAzNTAgLSB5U2NhbGUodmFsdWUpOyB9KTtcbiAgICB9LCBbcHJvcHMuZGF0YUNhdF0pO1xuICAgIGlmIChyZW5kZXJMaW5lID09PSB0cnVlKSB7XG4gICAgICAgIHRpbWVHcmFwaCA9IChyZWFjdF8xLmRlZmF1bHQuY3JlYXRlRWxlbWVudChUaW1lVml6dHN4XzEuZGVmYXVsdCwgeyBrZXk6ICdsaW5lR3JhcGgnLCB0aW1lRGF0YTogcHJvcHMuZGF0YUNhdCwgc2VsZWN0ZWRRdWVyaWVzOiBzZWxlY3RlZFF1ZXJ5IH0pKTtcbiAgICB9XG4gICAgLypSZWFjdCBmcmFnbWVudHMgbGV0IHlvdSBncm91cCBhIGxpc3Qgb2YgY2hpbGRyZW4gd2l0aG91dCBhZGRpbmcgZXh0cmEgbm9kZXMgdG8gdGhlIERPTVxuICAgICAgICAgICBiZWNhdXNlIGZyYWdtZW50cyBhcmUgbm90IHJlbmRlcmVkIHRvIHRoZSBET00uICovXG4gICAgcmV0dXJuIChyZWFjdF8xLmRlZmF1bHQuY3JlYXRlRWxlbWVudChyZWFjdF8xLmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsXG4gICAgICAgIHJlYWN0XzEuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIHsgcmVmOiBzdmdSZWYgfSxcbiAgICAgICAgICAgIHJlYWN0XzEuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZ1wiLCB7IGNsYXNzTmFtZTogXCJ4LWF4aXNcIiB9KSxcbiAgICAgICAgICAgIHJlYWN0XzEuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZ1wiLCB7IGNsYXNzTmFtZTogXCJ5LWF4aXNcIiB9KSksXG4gICAgICAgIHJlYWN0XzEuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIHRpbWVHcmFwaCkpKTtcbn07XG5leHBvcnRzLmRlZmF1bHQgPSBWZXJ0Q29sVml6O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iLCJmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZTsiLCJ2YXIgb2JqZWN0S2V5cyA9IHJlcXVpcmUoJ29iamVjdC1rZXlzJyk7XG52YXIgaXNBcmd1bWVudHMgPSByZXF1aXJlKCdpcy1hcmd1bWVudHMnKTtcbnZhciBpcyA9IHJlcXVpcmUoJ29iamVjdC1pcycpO1xudmFyIGlzUmVnZXggPSByZXF1aXJlKCdpcy1yZWdleCcpO1xudmFyIGZsYWdzID0gcmVxdWlyZSgncmVnZXhwLnByb3RvdHlwZS5mbGFncycpO1xudmFyIGlzRGF0ZSA9IHJlcXVpcmUoJ2lzLWRhdGUtb2JqZWN0Jyk7XG5cbnZhciBnZXRUaW1lID0gRGF0ZS5wcm90b3R5cGUuZ2V0VGltZTtcblxuZnVuY3Rpb24gZGVlcEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIG9wdGlvbnMpIHtcbiAgdmFyIG9wdHMgPSBvcHRpb25zIHx8IHt9O1xuXG4gIC8vIDcuMS4gQWxsIGlkZW50aWNhbCB2YWx1ZXMgYXJlIGVxdWl2YWxlbnQsIGFzIGRldGVybWluZWQgYnkgPT09LlxuICBpZiAob3B0cy5zdHJpY3QgPyBpcyhhY3R1YWwsIGV4cGVjdGVkKSA6IGFjdHVhbCA9PT0gZXhwZWN0ZWQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8vIDcuMy4gT3RoZXIgcGFpcnMgdGhhdCBkbyBub3QgYm90aCBwYXNzIHR5cGVvZiB2YWx1ZSA9PSAnb2JqZWN0JywgZXF1aXZhbGVuY2UgaXMgZGV0ZXJtaW5lZCBieSA9PS5cbiAgaWYgKCFhY3R1YWwgfHwgIWV4cGVjdGVkIHx8ICh0eXBlb2YgYWN0dWFsICE9PSAnb2JqZWN0JyAmJiB0eXBlb2YgZXhwZWN0ZWQgIT09ICdvYmplY3QnKSkge1xuICAgIHJldHVybiBvcHRzLnN0cmljdCA/IGlzKGFjdHVhbCwgZXhwZWN0ZWQpIDogYWN0dWFsID09IGV4cGVjdGVkO1xuICB9XG5cbiAgLypcbiAgICogNy40LiBGb3IgYWxsIG90aGVyIE9iamVjdCBwYWlycywgaW5jbHVkaW5nIEFycmF5IG9iamVjdHMsIGVxdWl2YWxlbmNlIGlzXG4gICAqIGRldGVybWluZWQgYnkgaGF2aW5nIHRoZSBzYW1lIG51bWJlciBvZiBvd25lZCBwcm9wZXJ0aWVzIChhcyB2ZXJpZmllZFxuICAgKiB3aXRoIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCksIHRoZSBzYW1lIHNldCBvZiBrZXlzXG4gICAqIChhbHRob3VnaCBub3QgbmVjZXNzYXJpbHkgdGhlIHNhbWUgb3JkZXIpLCBlcXVpdmFsZW50IHZhbHVlcyBmb3IgZXZlcnlcbiAgICogY29ycmVzcG9uZGluZyBrZXksIGFuZCBhbiBpZGVudGljYWwgJ3Byb3RvdHlwZScgcHJvcGVydHkuIE5vdGU6IHRoaXNcbiAgICogYWNjb3VudHMgZm9yIGJvdGggbmFtZWQgYW5kIGluZGV4ZWQgcHJvcGVydGllcyBvbiBBcnJheXMuXG4gICAqL1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgcmV0dXJuIG9iakVxdWl2KGFjdHVhbCwgZXhwZWN0ZWQsIG9wdHMpO1xufVxuXG5mdW5jdGlvbiBpc1VuZGVmaW5lZE9yTnVsbCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZDtcbn1cblxuZnVuY3Rpb24gaXNCdWZmZXIoeCkge1xuICBpZiAoIXggfHwgdHlwZW9mIHggIT09ICdvYmplY3QnIHx8IHR5cGVvZiB4Lmxlbmd0aCAhPT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgaWYgKHR5cGVvZiB4LmNvcHkgIT09ICdmdW5jdGlvbicgfHwgdHlwZW9mIHguc2xpY2UgIT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgaWYgKHgubGVuZ3RoID4gMCAmJiB0eXBlb2YgeFswXSAhPT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIG9iakVxdWl2KGEsIGIsIG9wdHMpIHtcbiAgLyogZXNsaW50IG1heC1zdGF0ZW1lbnRzOiBbMiwgNTBdICovXG4gIHZhciBpLCBrZXk7XG4gIGlmICh0eXBlb2YgYSAhPT0gdHlwZW9mIGIpIHsgcmV0dXJuIGZhbHNlOyB9XG4gIGlmIChpc1VuZGVmaW5lZE9yTnVsbChhKSB8fCBpc1VuZGVmaW5lZE9yTnVsbChiKSkgeyByZXR1cm4gZmFsc2U7IH1cblxuICAvLyBhbiBpZGVudGljYWwgJ3Byb3RvdHlwZScgcHJvcGVydHkuXG4gIGlmIChhLnByb3RvdHlwZSAhPT0gYi5wcm90b3R5cGUpIHsgcmV0dXJuIGZhbHNlOyB9XG5cbiAgaWYgKGlzQXJndW1lbnRzKGEpICE9PSBpc0FyZ3VtZW50cyhiKSkgeyByZXR1cm4gZmFsc2U7IH1cblxuICB2YXIgYUlzUmVnZXggPSBpc1JlZ2V4KGEpO1xuICB2YXIgYklzUmVnZXggPSBpc1JlZ2V4KGIpO1xuICBpZiAoYUlzUmVnZXggIT09IGJJc1JlZ2V4KSB7IHJldHVybiBmYWxzZTsgfVxuICBpZiAoYUlzUmVnZXggfHwgYklzUmVnZXgpIHtcbiAgICByZXR1cm4gYS5zb3VyY2UgPT09IGIuc291cmNlICYmIGZsYWdzKGEpID09PSBmbGFncyhiKTtcbiAgfVxuXG4gIGlmIChpc0RhdGUoYSkgJiYgaXNEYXRlKGIpKSB7XG4gICAgcmV0dXJuIGdldFRpbWUuY2FsbChhKSA9PT0gZ2V0VGltZS5jYWxsKGIpO1xuICB9XG5cbiAgdmFyIGFJc0J1ZmZlciA9IGlzQnVmZmVyKGEpO1xuICB2YXIgYklzQnVmZmVyID0gaXNCdWZmZXIoYik7XG4gIGlmIChhSXNCdWZmZXIgIT09IGJJc0J1ZmZlcikgeyByZXR1cm4gZmFsc2U7IH1cbiAgaWYgKGFJc0J1ZmZlciB8fCBiSXNCdWZmZXIpIHsgLy8gJiYgd291bGQgd29yayB0b28sIGJlY2F1c2UgYm90aCBhcmUgdHJ1ZSBvciBib3RoIGZhbHNlIGhlcmVcbiAgICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKSB7IHJldHVybiBmYWxzZTsgfVxuICAgIGZvciAoaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoYVtpXSAhPT0gYltpXSkgeyByZXR1cm4gZmFsc2U7IH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAodHlwZW9mIGEgIT09IHR5cGVvZiBiKSB7IHJldHVybiBmYWxzZTsgfVxuXG4gIHRyeSB7XG4gICAgdmFyIGthID0gb2JqZWN0S2V5cyhhKTtcbiAgICB2YXIga2IgPSBvYmplY3RLZXlzKGIpO1xuICB9IGNhdGNoIChlKSB7IC8vIGhhcHBlbnMgd2hlbiBvbmUgaXMgYSBzdHJpbmcgbGl0ZXJhbCBhbmQgdGhlIG90aGVyIGlzbid0XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIC8vIGhhdmluZyB0aGUgc2FtZSBudW1iZXIgb2Ygb3duZWQgcHJvcGVydGllcyAoa2V5cyBpbmNvcnBvcmF0ZXMgaGFzT3duUHJvcGVydHkpXG4gIGlmIChrYS5sZW5ndGggIT09IGtiLmxlbmd0aCkgeyByZXR1cm4gZmFsc2U7IH1cblxuICAvLyB0aGUgc2FtZSBzZXQgb2Yga2V5cyAoYWx0aG91Z2ggbm90IG5lY2Vzc2FyaWx5IHRoZSBzYW1lIG9yZGVyKSxcbiAga2Euc29ydCgpO1xuICBrYi5zb3J0KCk7XG4gIC8vIH5+fmNoZWFwIGtleSB0ZXN0XG4gIGZvciAoaSA9IGthLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgaWYgKGthW2ldICE9IGtiW2ldKSB7IHJldHVybiBmYWxzZTsgfVxuICB9XG4gIC8vIGVxdWl2YWxlbnQgdmFsdWVzIGZvciBldmVyeSBjb3JyZXNwb25kaW5nIGtleSwgYW5kIH5+fnBvc3NpYmx5IGV4cGVuc2l2ZSBkZWVwIHRlc3RcbiAgZm9yIChpID0ga2EubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICBrZXkgPSBrYVtpXTtcbiAgICBpZiAoIWRlZXBFcXVhbChhW2tleV0sIGJba2V5XSwgb3B0cykpIHsgcmV0dXJuIGZhbHNlOyB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkZWVwRXF1YWw7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEyLjBcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBoPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix5PW4/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzO24mJlN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpO1xudmFyIHo9bj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxhYT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2O24mJlN5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTtuJiZTeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpO24mJlN5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTt2YXIgQT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7XG5mdW5jdGlvbiBCKGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifXZhciBDPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxEPXt9O1xuZnVuY3Rpb24gRShhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1jfHxDfUUucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307RS5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKEIoODUpKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0UucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEYoKXt9Ri5wcm90b3R5cGU9RS5wcm90b3R5cGU7ZnVuY3Rpb24gRyhhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1jfHxDfXZhciBIPUcucHJvdG90eXBlPW5ldyBGO1xuSC5jb25zdHJ1Y3Rvcj1HO2goSCxFLnByb3RvdHlwZSk7SC5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgST17Y3VycmVudDpudWxsfSxKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixjKXt2YXIgZSxkPXt9LGc9bnVsbCxsPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGw9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUsuY2FsbChiLGUpJiYhTC5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zm9yKHZhciBrPUFycmF5KGYpLG09MDttPGY7bSsrKWtbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1rfWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2VdJiYoZFtlXT1mW2VdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmwscHJvcHM6ZCxfb3duZXI6Si5jdXJyZW50fX1cbmZ1bmN0aW9uIGJhKGEsYil7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBOKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1wfWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIE89L1xcLysvZyxQPVtdO2Z1bmN0aW9uIFEoYSxiLGMsZSl7aWYoUC5sZW5ndGgpe3ZhciBkPVAucG9wKCk7ZC5yZXN1bHQ9YTtkLmtleVByZWZpeD1iO2QuZnVuYz1jO2QuY29udGV4dD1lO2QuY291bnQ9MDtyZXR1cm4gZH1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzpjLGNvbnRleHQ6ZSxjb3VudDowfX1cbmZ1bmN0aW9uIFIoYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5QLmxlbmd0aCYmUC5wdXNoKGEpfVxuZnVuY3Rpb24gUyhhLGIsYyxlKXt2YXIgZD10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09ZHx8XCJib29sZWFuXCI9PT1kKWE9bnVsbDt2YXIgZz0hMTtpZihudWxsPT09YSlnPSEwO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6Zz0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgcDpjYXNlIHE6Zz0hMH19aWYoZylyZXR1cm4gYyhlLGEsXCJcIj09PWI/XCIuXCIrVChhLDApOmIpLDE7Zz0wO2I9XCJcIj09PWI/XCIuXCI6YitcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgbD0wO2w8YS5sZW5ndGg7bCsrKXtkPWFbbF07dmFyIGY9YitUKGQsbCk7Zys9UyhkLGYsYyxlKX1lbHNlIGlmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGE/Zj1udWxsOihmPUEmJmFbQV18fGFbXCJAQGl0ZXJhdG9yXCJdLGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGY/ZjpudWxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksbD1cbjA7IShkPWEubmV4dCgpKS5kb25lOylkPWQudmFsdWUsZj1iK1QoZCxsKyspLGcrPVMoZCxmLGMsZSk7ZWxzZSBpZihcIm9iamVjdFwiPT09ZCl0aHJvdyBjPVwiXCIrYSxFcnJvcihCKDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1jP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmMsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFUoYSxiLGMpe3JldHVybiBudWxsPT1hPzA6UyhhLFwiXCIsYixjKX1mdW5jdGlvbiBUKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBjYShhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBkYShhLGIsYyl7dmFyIGU9YS5yZXN1bHQsZD1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9WKGEsZSxjLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE4oYSkmJihhPWJhKGEsZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIikrYykpLGUucHVzaChhKSl9ZnVuY3Rpb24gVihhLGIsYyxlLGQpe3ZhciBnPVwiXCI7bnVsbCE9YyYmKGc9KFwiXCIrYykucmVwbGFjZShPLFwiJCYvXCIpK1wiL1wiKTtiPVEoYixnLGUsZCk7VShhLGRhLGIpO1IoYil9ZnVuY3Rpb24gVygpe3ZhciBhPUkuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcihCKDMyMSkpO3JldHVybiBhfVxudmFyIFg9e0NoaWxkcmVuOnttYXA6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W107VihhLGUsbnVsbCxiLGMpO3JldHVybiBlfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO2I9UShudWxsLG51bGwsYixjKTtVKGEsY2EsYik7UihiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIFUoYSxmdW5jdGlvbigpe3JldHVybiBudWxsfSxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtWKGEsYixudWxsLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7aWYoIU4oYSkpdGhyb3cgRXJyb3IoQigxNDMpKTtyZXR1cm4gYX19LGNyZWF0ZVJlZjpmdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fSxDb21wb25lbnQ6RSxQdXJlQ29tcG9uZW50OkcsY3JlYXRlQ29udGV4dDpmdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOncsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsXG5fY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX0sZm9yd2FyZFJlZjpmdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6eCxyZW5kZXI6YX19LGxhenk6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOmFhLF9jdG9yOmEsX3N0YXR1czotMSxfcmVzdWx0Om51bGx9fSxtZW1vOmZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOnosdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fSx1c2VDYWxsYmFjazpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlQ2FsbGJhY2soYSxiKX0sdXNlQ29udGV4dDpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlQ29udGV4dChhLGIpfSx1c2VFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUVmZmVjdChhLGIpfSx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsXG5iLGMpe3JldHVybiBXKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9LHVzZURlYnVnVmFsdWU6ZnVuY3Rpb24oKXt9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlTGF5b3V0RWZmZWN0KGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZU1lbW8oYSxiKX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIFcoKS51c2VSZWR1Y2VyKGEsYixjKX0sdXNlUmVmOmZ1bmN0aW9uKGEpe3JldHVybiBXKCkudXNlUmVmKGEpfSx1c2VTdGF0ZTpmdW5jdGlvbihhKXtyZXR1cm4gVygpLnVzZVN0YXRlKGEpfSxGcmFnbWVudDpyLFByb2ZpbGVyOnUsU3RyaWN0TW9kZTp0LFN1c3BlbnNlOnksY3JlYXRlRWxlbWVudDpNLGNsb25lRWxlbWVudDpmdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoQigyNjcsYSkpO3ZhciBlPWgoe30sYS5wcm9wcyksZD1hLmtleSxnPWEucmVmLGw9YS5fb3duZXI7XG5pZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGc9Yi5yZWYsbD1KLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZD1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGY9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoayBpbiBiKUsuY2FsbChiLGspJiYhTC5oYXNPd25Qcm9wZXJ0eShrKSYmKGVba109dm9pZCAwPT09YltrXSYmdm9pZCAwIT09Zj9mW2tdOmJba10pfXZhciBrPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ayllLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGspe2Y9QXJyYXkoayk7Zm9yKHZhciBtPTA7bTxrO20rKylmW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49Zn1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6ZCxyZWY6Zyxwcm9wczplLF9vd25lcjpsfX0sY3JlYXRlRmFjdG9yeTpmdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn0saXNWYWxpZEVsZW1lbnQ6Tix2ZXJzaW9uOlwiMTYuMTIuMFwiLFxuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6SSxSZWFjdEN1cnJlbnRCYXRjaENvbmZpZzp7c3VzcGVuc2U6bnVsbH0sUmVhY3RDdXJyZW50T3duZXI6SixJc1NvbWVSZW5kZXJlckFjdGluZzp7Y3VycmVudDohMX0sYXNzaWduOmh9fSxZPXtkZWZhdWx0Olh9LFo9WSYmWHx8WTttb2R1bGUuZXhwb3J0cz1aLmRlZmF1bHR8fFo7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEyLjBcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxxPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gdShhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1pZighYWEpdGhyb3cgRXJyb3IodSgyMjcpKTt2YXIgYmE9bnVsbCxjYT17fTtcbmZ1bmN0aW9uIGRhKCl7aWYoYmEpZm9yKHZhciBhIGluIGNhKXt2YXIgYj1jYVthXSxjPWJhLmluZGV4T2YoYSk7aWYoISgtMTxjKSl0aHJvdyBFcnJvcih1KDk2LGEpKTtpZighZWFbY10pe2lmKCFiLmV4dHJhY3RFdmVudHMpdGhyb3cgRXJyb3IodSg5NyxhKSk7ZWFbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtpZihmYS5oYXNPd25Qcm9wZXJ0eShoKSl0aHJvdyBFcnJvcih1KDk5LGgpKTtmYVtoXT1mO3ZhciBrPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYoayl7Zm9yKGUgaW4gaylrLmhhc093blByb3BlcnR5KGUpJiZoYShrW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8oaGEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtpZighZSl0aHJvdyBFcnJvcih1KDk4LGQsYSkpO319fX1cbmZ1bmN0aW9uIGhhKGEsYixjKXtpZihpYVthXSl0aHJvdyBFcnJvcih1KDEwMCxhKSk7aWFbYV09YjtqYVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBlYT1bXSxmYT17fSxpYT17fSxqYT17fTtmdW5jdGlvbiBrYShhLGIsYyxkLGUsZixnLGgsayl7dmFyIGw9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbCl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX12YXIgbGE9ITEsbWE9bnVsbCxuYT0hMSxvYT1udWxsLHBhPXtvbkVycm9yOmZ1bmN0aW9uKGEpe2xhPSEwO21hPWF9fTtmdW5jdGlvbiBxYShhLGIsYyxkLGUsZixnLGgsayl7bGE9ITE7bWE9bnVsbDtrYS5hcHBseShwYSxhcmd1bWVudHMpfVxuZnVuY3Rpb24gcmEoYSxiLGMsZCxlLGYsZyxoLGspe3FhLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihsYSl7aWYobGEpe3ZhciBsPW1hO2xhPSExO21hPW51bGx9ZWxzZSB0aHJvdyBFcnJvcih1KDE5OCkpO25hfHwobmE9ITAsb2E9bCl9fXZhciBzYT1udWxsLHVhPW51bGwsdmE9bnVsbDtmdW5jdGlvbiB3YShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9dmEoYyk7cmEoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1mdW5jdGlvbiB4YShhLGIpe2lmKG51bGw9PWIpdGhyb3cgRXJyb3IodSgzMCkpO2lmKG51bGw9PWEpcmV0dXJuIGI7aWYoQXJyYXkuaXNBcnJheShhKSl7aWYoQXJyYXkuaXNBcnJheShiKSlyZXR1cm4gYS5wdXNoLmFwcGx5KGEsYiksYTthLnB1c2goYik7cmV0dXJuIGF9cmV0dXJuIEFycmF5LmlzQXJyYXkoYik/W2FdLmNvbmNhdChiKTpbYSxiXX1cbmZ1bmN0aW9uIHlhKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciB6YT1udWxsO2Z1bmN0aW9uIEFhKGEpe2lmKGEpe3ZhciBiPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGM9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShiKSlmb3IodmFyIGQ9MDtkPGIubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2QrKyl3YShhLGJbZF0sY1tkXSk7ZWxzZSBiJiZ3YShhLGIsYyk7YS5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbDthLl9kaXNwYXRjaEluc3RhbmNlcz1udWxsO2EuaXNQZXJzaXN0ZW50KCl8fGEuY29uc3RydWN0b3IucmVsZWFzZShhKX19ZnVuY3Rpb24gQmEoYSl7bnVsbCE9PWEmJih6YT14YSh6YSxhKSk7YT16YTt6YT1udWxsO2lmKGEpe3lhKGEsQWEpO2lmKHphKXRocm93IEVycm9yKHUoOTUpKTtpZihuYSl0aHJvdyBhPW9hLG5hPSExLG9hPW51bGwsYTt9fVxudmFyIENhPXtpbmplY3RFdmVudFBsdWdpbk9yZGVyOmZ1bmN0aW9uKGEpe2lmKGJhKXRocm93IEVycm9yKHUoMTAxKSk7YmE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYSk7ZGEoKX0saW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lOmZ1bmN0aW9uKGEpe3ZhciBiPSExLGM7Zm9yKGMgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD1hW2NdO2lmKCFjYS5oYXNPd25Qcm9wZXJ0eShjKXx8Y2FbY10hPT1kKXtpZihjYVtjXSl0aHJvdyBFcnJvcih1KDEwMixjKSk7Y2FbY109ZDtiPSEwfX1iJiZkYSgpfX07XG5mdW5jdGlvbiBEYShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPXNhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2lmKGMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjKXRocm93IEVycm9yKHUoMjMxLGIsdHlwZW9mIGMpKTtcbnJldHVybiBjfXZhciBFYT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtFYS5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudERpc3BhdGNoZXJcIil8fChFYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyPXtjdXJyZW50Om51bGx9KTtFYS5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnXCIpfHwoRWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc9e3N1c3BlbnNlOm51bGx9KTtcbnZhciBGYT0vXiguKilbXFxcXFxcL10vLHc9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixHYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLEhhPXc/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixJYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxKYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxLYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxMYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxNYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLE5hPXc/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxPYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixQYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxRYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOlxuNjAxMjAsUmE9dz9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxTYT13P1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2O3cmJlN5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTt3JiZTeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpO3cmJlN5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTt2YXIgVGE9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIFVhKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1UYSYmYVtUYV18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1cbmZ1bmN0aW9uIFZhKGEpe2lmKC0xPT09YS5fc3RhdHVzKXthLl9zdGF0dXM9MDt2YXIgYj1hLl9jdG9yO2I9YigpO2EuX3Jlc3VsdD1iO2IudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSl9fVxuZnVuY3Rpb24gV2EoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBJYTpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSBIYTpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgS2E6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgSmE6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBQYTpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSBRYTpyZXR1cm5cIlN1c3BlbnNlTGlzdFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBNYTpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIExhOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgT2E6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcblwiRm9yd2FyZFJlZlwiKTtjYXNlIFJhOnJldHVybiBXYShhLnR5cGUpO2Nhc2UgU2E6aWYoYT0xPT09YS5fc3RhdHVzP2EuX3Jlc3VsdDpudWxsKXJldHVybiBXYShhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBYYShhKXt2YXIgYj1cIlwiO2Rve2E6c3dpdGNoKGEudGFnKXtjYXNlIDM6Y2FzZSA0OmNhc2UgNjpjYXNlIDc6Y2FzZSAxMDpjYXNlIDk6dmFyIGM9XCJcIjticmVhayBhO2RlZmF1bHQ6dmFyIGQ9YS5fZGVidWdPd25lcixlPWEuX2RlYnVnU291cmNlLGY9V2EoYS50eXBlKTtjPW51bGw7ZCYmKGM9V2EoZC50eXBlKSk7ZD1mO2Y9XCJcIjtlP2Y9XCIgKGF0IFwiK2UuZmlsZU5hbWUucmVwbGFjZShGYSxcIlwiKStcIjpcIitlLmxpbmVOdW1iZXIrXCIpXCI6YyYmKGY9XCIgKGNyZWF0ZWQgYnkgXCIrYytcIilcIik7Yz1cIlxcbiAgICBpbiBcIisoZHx8XCJVbmtub3duXCIpK2Z9Yis9YzthPWEucmV0dXJufXdoaWxlKGEpO3JldHVybiBifVxudmFyIFlhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSxaYT1udWxsLCRhPW51bGwsYWI9bnVsbDtmdW5jdGlvbiBiYihhKXtpZihhPXVhKGEpKXtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgWmEpdGhyb3cgRXJyb3IodSgyODApKTt2YXIgYj1zYShhLnN0YXRlTm9kZSk7WmEoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX1mdW5jdGlvbiBjYihhKXskYT9hYj9hYi5wdXNoKGEpOmFiPVthXTokYT1hfWZ1bmN0aW9uIGRiKCl7aWYoJGEpe3ZhciBhPSRhLGI9YWI7YWI9JGE9bnVsbDtiYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspYmIoYlthXSl9fWZ1bmN0aW9uIGViKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gZmIoYSxiLGMsZCl7cmV0dXJuIGEoYixjLGQpfWZ1bmN0aW9uIGdiKCl7fVxudmFyIGhiPWViLGliPSExLGpiPSExO2Z1bmN0aW9uIGtiKCl7aWYobnVsbCE9PSRhfHxudWxsIT09YWIpZ2IoKSxkYigpfW5ldyBNYXA7dmFyIGxiPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxtYj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LG5iPXt9LG9iPXt9O1xuZnVuY3Rpb24gcGIoYSl7aWYobWIuY2FsbChvYixhKSlyZXR1cm4hMDtpZihtYi5jYWxsKG5iLGEpKXJldHVybiExO2lmKGxiLnRlc3QoYSkpcmV0dXJuIG9iW2FdPSEwO25iW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIHFiKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gcmIoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8cWIoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiBCKGEsYixjLGQsZSxmKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zn12YXIgRD17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDAsITEsYSxudWxsLCExKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtEW2JdPW5ldyBCKGIsMSwhMSxhWzFdLG51bGwsITEpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDIsITEsYSxudWxsLCExKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITAsYSxudWxsLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDQsITEsYSxudWxsLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNiwhMSxhLG51bGwsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTt2YXIgc2I9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiB0YihhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShzYixcbnRiKTtEW2JdPW5ldyBCKGIsMSwhMSxhLG51bGwsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uoc2IsdGIpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uoc2IsdGIpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbkQueGxpbmtIcmVmPW5ldyBCKFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCl9KTtmdW5jdGlvbiB1YihhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiB2YihhLGIsYyxkKXt2YXIgZT1ELmhhc093blByb3BlcnR5KGIpP0RbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChyYihiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/cGIoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbmZ1bmN0aW9uIHdiKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiB4YihhKXt2YXIgYj13YihhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24geWIoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPXhiKGEpKX1mdW5jdGlvbiB6YihhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9d2IoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiBBYihhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiBCYihhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz11YihudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIENiKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmdmIoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIEViKGEsYil7Q2IoYSxiKTt2YXIgYz11YihiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9GYihhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZGYihhLGIudHlwZSx1YihiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEdiKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIEZiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX1mdW5jdGlvbiBIYihhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1mdW5jdGlvbiBJYihhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPUhiKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpiKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIit1YihjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gS2IoYSxiKXtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXRocm93IEVycm9yKHUoOTEpKTtyZXR1cm4gbih7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBMYihhLGIpe3ZhciBjPWIudmFsdWU7aWYobnVsbD09Yyl7Yz1iLmRlZmF1bHRWYWx1ZTtiPWIuY2hpbGRyZW47aWYobnVsbCE9Yil7aWYobnVsbCE9Yyl0aHJvdyBFcnJvcih1KDkyKSk7aWYoQXJyYXkuaXNBcnJheShiKSl7aWYoISgxPj1iLmxlbmd0aCkpdGhyb3cgRXJyb3IodSg5MykpO2I9YlswXX1jPWJ9bnVsbD09YyYmKGM9XCJcIil9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6dWIoYyl9fVxuZnVuY3Rpb24gTWIoYSxiKXt2YXIgYz11YihiLnZhbHVlKSxkPXViKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gTmIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX12YXIgT2I9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gUGIoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBRYihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/UGIoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgUmIsU2I9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09T2Iuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7UmI9UmJ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7UmIuaW5uZXJIVE1MPVwiPHN2Zz5cIitiLnZhbHVlT2YoKS50b1N0cmluZygpK1wiPC9zdmc+XCI7Zm9yKGI9UmIuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gVGIoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1mdW5jdGlvbiBVYihhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBWYj17YW5pbWF0aW9uZW5kOlViKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOlViKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6VWIoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6VWIoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxXYj17fSxYYj17fTtcbllhJiYoWGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgVmIuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgVmIuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgVmIuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgVmIudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBZYihhKXtpZihXYlthXSlyZXR1cm4gV2JbYV07aWYoIVZiW2FdKXJldHVybiBhO3ZhciBiPVZiW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFhiKXJldHVybiBXYlthXT1iW2NdO3JldHVybiBhfXZhciBaYj1ZYihcImFuaW1hdGlvbmVuZFwiKSwkYj1ZYihcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxhYz1ZYihcImFuaW1hdGlvbnN0YXJ0XCIpLGJjPVliKFwidHJhbnNpdGlvbmVuZFwiKSxjYz1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiBlYyhhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZWZmZWN0VGFnJjEwMjYpJiYoYz1iLnJldHVybiksYT1iLnJldHVybjt3aGlsZShhKX1yZXR1cm4gMz09PWIudGFnP2M6bnVsbH1mdW5jdGlvbiBmYyhhKXtpZigxMz09PWEudGFnKXt2YXIgYj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWImJihhPWEuYWx0ZXJuYXRlLG51bGwhPT1hJiYoYj1hLm1lbW9pemVkU3RhdGUpKTtpZihudWxsIT09YilyZXR1cm4gYi5kZWh5ZHJhdGVkfXJldHVybiBudWxsfWZ1bmN0aW9uIGdjKGEpe2lmKGVjKGEpIT09YSl0aHJvdyBFcnJvcih1KDE4OCkpO31cbmZ1bmN0aW9uIGhjKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXtiPWVjKGEpO2lmKG51bGw9PT1iKXRocm93IEVycm9yKHUoMTg4KSk7cmV0dXJuIGIhPT1hP251bGw6YX1mb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpYnJlYWs7dmFyIGY9ZS5hbHRlcm5hdGU7aWYobnVsbD09PWYpe2Q9ZS5yZXR1cm47aWYobnVsbCE9PWQpe2M9ZDtjb250aW51ZX1icmVha31pZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKGY9ZS5jaGlsZDtmOyl7aWYoZj09PWMpcmV0dXJuIGdjKGUpLGE7aWYoZj09PWQpcmV0dXJuIGdjKGUpLGI7Zj1mLnNpYmxpbmd9dGhyb3cgRXJyb3IodSgxODgpKTt9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zm9yKHZhciBnPSExLGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09XG5jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31pZighZyl0aHJvdyBFcnJvcih1KDE4OSkpO319aWYoYy5hbHRlcm5hdGUhPT1kKXRocm93IEVycm9yKHUoMTkwKSk7fWlmKDMhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDE4OCkpO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gaWMoYSl7YT1oYyhhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbnZhciBqYyxrYyxsYyxtYz0hMSxuYz1bXSxvYz1udWxsLHBjPW51bGwscWM9bnVsbCxyYz1uZXcgTWFwLHNjPW5ldyBNYXAsdGM9W10sdWM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjbG9zZSBjYW5jZWwgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKSx2Yz1cImZvY3VzIGJsdXIgZHJhZ2VudGVyIGRyYWdsZWF2ZSBtb3VzZW92ZXIgbW91c2VvdXQgcG9pbnRlcm92ZXIgcG9pbnRlcm91dCBnb3Rwb2ludGVyY2FwdHVyZSBsb3N0cG9pbnRlcmNhcHR1cmVcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiB3YyhhKXt2YXIgYj14YyhhKTt1Yy5mb3JFYWNoKGZ1bmN0aW9uKGMpe3ljKGMsYSxiKX0pO3ZjLmZvckVhY2goZnVuY3Rpb24oYyl7eWMoYyxhLGIpfSl9ZnVuY3Rpb24gemMoYSxiLGMsZCl7cmV0dXJue2Jsb2NrZWRPbjphLHRvcExldmVsVHlwZTpiLGV2ZW50U3lzdGVtRmxhZ3M6Y3wzMixuYXRpdmVFdmVudDpkfX1mdW5jdGlvbiBBYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOm9jPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpwYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjpxYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6cmMuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6c2MuZGVsZXRlKGIucG9pbnRlcklkKX19XG5mdW5jdGlvbiBCYyhhLGIsYyxkLGUpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZSlyZXR1cm4gYT16YyhiLGMsZCxlKSxudWxsIT09YiYmKGI9Q2MoYiksbnVsbCE9PWImJmtjKGIpKSxhO2EuZXZlbnRTeXN0ZW1GbGFnc3w9ZDtyZXR1cm4gYX1mdW5jdGlvbiBEYyhhLGIsYyxkKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzXCI6cmV0dXJuIG9jPUJjKG9jLGEsYixjLGQpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gcGM9QmMocGMsYSxiLGMsZCksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBxYz1CYyhxYyxhLGIsYyxkKSwhMDtjYXNlIFwicG9pbnRlcm92ZXJcIjp2YXIgZT1kLnBvaW50ZXJJZDtyYy5zZXQoZSxCYyhyYy5nZXQoZSl8fG51bGwsYSxiLGMsZCkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBlPWQucG9pbnRlcklkLHNjLnNldChlLEJjKHNjLmdldChlKXx8bnVsbCxhLGIsYyxkKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiBFYyhhKXt2YXIgYj1GYyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPWVjKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPWZjKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO3EudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KGEucHJpb3JpdHksZnVuY3Rpb24oKXtsYyhjKX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuaHlkcmF0ZSl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9ZnVuY3Rpb24gR2MoYSl7aWYobnVsbCE9PWEuYmxvY2tlZE9uKXJldHVybiExO3ZhciBiPUhjKGEudG9wTGV2ZWxUeXBlLGEuZXZlbnRTeXN0ZW1GbGFncyxhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09Yil7dmFyIGM9Q2MoYik7bnVsbCE9PWMmJmtjKGMpO2EuYmxvY2tlZE9uPWI7cmV0dXJuITF9cmV0dXJuITB9XG5mdW5jdGlvbiBJYyhhLGIsYyl7R2MoYSkmJmMuZGVsZXRlKGIpfWZ1bmN0aW9uIEpjKCl7Zm9yKG1jPSExOzA8bmMubGVuZ3RoOyl7dmFyIGE9bmNbMF07aWYobnVsbCE9PWEuYmxvY2tlZE9uKXthPUNjKGEuYmxvY2tlZE9uKTtudWxsIT09YSYmamMoYSk7YnJlYWt9dmFyIGI9SGMoYS50b3BMZXZlbFR5cGUsYS5ldmVudFN5c3RlbUZsYWdzLGEubmF0aXZlRXZlbnQpO251bGwhPT1iP2EuYmxvY2tlZE9uPWI6bmMuc2hpZnQoKX1udWxsIT09b2MmJkdjKG9jKSYmKG9jPW51bGwpO251bGwhPT1wYyYmR2MocGMpJiYocGM9bnVsbCk7bnVsbCE9PXFjJiZHYyhxYykmJihxYz1udWxsKTtyYy5mb3JFYWNoKEljKTtzYy5mb3JFYWNoKEljKX1mdW5jdGlvbiBLYyhhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsbWN8fChtYz0hMCxxLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2socS51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxKYykpKX1cbmZ1bmN0aW9uIExjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIEtjKGIsYSl9aWYoMDxuYy5sZW5ndGgpe0tjKG5jWzBdLGEpO2Zvcih2YXIgYz0xO2M8bmMubGVuZ3RoO2MrKyl7dmFyIGQ9bmNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1vYyYmS2Mob2MsYSk7bnVsbCE9PXBjJiZLYyhwYyxhKTtudWxsIT09cWMmJktjKHFjLGEpO3JjLmZvckVhY2goYik7c2MuZm9yRWFjaChiKTtmb3IoYz0wO2M8dGMubGVuZ3RoO2MrKylkPXRjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDx0Yy5sZW5ndGgmJihjPXRjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KUVjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmdGMuc2hpZnQoKX1cbmZ1bmN0aW9uIE1jKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBOYyhhKXtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfWZ1bmN0aW9uIE9jKGEsYixjKXtpZihiPURhKGEsYy5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lc1tiXSkpYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9eGEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9eGEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSl9XG5mdW5jdGlvbiBQYyhhKXtpZihhJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzKXtmb3IodmFyIGI9YS5fdGFyZ2V0SW5zdCxjPVtdO2I7KWMucHVzaChiKSxiPU5jKGIpO2ZvcihiPWMubGVuZ3RoOzA8Yi0tOylPYyhjW2JdLFwiY2FwdHVyZWRcIixhKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKU9jKGNbYl0sXCJidWJibGVkXCIsYSl9fWZ1bmN0aW9uIFFjKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPURhKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz14YShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz14YShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gUmMoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZRYyhhLl90YXJnZXRJbnN0LG51bGwsYSl9XG5mdW5jdGlvbiBTYyhhKXt5YShhLFBjKX1mdW5jdGlvbiBUYygpe3JldHVybiEwfWZ1bmN0aW9uIFVjKCl7cmV0dXJuITF9ZnVuY3Rpb24gRShhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/VGM6VWM7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1VYztyZXR1cm4gdGhpc31cbm4oRS5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1UYyl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1UYyl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1UY30saXNQZXJzaXN0ZW50OlVjLGRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxcbmI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7dGhpcy5uYXRpdmVFdmVudD10aGlzLl90YXJnZXRJbnN0PXRoaXMuZGlzcGF0Y2hDb25maWc9bnVsbDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMuaXNEZWZhdWx0UHJldmVudGVkPVVjO3RoaXMuX2Rpc3BhdGNoSW5zdGFuY2VzPXRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGx9fSk7RS5JbnRlcmZhY2U9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG5FLmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtuKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1uKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO1ZjKGMpO3JldHVybiBjfTtWYyhFKTtmdW5jdGlvbiBXYyhhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1cbmZ1bmN0aW9uIFhjKGEpe2lmKCEoYSBpbnN0YW5jZW9mIHRoaXMpKXRocm93IEVycm9yKHUoMjc5KSk7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfWZ1bmN0aW9uIFZjKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPVdjO2EucmVsZWFzZT1YY312YXIgWWM9RS5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLFpjPUUuZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksJGM9RS5leHRlbmQoe3ZpZXc6bnVsbCxkZXRhaWw6bnVsbH0pLGFkPSRjLmV4dGVuZCh7cmVsYXRlZFRhcmdldDpudWxsfSk7XG5mdW5jdGlvbiBiZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBjZD17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sZGQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LGVkPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBnZChhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPWVkW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gaGQoKXtyZXR1cm4gZ2R9XG52YXIgaWQ9JGMuZXh0ZW5kKHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPWNkW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPWJkKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9kZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6aGQsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP2JkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/YmQoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxqZD0wLGtkPTAsbGQ9ITEsbWQ9ITEsbmQ9JGMuZXh0ZW5kKHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOmhkLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluIGEpcmV0dXJuIGEubW92ZW1lbnRYO3ZhciBiPWpkO2pkPWEuc2NyZWVuWDtyZXR1cm4gbGQ/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblgtXG5iOjA6KGxkPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO3ZhciBiPWtkO2tkPWEuc2NyZWVuWTtyZXR1cm4gbWQ/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblktYjowOihtZD0hMCwwKX19KSxvZD1uZC5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0YW5nZW50aWFsUHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwsdHdpc3Q6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSkscGQ9bmQuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHFkPSRjLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOmhkfSkscmQ9RS5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLFxuZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxzZD1uZC5leHRlbmQoe2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpbiBhPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSksdGQ9W1tcImJsdXJcIixcImJsdXJcIiwwXSxbXCJjYW5jZWxcIixcImNhbmNlbFwiLDBdLFtcImNsaWNrXCIsXCJjbGlja1wiLDBdLFtcImNsb3NlXCIsXCJjbG9zZVwiLDBdLFtcImNvbnRleHRtZW51XCIsXCJjb250ZXh0TWVudVwiLDBdLFtcImNvcHlcIixcImNvcHlcIiwwXSxbXCJjdXRcIixcImN1dFwiLDBdLFtcImF1eGNsaWNrXCIsXCJhdXhDbGlja1wiLDBdLFtcImRibGNsaWNrXCIsXCJkb3VibGVDbGlja1wiLDBdLFtcImRyYWdlbmRcIixcImRyYWdFbmRcIixcbjBdLFtcImRyYWdzdGFydFwiLFwiZHJhZ1N0YXJ0XCIsMF0sW1wiZHJvcFwiLFwiZHJvcFwiLDBdLFtcImZvY3VzXCIsXCJmb2N1c1wiLDBdLFtcImlucHV0XCIsXCJpbnB1dFwiLDBdLFtcImludmFsaWRcIixcImludmFsaWRcIiwwXSxbXCJrZXlkb3duXCIsXCJrZXlEb3duXCIsMF0sW1wia2V5cHJlc3NcIixcImtleVByZXNzXCIsMF0sW1wia2V5dXBcIixcImtleVVwXCIsMF0sW1wibW91c2Vkb3duXCIsXCJtb3VzZURvd25cIiwwXSxbXCJtb3VzZXVwXCIsXCJtb3VzZVVwXCIsMF0sW1wicGFzdGVcIixcInBhc3RlXCIsMF0sW1wicGF1c2VcIixcInBhdXNlXCIsMF0sW1wicGxheVwiLFwicGxheVwiLDBdLFtcInBvaW50ZXJjYW5jZWxcIixcInBvaW50ZXJDYW5jZWxcIiwwXSxbXCJwb2ludGVyZG93blwiLFwicG9pbnRlckRvd25cIiwwXSxbXCJwb2ludGVydXBcIixcInBvaW50ZXJVcFwiLDBdLFtcInJhdGVjaGFuZ2VcIixcInJhdGVDaGFuZ2VcIiwwXSxbXCJyZXNldFwiLFwicmVzZXRcIiwwXSxbXCJzZWVrZWRcIixcInNlZWtlZFwiLDBdLFtcInN1Ym1pdFwiLFwic3VibWl0XCIsMF0sW1widG91Y2hjYW5jZWxcIixcInRvdWNoQ2FuY2VsXCIsXG4wXSxbXCJ0b3VjaGVuZFwiLFwidG91Y2hFbmRcIiwwXSxbXCJ0b3VjaHN0YXJ0XCIsXCJ0b3VjaFN0YXJ0XCIsMF0sW1widm9sdW1lY2hhbmdlXCIsXCJ2b2x1bWVDaGFuZ2VcIiwwXSxbXCJkcmFnXCIsXCJkcmFnXCIsMV0sW1wiZHJhZ2VudGVyXCIsXCJkcmFnRW50ZXJcIiwxXSxbXCJkcmFnZXhpdFwiLFwiZHJhZ0V4aXRcIiwxXSxbXCJkcmFnbGVhdmVcIixcImRyYWdMZWF2ZVwiLDFdLFtcImRyYWdvdmVyXCIsXCJkcmFnT3ZlclwiLDFdLFtcIm1vdXNlbW92ZVwiLFwibW91c2VNb3ZlXCIsMV0sW1wibW91c2VvdXRcIixcIm1vdXNlT3V0XCIsMV0sW1wibW91c2VvdmVyXCIsXCJtb3VzZU92ZXJcIiwxXSxbXCJwb2ludGVybW92ZVwiLFwicG9pbnRlck1vdmVcIiwxXSxbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyT3V0XCIsMV0sW1wicG9pbnRlcm92ZXJcIixcInBvaW50ZXJPdmVyXCIsMV0sW1wic2Nyb2xsXCIsXCJzY3JvbGxcIiwxXSxbXCJ0b2dnbGVcIixcInRvZ2dsZVwiLDFdLFtcInRvdWNobW92ZVwiLFwidG91Y2hNb3ZlXCIsMV0sW1wid2hlZWxcIixcIndoZWVsXCIsMV0sW1wiYWJvcnRcIixcImFib3J0XCIsXG4yXSxbWmIsXCJhbmltYXRpb25FbmRcIiwyXSxbJGIsXCJhbmltYXRpb25JdGVyYXRpb25cIiwyXSxbYWMsXCJhbmltYXRpb25TdGFydFwiLDJdLFtcImNhbnBsYXlcIixcImNhblBsYXlcIiwyXSxbXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIiwyXSxbXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIiwyXSxbXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCIsMl0sW1wiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIiwyXSxbXCJlbmRlZFwiLFwiZW5kZWRcIiwyXSxbXCJlcnJvclwiLFwiZXJyb3JcIiwyXSxbXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIiwyXSxbXCJsb2FkXCIsXCJsb2FkXCIsMl0sW1wibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiLDJdLFtcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLDJdLFtcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCIsMl0sW1wibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIiwyXSxbXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCIsMl0sW1wicHJvZ3Jlc3NcIixcblwicHJvZ3Jlc3NcIiwyXSxbXCJzZWVraW5nXCIsXCJzZWVraW5nXCIsMl0sW1wic3RhbGxlZFwiLFwic3RhbGxlZFwiLDJdLFtcInN1c3BlbmRcIixcInN1c3BlbmRcIiwyXSxbXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCIsMl0sW2JjLFwidHJhbnNpdGlvbkVuZFwiLDJdLFtcIndhaXRpbmdcIixcIndhaXRpbmdcIiwyXV0sdWQ9e30sdmQ9e30sd2Q9MDtmb3IoO3dkPHRkLmxlbmd0aDt3ZCsrKXt2YXIgeWQ9dGRbd2RdLHpkPXlkWzBdLEFkPXlkWzFdLEJkPXlkWzJdLENkPVwib25cIisoQWRbMF0udG9VcHBlckNhc2UoKStBZC5zbGljZSgxKSksRGQ9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOkNkLGNhcHR1cmVkOkNkK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W3pkXSxldmVudFByaW9yaXR5OkJkfTt1ZFtBZF09RGQ7dmRbemRdPURkfVxudmFyIEVkPXtldmVudFR5cGVzOnVkLGdldEV2ZW50UHJpb3JpdHk6ZnVuY3Rpb24oYSl7YT12ZFthXTtyZXR1cm4gdm9pZCAwIT09YT9hLmV2ZW50UHJpb3JpdHk6Mn0sZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12ZFthXTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PWJkKGMpKXJldHVybiBudWxsO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6YT1pZDticmVhaztjYXNlIFwiYmx1clwiOmNhc2UgXCJmb2N1c1wiOmE9YWQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6YT1uZDticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjphPVxucGQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT1xZDticmVhaztjYXNlIFpiOmNhc2UgJGI6Y2FzZSBhYzphPVljO2JyZWFrO2Nhc2UgYmM6YT1yZDticmVhaztjYXNlIFwic2Nyb2xsXCI6YT0kYzticmVhaztjYXNlIFwid2hlZWxcIjphPXNkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9WmM7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1vZDticmVhaztkZWZhdWx0OmE9RX1iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1NjKGIpO3JldHVybiBifX0sRmQ9cS51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxcbkdkPXEudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LEhkPUVkLmdldEV2ZW50UHJpb3JpdHksSWQ9MTAsSmQ9W107XG5mdW5jdGlvbiBLZChhKXt2YXIgYj1hLnRhcmdldEluc3QsYz1iO2Rve2lmKCFjKXthLmFuY2VzdG9ycy5wdXNoKGMpO2JyZWFrfXZhciBkPWM7aWYoMz09PWQudGFnKWQ9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlbHNle2Zvcig7ZC5yZXR1cm47KWQ9ZC5yZXR1cm47ZD0zIT09ZC50YWc/bnVsbDpkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvfWlmKCFkKWJyZWFrO2I9Yy50YWc7NSE9PWImJjYhPT1ifHxhLmFuY2VzdG9ycy5wdXNoKGMpO2M9RmMoZCl9d2hpbGUoYyk7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspe2I9YS5hbmNlc3RvcnNbY107dmFyIGU9TWMoYS5uYXRpdmVFdmVudCk7ZD1hLnRvcExldmVsVHlwZTtmb3IodmFyIGY9YS5uYXRpdmVFdmVudCxnPWEuZXZlbnRTeXN0ZW1GbGFncyxoPW51bGwsaz0wO2s8ZWEubGVuZ3RoO2srKyl7dmFyIGw9ZWFba107bCYmKGw9bC5leHRyYWN0RXZlbnRzKGQsYixmLGUsZykpJiYoaD14YShoLGwpKX1CYShoKX19XG52YXIgTGQ9ITA7ZnVuY3Rpb24gRihhLGIpe01kKGIsYSwhMSl9ZnVuY3Rpb24gTWQoYSxiLGMpe3N3aXRjaChIZChiKSl7Y2FzZSAwOnZhciBkPU5kLmJpbmQobnVsbCxiLDEpO2JyZWFrO2Nhc2UgMTpkPU9kLmJpbmQobnVsbCxiLDEpO2JyZWFrO2RlZmF1bHQ6ZD1QZC5iaW5kKG51bGwsYiwxKX1jP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGQsITApOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGQsITEpfWZ1bmN0aW9uIE5kKGEsYixjKXtpYnx8Z2IoKTt2YXIgZD1QZCxlPWliO2liPSEwO3RyeXtmYihkLGEsYixjKX1maW5hbGx5eyhpYj1lKXx8a2IoKX19ZnVuY3Rpb24gT2QoYSxiLGMpe0dkKEZkLFBkLmJpbmQobnVsbCxhLGIsYykpfVxuZnVuY3Rpb24gUWQoYSxiLGMsZCl7aWYoSmQubGVuZ3RoKXt2YXIgZT1KZC5wb3AoKTtlLnRvcExldmVsVHlwZT1hO2UuZXZlbnRTeXN0ZW1GbGFncz1iO2UubmF0aXZlRXZlbnQ9YztlLnRhcmdldEluc3Q9ZDthPWV9ZWxzZSBhPXt0b3BMZXZlbFR5cGU6YSxldmVudFN5c3RlbUZsYWdzOmIsbmF0aXZlRXZlbnQ6Yyx0YXJnZXRJbnN0OmQsYW5jZXN0b3JzOltdfTt0cnl7aWYoYj1LZCxjPWEsamIpYihjLHZvaWQgMCk7ZWxzZXtqYj0hMDt0cnl7aGIoYixjLHZvaWQgMCl9ZmluYWxseXtqYj0hMSxrYigpfX19ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCxKZC5sZW5ndGg8SWQmJkpkLnB1c2goYSl9fVxuZnVuY3Rpb24gUGQoYSxiLGMpe2lmKExkKWlmKDA8bmMubGVuZ3RoJiYtMTx1Yy5pbmRleE9mKGEpKWE9emMobnVsbCxhLGIsYyksbmMucHVzaChhKTtlbHNle3ZhciBkPUhjKGEsYixjKTtudWxsPT09ZD9BYyhhLGMpOi0xPHVjLmluZGV4T2YoYSk/KGE9emMoZCxhLGIsYyksbmMucHVzaChhKSk6RGMoZCxhLGIsYyl8fChBYyhhLGMpLFFkKGEsYixjLG51bGwpKX19ZnVuY3Rpb24gSGMoYSxiLGMpe3ZhciBkPU1jKGMpO2Q9RmMoZCk7aWYobnVsbCE9PWQpe3ZhciBlPWVjKGQpO2lmKG51bGw9PT1lKWQ9bnVsbDtlbHNle3ZhciBmPWUudGFnO2lmKDEzPT09Zil7ZD1mYyhlKTtpZihudWxsIT09ZClyZXR1cm4gZDtkPW51bGx9ZWxzZSBpZigzPT09Zil7aWYoZS5zdGF0ZU5vZGUuaHlkcmF0ZSlyZXR1cm4gMz09PWUudGFnP2Uuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtkPW51bGx9ZWxzZSBlIT09ZCYmKGQ9bnVsbCl9fVFkKGEsYixjLGQpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gUmQoYSl7aWYoIVlhKXJldHVybiExO2E9XCJvblwiK2E7dmFyIGI9YSBpbiBkb2N1bWVudDtifHwoYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGIuc2V0QXR0cmlidXRlKGEsXCJyZXR1cm47XCIpLGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGJbYV0pO3JldHVybiBifXZhciBTZD1uZXcgKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwKTtmdW5jdGlvbiB4YyhhKXt2YXIgYj1TZC5nZXQoYSk7dm9pZCAwPT09YiYmKGI9bmV3IFNldCxTZC5zZXQoYSxiKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiB5YyhhLGIsYyl7aWYoIWMuaGFzKGEpKXtzd2l0Y2goYSl7Y2FzZSBcInNjcm9sbFwiOk1kKGIsXCJzY3JvbGxcIiwhMCk7YnJlYWs7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjpNZChiLFwiZm9jdXNcIiwhMCk7TWQoYixcImJsdXJcIiwhMCk7Yy5hZGQoXCJibHVyXCIpO2MuYWRkKFwiZm9jdXNcIik7YnJlYWs7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbG9zZVwiOlJkKGEpJiZNZChiLGEsITApO2JyZWFrO2Nhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2RlZmF1bHQ6LTE9PT1jYy5pbmRleE9mKGEpJiZGKGEsYil9Yy5hZGQoYSl9fVxudmFyIFRkPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LFVkPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhUZCkuZm9yRWFjaChmdW5jdGlvbihhKXtVZC5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO1RkW2JdPVRkW2FdfSl9KTtmdW5jdGlvbiBWZChhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8VGQuaGFzT3duUHJvcGVydHkoYSkmJlRkW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIFdkKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPVZkKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIFhkPW4oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiBZZChhLGIpe2lmKGIpe2lmKFhkW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IodSgxMzcsYSxcIlwiKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcih1KDYwKSk7aWYoIShcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih1KDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcih1KDYyLFwiXCIpKTt9fVxuZnVuY3Rpb24gWmQoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fWZ1bmN0aW9uICRkKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPXhjKGEpO2I9amFbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspeWMoYltkXSxhLGMpfWZ1bmN0aW9uIGFlKCl7fVxuZnVuY3Rpb24gYmUoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fWZ1bmN0aW9uIGNlKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1mdW5jdGlvbiBkZShhLGIpe3ZhciBjPWNlKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPWNlKGMpfX1cbmZ1bmN0aW9uIGVlKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/ZWUoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfWZ1bmN0aW9uIGZlKCl7Zm9yKHZhciBhPXdpbmRvdyxiPWJlKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPWJlKGEuZG9jdW1lbnQpfXJldHVybiBifVxuZnVuY3Rpb24gZ2UoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX12YXIgaGU9XCIkXCIsaWU9XCIvJFwiLGplPVwiJD9cIixrZT1cIiQhXCIsbGU9bnVsbCxtZT1udWxsO2Z1bmN0aW9uIG5lKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIG9lKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgcGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAscWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIHJlKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrfXJldHVybiBhfVxuZnVuY3Rpb24gc2UoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihjPT09aGV8fGM9PT1rZXx8Yz09PWplKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZSBjPT09aWUmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciB0ZT1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSx1ZT1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK3RlLHZlPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrdGUsd2U9XCJfX3JlYWN0Q29udGFpbmVyZSRcIit0ZTtcbmZ1bmN0aW9uIEZjKGEpe3ZhciBiPWFbdWVdO2lmKGIpcmV0dXJuIGI7Zm9yKHZhciBjPWEucGFyZW50Tm9kZTtjOyl7aWYoYj1jW3dlXXx8Y1t1ZV0pe2M9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWIuY2hpbGR8fG51bGwhPT1jJiZudWxsIT09Yy5jaGlsZClmb3IoYT1zZShhKTtudWxsIT09YTspe2lmKGM9YVt1ZV0pcmV0dXJuIGM7YT1zZShhKX1yZXR1cm4gYn1hPWM7Yz1hLnBhcmVudE5vZGV9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQ2MoYSl7YT1hW3VlXXx8YVt3ZV07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnJiYxMyE9PWEudGFnJiYzIT09YS50YWc/bnVsbDphfWZ1bmN0aW9uIHhlKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt0aHJvdyBFcnJvcih1KDMzKSk7fWZ1bmN0aW9uIHllKGEpe3JldHVybiBhW3ZlXXx8bnVsbH12YXIgemU9bnVsbCxBZT1udWxsLEJlPW51bGw7XG5mdW5jdGlvbiBDZSgpe2lmKEJlKXJldHVybiBCZTt2YXIgYSxiPUFlLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIHplP3plLnZhbHVlOnplLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIEJlPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9dmFyIERlPUUuZXh0ZW5kKHtkYXRhOm51bGx9KSxFZT1FLmV4dGVuZCh7ZGF0YTpudWxsfSksRmU9WzksMTMsMjcsMzJdLEdlPVlhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxIZT1udWxsO1lhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihIZT1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIEllPVlhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhSGUsSmU9WWEmJighR2V8fEhlJiY4PEhlJiYxMT49SGUpLEtlPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLExlPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LE1lPSExO1xuZnVuY3Rpb24gTmUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT1GZS5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIE9lKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIFBlPSExO2Z1bmN0aW9uIFFlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBPZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7TWU9ITA7cmV0dXJuIEtlO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PUtlJiZNZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBSZShhLGIpe2lmKFBlKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFHZSYmTmUoYSxiKT8oYT1DZSgpLEJlPUFlPXplPW51bGwsUGU9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIEplJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBTZT17ZXZlbnRUeXBlczpMZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlO2lmKEdlKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBmPUxlLmNvbXBvc2l0aW9uU3RhcnQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpmPUxlLmNvbXBvc2l0aW9uRW5kO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6Zj1MZS5jb21wb3NpdGlvblVwZGF0ZTticmVhayBifWY9dm9pZCAwfWVsc2UgUGU/TmUoYSxjKSYmKGY9TGUuY29tcG9zaXRpb25FbmQpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoZj1MZS5jb21wb3NpdGlvblN0YXJ0KTtmPyhKZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihQZXx8ZiE9PUxlLmNvbXBvc2l0aW9uU3RhcnQ/Zj09PUxlLmNvbXBvc2l0aW9uRW5kJiZQZSYmKGU9Q2UoKSk6KHplPWQsQWU9XCJ2YWx1ZVwiaW4gemU/emUudmFsdWU6emUudGV4dENvbnRlbnQsUGU9ITApKSxmPURlLmdldFBvb2xlZChmLFxuYixjLGQpLGU/Zi5kYXRhPWU6KGU9T2UoYyksbnVsbCE9PWUmJihmLmRhdGE9ZSkpLFNjKGYpLGU9Zik6ZT1udWxsOyhhPUllP1FlKGEsYyk6UmUoYSxjKSk/KGI9RWUuZ2V0UG9vbGVkKExlLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxTYyhiKSk6Yj1udWxsO3JldHVybiBudWxsPT09ZT9iOm51bGw9PT1iP2U6W2UsYl19fSxUZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBVZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIVRlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbnZhciBWZT17Y2hhbmdlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ2hhbmdlXCIsY2FwdHVyZWQ6XCJvbkNoYW5nZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjaGFuZ2UgY2xpY2sgZm9jdXMgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fTtmdW5jdGlvbiBXZShhLGIsYyl7YT1FLmdldFBvb2xlZChWZS5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO2NiKGMpO1NjKGEpO3JldHVybiBhfXZhciBYZT1udWxsLFllPW51bGw7ZnVuY3Rpb24gWmUoYSl7QmEoYSl9ZnVuY3Rpb24gJGUoYSl7dmFyIGI9eGUoYSk7aWYoemIoYikpcmV0dXJuIGF9ZnVuY3Rpb24gYWYoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgYmY9ITE7WWEmJihiZj1SZChcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtcbmZ1bmN0aW9uIGNmKCl7WGUmJihYZS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixkZiksWWU9WGU9bnVsbCl9ZnVuY3Rpb24gZGYoYSl7aWYoXCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJiRlKFllKSlpZihhPVdlKFllLGEsTWMoYSkpLGliKUJhKGEpO2Vsc2V7aWI9ITA7dHJ5e2ViKFplLGEpfWZpbmFsbHl7aWI9ITEsa2IoKX19fWZ1bmN0aW9uIGVmKGEsYixjKXtcImZvY3VzXCI9PT1hPyhjZigpLFhlPWIsWWU9YyxYZS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixkZikpOlwiYmx1clwiPT09YSYmY2YoKX1mdW5jdGlvbiBmZihhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiAkZShZZSl9ZnVuY3Rpb24gZ2YoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiAkZShiKX1mdW5jdGlvbiBoZihhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiAkZShiKX1cbnZhciBqZj17ZXZlbnRUeXBlczpWZSxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOmJmLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj94ZShiKTp3aW5kb3csZj1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWZ8fFwiaW5wdXRcIj09PWYmJlwiZmlsZVwiPT09ZS50eXBlKXZhciBnPWFmO2Vsc2UgaWYoVWUoZSkpaWYoYmYpZz1oZjtlbHNle2c9ZmY7dmFyIGg9ZWZ9ZWxzZShmPWUubm9kZU5hbWUpJiZcImlucHV0XCI9PT1mLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1lLnR5cGV8fFwicmFkaW9cIj09PWUudHlwZSkmJihnPWdmKTtpZihnJiYoZz1nKGEsYikpKXJldHVybiBXZShnLGMsZCk7aCYmaChhLGUsYik7XCJibHVyXCI9PT1hJiYoYT1lLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJkZiKGUsXCJudW1iZXJcIixlLnZhbHVlKX19LGtmPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsXG5kZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19fSxsZixtZj17ZXZlbnRUeXBlczprZixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEsZz1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoZiYmMD09PShlJjMyKSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fCFnJiYhZilyZXR1cm4gbnVsbDtcbmU9ZC53aW5kb3c9PT1kP2Q6KGU9ZC5vd25lckRvY3VtZW50KT9lLmRlZmF1bHRWaWV3fHxlLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoZyl7aWYoZz1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/RmMoYik6bnVsbCxudWxsIT09YiYmKGY9ZWMoYiksYiE9PWZ8fDUhPT1iLnRhZyYmNiE9PWIudGFnKSliPW51bGx9ZWxzZSBnPW51bGw7aWYoZz09PWIpcmV0dXJuIG51bGw7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PWEpe3ZhciBoPW5kO3ZhciBrPWtmLm1vdXNlTGVhdmU7dmFyIGw9a2YubW91c2VFbnRlcjt2YXIgbT1cIm1vdXNlXCJ9ZWxzZSBpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpaD1vZCxrPWtmLnBvaW50ZXJMZWF2ZSxsPWtmLnBvaW50ZXJFbnRlcixtPVwicG9pbnRlclwiO2E9bnVsbD09Zz9lOnhlKGcpO2U9bnVsbD09Yj9lOnhlKGIpO2s9aC5nZXRQb29sZWQoayxnLGMsZCk7ay50eXBlPW0rXCJsZWF2ZVwiO2sudGFyZ2V0PVxuYTtrLnJlbGF0ZWRUYXJnZXQ9ZTtkPWguZ2V0UG9vbGVkKGwsYixjLGQpO2QudHlwZT1tK1wiZW50ZXJcIjtkLnRhcmdldD1lO2QucmVsYXRlZFRhcmdldD1hO2g9ZzttPWI7aWYoaCYmbSlhOntsPWg7YT1tO2c9MDtmb3IoYj1sO2I7Yj1OYyhiKSlnKys7Yj0wO2ZvcihlPWE7ZTtlPU5jKGUpKWIrKztmb3IoOzA8Zy1iOylsPU5jKGwpLGctLTtmb3IoOzA8Yi1nOylhPU5jKGEpLGItLTtmb3IoO2ctLTspe2lmKGw9PT1hfHxsPT09YS5hbHRlcm5hdGUpYnJlYWsgYTtsPU5jKGwpO2E9TmMoYSl9bD1udWxsfWVsc2UgbD1udWxsO2E9bDtmb3IobD1bXTtoJiZoIT09YTspe2c9aC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1hKWJyZWFrO2wucHVzaChoKTtoPU5jKGgpfWZvcihoPVtdO20mJm0hPT1hOyl7Zz1tLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PWEpYnJlYWs7aC5wdXNoKG0pO209TmMobSl9Zm9yKG09MDttPGwubGVuZ3RoO20rKylRYyhsW21dLFwiYnViYmxlZFwiLGspO2ZvcihtPVxuaC5sZW5ndGg7MDxtLS07KVFjKGhbbV0sXCJjYXB0dXJlZFwiLGQpO2lmKGM9PT1sZilyZXR1cm4gbGY9bnVsbCxba107bGY9YztyZXR1cm5bayxkXX19O2Z1bmN0aW9uIG5mKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgb2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6bmYscGY9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtmdW5jdGlvbiBxZihhLGIpe2lmKG9mKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighcGYuY2FsbChiLGNbZF0pfHwhb2YoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1cbnZhciByZj1ZYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLHNmPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSx0Zj1udWxsLHVmPW51bGwsdmY9bnVsbCx3Zj0hMTtcbmZ1bmN0aW9uIHhmKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYod2Z8fG51bGw9PXRmfHx0ZiE9PWJlKGMpKXJldHVybiBudWxsO2M9dGY7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmZ2UoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gdmYmJnFmKHZmLGMpP251bGw6KHZmPWMsYT1FLmdldFBvb2xlZChzZi5zZWxlY3QsdWYsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD10ZixTYyhhKSxhKX1cbnZhciB5Zj17ZXZlbnRUeXBlczpzZixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50LGY7aWYoIShmPSFlKSl7YTp7ZT14YyhlKTtmPWphLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKWlmKCFlLmhhcyhmW2ddKSl7ZT0hMTticmVhayBhfWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj94ZShiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmlmKFVlKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKXRmPWUsdWY9Yix2Zj1udWxsO2JyZWFrO2Nhc2UgXCJibHVyXCI6dmY9dWY9dGY9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6d2Y9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOnJldHVybiB3Zj0hMSx4ZihjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihyZilicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuIHhmKGMsZCl9cmV0dXJuIG51bGx9fTtDYS5pbmplY3RFdmVudFBsdWdpbk9yZGVyKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3ZhciB6Zj1DYztzYT15ZTt1YT16Zjt2YT14ZTtDYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUoe1NpbXBsZUV2ZW50UGx1Z2luOkVkLEVudGVyTGVhdmVFdmVudFBsdWdpbjptZixDaGFuZ2VFdmVudFBsdWdpbjpqZixTZWxlY3RFdmVudFBsdWdpbjp5ZixCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOlNlfSk7bmV3IFNldDt2YXIgQWY9W10sQmY9LTE7ZnVuY3Rpb24gRyhhKXswPkJmfHwoYS5jdXJyZW50PUFmW0JmXSxBZltCZl09bnVsbCxCZi0tKX1cbmZ1bmN0aW9uIEkoYSxiKXtCZisrO0FmW0JmXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIENmPXt9LEo9e2N1cnJlbnQ6Q2Z9LEs9e2N1cnJlbnQ6ITF9LERmPUNmO2Z1bmN0aW9uIEVmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gQ2Y7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gTChhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfVxuZnVuY3Rpb24gRmYoYSl7RyhLLGEpO0coSixhKX1mdW5jdGlvbiBHZihhKXtHKEssYSk7RyhKLGEpfWZ1bmN0aW9uIEhmKGEsYixjKXtpZihKLmN1cnJlbnQhPT1DZil0aHJvdyBFcnJvcih1KDE2OCkpO0koSixiLGEpO0koSyxjLGEpfWZ1bmN0aW9uIElmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYSkpdGhyb3cgRXJyb3IodSgxMDgsV2EoYil8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gbih7fSxjLHt9LGQpfWZ1bmN0aW9uIEpmKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2I9YiYmYi5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8Q2Y7RGY9Si5jdXJyZW50O0koSixiLGEpO0koSyxLLmN1cnJlbnQsYSk7cmV0dXJuITB9XG5mdW5jdGlvbiBLZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IodSgxNjkpKTtjPyhiPUlmKGEsYixEZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1iLEcoSyxhKSxHKEosYSksSShKLGIsYSkpOkcoSyxhKTtJKEssYyxhKX1cbnZhciBMZj1xLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxNZj1xLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssTmY9cS51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayxPZj1xLnVuc3RhYmxlX3Nob3VsZFlpZWxkLFBmPXEudW5zdGFibGVfcmVxdWVzdFBhaW50LFFmPXEudW5zdGFibGVfbm93LFJmPXEudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwsU2Y9cS51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxUZj1xLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LFVmPXEudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksVmY9cS51bnN0YWJsZV9Mb3dQcmlvcml0eSxXZj1xLnVuc3RhYmxlX0lkbGVQcmlvcml0eSxYZj17fSxZZj12b2lkIDAhPT1QZj9QZjpmdW5jdGlvbigpe30sWmY9bnVsbCwkZj1udWxsLGFnPSExLGJnPVFmKCksY2c9MUU0PmJnP1FmOmZ1bmN0aW9uKCl7cmV0dXJuIFFmKCktYmd9O1xuZnVuY3Rpb24gZGcoKXtzd2l0Y2goUmYoKSl7Y2FzZSBTZjpyZXR1cm4gOTk7Y2FzZSBUZjpyZXR1cm4gOTg7Y2FzZSBVZjpyZXR1cm4gOTc7Y2FzZSBWZjpyZXR1cm4gOTY7Y2FzZSBXZjpyZXR1cm4gOTU7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMzMikpO319ZnVuY3Rpb24gZWcoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIFNmO2Nhc2UgOTg6cmV0dXJuIFRmO2Nhc2UgOTc6cmV0dXJuIFVmO2Nhc2UgOTY6cmV0dXJuIFZmO2Nhc2UgOTU6cmV0dXJuIFdmO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMzIpKTt9fWZ1bmN0aW9uIGZnKGEsYil7YT1lZyhhKTtyZXR1cm4gTGYoYSxiKX1mdW5jdGlvbiBnZyhhLGIsYyl7YT1lZyhhKTtyZXR1cm4gTWYoYSxiLGMpfWZ1bmN0aW9uIGhnKGEpe251bGw9PT1aZj8oWmY9W2FdLCRmPU1mKFNmLGlnKSk6WmYucHVzaChhKTtyZXR1cm4gWGZ9ZnVuY3Rpb24gamcoKXtpZihudWxsIT09JGYpe3ZhciBhPSRmOyRmPW51bGw7TmYoYSl9aWcoKX1cbmZ1bmN0aW9uIGlnKCl7aWYoIWFnJiZudWxsIT09WmYpe2FnPSEwO3ZhciBhPTA7dHJ5e3ZhciBiPVpmO2ZnKDk5LGZ1bmN0aW9uKCl7Zm9yKDthPGIubGVuZ3RoO2ErKyl7dmFyIGM9YlthXTtkbyBjPWMoITApO3doaWxlKG51bGwhPT1jKX19KTtaZj1udWxsfWNhdGNoKGMpe3Rocm93IG51bGwhPT1aZiYmKFpmPVpmLnNsaWNlKGErMSkpLE1mKFNmLGpnKSxjO31maW5hbGx5e2FnPSExfX19dmFyIGtnPTM7ZnVuY3Rpb24gbGcoYSxiLGMpe2MvPTEwO3JldHVybiAxMDczNzQxODIxLSgoKDEwNzM3NDE4MjEtYStiLzEwKS9jfDApKzEpKmN9ZnVuY3Rpb24gbWcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1uKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSl9cmV0dXJuIGJ9dmFyIG5nPXtjdXJyZW50Om51bGx9LG9nPW51bGwscGc9bnVsbCxxZz1udWxsO2Z1bmN0aW9uIHJnKCl7cWc9cGc9b2c9bnVsbH1cbmZ1bmN0aW9uIHNnKGEsYil7dmFyIGM9YS50eXBlLl9jb250ZXh0O0kobmcsYy5fY3VycmVudFZhbHVlLGEpO2MuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHRnKGEpe3ZhciBiPW5nLmN1cnJlbnQ7RyhuZyxhKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHVnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKGEuY2hpbGRFeHBpcmF0aW9uVGltZTxiKWEuY2hpbGRFeHBpcmF0aW9uVGltZT1iLG51bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtlbHNlIGlmKG51bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiljLmNoaWxkRXhwaXJhdGlvblRpbWU9YjtlbHNlIGJyZWFrO2E9YS5yZXR1cm59fVxuZnVuY3Rpb24gdmcoYSxiKXtvZz1hO3FnPXBnPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoYS5leHBpcmF0aW9uVGltZT49YiYmKHdnPSEwKSxhLmZpcnN0Q29udGV4dD1udWxsKX1mdW5jdGlvbiB4ZyhhLGIpe2lmKHFnIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YilxZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtpZihudWxsPT09cGcpe2lmKG51bGw9PT1vZyl0aHJvdyBFcnJvcih1KDMwOCkpO3BnPWI7b2cuZGVwZW5kZW5jaWVzPXtleHBpcmF0aW9uVGltZTowLGZpcnN0Q29udGV4dDpiLHJlc3BvbmRlcnM6bnVsbH19ZWxzZSBwZz1wZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgeWc9ITE7XG5mdW5jdGlvbiB6ZyhhKXtyZXR1cm57YmFzZVN0YXRlOmEsZmlyc3RVcGRhdGU6bnVsbCxsYXN0VXBkYXRlOm51bGwsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gQWcoYSl7cmV0dXJue2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxmaXJzdFVwZGF0ZTphLmZpcnN0VXBkYXRlLGxhc3RVcGRhdGU6YS5sYXN0VXBkYXRlLGZpcnN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxsYXN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxmaXJzdEVmZmVjdDpudWxsLGxhc3RFZmZlY3Q6bnVsbCxmaXJzdENhcHR1cmVkRWZmZWN0Om51bGwsbGFzdENhcHR1cmVkRWZmZWN0Om51bGx9fVxuZnVuY3Rpb24gQmcoYSxiKXtyZXR1cm57ZXhwaXJhdGlvblRpbWU6YSxzdXNwZW5zZUNvbmZpZzpiLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbCxuZXh0RWZmZWN0Om51bGx9fWZ1bmN0aW9uIENnKGEsYil7bnVsbD09PWEubGFzdFVwZGF0ZT9hLmZpcnN0VXBkYXRlPWEubGFzdFVwZGF0ZT1iOihhLmxhc3RVcGRhdGUubmV4dD1iLGEubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIERnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7aWYobnVsbD09PWMpe3ZhciBkPWEudXBkYXRlUXVldWU7dmFyIGU9bnVsbDtudWxsPT09ZCYmKGQ9YS51cGRhdGVRdWV1ZT16ZyhhLm1lbW9pemVkU3RhdGUpKX1lbHNlIGQ9YS51cGRhdGVRdWV1ZSxlPWMudXBkYXRlUXVldWUsbnVsbD09PWQ/bnVsbD09PWU/KGQ9YS51cGRhdGVRdWV1ZT16ZyhhLm1lbW9pemVkU3RhdGUpLGU9Yy51cGRhdGVRdWV1ZT16ZyhjLm1lbW9pemVkU3RhdGUpKTpkPWEudXBkYXRlUXVldWU9QWcoZSk6bnVsbD09PWUmJihlPWMudXBkYXRlUXVldWU9QWcoZCkpO251bGw9PT1lfHxkPT09ZT9DZyhkLGIpOm51bGw9PT1kLmxhc3RVcGRhdGV8fG51bGw9PT1lLmxhc3RVcGRhdGU/KENnKGQsYiksQ2coZSxiKSk6KENnKGQsYiksZS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gRWcoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlO2M9bnVsbD09PWM/YS51cGRhdGVRdWV1ZT16ZyhhLm1lbW9pemVkU3RhdGUpOkZnKGEsYyk7bnVsbD09PWMubGFzdENhcHR1cmVkVXBkYXRlP2MuZmlyc3RDYXB0dXJlZFVwZGF0ZT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT1iOihjLmxhc3RDYXB0dXJlZFVwZGF0ZS5uZXh0PWIsYy5sYXN0Q2FwdHVyZWRVcGRhdGU9Yil9ZnVuY3Rpb24gRmcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYj09PWMudXBkYXRlUXVldWUmJihiPWEudXBkYXRlUXVldWU9QWcoYikpO3JldHVybiBifVxuZnVuY3Rpb24gR2coYSxiLGMsZCxlLGYpe3N3aXRjaChjLnRhZyl7Y2FzZSAxOnJldHVybiBhPWMucGF5bG9hZCxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7Y2FzZSAzOmEuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi00MDk3fDY0O2Nhc2UgMDphPWMucGF5bG9hZDtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtpZihudWxsPT09ZXx8dm9pZCAwPT09ZSlicmVhaztyZXR1cm4gbih7fSxkLGUpO2Nhc2UgMjp5Zz0hMH1yZXR1cm4gZH1cbmZ1bmN0aW9uIEhnKGEsYixjLGQsZSl7eWc9ITE7Yj1GZyhhLGIpO2Zvcih2YXIgZj1iLmJhc2VTdGF0ZSxnPW51bGwsaD0wLGs9Yi5maXJzdFVwZGF0ZSxsPWY7bnVsbCE9PWs7KXt2YXIgbT1rLmV4cGlyYXRpb25UaW1lO208ZT8obnVsbD09PWcmJihnPWssZj1sKSxoPG0mJihoPW0pKTooSWcobSxrLnN1c3BlbnNlQ29uZmlnKSxsPUdnKGEsYixrLGwsYyxkKSxudWxsIT09ay5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD0zMixrLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0RWZmZWN0P2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWs6KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWssYi5sYXN0RWZmZWN0PWspKSk7az1rLm5leHR9bT1udWxsO2ZvcihrPWIuZmlyc3RDYXB0dXJlZFVwZGF0ZTtudWxsIT09azspe3ZhciBDPWsuZXhwaXJhdGlvblRpbWU7QzxlPyhudWxsPT09bSYmKG09ayxudWxsPT09ZyYmKGY9bCkpLGg8QyYmKGg9QykpOihsPUdnKGEsYixrLGwsYyxkKSxudWxsIT09XG5rLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGsubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RDYXB0dXJlZEVmZmVjdD9iLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9azooYi5sYXN0Q2FwdHVyZWRFZmZlY3QubmV4dEVmZmVjdD1rLGIubGFzdENhcHR1cmVkRWZmZWN0PWspKSk7az1rLm5leHR9bnVsbD09PWcmJihiLmxhc3RVcGRhdGU9bnVsbCk7bnVsbD09PW0/Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbDphLmVmZmVjdFRhZ3w9MzI7bnVsbD09PWcmJm51bGw9PT1tJiYoZj1sKTtiLmJhc2VTdGF0ZT1mO2IuZmlyc3RVcGRhdGU9ZztiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9bTtKZyhoKTthLmV4cGlyYXRpb25UaW1lPWg7YS5tZW1vaXplZFN0YXRlPWx9XG5mdW5jdGlvbiBLZyhhLGIsYyl7bnVsbCE9PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSYmKG51bGwhPT1iLmxhc3RVcGRhdGUmJihiLmxhc3RVcGRhdGUubmV4dD1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUsYi5sYXN0VXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlKSxiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbCk7TGcoYi5maXJzdEVmZmVjdCxjKTtiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsO0xnKGIuZmlyc3RDYXB0dXJlZEVmZmVjdCxjKTtiLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bnVsbH1mdW5jdGlvbiBMZyhhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmNhbGxiYWNrO2lmKG51bGwhPT1jKXthLmNhbGxiYWNrPW51bGw7dmFyIGQ9YjtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgYyl0aHJvdyBFcnJvcih1KDE5MSxjKSk7Yy5jYWxsKGQpfWE9YS5uZXh0RWZmZWN0fX1cbnZhciBNZz1FYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxOZz0obmV3IGFhLkNvbXBvbmVudCkucmVmcztmdW5jdGlvbiBPZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bih7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jO2Q9YS51cGRhdGVRdWV1ZTtudWxsIT09ZCYmMD09PWEuZXhwaXJhdGlvblRpbWUmJihkLmJhc2VTdGF0ZT1jKX1cbnZhciBTZz17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/ZWMoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPVBnKCksZT1NZy5zdXNwZW5zZTtkPVFnKGQsYSxlKTtlPUJnKGQsZSk7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO0RnKGEsZSk7UmcoYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9UGcoKSxlPU1nLnN1c3BlbnNlO2Q9UWcoZCxhLGUpO2U9QmcoZCxlKTtlLnRhZz0xO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtEZyhhLGUpO1JnKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPVBnKCksZD1NZy5zdXNwZW5zZTtcbmM9UWcoYyxhLGQpO2Q9QmcoYyxkKTtkLnRhZz0yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZC5jYWxsYmFjaz1iKTtEZyhhLGQpO1JnKGEsYyl9fTtmdW5jdGlvbiBUZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFxZihjLGQpfHwhcWYoZSxmKTohMH1cbmZ1bmN0aW9uIFVnKGEsYixjKXt2YXIgZD0hMSxlPUNmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXhnKGYpOihlPUwoYik/RGY6Si5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/RWYoYSxlKTpDZik7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPVNnO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbEZpYmVyPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIFZnKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZTZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIFdnKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9Tmc7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD14ZyhmKTooZj1MKGIpP0RmOkouY3VycmVudCxlLmNvbnRleHQ9RWYoYSxmKSk7Zj1hLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoSGcoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKE9nKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8KGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJlNnLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLGY9YS51cGRhdGVRdWV1ZSxudWxsIT09ZiYmKEhnKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX12YXIgWGc9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFlnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IodSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih1KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1OZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih1KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih1KDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gWmcoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IodSgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIikpO31cbmZ1bmN0aW9uICRnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiLGMpe2E9YWgoYSxiLGMpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1iaChjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMsZCksZC5yZWY9WWcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPWNoKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPVlnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1cbmMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9ZGgoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9ZWgoYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIEMoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPWJoKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIEdhOnJldHVybiBjPWNoKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPVlnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSBIYTpyZXR1cm4gYj1kaChiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoWGcoYil8fFxuVWEoYikpcmV0dXJuIGI9ZWgoYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7WmcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB5KGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIEdhOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09SWE/bShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlIEhhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKFhnKGMpfHxVYShjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7WmcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBIKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9XG5hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgR2E6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PUlhP20oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlIEhhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKFhnKGQpfHxVYShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7WmcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB6KGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLG09bnVsbCxyPWcseD1nPTAsQT1udWxsO251bGwhPT1yJiZ4PGgubGVuZ3RoO3grKyl7ci5pbmRleD54PyhBPXIscj1udWxsKTpBPXIuc2libGluZzt2YXIgcD15KGUscixoW3hdLGspO2lmKG51bGw9PT1wKXtudWxsPT09ciYmKHI9QSk7YnJlYWt9YSYmXG5yJiZudWxsPT09cC5hbHRlcm5hdGUmJmIoZSxyKTtnPWYocCxnLHgpO251bGw9PT1tP2w9cDptLnNpYmxpbmc9cDttPXA7cj1BfWlmKHg9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHIpLGw7aWYobnVsbD09PXIpe2Zvcig7eDxoLmxlbmd0aDt4Kyspcj1DKGUsaFt4XSxrKSxudWxsIT09ciYmKGc9ZihyLGcseCksbnVsbD09PW0/bD1yOm0uc2libGluZz1yLG09cik7cmV0dXJuIGx9Zm9yKHI9ZChlLHIpO3g8aC5sZW5ndGg7eCsrKUE9SChyLGUseCxoW3hdLGspLG51bGwhPT1BJiYoYSYmbnVsbCE9PUEuYWx0ZXJuYXRlJiZyLmRlbGV0ZShudWxsPT09QS5rZXk/eDpBLmtleSksZz1mKEEsZyx4KSxudWxsPT09bT9sPUE6bS5zaWJsaW5nPUEsbT1BKTthJiZyLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIHRhKGUsZyxoLGspe3ZhciBsPVVhKGgpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBsKXRocm93IEVycm9yKHUoMTUwKSk7aD1sLmNhbGwoaCk7XG5pZihudWxsPT1oKXRocm93IEVycm9yKHUoMTUxKSk7Zm9yKHZhciBtPWw9bnVsbCxyPWcseD1nPTAsQT1udWxsLHA9aC5uZXh0KCk7bnVsbCE9PXImJiFwLmRvbmU7eCsrLHA9aC5uZXh0KCkpe3IuaW5kZXg+eD8oQT1yLHI9bnVsbCk6QT1yLnNpYmxpbmc7dmFyIHo9eShlLHIscC52YWx1ZSxrKTtpZihudWxsPT09eil7bnVsbD09PXImJihyPUEpO2JyZWFrfWEmJnImJm51bGw9PT16LmFsdGVybmF0ZSYmYihlLHIpO2c9Zih6LGcseCk7bnVsbD09PW0/bD16Om0uc2libGluZz16O209ejtyPUF9aWYocC5kb25lKXJldHVybiBjKGUsciksbDtpZihudWxsPT09cil7Zm9yKDshcC5kb25lO3grKyxwPWgubmV4dCgpKXA9QyhlLHAudmFsdWUsayksbnVsbCE9PXAmJihnPWYocCxnLHgpLG51bGw9PT1tP2w9cDptLnNpYmxpbmc9cCxtPXApO3JldHVybiBsfWZvcihyPWQoZSxyKTshcC5kb25lO3grKyxwPWgubmV4dCgpKXA9SChyLGUseCxwLnZhbHVlLGspLG51bGwhPT1wJiYoYSYmbnVsbCE9PVxucC5hbHRlcm5hdGUmJnIuZGVsZXRlKG51bGw9PT1wLmtleT94OnAua2V5KSxnPWYocCxnLHgpLG51bGw9PT1tP2w9cDptLnNpYmxpbmc9cCxtPXApO2EmJnIuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PUlhJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIEdhOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bClpZig3PT09ay50YWc/Zi50eXBlPT09SWE6ay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi50eXBlPT09SWE/Zi5wcm9wcy5jaGlsZHJlbjpmLnByb3BzLGgpO2QucmVmPVlnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLFxuayk7YnJlYWt9ZWxzZSBiKGEsayk7az1rLnNpYmxpbmd9Zi50eXBlPT09SWE/KGQ9ZWgoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPWNoKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPVlnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSBIYTphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10saCk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPWRoKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT1cbnR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYsaCksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1iaChmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihYZyhmKSlyZXR1cm4geihhLGQsZixoKTtpZihVYShmKSlyZXR1cm4gdGEoYSxkLGYsaCk7bCYmWmcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDp0aHJvdyBhPWEudHlwZSxFcnJvcih1KDE1MixhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fFwiQ29tcG9uZW50XCIpKTt9cmV0dXJuIGMoYSxkKX19dmFyIGZoPSRnKCEwKSxnaD0kZyghMSksaGg9e30saWg9e2N1cnJlbnQ6aGh9LGpoPXtjdXJyZW50OmhofSxraD17Y3VycmVudDpoaH07ZnVuY3Rpb24gbGgoYSl7aWYoYT09PWhoKXRocm93IEVycm9yKHUoMTc0KSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBtaChhLGIpe0koa2gsYixhKTtJKGpoLGEsYSk7SShpaCxoaCxhKTt2YXIgYz1iLm5vZGVUeXBlO3N3aXRjaChjKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpRYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6Yz04PT09Yz9iLnBhcmVudE5vZGU6YixiPWMubmFtZXNwYWNlVVJJfHxudWxsLGM9Yy50YWdOYW1lLGI9UWIoYixjKX1HKGloLGEpO0koaWgsYixhKX1mdW5jdGlvbiBuaChhKXtHKGloLGEpO0coamgsYSk7RyhraCxhKX1mdW5jdGlvbiBvaChhKXtsaChraC5jdXJyZW50KTt2YXIgYj1saChpaC5jdXJyZW50KTt2YXIgYz1RYihiLGEudHlwZSk7YiE9PWMmJihJKGpoLGEsYSksSShpaCxjLGEpKX1mdW5jdGlvbiBwaChhKXtqaC5jdXJyZW50PT09YSYmKEcoaWgsYSksRyhqaCxhKSl9dmFyIE09e2N1cnJlbnQ6MH07XG5mdW5jdGlvbiBxaChhKXtmb3IodmFyIGI9YTtudWxsIT09Yjspe2lmKDEzPT09Yi50YWcpe3ZhciBjPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGw9PT1jfHxjLmRhdGE9PT1qZXx8Yy5kYXRhPT09a2UpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcmgoYSxiKXtyZXR1cm57cmVzcG9uZGVyOmEscHJvcHM6Yn19XG52YXIgc2g9RWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixOPUVhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLHRoPTAsdWg9bnVsbCxPPW51bGwsdmg9bnVsbCx3aD1udWxsLFA9bnVsbCx4aD1udWxsLHloPTAsemg9bnVsbCxBaD0wLEJoPSExLENoPW51bGwsR2g9MDtmdW5jdGlvbiBRKCl7dGhyb3cgRXJyb3IodSgzMjEpKTt9ZnVuY3Rpb24gSGgoYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighb2YoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIEloKGEsYixjLGQsZSxmKXt0aD1mO3VoPWI7dmg9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7c2guY3VycmVudD1udWxsPT09dmg/Smg6S2g7Yj1jKGQsZSk7aWYoQmgpe2RvIEJoPSExLEdoKz0xLHZoPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsLHhoPXdoLHpoPVA9Tz1udWxsLHNoLmN1cnJlbnQ9S2gsYj1jKGQsZSk7d2hpbGUoQmgpO0NoPW51bGw7R2g9MH1zaC5jdXJyZW50PUxoO2E9dWg7YS5tZW1vaXplZFN0YXRlPXdoO2EuZXhwaXJhdGlvblRpbWU9eWg7YS51cGRhdGVRdWV1ZT16aDthLmVmZmVjdFRhZ3w9QWg7YT1udWxsIT09TyYmbnVsbCE9PU8ubmV4dDt0aD0wO3hoPVA9d2g9dmg9Tz11aD1udWxsO3loPTA7emg9bnVsbDtBaD0wO2lmKGEpdGhyb3cgRXJyb3IodSgzMDApKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIE1oKCl7c2guY3VycmVudD1MaDt0aD0wO3hoPVA9d2g9dmg9Tz11aD1udWxsO3loPTA7emg9bnVsbDtBaD0wO0JoPSExO0NoPW51bGw7R2g9MH1mdW5jdGlvbiBOaCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwscXVldWU6bnVsbCxiYXNlVXBkYXRlOm51bGwsbmV4dDpudWxsfTtudWxsPT09UD93aD1QPWE6UD1QLm5leHQ9YTtyZXR1cm4gUH1mdW5jdGlvbiBPaCgpe2lmKG51bGwhPT14aClQPXhoLHhoPVAubmV4dCxPPXZoLHZoPW51bGwhPT1PP08ubmV4dDpudWxsO2Vsc2V7aWYobnVsbD09PXZoKXRocm93IEVycm9yKHUoMzEwKSk7Tz12aDt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpPLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk8uYmFzZVN0YXRlLHF1ZXVlOk8ucXVldWUsYmFzZVVwZGF0ZTpPLmJhc2VVcGRhdGUsbmV4dDpudWxsfTtQPW51bGw9PT1QP3doPWE6UC5uZXh0PWE7dmg9Ty5uZXh0fXJldHVybiBQfVxuZnVuY3Rpb24gUGgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBRaChhKXt2YXIgYj1PaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih1KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO2lmKDA8R2gpe3ZhciBkPWMuZGlzcGF0Y2g7aWYobnVsbCE9PUNoKXt2YXIgZT1DaC5nZXQoYyk7aWYodm9pZCAwIT09ZSl7Q2guZGVsZXRlKGMpO3ZhciBmPWIubWVtb2l6ZWRTdGF0ZTtkbyBmPWEoZixlLmFjdGlvbiksZT1lLm5leHQ7d2hpbGUobnVsbCE9PWUpO29mKGYsYi5tZW1vaXplZFN0YXRlKXx8KHdnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtiLmJhc2VVcGRhdGU9PT1jLmxhc3QmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWY7cmV0dXJuW2YsZF19fXJldHVybltiLm1lbW9pemVkU3RhdGUsZF19ZD1jLmxhc3Q7dmFyIGc9Yi5iYXNlVXBkYXRlO2Y9Yi5iYXNlU3RhdGU7bnVsbCE9PWc/KG51bGwhPT1kJiYoZC5uZXh0PW51bGwpLGQ9Zy5uZXh0KTpkPW51bGwhPT1kP2QubmV4dDpudWxsO2lmKG51bGwhPT1cbmQpe3ZhciBoPWU9bnVsbCxrPWQsbD0hMTtkb3t2YXIgbT1rLmV4cGlyYXRpb25UaW1lO208dGg/KGx8fChsPSEwLGg9ZyxlPWYpLG0+eWgmJih5aD1tLEpnKHloKSkpOihJZyhtLGsuc3VzcGVuc2VDb25maWcpLGY9ay5lYWdlclJlZHVjZXI9PT1hP2suZWFnZXJTdGF0ZTphKGYsay5hY3Rpb24pKTtnPWs7az1rLm5leHR9d2hpbGUobnVsbCE9PWsmJmshPT1kKTtsfHwoaD1nLGU9Zik7b2YoZixiLm1lbW9pemVkU3RhdGUpfHwod2c9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO2IuYmFzZVVwZGF0ZT1oO2IuYmFzZVN0YXRlPWU7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mfXJldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiBSaChhKXt2YXIgYj1OaCgpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17bGFzdDpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjpQaCxsYXN0UmVuZGVyZWRTdGF0ZTphfTthPWEuZGlzcGF0Y2g9U2guYmluZChudWxsLHVoLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19ZnVuY3Rpb24gVGgoYSl7cmV0dXJuIFFoKFBoLGEpfWZ1bmN0aW9uIFVoKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtudWxsPT09emg/KHpoPXtsYXN0RWZmZWN0Om51bGx9LHpoLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihiPXpoLmxhc3RFZmZlY3QsbnVsbD09PWI/emgubGFzdEVmZmVjdD1hLm5leHQ9YTooYz1iLm5leHQsYi5uZXh0PWEsYS5uZXh0PWMsemgubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBWaChhLGIsYyxkKXt2YXIgZT1OaCgpO0FofD1hO2UubWVtb2l6ZWRTdGF0ZT1VaChiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1mdW5jdGlvbiBXaChhLGIsYyxkKXt2YXIgZT1PaCgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJkhoKGQsZy5kZXBzKSl7VWgoMCxjLGYsZCk7cmV0dXJufX1BaHw9YTtlLm1lbW9pemVkU3RhdGU9VWgoYixjLGYsZCl9ZnVuY3Rpb24gWGgoYSxiKXtyZXR1cm4gVmgoNTE2LDE5MixhLGIpfWZ1bmN0aW9uIFloKGEsYil7cmV0dXJuIFdoKDUxNiwxOTIsYSxiKX1cbmZ1bmN0aW9uIFpoKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gJGgoKXt9ZnVuY3Rpb24gYWkoYSxiKXtOaCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfWZ1bmN0aW9uIGJpKGEsYil7dmFyIGM9T2goKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkhoKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gU2goYSxiLGMpe2lmKCEoMjU+R2gpKXRocm93IEVycm9yKHUoMzAxKSk7dmFyIGQ9YS5hbHRlcm5hdGU7aWYoYT09PXVofHxudWxsIT09ZCYmZD09PXVoKWlmKEJoPSEwLGE9e2V4cGlyYXRpb25UaW1lOnRoLHN1c3BlbnNlQ29uZmlnOm51bGwsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH0sbnVsbD09PUNoJiYoQ2g9bmV3IE1hcCksYz1DaC5nZXQoYiksdm9pZCAwPT09YylDaC5zZXQoYixhKTtlbHNle2ZvcihiPWM7bnVsbCE9PWIubmV4dDspYj1iLm5leHQ7Yi5uZXh0PWF9ZWxzZXt2YXIgZT1QZygpLGY9TWcuc3VzcGVuc2U7ZT1RZyhlLGEsZik7Zj17ZXhwaXJhdGlvblRpbWU6ZSxzdXNwZW5zZUNvbmZpZzpmLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O3ZhciBnPWIubGFzdDtpZihudWxsPT09ZylmLm5leHQ9ZjtlbHNle3ZhciBoPWcubmV4dDtudWxsIT09aCYmXG4oZi5uZXh0PWgpO2cubmV4dD1mfWIubGFzdD1mO2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lJiYobnVsbD09PWR8fDA9PT1kLmV4cGlyYXRpb25UaW1lKSYmKGQ9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1kKSl0cnl7dmFyIGs9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxsPWQoayxjKTtmLmVhZ2VyUmVkdWNlcj1kO2YuZWFnZXJTdGF0ZT1sO2lmKG9mKGwsaykpcmV0dXJufWNhdGNoKG0pe31maW5hbGx5e31SZyhhLGUpfX1cbnZhciBMaD17cmVhZENvbnRleHQ6eGcsdXNlQ2FsbGJhY2s6USx1c2VDb250ZXh0OlEsdXNlRWZmZWN0OlEsdXNlSW1wZXJhdGl2ZUhhbmRsZTpRLHVzZUxheW91dEVmZmVjdDpRLHVzZU1lbW86USx1c2VSZWR1Y2VyOlEsdXNlUmVmOlEsdXNlU3RhdGU6USx1c2VEZWJ1Z1ZhbHVlOlEsdXNlUmVzcG9uZGVyOlEsdXNlRGVmZXJyZWRWYWx1ZTpRLHVzZVRyYW5zaXRpb246UX0sSmg9e3JlYWRDb250ZXh0OnhnLHVzZUNhbGxiYWNrOmFpLHVzZUNvbnRleHQ6eGcsdXNlRWZmZWN0OlhoLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBWaCg0LDM2LFpoLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVmgoNCwzNixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9TmgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1cblthLGJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1OaCgpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT1kLnF1ZXVlPXtsYXN0Om51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07YT1hLmRpc3BhdGNoPVNoLmJpbmQobnVsbCx1aCxhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9TmgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX0sdXNlU3RhdGU6UmgsdXNlRGVidWdWYWx1ZTokaCx1c2VSZXNwb25kZXI6cmgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPVJoKGEpLGQ9Y1swXSxlPWNbMV07WGgoZnVuY3Rpb24oKXtxLnVuc3RhYmxlX25leHQoZnVuY3Rpb24oKXt2YXIgYz1OLnN1c3BlbnNlO04uc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtOLnN1c3BlbnNlPVxuY319KX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPVJoKCExKSxjPWJbMF0sZD1iWzFdO3JldHVyblthaShmdW5jdGlvbihiKXtkKCEwKTtxLnVuc3RhYmxlX25leHQoZnVuY3Rpb24oKXt2YXIgYz1OLnN1c3BlbnNlO04uc3VzcGVuc2U9dm9pZCAwPT09YT9udWxsOmE7dHJ5e2QoITEpLGIoKX1maW5hbGx5e04uc3VzcGVuc2U9Y319KX0sW2EsY10pLGNdfX0sS2g9e3JlYWRDb250ZXh0OnhnLHVzZUNhbGxiYWNrOmJpLHVzZUNvbnRleHQ6eGcsdXNlRWZmZWN0OlloLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBXaCg0LDM2LFpoLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gV2goNCwzNixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9T2goKTtiPXZvaWQgMD09PWI/XG5udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmSGgoYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6UWgsdXNlUmVmOmZ1bmN0aW9uKCl7cmV0dXJuIE9oKCkubWVtb2l6ZWRTdGF0ZX0sdXNlU3RhdGU6VGgsdXNlRGVidWdWYWx1ZTokaCx1c2VSZXNwb25kZXI6cmgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPVRoKGEpLGQ9Y1swXSxlPWNbMV07WWgoZnVuY3Rpb24oKXtxLnVuc3RhYmxlX25leHQoZnVuY3Rpb24oKXt2YXIgYz1OLnN1c3BlbnNlO04uc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtOLnN1c3BlbnNlPWN9fSl9LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj1UaCghMSksYz1iWzBdLGQ9YlsxXTtyZXR1cm5bYmkoZnVuY3Rpb24oYil7ZCghMCk7cS51bnN0YWJsZV9uZXh0KGZ1bmN0aW9uKCl7dmFyIGM9XG5OLnN1c3BlbnNlO04uc3VzcGVuc2U9dm9pZCAwPT09YT9udWxsOmE7dHJ5e2QoITEpLGIoKX1maW5hbGx5e04uc3VzcGVuc2U9Y319KX0sW2EsY10pLGNdfX0sY2k9bnVsbCxkaT1udWxsLGVpPSExO2Z1bmN0aW9uIGZpKGEsYil7dmFyIGM9Z2koNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31cbmZ1bmN0aW9uIGhpKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBpaShhKXtpZihlaSl7dmFyIGI9ZGk7aWYoYil7dmFyIGM9YjtpZighaGkoYSxiKSl7Yj1yZShjLm5leHRTaWJsaW5nKTtpZighYnx8IWhpKGEsYikpe2EuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDI7ZWk9ITE7Y2k9YTtyZXR1cm59ZmkoY2ksYyl9Y2k9YTtkaT1yZShiLmZpcnN0Q2hpbGQpfWVsc2UgYS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTEwMjV8MixlaT0hMSxjaT1hfX1mdW5jdGlvbiBqaShhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47Y2k9YX1cbmZ1bmN0aW9uIGtpKGEpe2lmKGEhPT1jaSlyZXR1cm4hMTtpZighZWkpcmV0dXJuIGppKGEpLGVpPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhb2UoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPWRpO2I7KWZpKGEsYiksYj1yZShiLm5leHRTaWJsaW5nKTtqaShhKTtpZigxMz09PWEudGFnKXthPWEubWVtb2l6ZWRTdGF0ZTthPW51bGwhPT1hP2EuZGVoeWRyYXRlZDpudWxsO2lmKCFhKXRocm93IEVycm9yKHUoMzE3KSk7YTp7YT1hLm5leHRTaWJsaW5nO2ZvcihiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoYz09PWllKXtpZigwPT09Yil7ZGk9cmUoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZSBjIT09aGUmJmMhPT1rZSYmYyE9PWplfHxiKyt9YT1hLm5leHRTaWJsaW5nfWRpPW51bGx9fWVsc2UgZGk9Y2k/cmUoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpOm51bGw7cmV0dXJuITB9XG5mdW5jdGlvbiBsaSgpe2RpPWNpPW51bGw7ZWk9ITF9dmFyIG1pPUVhLlJlYWN0Q3VycmVudE93bmVyLHdnPSExO2Z1bmN0aW9uIFIoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9naChiLG51bGwsYyxkKTpmaChiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBuaShhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7dmcoYixlKTtkPUloKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXdnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksb2koYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1IoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBwaShhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIXFpKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLHJpKGEsYixnLGQsZSxmKTthPWNoKGMudHlwZSxudWxsLGQsbnVsbCxiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZihlPGYmJihlPWcubWVtb2l6ZWRQcm9wcyxjPWMuY29tcGFyZSxjPW51bGwhPT1jP2M6cWYsYyhlLGQpJiZhLnJlZj09PWIucmVmKSlyZXR1cm4gb2koYSxiLGYpO2IuZWZmZWN0VGFnfD0xO2E9YWgoZyxkLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIHJpKGEsYixjLGQsZSxmKXtyZXR1cm4gbnVsbCE9PWEmJnFmKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZiYmKHdnPSExLGU8Zik/b2koYSxiLGYpOnNpKGEsYixjLGQsZil9ZnVuY3Rpb24gdGkoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiBzaShhLGIsYyxkLGUpe3ZhciBmPUwoYyk/RGY6Si5jdXJyZW50O2Y9RWYoYixmKTt2ZyhiLGUpO2M9SWgoYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhd2cpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSxvaShhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UihhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHVpKGEsYixjLGQsZSl7aWYoTChjKSl7dmFyIGY9ITA7SmYoYil9ZWxzZSBmPSExO3ZnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxVZyhiLGMsZCxlKSxXZyhiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD14ZyhsKToobD1MKGMpP0RmOkouY3VycmVudCxsPUVmKGIsbCkpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLEM9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO0N8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZWZyhiLGcsZCxsKTt5Zz0hMTt2YXIgeT1iLm1lbW9pemVkU3RhdGU7az1nLnN0YXRlPXk7dmFyIEg9Yi51cGRhdGVRdWV1ZTtudWxsIT09SCYmKEhnKGIsSCxkLGcsZSksaz1iLm1lbW9pemVkU3RhdGUpO2ghPT1kfHx5IT09a3x8Sy5jdXJyZW50fHx5Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihPZyhiLGMsbSxkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9eWd8fFRnKGIsYyxoLGQseSxrLGwpKT8oQ3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOm1nKGIudHlwZSxoKSxrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGUsXCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXhnKGwpOihsPUwoYyk/RGY6Si5jdXJyZW50LGw9RWYoYixsKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcywoQz1cblwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmVmcoYixnLGQsbCkseWc9ITEsaz1iLm1lbW9pemVkU3RhdGUseT1nLnN0YXRlPWssSD1iLnVwZGF0ZVF1ZXVlLG51bGwhPT1IJiYoSGcoYixILGQsZyxlKSx5PWIubWVtb2l6ZWRTdGF0ZSksaCE9PWR8fGshPT15fHxLLmN1cnJlbnR8fHlnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKE9nKGIsYyxtLGQpLHk9Yi5tZW1vaXplZFN0YXRlKSwobT15Z3x8VGcoYixjLGgsZCxrLHksbCkpPyhDfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8XG4oXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQseSxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHksbCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPVxuZCxiLm1lbW9pemVkU3RhdGU9eSksZy5wcm9wcz1kLGcuc3RhdGU9eSxnLmNvbnRleHQ9bCxkPW0pOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4gdmkoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gdmkoYSxiLGMsZCxlLGYpe3RpKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZLZihiLGMsITEpLG9pKGEsYixmKTtkPWIuc3RhdGVOb2RlO21pLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPWZoKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9ZmgoYixudWxsLGgsZikpOlIoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmS2YoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiB3aShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P0hmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJkhmKGEsYi5jb250ZXh0LCExKTttaChhLGIuY29udGFpbmVySW5mbyl9XG52YXIgeGk9e2RlaHlkcmF0ZWQ6bnVsbCxyZXRyeVRpbWU6MH07XG5mdW5jdGlvbiB5aShhLGIsYyl7dmFyIGQ9Yi5tb2RlLGU9Yi5wZW5kaW5nUHJvcHMsZj1NLmN1cnJlbnQsZz0hMSxoOyhoPTAhPT0oYi5lZmZlY3RUYWcmNjQpKXx8KGg9MCE9PShmJjIpJiYobnVsbD09PWF8fG51bGwhPT1hLm1lbW9pemVkU3RhdGUpKTtoPyhnPSEwLGIuZWZmZWN0VGFnJj0tNjUpOm51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlfHx2b2lkIDA9PT1lLmZhbGxiYWNrfHwhMD09PWUudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fChmfD0xKTtJKE0sZiYxLGIpO2lmKG51bGw9PT1hKXt2b2lkIDAhPT1lLmZhbGxiYWNrJiZpaShiKTtpZihnKXtnPWUuZmFsbGJhY2s7ZT1laChudWxsLGQsMCxudWxsKTtlLnJldHVybj1iO2lmKDA9PT0oYi5tb2RlJjIpKWZvcihhPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGUuY2hpbGQ9YTtudWxsIT09YTspYS5yZXR1cm49ZSxhPWEuc2libGluZztjPWVoKGcsZCxjLG51bGwpO2MucmV0dXJuPVxuYjtlLnNpYmxpbmc9YztiLm1lbW9pemVkU3RhdGU9eGk7Yi5jaGlsZD1lO3JldHVybiBjfWQ9ZS5jaGlsZHJlbjtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1naChiLG51bGwsZCxjKX1pZihudWxsIT09YS5tZW1vaXplZFN0YXRlKXthPWEuY2hpbGQ7ZD1hLnNpYmxpbmc7aWYoZyl7ZT1lLmZhbGxiYWNrO2M9YWgoYSxhLnBlbmRpbmdQcm9wcywwKTtjLnJldHVybj1iO2lmKDA9PT0oYi5tb2RlJjIpJiYoZz1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxnIT09YS5jaGlsZCkpZm9yKGMuY2hpbGQ9ZztudWxsIT09ZzspZy5yZXR1cm49YyxnPWcuc2libGluZztkPWFoKGQsZSxkLmV4cGlyYXRpb25UaW1lKTtkLnJldHVybj1iO2Muc2libGluZz1kO2MuY2hpbGRFeHBpcmF0aW9uVGltZT0wO2IubWVtb2l6ZWRTdGF0ZT14aTtiLmNoaWxkPWM7cmV0dXJuIGR9Yz1maChiLGEuY2hpbGQsZS5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9XG5udWxsO3JldHVybiBiLmNoaWxkPWN9YT1hLmNoaWxkO2lmKGcpe2c9ZS5mYWxsYmFjaztlPWVoKG51bGwsZCwwLG51bGwpO2UucmV0dXJuPWI7ZS5jaGlsZD1hO251bGwhPT1hJiYoYS5yZXR1cm49ZSk7aWYoMD09PShiLm1vZGUmMikpZm9yKGE9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZS5jaGlsZD1hO251bGwhPT1hOylhLnJldHVybj1lLGE9YS5zaWJsaW5nO2M9ZWgoZyxkLGMsbnVsbCk7Yy5yZXR1cm49YjtlLnNpYmxpbmc9YztjLmVmZmVjdFRhZ3w9MjtlLmNoaWxkRXhwaXJhdGlvblRpbWU9MDtiLm1lbW9pemVkU3RhdGU9eGk7Yi5jaGlsZD1lO3JldHVybiBjfWIubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPWZoKGIsYSxlLmNoaWxkcmVuLGMpfVxuZnVuY3Rpb24gemkoYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3VnKGEucmV0dXJuLGIpfWZ1bmN0aW9uIEFpKGEsYixjLGQsZSxmKXt2YXIgZz1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWc/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLGxhc3Q6ZCx0YWlsOmMsdGFpbEV4cGlyYXRpb246MCx0YWlsTW9kZTplLGxhc3RFZmZlY3Q6Zn06KGcuaXNCYWNrd2FyZHM9YixnLnJlbmRlcmluZz1udWxsLGcubGFzdD1kLGcudGFpbD1jLGcudGFpbEV4cGlyYXRpb249MCxnLnRhaWxNb2RlPWUsZy5sYXN0RWZmZWN0PWYpfVxuZnVuY3Rpb24gQmkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtSKGEsYixkLmNoaWxkcmVuLGMpO2Q9TS5jdXJyZW50O2lmKDAhPT0oZCYyKSlkPWQmMXwyLGIuZWZmZWN0VGFnfD02NDtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZWZmZWN0VGFnJjY0KSlhOmZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtpZigxMz09PWEudGFnKW51bGwhPT1hLm1lbW9pemVkU3RhdGUmJnppKGEsYyk7ZWxzZSBpZigxOT09PWEudGFnKXppKGEsYyk7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUkoTSxkLGIpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1xaChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO0FpKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PXFoKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX1BaShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6QWkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIG9pKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTt2YXIgZD1iLmV4cGlyYXRpb25UaW1lOzAhPT1kJiZKZyhkKTtpZihiLmNoaWxkRXhwaXJhdGlvblRpbWU8YylyZXR1cm4gbnVsbDtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IodSgxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9YWgoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9YWgoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfWZ1bmN0aW9uIENpKGEpe2EuZWZmZWN0VGFnfD00fXZhciBIaSxJaSxKaSxLaTtcbkhpPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtJaT1mdW5jdGlvbigpe307XG5KaT1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPWEubWVtb2l6ZWRQcm9wcztpZihmIT09ZCl7dmFyIGc9Yi5zdGF0ZU5vZGU7bGgoaWguY3VycmVudCk7YT1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpmPUFiKGcsZik7ZD1BYihnLGQpO2E9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9SWIoZyxmKTtkPUliKGcsZCk7YT1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Zj1uKHt9LGYse3ZhbHVlOnZvaWQgMH0pO2Q9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTthPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmY9S2IoZyxmKTtkPUtiKGcsZCk7YT1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBmLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihnLm9uY2xpY2s9YWUpfVlkKGMsZCk7dmFyIGgsaztjPW51bGw7Zm9yKGggaW4gZilpZighZC5oYXNPd25Qcm9wZXJ0eShoKSYmZi5oYXNPd25Qcm9wZXJ0eShoKSYmbnVsbCE9ZltoXSlpZihcInN0eWxlXCI9PT1cbmgpZm9yKGsgaW4gZz1mW2hdLGcpZy5oYXNPd25Qcm9wZXJ0eShrKSYmKGN8fChjPXt9KSxjW2tdPVwiXCIpO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1oJiZcImNoaWxkcmVuXCIhPT1oJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJlwiYXV0b0ZvY3VzXCIhPT1oJiYoaWEuaGFzT3duUHJvcGVydHkoaCk/YXx8KGE9W10pOihhPWF8fFtdKS5wdXNoKGgsbnVsbCkpO2ZvcihoIGluIGQpe3ZhciBsPWRbaF07Zz1udWxsIT1mP2ZbaF06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoaCkmJmwhPT1nJiYobnVsbCE9bHx8bnVsbCE9ZykpaWYoXCJzdHlsZVwiPT09aClpZihnKXtmb3IoayBpbiBnKSFnLmhhc093blByb3BlcnR5KGspfHxsJiZsLmhhc093blByb3BlcnR5KGspfHwoY3x8KGM9e30pLGNba109XCJcIik7Zm9yKGsgaW4gbClsLmhhc093blByb3BlcnR5KGspJiZnW2tdIT09bFtrXSYmKGN8fChjPXt9KSxcbmNba109bFtrXSl9ZWxzZSBjfHwoYXx8KGE9W10pLGEucHVzaChoLGMpKSxjPWw7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWg/KGw9bD9sLl9faHRtbDp2b2lkIDAsZz1nP2cuX19odG1sOnZvaWQgMCxudWxsIT1sJiZnIT09bCYmKGE9YXx8W10pLnB1c2goaCxcIlwiK2wpKTpcImNoaWxkcmVuXCI9PT1oP2c9PT1sfHxcInN0cmluZ1wiIT09dHlwZW9mIGwmJlwibnVtYmVyXCIhPT10eXBlb2YgbHx8KGE9YXx8W10pLnB1c2goaCxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmKGlhLmhhc093blByb3BlcnR5KGgpPyhudWxsIT1sJiYkZChlLGgpLGF8fGc9PT1sfHwoYT1bXSkpOihhPWF8fFtdKS5wdXNoKGgsbCkpfWMmJihhPWF8fFtdKS5wdXNoKFwic3R5bGVcIixjKTtlPWE7KGIudXBkYXRlUXVldWU9ZSkmJkNpKGIpfX07S2k9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJkNpKGIpfTtcbmZ1bmN0aW9uIExpKGEsYil7c3dpdGNoKGEudGFpbE1vZGUpe2Nhc2UgXCJoaWRkZW5cIjpiPWEudGFpbDtmb3IodmFyIGM9bnVsbDtudWxsIT09YjspbnVsbCE9PWIuYWx0ZXJuYXRlJiYoYz1iKSxiPWIuc2libGluZztudWxsPT09Yz9hLnRhaWw9bnVsbDpjLnNpYmxpbmc9bnVsbDticmVhaztjYXNlIFwiY29sbGFwc2VkXCI6Yz1hLnRhaWw7Zm9yKHZhciBkPW51bGw7bnVsbCE9PWM7KW51bGwhPT1jLmFsdGVybmF0ZSYmKGQ9YyksYz1jLnNpYmxpbmc7bnVsbD09PWQ/Ynx8bnVsbD09PWEudGFpbD9hLnRhaWw9bnVsbDphLnRhaWwuc2libGluZz1udWxsOmQuc2libGluZz1udWxsfX1cbmZ1bmN0aW9uIE1pKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkwoYS50eXBlKSYmRmYoYSk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImNDA5Nj8oYS5lZmZlY3RUYWc9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMzpuaChhKTtHZihhKTtiPWEuZWZmZWN0VGFnO2lmKDAhPT0oYiY2NCkpdGhyb3cgRXJyb3IodSgyODUpKTthLmVmZmVjdFRhZz1iJi00MDk3fDY0O3JldHVybiBhO2Nhc2UgNTpyZXR1cm4gcGgoYSksbnVsbDtjYXNlIDEzOnJldHVybiBHKE0sYSksYj1hLmVmZmVjdFRhZyxiJjQwOTY/KGEuZWZmZWN0VGFnPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBHKE0sYSksbnVsbDtjYXNlIDQ6cmV0dXJuIG5oKGEpLG51bGw7Y2FzZSAxMDpyZXR1cm4gdGcoYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1mdW5jdGlvbiBOaShhLGIpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOlhhKGIpfX1cbnZhciBPaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtmdW5jdGlvbiBQaShhLGIpe3ZhciBjPWIuc291cmNlLGQ9Yi5zdGFjaztudWxsPT09ZCYmbnVsbCE9PWMmJihkPVhhKGMpKTtudWxsIT09YyYmV2EoYy50eXBlKTtiPWIudmFsdWU7bnVsbCE9PWEmJjE9PT1hLnRhZyYmV2EoYS50eXBlKTt0cnl7Y29uc29sZS5lcnJvcihiKX1jYXRjaChlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZTt9KX19ZnVuY3Rpb24gUWkoYSxiKXt0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGMpe1JpKGEsYyl9fWZ1bmN0aW9uIFNpKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe1JpKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIFRpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlVpKDIsMCxiKTticmVhaztjYXNlIDE6aWYoYi5lZmZlY3RUYWcmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzptZyhiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifWJyZWFrO2Nhc2UgMzpjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgxNjMpKTt9fVxuZnVuY3Rpb24gVWkoYSxiLGMpe2M9Yy51cGRhdGVRdWV1ZTtjPW51bGwhPT1jP2MubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1jKXt2YXIgZD1jPWMubmV4dDtkb3tpZigwIT09KGQudGFnJmEpKXt2YXIgZT1kLmRlc3Ryb3k7ZC5kZXN0cm95PXZvaWQgMDt2b2lkIDAhPT1lJiZlKCl9MCE9PShkLnRhZyZiKSYmKGU9ZC5jcmVhdGUsZC5kZXN0cm95PWUoKSk7ZD1kLm5leHR9d2hpbGUoZCE9PWMpfX1cbmZ1bmN0aW9uIFZpKGEsYixjKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgV2kmJldpKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGQ9YS5uZXh0O2ZnKDk3PGM/OTc6YyxmdW5jdGlvbigpe3ZhciBhPWQ7ZG97dmFyIGM9YS5kZXN0cm95O2lmKHZvaWQgMCE9PWMpe3ZhciBnPWI7dHJ5e2MoKX1jYXRjaChoKXtSaShnLGgpfX1hPWEubmV4dH13aGlsZShhIT09ZCl9KX1icmVhaztjYXNlIDE6U2koYik7Yz1iLnN0YXRlTm9kZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5jb21wb25lbnRXaWxsVW5tb3VudCYmUWkoYixjKTticmVhaztjYXNlIDU6U2koYik7YnJlYWs7Y2FzZSA0OlhpKGEsYixjKX19XG5mdW5jdGlvbiBZaShhKXt2YXIgYj1hLmFsdGVybmF0ZTthLnJldHVybj1udWxsO2EuY2hpbGQ9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGw7YS5kZXBlbmRlbmNpZXM9bnVsbDthLmFsdGVybmF0ZT1udWxsO2EuZmlyc3RFZmZlY3Q9bnVsbDthLmxhc3RFZmZlY3Q9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO251bGwhPT1iJiZZaShiKX1mdW5jdGlvbiBaaShhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uICRpKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKFppKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn10aHJvdyBFcnJvcih1KDE2MCkpO31iPWMuc3RhdGVOb2RlO3N3aXRjaChjLnRhZyl7Y2FzZSA1OnZhciBkPSExO2JyZWFrO2Nhc2UgMzpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgxNjEpKTt9Yy5lZmZlY3RUYWcmMTYmJihUYihiLFwiXCIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8WmkoYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnJiYxOCE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmMiljb250aW51ZSBiO1xuaWYobnVsbD09PWMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1mb3IodmFyIGU9YTs7KXt2YXIgZj01PT09ZS50YWd8fDY9PT1lLnRhZztpZihmKXt2YXIgZz1mP2Uuc3RhdGVOb2RlOmUuc3RhdGVOb2RlLmluc3RhbmNlO2lmKGMpaWYoZCl7Zj1iO3ZhciBoPWc7Zz1jOzg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoaCxnKTpmLmluc2VydEJlZm9yZShoLGcpfWVsc2UgYi5pbnNlcnRCZWZvcmUoZyxjKTtlbHNlIGQ/KGg9Yiw4PT09aC5ub2RlVHlwZT8oZj1oLnBhcmVudE5vZGUsZi5pbnNlcnRCZWZvcmUoZyxoKSk6KGY9aCxmLmFwcGVuZENoaWxkKGcpKSxoPWguX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09aCYmdm9pZCAwIT09aHx8bnVsbCE9PWYub25jbGlja3x8KGYub25jbGljaz1hZSkpOmIuYXBwZW5kQ2hpbGQoZyl9ZWxzZSBpZig0IT09XG5lLnRhZyYmbnVsbCE9PWUuY2hpbGQpe2UuY2hpbGQucmV0dXJuPWU7ZT1lLmNoaWxkO2NvbnRpbnVlfWlmKGU9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWUuc2libGluZzspe2lmKG51bGw9PT1lLnJldHVybnx8ZS5yZXR1cm49PT1hKXJldHVybjtlPWUucmV0dXJufWUuc2libGluZy5yZXR1cm49ZS5yZXR1cm47ZT1lLnNpYmxpbmd9fVxuZnVuY3Rpb24gWGkoYSxiLGMpe2Zvcih2YXIgZD1iLGU9ITEsZixnOzspe2lmKCFlKXtlPWQucmV0dXJuO2E6Zm9yKDs7KXtpZihudWxsPT09ZSl0aHJvdyBFcnJvcih1KDE2MCkpO2Y9ZS5zdGF0ZU5vZGU7c3dpdGNoKGUudGFnKXtjYXNlIDU6Zz0hMTticmVhayBhO2Nhc2UgMzpmPWYuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGE7Y2FzZSA0OmY9Zi5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYX1lPWUucmV0dXJufWU9ITB9aWYoNT09PWQudGFnfHw2PT09ZC50YWcpe2E6Zm9yKHZhciBoPWEsaz1kLGw9YyxtPWs7OylpZihWaShoLG0sbCksbnVsbCE9PW0uY2hpbGQmJjQhPT1tLnRhZyltLmNoaWxkLnJldHVybj1tLG09bS5jaGlsZDtlbHNle2lmKG09PT1rKWJyZWFrO2Zvcig7bnVsbD09PW0uc2libGluZzspe2lmKG51bGw9PT1tLnJldHVybnx8bS5yZXR1cm49PT1rKWJyZWFrIGE7bT1tLnJldHVybn1tLnNpYmxpbmcucmV0dXJuPW0ucmV0dXJuO209bS5zaWJsaW5nfWc/KGg9XG5mLGs9ZC5zdGF0ZU5vZGUsOD09PWgubm9kZVR5cGU/aC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGspOmgucmVtb3ZlQ2hpbGQoaykpOmYucmVtb3ZlQ2hpbGQoZC5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWQudGFnKXtpZihudWxsIT09ZC5jaGlsZCl7Zj1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2c9ITA7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoVmkoYSxkLGMpLG51bGwhPT1kLmNoaWxkKXtkLmNoaWxkLnJldHVybj1kO2Q9ZC5jaGlsZDtjb250aW51ZX1pZihkPT09YilicmVhaztmb3IoO251bGw9PT1kLnNpYmxpbmc7KXtpZihudWxsPT09ZC5yZXR1cm58fGQucmV0dXJuPT09YilyZXR1cm47ZD1kLnJldHVybjs0PT09ZC50YWcmJihlPSExKX1kLnNpYmxpbmcucmV0dXJuPWQucmV0dXJuO2Q9ZC5zaWJsaW5nfX1cbmZ1bmN0aW9uIGFqKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6VWkoNCw4LGIpO2JyZWFrO2Nhc2UgMTpicmVhaztjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzLGU9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7YT1iLnR5cGU7dmFyIGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWYpe2NbdmVdPWQ7XCJpbnB1dFwiPT09YSYmXCJyYWRpb1wiPT09ZC50eXBlJiZudWxsIT1kLm5hbWUmJkNiKGMsZCk7WmQoYSxlKTtiPVpkKGEsZCk7Zm9yKGU9MDtlPGYubGVuZ3RoO2UrPTIpe3ZhciBnPWZbZV0saD1mW2UrMV07XCJzdHlsZVwiPT09Zz9XZChjLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/U2IoYyxoKTpcImNoaWxkcmVuXCI9PT1nP1RiKGMsaCk6dmIoYyxnLGgsYil9c3dpdGNoKGEpe2Nhc2UgXCJpbnB1dFwiOkViKGMsZCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6TWIoYyxcbmQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxjLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFkLm11bHRpcGxlLGE9ZC52YWx1ZSxudWxsIT1hP0piKGMsISFkLm11bHRpcGxlLGEsITEpOmIhPT0hIWQubXVsdGlwbGUmJihudWxsIT1kLmRlZmF1bHRWYWx1ZT9KYihjLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk6SmIoYywhIWQubXVsdGlwbGUsZC5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fX1icmVhaztjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wczticmVhaztjYXNlIDM6Yj1iLnN0YXRlTm9kZTtiLmh5ZHJhdGUmJihiLmh5ZHJhdGU9ITEsTGMoYi5jb250YWluZXJJbmZvKSk7YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmM9YjtudWxsPT09Yi5tZW1vaXplZFN0YXRlP2Q9ITE6KGQ9ITAsYz1iLmNoaWxkLGJqPWNnKCkpO1xuaWYobnVsbCE9PWMpYTpmb3IoYT1jOzspe2lmKDU9PT1hLnRhZylmPWEuc3RhdGVOb2RlLGQ/KGY9Zi5zdHlsZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5zZXRQcm9wZXJ0eT9mLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOmYuZGlzcGxheT1cIm5vbmVcIik6KGY9YS5zdGF0ZU5vZGUsZT1hLm1lbW9pemVkUHJvcHMuc3R5bGUsZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGwsZi5zdHlsZS5kaXNwbGF5PVZkKFwiZGlzcGxheVwiLGUpKTtlbHNlIGlmKDY9PT1hLnRhZylhLnN0YXRlTm9kZS5ub2RlVmFsdWU9ZD9cIlwiOmEubWVtb2l6ZWRQcm9wcztlbHNlIGlmKDEzPT09YS50YWcmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUmJm51bGw9PT1hLm1lbW9pemVkU3RhdGUuZGVoeWRyYXRlZCl7Zj1hLmNoaWxkLnNpYmxpbmc7Zi5yZXR1cm49YTthPWY7Y29udGludWV9ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49XG5hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YylicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1jKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWNqKGIpO2JyZWFrO2Nhc2UgMTk6Y2ooYik7YnJlYWs7Y2FzZSAxNzpicmVhaztjYXNlIDIwOmJyZWFrO2Nhc2UgMjE6YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDE2MykpO319ZnVuY3Rpb24gY2ooYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgT2kpO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1kai5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX12YXIgZWo9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7XG5mdW5jdGlvbiBmaihhLGIsYyl7Yz1CZyhjLG51bGwpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe2dqfHwoZ2o9ITAsaGo9ZCk7UGkoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBpaihhLGIsYyl7Yz1CZyhjLG51bGwpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtQaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09amo/amo9bmV3IFNldChbdGhpc10pOmpqLmFkZCh0aGlzKSxQaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY31cbnZhciBraj1NYXRoLmNlaWwsbGo9RWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixtaj1FYS5SZWFjdEN1cnJlbnRPd25lcixTPTAsbmo9OCxvaj0xNixwaj0zMixxaj0wLHJqPTEsc2o9Mix0aj0zLHVqPTQsdmo9NSxUPVMsVT1udWxsLFY9bnVsbCxXPTAsWD1xaix3aj1udWxsLHhqPTEwNzM3NDE4MjMseWo9MTA3Mzc0MTgyMyx6aj1udWxsLEFqPTAsQmo9ITEsYmo9MCxDaj01MDAsWT1udWxsLGdqPSExLGhqPW51bGwsamo9bnVsbCxEaj0hMSxFaj1udWxsLEZqPTkwLEdqPW51bGwsSGo9MCxJaj1udWxsLEpqPTA7ZnVuY3Rpb24gUGcoKXtyZXR1cm4oVCYob2p8cGopKSE9PVM/MTA3Mzc0MTgyMS0oY2coKS8xMHwwKTowIT09Smo/Smo6Smo9MTA3Mzc0MTgyMS0oY2coKS8xMHwwKX1cbmZ1bmN0aW9uIFFnKGEsYixjKXtiPWIubW9kZTtpZigwPT09KGImMikpcmV0dXJuIDEwNzM3NDE4MjM7dmFyIGQ9ZGcoKTtpZigwPT09KGImNCkpcmV0dXJuIDk5PT09ZD8xMDczNzQxODIzOjEwNzM3NDE4MjI7aWYoKFQmb2opIT09UylyZXR1cm4gVztpZihudWxsIT09YylhPWxnKGEsYy50aW1lb3V0TXN8MHx8NUUzLDI1MCk7ZWxzZSBzd2l0Y2goZCl7Y2FzZSA5OTphPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA5ODphPWxnKGEsMTUwLDEwMCk7YnJlYWs7Y2FzZSA5NzpjYXNlIDk2OmE9bGcoYSw1RTMsMjUwKTticmVhaztjYXNlIDk1OmE9MjticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzI2KSk7fW51bGwhPT1VJiZhPT09VyYmLS1hO3JldHVybiBhfVxuZnVuY3Rpb24gUmcoYSxiKXtpZig1MDxIail0aHJvdyBIaj0wLElqPW51bGwsRXJyb3IodSgxODUpKTthPUtqKGEsYik7aWYobnVsbCE9PWEpe3ZhciBjPWRnKCk7MTA3Mzc0MTgyMz09PWI/KFQmbmopIT09UyYmKFQmKG9qfHBqKSk9PT1TP0xqKGEpOihaKGEpLFQ9PT1TJiZqZygpKTpaKGEpOyhUJjQpPT09U3x8OTghPT1jJiY5OSE9PWN8fChudWxsPT09R2o/R2o9bmV3IE1hcChbW2EsYl1dKTooYz1Hai5nZXQoYSksKHZvaWQgMD09PWN8fGM+YikmJkdqLnNldChhLGIpKSl9fVxuZnVuY3Rpb24gS2ooYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBkPWEucmV0dXJuLGU9bnVsbDtpZihudWxsPT09ZCYmMz09PWEudGFnKWU9YS5zdGF0ZU5vZGU7ZWxzZSBmb3IoO251bGwhPT1kOyl7Yz1kLmFsdGVybmF0ZTtkLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGQuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7aWYobnVsbD09PWQucmV0dXJuJiYzPT09ZC50YWcpe2U9ZC5zdGF0ZU5vZGU7YnJlYWt9ZD1kLnJldHVybn1udWxsIT09ZSYmKFU9PT1lJiYoSmcoYiksWD09PXVqJiZNaihlLFcpKSxOaihlLGIpKTtyZXR1cm4gZX1cbmZ1bmN0aW9uIE9qKGEpe3ZhciBiPWEubGFzdEV4cGlyZWRUaW1lO2lmKDAhPT1iKXJldHVybiBiO2I9YS5maXJzdFBlbmRpbmdUaW1lO2lmKCFQaihhLGIpKXJldHVybiBiO2I9YS5sYXN0UGluZ2VkVGltZTthPWEubmV4dEtub3duUGVuZGluZ0xldmVsO3JldHVybiBiPmE/YjphfVxuZnVuY3Rpb24gWihhKXtpZigwIT09YS5sYXN0RXhwaXJlZFRpbWUpYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjMsYS5jYWxsYmFja1ByaW9yaXR5PTk5LGEuY2FsbGJhY2tOb2RlPWhnKExqLmJpbmQobnVsbCxhKSk7ZWxzZXt2YXIgYj1PaihhKSxjPWEuY2FsbGJhY2tOb2RlO2lmKDA9PT1iKW51bGwhPT1jJiYoYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MCxhLmNhbGxiYWNrUHJpb3JpdHk9OTApO2Vsc2V7dmFyIGQ9UGcoKTsxMDczNzQxODIzPT09Yj9kPTk5OjE9PT1ifHwyPT09Yj9kPTk1OihkPTEwKigxMDczNzQxODIxLWIpLTEwKigxMDczNzQxODIxLWQpLGQ9MD49ZD85OToyNTA+PWQ/OTg6NTI1MD49ZD85Nzo5NSk7aWYobnVsbCE9PWMpe3ZhciBlPWEuY2FsbGJhY2tQcmlvcml0eTtpZihhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9PT1iJiZlPj1kKXJldHVybjtjIT09WGYmJk5mKGMpfWEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT1cbmI7YS5jYWxsYmFja1ByaW9yaXR5PWQ7Yj0xMDczNzQxODIzPT09Yj9oZyhMai5iaW5kKG51bGwsYSkpOmdnKGQsUWouYmluZChudWxsLGEpLHt0aW1lb3V0OjEwKigxMDczNzQxODIxLWIpLWNnKCl9KTthLmNhbGxiYWNrTm9kZT1ifX19XG5mdW5jdGlvbiBRaihhLGIpe0pqPTA7aWYoYilyZXR1cm4gYj1QZygpLFJqKGEsYiksWihhKSxudWxsO3ZhciBjPU9qKGEpO2lmKDAhPT1jKXtiPWEuY2FsbGJhY2tOb2RlO2lmKChUJihvanxwaikpIT09Uyl0aHJvdyBFcnJvcih1KDMyNykpO1NqKCk7YT09PVUmJmM9PT1XfHxUaihhLGMpO2lmKG51bGwhPT1WKXt2YXIgZD1UO1R8PW9qO3ZhciBlPVVqKGEpO2RvIHRyeXtWaigpO2JyZWFrfWNhdGNoKGgpe1dqKGEsaCl9d2hpbGUoMSk7cmcoKTtUPWQ7bGouY3VycmVudD1lO2lmKFg9PT1yail0aHJvdyBiPXdqLFRqKGEsYyksTWooYSxjKSxaKGEpLGI7aWYobnVsbD09PVYpc3dpdGNoKGU9YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZSxhLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9YyxkPVgsVT1udWxsLGQpe2Nhc2UgcWo6Y2FzZSByajp0aHJvdyBFcnJvcih1KDM0NSkpO2Nhc2Ugc2o6UmooYSwyPGM/MjpjKTticmVhaztjYXNlIHRqOk1qKGEsYyk7ZD1hLmxhc3RTdXNwZW5kZWRUaW1lO1xuYz09PWQmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1YaihlKSk7aWYoMTA3Mzc0MTgyMz09PXhqJiYoZT1iaitDai1jZygpLDEwPGUpKXtpZihCail7dmFyIGY9YS5sYXN0UGluZ2VkVGltZTtpZigwPT09Znx8Zj49Yyl7YS5sYXN0UGluZ2VkVGltZT1jO1RqKGEsYyk7YnJlYWt9fWY9T2ooYSk7aWYoMCE9PWYmJmYhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1kO2JyZWFrfWEudGltZW91dEhhbmRsZT1wZShZai5iaW5kKG51bGwsYSksZSk7YnJlYWt9WWooYSk7YnJlYWs7Y2FzZSB1ajpNaihhLGMpO2Q9YS5sYXN0U3VzcGVuZGVkVGltZTtjPT09ZCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPVhqKGUpKTtpZihCaiYmKGU9YS5sYXN0UGluZ2VkVGltZSwwPT09ZXx8ZT49Yykpe2EubGFzdFBpbmdlZFRpbWU9YztUaihhLGMpO2JyZWFrfWU9T2ooYSk7aWYoMCE9PWUmJmUhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1cbmQ7YnJlYWt9MTA3Mzc0MTgyMyE9PXlqP2Q9MTAqKDEwNzM3NDE4MjEteWopLWNnKCk6MTA3Mzc0MTgyMz09PXhqP2Q9MDooZD0xMCooMTA3Mzc0MTgyMS14aiktNUUzLGU9Y2coKSxjPTEwKigxMDczNzQxODIxLWMpLWUsZD1lLWQsMD5kJiYoZD0wKSxkPSgxMjA+ZD8xMjA6NDgwPmQ/NDgwOjEwODA+ZD8xMDgwOjE5MjA+ZD8xOTIwOjNFMz5kPzNFMzo0MzIwPmQ/NDMyMDoxOTYwKmtqKGQvMTk2MCkpLWQsYzxkJiYoZD1jKSk7aWYoMTA8ZCl7YS50aW1lb3V0SGFuZGxlPXBlKFlqLmJpbmQobnVsbCxhKSxkKTticmVha31ZaihhKTticmVhaztjYXNlIHZqOmlmKDEwNzM3NDE4MjMhPT14aiYmbnVsbCE9PXpqKXtmPXhqO3ZhciBnPXpqO2Q9Zy5idXN5TWluRHVyYXRpb25Nc3wwOzA+PWQ/ZD0wOihlPWcuYnVzeURlbGF5TXN8MCxmPWNnKCktKDEwKigxMDczNzQxODIxLWYpLShnLnRpbWVvdXRNc3wwfHw1RTMpKSxkPWY8PWU/MDplK2QtZik7aWYoMTA8ZCl7TWooYSxjKTthLnRpbWVvdXRIYW5kbGU9XG5wZShZai5iaW5kKG51bGwsYSksZCk7YnJlYWt9fVlqKGEpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMjkpKTt9WihhKTtpZihhLmNhbGxiYWNrTm9kZT09PWIpcmV0dXJuIFFqLmJpbmQobnVsbCxhKX19cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBMaihhKXt2YXIgYj1hLmxhc3RFeHBpcmVkVGltZTtiPTAhPT1iP2I6MTA3Mzc0MTgyMztpZihhLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9PT1iKVlqKGEpO2Vsc2V7aWYoKFQmKG9qfHBqKSkhPT1TKXRocm93IEVycm9yKHUoMzI3KSk7U2ooKTthPT09VSYmYj09PVd8fFRqKGEsYik7aWYobnVsbCE9PVYpe3ZhciBjPVQ7VHw9b2o7dmFyIGQ9VWooYSk7ZG8gdHJ5e1pqKCk7YnJlYWt9Y2F0Y2goZSl7V2ooYSxlKX13aGlsZSgxKTtyZygpO1Q9Yztsai5jdXJyZW50PWQ7aWYoWD09PXJqKXRocm93IGM9d2osVGooYSxiKSxNaihhLGIpLFooYSksYztpZihudWxsIT09Vil0aHJvdyBFcnJvcih1KDI2MSkpO2EuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPWI7VT1udWxsO1lqKGEpO1ooYSl9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gYWsoKXtpZihudWxsIT09R2ope3ZhciBhPUdqO0dqPW51bGw7YS5mb3JFYWNoKGZ1bmN0aW9uKGEsYyl7UmooYyxhKTtaKGMpfSk7amcoKX19ZnVuY3Rpb24gYmsoYSxiKXt2YXIgYz1UO1R8PTE7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7VD1jLFQ9PT1TJiZqZygpfX1mdW5jdGlvbiBjayhhLGIpe3ZhciBjPVQ7VCY9LTI7VHw9bmo7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7VD1jLFQ9PT1TJiZqZygpfX1cbmZ1bmN0aW9uIFRqKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLHFlKGMpKTtpZihudWxsIT09Vilmb3IoYz1WLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7c3dpdGNoKGQudGFnKXtjYXNlIDE6dmFyIGU9ZC50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1lJiZ2b2lkIDAhPT1lJiZGZihkKTticmVhaztjYXNlIDM6bmgoZCk7R2YoZCk7YnJlYWs7Y2FzZSA1OnBoKGQpO2JyZWFrO2Nhc2UgNDpuaChkKTticmVhaztjYXNlIDEzOkcoTSxkKTticmVhaztjYXNlIDE5OkcoTSxkKTticmVhaztjYXNlIDEwOnRnKGQpfWM9Yy5yZXR1cm59VT1hO1Y9YWgoYS5jdXJyZW50LG51bGwsYik7Vz1iO1g9cWo7d2o9bnVsbDt5aj14aj0xMDczNzQxODIzO3pqPW51bGw7QWo9MDtCaj0hMX1cbmZ1bmN0aW9uIFdqKGEsYil7ZG97dHJ5e3JnKCk7TWgoKTtpZihudWxsPT09Vnx8bnVsbD09PVYucmV0dXJuKXJldHVybiBYPXJqLHdqPWIsbnVsbDthOnt2YXIgYz1hLGQ9Vi5yZXR1cm4sZT1WLGY9YjtiPVc7ZS5lZmZlY3RUYWd8PTIwNDg7ZS5maXJzdEVmZmVjdD1lLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09ZiYmXCJvYmplY3RcIj09PXR5cGVvZiBmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi50aGVuKXt2YXIgZz1mLGg9MCE9PShNLmN1cnJlbnQmMSksaz1kO2Rve3ZhciBsO2lmKGw9MTM9PT1rLnRhZyl7dmFyIG09ay5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1tKWw9bnVsbCE9PW0uZGVoeWRyYXRlZD8hMDohMTtlbHNle3ZhciBDPWsubWVtb2l6ZWRQcm9wcztsPXZvaWQgMD09PUMuZmFsbGJhY2s/ITE6ITAhPT1DLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrPyEwOmg/ITE6ITB9fWlmKGwpe3ZhciB5PWsudXBkYXRlUXVldWU7aWYobnVsbD09PXkpe3ZhciBIPW5ldyBTZXQ7XG5ILmFkZChnKTtrLnVwZGF0ZVF1ZXVlPUh9ZWxzZSB5LmFkZChnKTtpZigwPT09KGsubW9kZSYyKSl7ay5lZmZlY3RUYWd8PTY0O2UuZWZmZWN0VGFnJj0tMjk4MTtpZigxPT09ZS50YWcpaWYobnVsbD09PWUuYWx0ZXJuYXRlKWUudGFnPTE3O2Vsc2V7dmFyIHo9QmcoMTA3Mzc0MTgyMyxudWxsKTt6LnRhZz0yO0RnKGUseil9ZS5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO2JyZWFrIGF9Zj12b2lkIDA7ZT1iO3ZhciB0YT1jLnBpbmdDYWNoZTtudWxsPT09dGE/KHRhPWMucGluZ0NhY2hlPW5ldyBlaixmPW5ldyBTZXQsdGEuc2V0KGcsZikpOihmPXRhLmdldChnKSx2b2lkIDA9PT1mJiYoZj1uZXcgU2V0LHRhLnNldChnLGYpKSk7aWYoIWYuaGFzKGUpKXtmLmFkZChlKTt2YXIgcj1kay5iaW5kKG51bGwsYyxnLGUpO2cudGhlbihyLHIpfWsuZWZmZWN0VGFnfD00MDk2O2suZXhwaXJhdGlvblRpbWU9YjticmVhayBhfWs9ay5yZXR1cm59d2hpbGUobnVsbCE9PWspO2Y9RXJyb3IoKFdhKGUudHlwZSl8fFxuXCJBIFJlYWN0IGNvbXBvbmVudFwiKStcIiBzdXNwZW5kZWQgd2hpbGUgcmVuZGVyaW5nLCBidXQgbm8gZmFsbGJhY2sgVUkgd2FzIHNwZWNpZmllZC5cXG5cXG5BZGQgYSA8U3VzcGVuc2UgZmFsbGJhY2s9Li4uPiBjb21wb25lbnQgaGlnaGVyIGluIHRoZSB0cmVlIHRvIHByb3ZpZGUgYSBsb2FkaW5nIGluZGljYXRvciBvciBwbGFjZWhvbGRlciB0byBkaXNwbGF5LlwiK1hhKGUpKX1YIT09dmomJihYPXNqKTtmPU5pKGYsZSk7az1kO2Rve3N3aXRjaChrLnRhZyl7Y2FzZSAzOmc9ZjtrLmVmZmVjdFRhZ3w9NDA5NjtrLmV4cGlyYXRpb25UaW1lPWI7dmFyIHg9ZmooayxnLGIpO0VnKGsseCk7YnJlYWsgYTtjYXNlIDE6Zz1mO3ZhciBBPWsudHlwZSxwPWsuc3RhdGVOb2RlO2lmKDA9PT0oay5lZmZlY3RUYWcmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEEuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09cCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHAuY29tcG9uZW50RGlkQ2F0Y2gmJlxuKG51bGw9PT1qanx8IWpqLmhhcyhwKSkpKXtrLmVmZmVjdFRhZ3w9NDA5NjtrLmV4cGlyYXRpb25UaW1lPWI7dmFyIHQ9aWooayxnLGIpO0VnKGssdCk7YnJlYWsgYX19az1rLnJldHVybn13aGlsZShudWxsIT09ayl9Vj1layhWKX1jYXRjaCh2KXtiPXY7Y29udGludWV9YnJlYWt9d2hpbGUoMSl9ZnVuY3Rpb24gVWooKXt2YXIgYT1sai5jdXJyZW50O2xqLmN1cnJlbnQ9TGg7cmV0dXJuIG51bGw9PT1hP0xoOmF9ZnVuY3Rpb24gSWcoYSxiKXthPHhqJiYyPGEmJih4aj1hKTtudWxsIT09YiYmYTx5aiYmMjxhJiYoeWo9YSx6aj1iKX1mdW5jdGlvbiBKZyhhKXthPkFqJiYoQWo9YSl9ZnVuY3Rpb24gWmooKXtmb3IoO251bGwhPT1WOylWPWZrKFYpfWZ1bmN0aW9uIFZqKCl7Zm9yKDtudWxsIT09ViYmIU9mKCk7KVY9ZmsoVil9XG5mdW5jdGlvbiBmayhhKXt2YXIgYj1nayhhLmFsdGVybmF0ZSxhLFcpO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09YiYmKGI9ZWsoYSkpO21qLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIGVrKGEpe1Y9YTtkb3t2YXIgYj1WLmFsdGVybmF0ZTthPVYucmV0dXJuO2lmKDA9PT0oVi5lZmZlY3RUYWcmMjA0OCkpe2E6e3ZhciBjPWI7Yj1WO3ZhciBkPVc7dmFyIGU9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6YnJlYWs7Y2FzZSAxNjpicmVhaztjYXNlIDE1OmNhc2UgMDpicmVhaztjYXNlIDE6TChiLnR5cGUpJiZGZihiKTticmVhaztjYXNlIDM6bmgoYik7R2YoYik7ZT1iLnN0YXRlTm9kZTtlLnBlbmRpbmdDb250ZXh0JiYoZS5jb250ZXh0PWUucGVuZGluZ0NvbnRleHQsZS5wZW5kaW5nQ29udGV4dD1udWxsKTsobnVsbD09PWN8fG51bGw9PT1jLmNoaWxkKSYma2koYikmJkNpKGIpO0lpKGIpO2JyZWFrO2Nhc2UgNTpwaChiKTtkPWxoKGtoLmN1cnJlbnQpO3ZhciBmPWIudHlwZTtpZihudWxsIT09YyYmbnVsbCE9Yi5zdGF0ZU5vZGUpSmkoYyxiLGYsZSxkKSxjLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCk7ZWxzZSBpZihlKXt2YXIgZz1cbmxoKGloLmN1cnJlbnQpO2lmKGtpKGIpKXtlPWI7dmFyIGg9ZS5zdGF0ZU5vZGU7Yz1lLnR5cGU7dmFyIGs9ZS5tZW1vaXplZFByb3BzLGw9ZDtoW3VlXT1lO2hbdmVdPWs7Zj12b2lkIDA7ZD1oO3N3aXRjaChjKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkYoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGg9MDtoPGNjLmxlbmd0aDtoKyspRihjY1toXSxkKTticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsZCk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RihcImVycm9yXCIsZCk7RihcImxvYWRcIixkKTticmVhaztjYXNlIFwiZm9ybVwiOkYoXCJyZXNldFwiLGQpO0YoXCJzdWJtaXRcIixkKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixkKTticmVhaztjYXNlIFwiaW5wdXRcIjpCYihkLGspO0YoXCJpbnZhbGlkXCIsZCk7JGQobCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFrLm11bHRpcGxlfTtGKFwiaW52YWxpZFwiLGQpOyRkKGwsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpMYihkLGspLEYoXCJpbnZhbGlkXCIsZCksJGQobCxcIm9uQ2hhbmdlXCIpfVlkKGMsayk7aD1udWxsO2ZvcihmIGluIGspay5oYXNPd25Qcm9wZXJ0eShmKSYmKGc9a1tmXSxcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2YgZz9kLnRleHRDb250ZW50IT09ZyYmKGg9W1wiY2hpbGRyZW5cIixnXSk6XCJudW1iZXJcIj09PXR5cGVvZiBnJiZkLnRleHRDb250ZW50IT09XCJcIitnJiYoaD1bXCJjaGlsZHJlblwiLFwiXCIrZ10pOmlhLmhhc093blByb3BlcnR5KGYpJiZudWxsIT1nJiYkZChsLGYpKTtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6eWIoZCk7R2IoZCxrLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjp5YihkKTtOYihkLGspO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay5vbkNsaWNrJiZcbihkLm9uY2xpY2s9YWUpfWY9aDtlLnVwZGF0ZVF1ZXVlPWY7ZT1udWxsIT09Zj8hMDohMTtlJiZDaShiKX1lbHNle2M9YjtsPWY7az1lO2g9OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQ7Zz09PU9iLmh0bWwmJihnPVBiKGwpKTtnPT09T2IuaHRtbD9cInNjcmlwdFwiPT09bD8oaz1oLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksay5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixoPWsucmVtb3ZlQ2hpbGQoay5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBrLmlzP2g9aC5jcmVhdGVFbGVtZW50KGwse2lzOmsuaXN9KTooaD1oLmNyZWF0ZUVsZW1lbnQobCksXCJzZWxlY3RcIj09PWwmJihsPWgsay5tdWx0aXBsZT9sLm11bHRpcGxlPSEwOmsuc2l6ZSYmKGwuc2l6ZT1rLnNpemUpKSk6aD1oLmNyZWF0ZUVsZW1lbnROUyhnLGwpO2s9aDtrW3VlXT1jO2tbdmVdPWU7SGkoayxiLCExLCExKTtiLnN0YXRlTm9kZT1rO2w9ZjtjPWU7dmFyIG09ZCxDPVpkKGwsYyk7c3dpdGNoKGwpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RihcImxvYWRcIixcbmspO2Q9YzticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZD0wO2Q8Y2MubGVuZ3RoO2QrKylGKGNjW2RdLGspO2Q9YzticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsayk7ZD1jO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLGspO0YoXCJsb2FkXCIsayk7ZD1jO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RihcInJlc2V0XCIsayk7RihcInN1Ym1pdFwiLGspO2Q9YzticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixrKTtkPWM7YnJlYWs7Y2FzZSBcImlucHV0XCI6QmIoayxjKTtkPUFiKGssYyk7RihcImludmFsaWRcIixrKTskZChtLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmQ9SWIoayxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6ay5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWMubXVsdGlwbGV9O2Q9bih7fSxjLHt2YWx1ZTp2b2lkIDB9KTtGKFwiaW52YWxpZFwiLGspOyRkKG0sXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpMYihrLFxuYyk7ZD1LYihrLGMpO0YoXCJpbnZhbGlkXCIsayk7JGQobSxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6ZD1jfVlkKGwsZCk7aD12b2lkIDA7Zz1sO3ZhciB5PWssSD1kO2ZvcihoIGluIEgpaWYoSC5oYXNPd25Qcm9wZXJ0eShoKSl7dmFyIHo9SFtoXTtcInN0eWxlXCI9PT1oP1dkKHkseik6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09aD8oej16P3ouX19odG1sOnZvaWQgMCxudWxsIT16JiZTYih5LHopKTpcImNoaWxkcmVuXCI9PT1oP1wic3RyaW5nXCI9PT10eXBlb2Ygej8oXCJ0ZXh0YXJlYVwiIT09Z3x8XCJcIiE9PXopJiZUYih5LHopOlwibnVtYmVyXCI9PT10eXBlb2YgeiYmVGIoeSxcIlwiK3opOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmXCJhdXRvRm9jdXNcIiE9PWgmJihpYS5oYXNPd25Qcm9wZXJ0eShoKT9udWxsIT16JiYkZChtLGgpOm51bGwhPXomJnZiKHksaCx6LEMpKX1zd2l0Y2gobCl7Y2FzZSBcImlucHV0XCI6eWIoayk7XG5HYihrLGMsITEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnliKGspO05iKGssYyk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWMudmFsdWUmJmsuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK3ViKGMudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZD1rO2QubXVsdGlwbGU9ISFjLm11bHRpcGxlO2s9Yy52YWx1ZTtudWxsIT1rP0piKGQsISFjLm11bHRpcGxlLGssITEpOm51bGwhPWMuZGVmYXVsdFZhbHVlJiZKYihkLCEhYy5tdWx0aXBsZSxjLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoay5vbmNsaWNrPWFlKX0oZT1uZShmLGUpKSYmQ2koYil9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9ZWxzZSBpZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjYpKTticmVhaztjYXNlIDY6aWYoYyYmbnVsbCE9Yi5zdGF0ZU5vZGUpS2koYyxiLGMubWVtb2l6ZWRQcm9wcyxlKTtlbHNle2lmKFwic3RyaW5nXCIhPT1cbnR5cGVvZiBlJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjYpKTtkPWxoKGtoLmN1cnJlbnQpO2xoKGloLmN1cnJlbnQpO2tpKGIpPyhlPWIsZj1lLnN0YXRlTm9kZSxkPWUubWVtb2l6ZWRQcm9wcyxmW3VlXT1lLChlPWYubm9kZVZhbHVlIT09ZCkmJkNpKGIpKTooZj1iLGU9KDk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShlKSxlW3VlXT1mLGIuc3RhdGVOb2RlPWUpfWJyZWFrO2Nhc2UgMTE6YnJlYWs7Y2FzZSAxMzpHKE0sYik7ZT1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpe2IuZXhwaXJhdGlvblRpbWU9ZDticmVhayBhfWU9bnVsbCE9PWU7Zj0hMTtudWxsPT09Yz92b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMuZmFsbGJhY2smJmtpKGIpOihkPWMubWVtb2l6ZWRTdGF0ZSxmPW51bGwhPT1kLGV8fG51bGw9PT1kfHwoZD1jLmNoaWxkLnNpYmxpbmcsbnVsbCE9PWQmJihrPWIuZmlyc3RFZmZlY3QsXG5udWxsIT09az8oYi5maXJzdEVmZmVjdD1kLGQubmV4dEVmZmVjdD1rKTooYi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9ZCxkLm5leHRFZmZlY3Q9bnVsbCksZC5lZmZlY3RUYWc9OCkpKTtpZihlJiYhZiYmMCE9PShiLm1vZGUmMikpaWYobnVsbD09PWMmJiEwIT09Yi5tZW1vaXplZFByb3BzLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwwIT09KE0uY3VycmVudCYxKSlYPT09cWomJihYPXRqKTtlbHNle2lmKFg9PT1xanx8WD09PXRqKVg9dWo7MCE9PUFqJiZudWxsIT09VSYmKE1qKFUsVyksTmooVSxBaikpfWlmKGV8fGYpYi5lZmZlY3RUYWd8PTQ7YnJlYWs7Y2FzZSA3OmJyZWFrO2Nhc2UgODpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgNDpuaChiKTtJaShiKTticmVhaztjYXNlIDEwOnRnKGIpO2JyZWFrO2Nhc2UgOTpicmVhaztjYXNlIDE0OmJyZWFrO2Nhc2UgMTc6TChiLnR5cGUpJiZGZihiKTticmVhaztjYXNlIDE5OkcoTSxiKTtlPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09XG5lKWJyZWFrO2Y9MCE9PShiLmVmZmVjdFRhZyY2NCk7az1lLnJlbmRlcmluZztpZihudWxsPT09aylpZihmKUxpKGUsITEpO2Vsc2V7aWYoWCE9PXFqfHxudWxsIT09YyYmMCE9PShjLmVmZmVjdFRhZyY2NCkpZm9yKGM9Yi5jaGlsZDtudWxsIT09Yzspe2s9cWgoYyk7aWYobnVsbCE9PWspe2IuZWZmZWN0VGFnfD02NDtMaShlLCExKTtmPWsudXBkYXRlUXVldWU7bnVsbCE9PWYmJihiLnVwZGF0ZVF1ZXVlPWYsYi5lZmZlY3RUYWd8PTQpO251bGw9PT1lLmxhc3RFZmZlY3QmJihiLmZpcnN0RWZmZWN0PW51bGwpO2IubGFzdEVmZmVjdD1lLmxhc3RFZmZlY3Q7ZT1kO2ZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KWQ9ZixjPWUsZC5lZmZlY3RUYWcmPTIsZC5uZXh0RWZmZWN0PW51bGwsZC5maXJzdEVmZmVjdD1udWxsLGQubGFzdEVmZmVjdD1udWxsLGs9ZC5hbHRlcm5hdGUsbnVsbD09PWs/KGQuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGQuZXhwaXJhdGlvblRpbWU9YyxkLmNoaWxkPW51bGwsXG5kLm1lbW9pemVkUHJvcHM9bnVsbCxkLm1lbW9pemVkU3RhdGU9bnVsbCxkLnVwZGF0ZVF1ZXVlPW51bGwsZC5kZXBlbmRlbmNpZXM9bnVsbCk6KGQuY2hpbGRFeHBpcmF0aW9uVGltZT1rLmNoaWxkRXhwaXJhdGlvblRpbWUsZC5leHBpcmF0aW9uVGltZT1rLmV4cGlyYXRpb25UaW1lLGQuY2hpbGQ9ay5jaGlsZCxkLm1lbW9pemVkUHJvcHM9ay5tZW1vaXplZFByb3BzLGQubWVtb2l6ZWRTdGF0ZT1rLm1lbW9pemVkU3RhdGUsZC51cGRhdGVRdWV1ZT1rLnVwZGF0ZVF1ZXVlLGM9ay5kZXBlbmRlbmNpZXMsZC5kZXBlbmRlbmNpZXM9bnVsbD09PWM/bnVsbDp7ZXhwaXJhdGlvblRpbWU6Yy5leHBpcmF0aW9uVGltZSxmaXJzdENvbnRleHQ6Yy5maXJzdENvbnRleHQscmVzcG9uZGVyczpjLnJlc3BvbmRlcnN9KSxmPWYuc2libGluZztJKE0sTS5jdXJyZW50JjF8MixiKTtiPWIuY2hpbGQ7YnJlYWsgYX1jPWMuc2libGluZ319ZWxzZXtpZighZilpZihjPXFoKGspLG51bGwhPT1jKXtpZihiLmVmZmVjdFRhZ3w9XG42NCxmPSEwLGQ9Yy51cGRhdGVRdWV1ZSxudWxsIT09ZCYmKGIudXBkYXRlUXVldWU9ZCxiLmVmZmVjdFRhZ3w9NCksTGkoZSwhMCksbnVsbD09PWUudGFpbCYmXCJoaWRkZW5cIj09PWUudGFpbE1vZGUmJiFrLmFsdGVybmF0ZSl7Yj1iLmxhc3RFZmZlY3Q9ZS5sYXN0RWZmZWN0O251bGwhPT1iJiYoYi5uZXh0RWZmZWN0PW51bGwpO2JyZWFrfX1lbHNlIGNnKCk+ZS50YWlsRXhwaXJhdGlvbiYmMTxkJiYoYi5lZmZlY3RUYWd8PTY0LGY9ITAsTGkoZSwhMSksYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9ZC0xKTtlLmlzQmFja3dhcmRzPyhrLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWspOihkPWUubGFzdCxudWxsIT09ZD9kLnNpYmxpbmc9azpiLmNoaWxkPWssZS5sYXN0PWspfWlmKG51bGwhPT1lLnRhaWwpezA9PT1lLnRhaWxFeHBpcmF0aW9uJiYoZS50YWlsRXhwaXJhdGlvbj1jZygpKzUwMCk7ZD1lLnRhaWw7ZS5yZW5kZXJpbmc9ZDtlLnRhaWw9ZC5zaWJsaW5nO1xuZS5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdDtkLnNpYmxpbmc9bnVsbDtlPU0uY3VycmVudDtlPWY/ZSYxfDI6ZSYxO0koTSxlLGIpO2I9ZDticmVhayBhfWJyZWFrO2Nhc2UgMjA6YnJlYWs7Y2FzZSAyMTpicmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMTU2LGIudGFnKSk7fWI9bnVsbH1lPVY7aWYoMT09PVd8fDEhPT1lLmNoaWxkRXhwaXJhdGlvblRpbWUpe2Y9MDtmb3IoZD1lLmNoaWxkO251bGwhPT1kOyljPWQuZXhwaXJhdGlvblRpbWUsaz1kLmNoaWxkRXhwaXJhdGlvblRpbWUsYz5mJiYoZj1jKSxrPmYmJihmPWspLGQ9ZC5zaWJsaW5nO2UuY2hpbGRFeHBpcmF0aW9uVGltZT1mfWlmKG51bGwhPT1iKXJldHVybiBiO251bGwhPT1hJiYwPT09KGEuZWZmZWN0VGFnJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PVYuZmlyc3RFZmZlY3QpLG51bGwhPT1WLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9XG5WLmZpcnN0RWZmZWN0KSxhLmxhc3RFZmZlY3Q9Vi5sYXN0RWZmZWN0KSwxPFYuZWZmZWN0VGFnJiYobnVsbCE9PWEubGFzdEVmZmVjdD9hLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1WOmEuZmlyc3RFZmZlY3Q9VixhLmxhc3RFZmZlY3Q9VikpfWVsc2V7Yj1NaShWLFcpO2lmKG51bGwhPT1iKXJldHVybiBiLmVmZmVjdFRhZyY9MjA0NyxiO251bGwhPT1hJiYoYS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9bnVsbCxhLmVmZmVjdFRhZ3w9MjA0OCl9Yj1WLnNpYmxpbmc7aWYobnVsbCE9PWIpcmV0dXJuIGI7Vj1hfXdoaWxlKG51bGwhPT1WKTtYPT09cWomJihYPXZqKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBYaihhKXt2YXIgYj1hLmV4cGlyYXRpb25UaW1lO2E9YS5jaGlsZEV4cGlyYXRpb25UaW1lO3JldHVybiBiPmE/YjphfWZ1bmN0aW9uIFlqKGEpe3ZhciBiPWRnKCk7ZmcoOTksaWsuYmluZChudWxsLGEsYikpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gaWsoYSxiKXtkbyBTaigpO3doaWxlKG51bGwhPT1Faik7aWYoKFQmKG9qfHBqKSkhPT1TKXRocm93IEVycm9yKHUoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcmssZD1hLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHUoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDthLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MDthLmNhbGxiYWNrUHJpb3JpdHk9OTA7YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDt2YXIgZT1YaihjKTthLmZpcnN0UGVuZGluZ1RpbWU9ZTtkPD1hLmxhc3RTdXNwZW5kZWRUaW1lP2EuZmlyc3RTdXNwZW5kZWRUaW1lPWEubGFzdFN1c3BlbmRlZFRpbWU9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDpkPD1hLmZpcnN0U3VzcGVuZGVkVGltZSYmKGEuZmlyc3RTdXNwZW5kZWRUaW1lPVxuZC0xKTtkPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtkPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApO2E9PT1VJiYoVj1VPW51bGwsVz0wKTsxPGMuZWZmZWN0VGFnP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZT1jLmZpcnN0RWZmZWN0KTplPWM6ZT1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1lKXt2YXIgZj1UO1R8PXBqO21qLmN1cnJlbnQ9bnVsbDtsZT1MZDt2YXIgZz1mZSgpO2lmKGdlKGcpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBnKXZhciBoPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntoPShoPWcub3duZXJEb2N1bWVudCkmJmguZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgaz1oLmdldFNlbGVjdGlvbiYmaC5nZXRTZWxlY3Rpb24oKTtpZihrJiYwIT09ay5yYW5nZUNvdW50KXtoPWsuYW5jaG9yTm9kZTt2YXIgbD1rLmFuY2hvck9mZnNldCxcbm09ay5mb2N1c05vZGU7az1rLmZvY3VzT2Zmc2V0O3RyeXtoLm5vZGVUeXBlLG0ubm9kZVR5cGV9Y2F0Y2goRGIpe2g9bnVsbDticmVhayBhfXZhciBDPTAseT0tMSxIPS0xLHo9MCx0YT0wLHI9Zyx4PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgQTs7KXtyIT09aHx8MCE9PWwmJjMhPT1yLm5vZGVUeXBlfHwoeT1DK2wpO3IhPT1tfHwwIT09ayYmMyE9PXIubm9kZVR5cGV8fChIPUMrayk7Mz09PXIubm9kZVR5cGUmJihDKz1yLm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0oQT1yLmZpcnN0Q2hpbGQpKWJyZWFrO3g9cjtyPUF9Zm9yKDs7KXtpZihyPT09ZylicmVhayBiO3g9PT1oJiYrK3o9PT1sJiYoeT1DKTt4PT09bSYmKyt0YT09PWsmJihIPUMpO2lmKG51bGwhPT0oQT1yLm5leHRTaWJsaW5nKSlicmVhaztyPXg7eD1yLnBhcmVudE5vZGV9cj1BfWg9LTE9PT15fHwtMT09PUg/bnVsbDp7c3RhcnQ6eSxlbmQ6SH19ZWxzZSBoPW51bGx9aD1ofHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBoPVxubnVsbDttZT17Zm9jdXNlZEVsZW06ZyxzZWxlY3Rpb25SYW5nZTpofTtMZD0hMTtZPWU7ZG8gdHJ5e2prKCl9Y2F0Y2goRGIpe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7UmkoWSxEYik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9ZTtkbyB0cnl7Zm9yKGc9YSxoPWI7bnVsbCE9PVk7KXt2YXIgcD1ZLmVmZmVjdFRhZztwJjE2JiZUYihZLnN0YXRlTm9kZSxcIlwiKTtpZihwJjEyOCl7dmFyIHQ9WS5hbHRlcm5hdGU7aWYobnVsbCE9PXQpe3ZhciB2PXQucmVmO251bGwhPT12JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHY/dihudWxsKTp2LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaChwJjEwMzgpe2Nhc2UgMjokaShZKTtZLmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2OiRpKFkpO1kuZWZmZWN0VGFnJj0tMzthaihZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDEwMjQ6WS5lZmZlY3RUYWcmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpZLmVmZmVjdFRhZyY9LTEwMjU7YWooWS5hbHRlcm5hdGUsXG5ZKTticmVhaztjYXNlIDQ6YWooWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSA4Omw9WSxYaShnLGwsaCksWWkobCl9WT1ZLm5leHRFZmZlY3R9fWNhdGNoKERiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO1JpKFksRGIpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTt2PW1lO3Q9ZmUoKTtwPXYuZm9jdXNlZEVsZW07aD12LnNlbGVjdGlvblJhbmdlO2lmKHQhPT1wJiZwJiZwLm93bmVyRG9jdW1lbnQmJmVlKHAub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQscCkpe251bGwhPT1oJiZnZShwKSYmKHQ9aC5zdGFydCx2PWguZW5kLHZvaWQgMD09PXYmJih2PXQpLFwic2VsZWN0aW9uU3RhcnRcImluIHA/KHAuc2VsZWN0aW9uU3RhcnQ9dCxwLnNlbGVjdGlvbkVuZD1NYXRoLm1pbih2LHAudmFsdWUubGVuZ3RoKSk6KHY9KHQ9cC5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJnQuZGVmYXVsdFZpZXd8fHdpbmRvdyx2LmdldFNlbGVjdGlvbiYmKHY9di5nZXRTZWxlY3Rpb24oKSxcbmw9cC50ZXh0Q29udGVudC5sZW5ndGgsZz1NYXRoLm1pbihoLnN0YXJ0LGwpLGg9dm9pZCAwPT09aC5lbmQ/ZzpNYXRoLm1pbihoLmVuZCxsKSwhdi5leHRlbmQmJmc+aCYmKGw9aCxoPWcsZz1sKSxsPWRlKHAsZyksbT1kZShwLGgpLGwmJm0mJigxIT09di5yYW5nZUNvdW50fHx2LmFuY2hvck5vZGUhPT1sLm5vZGV8fHYuYW5jaG9yT2Zmc2V0IT09bC5vZmZzZXR8fHYuZm9jdXNOb2RlIT09bS5ub2RlfHx2LmZvY3VzT2Zmc2V0IT09bS5vZmZzZXQpJiYodD10LmNyZWF0ZVJhbmdlKCksdC5zZXRTdGFydChsLm5vZGUsbC5vZmZzZXQpLHYucmVtb3ZlQWxsUmFuZ2VzKCksZz5oPyh2LmFkZFJhbmdlKHQpLHYuZXh0ZW5kKG0ubm9kZSxtLm9mZnNldCkpOih0LnNldEVuZChtLm5vZGUsbS5vZmZzZXQpLHYuYWRkUmFuZ2UodCkpKSkpKTt0PVtdO2Zvcih2PXA7dj12LnBhcmVudE5vZGU7KTE9PT12Lm5vZGVUeXBlJiZ0LnB1c2goe2VsZW1lbnQ6dixsZWZ0OnYuc2Nyb2xsTGVmdCx0b3A6di5zY3JvbGxUb3B9KTtcblwiZnVuY3Rpb25cIj09PXR5cGVvZiBwLmZvY3VzJiZwLmZvY3VzKCk7Zm9yKHA9MDtwPHQubGVuZ3RoO3ArKyl2PXRbcF0sdi5lbGVtZW50LnNjcm9sbExlZnQ9di5sZWZ0LHYuZWxlbWVudC5zY3JvbGxUb3A9di50b3B9bWU9bnVsbDtMZD0hIWxlO2xlPW51bGw7YS5jdXJyZW50PWM7WT1lO2RvIHRyeXtmb3IocD1kO251bGwhPT1ZOyl7dmFyIERoPVkuZWZmZWN0VGFnO2lmKERoJjM2KXt2YXIgZGM9WS5hbHRlcm5hdGU7dD1ZO3Y9cDtzd2l0Y2godC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6VWkoMTYsMzIsdCk7YnJlYWs7Y2FzZSAxOnZhciBmZD10LnN0YXRlTm9kZTtpZih0LmVmZmVjdFRhZyY0KWlmKG51bGw9PT1kYylmZC5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGhrPXQuZWxlbWVudFR5cGU9PT10LnR5cGU/ZGMubWVtb2l6ZWRQcm9wczptZyh0LnR5cGUsZGMubWVtb2l6ZWRQcm9wcyk7ZmQuY29tcG9uZW50RGlkVXBkYXRlKGhrLGRjLm1lbW9pemVkU3RhdGUsXG5mZC5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9dmFyIEVoPXQudXBkYXRlUXVldWU7bnVsbCE9PUVoJiZLZyh0LEVoLGZkLHYpO2JyZWFrO2Nhc2UgMzp2YXIgRmg9dC51cGRhdGVRdWV1ZTtpZihudWxsIT09Rmgpe2c9bnVsbDtpZihudWxsIT09dC5jaGlsZClzd2l0Y2godC5jaGlsZC50YWcpe2Nhc2UgNTpnPXQuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTpnPXQuY2hpbGQuc3RhdGVOb2RlfUtnKHQsRmgsZyx2KX1icmVhaztjYXNlIDU6dmFyIHhrPXQuc3RhdGVOb2RlO251bGw9PT1kYyYmdC5lZmZlY3RUYWcmNCYmbmUodC50eXBlLHQubWVtb2l6ZWRQcm9wcykmJnhrLmZvY3VzKCk7YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6aWYobnVsbD09PXQubWVtb2l6ZWRTdGF0ZSl7dmFyIERpPXQuYWx0ZXJuYXRlO2lmKG51bGwhPT1EaSl7dmFyIEVpPURpLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PUVpKXt2YXIgRmk9XG5FaS5kZWh5ZHJhdGVkO251bGwhPT1GaSYmTGMoRmkpfX19YnJlYWs7Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjA6Y2FzZSAyMTpicmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMTYzKSk7fX1pZihEaCYxMjgpe3Q9dm9pZCAwO3ZhciB4ZD1ZLnJlZjtpZihudWxsIT09eGQpe3ZhciBHaT1ZLnN0YXRlTm9kZTtzd2l0Y2goWS50YWcpe2Nhc2UgNTp0PUdpO2JyZWFrO2RlZmF1bHQ6dD1HaX1cImZ1bmN0aW9uXCI9PT10eXBlb2YgeGQ/eGQodCk6eGQuY3VycmVudD10fX1ZPVkubmV4dEVmZmVjdH19Y2F0Y2goRGIpe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7UmkoWSxEYik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9bnVsbDtZZigpO1Q9Zn1lbHNlIGEuY3VycmVudD1jO2lmKERqKURqPSExLEVqPWEsRmo9YjtlbHNlIGZvcihZPWU7bnVsbCE9PVk7KWI9WS5uZXh0RWZmZWN0LFkubmV4dEVmZmVjdD1udWxsLFk9YjtiPWEuZmlyc3RQZW5kaW5nVGltZTswPT09YiYmXG4oamo9bnVsbCk7MTA3Mzc0MTgyMz09PWI/YT09PUlqP0hqKys6KEhqPTAsSWo9YSk6SGo9MDtcImZ1bmN0aW9uXCI9PT10eXBlb2Yga2smJmtrKGMuc3RhdGVOb2RlLGQpO1ooYSk7aWYoZ2opdGhyb3cgZ2o9ITEsYT1oaixoaj1udWxsLGE7aWYoKFQmbmopIT09UylyZXR1cm4gbnVsbDtqZygpO3JldHVybiBudWxsfWZ1bmN0aW9uIGprKCl7Zm9yKDtudWxsIT09WTspe3ZhciBhPVkuZWZmZWN0VGFnOzAhPT0oYSYyNTYpJiZUaShZLmFsdGVybmF0ZSxZKTswPT09KGEmNTEyKXx8RGp8fChEaj0hMCxnZyg5NyxmdW5jdGlvbigpe1NqKCk7cmV0dXJuIG51bGx9KSk7WT1ZLm5leHRFZmZlY3R9fWZ1bmN0aW9uIFNqKCl7aWYoOTAhPT1Gail7dmFyIGE9OTc8Rmo/OTc6Rmo7Rmo9OTA7cmV0dXJuIGZnKGEsbGspfX1cbmZ1bmN0aW9uIGxrKCl7aWYobnVsbD09PUVqKXJldHVybiExO3ZhciBhPUVqO0VqPW51bGw7aWYoKFQmKG9qfHBqKSkhPT1TKXRocm93IEVycm9yKHUoMzMxKSk7dmFyIGI9VDtUfD1wajtmb3IoYT1hLmN1cnJlbnQuZmlyc3RFZmZlY3Q7bnVsbCE9PWE7KXt0cnl7dmFyIGM9YTtpZigwIT09KGMuZWZmZWN0VGFnJjUxMikpc3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlVpKDEyOCwwLGMpLFVpKDAsNjQsYyl9fWNhdGNoKGQpe2lmKG51bGw9PT1hKXRocm93IEVycm9yKHUoMzMwKSk7UmkoYSxkKX1jPWEubmV4dEVmZmVjdDthLm5leHRFZmZlY3Q9bnVsbDthPWN9VD1iO2pnKCk7cmV0dXJuITB9ZnVuY3Rpb24gbWsoYSxiLGMpe2I9TmkoYyxiKTtiPWZqKGEsYiwxMDczNzQxODIzKTtEZyhhLGIpO2E9S2ooYSwxMDczNzQxODIzKTtudWxsIT09YSYmWihhKX1cbmZ1bmN0aW9uIFJpKGEsYil7aWYoMz09PWEudGFnKW1rKGEsYSxiKTtlbHNlIGZvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe2lmKDM9PT1jLnRhZyl7bWsoYyxhLGIpO2JyZWFrfWVsc2UgaWYoMT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09amp8fCFqai5oYXMoZCkpKXthPU5pKGIsYSk7YT1paihjLGEsMTA3Mzc0MTgyMyk7RGcoYyxhKTtjPUtqKGMsMTA3Mzc0MTgyMyk7bnVsbCE9PWMmJlooYyk7YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gZGsoYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtVPT09YSYmVz09PWM/WD09PXVqfHxYPT09dGomJjEwNzM3NDE4MjM9PT14aiYmY2coKS1iajxDaj9UaihhLFcpOkJqPSEwOlBqKGEsYykmJihiPWEubGFzdFBpbmdlZFRpbWUsMCE9PWImJmI8Y3x8KGEubGFzdFBpbmdlZFRpbWU9YyxhLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9PT1jJiYoYS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTAsYS5maW5pc2hlZFdvcms9bnVsbCksWihhKSkpfWZ1bmN0aW9uIGRqKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9MDswPT09YiYmKGI9UGcoKSxiPVFnKGIsYSxudWxsKSk7YT1LaihhLGIpO251bGwhPT1hJiZaKGEpfXZhciBnaztcbmdrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2lmKG51bGwhPT1hKXt2YXIgZT1iLnBlbmRpbmdQcm9wcztpZihhLm1lbW9pemVkUHJvcHMhPT1lfHxLLmN1cnJlbnQpd2c9ITA7ZWxzZXtpZihkPGMpe3dnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOndpKGIpO2xpKCk7YnJlYWs7Y2FzZSA1Om9oKGIpO2lmKGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4pcmV0dXJuIGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsbnVsbDticmVhaztjYXNlIDE6TChiLnR5cGUpJiZKZihiKTticmVhaztjYXNlIDQ6bWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOnNnKGIsYi5tZW1vaXplZFByb3BzLnZhbHVlKTticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDAhPT1kJiZkPj1jKXJldHVybiB5aShhLGIsYyk7SShNLE0uY3VycmVudCZcbjEsYik7Yj1vaShhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfUkoTSxNLmN1cnJlbnQmMSxiKTticmVhaztjYXNlIDE5OmQ9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPj1jO2lmKDAhPT0oYS5lZmZlY3RUYWcmNjQpKXtpZihkKXJldHVybiBCaShhLGIsYyk7Yi5lZmZlY3RUYWd8PTY0fWU9Yi5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoZS5yZW5kZXJpbmc9bnVsbCxlLnRhaWw9bnVsbCk7SShNLE0uY3VycmVudCxiKTtpZighZClyZXR1cm4gbnVsbH1yZXR1cm4gb2koYSxiLGMpfXdnPSExfX1lbHNlIHdnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wcztlPUVmKGIsSi5jdXJyZW50KTt2ZyhiLGMpO2U9SWgobnVsbCxiLGQsYSxlLGMpO2IuZWZmZWN0VGFnfD0xO2lmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO01oKCk7aWYoTChkKSl7dmFyIGY9ITA7SmYoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJk9nKGIsZCxnLGEpO2UudXBkYXRlcj1TZztiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxGaWJlcj1iO1dnKGIsZCxhLGMpO2I9dmkobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsUihudWxsLGIsZSxjKSxiPWIuY2hpbGQ7cmV0dXJuIGI7Y2FzZSAxNjplPWIuZWxlbWVudFR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7VmEoZSk7aWYoMSE9PWUuX3N0YXR1cyl0aHJvdyBlLl9yZXN1bHQ7XG5lPWUuX3Jlc3VsdDtiLnR5cGU9ZTtmPWIudGFnPW5rKGUpO2E9bWcoZSxhKTtzd2l0Y2goZil7Y2FzZSAwOmI9c2kobnVsbCxiLGUsYSxjKTticmVhaztjYXNlIDE6Yj11aShudWxsLGIsZSxhLGMpO2JyZWFrO2Nhc2UgMTE6Yj1uaShudWxsLGIsZSxhLGMpO2JyZWFrO2Nhc2UgMTQ6Yj1waShudWxsLGIsZSxtZyhlLnR5cGUsYSksZCxjKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzA2LGUsXCJcIikpO31yZXR1cm4gYjtjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOm1nKGQsZSksc2koYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOm1nKGQsZSksdWkoYSxiLGQsZSxjKTtjYXNlIDM6d2koYik7ZD1iLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1kKXRocm93IEVycm9yKHUoMjgyKSk7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6XG5udWxsO0hnKGIsZCxiLnBlbmRpbmdQcm9wcyxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpbGkoKSxiPW9pKGEsYixjKTtlbHNle2lmKGU9Yi5zdGF0ZU5vZGUuaHlkcmF0ZSlkaT1yZShiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLGNpPWIsZT1laT0hMDtpZihlKWZvcihjPWdoKGIsbnVsbCxkLGMpLGIuY2hpbGQ9YztjOyljLmVmZmVjdFRhZz1jLmVmZmVjdFRhZyYtM3wxMDI0LGM9Yy5zaWJsaW5nO2Vsc2UgUihhLGIsZCxjKSxsaSgpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIG9oKGIpLG51bGw9PT1hJiZpaShiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsZz1lLmNoaWxkcmVuLG9lKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZvZShkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSx0aShhLGIpLGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9XG5iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxiPW51bGwpOihSKGEsYixnLGMpLGI9Yi5jaGlsZCksYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZpaShiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHlpKGEsYixjKTtjYXNlIDQ6cmV0dXJuIG1oKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPWZoKGIsbnVsbCxkLGMpOlIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTptZyhkLGUpLG5pKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7XG5lPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTtzZyhiLGYpO2lmKG51bGwhPT1nKXt2YXIgaD1nLnZhbHVlO2Y9b2YoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwO2lmKDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIUsuY3VycmVudCl7Yj1vaShhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgaz1oLmRlcGVuZGVuY2llcztpZihudWxsIT09ayl7Zz1oLmNoaWxkO2Zvcih2YXIgbD1rLmZpcnN0Q29udGV4dDtudWxsIT09bDspe2lmKGwuY29udGV4dD09PWQmJjAhPT0obC5vYnNlcnZlZEJpdHMmZikpezE9PT1oLnRhZyYmKGw9QmcoYyxudWxsKSxsLnRhZz0yLERnKGgsbCkpO2guZXhwaXJhdGlvblRpbWU8YyYmKGguZXhwaXJhdGlvblRpbWU9XG5jKTtsPWguYWx0ZXJuYXRlO251bGwhPT1sJiZsLmV4cGlyYXRpb25UaW1lPGMmJihsLmV4cGlyYXRpb25UaW1lPWMpO3VnKGgucmV0dXJuLGMpO2suZXhwaXJhdGlvblRpbWU8YyYmKGsuZXhwaXJhdGlvblRpbWU9Yyk7YnJlYWt9bD1sLm5leHR9fWVsc2UgZz0xMD09PWgudGFnP2gudHlwZT09PWIudHlwZT9udWxsOmguY2hpbGQ6aC5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1oO2Vsc2UgZm9yKGc9aDtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9aD1nLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWcucmV0dXJuO2c9aDticmVha31nPWcucmV0dXJufWg9Z319UihhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbix2ZyhiLGMpLGU9eGcoZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFIoYSxiLGQsYyksYi5jaGlsZDtcbmNhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9bWcoZSxiLnBlbmRpbmdQcm9wcyksZj1tZyhlLnR5cGUsZikscGkoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIHJpKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTptZyhkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEwoZCk/KGE9ITAsSmYoYikpOmE9ITEsdmcoYixjKSxVZyhiLGQsZSxjKSxXZyhiLGQsZSxjKSx2aShudWxsLGIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIEJpKGEsYixjKX10aHJvdyBFcnJvcih1KDE1NixiLnRhZykpO307dmFyIGtrPW51bGwsV2k9bnVsbDtcbmZ1bmN0aW9uIG9rKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO2trPWZ1bmN0aW9uKGEpe3RyeXtiLm9uQ29tbWl0RmliZXJSb290KGMsYSx2b2lkIDAsNjQ9PT0oYS5jdXJyZW50LmVmZmVjdFRhZyY2NCkpfWNhdGNoKGUpe319O1dpPWZ1bmN0aW9uKGEpe3RyeXtiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9Y2F0Y2goZSl7fX19Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gcGsoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRFeHBpcmF0aW9uVGltZT10aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBnaShhLGIsYyxkKXtyZXR1cm4gbmV3IHBrKGEsYixjLGQpfVxuZnVuY3Rpb24gcWkoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBuayhhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gcWkoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PU9hKXJldHVybiAxMTtpZihhPT09UmEpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gYWgoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1naShhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLmVmZmVjdFRhZz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtjLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWU7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yj1hLmRlcGVuZGVuY2llcztjLmRlcGVuZGVuY2llcz1udWxsPT09Yj9udWxsOntleHBpcmF0aW9uVGltZTpiLmV4cGlyYXRpb25UaW1lLFxuZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0LHJlc3BvbmRlcnM6Yi5yZXNwb25kZXJzfTtjLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIGNoKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlxaShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSBJYTpyZXR1cm4gZWgoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBOYTpnPTg7ZXw9NzticmVhaztjYXNlIEphOmc9ODtlfD0xO2JyZWFrO2Nhc2UgS2E6cmV0dXJuIGE9Z2koMTIsYyxiLGV8OCksYS5lbGVtZW50VHlwZT1LYSxhLnR5cGU9S2EsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBQYTpyZXR1cm4gYT1naSgxMyxjLGIsZSksYS50eXBlPVBhLGEuZWxlbWVudFR5cGU9UGEsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBRYTpyZXR1cm4gYT1naSgxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1RYSxhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgTGE6Zz1cbjEwO2JyZWFrIGE7Y2FzZSBNYTpnPTk7YnJlYWsgYTtjYXNlIE9hOmc9MTE7YnJlYWsgYTtjYXNlIFJhOmc9MTQ7YnJlYWsgYTtjYXNlIFNhOmc9MTY7ZD1udWxsO2JyZWFrIGF9dGhyb3cgRXJyb3IodSgxMzAsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpKTt9Yj1naShnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5leHBpcmF0aW9uVGltZT1mO3JldHVybiBifWZ1bmN0aW9uIGVoKGEsYixjLGQpe2E9Z2koNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGJoKGEsYixjKXthPWdpKDYsYSxudWxsLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIGRoKGEsYixjKXtiPWdpKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gcWsoYSxiLGMpe3RoaXMudGFnPWI7dGhpcy5jdXJyZW50PW51bGw7dGhpcy5jb250YWluZXJJbmZvPWE7dGhpcy5waW5nQ2FjaGU9dGhpcy5wZW5kaW5nQ2hpbGRyZW49bnVsbDt0aGlzLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDt0aGlzLmZpbmlzaGVkV29yaz1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuaHlkcmF0ZT1jO3RoaXMuY2FsbGJhY2tOb2RlPW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTkwO3RoaXMubGFzdEV4cGlyZWRUaW1lPXRoaXMubGFzdFBpbmdlZFRpbWU9dGhpcy5uZXh0S25vd25QZW5kaW5nTGV2ZWw9dGhpcy5sYXN0U3VzcGVuZGVkVGltZT10aGlzLmZpcnN0U3VzcGVuZGVkVGltZT10aGlzLmZpcnN0UGVuZGluZ1RpbWU9MH1cbmZ1bmN0aW9uIFBqKGEsYil7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWU7YT1hLmxhc3RTdXNwZW5kZWRUaW1lO3JldHVybiAwIT09YyYmYz49YiYmYTw9Yn1mdW5jdGlvbiBNaihhLGIpe3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lLGQ9YS5sYXN0U3VzcGVuZGVkVGltZTtjPGImJihhLmZpcnN0U3VzcGVuZGVkVGltZT1iKTtpZihkPmJ8fDA9PT1jKWEubGFzdFN1c3BlbmRlZFRpbWU9YjtiPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtiPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApfVxuZnVuY3Rpb24gTmooYSxiKXtiPmEuZmlyc3RQZW5kaW5nVGltZSYmKGEuZmlyc3RQZW5kaW5nVGltZT1iKTt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZTswIT09YyYmKGI+PWM/YS5maXJzdFN1c3BlbmRlZFRpbWU9YS5sYXN0U3VzcGVuZGVkVGltZT1hLm5leHRLbm93blBlbmRpbmdMZXZlbD0wOmI+PWEubGFzdFN1c3BlbmRlZFRpbWUmJihhLmxhc3RTdXNwZW5kZWRUaW1lPWIrMSksYj5hLm5leHRLbm93blBlbmRpbmdMZXZlbCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPWIpKX1mdW5jdGlvbiBSaihhLGIpe3ZhciBjPWEubGFzdEV4cGlyZWRUaW1lO2lmKDA9PT1jfHxjPmIpYS5sYXN0RXhwaXJlZFRpbWU9Yn1cbmZ1bmN0aW9uIHJrKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPVBnKCksZz1NZy5zdXNwZW5zZTtmPVFnKGYsZSxnKTthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2I6e2lmKGVjKGMpIT09Y3x8MSE9PWMudGFnKXRocm93IEVycm9yKHUoMTcwKSk7dmFyIGg9Yztkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoPWguc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoTChoLnR5cGUpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpO3Rocm93IEVycm9yKHUoMTcxKSk7fWlmKDE9PT1jLnRhZyl7dmFyIGs9Yy50eXBlO2lmKEwoaykpe2M9SWYoYyxrLGgpO2JyZWFrIGF9fWM9aH1lbHNlIGM9Q2Y7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj1CZyhmLGcpO2IucGF5bG9hZD17ZWxlbWVudDphfTtkPXZvaWQgMD09PVxuZD9udWxsOmQ7bnVsbCE9PWQmJihiLmNhbGxiYWNrPWQpO0RnKGUsYik7UmcoZSxmKTtyZXR1cm4gZn1mdW5jdGlvbiBzayhhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIHRrKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7bnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQmJmEucmV0cnlUaW1lPGImJihhLnJldHJ5VGltZT1iKX1mdW5jdGlvbiB1ayhhLGIpe3RrKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZ0ayhhLGIpfVxuZnVuY3Rpb24gdmsoYSxiLGMpe2M9bnVsbCE9YyYmITA9PT1jLmh5ZHJhdGU7dmFyIGQ9bmV3IHFrKGEsYixjKSxlPWdpKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTtkLmN1cnJlbnQ9ZTtlLnN0YXRlTm9kZT1kO2Fbd2VdPWQuY3VycmVudDtjJiYwIT09YiYmd2MoOT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQpO3RoaXMuX2ludGVybmFsUm9vdD1kfXZrLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSxiKXtyayhhLHRoaXMuX2ludGVybmFsUm9vdCxudWxsLHZvaWQgMD09PWI/bnVsbDpiKX07dmsucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5faW50ZXJuYWxSb290LGM9dm9pZCAwPT09YT9udWxsOmEsZD1iLmNvbnRhaW5lckluZm87cmsobnVsbCxiLG51bGwsZnVuY3Rpb24oKXtkW3dlXT1udWxsO251bGwhPT1jJiZjKCl9KX07XG5mdW5jdGlvbiB3ayhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9ZnVuY3Rpb24geWsoYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyB2ayhhLDAsYj97aHlkcmF0ZTohMH06dm9pZCAwKX1cbmZ1bmN0aW9uIHprKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe3ZhciBnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9c2soZyk7aC5jYWxsKGEpfX1yayhiLGcsYSxlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPXlrKGMsZCk7Zz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBrPWU7ZT1mdW5jdGlvbigpe3ZhciBhPXNrKGcpO2suY2FsbChhKX19Y2soZnVuY3Rpb24oKXtyayhiLGcsYSxlKX0pfXJldHVybiBzayhnKX1mdW5jdGlvbiBBayhhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOkhhLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuamM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9bGcoUGcoKSwxNTAsMTAwKTtSZyhhLGIpO3VrKGEsYil9fTtrYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXtQZygpO3ZhciBiPWtnKys7UmcoYSxiKTt1ayhhLGIpfX07bGM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9UGcoKTtiPVFnKGIsYSxudWxsKTtSZyhhLGIpO3VrKGEsYil9fTtcblphPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6RWIoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPXllKGQpO2lmKCFlKXRocm93IEVycm9yKHUoOTApKTt6YihkKTtFYihkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6TWIoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJkpiKGEsISFjLm11bHRpcGxlLGIsITEpfX07ZWI9Yms7XG5mYj1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1UO1R8PTQ7dHJ5e3JldHVybiBmZyg5OCxhLmJpbmQobnVsbCxiLGMsZCkpfWZpbmFsbHl7VD1lLFQ9PT1TJiZqZygpfX07Z2I9ZnVuY3Rpb24oKXsoVCYoMXxvanxwaikpPT09UyYmKGFrKCksU2ooKSl9O2hiPWZ1bmN0aW9uKGEsYil7dmFyIGM9VDtUfD0yO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1Q9YyxUPT09UyYmamcoKX19O2Z1bmN0aW9uIEJrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIXdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIEFrKGEsYixudWxsLGMpfVxudmFyIENrPXtjcmVhdGVQb3J0YWw6QmssZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHUoMTg4KSk7dGhyb3cgRXJyb3IodSgyNjgsT2JqZWN0LmtleXMoYSkpKTt9YT1pYyhiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9LGh5ZHJhdGU6ZnVuY3Rpb24oYSxiLGMpe2lmKCF3ayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiB6ayhudWxsLGEsYiwhMCxjKX0scmVuZGVyOmZ1bmN0aW9uKGEsYixjKXtpZighd2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gemsobnVsbCxhLGIsITEsYyl9LHVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyOmZ1bmN0aW9uKGEsYixjLGQpe2lmKCF3ayhjKSl0aHJvdyBFcnJvcih1KDIwMCkpO1xuaWYobnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyKXRocm93IEVycm9yKHUoMzgpKTtyZXR1cm4gemsoYSxiLGMsITEsZCl9LHVubW91bnRDb21wb25lbnRBdE5vZGU6ZnVuY3Rpb24oYSl7aWYoIXdrKGEpKXRocm93IEVycm9yKHUoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhjayhmdW5jdGlvbigpe3prKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVt3ZV09bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZnVuY3Rpb24oKXtyZXR1cm4gQmsuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOmJrLGZsdXNoU3luYzpmdW5jdGlvbihhLGIpe2lmKChUJihvanxwaikpIT09Uyl0aHJvdyBFcnJvcih1KDE4NykpO3ZhciBjPVQ7VHw9MTt0cnl7cmV0dXJuIGZnKDk5LGEuYmluZChudWxsLGIpKX1maW5hbGx5e1Q9YyxqZygpfX0sX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e0V2ZW50czpbQ2MsXG54ZSx5ZSxDYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUsZmEsU2MsZnVuY3Rpb24oYSl7eWEoYSxSYyl9LGNiLGRiLFBkLEJhLFNqLHtjdXJyZW50OiExfV19fTtcbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBvayhuKHt9LGEse292ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6RWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPWljKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gYj9iKGEpOm51bGx9LGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6RmMsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi4xMi4wXCIsXG5yZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTt2YXIgRGs9e2RlZmF1bHQ6Q2t9LEVrPURrJiZDa3x8RGs7bW9kdWxlLmV4cG9ydHM9RWsuZGVmYXVsdHx8RWs7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjE4LjBcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgZixnLGgsayxsO1xuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHA9bnVsbCxxPW51bGwsdD1mdW5jdGlvbigpe2lmKG51bGwhPT1wKXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3AoITAsYSk7cD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodCwwKSxiO319LHU9RGF0ZS5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBEYXRlLm5vdygpLXV9O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXA/c2V0VGltZW91dChmLDAsYSk6KHA9YSxzZXRUaW1lb3V0KHQsMCkpfTtnPWZ1bmN0aW9uKGEsYil7cT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQocSl9O2s9ZnVuY3Rpb24oKXtyZXR1cm4hMX07bD1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB3PXdpbmRvdy5wZXJmb3JtYW5jZSx4PXdpbmRvdy5EYXRlLFxueT13aW5kb3cuc2V0VGltZW91dCx6PXdpbmRvdy5jbGVhclRpbWVvdXQ7aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlKXt2YXIgQT13aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU7XCJmdW5jdGlvblwiIT09dHlwZW9mIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIik7XCJmdW5jdGlvblwiIT09dHlwZW9mIEEmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKX1pZihcIm9iamVjdFwiPT09XG50eXBlb2YgdyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHcubm93KWV4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHcubm93KCl9O2Vsc2V7dmFyIEI9eC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB4Lm5vdygpLUJ9fXZhciBDPSExLEQ9bnVsbCxFPS0xLEY9NSxHPTA7az1mdW5jdGlvbigpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpPj1HfTtsPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3QgdW5zdXBwb3J0ZWRcIik6Rj0wPGE/TWF0aC5mbG9vcigxRTMvYSk6NX07dmFyIEg9bmV3IE1lc3NhZ2VDaGFubmVsLEk9SC5wb3J0MjtILnBvcnQxLm9ubWVzc2FnZT1cbmZ1bmN0aW9uKCl7aWYobnVsbCE9PUQpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7Rz1hK0Y7dHJ5e0QoITAsYSk/SS5wb3N0TWVzc2FnZShudWxsKTooQz0hMSxEPW51bGwpfWNhdGNoKGIpe3Rocm93IEkucG9zdE1lc3NhZ2UobnVsbCksYjt9fWVsc2UgQz0hMX07Zj1mdW5jdGlvbihhKXtEPWE7Q3x8KEM9ITAsSS5wb3N0TWVzc2FnZShudWxsKSl9O2c9ZnVuY3Rpb24oYSxiKXtFPXkoZnVuY3Rpb24oKXthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSxiKX07aD1mdW5jdGlvbigpe3ooRSk7RT0tMX19ZnVuY3Rpb24gSihhLGIpe3ZhciBjPWEubGVuZ3RoO2EucHVzaChiKTthOmZvcig7Oyl7dmFyIGQ9TWF0aC5mbG9vcigoYy0xKS8yKSxlPWFbZF07aWYodm9pZCAwIT09ZSYmMDxLKGUsYikpYVtkXT1iLGFbY109ZSxjPWQ7ZWxzZSBicmVhayBhfX1mdW5jdGlvbiBMKGEpe2E9YVswXTtyZXR1cm4gdm9pZCAwPT09YT9udWxsOmF9XG5mdW5jdGlvbiBNKGEpe3ZhciBiPWFbMF07aWYodm9pZCAwIT09Yil7dmFyIGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aDtkPGU7KXt2YXIgbT0yKihkKzEpLTEsbj1hW21dLHY9bSsxLHI9YVt2XTtpZih2b2lkIDAhPT1uJiYwPksobixjKSl2b2lkIDAhPT1yJiYwPksocixuKT8oYVtkXT1yLGFbdl09YyxkPXYpOihhW2RdPW4sYVttXT1jLGQ9bSk7ZWxzZSBpZih2b2lkIDAhPT1yJiYwPksocixjKSlhW2RdPXIsYVt2XT1jLGQ9djtlbHNlIGJyZWFrIGF9fXJldHVybiBifXJldHVybiBudWxsfWZ1bmN0aW9uIEsoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9dmFyIE49W10sTz1bXSxQPTEsUT1udWxsLFI9MyxTPSExLFQ9ITEsVT0hMTtcbmZ1bmN0aW9uIFYoYSl7Zm9yKHZhciBiPUwoTyk7bnVsbCE9PWI7KXtpZihudWxsPT09Yi5jYWxsYmFjaylNKE8pO2Vsc2UgaWYoYi5zdGFydFRpbWU8PWEpTShPKSxiLnNvcnRJbmRleD1iLmV4cGlyYXRpb25UaW1lLEooTixiKTtlbHNlIGJyZWFrO2I9TChPKX19ZnVuY3Rpb24gVyhhKXtVPSExO1YoYSk7aWYoIVQpaWYobnVsbCE9PUwoTikpVD0hMCxmKFgpO2Vsc2V7dmFyIGI9TChPKTtudWxsIT09YiYmZyhXLGIuc3RhcnRUaW1lLWEpfX1cbmZ1bmN0aW9uIFgoYSxiKXtUPSExO1UmJihVPSExLGgoKSk7Uz0hMDt2YXIgYz1SO3RyeXtWKGIpO2ZvcihRPUwoTik7bnVsbCE9PVEmJighKFEuZXhwaXJhdGlvblRpbWU+Yil8fGEmJiFrKCkpOyl7dmFyIGQ9US5jYWxsYmFjaztpZihudWxsIT09ZCl7US5jYWxsYmFjaz1udWxsO1I9US5wcmlvcml0eUxldmVsO3ZhciBlPWQoUS5leHBpcmF0aW9uVGltZTw9Yik7Yj1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlP1EuY2FsbGJhY2s9ZTpRPT09TChOKSYmTShOKTtWKGIpfWVsc2UgTShOKTtRPUwoTil9aWYobnVsbCE9PVEpdmFyIG09ITA7ZWxzZXt2YXIgbj1MKE8pO251bGwhPT1uJiZnKFcsbi5zdGFydFRpbWUtYik7bT0hMX1yZXR1cm4gbX1maW5hbGx5e1E9bnVsbCxSPWMsUz0hMX19XG5mdW5jdGlvbiBZKGEpe3N3aXRjaChhKXtjYXNlIDE6cmV0dXJuLTE7Y2FzZSAyOnJldHVybiAyNTA7Y2FzZSA1OnJldHVybiAxMDczNzQxODIzO2Nhc2UgNDpyZXR1cm4gMUU0O2RlZmF1bHQ6cmV0dXJuIDVFM319dmFyIFo9bDtleHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPVI7Uj1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7Uj1jfX07XG5leHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKFIpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPVJ9dmFyIGM9UjtSPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtSPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXt2YXIgZT1jLmRlbGF5O2U9XCJudW1iZXJcIj09PXR5cGVvZiBlJiYwPGU/ZCtlOmQ7Yz1cIm51bWJlclwiPT09dHlwZW9mIGMudGltZW91dD9jLnRpbWVvdXQ6WShhKX1lbHNlIGM9WShhKSxlPWQ7Yz1lK2M7YT17aWQ6UCsrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTplLGV4cGlyYXRpb25UaW1lOmMsc29ydEluZGV4Oi0xfTtlPmQ/KGEuc29ydEluZGV4PWUsSihPLGEpLG51bGw9PT1MKE4pJiZhPT09TChPKSYmKFU/aCgpOlU9ITAsZyhXLGUtZCkpKTooYS5zb3J0SW5kZXg9YyxKKE4sYSksVHx8U3x8KFQ9ITAsZihYKSkpO3JldHVybiBhfTtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07XG5leHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1SO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPVI7Uj1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtSPWN9fX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBSfTtleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtWKGEpO3ZhciBiPUwoTik7cmV0dXJuIGIhPT1RJiZudWxsIT09USYmbnVsbCE9PWImJm51bGwhPT1iLmNhbGxiYWNrJiZiLnN0YXJ0VGltZTw9YSYmYi5leHBpcmF0aW9uVGltZTxRLmV4cGlyYXRpb25UaW1lfHxrKCl9O2V4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PVo7ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe1R8fFN8fChUPSEwLGYoWCkpfTtcbmV4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gTChOKX07ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtcbiIsIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vLi4vY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi8qIVxcbiAqIEJvb3RzdHJhcCB2NC40LjEgKGh0dHBzOi8vZ2V0Ym9vdHN0cmFwLmNvbS8pXFxuICogQ29weXJpZ2h0IDIwMTEtMjAxOSBUaGUgQm9vdHN0cmFwIEF1dGhvcnNcXG4gKiBDb3B5cmlnaHQgMjAxMS0yMDE5IFR3aXR0ZXIsIEluYy5cXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxcbiAqLzpyb290ey0tYmx1ZTogIzAwN2JmZjstLWluZGlnbzogIzY2MTBmMjstLXB1cnBsZTogIzZmNDJjMTstLXBpbms6ICNlODNlOGM7LS1yZWQ6ICNkYzM1NDU7LS1vcmFuZ2U6ICNmZDdlMTQ7LS15ZWxsb3c6ICNmZmMxMDc7LS1ncmVlbjogIzI4YTc0NTstLXRlYWw6ICMyMGM5OTc7LS1jeWFuOiAjMTdhMmI4Oy0td2hpdGU6ICNmZmY7LS1ncmF5OiAjNmM3NTdkOy0tZ3JheS1kYXJrOiAjMzQzYTQwOy0tcHJpbWFyeTogIzAwN2JmZjstLXNlY29uZGFyeTogIzZjNzU3ZDstLXN1Y2Nlc3M6ICMyOGE3NDU7LS1pbmZvOiAjMTdhMmI4Oy0td2FybmluZzogI2ZmYzEwNzstLWRhbmdlcjogI2RjMzU0NTstLWxpZ2h0OiAjZjhmOWZhOy0tZGFyazogIzM0M2E0MDstLWJyZWFrcG9pbnQteHM6IDA7LS1icmVha3BvaW50LXNtOiA1NzZweDstLWJyZWFrcG9pbnQtbWQ6IDc2OHB4Oy0tYnJlYWtwb2ludC1sZzogOTkycHg7LS1icmVha3BvaW50LXhsOiAxMjAwcHg7LS1mb250LWZhbWlseS1zYW5zLXNlcmlmOiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFxcXCJTZWdvZSBVSVxcXCIsIFJvYm90bywgXFxcIkhlbHZldGljYSBOZXVlXFxcIiwgQXJpYWwsIFxcXCJOb3RvIFNhbnNcXFwiLCBzYW5zLXNlcmlmLCBcXFwiQXBwbGUgQ29sb3IgRW1vamlcXFwiLCBcXFwiU2Vnb2UgVUkgRW1vamlcXFwiLCBcXFwiU2Vnb2UgVUkgU3ltYm9sXFxcIiwgXFxcIk5vdG8gQ29sb3IgRW1vamlcXFwiOy0tZm9udC1mYW1pbHktbW9ub3NwYWNlOiBTRk1vbm8tUmVndWxhciwgTWVubG8sIE1vbmFjbywgQ29uc29sYXMsIFxcXCJMaWJlcmF0aW9uIE1vbm9cXFwiLCBcXFwiQ291cmllciBOZXdcXFwiLCBtb25vc3BhY2V9KiwqOjpiZWZvcmUsKjo6YWZ0ZXJ7Ym94LXNpemluZzpib3JkZXItYm94fWh0bWx7Zm9udC1mYW1pbHk6c2Fucy1zZXJpZjtsaW5lLWhlaWdodDoxLjE1Oy13ZWJraXQtdGV4dC1zaXplLWFkanVzdDoxMDAlOy13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjpyZ2JhKDAsMCwwLDApfWFydGljbGUsYXNpZGUsZmlnY2FwdGlvbixmaWd1cmUsZm9vdGVyLGhlYWRlcixoZ3JvdXAsbWFpbixuYXYsc2VjdGlvbntkaXNwbGF5OmJsb2NrfWJvZHl7bWFyZ2luOjA7Zm9udC1mYW1pbHk6LWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcXFwiU2Vnb2UgVUlcXFwiLCBSb2JvdG8sIFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsIEFyaWFsLCBcXFwiTm90byBTYW5zXFxcIiwgc2Fucy1zZXJpZiwgXFxcIkFwcGxlIENvbG9yIEVtb2ppXFxcIiwgXFxcIlNlZ29lIFVJIEVtb2ppXFxcIiwgXFxcIlNlZ29lIFVJIFN5bWJvbFxcXCIsIFxcXCJOb3RvIENvbG9yIEVtb2ppXFxcIjtmb250LXNpemU6MXJlbTtmb250LXdlaWdodDo0MDA7bGluZS1oZWlnaHQ6MS41O2NvbG9yOiMyMTI1Mjk7dGV4dC1hbGlnbjpsZWZ0O2JhY2tncm91bmQtY29sb3I6I2ZmZn1bdGFiaW5kZXg9XFxcIi0xXFxcIl06Zm9jdXM6bm90KDpmb2N1cy12aXNpYmxlKXtvdXRsaW5lOjAgIWltcG9ydGFudH1ocntib3gtc2l6aW5nOmNvbnRlbnQtYm94O2hlaWdodDowO292ZXJmbG93OnZpc2libGV9aDEsaDIsaDMsaDQsaDUsaDZ7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MC41cmVtfXB7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MXJlbX1hYmJyW3RpdGxlXSxhYmJyW2RhdGEtb3JpZ2luYWwtdGl0bGVde3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7LXdlYmtpdC10ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIGRvdHRlZDt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIGRvdHRlZDtjdXJzb3I6aGVscDtib3JkZXItYm90dG9tOjA7LXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcC1pbms6bm9uZTt0ZXh0LWRlY29yYXRpb24tc2tpcC1pbms6bm9uZX1hZGRyZXNze21hcmdpbi1ib3R0b206MXJlbTtmb250LXN0eWxlOm5vcm1hbDtsaW5lLWhlaWdodDppbmhlcml0fW9sLHVsLGRse21hcmdpbi10b3A6MDttYXJnaW4tYm90dG9tOjFyZW19b2wgb2wsdWwgdWwsb2wgdWwsdWwgb2x7bWFyZ2luLWJvdHRvbTowfWR0e2ZvbnQtd2VpZ2h0OjcwMH1kZHttYXJnaW4tYm90dG9tOi41cmVtO21hcmdpbi1sZWZ0OjB9YmxvY2txdW90ZXttYXJnaW46MCAwIDFyZW19YixzdHJvbmd7Zm9udC13ZWlnaHQ6Ym9sZGVyfXNtYWxse2ZvbnQtc2l6ZTo4MCV9c3ViLHN1cHtwb3NpdGlvbjpyZWxhdGl2ZTtmb250LXNpemU6NzUlO2xpbmUtaGVpZ2h0OjA7dmVydGljYWwtYWxpZ246YmFzZWxpbmV9c3Vie2JvdHRvbTotLjI1ZW19c3Vwe3RvcDotLjVlbX1he2NvbG9yOiMwMDdiZmY7dGV4dC1kZWNvcmF0aW9uOm5vbmU7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH1hOmhvdmVye2NvbG9yOiMwMDU2YjM7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZX1hOm5vdChbaHJlZl0pe2NvbG9yOmluaGVyaXQ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9YTpub3QoW2hyZWZdKTpob3Zlcntjb2xvcjppbmhlcml0O3RleHQtZGVjb3JhdGlvbjpub25lfXByZSxjb2RlLGtiZCxzYW1we2ZvbnQtZmFtaWx5OlNGTW9uby1SZWd1bGFyLCBNZW5sbywgTW9uYWNvLCBDb25zb2xhcywgXFxcIkxpYmVyYXRpb24gTW9ub1xcXCIsIFxcXCJDb3VyaWVyIE5ld1xcXCIsIG1vbm9zcGFjZTtmb250LXNpemU6MWVtfXByZXttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbToxcmVtO292ZXJmbG93OmF1dG99ZmlndXJle21hcmdpbjowIDAgMXJlbX1pbWd7dmVydGljYWwtYWxpZ246bWlkZGxlO2JvcmRlci1zdHlsZTpub25lfXN2Z3tvdmVyZmxvdzpoaWRkZW47dmVydGljYWwtYWxpZ246bWlkZGxlfXRhYmxle2JvcmRlci1jb2xsYXBzZTpjb2xsYXBzZX1jYXB0aW9ue3BhZGRpbmctdG9wOjAuNzVyZW07cGFkZGluZy1ib3R0b206MC43NXJlbTtjb2xvcjojNmM3NTdkO3RleHQtYWxpZ246bGVmdDtjYXB0aW9uLXNpZGU6Ym90dG9tfXRoe3RleHQtYWxpZ246aW5oZXJpdH1sYWJlbHtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tYm90dG9tOjAuNXJlbX1idXR0b257Ym9yZGVyLXJhZGl1czowfWJ1dHRvbjpmb2N1c3tvdXRsaW5lOjFweCBkb3R0ZWQ7b3V0bGluZTo1cHggYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3J9aW5wdXQsYnV0dG9uLHNlbGVjdCxvcHRncm91cCx0ZXh0YXJlYXttYXJnaW46MDtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc2l6ZTppbmhlcml0O2xpbmUtaGVpZ2h0OmluaGVyaXR9YnV0dG9uLGlucHV0e292ZXJmbG93OnZpc2libGV9YnV0dG9uLHNlbGVjdHt0ZXh0LXRyYW5zZm9ybTpub25lfXNlbGVjdHt3b3JkLXdyYXA6bm9ybWFsfWJ1dHRvbixbdHlwZT1cXFwiYnV0dG9uXFxcIl0sW3R5cGU9XFxcInJlc2V0XFxcIl0sW3R5cGU9XFxcInN1Ym1pdFxcXCJdey13ZWJraXQtYXBwZWFyYW5jZTpidXR0b259YnV0dG9uOm5vdCg6ZGlzYWJsZWQpLFt0eXBlPVxcXCJidXR0b25cXFwiXTpub3QoOmRpc2FibGVkKSxbdHlwZT1cXFwicmVzZXRcXFwiXTpub3QoOmRpc2FibGVkKSxbdHlwZT1cXFwic3VibWl0XFxcIl06bm90KDpkaXNhYmxlZCl7Y3Vyc29yOnBvaW50ZXJ9YnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFt0eXBlPVxcXCJidXR0b25cXFwiXTo6LW1vei1mb2N1cy1pbm5lcixbdHlwZT1cXFwicmVzZXRcXFwiXTo6LW1vei1mb2N1cy1pbm5lcixbdHlwZT1cXFwic3VibWl0XFxcIl06Oi1tb3otZm9jdXMtaW5uZXJ7cGFkZGluZzowO2JvcmRlci1zdHlsZTpub25lfWlucHV0W3R5cGU9XFxcInJhZGlvXFxcIl0saW5wdXRbdHlwZT1cXFwiY2hlY2tib3hcXFwiXXtib3gtc2l6aW5nOmJvcmRlci1ib3g7cGFkZGluZzowfWlucHV0W3R5cGU9XFxcImRhdGVcXFwiXSxpbnB1dFt0eXBlPVxcXCJ0aW1lXFxcIl0saW5wdXRbdHlwZT1cXFwiZGF0ZXRpbWUtbG9jYWxcXFwiXSxpbnB1dFt0eXBlPVxcXCJtb250aFxcXCJdey13ZWJraXQtYXBwZWFyYW5jZTpsaXN0Ym94fXRleHRhcmVhe292ZXJmbG93OmF1dG87cmVzaXplOnZlcnRpY2FsfWZpZWxkc2V0e21pbi13aWR0aDowO3BhZGRpbmc6MDttYXJnaW46MDtib3JkZXI6MH1sZWdlbmR7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO21heC13aWR0aDoxMDAlO3BhZGRpbmc6MDttYXJnaW4tYm90dG9tOi41cmVtO2ZvbnQtc2l6ZToxLjVyZW07bGluZS1oZWlnaHQ6aW5oZXJpdDtjb2xvcjppbmhlcml0O3doaXRlLXNwYWNlOm5vcm1hbH1wcm9ncmVzc3t2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZX1bdHlwZT1cXFwibnVtYmVyXFxcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sW3R5cGU9XFxcIm51bWJlclxcXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9ue2hlaWdodDphdXRvfVt0eXBlPVxcXCJzZWFyY2hcXFwiXXtvdXRsaW5lLW9mZnNldDotMnB4Oy13ZWJraXQtYXBwZWFyYW5jZTpub25lfVt0eXBlPVxcXCJzZWFyY2hcXFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbnstd2Via2l0LWFwcGVhcmFuY2U6bm9uZX06Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9ue2ZvbnQ6aW5oZXJpdDstd2Via2l0LWFwcGVhcmFuY2U6YnV0dG9ufW91dHB1dHtkaXNwbGF5OmlubGluZS1ibG9ja31zdW1tYXJ5e2Rpc3BsYXk6bGlzdC1pdGVtO2N1cnNvcjpwb2ludGVyfXRlbXBsYXRle2Rpc3BsYXk6bm9uZX1baGlkZGVuXXtkaXNwbGF5Om5vbmUgIWltcG9ydGFudH1oMSxoMixoMyxoNCxoNSxoNiwuaDEsLmgyLC5oMywuaDQsLmg1LC5oNnttYXJnaW4tYm90dG9tOjAuNXJlbTtmb250LXdlaWdodDo1MDA7bGluZS1oZWlnaHQ6MS4yfWgxLC5oMXtmb250LXNpemU6Mi41cmVtfWgyLC5oMntmb250LXNpemU6MnJlbX1oMywuaDN7Zm9udC1zaXplOjEuNzVyZW19aDQsLmg0e2ZvbnQtc2l6ZToxLjVyZW19aDUsLmg1e2ZvbnQtc2l6ZToxLjI1cmVtfWg2LC5oNntmb250LXNpemU6MXJlbX0ubGVhZHtmb250LXNpemU6MS4yNXJlbTtmb250LXdlaWdodDozMDB9LmRpc3BsYXktMXtmb250LXNpemU6NnJlbTtmb250LXdlaWdodDozMDA7bGluZS1oZWlnaHQ6MS4yfS5kaXNwbGF5LTJ7Zm9udC1zaXplOjUuNXJlbTtmb250LXdlaWdodDozMDA7bGluZS1oZWlnaHQ6MS4yfS5kaXNwbGF5LTN7Zm9udC1zaXplOjQuNXJlbTtmb250LXdlaWdodDozMDA7bGluZS1oZWlnaHQ6MS4yfS5kaXNwbGF5LTR7Zm9udC1zaXplOjMuNXJlbTtmb250LXdlaWdodDozMDA7bGluZS1oZWlnaHQ6MS4yfWhye21hcmdpbi10b3A6MXJlbTttYXJnaW4tYm90dG9tOjFyZW07Ym9yZGVyOjA7Ym9yZGVyLXRvcDoxcHggc29saWQgcmdiYSgwLDAsMCwwLjEpfXNtYWxsLC5zbWFsbHtmb250LXNpemU6ODAlO2ZvbnQtd2VpZ2h0OjQwMH1tYXJrLC5tYXJre3BhZGRpbmc6MC4yZW07YmFja2dyb3VuZC1jb2xvcjojZmNmOGUzfS5saXN0LXVuc3R5bGVke3BhZGRpbmctbGVmdDowO2xpc3Qtc3R5bGU6bm9uZX0ubGlzdC1pbmxpbmV7cGFkZGluZy1sZWZ0OjA7bGlzdC1zdHlsZTpub25lfS5saXN0LWlubGluZS1pdGVte2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5saXN0LWlubGluZS1pdGVtOm5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLXJpZ2h0OjAuNXJlbX0uaW5pdGlhbGlzbXtmb250LXNpemU6OTAlO3RleHQtdHJhbnNmb3JtOnVwcGVyY2FzZX0uYmxvY2txdW90ZXttYXJnaW4tYm90dG9tOjFyZW07Zm9udC1zaXplOjEuMjVyZW19LmJsb2NrcXVvdGUtZm9vdGVye2Rpc3BsYXk6YmxvY2s7Zm9udC1zaXplOjgwJTtjb2xvcjojNmM3NTdkfS5ibG9ja3F1b3RlLWZvb3Rlcjo6YmVmb3Jle2NvbnRlbnQ6XFxcIlxcXFwyMDE0XFxcXDAwQTBcXFwifS5pbWctZmx1aWR7bWF4LXdpZHRoOjEwMCU7aGVpZ2h0OmF1dG99LmltZy10aHVtYm5haWx7cGFkZGluZzowLjI1cmVtO2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXI6MXB4IHNvbGlkICNkZWUyZTY7Ym9yZGVyLXJhZGl1czowLjI1cmVtO21heC13aWR0aDoxMDAlO2hlaWdodDphdXRvfS5maWd1cmV7ZGlzcGxheTppbmxpbmUtYmxvY2t9LmZpZ3VyZS1pbWd7bWFyZ2luLWJvdHRvbTowLjVyZW07bGluZS1oZWlnaHQ6MX0uZmlndXJlLWNhcHRpb257Zm9udC1zaXplOjkwJTtjb2xvcjojNmM3NTdkfWNvZGV7Zm9udC1zaXplOjg3LjUlO2NvbG9yOiNlODNlOGM7d29yZC13cmFwOmJyZWFrLXdvcmR9YT5jb2Rle2NvbG9yOmluaGVyaXR9a2Jke3BhZGRpbmc6MC4ycmVtIDAuNHJlbTtmb250LXNpemU6ODcuNSU7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMyMTI1Mjk7Ym9yZGVyLXJhZGl1czowLjJyZW19a2JkIGtiZHtwYWRkaW5nOjA7Zm9udC1zaXplOjEwMCU7Zm9udC13ZWlnaHQ6NzAwfXByZXtkaXNwbGF5OmJsb2NrO2ZvbnQtc2l6ZTo4Ny41JTtjb2xvcjojMjEyNTI5fXByZSBjb2Rle2ZvbnQtc2l6ZTppbmhlcml0O2NvbG9yOmluaGVyaXQ7d29yZC1icmVhazpub3JtYWx9LnByZS1zY3JvbGxhYmxle21heC1oZWlnaHQ6MzQwcHg7b3ZlcmZsb3cteTpzY3JvbGx9LmNvbnRhaW5lcnt3aWR0aDoxMDAlO3BhZGRpbmctcmlnaHQ6MTVweDtwYWRkaW5nLWxlZnQ6MTVweDttYXJnaW4tcmlnaHQ6YXV0bzttYXJnaW4tbGVmdDphdXRvfUBtZWRpYSAobWluLXdpZHRoOiA1NzZweCl7LmNvbnRhaW5lcnttYXgtd2lkdGg6NTQwcHh9fUBtZWRpYSAobWluLXdpZHRoOiA3NjhweCl7LmNvbnRhaW5lcnttYXgtd2lkdGg6NzIwcHh9fUBtZWRpYSAobWluLXdpZHRoOiA5OTJweCl7LmNvbnRhaW5lcnttYXgtd2lkdGg6OTYwcHh9fUBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpey5jb250YWluZXJ7bWF4LXdpZHRoOjExNDBweH19LmNvbnRhaW5lci1mbHVpZCwuY29udGFpbmVyLXNtLC5jb250YWluZXItbWQsLmNvbnRhaW5lci1sZywuY29udGFpbmVyLXhse3dpZHRoOjEwMCU7cGFkZGluZy1yaWdodDoxNXB4O3BhZGRpbmctbGVmdDoxNXB4O21hcmdpbi1yaWdodDphdXRvO21hcmdpbi1sZWZ0OmF1dG99QG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KXsuY29udGFpbmVyLC5jb250YWluZXItc217bWF4LXdpZHRoOjU0MHB4fX1AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpey5jb250YWluZXIsLmNvbnRhaW5lci1zbSwuY29udGFpbmVyLW1ke21heC13aWR0aDo3MjBweH19QG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KXsuY29udGFpbmVyLC5jb250YWluZXItc20sLmNvbnRhaW5lci1tZCwuY29udGFpbmVyLWxne21heC13aWR0aDo5NjBweH19QG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCl7LmNvbnRhaW5lciwuY29udGFpbmVyLXNtLC5jb250YWluZXItbWQsLmNvbnRhaW5lci1sZywuY29udGFpbmVyLXhse21heC13aWR0aDoxMTQwcHh9fS5yb3d7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtd3JhcDp3cmFwO2ZsZXgtd3JhcDp3cmFwO21hcmdpbi1yaWdodDotMTVweDttYXJnaW4tbGVmdDotMTVweH0ubm8tZ3V0dGVyc3ttYXJnaW4tcmlnaHQ6MDttYXJnaW4tbGVmdDowfS5uby1ndXR0ZXJzPi5jb2wsLm5vLWd1dHRlcnM+W2NsYXNzKj1cXFwiY29sLVxcXCJde3BhZGRpbmctcmlnaHQ6MDtwYWRkaW5nLWxlZnQ6MH0uY29sLTEsLmNvbC0yLC5jb2wtMywuY29sLTQsLmNvbC01LC5jb2wtNiwuY29sLTcsLmNvbC04LC5jb2wtOSwuY29sLTEwLC5jb2wtMTEsLmNvbC0xMiwuY29sLC5jb2wtYXV0bywuY29sLXNtLTEsLmNvbC1zbS0yLC5jb2wtc20tMywuY29sLXNtLTQsLmNvbC1zbS01LC5jb2wtc20tNiwuY29sLXNtLTcsLmNvbC1zbS04LC5jb2wtc20tOSwuY29sLXNtLTEwLC5jb2wtc20tMTEsLmNvbC1zbS0xMiwuY29sLXNtLC5jb2wtc20tYXV0bywuY29sLW1kLTEsLmNvbC1tZC0yLC5jb2wtbWQtMywuY29sLW1kLTQsLmNvbC1tZC01LC5jb2wtbWQtNiwuY29sLW1kLTcsLmNvbC1tZC04LC5jb2wtbWQtOSwuY29sLW1kLTEwLC5jb2wtbWQtMTEsLmNvbC1tZC0xMiwuY29sLW1kLC5jb2wtbWQtYXV0bywuY29sLWxnLTEsLmNvbC1sZy0yLC5jb2wtbGctMywuY29sLWxnLTQsLmNvbC1sZy01LC5jb2wtbGctNiwuY29sLWxnLTcsLmNvbC1sZy04LC5jb2wtbGctOSwuY29sLWxnLTEwLC5jb2wtbGctMTEsLmNvbC1sZy0xMiwuY29sLWxnLC5jb2wtbGctYXV0bywuY29sLXhsLTEsLmNvbC14bC0yLC5jb2wteGwtMywuY29sLXhsLTQsLmNvbC14bC01LC5jb2wteGwtNiwuY29sLXhsLTcsLmNvbC14bC04LC5jb2wteGwtOSwuY29sLXhsLTEwLC5jb2wteGwtMTEsLmNvbC14bC0xMiwuY29sLXhsLC5jb2wteGwtYXV0b3twb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO3BhZGRpbmctcmlnaHQ6MTVweDtwYWRkaW5nLWxlZnQ6MTVweH0uY29sey1tcy1mbGV4LXByZWZlcnJlZC1zaXplOjA7ZmxleC1iYXNpczowOy1tcy1mbGV4LXBvc2l0aXZlOjE7ZmxleC1ncm93OjE7bWF4LXdpZHRoOjEwMCV9LnJvdy1jb2xzLTE+KnstbXMtZmxleDowIDAgMTAwJTtmbGV4OjAgMCAxMDAlO21heC13aWR0aDoxMDAlfS5yb3ctY29scy0yPip7LW1zLWZsZXg6MCAwIDUwJTtmbGV4OjAgMCA1MCU7bWF4LXdpZHRoOjUwJX0ucm93LWNvbHMtMz4qey1tcy1mbGV4OjAgMCAzMy4zMzMzMzMlO2ZsZXg6MCAwIDMzLjMzMzMzMyU7bWF4LXdpZHRoOjMzLjMzMzMzMyV9LnJvdy1jb2xzLTQ+KnstbXMtZmxleDowIDAgMjUlO2ZsZXg6MCAwIDI1JTttYXgtd2lkdGg6MjUlfS5yb3ctY29scy01Pip7LW1zLWZsZXg6MCAwIDIwJTtmbGV4OjAgMCAyMCU7bWF4LXdpZHRoOjIwJX0ucm93LWNvbHMtNj4qey1tcy1mbGV4OjAgMCAxNi42NjY2NjclO2ZsZXg6MCAwIDE2LjY2NjY2NyU7bWF4LXdpZHRoOjE2LjY2NjY2NyV9LmNvbC1hdXRvey1tcy1mbGV4OjAgMCBhdXRvO2ZsZXg6MCAwIGF1dG87d2lkdGg6YXV0bzttYXgtd2lkdGg6MTAwJX0uY29sLTF7LW1zLWZsZXg6MCAwIDguMzMzMzMzJTtmbGV4OjAgMCA4LjMzMzMzMyU7bWF4LXdpZHRoOjguMzMzMzMzJX0uY29sLTJ7LW1zLWZsZXg6MCAwIDE2LjY2NjY2NyU7ZmxleDowIDAgMTYuNjY2NjY3JTttYXgtd2lkdGg6MTYuNjY2NjY3JX0uY29sLTN7LW1zLWZsZXg6MCAwIDI1JTtmbGV4OjAgMCAyNSU7bWF4LXdpZHRoOjI1JX0uY29sLTR7LW1zLWZsZXg6MCAwIDMzLjMzMzMzMyU7ZmxleDowIDAgMzMuMzMzMzMzJTttYXgtd2lkdGg6MzMuMzMzMzMzJX0uY29sLTV7LW1zLWZsZXg6MCAwIDQxLjY2NjY2NyU7ZmxleDowIDAgNDEuNjY2NjY3JTttYXgtd2lkdGg6NDEuNjY2NjY3JX0uY29sLTZ7LW1zLWZsZXg6MCAwIDUwJTtmbGV4OjAgMCA1MCU7bWF4LXdpZHRoOjUwJX0uY29sLTd7LW1zLWZsZXg6MCAwIDU4LjMzMzMzMyU7ZmxleDowIDAgNTguMzMzMzMzJTttYXgtd2lkdGg6NTguMzMzMzMzJX0uY29sLTh7LW1zLWZsZXg6MCAwIDY2LjY2NjY2NyU7ZmxleDowIDAgNjYuNjY2NjY3JTttYXgtd2lkdGg6NjYuNjY2NjY3JX0uY29sLTl7LW1zLWZsZXg6MCAwIDc1JTtmbGV4OjAgMCA3NSU7bWF4LXdpZHRoOjc1JX0uY29sLTEwey1tcy1mbGV4OjAgMCA4My4zMzMzMzMlO2ZsZXg6MCAwIDgzLjMzMzMzMyU7bWF4LXdpZHRoOjgzLjMzMzMzMyV9LmNvbC0xMXstbXMtZmxleDowIDAgOTEuNjY2NjY3JTtmbGV4OjAgMCA5MS42NjY2NjclO21heC13aWR0aDo5MS42NjY2NjclfS5jb2wtMTJ7LW1zLWZsZXg6MCAwIDEwMCU7ZmxleDowIDAgMTAwJTttYXgtd2lkdGg6MTAwJX0ub3JkZXItZmlyc3R7LW1zLWZsZXgtb3JkZXI6LTE7b3JkZXI6LTF9Lm9yZGVyLWxhc3R7LW1zLWZsZXgtb3JkZXI6MTM7b3JkZXI6MTN9Lm9yZGVyLTB7LW1zLWZsZXgtb3JkZXI6MDtvcmRlcjowfS5vcmRlci0xey1tcy1mbGV4LW9yZGVyOjE7b3JkZXI6MX0ub3JkZXItMnstbXMtZmxleC1vcmRlcjoyO29yZGVyOjJ9Lm9yZGVyLTN7LW1zLWZsZXgtb3JkZXI6MztvcmRlcjozfS5vcmRlci00ey1tcy1mbGV4LW9yZGVyOjQ7b3JkZXI6NH0ub3JkZXItNXstbXMtZmxleC1vcmRlcjo1O29yZGVyOjV9Lm9yZGVyLTZ7LW1zLWZsZXgtb3JkZXI6NjtvcmRlcjo2fS5vcmRlci03ey1tcy1mbGV4LW9yZGVyOjc7b3JkZXI6N30ub3JkZXItOHstbXMtZmxleC1vcmRlcjo4O29yZGVyOjh9Lm9yZGVyLTl7LW1zLWZsZXgtb3JkZXI6OTtvcmRlcjo5fS5vcmRlci0xMHstbXMtZmxleC1vcmRlcjoxMDtvcmRlcjoxMH0ub3JkZXItMTF7LW1zLWZsZXgtb3JkZXI6MTE7b3JkZXI6MTF9Lm9yZGVyLTEyey1tcy1mbGV4LW9yZGVyOjEyO29yZGVyOjEyfS5vZmZzZXQtMXttYXJnaW4tbGVmdDo4LjMzMzMzMyV9Lm9mZnNldC0ye21hcmdpbi1sZWZ0OjE2LjY2NjY2NyV9Lm9mZnNldC0ze21hcmdpbi1sZWZ0OjI1JX0ub2Zmc2V0LTR7bWFyZ2luLWxlZnQ6MzMuMzMzMzMzJX0ub2Zmc2V0LTV7bWFyZ2luLWxlZnQ6NDEuNjY2NjY3JX0ub2Zmc2V0LTZ7bWFyZ2luLWxlZnQ6NTAlfS5vZmZzZXQtN3ttYXJnaW4tbGVmdDo1OC4zMzMzMzMlfS5vZmZzZXQtOHttYXJnaW4tbGVmdDo2Ni42NjY2NjclfS5vZmZzZXQtOXttYXJnaW4tbGVmdDo3NSV9Lm9mZnNldC0xMHttYXJnaW4tbGVmdDo4My4zMzMzMzMlfS5vZmZzZXQtMTF7bWFyZ2luLWxlZnQ6OTEuNjY2NjY3JX1AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpey5jb2wtc217LW1zLWZsZXgtcHJlZmVycmVkLXNpemU6MDtmbGV4LWJhc2lzOjA7LW1zLWZsZXgtcG9zaXRpdmU6MTtmbGV4LWdyb3c6MTttYXgtd2lkdGg6MTAwJX0ucm93LWNvbHMtc20tMT4qey1tcy1mbGV4OjAgMCAxMDAlO2ZsZXg6MCAwIDEwMCU7bWF4LXdpZHRoOjEwMCV9LnJvdy1jb2xzLXNtLTI+KnstbXMtZmxleDowIDAgNTAlO2ZsZXg6MCAwIDUwJTttYXgtd2lkdGg6NTAlfS5yb3ctY29scy1zbS0zPip7LW1zLWZsZXg6MCAwIDMzLjMzMzMzMyU7ZmxleDowIDAgMzMuMzMzMzMzJTttYXgtd2lkdGg6MzMuMzMzMzMzJX0ucm93LWNvbHMtc20tND4qey1tcy1mbGV4OjAgMCAyNSU7ZmxleDowIDAgMjUlO21heC13aWR0aDoyNSV9LnJvdy1jb2xzLXNtLTU+KnstbXMtZmxleDowIDAgMjAlO2ZsZXg6MCAwIDIwJTttYXgtd2lkdGg6MjAlfS5yb3ctY29scy1zbS02Pip7LW1zLWZsZXg6MCAwIDE2LjY2NjY2NyU7ZmxleDowIDAgMTYuNjY2NjY3JTttYXgtd2lkdGg6MTYuNjY2NjY3JX0uY29sLXNtLWF1dG97LW1zLWZsZXg6MCAwIGF1dG87ZmxleDowIDAgYXV0bzt3aWR0aDphdXRvO21heC13aWR0aDoxMDAlfS5jb2wtc20tMXstbXMtZmxleDowIDAgOC4zMzMzMzMlO2ZsZXg6MCAwIDguMzMzMzMzJTttYXgtd2lkdGg6OC4zMzMzMzMlfS5jb2wtc20tMnstbXMtZmxleDowIDAgMTYuNjY2NjY3JTtmbGV4OjAgMCAxNi42NjY2NjclO21heC13aWR0aDoxNi42NjY2NjclfS5jb2wtc20tM3stbXMtZmxleDowIDAgMjUlO2ZsZXg6MCAwIDI1JTttYXgtd2lkdGg6MjUlfS5jb2wtc20tNHstbXMtZmxleDowIDAgMzMuMzMzMzMzJTtmbGV4OjAgMCAzMy4zMzMzMzMlO21heC13aWR0aDozMy4zMzMzMzMlfS5jb2wtc20tNXstbXMtZmxleDowIDAgNDEuNjY2NjY3JTtmbGV4OjAgMCA0MS42NjY2NjclO21heC13aWR0aDo0MS42NjY2NjclfS5jb2wtc20tNnstbXMtZmxleDowIDAgNTAlO2ZsZXg6MCAwIDUwJTttYXgtd2lkdGg6NTAlfS5jb2wtc20tN3stbXMtZmxleDowIDAgNTguMzMzMzMzJTtmbGV4OjAgMCA1OC4zMzMzMzMlO21heC13aWR0aDo1OC4zMzMzMzMlfS5jb2wtc20tOHstbXMtZmxleDowIDAgNjYuNjY2NjY3JTtmbGV4OjAgMCA2Ni42NjY2NjclO21heC13aWR0aDo2Ni42NjY2NjclfS5jb2wtc20tOXstbXMtZmxleDowIDAgNzUlO2ZsZXg6MCAwIDc1JTttYXgtd2lkdGg6NzUlfS5jb2wtc20tMTB7LW1zLWZsZXg6MCAwIDgzLjMzMzMzMyU7ZmxleDowIDAgODMuMzMzMzMzJTttYXgtd2lkdGg6ODMuMzMzMzMzJX0uY29sLXNtLTExey1tcy1mbGV4OjAgMCA5MS42NjY2NjclO2ZsZXg6MCAwIDkxLjY2NjY2NyU7bWF4LXdpZHRoOjkxLjY2NjY2NyV9LmNvbC1zbS0xMnstbXMtZmxleDowIDAgMTAwJTtmbGV4OjAgMCAxMDAlO21heC13aWR0aDoxMDAlfS5vcmRlci1zbS1maXJzdHstbXMtZmxleC1vcmRlcjotMTtvcmRlcjotMX0ub3JkZXItc20tbGFzdHstbXMtZmxleC1vcmRlcjoxMztvcmRlcjoxM30ub3JkZXItc20tMHstbXMtZmxleC1vcmRlcjowO29yZGVyOjB9Lm9yZGVyLXNtLTF7LW1zLWZsZXgtb3JkZXI6MTtvcmRlcjoxfS5vcmRlci1zbS0yey1tcy1mbGV4LW9yZGVyOjI7b3JkZXI6Mn0ub3JkZXItc20tM3stbXMtZmxleC1vcmRlcjozO29yZGVyOjN9Lm9yZGVyLXNtLTR7LW1zLWZsZXgtb3JkZXI6NDtvcmRlcjo0fS5vcmRlci1zbS01ey1tcy1mbGV4LW9yZGVyOjU7b3JkZXI6NX0ub3JkZXItc20tNnstbXMtZmxleC1vcmRlcjo2O29yZGVyOjZ9Lm9yZGVyLXNtLTd7LW1zLWZsZXgtb3JkZXI6NztvcmRlcjo3fS5vcmRlci1zbS04ey1tcy1mbGV4LW9yZGVyOjg7b3JkZXI6OH0ub3JkZXItc20tOXstbXMtZmxleC1vcmRlcjo5O29yZGVyOjl9Lm9yZGVyLXNtLTEwey1tcy1mbGV4LW9yZGVyOjEwO29yZGVyOjEwfS5vcmRlci1zbS0xMXstbXMtZmxleC1vcmRlcjoxMTtvcmRlcjoxMX0ub3JkZXItc20tMTJ7LW1zLWZsZXgtb3JkZXI6MTI7b3JkZXI6MTJ9Lm9mZnNldC1zbS0we21hcmdpbi1sZWZ0OjB9Lm9mZnNldC1zbS0xe21hcmdpbi1sZWZ0OjguMzMzMzMzJX0ub2Zmc2V0LXNtLTJ7bWFyZ2luLWxlZnQ6MTYuNjY2NjY3JX0ub2Zmc2V0LXNtLTN7bWFyZ2luLWxlZnQ6MjUlfS5vZmZzZXQtc20tNHttYXJnaW4tbGVmdDozMy4zMzMzMzMlfS5vZmZzZXQtc20tNXttYXJnaW4tbGVmdDo0MS42NjY2NjclfS5vZmZzZXQtc20tNnttYXJnaW4tbGVmdDo1MCV9Lm9mZnNldC1zbS03e21hcmdpbi1sZWZ0OjU4LjMzMzMzMyV9Lm9mZnNldC1zbS04e21hcmdpbi1sZWZ0OjY2LjY2NjY2NyV9Lm9mZnNldC1zbS05e21hcmdpbi1sZWZ0Ojc1JX0ub2Zmc2V0LXNtLTEwe21hcmdpbi1sZWZ0OjgzLjMzMzMzMyV9Lm9mZnNldC1zbS0xMXttYXJnaW4tbGVmdDo5MS42NjY2NjclfX1AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpey5jb2wtbWR7LW1zLWZsZXgtcHJlZmVycmVkLXNpemU6MDtmbGV4LWJhc2lzOjA7LW1zLWZsZXgtcG9zaXRpdmU6MTtmbGV4LWdyb3c6MTttYXgtd2lkdGg6MTAwJX0ucm93LWNvbHMtbWQtMT4qey1tcy1mbGV4OjAgMCAxMDAlO2ZsZXg6MCAwIDEwMCU7bWF4LXdpZHRoOjEwMCV9LnJvdy1jb2xzLW1kLTI+KnstbXMtZmxleDowIDAgNTAlO2ZsZXg6MCAwIDUwJTttYXgtd2lkdGg6NTAlfS5yb3ctY29scy1tZC0zPip7LW1zLWZsZXg6MCAwIDMzLjMzMzMzMyU7ZmxleDowIDAgMzMuMzMzMzMzJTttYXgtd2lkdGg6MzMuMzMzMzMzJX0ucm93LWNvbHMtbWQtND4qey1tcy1mbGV4OjAgMCAyNSU7ZmxleDowIDAgMjUlO21heC13aWR0aDoyNSV9LnJvdy1jb2xzLW1kLTU+KnstbXMtZmxleDowIDAgMjAlO2ZsZXg6MCAwIDIwJTttYXgtd2lkdGg6MjAlfS5yb3ctY29scy1tZC02Pip7LW1zLWZsZXg6MCAwIDE2LjY2NjY2NyU7ZmxleDowIDAgMTYuNjY2NjY3JTttYXgtd2lkdGg6MTYuNjY2NjY3JX0uY29sLW1kLWF1dG97LW1zLWZsZXg6MCAwIGF1dG87ZmxleDowIDAgYXV0bzt3aWR0aDphdXRvO21heC13aWR0aDoxMDAlfS5jb2wtbWQtMXstbXMtZmxleDowIDAgOC4zMzMzMzMlO2ZsZXg6MCAwIDguMzMzMzMzJTttYXgtd2lkdGg6OC4zMzMzMzMlfS5jb2wtbWQtMnstbXMtZmxleDowIDAgMTYuNjY2NjY3JTtmbGV4OjAgMCAxNi42NjY2NjclO21heC13aWR0aDoxNi42NjY2NjclfS5jb2wtbWQtM3stbXMtZmxleDowIDAgMjUlO2ZsZXg6MCAwIDI1JTttYXgtd2lkdGg6MjUlfS5jb2wtbWQtNHstbXMtZmxleDowIDAgMzMuMzMzMzMzJTtmbGV4OjAgMCAzMy4zMzMzMzMlO21heC13aWR0aDozMy4zMzMzMzMlfS5jb2wtbWQtNXstbXMtZmxleDowIDAgNDEuNjY2NjY3JTtmbGV4OjAgMCA0MS42NjY2NjclO21heC13aWR0aDo0MS42NjY2NjclfS5jb2wtbWQtNnstbXMtZmxleDowIDAgNTAlO2ZsZXg6MCAwIDUwJTttYXgtd2lkdGg6NTAlfS5jb2wtbWQtN3stbXMtZmxleDowIDAgNTguMzMzMzMzJTtmbGV4OjAgMCA1OC4zMzMzMzMlO21heC13aWR0aDo1OC4zMzMzMzMlfS5jb2wtbWQtOHstbXMtZmxleDowIDAgNjYuNjY2NjY3JTtmbGV4OjAgMCA2Ni42NjY2NjclO21heC13aWR0aDo2Ni42NjY2NjclfS5jb2wtbWQtOXstbXMtZmxleDowIDAgNzUlO2ZsZXg6MCAwIDc1JTttYXgtd2lkdGg6NzUlfS5jb2wtbWQtMTB7LW1zLWZsZXg6MCAwIDgzLjMzMzMzMyU7ZmxleDowIDAgODMuMzMzMzMzJTttYXgtd2lkdGg6ODMuMzMzMzMzJX0uY29sLW1kLTExey1tcy1mbGV4OjAgMCA5MS42NjY2NjclO2ZsZXg6MCAwIDkxLjY2NjY2NyU7bWF4LXdpZHRoOjkxLjY2NjY2NyV9LmNvbC1tZC0xMnstbXMtZmxleDowIDAgMTAwJTtmbGV4OjAgMCAxMDAlO21heC13aWR0aDoxMDAlfS5vcmRlci1tZC1maXJzdHstbXMtZmxleC1vcmRlcjotMTtvcmRlcjotMX0ub3JkZXItbWQtbGFzdHstbXMtZmxleC1vcmRlcjoxMztvcmRlcjoxM30ub3JkZXItbWQtMHstbXMtZmxleC1vcmRlcjowO29yZGVyOjB9Lm9yZGVyLW1kLTF7LW1zLWZsZXgtb3JkZXI6MTtvcmRlcjoxfS5vcmRlci1tZC0yey1tcy1mbGV4LW9yZGVyOjI7b3JkZXI6Mn0ub3JkZXItbWQtM3stbXMtZmxleC1vcmRlcjozO29yZGVyOjN9Lm9yZGVyLW1kLTR7LW1zLWZsZXgtb3JkZXI6NDtvcmRlcjo0fS5vcmRlci1tZC01ey1tcy1mbGV4LW9yZGVyOjU7b3JkZXI6NX0ub3JkZXItbWQtNnstbXMtZmxleC1vcmRlcjo2O29yZGVyOjZ9Lm9yZGVyLW1kLTd7LW1zLWZsZXgtb3JkZXI6NztvcmRlcjo3fS5vcmRlci1tZC04ey1tcy1mbGV4LW9yZGVyOjg7b3JkZXI6OH0ub3JkZXItbWQtOXstbXMtZmxleC1vcmRlcjo5O29yZGVyOjl9Lm9yZGVyLW1kLTEwey1tcy1mbGV4LW9yZGVyOjEwO29yZGVyOjEwfS5vcmRlci1tZC0xMXstbXMtZmxleC1vcmRlcjoxMTtvcmRlcjoxMX0ub3JkZXItbWQtMTJ7LW1zLWZsZXgtb3JkZXI6MTI7b3JkZXI6MTJ9Lm9mZnNldC1tZC0we21hcmdpbi1sZWZ0OjB9Lm9mZnNldC1tZC0xe21hcmdpbi1sZWZ0OjguMzMzMzMzJX0ub2Zmc2V0LW1kLTJ7bWFyZ2luLWxlZnQ6MTYuNjY2NjY3JX0ub2Zmc2V0LW1kLTN7bWFyZ2luLWxlZnQ6MjUlfS5vZmZzZXQtbWQtNHttYXJnaW4tbGVmdDozMy4zMzMzMzMlfS5vZmZzZXQtbWQtNXttYXJnaW4tbGVmdDo0MS42NjY2NjclfS5vZmZzZXQtbWQtNnttYXJnaW4tbGVmdDo1MCV9Lm9mZnNldC1tZC03e21hcmdpbi1sZWZ0OjU4LjMzMzMzMyV9Lm9mZnNldC1tZC04e21hcmdpbi1sZWZ0OjY2LjY2NjY2NyV9Lm9mZnNldC1tZC05e21hcmdpbi1sZWZ0Ojc1JX0ub2Zmc2V0LW1kLTEwe21hcmdpbi1sZWZ0OjgzLjMzMzMzMyV9Lm9mZnNldC1tZC0xMXttYXJnaW4tbGVmdDo5MS42NjY2NjclfX1AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpey5jb2wtbGd7LW1zLWZsZXgtcHJlZmVycmVkLXNpemU6MDtmbGV4LWJhc2lzOjA7LW1zLWZsZXgtcG9zaXRpdmU6MTtmbGV4LWdyb3c6MTttYXgtd2lkdGg6MTAwJX0ucm93LWNvbHMtbGctMT4qey1tcy1mbGV4OjAgMCAxMDAlO2ZsZXg6MCAwIDEwMCU7bWF4LXdpZHRoOjEwMCV9LnJvdy1jb2xzLWxnLTI+KnstbXMtZmxleDowIDAgNTAlO2ZsZXg6MCAwIDUwJTttYXgtd2lkdGg6NTAlfS5yb3ctY29scy1sZy0zPip7LW1zLWZsZXg6MCAwIDMzLjMzMzMzMyU7ZmxleDowIDAgMzMuMzMzMzMzJTttYXgtd2lkdGg6MzMuMzMzMzMzJX0ucm93LWNvbHMtbGctND4qey1tcy1mbGV4OjAgMCAyNSU7ZmxleDowIDAgMjUlO21heC13aWR0aDoyNSV9LnJvdy1jb2xzLWxnLTU+KnstbXMtZmxleDowIDAgMjAlO2ZsZXg6MCAwIDIwJTttYXgtd2lkdGg6MjAlfS5yb3ctY29scy1sZy02Pip7LW1zLWZsZXg6MCAwIDE2LjY2NjY2NyU7ZmxleDowIDAgMTYuNjY2NjY3JTttYXgtd2lkdGg6MTYuNjY2NjY3JX0uY29sLWxnLWF1dG97LW1zLWZsZXg6MCAwIGF1dG87ZmxleDowIDAgYXV0bzt3aWR0aDphdXRvO21heC13aWR0aDoxMDAlfS5jb2wtbGctMXstbXMtZmxleDowIDAgOC4zMzMzMzMlO2ZsZXg6MCAwIDguMzMzMzMzJTttYXgtd2lkdGg6OC4zMzMzMzMlfS5jb2wtbGctMnstbXMtZmxleDowIDAgMTYuNjY2NjY3JTtmbGV4OjAgMCAxNi42NjY2NjclO21heC13aWR0aDoxNi42NjY2NjclfS5jb2wtbGctM3stbXMtZmxleDowIDAgMjUlO2ZsZXg6MCAwIDI1JTttYXgtd2lkdGg6MjUlfS5jb2wtbGctNHstbXMtZmxleDowIDAgMzMuMzMzMzMzJTtmbGV4OjAgMCAzMy4zMzMzMzMlO21heC13aWR0aDozMy4zMzMzMzMlfS5jb2wtbGctNXstbXMtZmxleDowIDAgNDEuNjY2NjY3JTtmbGV4OjAgMCA0MS42NjY2NjclO21heC13aWR0aDo0MS42NjY2NjclfS5jb2wtbGctNnstbXMtZmxleDowIDAgNTAlO2ZsZXg6MCAwIDUwJTttYXgtd2lkdGg6NTAlfS5jb2wtbGctN3stbXMtZmxleDowIDAgNTguMzMzMzMzJTtmbGV4OjAgMCA1OC4zMzMzMzMlO21heC13aWR0aDo1OC4zMzMzMzMlfS5jb2wtbGctOHstbXMtZmxleDowIDAgNjYuNjY2NjY3JTtmbGV4OjAgMCA2Ni42NjY2NjclO21heC13aWR0aDo2Ni42NjY2NjclfS5jb2wtbGctOXstbXMtZmxleDowIDAgNzUlO2ZsZXg6MCAwIDc1JTttYXgtd2lkdGg6NzUlfS5jb2wtbGctMTB7LW1zLWZsZXg6MCAwIDgzLjMzMzMzMyU7ZmxleDowIDAgODMuMzMzMzMzJTttYXgtd2lkdGg6ODMuMzMzMzMzJX0uY29sLWxnLTExey1tcy1mbGV4OjAgMCA5MS42NjY2NjclO2ZsZXg6MCAwIDkxLjY2NjY2NyU7bWF4LXdpZHRoOjkxLjY2NjY2NyV9LmNvbC1sZy0xMnstbXMtZmxleDowIDAgMTAwJTtmbGV4OjAgMCAxMDAlO21heC13aWR0aDoxMDAlfS5vcmRlci1sZy1maXJzdHstbXMtZmxleC1vcmRlcjotMTtvcmRlcjotMX0ub3JkZXItbGctbGFzdHstbXMtZmxleC1vcmRlcjoxMztvcmRlcjoxM30ub3JkZXItbGctMHstbXMtZmxleC1vcmRlcjowO29yZGVyOjB9Lm9yZGVyLWxnLTF7LW1zLWZsZXgtb3JkZXI6MTtvcmRlcjoxfS5vcmRlci1sZy0yey1tcy1mbGV4LW9yZGVyOjI7b3JkZXI6Mn0ub3JkZXItbGctM3stbXMtZmxleC1vcmRlcjozO29yZGVyOjN9Lm9yZGVyLWxnLTR7LW1zLWZsZXgtb3JkZXI6NDtvcmRlcjo0fS5vcmRlci1sZy01ey1tcy1mbGV4LW9yZGVyOjU7b3JkZXI6NX0ub3JkZXItbGctNnstbXMtZmxleC1vcmRlcjo2O29yZGVyOjZ9Lm9yZGVyLWxnLTd7LW1zLWZsZXgtb3JkZXI6NztvcmRlcjo3fS5vcmRlci1sZy04ey1tcy1mbGV4LW9yZGVyOjg7b3JkZXI6OH0ub3JkZXItbGctOXstbXMtZmxleC1vcmRlcjo5O29yZGVyOjl9Lm9yZGVyLWxnLTEwey1tcy1mbGV4LW9yZGVyOjEwO29yZGVyOjEwfS5vcmRlci1sZy0xMXstbXMtZmxleC1vcmRlcjoxMTtvcmRlcjoxMX0ub3JkZXItbGctMTJ7LW1zLWZsZXgtb3JkZXI6MTI7b3JkZXI6MTJ9Lm9mZnNldC1sZy0we21hcmdpbi1sZWZ0OjB9Lm9mZnNldC1sZy0xe21hcmdpbi1sZWZ0OjguMzMzMzMzJX0ub2Zmc2V0LWxnLTJ7bWFyZ2luLWxlZnQ6MTYuNjY2NjY3JX0ub2Zmc2V0LWxnLTN7bWFyZ2luLWxlZnQ6MjUlfS5vZmZzZXQtbGctNHttYXJnaW4tbGVmdDozMy4zMzMzMzMlfS5vZmZzZXQtbGctNXttYXJnaW4tbGVmdDo0MS42NjY2NjclfS5vZmZzZXQtbGctNnttYXJnaW4tbGVmdDo1MCV9Lm9mZnNldC1sZy03e21hcmdpbi1sZWZ0OjU4LjMzMzMzMyV9Lm9mZnNldC1sZy04e21hcmdpbi1sZWZ0OjY2LjY2NjY2NyV9Lm9mZnNldC1sZy05e21hcmdpbi1sZWZ0Ojc1JX0ub2Zmc2V0LWxnLTEwe21hcmdpbi1sZWZ0OjgzLjMzMzMzMyV9Lm9mZnNldC1sZy0xMXttYXJnaW4tbGVmdDo5MS42NjY2NjclfX1AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KXsuY29sLXhsey1tcy1mbGV4LXByZWZlcnJlZC1zaXplOjA7ZmxleC1iYXNpczowOy1tcy1mbGV4LXBvc2l0aXZlOjE7ZmxleC1ncm93OjE7bWF4LXdpZHRoOjEwMCV9LnJvdy1jb2xzLXhsLTE+KnstbXMtZmxleDowIDAgMTAwJTtmbGV4OjAgMCAxMDAlO21heC13aWR0aDoxMDAlfS5yb3ctY29scy14bC0yPip7LW1zLWZsZXg6MCAwIDUwJTtmbGV4OjAgMCA1MCU7bWF4LXdpZHRoOjUwJX0ucm93LWNvbHMteGwtMz4qey1tcy1mbGV4OjAgMCAzMy4zMzMzMzMlO2ZsZXg6MCAwIDMzLjMzMzMzMyU7bWF4LXdpZHRoOjMzLjMzMzMzMyV9LnJvdy1jb2xzLXhsLTQ+KnstbXMtZmxleDowIDAgMjUlO2ZsZXg6MCAwIDI1JTttYXgtd2lkdGg6MjUlfS5yb3ctY29scy14bC01Pip7LW1zLWZsZXg6MCAwIDIwJTtmbGV4OjAgMCAyMCU7bWF4LXdpZHRoOjIwJX0ucm93LWNvbHMteGwtNj4qey1tcy1mbGV4OjAgMCAxNi42NjY2NjclO2ZsZXg6MCAwIDE2LjY2NjY2NyU7bWF4LXdpZHRoOjE2LjY2NjY2NyV9LmNvbC14bC1hdXRvey1tcy1mbGV4OjAgMCBhdXRvO2ZsZXg6MCAwIGF1dG87d2lkdGg6YXV0bzttYXgtd2lkdGg6MTAwJX0uY29sLXhsLTF7LW1zLWZsZXg6MCAwIDguMzMzMzMzJTtmbGV4OjAgMCA4LjMzMzMzMyU7bWF4LXdpZHRoOjguMzMzMzMzJX0uY29sLXhsLTJ7LW1zLWZsZXg6MCAwIDE2LjY2NjY2NyU7ZmxleDowIDAgMTYuNjY2NjY3JTttYXgtd2lkdGg6MTYuNjY2NjY3JX0uY29sLXhsLTN7LW1zLWZsZXg6MCAwIDI1JTtmbGV4OjAgMCAyNSU7bWF4LXdpZHRoOjI1JX0uY29sLXhsLTR7LW1zLWZsZXg6MCAwIDMzLjMzMzMzMyU7ZmxleDowIDAgMzMuMzMzMzMzJTttYXgtd2lkdGg6MzMuMzMzMzMzJX0uY29sLXhsLTV7LW1zLWZsZXg6MCAwIDQxLjY2NjY2NyU7ZmxleDowIDAgNDEuNjY2NjY3JTttYXgtd2lkdGg6NDEuNjY2NjY3JX0uY29sLXhsLTZ7LW1zLWZsZXg6MCAwIDUwJTtmbGV4OjAgMCA1MCU7bWF4LXdpZHRoOjUwJX0uY29sLXhsLTd7LW1zLWZsZXg6MCAwIDU4LjMzMzMzMyU7ZmxleDowIDAgNTguMzMzMzMzJTttYXgtd2lkdGg6NTguMzMzMzMzJX0uY29sLXhsLTh7LW1zLWZsZXg6MCAwIDY2LjY2NjY2NyU7ZmxleDowIDAgNjYuNjY2NjY3JTttYXgtd2lkdGg6NjYuNjY2NjY3JX0uY29sLXhsLTl7LW1zLWZsZXg6MCAwIDc1JTtmbGV4OjAgMCA3NSU7bWF4LXdpZHRoOjc1JX0uY29sLXhsLTEwey1tcy1mbGV4OjAgMCA4My4zMzMzMzMlO2ZsZXg6MCAwIDgzLjMzMzMzMyU7bWF4LXdpZHRoOjgzLjMzMzMzMyV9LmNvbC14bC0xMXstbXMtZmxleDowIDAgOTEuNjY2NjY3JTtmbGV4OjAgMCA5MS42NjY2NjclO21heC13aWR0aDo5MS42NjY2NjclfS5jb2wteGwtMTJ7LW1zLWZsZXg6MCAwIDEwMCU7ZmxleDowIDAgMTAwJTttYXgtd2lkdGg6MTAwJX0ub3JkZXIteGwtZmlyc3R7LW1zLWZsZXgtb3JkZXI6LTE7b3JkZXI6LTF9Lm9yZGVyLXhsLWxhc3R7LW1zLWZsZXgtb3JkZXI6MTM7b3JkZXI6MTN9Lm9yZGVyLXhsLTB7LW1zLWZsZXgtb3JkZXI6MDtvcmRlcjowfS5vcmRlci14bC0xey1tcy1mbGV4LW9yZGVyOjE7b3JkZXI6MX0ub3JkZXIteGwtMnstbXMtZmxleC1vcmRlcjoyO29yZGVyOjJ9Lm9yZGVyLXhsLTN7LW1zLWZsZXgtb3JkZXI6MztvcmRlcjozfS5vcmRlci14bC00ey1tcy1mbGV4LW9yZGVyOjQ7b3JkZXI6NH0ub3JkZXIteGwtNXstbXMtZmxleC1vcmRlcjo1O29yZGVyOjV9Lm9yZGVyLXhsLTZ7LW1zLWZsZXgtb3JkZXI6NjtvcmRlcjo2fS5vcmRlci14bC03ey1tcy1mbGV4LW9yZGVyOjc7b3JkZXI6N30ub3JkZXIteGwtOHstbXMtZmxleC1vcmRlcjo4O29yZGVyOjh9Lm9yZGVyLXhsLTl7LW1zLWZsZXgtb3JkZXI6OTtvcmRlcjo5fS5vcmRlci14bC0xMHstbXMtZmxleC1vcmRlcjoxMDtvcmRlcjoxMH0ub3JkZXIteGwtMTF7LW1zLWZsZXgtb3JkZXI6MTE7b3JkZXI6MTF9Lm9yZGVyLXhsLTEyey1tcy1mbGV4LW9yZGVyOjEyO29yZGVyOjEyfS5vZmZzZXQteGwtMHttYXJnaW4tbGVmdDowfS5vZmZzZXQteGwtMXttYXJnaW4tbGVmdDo4LjMzMzMzMyV9Lm9mZnNldC14bC0ye21hcmdpbi1sZWZ0OjE2LjY2NjY2NyV9Lm9mZnNldC14bC0ze21hcmdpbi1sZWZ0OjI1JX0ub2Zmc2V0LXhsLTR7bWFyZ2luLWxlZnQ6MzMuMzMzMzMzJX0ub2Zmc2V0LXhsLTV7bWFyZ2luLWxlZnQ6NDEuNjY2NjY3JX0ub2Zmc2V0LXhsLTZ7bWFyZ2luLWxlZnQ6NTAlfS5vZmZzZXQteGwtN3ttYXJnaW4tbGVmdDo1OC4zMzMzMzMlfS5vZmZzZXQteGwtOHttYXJnaW4tbGVmdDo2Ni42NjY2NjclfS5vZmZzZXQteGwtOXttYXJnaW4tbGVmdDo3NSV9Lm9mZnNldC14bC0xMHttYXJnaW4tbGVmdDo4My4zMzMzMzMlfS5vZmZzZXQteGwtMTF7bWFyZ2luLWxlZnQ6OTEuNjY2NjY3JX19LnRhYmxle3dpZHRoOjEwMCU7bWFyZ2luLWJvdHRvbToxcmVtO2NvbG9yOiMyMTI1Mjl9LnRhYmxlIHRoLC50YWJsZSB0ZHtwYWRkaW5nOjAuNzVyZW07dmVydGljYWwtYWxpZ246dG9wO2JvcmRlci10b3A6MXB4IHNvbGlkICNkZWUyZTZ9LnRhYmxlIHRoZWFkIHRoe3ZlcnRpY2FsLWFsaWduOmJvdHRvbTtib3JkZXItYm90dG9tOjJweCBzb2xpZCAjZGVlMmU2fS50YWJsZSB0Ym9keSt0Ym9keXtib3JkZXItdG9wOjJweCBzb2xpZCAjZGVlMmU2fS50YWJsZS1zbSB0aCwudGFibGUtc20gdGR7cGFkZGluZzowLjNyZW19LnRhYmxlLWJvcmRlcmVke2JvcmRlcjoxcHggc29saWQgI2RlZTJlNn0udGFibGUtYm9yZGVyZWQgdGgsLnRhYmxlLWJvcmRlcmVkIHRke2JvcmRlcjoxcHggc29saWQgI2RlZTJlNn0udGFibGUtYm9yZGVyZWQgdGhlYWQgdGgsLnRhYmxlLWJvcmRlcmVkIHRoZWFkIHRke2JvcmRlci1ib3R0b20td2lkdGg6MnB4fS50YWJsZS1ib3JkZXJsZXNzIHRoLC50YWJsZS1ib3JkZXJsZXNzIHRkLC50YWJsZS1ib3JkZXJsZXNzIHRoZWFkIHRoLC50YWJsZS1ib3JkZXJsZXNzIHRib2R5K3Rib2R5e2JvcmRlcjowfS50YWJsZS1zdHJpcGVkIHRib2R5IHRyOm50aC1vZi10eXBlKG9kZCl7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLDAuMDUpfS50YWJsZS1ob3ZlciB0Ym9keSB0cjpob3Zlcntjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwwLjA3NSl9LnRhYmxlLXByaW1hcnksLnRhYmxlLXByaW1hcnk+dGgsLnRhYmxlLXByaW1hcnk+dGR7YmFja2dyb3VuZC1jb2xvcjojYjhkYWZmfS50YWJsZS1wcmltYXJ5IHRoLC50YWJsZS1wcmltYXJ5IHRkLC50YWJsZS1wcmltYXJ5IHRoZWFkIHRoLC50YWJsZS1wcmltYXJ5IHRib2R5K3Rib2R5e2JvcmRlci1jb2xvcjojN2FiYWZmfS50YWJsZS1ob3ZlciAudGFibGUtcHJpbWFyeTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiM5ZmNkZmZ9LnRhYmxlLWhvdmVyIC50YWJsZS1wcmltYXJ5OmhvdmVyPnRkLC50YWJsZS1ob3ZlciAudGFibGUtcHJpbWFyeTpob3Zlcj50aHtiYWNrZ3JvdW5kLWNvbG9yOiM5ZmNkZmZ9LnRhYmxlLXNlY29uZGFyeSwudGFibGUtc2Vjb25kYXJ5PnRoLC50YWJsZS1zZWNvbmRhcnk+dGR7YmFja2dyb3VuZC1jb2xvcjojZDZkOGRifS50YWJsZS1zZWNvbmRhcnkgdGgsLnRhYmxlLXNlY29uZGFyeSB0ZCwudGFibGUtc2Vjb25kYXJ5IHRoZWFkIHRoLC50YWJsZS1zZWNvbmRhcnkgdGJvZHkrdGJvZHl7Ym9yZGVyLWNvbG9yOiNiM2I3YmJ9LnRhYmxlLWhvdmVyIC50YWJsZS1zZWNvbmRhcnk6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojYzhjYmNmfS50YWJsZS1ob3ZlciAudGFibGUtc2Vjb25kYXJ5OmhvdmVyPnRkLC50YWJsZS1ob3ZlciAudGFibGUtc2Vjb25kYXJ5OmhvdmVyPnRoe2JhY2tncm91bmQtY29sb3I6I2M4Y2JjZn0udGFibGUtc3VjY2VzcywudGFibGUtc3VjY2Vzcz50aCwudGFibGUtc3VjY2Vzcz50ZHtiYWNrZ3JvdW5kLWNvbG9yOiNjM2U2Y2J9LnRhYmxlLXN1Y2Nlc3MgdGgsLnRhYmxlLXN1Y2Nlc3MgdGQsLnRhYmxlLXN1Y2Nlc3MgdGhlYWQgdGgsLnRhYmxlLXN1Y2Nlc3MgdGJvZHkrdGJvZHl7Ym9yZGVyLWNvbG9yOiM4ZmQxOWV9LnRhYmxlLWhvdmVyIC50YWJsZS1zdWNjZXNzOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2IxZGZiYn0udGFibGUtaG92ZXIgLnRhYmxlLXN1Y2Nlc3M6aG92ZXI+dGQsLnRhYmxlLWhvdmVyIC50YWJsZS1zdWNjZXNzOmhvdmVyPnRoe2JhY2tncm91bmQtY29sb3I6I2IxZGZiYn0udGFibGUtaW5mbywudGFibGUtaW5mbz50aCwudGFibGUtaW5mbz50ZHtiYWNrZ3JvdW5kLWNvbG9yOiNiZWU1ZWJ9LnRhYmxlLWluZm8gdGgsLnRhYmxlLWluZm8gdGQsLnRhYmxlLWluZm8gdGhlYWQgdGgsLnRhYmxlLWluZm8gdGJvZHkrdGJvZHl7Ym9yZGVyLWNvbG9yOiM4NmNmZGF9LnRhYmxlLWhvdmVyIC50YWJsZS1pbmZvOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2FiZGRlNX0udGFibGUtaG92ZXIgLnRhYmxlLWluZm86aG92ZXI+dGQsLnRhYmxlLWhvdmVyIC50YWJsZS1pbmZvOmhvdmVyPnRoe2JhY2tncm91bmQtY29sb3I6I2FiZGRlNX0udGFibGUtd2FybmluZywudGFibGUtd2FybmluZz50aCwudGFibGUtd2FybmluZz50ZHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmVlYmF9LnRhYmxlLXdhcm5pbmcgdGgsLnRhYmxlLXdhcm5pbmcgdGQsLnRhYmxlLXdhcm5pbmcgdGhlYWQgdGgsLnRhYmxlLXdhcm5pbmcgdGJvZHkrdGJvZHl7Ym9yZGVyLWNvbG9yOiNmZmRmN2V9LnRhYmxlLWhvdmVyIC50YWJsZS13YXJuaW5nOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2ZmZThhMX0udGFibGUtaG92ZXIgLnRhYmxlLXdhcm5pbmc6aG92ZXI+dGQsLnRhYmxlLWhvdmVyIC50YWJsZS13YXJuaW5nOmhvdmVyPnRoe2JhY2tncm91bmQtY29sb3I6I2ZmZThhMX0udGFibGUtZGFuZ2VyLC50YWJsZS1kYW5nZXI+dGgsLnRhYmxlLWRhbmdlcj50ZHtiYWNrZ3JvdW5kLWNvbG9yOiNmNWM2Y2J9LnRhYmxlLWRhbmdlciB0aCwudGFibGUtZGFuZ2VyIHRkLC50YWJsZS1kYW5nZXIgdGhlYWQgdGgsLnRhYmxlLWRhbmdlciB0Ym9keSt0Ym9keXtib3JkZXItY29sb3I6I2VkOTY5ZX0udGFibGUtaG92ZXIgLnRhYmxlLWRhbmdlcjpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNmMWIwYjd9LnRhYmxlLWhvdmVyIC50YWJsZS1kYW5nZXI6aG92ZXI+dGQsLnRhYmxlLWhvdmVyIC50YWJsZS1kYW5nZXI6aG92ZXI+dGh7YmFja2dyb3VuZC1jb2xvcjojZjFiMGI3fS50YWJsZS1saWdodCwudGFibGUtbGlnaHQ+dGgsLnRhYmxlLWxpZ2h0PnRke2JhY2tncm91bmQtY29sb3I6I2ZkZmRmZX0udGFibGUtbGlnaHQgdGgsLnRhYmxlLWxpZ2h0IHRkLC50YWJsZS1saWdodCB0aGVhZCB0aCwudGFibGUtbGlnaHQgdGJvZHkrdGJvZHl7Ym9yZGVyLWNvbG9yOiNmYmZjZmN9LnRhYmxlLWhvdmVyIC50YWJsZS1saWdodDpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNlY2VjZjZ9LnRhYmxlLWhvdmVyIC50YWJsZS1saWdodDpob3Zlcj50ZCwudGFibGUtaG92ZXIgLnRhYmxlLWxpZ2h0OmhvdmVyPnRoe2JhY2tncm91bmQtY29sb3I6I2VjZWNmNn0udGFibGUtZGFyaywudGFibGUtZGFyaz50aCwudGFibGUtZGFyaz50ZHtiYWNrZ3JvdW5kLWNvbG9yOiNjNmM4Y2F9LnRhYmxlLWRhcmsgdGgsLnRhYmxlLWRhcmsgdGQsLnRhYmxlLWRhcmsgdGhlYWQgdGgsLnRhYmxlLWRhcmsgdGJvZHkrdGJvZHl7Ym9yZGVyLWNvbG9yOiM5NTk5OWN9LnRhYmxlLWhvdmVyIC50YWJsZS1kYXJrOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2I5YmJiZX0udGFibGUtaG92ZXIgLnRhYmxlLWRhcms6aG92ZXI+dGQsLnRhYmxlLWhvdmVyIC50YWJsZS1kYXJrOmhvdmVyPnRoe2JhY2tncm91bmQtY29sb3I6I2I5YmJiZX0udGFibGUtYWN0aXZlLC50YWJsZS1hY3RpdmU+dGgsLnRhYmxlLWFjdGl2ZT50ZHtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC4wNzUpfS50YWJsZS1ob3ZlciAudGFibGUtYWN0aXZlOmhvdmVye2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwwLjA3NSl9LnRhYmxlLWhvdmVyIC50YWJsZS1hY3RpdmU6aG92ZXI+dGQsLnRhYmxlLWhvdmVyIC50YWJsZS1hY3RpdmU6aG92ZXI+dGh7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLDAuMDc1KX0udGFibGUgLnRoZWFkLWRhcmsgdGh7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMzNDNhNDA7Ym9yZGVyLWNvbG9yOiM0NTRkNTV9LnRhYmxlIC50aGVhZC1saWdodCB0aHtjb2xvcjojNDk1MDU3O2JhY2tncm91bmQtY29sb3I6I2U5ZWNlZjtib3JkZXItY29sb3I6I2RlZTJlNn0udGFibGUtZGFya3tjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzM0M2E0MH0udGFibGUtZGFyayB0aCwudGFibGUtZGFyayB0ZCwudGFibGUtZGFyayB0aGVhZCB0aHtib3JkZXItY29sb3I6IzQ1NGQ1NX0udGFibGUtZGFyay50YWJsZS1ib3JkZXJlZHtib3JkZXI6MH0udGFibGUtZGFyay50YWJsZS1zdHJpcGVkIHRib2R5IHRyOm50aC1vZi10eXBlKG9kZCl7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDAuMDUpfS50YWJsZS1kYXJrLnRhYmxlLWhvdmVyIHRib2R5IHRyOmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDAuMDc1KX1AbWVkaWEgKG1heC13aWR0aDogNTc1Ljk4cHgpey50YWJsZS1yZXNwb25zaXZlLXNte2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTtvdmVyZmxvdy14OmF1dG87LXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6dG91Y2h9LnRhYmxlLXJlc3BvbnNpdmUtc20+LnRhYmxlLWJvcmRlcmVke2JvcmRlcjowfX1AbWVkaWEgKG1heC13aWR0aDogNzY3Ljk4cHgpey50YWJsZS1yZXNwb25zaXZlLW1ke2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTtvdmVyZmxvdy14OmF1dG87LXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6dG91Y2h9LnRhYmxlLXJlc3BvbnNpdmUtbWQ+LnRhYmxlLWJvcmRlcmVke2JvcmRlcjowfX1AbWVkaWEgKG1heC13aWR0aDogOTkxLjk4cHgpey50YWJsZS1yZXNwb25zaXZlLWxne2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTtvdmVyZmxvdy14OmF1dG87LXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6dG91Y2h9LnRhYmxlLXJlc3BvbnNpdmUtbGc+LnRhYmxlLWJvcmRlcmVke2JvcmRlcjowfX1AbWVkaWEgKG1heC13aWR0aDogMTE5OS45OHB4KXsudGFibGUtcmVzcG9uc2l2ZS14bHtkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCU7b3ZlcmZsb3cteDphdXRvOy13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOnRvdWNofS50YWJsZS1yZXNwb25zaXZlLXhsPi50YWJsZS1ib3JkZXJlZHtib3JkZXI6MH19LnRhYmxlLXJlc3BvbnNpdmV7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO292ZXJmbG93LXg6YXV0bzstd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzp0b3VjaH0udGFibGUtcmVzcG9uc2l2ZT4udGFibGUtYm9yZGVyZWR7Ym9yZGVyOjB9LmZvcm0tY29udHJvbHtkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCU7aGVpZ2h0OmNhbGMoMS41ZW0gKyAwLjc1cmVtICsgMnB4KTtwYWRkaW5nOjAuMzc1cmVtIDAuNzVyZW07Zm9udC1zaXplOjFyZW07Zm9udC13ZWlnaHQ6NDAwO2xpbmUtaGVpZ2h0OjEuNTtjb2xvcjojNDk1MDU3O2JhY2tncm91bmQtY29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNsaXA6cGFkZGluZy1ib3g7Ym9yZGVyOjFweCBzb2xpZCAjY2VkNGRhO2JvcmRlci1yYWRpdXM6MC4yNXJlbTt0cmFuc2l0aW9uOmJvcmRlci1jb2xvciAwLjE1cyBlYXNlLWluLW91dCwgYm94LXNoYWRvdyAwLjE1cyBlYXNlLWluLW91dH1AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSl7LmZvcm0tY29udHJvbHt0cmFuc2l0aW9uOm5vbmV9fS5mb3JtLWNvbnRyb2w6Oi1tcy1leHBhbmR7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXI6MH0uZm9ybS1jb250cm9sOi1tb3otZm9jdXNyaW5ne2NvbG9yOnRyYW5zcGFyZW50O3RleHQtc2hhZG93OjAgMCAwICM0OTUwNTd9LmZvcm0tY29udHJvbDpmb2N1c3tjb2xvcjojNDk1MDU3O2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXItY29sb3I6IzgwYmRmZjtvdXRsaW5lOjA7Ym94LXNoYWRvdzowIDAgMCAwLjJyZW0gcmdiYSgwLDEyMywyNTUsMC4yNSl9LmZvcm0tY29udHJvbDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcntjb2xvcjojNmM3NTdkO29wYWNpdHk6MX0uZm9ybS1jb250cm9sOjotbW96LXBsYWNlaG9sZGVye2NvbG9yOiM2Yzc1N2Q7b3BhY2l0eToxfS5mb3JtLWNvbnRyb2w6LW1zLWlucHV0LXBsYWNlaG9sZGVye2NvbG9yOiM2Yzc1N2Q7b3BhY2l0eToxfS5mb3JtLWNvbnRyb2w6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlcntjb2xvcjojNmM3NTdkO29wYWNpdHk6MX0uZm9ybS1jb250cm9sOjpwbGFjZWhvbGRlcntjb2xvcjojNmM3NTdkO29wYWNpdHk6MX0uZm9ybS1jb250cm9sOmRpc2FibGVkLC5mb3JtLWNvbnRyb2xbcmVhZG9ubHlde2JhY2tncm91bmQtY29sb3I6I2U5ZWNlZjtvcGFjaXR5OjF9c2VsZWN0LmZvcm0tY29udHJvbDpmb2N1czo6LW1zLXZhbHVle2NvbG9yOiM0OTUwNTc7YmFja2dyb3VuZC1jb2xvcjojZmZmfS5mb3JtLWNvbnRyb2wtZmlsZSwuZm9ybS1jb250cm9sLXJhbmdle2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJX0uY29sLWZvcm0tbGFiZWx7cGFkZGluZy10b3A6Y2FsYygwLjM3NXJlbSArIDFweCk7cGFkZGluZy1ib3R0b206Y2FsYygwLjM3NXJlbSArIDFweCk7bWFyZ2luLWJvdHRvbTowO2ZvbnQtc2l6ZTppbmhlcml0O2xpbmUtaGVpZ2h0OjEuNX0uY29sLWZvcm0tbGFiZWwtbGd7cGFkZGluZy10b3A6Y2FsYygwLjVyZW0gKyAxcHgpO3BhZGRpbmctYm90dG9tOmNhbGMoMC41cmVtICsgMXB4KTtmb250LXNpemU6MS4yNXJlbTtsaW5lLWhlaWdodDoxLjV9LmNvbC1mb3JtLWxhYmVsLXNte3BhZGRpbmctdG9wOmNhbGMoMC4yNXJlbSArIDFweCk7cGFkZGluZy1ib3R0b206Y2FsYygwLjI1cmVtICsgMXB4KTtmb250LXNpemU6MC44NzVyZW07bGluZS1oZWlnaHQ6MS41fS5mb3JtLWNvbnRyb2wtcGxhaW50ZXh0e2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTtwYWRkaW5nOjAuMzc1cmVtIDA7bWFyZ2luLWJvdHRvbTowO2ZvbnQtc2l6ZToxcmVtO2xpbmUtaGVpZ2h0OjEuNTtjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyOnNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci13aWR0aDoxcHggMH0uZm9ybS1jb250cm9sLXBsYWludGV4dC5mb3JtLWNvbnRyb2wtc20sLmZvcm0tY29udHJvbC1wbGFpbnRleHQuZm9ybS1jb250cm9sLWxne3BhZGRpbmctcmlnaHQ6MDtwYWRkaW5nLWxlZnQ6MH0uZm9ybS1jb250cm9sLXNte2hlaWdodDpjYWxjKDEuNWVtICsgMC41cmVtICsgMnB4KTtwYWRkaW5nOjAuMjVyZW0gMC41cmVtO2ZvbnQtc2l6ZTowLjg3NXJlbTtsaW5lLWhlaWdodDoxLjU7Ym9yZGVyLXJhZGl1czowLjJyZW19LmZvcm0tY29udHJvbC1sZ3toZWlnaHQ6Y2FsYygxLjVlbSArIDFyZW0gKyAycHgpO3BhZGRpbmc6MC41cmVtIDFyZW07Zm9udC1zaXplOjEuMjVyZW07bGluZS1oZWlnaHQ6MS41O2JvcmRlci1yYWRpdXM6MC4zcmVtfXNlbGVjdC5mb3JtLWNvbnRyb2xbc2l6ZV0sc2VsZWN0LmZvcm0tY29udHJvbFttdWx0aXBsZV17aGVpZ2h0OmF1dG99dGV4dGFyZWEuZm9ybS1jb250cm9se2hlaWdodDphdXRvfS5mb3JtLWdyb3Vwe21hcmdpbi1ib3R0b206MXJlbX0uZm9ybS10ZXh0e2Rpc3BsYXk6YmxvY2s7bWFyZ2luLXRvcDowLjI1cmVtfS5mb3JtLXJvd3tkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7bWFyZ2luLXJpZ2h0Oi01cHg7bWFyZ2luLWxlZnQ6LTVweH0uZm9ybS1yb3c+LmNvbCwuZm9ybS1yb3c+W2NsYXNzKj1cXFwiY29sLVxcXCJde3BhZGRpbmctcmlnaHQ6NXB4O3BhZGRpbmctbGVmdDo1cHh9LmZvcm0tY2hlY2t7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpibG9jaztwYWRkaW5nLWxlZnQ6MS4yNXJlbX0uZm9ybS1jaGVjay1pbnB1dHtwb3NpdGlvbjphYnNvbHV0ZTttYXJnaW4tdG9wOjAuM3JlbTttYXJnaW4tbGVmdDotMS4yNXJlbX0uZm9ybS1jaGVjay1pbnB1dFtkaXNhYmxlZF0gfiAuZm9ybS1jaGVjay1sYWJlbCwuZm9ybS1jaGVjay1pbnB1dDpkaXNhYmxlZCB+IC5mb3JtLWNoZWNrLWxhYmVse2NvbG9yOiM2Yzc1N2R9LmZvcm0tY2hlY2stbGFiZWx7bWFyZ2luLWJvdHRvbTowfS5mb3JtLWNoZWNrLWlubGluZXtkaXNwbGF5Oi1tcy1pbmxpbmUtZmxleGJveDtkaXNwbGF5OmlubGluZS1mbGV4Oy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZy1sZWZ0OjA7bWFyZ2luLXJpZ2h0OjAuNzVyZW19LmZvcm0tY2hlY2staW5saW5lIC5mb3JtLWNoZWNrLWlucHV0e3Bvc2l0aW9uOnN0YXRpYzttYXJnaW4tdG9wOjA7bWFyZ2luLXJpZ2h0OjAuMzEyNXJlbTttYXJnaW4tbGVmdDowfS52YWxpZC1mZWVkYmFja3tkaXNwbGF5Om5vbmU7d2lkdGg6MTAwJTttYXJnaW4tdG9wOjAuMjVyZW07Zm9udC1zaXplOjgwJTtjb2xvcjojMjhhNzQ1fS52YWxpZC10b29sdGlwe3Bvc2l0aW9uOmFic29sdXRlO3RvcDoxMDAlO3otaW5kZXg6NTtkaXNwbGF5Om5vbmU7bWF4LXdpZHRoOjEwMCU7cGFkZGluZzowLjI1cmVtIDAuNXJlbTttYXJnaW4tdG9wOi4xcmVtO2ZvbnQtc2l6ZTowLjg3NXJlbTtsaW5lLWhlaWdodDoxLjU7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoNDAsMTY3LDY5LDAuOSk7Ym9yZGVyLXJhZGl1czowLjI1cmVtfS53YXMtdmFsaWRhdGVkIDp2YWxpZCB+IC52YWxpZC1mZWVkYmFjaywud2FzLXZhbGlkYXRlZCA6dmFsaWQgfiAudmFsaWQtdG9vbHRpcCwuaXMtdmFsaWQgfiAudmFsaWQtZmVlZGJhY2ssLmlzLXZhbGlkIH4gLnZhbGlkLXRvb2x0aXB7ZGlzcGxheTpibG9ja30ud2FzLXZhbGlkYXRlZCAuZm9ybS1jb250cm9sOnZhbGlkLC5mb3JtLWNvbnRyb2wuaXMtdmFsaWR7Ym9yZGVyLWNvbG9yOiMyOGE3NDU7cGFkZGluZy1yaWdodDpjYWxjKDEuNWVtICsgMC43NXJlbSk7YmFja2dyb3VuZC1pbWFnZTp1cmwoXFxcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nOCcgaGVpZ2h0PSc4JyB2aWV3Qm94PScwIDAgOCA4JyUzZSUzY3BhdGggZmlsbD0nJTIzMjhhNzQ1JyBkPSdNMi4zIDYuNzNMLjYgNC41M2MtLjQtMS4wNC40Ni0xLjQgMS4xLS44bDEuMSAxLjQgMy40LTMuOGMuNi0uNjMgMS42LS4yNyAxLjIuN2wtNCA0LjZjLS40My41LS44LjQtMS4xLjF6Jy8lM2UlM2Mvc3ZnJTNlXFxcIik7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtcG9zaXRpb246cmlnaHQgY2FsYygwLjM3NWVtICsgMC4xODc1cmVtKSBjZW50ZXI7YmFja2dyb3VuZC1zaXplOmNhbGMoMC43NWVtICsgMC4zNzVyZW0pIGNhbGMoMC43NWVtICsgMC4zNzVyZW0pfS53YXMtdmFsaWRhdGVkIC5mb3JtLWNvbnRyb2w6dmFsaWQ6Zm9jdXMsLmZvcm0tY29udHJvbC5pcy12YWxpZDpmb2N1c3tib3JkZXItY29sb3I6IzI4YTc0NTtib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDQwLDE2Nyw2OSwwLjI1KX0ud2FzLXZhbGlkYXRlZCB0ZXh0YXJlYS5mb3JtLWNvbnRyb2w6dmFsaWQsdGV4dGFyZWEuZm9ybS1jb250cm9sLmlzLXZhbGlke3BhZGRpbmctcmlnaHQ6Y2FsYygxLjVlbSArIDAuNzVyZW0pO2JhY2tncm91bmQtcG9zaXRpb246dG9wIGNhbGMoMC4zNzVlbSArIDAuMTg3NXJlbSkgcmlnaHQgY2FsYygwLjM3NWVtICsgMC4xODc1cmVtKX0ud2FzLXZhbGlkYXRlZCAuY3VzdG9tLXNlbGVjdDp2YWxpZCwuY3VzdG9tLXNlbGVjdC5pcy12YWxpZHtib3JkZXItY29sb3I6IzI4YTc0NTtwYWRkaW5nLXJpZ2h0OmNhbGMoMC43NWVtICsgMi4zMTI1cmVtKTtiYWNrZ3JvdW5kOnVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSc0JyBoZWlnaHQ9JzUnIHZpZXdCb3g9JzAgMCA0IDUnJTNlJTNjcGF0aCBmaWxsPSclMjMzNDNhNDAnIGQ9J00yIDBMMCAyaDR6bTAgNUwwIDNoNHonLyUzZSUzYy9zdmclM2VcXFwiKSBuby1yZXBlYXQgcmlnaHQgMC43NXJlbSBjZW50ZXIvOHB4IDEwcHgsdXJsKFxcXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNjc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzgnIGhlaWdodD0nOCcgdmlld0JveD0nMCAwIDggOCclM2UlM2NwYXRoIGZpbGw9JyUyMzI4YTc0NScgZD0nTTIuMyA2LjczTC42IDQuNTNjLS40LTEuMDQuNDYtMS40IDEuMS0uOGwxLjEgMS40IDMuNC0zLjhjLjYtLjYzIDEuNi0uMjcgMS4yLjdsLTQgNC42Yy0uNDMuNS0uOC40LTEuMS4xeicvJTNlJTNjL3N2ZyUzZVxcXCIpICNmZmYgbm8tcmVwZWF0IGNlbnRlciByaWdodCAxLjc1cmVtL2NhbGMoMC43NWVtICsgMC4zNzVyZW0pIGNhbGMoMC43NWVtICsgMC4zNzVyZW0pfS53YXMtdmFsaWRhdGVkIC5jdXN0b20tc2VsZWN0OnZhbGlkOmZvY3VzLC5jdXN0b20tc2VsZWN0LmlzLXZhbGlkOmZvY3Vze2JvcmRlci1jb2xvcjojMjhhNzQ1O2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoNDAsMTY3LDY5LDAuMjUpfS53YXMtdmFsaWRhdGVkIC5mb3JtLWNoZWNrLWlucHV0OnZhbGlkIH4gLmZvcm0tY2hlY2stbGFiZWwsLmZvcm0tY2hlY2staW5wdXQuaXMtdmFsaWQgfiAuZm9ybS1jaGVjay1sYWJlbHtjb2xvcjojMjhhNzQ1fS53YXMtdmFsaWRhdGVkIC5mb3JtLWNoZWNrLWlucHV0OnZhbGlkIH4gLnZhbGlkLWZlZWRiYWNrLC53YXMtdmFsaWRhdGVkIC5mb3JtLWNoZWNrLWlucHV0OnZhbGlkIH4gLnZhbGlkLXRvb2x0aXAsLmZvcm0tY2hlY2staW5wdXQuaXMtdmFsaWQgfiAudmFsaWQtZmVlZGJhY2ssLmZvcm0tY2hlY2staW5wdXQuaXMtdmFsaWQgfiAudmFsaWQtdG9vbHRpcHtkaXNwbGF5OmJsb2NrfS53YXMtdmFsaWRhdGVkIC5jdXN0b20tY29udHJvbC1pbnB1dDp2YWxpZCB+IC5jdXN0b20tY29udHJvbC1sYWJlbCwuY3VzdG9tLWNvbnRyb2wtaW5wdXQuaXMtdmFsaWQgfiAuY3VzdG9tLWNvbnRyb2wtbGFiZWx7Y29sb3I6IzI4YTc0NX0ud2FzLXZhbGlkYXRlZCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6dmFsaWQgfiAuY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZSwuY3VzdG9tLWNvbnRyb2wtaW5wdXQuaXMtdmFsaWQgfiAuY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtib3JkZXItY29sb3I6IzI4YTc0NX0ud2FzLXZhbGlkYXRlZCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6dmFsaWQ6Y2hlY2tlZCB+IC5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3JlLC5jdXN0b20tY29udHJvbC1pbnB1dC5pcy12YWxpZDpjaGVja2VkIH4gLmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7Ym9yZGVyLWNvbG9yOiMzNGNlNTc7YmFja2dyb3VuZC1jb2xvcjojMzRjZTU3fS53YXMtdmFsaWRhdGVkIC5jdXN0b20tY29udHJvbC1pbnB1dDp2YWxpZDpmb2N1cyB+IC5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3JlLC5jdXN0b20tY29udHJvbC1pbnB1dC5pcy12YWxpZDpmb2N1cyB+IC5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoNDAsMTY3LDY5LDAuMjUpfS53YXMtdmFsaWRhdGVkIC5jdXN0b20tY29udHJvbC1pbnB1dDp2YWxpZDpmb2N1czpub3QoOmNoZWNrZWQpIH4gLmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmUsLmN1c3RvbS1jb250cm9sLWlucHV0LmlzLXZhbGlkOmZvY3VzOm5vdCg6Y2hlY2tlZCkgfiAuY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtib3JkZXItY29sb3I6IzI4YTc0NX0ud2FzLXZhbGlkYXRlZCAuY3VzdG9tLWZpbGUtaW5wdXQ6dmFsaWQgfiAuY3VzdG9tLWZpbGUtbGFiZWwsLmN1c3RvbS1maWxlLWlucHV0LmlzLXZhbGlkIH4gLmN1c3RvbS1maWxlLWxhYmVse2JvcmRlci1jb2xvcjojMjhhNzQ1fS53YXMtdmFsaWRhdGVkIC5jdXN0b20tZmlsZS1pbnB1dDp2YWxpZDpmb2N1cyB+IC5jdXN0b20tZmlsZS1sYWJlbCwuY3VzdG9tLWZpbGUtaW5wdXQuaXMtdmFsaWQ6Zm9jdXMgfiAuY3VzdG9tLWZpbGUtbGFiZWx7Ym9yZGVyLWNvbG9yOiMyOGE3NDU7Ym94LXNoYWRvdzowIDAgMCAwLjJyZW0gcmdiYSg0MCwxNjcsNjksMC4yNSl9LmludmFsaWQtZmVlZGJhY2t7ZGlzcGxheTpub25lO3dpZHRoOjEwMCU7bWFyZ2luLXRvcDowLjI1cmVtO2ZvbnQtc2l6ZTo4MCU7Y29sb3I6I2RjMzU0NX0uaW52YWxpZC10b29sdGlwe3Bvc2l0aW9uOmFic29sdXRlO3RvcDoxMDAlO3otaW5kZXg6NTtkaXNwbGF5Om5vbmU7bWF4LXdpZHRoOjEwMCU7cGFkZGluZzowLjI1cmVtIDAuNXJlbTttYXJnaW4tdG9wOi4xcmVtO2ZvbnQtc2l6ZTowLjg3NXJlbTtsaW5lLWhlaWdodDoxLjU7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjIwLDUzLDY5LDAuOSk7Ym9yZGVyLXJhZGl1czowLjI1cmVtfS53YXMtdmFsaWRhdGVkIDppbnZhbGlkIH4gLmludmFsaWQtZmVlZGJhY2ssLndhcy12YWxpZGF0ZWQgOmludmFsaWQgfiAuaW52YWxpZC10b29sdGlwLC5pcy1pbnZhbGlkIH4gLmludmFsaWQtZmVlZGJhY2ssLmlzLWludmFsaWQgfiAuaW52YWxpZC10b29sdGlwe2Rpc3BsYXk6YmxvY2t9Lndhcy12YWxpZGF0ZWQgLmZvcm0tY29udHJvbDppbnZhbGlkLC5mb3JtLWNvbnRyb2wuaXMtaW52YWxpZHtib3JkZXItY29sb3I6I2RjMzU0NTtwYWRkaW5nLXJpZ2h0OmNhbGMoMS41ZW0gKyAwLjc1cmVtKTtiYWNrZ3JvdW5kLWltYWdlOnVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPScxMicgaGVpZ2h0PScxMicgZmlsbD0nbm9uZScgc3Ryb2tlPSclMjNkYzM1NDUnIHZpZXdCb3g9JzAgMCAxMiAxMiclM2UlM2NjaXJjbGUgY3g9JzYnIGN5PSc2JyByPSc0LjUnLyUzZSUzY3BhdGggc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcgZD0nTTUuOCAzLjZoLjRMNiA2LjV6Jy8lM2UlM2NjaXJjbGUgY3g9JzYnIGN5PSc4LjInIHI9Jy42JyBmaWxsPSclMjNkYzM1NDUnIHN0cm9rZT0nbm9uZScvJTNlJTNjL3N2ZyUzZVxcXCIpO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtiYWNrZ3JvdW5kLXBvc2l0aW9uOnJpZ2h0IGNhbGMoMC4zNzVlbSArIDAuMTg3NXJlbSkgY2VudGVyO2JhY2tncm91bmQtc2l6ZTpjYWxjKDAuNzVlbSArIDAuMzc1cmVtKSBjYWxjKDAuNzVlbSArIDAuMzc1cmVtKX0ud2FzLXZhbGlkYXRlZCAuZm9ybS1jb250cm9sOmludmFsaWQ6Zm9jdXMsLmZvcm0tY29udHJvbC5pcy1pbnZhbGlkOmZvY3Vze2JvcmRlci1jb2xvcjojZGMzNTQ1O2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoMjIwLDUzLDY5LDAuMjUpfS53YXMtdmFsaWRhdGVkIHRleHRhcmVhLmZvcm0tY29udHJvbDppbnZhbGlkLHRleHRhcmVhLmZvcm0tY29udHJvbC5pcy1pbnZhbGlke3BhZGRpbmctcmlnaHQ6Y2FsYygxLjVlbSArIDAuNzVyZW0pO2JhY2tncm91bmQtcG9zaXRpb246dG9wIGNhbGMoMC4zNzVlbSArIDAuMTg3NXJlbSkgcmlnaHQgY2FsYygwLjM3NWVtICsgMC4xODc1cmVtKX0ud2FzLXZhbGlkYXRlZCAuY3VzdG9tLXNlbGVjdDppbnZhbGlkLC5jdXN0b20tc2VsZWN0LmlzLWludmFsaWR7Ym9yZGVyLWNvbG9yOiNkYzM1NDU7cGFkZGluZy1yaWdodDpjYWxjKDAuNzVlbSArIDIuMzEyNXJlbSk7YmFja2dyb3VuZDp1cmwoXFxcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nNCcgaGVpZ2h0PSc1JyB2aWV3Qm94PScwIDAgNCA1JyUzZSUzY3BhdGggZmlsbD0nJTIzMzQzYTQwJyBkPSdNMiAwTDAgMmg0em0wIDVMMCAzaDR6Jy8lM2UlM2Mvc3ZnJTNlXFxcIikgbm8tcmVwZWF0IHJpZ2h0IDAuNzVyZW0gY2VudGVyLzhweCAxMHB4LHVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPScxMicgaGVpZ2h0PScxMicgZmlsbD0nbm9uZScgc3Ryb2tlPSclMjNkYzM1NDUnIHZpZXdCb3g9JzAgMCAxMiAxMiclM2UlM2NjaXJjbGUgY3g9JzYnIGN5PSc2JyByPSc0LjUnLyUzZSUzY3BhdGggc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcgZD0nTTUuOCAzLjZoLjRMNiA2LjV6Jy8lM2UlM2NjaXJjbGUgY3g9JzYnIGN5PSc4LjInIHI9Jy42JyBmaWxsPSclMjNkYzM1NDUnIHN0cm9rZT0nbm9uZScvJTNlJTNjL3N2ZyUzZVxcXCIpICNmZmYgbm8tcmVwZWF0IGNlbnRlciByaWdodCAxLjc1cmVtL2NhbGMoMC43NWVtICsgMC4zNzVyZW0pIGNhbGMoMC43NWVtICsgMC4zNzVyZW0pfS53YXMtdmFsaWRhdGVkIC5jdXN0b20tc2VsZWN0OmludmFsaWQ6Zm9jdXMsLmN1c3RvbS1zZWxlY3QuaXMtaW52YWxpZDpmb2N1c3tib3JkZXItY29sb3I6I2RjMzU0NTtib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDIyMCw1Myw2OSwwLjI1KX0ud2FzLXZhbGlkYXRlZCAuZm9ybS1jaGVjay1pbnB1dDppbnZhbGlkIH4gLmZvcm0tY2hlY2stbGFiZWwsLmZvcm0tY2hlY2staW5wdXQuaXMtaW52YWxpZCB+IC5mb3JtLWNoZWNrLWxhYmVse2NvbG9yOiNkYzM1NDV9Lndhcy12YWxpZGF0ZWQgLmZvcm0tY2hlY2staW5wdXQ6aW52YWxpZCB+IC5pbnZhbGlkLWZlZWRiYWNrLC53YXMtdmFsaWRhdGVkIC5mb3JtLWNoZWNrLWlucHV0OmludmFsaWQgfiAuaW52YWxpZC10b29sdGlwLC5mb3JtLWNoZWNrLWlucHV0LmlzLWludmFsaWQgfiAuaW52YWxpZC1mZWVkYmFjaywuZm9ybS1jaGVjay1pbnB1dC5pcy1pbnZhbGlkIH4gLmludmFsaWQtdG9vbHRpcHtkaXNwbGF5OmJsb2NrfS53YXMtdmFsaWRhdGVkIC5jdXN0b20tY29udHJvbC1pbnB1dDppbnZhbGlkIH4gLmN1c3RvbS1jb250cm9sLWxhYmVsLC5jdXN0b20tY29udHJvbC1pbnB1dC5pcy1pbnZhbGlkIH4gLmN1c3RvbS1jb250cm9sLWxhYmVse2NvbG9yOiNkYzM1NDV9Lndhcy12YWxpZGF0ZWQgLmN1c3RvbS1jb250cm9sLWlucHV0OmludmFsaWQgfiAuY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZSwuY3VzdG9tLWNvbnRyb2wtaW5wdXQuaXMtaW52YWxpZCB+IC5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JvcmRlci1jb2xvcjojZGMzNTQ1fS53YXMtdmFsaWRhdGVkIC5jdXN0b20tY29udHJvbC1pbnB1dDppbnZhbGlkOmNoZWNrZWQgfiAuY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZSwuY3VzdG9tLWNvbnRyb2wtaW5wdXQuaXMtaW52YWxpZDpjaGVja2VkIH4gLmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7Ym9yZGVyLWNvbG9yOiNlNDYwNmQ7YmFja2dyb3VuZC1jb2xvcjojZTQ2MDZkfS53YXMtdmFsaWRhdGVkIC5jdXN0b20tY29udHJvbC1pbnB1dDppbnZhbGlkOmZvY3VzIH4gLmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmUsLmN1c3RvbS1jb250cm9sLWlucHV0LmlzLWludmFsaWQ6Zm9jdXMgfiAuY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDIyMCw1Myw2OSwwLjI1KX0ud2FzLXZhbGlkYXRlZCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6aW52YWxpZDpmb2N1czpub3QoOmNoZWNrZWQpIH4gLmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmUsLmN1c3RvbS1jb250cm9sLWlucHV0LmlzLWludmFsaWQ6Zm9jdXM6bm90KDpjaGVja2VkKSB+IC5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JvcmRlci1jb2xvcjojZGMzNTQ1fS53YXMtdmFsaWRhdGVkIC5jdXN0b20tZmlsZS1pbnB1dDppbnZhbGlkIH4gLmN1c3RvbS1maWxlLWxhYmVsLC5jdXN0b20tZmlsZS1pbnB1dC5pcy1pbnZhbGlkIH4gLmN1c3RvbS1maWxlLWxhYmVse2JvcmRlci1jb2xvcjojZGMzNTQ1fS53YXMtdmFsaWRhdGVkIC5jdXN0b20tZmlsZS1pbnB1dDppbnZhbGlkOmZvY3VzIH4gLmN1c3RvbS1maWxlLWxhYmVsLC5jdXN0b20tZmlsZS1pbnB1dC5pcy1pbnZhbGlkOmZvY3VzIH4gLmN1c3RvbS1maWxlLWxhYmVse2JvcmRlci1jb2xvcjojZGMzNTQ1O2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoMjIwLDUzLDY5LDAuMjUpfS5mb3JtLWlubGluZXtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1mbG93OnJvdyB3cmFwO2ZsZXgtZmxvdzpyb3cgd3JhcDstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyfS5mb3JtLWlubGluZSAuZm9ybS1jaGVja3t3aWR0aDoxMDAlfUBtZWRpYSAobWluLXdpZHRoOiA1NzZweCl7LmZvcm0taW5saW5lIGxhYmVse2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjttYXJnaW4tYm90dG9tOjB9LmZvcm0taW5saW5lIC5mb3JtLWdyb3Vwe2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4OjAgMCBhdXRvO2ZsZXg6MCAwIGF1dG87LW1zLWZsZXgtZmxvdzpyb3cgd3JhcDtmbGV4LWZsb3c6cm93IHdyYXA7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjttYXJnaW4tYm90dG9tOjB9LmZvcm0taW5saW5lIC5mb3JtLWNvbnRyb2x7ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6YXV0bzt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9LmZvcm0taW5saW5lIC5mb3JtLWNvbnRyb2wtcGxhaW50ZXh0e2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5mb3JtLWlubGluZSAuaW5wdXQtZ3JvdXAsLmZvcm0taW5saW5lIC5jdXN0b20tc2VsZWN0e3dpZHRoOmF1dG99LmZvcm0taW5saW5lIC5mb3JtLWNoZWNre2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjt3aWR0aDphdXRvO3BhZGRpbmctbGVmdDowfS5mb3JtLWlubGluZSAuZm9ybS1jaGVjay1pbnB1dHtwb3NpdGlvbjpyZWxhdGl2ZTstbXMtZmxleC1uZWdhdGl2ZTowO2ZsZXgtc2hyaW5rOjA7bWFyZ2luLXRvcDowO21hcmdpbi1yaWdodDowLjI1cmVtO21hcmdpbi1sZWZ0OjB9LmZvcm0taW5saW5lIC5jdXN0b20tY29udHJvbHstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXJ9LmZvcm0taW5saW5lIC5jdXN0b20tY29udHJvbC1sYWJlbHttYXJnaW4tYm90dG9tOjB9fS5idG57ZGlzcGxheTppbmxpbmUtYmxvY2s7Zm9udC13ZWlnaHQ6NDAwO2NvbG9yOiMyMTI1Mjk7dGV4dC1hbGlnbjpjZW50ZXI7dmVydGljYWwtYWxpZ246bWlkZGxlO2N1cnNvcjpwb2ludGVyOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlcjoxcHggc29saWQgdHJhbnNwYXJlbnQ7cGFkZGluZzowLjM3NXJlbSAwLjc1cmVtO2ZvbnQtc2l6ZToxcmVtO2xpbmUtaGVpZ2h0OjEuNTtib3JkZXItcmFkaXVzOjAuMjVyZW07dHJhbnNpdGlvbjpjb2xvciAwLjE1cyBlYXNlLWluLW91dCwgYmFja2dyb3VuZC1jb2xvciAwLjE1cyBlYXNlLWluLW91dCwgYm9yZGVyLWNvbG9yIDAuMTVzIGVhc2UtaW4tb3V0LCBib3gtc2hhZG93IDAuMTVzIGVhc2UtaW4tb3V0fUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKXsuYnRue3RyYW5zaXRpb246bm9uZX19LmJ0bjpob3Zlcntjb2xvcjojMjEyNTI5O3RleHQtZGVjb3JhdGlvbjpub25lfS5idG46Zm9jdXMsLmJ0bi5mb2N1c3tvdXRsaW5lOjA7Ym94LXNoYWRvdzowIDAgMCAwLjJyZW0gcmdiYSgwLDEyMywyNTUsMC4yNSl9LmJ0bi5kaXNhYmxlZCwuYnRuOmRpc2FibGVke29wYWNpdHk6MC42NX1hLmJ0bi5kaXNhYmxlZCxmaWVsZHNldDpkaXNhYmxlZCBhLmJ0bntwb2ludGVyLWV2ZW50czpub25lfS5idG4tcHJpbWFyeXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzAwN2JmZjtib3JkZXItY29sb3I6IzAwN2JmZn0uYnRuLXByaW1hcnk6aG92ZXJ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMwMDY5ZDk7Ym9yZGVyLWNvbG9yOiMwMDYyY2N9LmJ0bi1wcmltYXJ5OmZvY3VzLC5idG4tcHJpbWFyeS5mb2N1c3tjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzAwNjlkOTtib3JkZXItY29sb3I6IzAwNjJjYztib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDM4LDE0MywyNTUsMC41KX0uYnRuLXByaW1hcnkuZGlzYWJsZWQsLmJ0bi1wcmltYXJ5OmRpc2FibGVke2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMDA3YmZmO2JvcmRlci1jb2xvcjojMDA3YmZmfS5idG4tcHJpbWFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLmJ0bi1wcmltYXJ5Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwuc2hvdz4uYnRuLXByaW1hcnkuZHJvcGRvd24tdG9nZ2xle2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMDA2MmNjO2JvcmRlci1jb2xvcjojMDA1Y2JmfS5idG4tcHJpbWFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsLmJ0bi1wcmltYXJ5Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cywuc2hvdz4uYnRuLXByaW1hcnkuZHJvcGRvd24tdG9nZ2xlOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoMzgsMTQzLDI1NSwwLjUpfS5idG4tc2Vjb25kYXJ5e2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojNmM3NTdkO2JvcmRlci1jb2xvcjojNmM3NTdkfS5idG4tc2Vjb25kYXJ5OmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojNWE2MjY4O2JvcmRlci1jb2xvcjojNTQ1YjYyfS5idG4tc2Vjb25kYXJ5OmZvY3VzLC5idG4tc2Vjb25kYXJ5LmZvY3Vze2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojNWE2MjY4O2JvcmRlci1jb2xvcjojNTQ1YjYyO2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoMTMwLDEzOCwxNDUsMC41KX0uYnRuLXNlY29uZGFyeS5kaXNhYmxlZCwuYnRuLXNlY29uZGFyeTpkaXNhYmxlZHtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzZjNzU3ZDtib3JkZXItY29sb3I6IzZjNzU3ZH0uYnRuLXNlY29uZGFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLmJ0bi1zZWNvbmRhcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLC5zaG93Pi5idG4tc2Vjb25kYXJ5LmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzU0NWI2Mjtib3JkZXItY29sb3I6IzRlNTU1Yn0uYnRuLXNlY29uZGFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsLmJ0bi1zZWNvbmRhcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLC5zaG93Pi5idG4tc2Vjb25kYXJ5LmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDEzMCwxMzgsMTQ1LDAuNSl9LmJ0bi1zdWNjZXNze2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMjhhNzQ1O2JvcmRlci1jb2xvcjojMjhhNzQ1fS5idG4tc3VjY2Vzczpob3Zlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzIxODgzODtib3JkZXItY29sb3I6IzFlN2UzNH0uYnRuLXN1Y2Nlc3M6Zm9jdXMsLmJ0bi1zdWNjZXNzLmZvY3Vze2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMjE4ODM4O2JvcmRlci1jb2xvcjojMWU3ZTM0O2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoNzIsMTgwLDk3LDAuNSl9LmJ0bi1zdWNjZXNzLmRpc2FibGVkLC5idG4tc3VjY2VzczpkaXNhYmxlZHtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzI4YTc0NTtib3JkZXItY29sb3I6IzI4YTc0NX0uYnRuLXN1Y2Nlc3M6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5idG4tc3VjY2Vzczpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsLnNob3c+LmJ0bi1zdWNjZXNzLmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzFlN2UzNDtib3JkZXItY29sb3I6IzFjNzQzMH0uYnRuLXN1Y2Nlc3M6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5idG4tc3VjY2Vzczpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsLnNob3c+LmJ0bi1zdWNjZXNzLmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDcyLDE4MCw5NywwLjUpfS5idG4taW5mb3tjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzE3YTJiODtib3JkZXItY29sb3I6IzE3YTJiOH0uYnRuLWluZm86aG92ZXJ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMxMzg0OTY7Ym9yZGVyLWNvbG9yOiMxMTdhOGJ9LmJ0bi1pbmZvOmZvY3VzLC5idG4taW5mby5mb2N1c3tjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzEzODQ5Njtib3JkZXItY29sb3I6IzExN2E4Yjtib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDU4LDE3NiwxOTUsMC41KX0uYnRuLWluZm8uZGlzYWJsZWQsLmJ0bi1pbmZvOmRpc2FibGVke2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMTdhMmI4O2JvcmRlci1jb2xvcjojMTdhMmI4fS5idG4taW5mbzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLmJ0bi1pbmZvOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwuc2hvdz4uYnRuLWluZm8uZHJvcGRvd24tdG9nZ2xle2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMTE3YThiO2JvcmRlci1jb2xvcjojMTA3MDdmfS5idG4taW5mbzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsLmJ0bi1pbmZvOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cywuc2hvdz4uYnRuLWluZm8uZHJvcGRvd24tdG9nZ2xlOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoNTgsMTc2LDE5NSwwLjUpfS5idG4td2FybmluZ3tjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6I2ZmYzEwNztib3JkZXItY29sb3I6I2ZmYzEwN30uYnRuLXdhcm5pbmc6aG92ZXJ7Y29sb3I6IzIxMjUyOTtiYWNrZ3JvdW5kLWNvbG9yOiNlMGE4MDA7Ym9yZGVyLWNvbG9yOiNkMzllMDB9LmJ0bi13YXJuaW5nOmZvY3VzLC5idG4td2FybmluZy5mb2N1c3tjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6I2UwYTgwMDtib3JkZXItY29sb3I6I2QzOWUwMDtib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDIyMiwxNzAsMTIsMC41KX0uYnRuLXdhcm5pbmcuZGlzYWJsZWQsLmJ0bi13YXJuaW5nOmRpc2FibGVke2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZmZjMTA3O2JvcmRlci1jb2xvcjojZmZjMTA3fS5idG4td2FybmluZzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLmJ0bi13YXJuaW5nOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwuc2hvdz4uYnRuLXdhcm5pbmcuZHJvcGRvd24tdG9nZ2xle2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZDM5ZTAwO2JvcmRlci1jb2xvcjojYzY5NTAwfS5idG4td2FybmluZzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsLmJ0bi13YXJuaW5nOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cywuc2hvdz4uYnRuLXdhcm5pbmcuZHJvcGRvd24tdG9nZ2xlOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoMjIyLDE3MCwxMiwwLjUpfS5idG4tZGFuZ2Vye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojZGMzNTQ1O2JvcmRlci1jb2xvcjojZGMzNTQ1fS5idG4tZGFuZ2VyOmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojYzgyMzMzO2JvcmRlci1jb2xvcjojYmQyMTMwfS5idG4tZGFuZ2VyOmZvY3VzLC5idG4tZGFuZ2VyLmZvY3Vze2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojYzgyMzMzO2JvcmRlci1jb2xvcjojYmQyMTMwO2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoMjI1LDgzLDk3LDAuNSl9LmJ0bi1kYW5nZXIuZGlzYWJsZWQsLmJ0bi1kYW5nZXI6ZGlzYWJsZWR7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiNkYzM1NDU7Ym9yZGVyLWNvbG9yOiNkYzM1NDV9LmJ0bi1kYW5nZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5idG4tZGFuZ2VyOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwuc2hvdz4uYnRuLWRhbmdlci5kcm9wZG93bi10b2dnbGV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiNiZDIxMzA7Ym9yZGVyLWNvbG9yOiNiMjFmMmR9LmJ0bi1kYW5nZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5idG4tZGFuZ2VyOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cywuc2hvdz4uYnRuLWRhbmdlci5kcm9wZG93bi10b2dnbGU6Zm9jdXN7Ym94LXNoYWRvdzowIDAgMCAwLjJyZW0gcmdiYSgyMjUsODMsOTcsMC41KX0uYnRuLWxpZ2h0e2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZjhmOWZhO2JvcmRlci1jb2xvcjojZjhmOWZhfS5idG4tbGlnaHQ6aG92ZXJ7Y29sb3I6IzIxMjUyOTtiYWNrZ3JvdW5kLWNvbG9yOiNlMmU2ZWE7Ym9yZGVyLWNvbG9yOiNkYWUwZTV9LmJ0bi1saWdodDpmb2N1cywuYnRuLWxpZ2h0LmZvY3Vze2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZTJlNmVhO2JvcmRlci1jb2xvcjojZGFlMGU1O2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoMjE2LDIxNywyMTksMC41KX0uYnRuLWxpZ2h0LmRpc2FibGVkLC5idG4tbGlnaHQ6ZGlzYWJsZWR7Y29sb3I6IzIxMjUyOTtiYWNrZ3JvdW5kLWNvbG9yOiNmOGY5ZmE7Ym9yZGVyLWNvbG9yOiNmOGY5ZmF9LmJ0bi1saWdodDpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLmJ0bi1saWdodDpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsLnNob3c+LmJ0bi1saWdodC5kcm9wZG93bi10b2dnbGV7Y29sb3I6IzIxMjUyOTtiYWNrZ3JvdW5kLWNvbG9yOiNkYWUwZTU7Ym9yZGVyLWNvbG9yOiNkM2Q5ZGZ9LmJ0bi1saWdodDpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsLmJ0bi1saWdodDpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsLnNob3c+LmJ0bi1saWdodC5kcm9wZG93bi10b2dnbGU6Zm9jdXN7Ym94LXNoYWRvdzowIDAgMCAwLjJyZW0gcmdiYSgyMTYsMjE3LDIxOSwwLjUpfS5idG4tZGFya3tjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzM0M2E0MDtib3JkZXItY29sb3I6IzM0M2E0MH0uYnRuLWRhcms6aG92ZXJ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMyMzI3MmI7Ym9yZGVyLWNvbG9yOiMxZDIxMjR9LmJ0bi1kYXJrOmZvY3VzLC5idG4tZGFyay5mb2N1c3tjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzIzMjcyYjtib3JkZXItY29sb3I6IzFkMjEyNDtib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDgyLDg4LDkzLDAuNSl9LmJ0bi1kYXJrLmRpc2FibGVkLC5idG4tZGFyazpkaXNhYmxlZHtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzM0M2E0MDtib3JkZXItY29sb3I6IzM0M2E0MH0uYnRuLWRhcms6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5idG4tZGFyazpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsLnNob3c+LmJ0bi1kYXJrLmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzFkMjEyNDtib3JkZXItY29sb3I6IzE3MWExZH0uYnRuLWRhcms6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5idG4tZGFyazpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsLnNob3c+LmJ0bi1kYXJrLmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDgyLDg4LDkzLDAuNSl9LmJ0bi1vdXRsaW5lLXByaW1hcnl7Y29sb3I6IzAwN2JmZjtib3JkZXItY29sb3I6IzAwN2JmZn0uYnRuLW91dGxpbmUtcHJpbWFyeTpob3Zlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzAwN2JmZjtib3JkZXItY29sb3I6IzAwN2JmZn0uYnRuLW91dGxpbmUtcHJpbWFyeTpmb2N1cywuYnRuLW91dGxpbmUtcHJpbWFyeS5mb2N1c3tib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDAsMTIzLDI1NSwwLjUpfS5idG4tb3V0bGluZS1wcmltYXJ5LmRpc2FibGVkLC5idG4tb3V0bGluZS1wcmltYXJ5OmRpc2FibGVke2NvbG9yOiMwMDdiZmY7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH0uYnRuLW91dGxpbmUtcHJpbWFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLmJ0bi1vdXRsaW5lLXByaW1hcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLC5zaG93Pi5idG4tb3V0bGluZS1wcmltYXJ5LmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzAwN2JmZjtib3JkZXItY29sb3I6IzAwN2JmZn0uYnRuLW91dGxpbmUtcHJpbWFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsLmJ0bi1vdXRsaW5lLXByaW1hcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLC5zaG93Pi5idG4tb3V0bGluZS1wcmltYXJ5LmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDAsMTIzLDI1NSwwLjUpfS5idG4tb3V0bGluZS1zZWNvbmRhcnl7Y29sb3I6IzZjNzU3ZDtib3JkZXItY29sb3I6IzZjNzU3ZH0uYnRuLW91dGxpbmUtc2Vjb25kYXJ5OmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojNmM3NTdkO2JvcmRlci1jb2xvcjojNmM3NTdkfS5idG4tb3V0bGluZS1zZWNvbmRhcnk6Zm9jdXMsLmJ0bi1vdXRsaW5lLXNlY29uZGFyeS5mb2N1c3tib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDEwOCwxMTcsMTI1LDAuNSl9LmJ0bi1vdXRsaW5lLXNlY29uZGFyeS5kaXNhYmxlZCwuYnRuLW91dGxpbmUtc2Vjb25kYXJ5OmRpc2FibGVke2NvbG9yOiM2Yzc1N2Q7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH0uYnRuLW91dGxpbmUtc2Vjb25kYXJ5Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZSwuYnRuLW91dGxpbmUtc2Vjb25kYXJ5Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwuc2hvdz4uYnRuLW91dGxpbmUtc2Vjb25kYXJ5LmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzZjNzU3ZDtib3JkZXItY29sb3I6IzZjNzU3ZH0uYnRuLW91dGxpbmUtc2Vjb25kYXJ5Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZTpmb2N1cywuYnRuLW91dGxpbmUtc2Vjb25kYXJ5Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cywuc2hvdz4uYnRuLW91dGxpbmUtc2Vjb25kYXJ5LmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDEwOCwxMTcsMTI1LDAuNSl9LmJ0bi1vdXRsaW5lLXN1Y2Nlc3N7Y29sb3I6IzI4YTc0NTtib3JkZXItY29sb3I6IzI4YTc0NX0uYnRuLW91dGxpbmUtc3VjY2Vzczpob3Zlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzI4YTc0NTtib3JkZXItY29sb3I6IzI4YTc0NX0uYnRuLW91dGxpbmUtc3VjY2Vzczpmb2N1cywuYnRuLW91dGxpbmUtc3VjY2Vzcy5mb2N1c3tib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDQwLDE2Nyw2OSwwLjUpfS5idG4tb3V0bGluZS1zdWNjZXNzLmRpc2FibGVkLC5idG4tb3V0bGluZS1zdWNjZXNzOmRpc2FibGVke2NvbG9yOiMyOGE3NDU7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH0uYnRuLW91dGxpbmUtc3VjY2Vzczpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLmJ0bi1vdXRsaW5lLXN1Y2Nlc3M6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLC5zaG93Pi5idG4tb3V0bGluZS1zdWNjZXNzLmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzI4YTc0NTtib3JkZXItY29sb3I6IzI4YTc0NX0uYnRuLW91dGxpbmUtc3VjY2Vzczpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsLmJ0bi1vdXRsaW5lLXN1Y2Nlc3M6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLC5zaG93Pi5idG4tb3V0bGluZS1zdWNjZXNzLmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDQwLDE2Nyw2OSwwLjUpfS5idG4tb3V0bGluZS1pbmZve2NvbG9yOiMxN2EyYjg7Ym9yZGVyLWNvbG9yOiMxN2EyYjh9LmJ0bi1vdXRsaW5lLWluZm86aG92ZXJ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMxN2EyYjg7Ym9yZGVyLWNvbG9yOiMxN2EyYjh9LmJ0bi1vdXRsaW5lLWluZm86Zm9jdXMsLmJ0bi1vdXRsaW5lLWluZm8uZm9jdXN7Ym94LXNoYWRvdzowIDAgMCAwLjJyZW0gcmdiYSgyMywxNjIsMTg0LDAuNSl9LmJ0bi1vdXRsaW5lLWluZm8uZGlzYWJsZWQsLmJ0bi1vdXRsaW5lLWluZm86ZGlzYWJsZWR7Y29sb3I6IzE3YTJiODtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fS5idG4tb3V0bGluZS1pbmZvOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZSwuYnRuLW91dGxpbmUtaW5mbzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsLnNob3c+LmJ0bi1vdXRsaW5lLWluZm8uZHJvcGRvd24tdG9nZ2xle2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMTdhMmI4O2JvcmRlci1jb2xvcjojMTdhMmI4fS5idG4tb3V0bGluZS1pbmZvOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZTpmb2N1cywuYnRuLW91dGxpbmUtaW5mbzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsLnNob3c+LmJ0bi1vdXRsaW5lLWluZm8uZHJvcGRvd24tdG9nZ2xlOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoMjMsMTYyLDE4NCwwLjUpfS5idG4tb3V0bGluZS13YXJuaW5ne2NvbG9yOiNmZmMxMDc7Ym9yZGVyLWNvbG9yOiNmZmMxMDd9LmJ0bi1vdXRsaW5lLXdhcm5pbmc6aG92ZXJ7Y29sb3I6IzIxMjUyOTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmMxMDc7Ym9yZGVyLWNvbG9yOiNmZmMxMDd9LmJ0bi1vdXRsaW5lLXdhcm5pbmc6Zm9jdXMsLmJ0bi1vdXRsaW5lLXdhcm5pbmcuZm9jdXN7Ym94LXNoYWRvdzowIDAgMCAwLjJyZW0gcmdiYSgyNTUsMTkzLDcsMC41KX0uYnRuLW91dGxpbmUtd2FybmluZy5kaXNhYmxlZCwuYnRuLW91dGxpbmUtd2FybmluZzpkaXNhYmxlZHtjb2xvcjojZmZjMTA3O2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9LmJ0bi1vdXRsaW5lLXdhcm5pbmc6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5idG4tb3V0bGluZS13YXJuaW5nOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwuc2hvdz4uYnRuLW91dGxpbmUtd2FybmluZy5kcm9wZG93bi10b2dnbGV7Y29sb3I6IzIxMjUyOTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmMxMDc7Ym9yZGVyLWNvbG9yOiNmZmMxMDd9LmJ0bi1vdXRsaW5lLXdhcm5pbmc6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5idG4tb3V0bGluZS13YXJuaW5nOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cywuc2hvdz4uYnRuLW91dGxpbmUtd2FybmluZy5kcm9wZG93bi10b2dnbGU6Zm9jdXN7Ym94LXNoYWRvdzowIDAgMCAwLjJyZW0gcmdiYSgyNTUsMTkzLDcsMC41KX0uYnRuLW91dGxpbmUtZGFuZ2Vye2NvbG9yOiNkYzM1NDU7Ym9yZGVyLWNvbG9yOiNkYzM1NDV9LmJ0bi1vdXRsaW5lLWRhbmdlcjpob3Zlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6I2RjMzU0NTtib3JkZXItY29sb3I6I2RjMzU0NX0uYnRuLW91dGxpbmUtZGFuZ2VyOmZvY3VzLC5idG4tb3V0bGluZS1kYW5nZXIuZm9jdXN7Ym94LXNoYWRvdzowIDAgMCAwLjJyZW0gcmdiYSgyMjAsNTMsNjksMC41KX0uYnRuLW91dGxpbmUtZGFuZ2VyLmRpc2FibGVkLC5idG4tb3V0bGluZS1kYW5nZXI6ZGlzYWJsZWR7Y29sb3I6I2RjMzU0NTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fS5idG4tb3V0bGluZS1kYW5nZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5idG4tb3V0bGluZS1kYW5nZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLC5zaG93Pi5idG4tb3V0bGluZS1kYW5nZXIuZHJvcGRvd24tdG9nZ2xle2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojZGMzNTQ1O2JvcmRlci1jb2xvcjojZGMzNTQ1fS5idG4tb3V0bGluZS1kYW5nZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5idG4tb3V0bGluZS1kYW5nZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLC5zaG93Pi5idG4tb3V0bGluZS1kYW5nZXIuZHJvcGRvd24tdG9nZ2xlOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoMjIwLDUzLDY5LDAuNSl9LmJ0bi1vdXRsaW5lLWxpZ2h0e2NvbG9yOiNmOGY5ZmE7Ym9yZGVyLWNvbG9yOiNmOGY5ZmF9LmJ0bi1vdXRsaW5lLWxpZ2h0OmhvdmVye2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZjhmOWZhO2JvcmRlci1jb2xvcjojZjhmOWZhfS5idG4tb3V0bGluZS1saWdodDpmb2N1cywuYnRuLW91dGxpbmUtbGlnaHQuZm9jdXN7Ym94LXNoYWRvdzowIDAgMCAwLjJyZW0gcmdiYSgyNDgsMjQ5LDI1MCwwLjUpfS5idG4tb3V0bGluZS1saWdodC5kaXNhYmxlZCwuYnRuLW91dGxpbmUtbGlnaHQ6ZGlzYWJsZWR7Y29sb3I6I2Y4ZjlmYTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fS5idG4tb3V0bGluZS1saWdodDpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLmJ0bi1vdXRsaW5lLWxpZ2h0Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwuc2hvdz4uYnRuLW91dGxpbmUtbGlnaHQuZHJvcGRvd24tdG9nZ2xle2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZjhmOWZhO2JvcmRlci1jb2xvcjojZjhmOWZhfS5idG4tb3V0bGluZS1saWdodDpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsLmJ0bi1vdXRsaW5lLWxpZ2h0Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cywuc2hvdz4uYnRuLW91dGxpbmUtbGlnaHQuZHJvcGRvd24tdG9nZ2xlOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoMjQ4LDI0OSwyNTAsMC41KX0uYnRuLW91dGxpbmUtZGFya3tjb2xvcjojMzQzYTQwO2JvcmRlci1jb2xvcjojMzQzYTQwfS5idG4tb3V0bGluZS1kYXJrOmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMzQzYTQwO2JvcmRlci1jb2xvcjojMzQzYTQwfS5idG4tb3V0bGluZS1kYXJrOmZvY3VzLC5idG4tb3V0bGluZS1kYXJrLmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoNTIsNTgsNjQsMC41KX0uYnRuLW91dGxpbmUtZGFyay5kaXNhYmxlZCwuYnRuLW91dGxpbmUtZGFyazpkaXNhYmxlZHtjb2xvcjojMzQzYTQwO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9LmJ0bi1vdXRsaW5lLWRhcms6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5idG4tb3V0bGluZS1kYXJrOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwuc2hvdz4uYnRuLW91dGxpbmUtZGFyay5kcm9wZG93bi10b2dnbGV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMzNDNhNDA7Ym9yZGVyLWNvbG9yOiMzNDNhNDB9LmJ0bi1vdXRsaW5lLWRhcms6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5idG4tb3V0bGluZS1kYXJrOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cywuc2hvdz4uYnRuLW91dGxpbmUtZGFyay5kcm9wZG93bi10b2dnbGU6Zm9jdXN7Ym94LXNoYWRvdzowIDAgMCAwLjJyZW0gcmdiYSg1Miw1OCw2NCwwLjUpfS5idG4tbGlua3tmb250LXdlaWdodDo0MDA7Y29sb3I6IzAwN2JmZjt0ZXh0LWRlY29yYXRpb246bm9uZX0uYnRuLWxpbms6aG92ZXJ7Y29sb3I6IzAwNTZiMzt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lfS5idG4tbGluazpmb2N1cywuYnRuLWxpbmsuZm9jdXN7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTtib3gtc2hhZG93Om5vbmV9LmJ0bi1saW5rOmRpc2FibGVkLC5idG4tbGluay5kaXNhYmxlZHtjb2xvcjojNmM3NTdkO3BvaW50ZXItZXZlbnRzOm5vbmV9LmJ0bi1sZywuYnRuLWdyb3VwLWxnPi5idG57cGFkZGluZzowLjVyZW0gMXJlbTtmb250LXNpemU6MS4yNXJlbTtsaW5lLWhlaWdodDoxLjU7Ym9yZGVyLXJhZGl1czowLjNyZW19LmJ0bi1zbSwuYnRuLWdyb3VwLXNtPi5idG57cGFkZGluZzowLjI1cmVtIDAuNXJlbTtmb250LXNpemU6MC44NzVyZW07bGluZS1oZWlnaHQ6MS41O2JvcmRlci1yYWRpdXM6MC4ycmVtfS5idG4tYmxvY2t7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlfS5idG4tYmxvY2srLmJ0bi1ibG9ja3ttYXJnaW4tdG9wOjAuNXJlbX1pbnB1dFt0eXBlPVxcXCJzdWJtaXRcXFwiXS5idG4tYmxvY2ssaW5wdXRbdHlwZT1cXFwicmVzZXRcXFwiXS5idG4tYmxvY2ssaW5wdXRbdHlwZT1cXFwiYnV0dG9uXFxcIl0uYnRuLWJsb2Nre3dpZHRoOjEwMCV9LmZhZGV7dHJhbnNpdGlvbjpvcGFjaXR5IDAuMTVzIGxpbmVhcn1AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSl7LmZhZGV7dHJhbnNpdGlvbjpub25lfX0uZmFkZTpub3QoLnNob3cpe29wYWNpdHk6MH0uY29sbGFwc2U6bm90KC5zaG93KXtkaXNwbGF5Om5vbmV9LmNvbGxhcHNpbmd7cG9zaXRpb246cmVsYXRpdmU7aGVpZ2h0OjA7b3ZlcmZsb3c6aGlkZGVuO3RyYW5zaXRpb246aGVpZ2h0IDAuMzVzIGVhc2V9QG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiByZWR1Y2Upey5jb2xsYXBzaW5ne3RyYW5zaXRpb246bm9uZX19LmRyb3B1cCwuZHJvcHJpZ2h0LC5kcm9wZG93biwuZHJvcGxlZnR7cG9zaXRpb246cmVsYXRpdmV9LmRyb3Bkb3duLXRvZ2dsZXt3aGl0ZS1zcGFjZTpub3dyYXB9LmRyb3Bkb3duLXRvZ2dsZTo6YWZ0ZXJ7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLWxlZnQ6MC4yNTVlbTt2ZXJ0aWNhbC1hbGlnbjowLjI1NWVtO2NvbnRlbnQ6XFxcIlxcXCI7Ym9yZGVyLXRvcDowLjNlbSBzb2xpZDtib3JkZXItcmlnaHQ6MC4zZW0gc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLWJvdHRvbTowO2JvcmRlci1sZWZ0OjAuM2VtIHNvbGlkIHRyYW5zcGFyZW50fS5kcm9wZG93bi10b2dnbGU6ZW1wdHk6OmFmdGVye21hcmdpbi1sZWZ0OjB9LmRyb3Bkb3duLW1lbnV7cG9zaXRpb246YWJzb2x1dGU7dG9wOjEwMCU7bGVmdDowO3otaW5kZXg6MTAwMDtkaXNwbGF5Om5vbmU7ZmxvYXQ6bGVmdDttaW4td2lkdGg6MTByZW07cGFkZGluZzowLjVyZW0gMDttYXJnaW46MC4xMjVyZW0gMCAwO2ZvbnQtc2l6ZToxcmVtO2NvbG9yOiMyMTI1Mjk7dGV4dC1hbGlnbjpsZWZ0O2xpc3Qtc3R5bGU6bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7YmFja2dyb3VuZC1jbGlwOnBhZGRpbmctYm94O2JvcmRlcjoxcHggc29saWQgcmdiYSgwLDAsMCwwLjE1KTtib3JkZXItcmFkaXVzOjAuMjVyZW19LmRyb3Bkb3duLW1lbnUtbGVmdHtyaWdodDphdXRvO2xlZnQ6MH0uZHJvcGRvd24tbWVudS1yaWdodHtyaWdodDowO2xlZnQ6YXV0b31AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpey5kcm9wZG93bi1tZW51LXNtLWxlZnR7cmlnaHQ6YXV0bztsZWZ0OjB9LmRyb3Bkb3duLW1lbnUtc20tcmlnaHR7cmlnaHQ6MDtsZWZ0OmF1dG99fUBtZWRpYSAobWluLXdpZHRoOiA3NjhweCl7LmRyb3Bkb3duLW1lbnUtbWQtbGVmdHtyaWdodDphdXRvO2xlZnQ6MH0uZHJvcGRvd24tbWVudS1tZC1yaWdodHtyaWdodDowO2xlZnQ6YXV0b319QG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KXsuZHJvcGRvd24tbWVudS1sZy1sZWZ0e3JpZ2h0OmF1dG87bGVmdDowfS5kcm9wZG93bi1tZW51LWxnLXJpZ2h0e3JpZ2h0OjA7bGVmdDphdXRvfX1AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KXsuZHJvcGRvd24tbWVudS14bC1sZWZ0e3JpZ2h0OmF1dG87bGVmdDowfS5kcm9wZG93bi1tZW51LXhsLXJpZ2h0e3JpZ2h0OjA7bGVmdDphdXRvfX0uZHJvcHVwIC5kcm9wZG93bi1tZW51e3RvcDphdXRvO2JvdHRvbToxMDAlO21hcmdpbi10b3A6MDttYXJnaW4tYm90dG9tOjAuMTI1cmVtfS5kcm9wdXAgLmRyb3Bkb3duLXRvZ2dsZTo6YWZ0ZXJ7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLWxlZnQ6MC4yNTVlbTt2ZXJ0aWNhbC1hbGlnbjowLjI1NWVtO2NvbnRlbnQ6XFxcIlxcXCI7Ym9yZGVyLXRvcDowO2JvcmRlci1yaWdodDowLjNlbSBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItYm90dG9tOjAuM2VtIHNvbGlkO2JvcmRlci1sZWZ0OjAuM2VtIHNvbGlkIHRyYW5zcGFyZW50fS5kcm9wdXAgLmRyb3Bkb3duLXRvZ2dsZTplbXB0eTo6YWZ0ZXJ7bWFyZ2luLWxlZnQ6MH0uZHJvcHJpZ2h0IC5kcm9wZG93bi1tZW51e3RvcDowO3JpZ2h0OmF1dG87bGVmdDoxMDAlO21hcmdpbi10b3A6MDttYXJnaW4tbGVmdDowLjEyNXJlbX0uZHJvcHJpZ2h0IC5kcm9wZG93bi10b2dnbGU6OmFmdGVye2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1sZWZ0OjAuMjU1ZW07dmVydGljYWwtYWxpZ246MC4yNTVlbTtjb250ZW50OlxcXCJcXFwiO2JvcmRlci10b3A6MC4zZW0gc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXJpZ2h0OjA7Ym9yZGVyLWJvdHRvbTowLjNlbSBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItbGVmdDowLjNlbSBzb2xpZH0uZHJvcHJpZ2h0IC5kcm9wZG93bi10b2dnbGU6ZW1wdHk6OmFmdGVye21hcmdpbi1sZWZ0OjB9LmRyb3ByaWdodCAuZHJvcGRvd24tdG9nZ2xlOjphZnRlcnt2ZXJ0aWNhbC1hbGlnbjowfS5kcm9wbGVmdCAuZHJvcGRvd24tbWVudXt0b3A6MDtyaWdodDoxMDAlO2xlZnQ6YXV0bzttYXJnaW4tdG9wOjA7bWFyZ2luLXJpZ2h0OjAuMTI1cmVtfS5kcm9wbGVmdCAuZHJvcGRvd24tdG9nZ2xlOjphZnRlcntkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tbGVmdDowLjI1NWVtO3ZlcnRpY2FsLWFsaWduOjAuMjU1ZW07Y29udGVudDpcXFwiXFxcIn0uZHJvcGxlZnQgLmRyb3Bkb3duLXRvZ2dsZTo6YWZ0ZXJ7ZGlzcGxheTpub25lfS5kcm9wbGVmdCAuZHJvcGRvd24tdG9nZ2xlOjpiZWZvcmV7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLXJpZ2h0OjAuMjU1ZW07dmVydGljYWwtYWxpZ246MC4yNTVlbTtjb250ZW50OlxcXCJcXFwiO2JvcmRlci10b3A6MC4zZW0gc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXJpZ2h0OjAuM2VtIHNvbGlkO2JvcmRlci1ib3R0b206MC4zZW0gc29saWQgdHJhbnNwYXJlbnR9LmRyb3BsZWZ0IC5kcm9wZG93bi10b2dnbGU6ZW1wdHk6OmFmdGVye21hcmdpbi1sZWZ0OjB9LmRyb3BsZWZ0IC5kcm9wZG93bi10b2dnbGU6OmJlZm9yZXt2ZXJ0aWNhbC1hbGlnbjowfS5kcm9wZG93bi1tZW51W3gtcGxhY2VtZW50Xj1cXFwidG9wXFxcIl0sLmRyb3Bkb3duLW1lbnVbeC1wbGFjZW1lbnRePVxcXCJyaWdodFxcXCJdLC5kcm9wZG93bi1tZW51W3gtcGxhY2VtZW50Xj1cXFwiYm90dG9tXFxcIl0sLmRyb3Bkb3duLW1lbnVbeC1wbGFjZW1lbnRePVxcXCJsZWZ0XFxcIl17cmlnaHQ6YXV0bztib3R0b206YXV0b30uZHJvcGRvd24tZGl2aWRlcntoZWlnaHQ6MDttYXJnaW46MC41cmVtIDA7b3ZlcmZsb3c6aGlkZGVuO2JvcmRlci10b3A6MXB4IHNvbGlkICNlOWVjZWZ9LmRyb3Bkb3duLWl0ZW17ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO3BhZGRpbmc6MC4yNXJlbSAxLjVyZW07Y2xlYXI6Ym90aDtmb250LXdlaWdodDo0MDA7Y29sb3I6IzIxMjUyOTt0ZXh0LWFsaWduOmluaGVyaXQ7d2hpdGUtc3BhY2U6bm93cmFwO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyOjB9LmRyb3Bkb3duLWl0ZW06aG92ZXIsLmRyb3Bkb3duLWl0ZW06Zm9jdXN7Y29sb3I6IzE2MTgxYjt0ZXh0LWRlY29yYXRpb246bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOiNmOGY5ZmF9LmRyb3Bkb3duLWl0ZW0uYWN0aXZlLC5kcm9wZG93bi1pdGVtOmFjdGl2ZXtjb2xvcjojZmZmO3RleHQtZGVjb3JhdGlvbjpub25lO2JhY2tncm91bmQtY29sb3I6IzAwN2JmZn0uZHJvcGRvd24taXRlbS5kaXNhYmxlZCwuZHJvcGRvd24taXRlbTpkaXNhYmxlZHtjb2xvcjojNmM3NTdkO3BvaW50ZXItZXZlbnRzOm5vbmU7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH0uZHJvcGRvd24tbWVudS5zaG93e2Rpc3BsYXk6YmxvY2t9LmRyb3Bkb3duLWhlYWRlcntkaXNwbGF5OmJsb2NrO3BhZGRpbmc6MC41cmVtIDEuNXJlbTttYXJnaW4tYm90dG9tOjA7Zm9udC1zaXplOjAuODc1cmVtO2NvbG9yOiM2Yzc1N2Q7d2hpdGUtc3BhY2U6bm93cmFwfS5kcm9wZG93bi1pdGVtLXRleHR7ZGlzcGxheTpibG9jaztwYWRkaW5nOjAuMjVyZW0gMS41cmVtO2NvbG9yOiMyMTI1Mjl9LmJ0bi1ncm91cCwuYnRuLWdyb3VwLXZlcnRpY2Fse3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6LW1zLWlubGluZS1mbGV4Ym94O2Rpc3BsYXk6aW5saW5lLWZsZXg7dmVydGljYWwtYWxpZ246bWlkZGxlfS5idG4tZ3JvdXA+LmJ0biwuYnRuLWdyb3VwLXZlcnRpY2FsPi5idG57cG9zaXRpb246cmVsYXRpdmU7LW1zLWZsZXg6MSAxIGF1dG87ZmxleDoxIDEgYXV0b30uYnRuLWdyb3VwPi5idG46aG92ZXIsLmJ0bi1ncm91cC12ZXJ0aWNhbD4uYnRuOmhvdmVye3otaW5kZXg6MX0uYnRuLWdyb3VwPi5idG46Zm9jdXMsLmJ0bi1ncm91cD4uYnRuOmFjdGl2ZSwuYnRuLWdyb3VwPi5idG4uYWN0aXZlLC5idG4tZ3JvdXAtdmVydGljYWw+LmJ0bjpmb2N1cywuYnRuLWdyb3VwLXZlcnRpY2FsPi5idG46YWN0aXZlLC5idG4tZ3JvdXAtdmVydGljYWw+LmJ0bi5hY3RpdmV7ei1pbmRleDoxfS5idG4tdG9vbGJhcntkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7LW1zLWZsZXgtcGFjazpzdGFydDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydH0uYnRuLXRvb2xiYXIgLmlucHV0LWdyb3Vwe3dpZHRoOmF1dG99LmJ0bi1ncm91cD4uYnRuOm5vdCg6Zmlyc3QtY2hpbGQpLC5idG4tZ3JvdXA+LmJ0bi1ncm91cDpub3QoOmZpcnN0LWNoaWxkKXttYXJnaW4tbGVmdDotMXB4fS5idG4tZ3JvdXA+LmJ0bjpub3QoOmxhc3QtY2hpbGQpOm5vdCguZHJvcGRvd24tdG9nZ2xlKSwuYnRuLWdyb3VwPi5idG4tZ3JvdXA6bm90KDpsYXN0LWNoaWxkKT4uYnRue2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MH0uYnRuLWdyb3VwPi5idG46bm90KDpmaXJzdC1jaGlsZCksLmJ0bi1ncm91cD4uYnRuLWdyb3VwOm5vdCg6Zmlyc3QtY2hpbGQpPi5idG57Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MH0uZHJvcGRvd24tdG9nZ2xlLXNwbGl0e3BhZGRpbmctcmlnaHQ6MC41NjI1cmVtO3BhZGRpbmctbGVmdDowLjU2MjVyZW19LmRyb3Bkb3duLXRvZ2dsZS1zcGxpdDo6YWZ0ZXIsLmRyb3B1cCAuZHJvcGRvd24tdG9nZ2xlLXNwbGl0OjphZnRlciwuZHJvcHJpZ2h0IC5kcm9wZG93bi10b2dnbGUtc3BsaXQ6OmFmdGVye21hcmdpbi1sZWZ0OjB9LmRyb3BsZWZ0IC5kcm9wZG93bi10b2dnbGUtc3BsaXQ6OmJlZm9yZXttYXJnaW4tcmlnaHQ6MH0uYnRuLXNtKy5kcm9wZG93bi10b2dnbGUtc3BsaXQsLmJ0bi1ncm91cC1zbT4uYnRuKy5kcm9wZG93bi10b2dnbGUtc3BsaXR7cGFkZGluZy1yaWdodDowLjM3NXJlbTtwYWRkaW5nLWxlZnQ6MC4zNzVyZW19LmJ0bi1sZysuZHJvcGRvd24tdG9nZ2xlLXNwbGl0LC5idG4tZ3JvdXAtbGc+LmJ0bisuZHJvcGRvd24tdG9nZ2xlLXNwbGl0e3BhZGRpbmctcmlnaHQ6MC43NXJlbTtwYWRkaW5nLWxlZnQ6MC43NXJlbX0uYnRuLWdyb3VwLXZlcnRpY2Fsey1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uOy1tcy1mbGV4LWFsaWduOnN0YXJ0O2FsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcn0uYnRuLWdyb3VwLXZlcnRpY2FsPi5idG4sLmJ0bi1ncm91cC12ZXJ0aWNhbD4uYnRuLWdyb3Vwe3dpZHRoOjEwMCV9LmJ0bi1ncm91cC12ZXJ0aWNhbD4uYnRuOm5vdCg6Zmlyc3QtY2hpbGQpLC5idG4tZ3JvdXAtdmVydGljYWw+LmJ0bi1ncm91cDpub3QoOmZpcnN0LWNoaWxkKXttYXJnaW4tdG9wOi0xcHh9LmJ0bi1ncm91cC12ZXJ0aWNhbD4uYnRuOm5vdCg6bGFzdC1jaGlsZCk6bm90KC5kcm9wZG93bi10b2dnbGUpLC5idG4tZ3JvdXAtdmVydGljYWw+LmJ0bi1ncm91cDpub3QoOmxhc3QtY2hpbGQpPi5idG57Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MDtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjB9LmJ0bi1ncm91cC12ZXJ0aWNhbD4uYnRuOm5vdCg6Zmlyc3QtY2hpbGQpLC5idG4tZ3JvdXAtdmVydGljYWw+LmJ0bi1ncm91cDpub3QoOmZpcnN0LWNoaWxkKT4uYnRue2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowfS5idG4tZ3JvdXAtdG9nZ2xlPi5idG4sLmJ0bi1ncm91cC10b2dnbGU+LmJ0bi1ncm91cD4uYnRue21hcmdpbi1ib3R0b206MH0uYnRuLWdyb3VwLXRvZ2dsZT4uYnRuIGlucHV0W3R5cGU9XFxcInJhZGlvXFxcIl0sLmJ0bi1ncm91cC10b2dnbGU+LmJ0biBpbnB1dFt0eXBlPVxcXCJjaGVja2JveFxcXCJdLC5idG4tZ3JvdXAtdG9nZ2xlPi5idG4tZ3JvdXA+LmJ0biBpbnB1dFt0eXBlPVxcXCJyYWRpb1xcXCJdLC5idG4tZ3JvdXAtdG9nZ2xlPi5idG4tZ3JvdXA+LmJ0biBpbnB1dFt0eXBlPVxcXCJjaGVja2JveFxcXCJde3Bvc2l0aW9uOmFic29sdXRlO2NsaXA6cmVjdCgwLCAwLCAwLCAwKTtwb2ludGVyLWV2ZW50czpub25lfS5pbnB1dC1ncm91cHtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7LW1zLWZsZXgtYWxpZ246c3RyZXRjaDthbGlnbi1pdGVtczpzdHJldGNoO3dpZHRoOjEwMCV9LmlucHV0LWdyb3VwPi5mb3JtLWNvbnRyb2wsLmlucHV0LWdyb3VwPi5mb3JtLWNvbnRyb2wtcGxhaW50ZXh0LC5pbnB1dC1ncm91cD4uY3VzdG9tLXNlbGVjdCwuaW5wdXQtZ3JvdXA+LmN1c3RvbS1maWxle3Bvc2l0aW9uOnJlbGF0aXZlOy1tcy1mbGV4OjEgMSAwJTtmbGV4OjEgMSAwJTttaW4td2lkdGg6MDttYXJnaW4tYm90dG9tOjB9LmlucHV0LWdyb3VwPi5mb3JtLWNvbnRyb2wrLmZvcm0tY29udHJvbCwuaW5wdXQtZ3JvdXA+LmZvcm0tY29udHJvbCsuY3VzdG9tLXNlbGVjdCwuaW5wdXQtZ3JvdXA+LmZvcm0tY29udHJvbCsuY3VzdG9tLWZpbGUsLmlucHV0LWdyb3VwPi5mb3JtLWNvbnRyb2wtcGxhaW50ZXh0Ky5mb3JtLWNvbnRyb2wsLmlucHV0LWdyb3VwPi5mb3JtLWNvbnRyb2wtcGxhaW50ZXh0Ky5jdXN0b20tc2VsZWN0LC5pbnB1dC1ncm91cD4uZm9ybS1jb250cm9sLXBsYWludGV4dCsuY3VzdG9tLWZpbGUsLmlucHV0LWdyb3VwPi5jdXN0b20tc2VsZWN0Ky5mb3JtLWNvbnRyb2wsLmlucHV0LWdyb3VwPi5jdXN0b20tc2VsZWN0Ky5jdXN0b20tc2VsZWN0LC5pbnB1dC1ncm91cD4uY3VzdG9tLXNlbGVjdCsuY3VzdG9tLWZpbGUsLmlucHV0LWdyb3VwPi5jdXN0b20tZmlsZSsuZm9ybS1jb250cm9sLC5pbnB1dC1ncm91cD4uY3VzdG9tLWZpbGUrLmN1c3RvbS1zZWxlY3QsLmlucHV0LWdyb3VwPi5jdXN0b20tZmlsZSsuY3VzdG9tLWZpbGV7bWFyZ2luLWxlZnQ6LTFweH0uaW5wdXQtZ3JvdXA+LmZvcm0tY29udHJvbDpmb2N1cywuaW5wdXQtZ3JvdXA+LmN1c3RvbS1zZWxlY3Q6Zm9jdXMsLmlucHV0LWdyb3VwPi5jdXN0b20tZmlsZSAuY3VzdG9tLWZpbGUtaW5wdXQ6Zm9jdXMgfiAuY3VzdG9tLWZpbGUtbGFiZWx7ei1pbmRleDozfS5pbnB1dC1ncm91cD4uY3VzdG9tLWZpbGUgLmN1c3RvbS1maWxlLWlucHV0OmZvY3Vze3otaW5kZXg6NH0uaW5wdXQtZ3JvdXA+LmZvcm0tY29udHJvbDpub3QoOmxhc3QtY2hpbGQpLC5pbnB1dC1ncm91cD4uY3VzdG9tLXNlbGVjdDpub3QoOmxhc3QtY2hpbGQpe2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MH0uaW5wdXQtZ3JvdXA+LmZvcm0tY29udHJvbDpub3QoOmZpcnN0LWNoaWxkKSwuaW5wdXQtZ3JvdXA+LmN1c3RvbS1zZWxlY3Q6bm90KDpmaXJzdC1jaGlsZCl7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MH0uaW5wdXQtZ3JvdXA+LmN1c3RvbS1maWxle2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXJ9LmlucHV0LWdyb3VwPi5jdXN0b20tZmlsZTpub3QoOmxhc3QtY2hpbGQpIC5jdXN0b20tZmlsZS1sYWJlbCwuaW5wdXQtZ3JvdXA+LmN1c3RvbS1maWxlOm5vdCg6bGFzdC1jaGlsZCkgLmN1c3RvbS1maWxlLWxhYmVsOjphZnRlcntib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowO2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjB9LmlucHV0LWdyb3VwPi5jdXN0b20tZmlsZTpub3QoOmZpcnN0LWNoaWxkKSAuY3VzdG9tLWZpbGUtbGFiZWx7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MH0uaW5wdXQtZ3JvdXAtcHJlcGVuZCwuaW5wdXQtZ3JvdXAtYXBwZW5ke2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4fS5pbnB1dC1ncm91cC1wcmVwZW5kIC5idG4sLmlucHV0LWdyb3VwLWFwcGVuZCAuYnRue3Bvc2l0aW9uOnJlbGF0aXZlO3otaW5kZXg6Mn0uaW5wdXQtZ3JvdXAtcHJlcGVuZCAuYnRuOmZvY3VzLC5pbnB1dC1ncm91cC1hcHBlbmQgLmJ0bjpmb2N1c3t6LWluZGV4OjN9LmlucHV0LWdyb3VwLXByZXBlbmQgLmJ0bisuYnRuLC5pbnB1dC1ncm91cC1wcmVwZW5kIC5idG4rLmlucHV0LWdyb3VwLXRleHQsLmlucHV0LWdyb3VwLXByZXBlbmQgLmlucHV0LWdyb3VwLXRleHQrLmlucHV0LWdyb3VwLXRleHQsLmlucHV0LWdyb3VwLXByZXBlbmQgLmlucHV0LWdyb3VwLXRleHQrLmJ0biwuaW5wdXQtZ3JvdXAtYXBwZW5kIC5idG4rLmJ0biwuaW5wdXQtZ3JvdXAtYXBwZW5kIC5idG4rLmlucHV0LWdyb3VwLXRleHQsLmlucHV0LWdyb3VwLWFwcGVuZCAuaW5wdXQtZ3JvdXAtdGV4dCsuaW5wdXQtZ3JvdXAtdGV4dCwuaW5wdXQtZ3JvdXAtYXBwZW5kIC5pbnB1dC1ncm91cC10ZXh0Ky5idG57bWFyZ2luLWxlZnQ6LTFweH0uaW5wdXQtZ3JvdXAtcHJlcGVuZHttYXJnaW4tcmlnaHQ6LTFweH0uaW5wdXQtZ3JvdXAtYXBwZW5ke21hcmdpbi1sZWZ0Oi0xcHh9LmlucHV0LWdyb3VwLXRleHR7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nOjAuMzc1cmVtIDAuNzVyZW07bWFyZ2luLWJvdHRvbTowO2ZvbnQtc2l6ZToxcmVtO2ZvbnQtd2VpZ2h0OjQwMDtsaW5lLWhlaWdodDoxLjU7Y29sb3I6IzQ5NTA1Nzt0ZXh0LWFsaWduOmNlbnRlcjt3aGl0ZS1zcGFjZTpub3dyYXA7YmFja2dyb3VuZC1jb2xvcjojZTllY2VmO2JvcmRlcjoxcHggc29saWQgI2NlZDRkYTtib3JkZXItcmFkaXVzOjAuMjVyZW19LmlucHV0LWdyb3VwLXRleHQgaW5wdXRbdHlwZT1cXFwicmFkaW9cXFwiXSwuaW5wdXQtZ3JvdXAtdGV4dCBpbnB1dFt0eXBlPVxcXCJjaGVja2JveFxcXCJde21hcmdpbi10b3A6MH0uaW5wdXQtZ3JvdXAtbGc+LmZvcm0tY29udHJvbDpub3QodGV4dGFyZWEpLC5pbnB1dC1ncm91cC1sZz4uY3VzdG9tLXNlbGVjdHtoZWlnaHQ6Y2FsYygxLjVlbSArIDFyZW0gKyAycHgpfS5pbnB1dC1ncm91cC1sZz4uZm9ybS1jb250cm9sLC5pbnB1dC1ncm91cC1sZz4uY3VzdG9tLXNlbGVjdCwuaW5wdXQtZ3JvdXAtbGc+LmlucHV0LWdyb3VwLXByZXBlbmQ+LmlucHV0LWdyb3VwLXRleHQsLmlucHV0LWdyb3VwLWxnPi5pbnB1dC1ncm91cC1hcHBlbmQ+LmlucHV0LWdyb3VwLXRleHQsLmlucHV0LWdyb3VwLWxnPi5pbnB1dC1ncm91cC1wcmVwZW5kPi5idG4sLmlucHV0LWdyb3VwLWxnPi5pbnB1dC1ncm91cC1hcHBlbmQ+LmJ0bntwYWRkaW5nOjAuNXJlbSAxcmVtO2ZvbnQtc2l6ZToxLjI1cmVtO2xpbmUtaGVpZ2h0OjEuNTtib3JkZXItcmFkaXVzOjAuM3JlbX0uaW5wdXQtZ3JvdXAtc20+LmZvcm0tY29udHJvbDpub3QodGV4dGFyZWEpLC5pbnB1dC1ncm91cC1zbT4uY3VzdG9tLXNlbGVjdHtoZWlnaHQ6Y2FsYygxLjVlbSArIDAuNXJlbSArIDJweCl9LmlucHV0LWdyb3VwLXNtPi5mb3JtLWNvbnRyb2wsLmlucHV0LWdyb3VwLXNtPi5jdXN0b20tc2VsZWN0LC5pbnB1dC1ncm91cC1zbT4uaW5wdXQtZ3JvdXAtcHJlcGVuZD4uaW5wdXQtZ3JvdXAtdGV4dCwuaW5wdXQtZ3JvdXAtc20+LmlucHV0LWdyb3VwLWFwcGVuZD4uaW5wdXQtZ3JvdXAtdGV4dCwuaW5wdXQtZ3JvdXAtc20+LmlucHV0LWdyb3VwLXByZXBlbmQ+LmJ0biwuaW5wdXQtZ3JvdXAtc20+LmlucHV0LWdyb3VwLWFwcGVuZD4uYnRue3BhZGRpbmc6MC4yNXJlbSAwLjVyZW07Zm9udC1zaXplOjAuODc1cmVtO2xpbmUtaGVpZ2h0OjEuNTtib3JkZXItcmFkaXVzOjAuMnJlbX0uaW5wdXQtZ3JvdXAtbGc+LmN1c3RvbS1zZWxlY3QsLmlucHV0LWdyb3VwLXNtPi5jdXN0b20tc2VsZWN0e3BhZGRpbmctcmlnaHQ6MS43NXJlbX0uaW5wdXQtZ3JvdXA+LmlucHV0LWdyb3VwLXByZXBlbmQ+LmJ0biwuaW5wdXQtZ3JvdXA+LmlucHV0LWdyb3VwLXByZXBlbmQ+LmlucHV0LWdyb3VwLXRleHQsLmlucHV0LWdyb3VwPi5pbnB1dC1ncm91cC1hcHBlbmQ6bm90KDpsYXN0LWNoaWxkKT4uYnRuLC5pbnB1dC1ncm91cD4uaW5wdXQtZ3JvdXAtYXBwZW5kOm5vdCg6bGFzdC1jaGlsZCk+LmlucHV0LWdyb3VwLXRleHQsLmlucHV0LWdyb3VwPi5pbnB1dC1ncm91cC1hcHBlbmQ6bGFzdC1jaGlsZD4uYnRuOm5vdCg6bGFzdC1jaGlsZCk6bm90KC5kcm9wZG93bi10b2dnbGUpLC5pbnB1dC1ncm91cD4uaW5wdXQtZ3JvdXAtYXBwZW5kOmxhc3QtY2hpbGQ+LmlucHV0LWdyb3VwLXRleHQ6bm90KDpsYXN0LWNoaWxkKXtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowO2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjB9LmlucHV0LWdyb3VwPi5pbnB1dC1ncm91cC1hcHBlbmQ+LmJ0biwuaW5wdXQtZ3JvdXA+LmlucHV0LWdyb3VwLWFwcGVuZD4uaW5wdXQtZ3JvdXAtdGV4dCwuaW5wdXQtZ3JvdXA+LmlucHV0LWdyb3VwLXByZXBlbmQ6bm90KDpmaXJzdC1jaGlsZCk+LmJ0biwuaW5wdXQtZ3JvdXA+LmlucHV0LWdyb3VwLXByZXBlbmQ6bm90KDpmaXJzdC1jaGlsZCk+LmlucHV0LWdyb3VwLXRleHQsLmlucHV0LWdyb3VwPi5pbnB1dC1ncm91cC1wcmVwZW5kOmZpcnN0LWNoaWxkPi5idG46bm90KDpmaXJzdC1jaGlsZCksLmlucHV0LWdyb3VwPi5pbnB1dC1ncm91cC1wcmVwZW5kOmZpcnN0LWNoaWxkPi5pbnB1dC1ncm91cC10ZXh0Om5vdCg6Zmlyc3QtY2hpbGQpe2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MDtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjB9LmN1c3RvbS1jb250cm9se3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6YmxvY2s7bWluLWhlaWdodDoxLjVyZW07cGFkZGluZy1sZWZ0OjEuNXJlbX0uY3VzdG9tLWNvbnRyb2wtaW5saW5le2Rpc3BsYXk6LW1zLWlubGluZS1mbGV4Ym94O2Rpc3BsYXk6aW5saW5lLWZsZXg7bWFyZ2luLXJpZ2h0OjFyZW19LmN1c3RvbS1jb250cm9sLWlucHV0e3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt6LWluZGV4Oi0xO3dpZHRoOjFyZW07aGVpZ2h0OjEuMjVyZW07b3BhY2l0eTowfS5jdXN0b20tY29udHJvbC1pbnB1dDpjaGVja2VkIH4gLmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7Y29sb3I6I2ZmZjtib3JkZXItY29sb3I6IzAwN2JmZjtiYWNrZ3JvdW5kLWNvbG9yOiMwMDdiZmZ9LmN1c3RvbS1jb250cm9sLWlucHV0OmZvY3VzIH4gLmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7Ym94LXNoYWRvdzowIDAgMCAwLjJyZW0gcmdiYSgwLDEyMywyNTUsMC4yNSl9LmN1c3RvbS1jb250cm9sLWlucHV0OmZvY3VzOm5vdCg6Y2hlY2tlZCkgfiAuY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtib3JkZXItY29sb3I6IzgwYmRmZn0uY3VzdG9tLWNvbnRyb2wtaW5wdXQ6bm90KDpkaXNhYmxlZCk6YWN0aXZlIH4gLmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiNiM2Q3ZmY7Ym9yZGVyLWNvbG9yOiNiM2Q3ZmZ9LmN1c3RvbS1jb250cm9sLWlucHV0W2Rpc2FibGVkXSB+IC5jdXN0b20tY29udHJvbC1sYWJlbCwuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6ZGlzYWJsZWQgfiAuY3VzdG9tLWNvbnRyb2wtbGFiZWx7Y29sb3I6IzZjNzU3ZH0uY3VzdG9tLWNvbnRyb2wtaW5wdXRbZGlzYWJsZWRdIH4gLmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmUsLmN1c3RvbS1jb250cm9sLWlucHV0OmRpc2FibGVkIH4gLmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7YmFja2dyb3VuZC1jb2xvcjojZTllY2VmfS5jdXN0b20tY29udHJvbC1sYWJlbHtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tYm90dG9tOjA7dmVydGljYWwtYWxpZ246dG9wfS5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle3Bvc2l0aW9uOmFic29sdXRlO3RvcDowLjI1cmVtO2xlZnQ6LTEuNXJlbTtkaXNwbGF5OmJsb2NrO3dpZHRoOjFyZW07aGVpZ2h0OjFyZW07cG9pbnRlci1ldmVudHM6bm9uZTtjb250ZW50OlxcXCJcXFwiO2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXI6I2FkYjViZCBzb2xpZCAxcHh9LmN1c3RvbS1jb250cm9sLWxhYmVsOjphZnRlcntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MC4yNXJlbTtsZWZ0Oi0xLjVyZW07ZGlzcGxheTpibG9jazt3aWR0aDoxcmVtO2hlaWdodDoxcmVtO2NvbnRlbnQ6XFxcIlxcXCI7YmFja2dyb3VuZDpuby1yZXBlYXQgNTAlIC8gNTAlIDUwJX0uY3VzdG9tLWNoZWNrYm94IC5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JvcmRlci1yYWRpdXM6MC4yNXJlbX0uY3VzdG9tLWNoZWNrYm94IC5jdXN0b20tY29udHJvbC1pbnB1dDpjaGVja2VkIH4gLmN1c3RvbS1jb250cm9sLWxhYmVsOjphZnRlcntiYWNrZ3JvdW5kLWltYWdlOnVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSc4JyBoZWlnaHQ9JzgnIHZpZXdCb3g9JzAgMCA4IDgnJTNlJTNjcGF0aCBmaWxsPSclMjNmZmYnIGQ9J002LjU2NC43NWwtMy41OSAzLjYxMi0xLjUzOC0xLjU1TDAgNC4yNmwyLjk3NCAyLjk5TDggMi4xOTN6Jy8lM2UlM2Mvc3ZnJTNlXFxcIil9LmN1c3RvbS1jaGVja2JveCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6aW5kZXRlcm1pbmF0ZSB+IC5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JvcmRlci1jb2xvcjojMDA3YmZmO2JhY2tncm91bmQtY29sb3I6IzAwN2JmZn0uY3VzdG9tLWNoZWNrYm94IC5jdXN0b20tY29udHJvbC1pbnB1dDppbmRldGVybWluYXRlIH4gLmN1c3RvbS1jb250cm9sLWxhYmVsOjphZnRlcntiYWNrZ3JvdW5kLWltYWdlOnVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSc0JyBoZWlnaHQ9JzQnIHZpZXdCb3g9JzAgMCA0IDQnJTNlJTNjcGF0aCBzdHJva2U9JyUyM2ZmZicgZD0nTTAgMmg0Jy8lM2UlM2Mvc3ZnJTNlXFxcIil9LmN1c3RvbS1jaGVja2JveCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6ZGlzYWJsZWQ6Y2hlY2tlZCB+IC5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDEyMywyNTUsMC41KX0uY3VzdG9tLWNoZWNrYm94IC5jdXN0b20tY29udHJvbC1pbnB1dDpkaXNhYmxlZDppbmRldGVybWluYXRlIH4gLmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMTIzLDI1NSwwLjUpfS5jdXN0b20tcmFkaW8gLmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7Ym9yZGVyLXJhZGl1czo1MCV9LmN1c3RvbS1yYWRpbyAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6Y2hlY2tlZCB+IC5jdXN0b20tY29udHJvbC1sYWJlbDo6YWZ0ZXJ7YmFja2dyb3VuZC1pbWFnZTp1cmwoXFxcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMTInIGhlaWdodD0nMTInIHZpZXdCb3g9Jy00IC00IDggOCclM2UlM2NjaXJjbGUgcj0nMycgZmlsbD0nJTIzZmZmJy8lM2UlM2Mvc3ZnJTNlXFxcIil9LmN1c3RvbS1yYWRpbyAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6ZGlzYWJsZWQ6Y2hlY2tlZCB+IC5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDEyMywyNTUsMC41KX0uY3VzdG9tLXN3aXRjaHtwYWRkaW5nLWxlZnQ6Mi4yNXJlbX0uY3VzdG9tLXN3aXRjaCAuY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtsZWZ0Oi0yLjI1cmVtO3dpZHRoOjEuNzVyZW07cG9pbnRlci1ldmVudHM6YWxsO2JvcmRlci1yYWRpdXM6MC41cmVtfS5jdXN0b20tc3dpdGNoIC5jdXN0b20tY29udHJvbC1sYWJlbDo6YWZ0ZXJ7dG9wOmNhbGMoMC4yNXJlbSArIDJweCk7bGVmdDpjYWxjKC0yLjI1cmVtICsgMnB4KTt3aWR0aDpjYWxjKDFyZW0gLSA0cHgpO2hlaWdodDpjYWxjKDFyZW0gLSA0cHgpO2JhY2tncm91bmQtY29sb3I6I2FkYjViZDtib3JkZXItcmFkaXVzOjAuNXJlbTt0cmFuc2l0aW9uOmJhY2tncm91bmQtY29sb3IgMC4xNXMgZWFzZS1pbi1vdXQsIGJvcmRlci1jb2xvciAwLjE1cyBlYXNlLWluLW91dCwgYm94LXNoYWRvdyAwLjE1cyBlYXNlLWluLW91dCwgLXdlYmtpdC10cmFuc2Zvcm0gMC4xNXMgZWFzZS1pbi1vdXQ7dHJhbnNpdGlvbjp0cmFuc2Zvcm0gMC4xNXMgZWFzZS1pbi1vdXQsIGJhY2tncm91bmQtY29sb3IgMC4xNXMgZWFzZS1pbi1vdXQsIGJvcmRlci1jb2xvciAwLjE1cyBlYXNlLWluLW91dCwgYm94LXNoYWRvdyAwLjE1cyBlYXNlLWluLW91dDt0cmFuc2l0aW9uOnRyYW5zZm9ybSAwLjE1cyBlYXNlLWluLW91dCwgYmFja2dyb3VuZC1jb2xvciAwLjE1cyBlYXNlLWluLW91dCwgYm9yZGVyLWNvbG9yIDAuMTVzIGVhc2UtaW4tb3V0LCBib3gtc2hhZG93IDAuMTVzIGVhc2UtaW4tb3V0LCAtd2Via2l0LXRyYW5zZm9ybSAwLjE1cyBlYXNlLWluLW91dH1AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSl7LmN1c3RvbS1zd2l0Y2ggLmN1c3RvbS1jb250cm9sLWxhYmVsOjphZnRlcnt0cmFuc2l0aW9uOm5vbmV9fS5jdXN0b20tc3dpdGNoIC5jdXN0b20tY29udHJvbC1pbnB1dDpjaGVja2VkIH4gLmN1c3RvbS1jb250cm9sLWxhYmVsOjphZnRlcntiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlWCgwLjc1cmVtKTt0cmFuc2Zvcm06dHJhbnNsYXRlWCgwLjc1cmVtKX0uY3VzdG9tLXN3aXRjaCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6ZGlzYWJsZWQ6Y2hlY2tlZCB+IC5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDEyMywyNTUsMC41KX0uY3VzdG9tLXNlbGVjdHtkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDoxMDAlO2hlaWdodDpjYWxjKDEuNWVtICsgMC43NXJlbSArIDJweCk7cGFkZGluZzowLjM3NXJlbSAxLjc1cmVtIDAuMzc1cmVtIDAuNzVyZW07Zm9udC1zaXplOjFyZW07Zm9udC13ZWlnaHQ6NDAwO2xpbmUtaGVpZ2h0OjEuNTtjb2xvcjojNDk1MDU3O3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtiYWNrZ3JvdW5kOiNmZmYgdXJsKFxcXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNjc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzQnIGhlaWdodD0nNScgdmlld0JveD0nMCAwIDQgNSclM2UlM2NwYXRoIGZpbGw9JyUyMzM0M2E0MCcgZD0nTTIgMEwwIDJoNHptMCA1TDAgM2g0eicvJTNlJTNjL3N2ZyUzZVxcXCIpIG5vLXJlcGVhdCByaWdodCAwLjc1cmVtIGNlbnRlci84cHggMTBweDtib3JkZXI6MXB4IHNvbGlkICNjZWQ0ZGE7Ym9yZGVyLXJhZGl1czowLjI1cmVtOy13ZWJraXQtYXBwZWFyYW5jZTpub25lOy1tb3otYXBwZWFyYW5jZTpub25lO2FwcGVhcmFuY2U6bm9uZX0uY3VzdG9tLXNlbGVjdDpmb2N1c3tib3JkZXItY29sb3I6IzgwYmRmZjtvdXRsaW5lOjA7Ym94LXNoYWRvdzowIDAgMCAwLjJyZW0gcmdiYSgwLDEyMywyNTUsMC4yNSl9LmN1c3RvbS1zZWxlY3Q6Zm9jdXM6Oi1tcy12YWx1ZXtjb2xvcjojNDk1MDU3O2JhY2tncm91bmQtY29sb3I6I2ZmZn0uY3VzdG9tLXNlbGVjdFttdWx0aXBsZV0sLmN1c3RvbS1zZWxlY3Rbc2l6ZV06bm90KFtzaXplPVxcXCIxXFxcIl0pe2hlaWdodDphdXRvO3BhZGRpbmctcmlnaHQ6MC43NXJlbTtiYWNrZ3JvdW5kLWltYWdlOm5vbmV9LmN1c3RvbS1zZWxlY3Q6ZGlzYWJsZWR7Y29sb3I6IzZjNzU3ZDtiYWNrZ3JvdW5kLWNvbG9yOiNlOWVjZWZ9LmN1c3RvbS1zZWxlY3Q6Oi1tcy1leHBhbmR7ZGlzcGxheTpub25lfS5jdXN0b20tc2VsZWN0Oi1tb3otZm9jdXNyaW5ne2NvbG9yOnRyYW5zcGFyZW50O3RleHQtc2hhZG93OjAgMCAwICM0OTUwNTd9LmN1c3RvbS1zZWxlY3Qtc217aGVpZ2h0OmNhbGMoMS41ZW0gKyAwLjVyZW0gKyAycHgpO3BhZGRpbmctdG9wOjAuMjVyZW07cGFkZGluZy1ib3R0b206MC4yNXJlbTtwYWRkaW5nLWxlZnQ6MC41cmVtO2ZvbnQtc2l6ZTowLjg3NXJlbX0uY3VzdG9tLXNlbGVjdC1sZ3toZWlnaHQ6Y2FsYygxLjVlbSArIDFyZW0gKyAycHgpO3BhZGRpbmctdG9wOjAuNXJlbTtwYWRkaW5nLWJvdHRvbTowLjVyZW07cGFkZGluZy1sZWZ0OjFyZW07Zm9udC1zaXplOjEuMjVyZW19LmN1c3RvbS1maWxle3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3dpZHRoOjEwMCU7aGVpZ2h0OmNhbGMoMS41ZW0gKyAwLjc1cmVtICsgMnB4KTttYXJnaW4tYm90dG9tOjB9LmN1c3RvbS1maWxlLWlucHV0e3Bvc2l0aW9uOnJlbGF0aXZlO3otaW5kZXg6Mjt3aWR0aDoxMDAlO2hlaWdodDpjYWxjKDEuNWVtICsgMC43NXJlbSArIDJweCk7bWFyZ2luOjA7b3BhY2l0eTowfS5jdXN0b20tZmlsZS1pbnB1dDpmb2N1cyB+IC5jdXN0b20tZmlsZS1sYWJlbHtib3JkZXItY29sb3I6IzgwYmRmZjtib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDAsMTIzLDI1NSwwLjI1KX0uY3VzdG9tLWZpbGUtaW5wdXRbZGlzYWJsZWRdIH4gLmN1c3RvbS1maWxlLWxhYmVsLC5jdXN0b20tZmlsZS1pbnB1dDpkaXNhYmxlZCB+IC5jdXN0b20tZmlsZS1sYWJlbHtiYWNrZ3JvdW5kLWNvbG9yOiNlOWVjZWZ9LmN1c3RvbS1maWxlLWlucHV0OmxhbmcoZW4pIH4gLmN1c3RvbS1maWxlLWxhYmVsOjphZnRlcntjb250ZW50OlxcXCJCcm93c2VcXFwifS5jdXN0b20tZmlsZS1pbnB1dCB+IC5jdXN0b20tZmlsZS1sYWJlbFtkYXRhLWJyb3dzZV06OmFmdGVye2NvbnRlbnQ6YXR0cihkYXRhLWJyb3dzZSl9LmN1c3RvbS1maWxlLWxhYmVse3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3JpZ2h0OjA7bGVmdDowO3otaW5kZXg6MTtoZWlnaHQ6Y2FsYygxLjVlbSArIDAuNzVyZW0gKyAycHgpO3BhZGRpbmc6MC4zNzVyZW0gMC43NXJlbTtmb250LXdlaWdodDo0MDA7bGluZS1oZWlnaHQ6MS41O2NvbG9yOiM0OTUwNTc7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlcjoxcHggc29saWQgI2NlZDRkYTtib3JkZXItcmFkaXVzOjAuMjVyZW19LmN1c3RvbS1maWxlLWxhYmVsOjphZnRlcntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtyaWdodDowO2JvdHRvbTowO3otaW5kZXg6MztkaXNwbGF5OmJsb2NrO2hlaWdodDpjYWxjKDEuNWVtICsgMC43NXJlbSk7cGFkZGluZzowLjM3NXJlbSAwLjc1cmVtO2xpbmUtaGVpZ2h0OjEuNTtjb2xvcjojNDk1MDU3O2NvbnRlbnQ6XFxcIkJyb3dzZVxcXCI7YmFja2dyb3VuZC1jb2xvcjojZTllY2VmO2JvcmRlci1sZWZ0OmluaGVyaXQ7Ym9yZGVyLXJhZGl1czowIDAuMjVyZW0gMC4yNXJlbSAwfS5jdXN0b20tcmFuZ2V7d2lkdGg6MTAwJTtoZWlnaHQ6MS40cmVtO3BhZGRpbmc6MDtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50Oy13ZWJraXQtYXBwZWFyYW5jZTpub25lOy1tb3otYXBwZWFyYW5jZTpub25lO2FwcGVhcmFuY2U6bm9uZX0uY3VzdG9tLXJhbmdlOmZvY3Vze291dGxpbmU6bm9uZX0uY3VzdG9tLXJhbmdlOmZvY3VzOjotd2Via2l0LXNsaWRlci10aHVtYntib3gtc2hhZG93OjAgMCAwIDFweCAjZmZmLDAgMCAwIDAuMnJlbSByZ2JhKDAsMTIzLDI1NSwwLjI1KX0uY3VzdG9tLXJhbmdlOmZvY3VzOjotbW96LXJhbmdlLXRodW1ie2JveC1zaGFkb3c6MCAwIDAgMXB4ICNmZmYsMCAwIDAgMC4ycmVtIHJnYmEoMCwxMjMsMjU1LDAuMjUpfS5jdXN0b20tcmFuZ2U6Zm9jdXM6Oi1tcy10aHVtYntib3gtc2hhZG93OjAgMCAwIDFweCAjZmZmLDAgMCAwIDAuMnJlbSByZ2JhKDAsMTIzLDI1NSwwLjI1KX0uY3VzdG9tLXJhbmdlOjotbW96LWZvY3VzLW91dGVye2JvcmRlcjowfS5jdXN0b20tcmFuZ2U6Oi13ZWJraXQtc2xpZGVyLXRodW1ie3dpZHRoOjFyZW07aGVpZ2h0OjFyZW07bWFyZ2luLXRvcDotMC4yNXJlbTtiYWNrZ3JvdW5kLWNvbG9yOiMwMDdiZmY7Ym9yZGVyOjA7Ym9yZGVyLXJhZGl1czoxcmVtOy13ZWJraXQtdHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIDAuMTVzIGVhc2UtaW4tb3V0LCBib3JkZXItY29sb3IgMC4xNXMgZWFzZS1pbi1vdXQsIGJveC1zaGFkb3cgMC4xNXMgZWFzZS1pbi1vdXQ7dHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIDAuMTVzIGVhc2UtaW4tb3V0LCBib3JkZXItY29sb3IgMC4xNXMgZWFzZS1pbi1vdXQsIGJveC1zaGFkb3cgMC4xNXMgZWFzZS1pbi1vdXQ7LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7YXBwZWFyYW5jZTpub25lfUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKXsuY3VzdG9tLXJhbmdlOjotd2Via2l0LXNsaWRlci10aHVtYnstd2Via2l0LXRyYW5zaXRpb246bm9uZTt0cmFuc2l0aW9uOm5vbmV9fS5jdXN0b20tcmFuZ2U6Oi13ZWJraXQtc2xpZGVyLXRodW1iOmFjdGl2ZXtiYWNrZ3JvdW5kLWNvbG9yOiNiM2Q3ZmZ9LmN1c3RvbS1yYW5nZTo6LXdlYmtpdC1zbGlkZXItcnVubmFibGUtdHJhY2t7d2lkdGg6MTAwJTtoZWlnaHQ6MC41cmVtO2NvbG9yOnRyYW5zcGFyZW50O2N1cnNvcjpwb2ludGVyO2JhY2tncm91bmQtY29sb3I6I2RlZTJlNjtib3JkZXItY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLXJhZGl1czoxcmVtfS5jdXN0b20tcmFuZ2U6Oi1tb3otcmFuZ2UtdGh1bWJ7d2lkdGg6MXJlbTtoZWlnaHQ6MXJlbTtiYWNrZ3JvdW5kLWNvbG9yOiMwMDdiZmY7Ym9yZGVyOjA7Ym9yZGVyLXJhZGl1czoxcmVtOy1tb3otdHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIDAuMTVzIGVhc2UtaW4tb3V0LCBib3JkZXItY29sb3IgMC4xNXMgZWFzZS1pbi1vdXQsIGJveC1zaGFkb3cgMC4xNXMgZWFzZS1pbi1vdXQ7dHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIDAuMTVzIGVhc2UtaW4tb3V0LCBib3JkZXItY29sb3IgMC4xNXMgZWFzZS1pbi1vdXQsIGJveC1zaGFkb3cgMC4xNXMgZWFzZS1pbi1vdXQ7LW1vei1hcHBlYXJhbmNlOm5vbmU7YXBwZWFyYW5jZTpub25lfUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKXsuY3VzdG9tLXJhbmdlOjotbW96LXJhbmdlLXRodW1iey1tb3otdHJhbnNpdGlvbjpub25lO3RyYW5zaXRpb246bm9uZX19LmN1c3RvbS1yYW5nZTo6LW1vei1yYW5nZS10aHVtYjphY3RpdmV7YmFja2dyb3VuZC1jb2xvcjojYjNkN2ZmfS5jdXN0b20tcmFuZ2U6Oi1tb3otcmFuZ2UtdHJhY2t7d2lkdGg6MTAwJTtoZWlnaHQ6MC41cmVtO2NvbG9yOnRyYW5zcGFyZW50O2N1cnNvcjpwb2ludGVyO2JhY2tncm91bmQtY29sb3I6I2RlZTJlNjtib3JkZXItY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLXJhZGl1czoxcmVtfS5jdXN0b20tcmFuZ2U6Oi1tcy10aHVtYnt3aWR0aDoxcmVtO2hlaWdodDoxcmVtO21hcmdpbi10b3A6MDttYXJnaW4tcmlnaHQ6MC4ycmVtO21hcmdpbi1sZWZ0OjAuMnJlbTtiYWNrZ3JvdW5kLWNvbG9yOiMwMDdiZmY7Ym9yZGVyOjA7Ym9yZGVyLXJhZGl1czoxcmVtOy1tcy10cmFuc2l0aW9uOmJhY2tncm91bmQtY29sb3IgMC4xNXMgZWFzZS1pbi1vdXQsIGJvcmRlci1jb2xvciAwLjE1cyBlYXNlLWluLW91dCwgYm94LXNoYWRvdyAwLjE1cyBlYXNlLWluLW91dDt0cmFuc2l0aW9uOmJhY2tncm91bmQtY29sb3IgMC4xNXMgZWFzZS1pbi1vdXQsIGJvcmRlci1jb2xvciAwLjE1cyBlYXNlLWluLW91dCwgYm94LXNoYWRvdyAwLjE1cyBlYXNlLWluLW91dDthcHBlYXJhbmNlOm5vbmV9QG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiByZWR1Y2Upey5jdXN0b20tcmFuZ2U6Oi1tcy10aHVtYnstbXMtdHJhbnNpdGlvbjpub25lO3RyYW5zaXRpb246bm9uZX19LmN1c3RvbS1yYW5nZTo6LW1zLXRodW1iOmFjdGl2ZXtiYWNrZ3JvdW5kLWNvbG9yOiNiM2Q3ZmZ9LmN1c3RvbS1yYW5nZTo6LW1zLXRyYWNre3dpZHRoOjEwMCU7aGVpZ2h0OjAuNXJlbTtjb2xvcjp0cmFuc3BhcmVudDtjdXJzb3I6cG9pbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlci1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXItd2lkdGg6MC41cmVtfS5jdXN0b20tcmFuZ2U6Oi1tcy1maWxsLWxvd2Vye2JhY2tncm91bmQtY29sb3I6I2RlZTJlNjtib3JkZXItcmFkaXVzOjFyZW19LmN1c3RvbS1yYW5nZTo6LW1zLWZpbGwtdXBwZXJ7bWFyZ2luLXJpZ2h0OjE1cHg7YmFja2dyb3VuZC1jb2xvcjojZGVlMmU2O2JvcmRlci1yYWRpdXM6MXJlbX0uY3VzdG9tLXJhbmdlOmRpc2FibGVkOjotd2Via2l0LXNsaWRlci10aHVtYntiYWNrZ3JvdW5kLWNvbG9yOiNhZGI1YmR9LmN1c3RvbS1yYW5nZTpkaXNhYmxlZDo6LXdlYmtpdC1zbGlkZXItcnVubmFibGUtdHJhY2t7Y3Vyc29yOmRlZmF1bHR9LmN1c3RvbS1yYW5nZTpkaXNhYmxlZDo6LW1vei1yYW5nZS10aHVtYntiYWNrZ3JvdW5kLWNvbG9yOiNhZGI1YmR9LmN1c3RvbS1yYW5nZTpkaXNhYmxlZDo6LW1vei1yYW5nZS10cmFja3tjdXJzb3I6ZGVmYXVsdH0uY3VzdG9tLXJhbmdlOmRpc2FibGVkOjotbXMtdGh1bWJ7YmFja2dyb3VuZC1jb2xvcjojYWRiNWJkfS5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3JlLC5jdXN0b20tZmlsZS1sYWJlbCwuY3VzdG9tLXNlbGVjdHt0cmFuc2l0aW9uOmJhY2tncm91bmQtY29sb3IgMC4xNXMgZWFzZS1pbi1vdXQsIGJvcmRlci1jb2xvciAwLjE1cyBlYXNlLWluLW91dCwgYm94LXNoYWRvdyAwLjE1cyBlYXNlLWluLW91dH1AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSl7LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmUsLmN1c3RvbS1maWxlLWxhYmVsLC5jdXN0b20tc2VsZWN0e3RyYW5zaXRpb246bm9uZX19Lm5hdntkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7cGFkZGluZy1sZWZ0OjA7bWFyZ2luLWJvdHRvbTowO2xpc3Qtc3R5bGU6bm9uZX0ubmF2LWxpbmt7ZGlzcGxheTpibG9jaztwYWRkaW5nOjAuNXJlbSAxcmVtfS5uYXYtbGluazpob3ZlciwubmF2LWxpbms6Zm9jdXN7dGV4dC1kZWNvcmF0aW9uOm5vbmV9Lm5hdi1saW5rLmRpc2FibGVke2NvbG9yOiM2Yzc1N2Q7cG9pbnRlci1ldmVudHM6bm9uZTtjdXJzb3I6ZGVmYXVsdH0ubmF2LXRhYnN7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RlZTJlNn0ubmF2LXRhYnMgLm5hdi1pdGVte21hcmdpbi1ib3R0b206LTFweH0ubmF2LXRhYnMgLm5hdi1saW5re2JvcmRlcjoxcHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowLjI1cmVtO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjAuMjVyZW19Lm5hdi10YWJzIC5uYXYtbGluazpob3ZlciwubmF2LXRhYnMgLm5hdi1saW5rOmZvY3Vze2JvcmRlci1jb2xvcjojZTllY2VmICNlOWVjZWYgI2RlZTJlNn0ubmF2LXRhYnMgLm5hdi1saW5rLmRpc2FibGVke2NvbG9yOiM2Yzc1N2Q7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXItY29sb3I6dHJhbnNwYXJlbnR9Lm5hdi10YWJzIC5uYXYtbGluay5hY3RpdmUsLm5hdi10YWJzIC5uYXYtaXRlbS5zaG93IC5uYXYtbGlua3tjb2xvcjojNDk1MDU3O2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXItY29sb3I6I2RlZTJlNiAjZGVlMmU2ICNmZmZ9Lm5hdi10YWJzIC5kcm9wZG93bi1tZW51e21hcmdpbi10b3A6LTFweDtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjA7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MH0ubmF2LXBpbGxzIC5uYXYtbGlua3tib3JkZXItcmFkaXVzOjAuMjVyZW19Lm5hdi1waWxscyAubmF2LWxpbmsuYWN0aXZlLC5uYXYtcGlsbHMgLnNob3c+Lm5hdi1saW5re2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMDA3YmZmfS5uYXYtZmlsbCAubmF2LWl0ZW17LW1zLWZsZXg6MSAxIGF1dG87ZmxleDoxIDEgYXV0bzt0ZXh0LWFsaWduOmNlbnRlcn0ubmF2LWp1c3RpZmllZCAubmF2LWl0ZW17LW1zLWZsZXgtcHJlZmVycmVkLXNpemU6MDtmbGV4LWJhc2lzOjA7LW1zLWZsZXgtcG9zaXRpdmU6MTtmbGV4LWdyb3c6MTt0ZXh0LWFsaWduOmNlbnRlcn0udGFiLWNvbnRlbnQ+LnRhYi1wYW5le2Rpc3BsYXk6bm9uZX0udGFiLWNvbnRlbnQ+LmFjdGl2ZXtkaXNwbGF5OmJsb2NrfS5uYXZiYXJ7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtd3JhcDp3cmFwO2ZsZXgtd3JhcDp3cmFwOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtcGFjazpqdXN0aWZ5O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO3BhZGRpbmc6MC41cmVtIDFyZW19Lm5hdmJhciAuY29udGFpbmVyLC5uYXZiYXIgLmNvbnRhaW5lci1mbHVpZCwubmF2YmFyIC5jb250YWluZXItc20sLm5hdmJhciAuY29udGFpbmVyLW1kLC5uYXZiYXIgLmNvbnRhaW5lci1sZywubmF2YmFyIC5jb250YWluZXIteGx7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtd3JhcDp3cmFwO2ZsZXgtd3JhcDp3cmFwOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtcGFjazpqdXN0aWZ5O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVufS5uYXZiYXItYnJhbmR7ZGlzcGxheTppbmxpbmUtYmxvY2s7cGFkZGluZy10b3A6MC4zMTI1cmVtO3BhZGRpbmctYm90dG9tOjAuMzEyNXJlbTttYXJnaW4tcmlnaHQ6MXJlbTtmb250LXNpemU6MS4yNXJlbTtsaW5lLWhlaWdodDppbmhlcml0O3doaXRlLXNwYWNlOm5vd3JhcH0ubmF2YmFyLWJyYW5kOmhvdmVyLC5uYXZiYXItYnJhbmQ6Zm9jdXN7dGV4dC1kZWNvcmF0aW9uOm5vbmV9Lm5hdmJhci1uYXZ7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47cGFkZGluZy1sZWZ0OjA7bWFyZ2luLWJvdHRvbTowO2xpc3Qtc3R5bGU6bm9uZX0ubmF2YmFyLW5hdiAubmF2LWxpbmt7cGFkZGluZy1yaWdodDowO3BhZGRpbmctbGVmdDowfS5uYXZiYXItbmF2IC5kcm9wZG93bi1tZW51e3Bvc2l0aW9uOnN0YXRpYztmbG9hdDpub25lfS5uYXZiYXItdGV4dHtkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nLXRvcDowLjVyZW07cGFkZGluZy1ib3R0b206MC41cmVtfS5uYXZiYXItY29sbGFwc2V7LW1zLWZsZXgtcHJlZmVycmVkLXNpemU6MTAwJTtmbGV4LWJhc2lzOjEwMCU7LW1zLWZsZXgtcG9zaXRpdmU6MTtmbGV4LWdyb3c6MTstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyfS5uYXZiYXItdG9nZ2xlcntwYWRkaW5nOjAuMjVyZW0gMC43NXJlbTtmb250LXNpemU6MS4yNXJlbTtsaW5lLWhlaWdodDoxO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyOjFweCBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItcmFkaXVzOjAuMjVyZW19Lm5hdmJhci10b2dnbGVyOmhvdmVyLC5uYXZiYXItdG9nZ2xlcjpmb2N1c3t0ZXh0LWRlY29yYXRpb246bm9uZX0ubmF2YmFyLXRvZ2dsZXItaWNvbntkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDoxLjVlbTtoZWlnaHQ6MS41ZW07dmVydGljYWwtYWxpZ246bWlkZGxlO2NvbnRlbnQ6XFxcIlxcXCI7YmFja2dyb3VuZDpuby1yZXBlYXQgY2VudGVyIGNlbnRlcjtiYWNrZ3JvdW5kLXNpemU6MTAwJSAxMDAlfUBtZWRpYSAobWF4LXdpZHRoOiA1NzUuOThweCl7Lm5hdmJhci1leHBhbmQtc20+LmNvbnRhaW5lciwubmF2YmFyLWV4cGFuZC1zbT4uY29udGFpbmVyLWZsdWlkLC5uYXZiYXItZXhwYW5kLXNtPi5jb250YWluZXItc20sLm5hdmJhci1leHBhbmQtc20+LmNvbnRhaW5lci1tZCwubmF2YmFyLWV4cGFuZC1zbT4uY29udGFpbmVyLWxnLC5uYXZiYXItZXhwYW5kLXNtPi5jb250YWluZXIteGx7cGFkZGluZy1yaWdodDowO3BhZGRpbmctbGVmdDowfX1AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpey5uYXZiYXItZXhwYW5kLXNtey1tcy1mbGV4LWZsb3c6cm93IG5vd3JhcDtmbGV4LWZsb3c6cm93IG5vd3JhcDstbXMtZmxleC1wYWNrOnN0YXJ0O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fS5uYXZiYXItZXhwYW5kLXNtIC5uYXZiYXItbmF2ey1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93fS5uYXZiYXItZXhwYW5kLXNtIC5uYXZiYXItbmF2IC5kcm9wZG93bi1tZW51e3Bvc2l0aW9uOmFic29sdXRlfS5uYXZiYXItZXhwYW5kLXNtIC5uYXZiYXItbmF2IC5uYXYtbGlua3twYWRkaW5nLXJpZ2h0OjAuNXJlbTtwYWRkaW5nLWxlZnQ6MC41cmVtfS5uYXZiYXItZXhwYW5kLXNtPi5jb250YWluZXIsLm5hdmJhci1leHBhbmQtc20+LmNvbnRhaW5lci1mbHVpZCwubmF2YmFyLWV4cGFuZC1zbT4uY29udGFpbmVyLXNtLC5uYXZiYXItZXhwYW5kLXNtPi5jb250YWluZXItbWQsLm5hdmJhci1leHBhbmQtc20+LmNvbnRhaW5lci1sZywubmF2YmFyLWV4cGFuZC1zbT4uY29udGFpbmVyLXhsey1tcy1mbGV4LXdyYXA6bm93cmFwO2ZsZXgtd3JhcDpub3dyYXB9Lm5hdmJhci1leHBhbmQtc20gLm5hdmJhci1jb2xsYXBzZXtkaXNwbGF5Oi1tcy1mbGV4Ym94ICFpbXBvcnRhbnQ7ZGlzcGxheTpmbGV4ICFpbXBvcnRhbnQ7LW1zLWZsZXgtcHJlZmVycmVkLXNpemU6YXV0bztmbGV4LWJhc2lzOmF1dG99Lm5hdmJhci1leHBhbmQtc20gLm5hdmJhci10b2dnbGVye2Rpc3BsYXk6bm9uZX19QG1lZGlhIChtYXgtd2lkdGg6IDc2Ny45OHB4KXsubmF2YmFyLWV4cGFuZC1tZD4uY29udGFpbmVyLC5uYXZiYXItZXhwYW5kLW1kPi5jb250YWluZXItZmx1aWQsLm5hdmJhci1leHBhbmQtbWQ+LmNvbnRhaW5lci1zbSwubmF2YmFyLWV4cGFuZC1tZD4uY29udGFpbmVyLW1kLC5uYXZiYXItZXhwYW5kLW1kPi5jb250YWluZXItbGcsLm5hdmJhci1leHBhbmQtbWQ+LmNvbnRhaW5lci14bHtwYWRkaW5nLXJpZ2h0OjA7cGFkZGluZy1sZWZ0OjB9fUBtZWRpYSAobWluLXdpZHRoOiA3NjhweCl7Lm5hdmJhci1leHBhbmQtbWR7LW1zLWZsZXgtZmxvdzpyb3cgbm93cmFwO2ZsZXgtZmxvdzpyb3cgbm93cmFwOy1tcy1mbGV4LXBhY2s6c3RhcnQ7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnR9Lm5hdmJhci1leHBhbmQtbWQgLm5hdmJhci1uYXZ7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3d9Lm5hdmJhci1leHBhbmQtbWQgLm5hdmJhci1uYXYgLmRyb3Bkb3duLW1lbnV7cG9zaXRpb246YWJzb2x1dGV9Lm5hdmJhci1leHBhbmQtbWQgLm5hdmJhci1uYXYgLm5hdi1saW5re3BhZGRpbmctcmlnaHQ6MC41cmVtO3BhZGRpbmctbGVmdDowLjVyZW19Lm5hdmJhci1leHBhbmQtbWQ+LmNvbnRhaW5lciwubmF2YmFyLWV4cGFuZC1tZD4uY29udGFpbmVyLWZsdWlkLC5uYXZiYXItZXhwYW5kLW1kPi5jb250YWluZXItc20sLm5hdmJhci1leHBhbmQtbWQ+LmNvbnRhaW5lci1tZCwubmF2YmFyLWV4cGFuZC1tZD4uY29udGFpbmVyLWxnLC5uYXZiYXItZXhwYW5kLW1kPi5jb250YWluZXIteGx7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcH0ubmF2YmFyLWV4cGFuZC1tZCAubmF2YmFyLWNvbGxhcHNle2Rpc3BsYXk6LW1zLWZsZXhib3ggIWltcG9ydGFudDtkaXNwbGF5OmZsZXggIWltcG9ydGFudDstbXMtZmxleC1wcmVmZXJyZWQtc2l6ZTphdXRvO2ZsZXgtYmFzaXM6YXV0b30ubmF2YmFyLWV4cGFuZC1tZCAubmF2YmFyLXRvZ2dsZXJ7ZGlzcGxheTpub25lfX1AbWVkaWEgKG1heC13aWR0aDogOTkxLjk4cHgpey5uYXZiYXItZXhwYW5kLWxnPi5jb250YWluZXIsLm5hdmJhci1leHBhbmQtbGc+LmNvbnRhaW5lci1mbHVpZCwubmF2YmFyLWV4cGFuZC1sZz4uY29udGFpbmVyLXNtLC5uYXZiYXItZXhwYW5kLWxnPi5jb250YWluZXItbWQsLm5hdmJhci1leHBhbmQtbGc+LmNvbnRhaW5lci1sZywubmF2YmFyLWV4cGFuZC1sZz4uY29udGFpbmVyLXhse3BhZGRpbmctcmlnaHQ6MDtwYWRkaW5nLWxlZnQ6MH19QG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KXsubmF2YmFyLWV4cGFuZC1sZ3stbXMtZmxleC1mbG93OnJvdyBub3dyYXA7ZmxleC1mbG93OnJvdyBub3dyYXA7LW1zLWZsZXgtcGFjazpzdGFydDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydH0ubmF2YmFyLWV4cGFuZC1sZyAubmF2YmFyLW5hdnstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvd30ubmF2YmFyLWV4cGFuZC1sZyAubmF2YmFyLW5hdiAuZHJvcGRvd24tbWVudXtwb3NpdGlvbjphYnNvbHV0ZX0ubmF2YmFyLWV4cGFuZC1sZyAubmF2YmFyLW5hdiAubmF2LWxpbmt7cGFkZGluZy1yaWdodDowLjVyZW07cGFkZGluZy1sZWZ0OjAuNXJlbX0ubmF2YmFyLWV4cGFuZC1sZz4uY29udGFpbmVyLC5uYXZiYXItZXhwYW5kLWxnPi5jb250YWluZXItZmx1aWQsLm5hdmJhci1leHBhbmQtbGc+LmNvbnRhaW5lci1zbSwubmF2YmFyLWV4cGFuZC1sZz4uY29udGFpbmVyLW1kLC5uYXZiYXItZXhwYW5kLWxnPi5jb250YWluZXItbGcsLm5hdmJhci1leHBhbmQtbGc+LmNvbnRhaW5lci14bHstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwfS5uYXZiYXItZXhwYW5kLWxnIC5uYXZiYXItY29sbGFwc2V7ZGlzcGxheTotbXMtZmxleGJveCAhaW1wb3J0YW50O2Rpc3BsYXk6ZmxleCAhaW1wb3J0YW50Oy1tcy1mbGV4LXByZWZlcnJlZC1zaXplOmF1dG87ZmxleC1iYXNpczphdXRvfS5uYXZiYXItZXhwYW5kLWxnIC5uYXZiYXItdG9nZ2xlcntkaXNwbGF5Om5vbmV9fUBtZWRpYSAobWF4LXdpZHRoOiAxMTk5Ljk4cHgpey5uYXZiYXItZXhwYW5kLXhsPi5jb250YWluZXIsLm5hdmJhci1leHBhbmQteGw+LmNvbnRhaW5lci1mbHVpZCwubmF2YmFyLWV4cGFuZC14bD4uY29udGFpbmVyLXNtLC5uYXZiYXItZXhwYW5kLXhsPi5jb250YWluZXItbWQsLm5hdmJhci1leHBhbmQteGw+LmNvbnRhaW5lci1sZywubmF2YmFyLWV4cGFuZC14bD4uY29udGFpbmVyLXhse3BhZGRpbmctcmlnaHQ6MDtwYWRkaW5nLWxlZnQ6MH19QG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCl7Lm5hdmJhci1leHBhbmQteGx7LW1zLWZsZXgtZmxvdzpyb3cgbm93cmFwO2ZsZXgtZmxvdzpyb3cgbm93cmFwOy1tcy1mbGV4LXBhY2s6c3RhcnQ7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnR9Lm5hdmJhci1leHBhbmQteGwgLm5hdmJhci1uYXZ7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3d9Lm5hdmJhci1leHBhbmQteGwgLm5hdmJhci1uYXYgLmRyb3Bkb3duLW1lbnV7cG9zaXRpb246YWJzb2x1dGV9Lm5hdmJhci1leHBhbmQteGwgLm5hdmJhci1uYXYgLm5hdi1saW5re3BhZGRpbmctcmlnaHQ6MC41cmVtO3BhZGRpbmctbGVmdDowLjVyZW19Lm5hdmJhci1leHBhbmQteGw+LmNvbnRhaW5lciwubmF2YmFyLWV4cGFuZC14bD4uY29udGFpbmVyLWZsdWlkLC5uYXZiYXItZXhwYW5kLXhsPi5jb250YWluZXItc20sLm5hdmJhci1leHBhbmQteGw+LmNvbnRhaW5lci1tZCwubmF2YmFyLWV4cGFuZC14bD4uY29udGFpbmVyLWxnLC5uYXZiYXItZXhwYW5kLXhsPi5jb250YWluZXIteGx7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcH0ubmF2YmFyLWV4cGFuZC14bCAubmF2YmFyLWNvbGxhcHNle2Rpc3BsYXk6LW1zLWZsZXhib3ggIWltcG9ydGFudDtkaXNwbGF5OmZsZXggIWltcG9ydGFudDstbXMtZmxleC1wcmVmZXJyZWQtc2l6ZTphdXRvO2ZsZXgtYmFzaXM6YXV0b30ubmF2YmFyLWV4cGFuZC14bCAubmF2YmFyLXRvZ2dsZXJ7ZGlzcGxheTpub25lfX0ubmF2YmFyLWV4cGFuZHstbXMtZmxleC1mbG93OnJvdyBub3dyYXA7ZmxleC1mbG93OnJvdyBub3dyYXA7LW1zLWZsZXgtcGFjazpzdGFydDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydH0ubmF2YmFyLWV4cGFuZD4uY29udGFpbmVyLC5uYXZiYXItZXhwYW5kPi5jb250YWluZXItZmx1aWQsLm5hdmJhci1leHBhbmQ+LmNvbnRhaW5lci1zbSwubmF2YmFyLWV4cGFuZD4uY29udGFpbmVyLW1kLC5uYXZiYXItZXhwYW5kPi5jb250YWluZXItbGcsLm5hdmJhci1leHBhbmQ+LmNvbnRhaW5lci14bHtwYWRkaW5nLXJpZ2h0OjA7cGFkZGluZy1sZWZ0OjB9Lm5hdmJhci1leHBhbmQgLm5hdmJhci1uYXZ7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3d9Lm5hdmJhci1leHBhbmQgLm5hdmJhci1uYXYgLmRyb3Bkb3duLW1lbnV7cG9zaXRpb246YWJzb2x1dGV9Lm5hdmJhci1leHBhbmQgLm5hdmJhci1uYXYgLm5hdi1saW5re3BhZGRpbmctcmlnaHQ6MC41cmVtO3BhZGRpbmctbGVmdDowLjVyZW19Lm5hdmJhci1leHBhbmQ+LmNvbnRhaW5lciwubmF2YmFyLWV4cGFuZD4uY29udGFpbmVyLWZsdWlkLC5uYXZiYXItZXhwYW5kPi5jb250YWluZXItc20sLm5hdmJhci1leHBhbmQ+LmNvbnRhaW5lci1tZCwubmF2YmFyLWV4cGFuZD4uY29udGFpbmVyLWxnLC5uYXZiYXItZXhwYW5kPi5jb250YWluZXIteGx7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcH0ubmF2YmFyLWV4cGFuZCAubmF2YmFyLWNvbGxhcHNle2Rpc3BsYXk6LW1zLWZsZXhib3ggIWltcG9ydGFudDtkaXNwbGF5OmZsZXggIWltcG9ydGFudDstbXMtZmxleC1wcmVmZXJyZWQtc2l6ZTphdXRvO2ZsZXgtYmFzaXM6YXV0b30ubmF2YmFyLWV4cGFuZCAubmF2YmFyLXRvZ2dsZXJ7ZGlzcGxheTpub25lfS5uYXZiYXItbGlnaHQgLm5hdmJhci1icmFuZHtjb2xvcjpyZ2JhKDAsMCwwLDAuOSl9Lm5hdmJhci1saWdodCAubmF2YmFyLWJyYW5kOmhvdmVyLC5uYXZiYXItbGlnaHQgLm5hdmJhci1icmFuZDpmb2N1c3tjb2xvcjpyZ2JhKDAsMCwwLDAuOSl9Lm5hdmJhci1saWdodCAubmF2YmFyLW5hdiAubmF2LWxpbmt7Y29sb3I6cmdiYSgwLDAsMCwwLjUpfS5uYXZiYXItbGlnaHQgLm5hdmJhci1uYXYgLm5hdi1saW5rOmhvdmVyLC5uYXZiYXItbGlnaHQgLm5hdmJhci1uYXYgLm5hdi1saW5rOmZvY3Vze2NvbG9yOnJnYmEoMCwwLDAsMC43KX0ubmF2YmFyLWxpZ2h0IC5uYXZiYXItbmF2IC5uYXYtbGluay5kaXNhYmxlZHtjb2xvcjpyZ2JhKDAsMCwwLDAuMyl9Lm5hdmJhci1saWdodCAubmF2YmFyLW5hdiAuc2hvdz4ubmF2LWxpbmssLm5hdmJhci1saWdodCAubmF2YmFyLW5hdiAuYWN0aXZlPi5uYXYtbGluaywubmF2YmFyLWxpZ2h0IC5uYXZiYXItbmF2IC5uYXYtbGluay5zaG93LC5uYXZiYXItbGlnaHQgLm5hdmJhci1uYXYgLm5hdi1saW5rLmFjdGl2ZXtjb2xvcjpyZ2JhKDAsMCwwLDAuOSl9Lm5hdmJhci1saWdodCAubmF2YmFyLXRvZ2dsZXJ7Y29sb3I6cmdiYSgwLDAsMCwwLjUpO2JvcmRlci1jb2xvcjpyZ2JhKDAsMCwwLDAuMSl9Lm5hdmJhci1saWdodCAubmF2YmFyLXRvZ2dsZXItaWNvbntiYWNrZ3JvdW5kLWltYWdlOnVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSczMCcgaGVpZ2h0PSczMCcgdmlld0JveD0nMCAwIDMwIDMwJyUzZSUzY3BhdGggc3Ryb2tlPSdyZ2JhKDAsIDAsIDAsIDAuNSknIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLW1pdGVybGltaXQ9JzEwJyBzdHJva2Utd2lkdGg9JzInIGQ9J000IDdoMjJNNCAxNWgyMk00IDIzaDIyJy8lM2UlM2Mvc3ZnJTNlXFxcIil9Lm5hdmJhci1saWdodCAubmF2YmFyLXRleHR7Y29sb3I6cmdiYSgwLDAsMCwwLjUpfS5uYXZiYXItbGlnaHQgLm5hdmJhci10ZXh0IGF7Y29sb3I6cmdiYSgwLDAsMCwwLjkpfS5uYXZiYXItbGlnaHQgLm5hdmJhci10ZXh0IGE6aG92ZXIsLm5hdmJhci1saWdodCAubmF2YmFyLXRleHQgYTpmb2N1c3tjb2xvcjpyZ2JhKDAsMCwwLDAuOSl9Lm5hdmJhci1kYXJrIC5uYXZiYXItYnJhbmR7Y29sb3I6I2ZmZn0ubmF2YmFyLWRhcmsgLm5hdmJhci1icmFuZDpob3ZlciwubmF2YmFyLWRhcmsgLm5hdmJhci1icmFuZDpmb2N1c3tjb2xvcjojZmZmfS5uYXZiYXItZGFyayAubmF2YmFyLW5hdiAubmF2LWxpbmt7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwwLjUpfS5uYXZiYXItZGFyayAubmF2YmFyLW5hdiAubmF2LWxpbms6aG92ZXIsLm5hdmJhci1kYXJrIC5uYXZiYXItbmF2IC5uYXYtbGluazpmb2N1c3tjb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDAuNzUpfS5uYXZiYXItZGFyayAubmF2YmFyLW5hdiAubmF2LWxpbmsuZGlzYWJsZWR7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwwLjI1KX0ubmF2YmFyLWRhcmsgLm5hdmJhci1uYXYgLnNob3c+Lm5hdi1saW5rLC5uYXZiYXItZGFyayAubmF2YmFyLW5hdiAuYWN0aXZlPi5uYXYtbGluaywubmF2YmFyLWRhcmsgLm5hdmJhci1uYXYgLm5hdi1saW5rLnNob3csLm5hdmJhci1kYXJrIC5uYXZiYXItbmF2IC5uYXYtbGluay5hY3RpdmV7Y29sb3I6I2ZmZn0ubmF2YmFyLWRhcmsgLm5hdmJhci10b2dnbGVye2NvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMC41KTtib3JkZXItY29sb3I6cmdiYSgyNTUsMjU1LDI1NSwwLjEpfS5uYXZiYXItZGFyayAubmF2YmFyLXRvZ2dsZXItaWNvbntiYWNrZ3JvdW5kLWltYWdlOnVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSczMCcgaGVpZ2h0PSczMCcgdmlld0JveD0nMCAwIDMwIDMwJyUzZSUzY3BhdGggc3Ryb2tlPSdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSknIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLW1pdGVybGltaXQ9JzEwJyBzdHJva2Utd2lkdGg9JzInIGQ9J000IDdoMjJNNCAxNWgyMk00IDIzaDIyJy8lM2UlM2Mvc3ZnJTNlXFxcIil9Lm5hdmJhci1kYXJrIC5uYXZiYXItdGV4dHtjb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDAuNSl9Lm5hdmJhci1kYXJrIC5uYXZiYXItdGV4dCBhe2NvbG9yOiNmZmZ9Lm5hdmJhci1kYXJrIC5uYXZiYXItdGV4dCBhOmhvdmVyLC5uYXZiYXItZGFyayAubmF2YmFyLXRleHQgYTpmb2N1c3tjb2xvcjojZmZmfS5jYXJke3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uO21pbi13aWR0aDowO3dvcmQtd3JhcDpicmVhay13b3JkO2JhY2tncm91bmQtY29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNsaXA6Ym9yZGVyLWJveDtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4xMjUpO2JvcmRlci1yYWRpdXM6MC4yNXJlbX0uY2FyZD5ocnttYXJnaW4tcmlnaHQ6MDttYXJnaW4tbGVmdDowfS5jYXJkPi5saXN0LWdyb3VwOmZpcnN0LWNoaWxkIC5saXN0LWdyb3VwLWl0ZW06Zmlyc3QtY2hpbGR7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowLjI1cmVtO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjAuMjVyZW19LmNhcmQ+Lmxpc3QtZ3JvdXA6bGFzdC1jaGlsZCAubGlzdC1ncm91cC1pdGVtOmxhc3QtY2hpbGR7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MC4yNXJlbTtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjAuMjVyZW19LmNhcmQtYm9keXstbXMtZmxleDoxIDEgYXV0bztmbGV4OjEgMSBhdXRvO21pbi1oZWlnaHQ6MXB4O3BhZGRpbmc6MS4yNXJlbX0uY2FyZC10aXRsZXttYXJnaW4tYm90dG9tOjAuNzVyZW19LmNhcmQtc3VidGl0bGV7bWFyZ2luLXRvcDotMC4zNzVyZW07bWFyZ2luLWJvdHRvbTowfS5jYXJkLXRleHQ6bGFzdC1jaGlsZHttYXJnaW4tYm90dG9tOjB9LmNhcmQtbGluazpob3Zlcnt0ZXh0LWRlY29yYXRpb246bm9uZX0uY2FyZC1saW5rKy5jYXJkLWxpbmt7bWFyZ2luLWxlZnQ6MS4yNXJlbX0uY2FyZC1oZWFkZXJ7cGFkZGluZzowLjc1cmVtIDEuMjVyZW07bWFyZ2luLWJvdHRvbTowO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwwLjAzKTtib3JkZXItYm90dG9tOjFweCBzb2xpZCByZ2JhKDAsMCwwLDAuMTI1KX0uY2FyZC1oZWFkZXI6Zmlyc3QtY2hpbGR7Ym9yZGVyLXJhZGl1czpjYWxjKDAuMjVyZW0gLSAxcHgpIGNhbGMoMC4yNXJlbSAtIDFweCkgMCAwfS5jYXJkLWhlYWRlcisubGlzdC1ncm91cCAubGlzdC1ncm91cC1pdGVtOmZpcnN0LWNoaWxke2JvcmRlci10b3A6MH0uY2FyZC1mb290ZXJ7cGFkZGluZzowLjc1cmVtIDEuMjVyZW07YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLDAuMDMpO2JvcmRlci10b3A6MXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4xMjUpfS5jYXJkLWZvb3RlcjpsYXN0LWNoaWxke2JvcmRlci1yYWRpdXM6MCAwIGNhbGMoMC4yNXJlbSAtIDFweCkgY2FsYygwLjI1cmVtIC0gMXB4KX0uY2FyZC1oZWFkZXItdGFic3ttYXJnaW4tcmlnaHQ6LTAuNjI1cmVtO21hcmdpbi1ib3R0b206LTAuNzVyZW07bWFyZ2luLWxlZnQ6LTAuNjI1cmVtO2JvcmRlci1ib3R0b206MH0uY2FyZC1oZWFkZXItcGlsbHN7bWFyZ2luLXJpZ2h0Oi0wLjYyNXJlbTttYXJnaW4tbGVmdDotMC42MjVyZW19LmNhcmQtaW1nLW92ZXJsYXl7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7cmlnaHQ6MDtib3R0b206MDtsZWZ0OjA7cGFkZGluZzoxLjI1cmVtfS5jYXJkLWltZywuY2FyZC1pbWctdG9wLC5jYXJkLWltZy1ib3R0b217LW1zLWZsZXgtbmVnYXRpdmU6MDtmbGV4LXNocmluazowO3dpZHRoOjEwMCV9LmNhcmQtaW1nLC5jYXJkLWltZy10b3B7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czpjYWxjKDAuMjVyZW0gLSAxcHgpO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOmNhbGMoMC4yNXJlbSAtIDFweCl9LmNhcmQtaW1nLC5jYXJkLWltZy1ib3R0b217Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6Y2FsYygwLjI1cmVtIC0gMXB4KTtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOmNhbGMoMC4yNXJlbSAtIDFweCl9LmNhcmQtZGVjayAuY2FyZHttYXJnaW4tYm90dG9tOjE1cHh9QG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KXsuY2FyZC1kZWNre2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWZsb3c6cm93IHdyYXA7ZmxleC1mbG93OnJvdyB3cmFwO21hcmdpbi1yaWdodDotMTVweDttYXJnaW4tbGVmdDotMTVweH0uY2FyZC1kZWNrIC5jYXJkey1tcy1mbGV4OjEgMCAwJTtmbGV4OjEgMCAwJTttYXJnaW4tcmlnaHQ6MTVweDttYXJnaW4tYm90dG9tOjA7bWFyZ2luLWxlZnQ6MTVweH19LmNhcmQtZ3JvdXA+LmNhcmR7bWFyZ2luLWJvdHRvbToxNXB4fUBtZWRpYSAobWluLXdpZHRoOiA1NzZweCl7LmNhcmQtZ3JvdXB7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtZmxvdzpyb3cgd3JhcDtmbGV4LWZsb3c6cm93IHdyYXB9LmNhcmQtZ3JvdXA+LmNhcmR7LW1zLWZsZXg6MSAwIDAlO2ZsZXg6MSAwIDAlO21hcmdpbi1ib3R0b206MH0uY2FyZC1ncm91cD4uY2FyZCsuY2FyZHttYXJnaW4tbGVmdDowO2JvcmRlci1sZWZ0OjB9LmNhcmQtZ3JvdXA+LmNhcmQ6bm90KDpsYXN0LWNoaWxkKXtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowO2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjB9LmNhcmQtZ3JvdXA+LmNhcmQ6bm90KDpsYXN0LWNoaWxkKSAuY2FyZC1pbWctdG9wLC5jYXJkLWdyb3VwPi5jYXJkOm5vdCg6bGFzdC1jaGlsZCkgLmNhcmQtaGVhZGVye2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjB9LmNhcmQtZ3JvdXA+LmNhcmQ6bm90KDpsYXN0LWNoaWxkKSAuY2FyZC1pbWctYm90dG9tLC5jYXJkLWdyb3VwPi5jYXJkOm5vdCg6bGFzdC1jaGlsZCkgLmNhcmQtZm9vdGVye2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjB9LmNhcmQtZ3JvdXA+LmNhcmQ6bm90KDpmaXJzdC1jaGlsZCl7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MH0uY2FyZC1ncm91cD4uY2FyZDpub3QoOmZpcnN0LWNoaWxkKSAuY2FyZC1pbWctdG9wLC5jYXJkLWdyb3VwPi5jYXJkOm5vdCg6Zmlyc3QtY2hpbGQpIC5jYXJkLWhlYWRlcntib3JkZXItdG9wLWxlZnQtcmFkaXVzOjB9LmNhcmQtZ3JvdXA+LmNhcmQ6bm90KDpmaXJzdC1jaGlsZCkgLmNhcmQtaW1nLWJvdHRvbSwuY2FyZC1ncm91cD4uY2FyZDpub3QoOmZpcnN0LWNoaWxkKSAuY2FyZC1mb290ZXJ7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowfX0uY2FyZC1jb2x1bW5zIC5jYXJke21hcmdpbi1ib3R0b206MC43NXJlbX1AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpey5jYXJkLWNvbHVtbnN7LXdlYmtpdC1jb2x1bW4tY291bnQ6MzstbW96LWNvbHVtbi1jb3VudDozO2NvbHVtbi1jb3VudDozOy13ZWJraXQtY29sdW1uLWdhcDoxLjI1cmVtOy1tb3otY29sdW1uLWdhcDoxLjI1cmVtO2NvbHVtbi1nYXA6MS4yNXJlbTtvcnBoYW5zOjE7d2lkb3dzOjF9LmNhcmQtY29sdW1ucyAuY2FyZHtkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDoxMDAlfX0uYWNjb3JkaW9uPi5jYXJke292ZXJmbG93OmhpZGRlbn0uYWNjb3JkaW9uPi5jYXJkOm5vdCg6bGFzdC1vZi10eXBlKXtib3JkZXItYm90dG9tOjA7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MDtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjB9LmFjY29yZGlvbj4uY2FyZDpub3QoOmZpcnN0LW9mLXR5cGUpe2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowfS5hY2NvcmRpb24+LmNhcmQ+LmNhcmQtaGVhZGVye2JvcmRlci1yYWRpdXM6MDttYXJnaW4tYm90dG9tOi0xcHh9LmJyZWFkY3J1bWJ7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtd3JhcDp3cmFwO2ZsZXgtd3JhcDp3cmFwO3BhZGRpbmc6MC43NXJlbSAxcmVtO21hcmdpbi1ib3R0b206MXJlbTtsaXN0LXN0eWxlOm5vbmU7YmFja2dyb3VuZC1jb2xvcjojZTllY2VmO2JvcmRlci1yYWRpdXM6MC4yNXJlbX0uYnJlYWRjcnVtYi1pdGVtKy5icmVhZGNydW1iLWl0ZW17cGFkZGluZy1sZWZ0OjAuNXJlbX0uYnJlYWRjcnVtYi1pdGVtKy5icmVhZGNydW1iLWl0ZW06OmJlZm9yZXtkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nLXJpZ2h0OjAuNXJlbTtjb2xvcjojNmM3NTdkO2NvbnRlbnQ6XFxcIi9cXFwifS5icmVhZGNydW1iLWl0ZW0rLmJyZWFkY3J1bWItaXRlbTpob3Zlcjo6YmVmb3Jle3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmV9LmJyZWFkY3J1bWItaXRlbSsuYnJlYWRjcnVtYi1pdGVtOmhvdmVyOjpiZWZvcmV7dGV4dC1kZWNvcmF0aW9uOm5vbmV9LmJyZWFkY3J1bWItaXRlbS5hY3RpdmV7Y29sb3I6IzZjNzU3ZH0ucGFnaW5hdGlvbntkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDtwYWRkaW5nLWxlZnQ6MDtsaXN0LXN0eWxlOm5vbmU7Ym9yZGVyLXJhZGl1czowLjI1cmVtfS5wYWdlLWxpbmt7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpibG9jaztwYWRkaW5nOjAuNXJlbSAwLjc1cmVtO21hcmdpbi1sZWZ0Oi0xcHg7bGluZS1oZWlnaHQ6MS4yNTtjb2xvcjojMDA3YmZmO2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXI6MXB4IHNvbGlkICNkZWUyZTZ9LnBhZ2UtbGluazpob3Zlcnt6LWluZGV4OjI7Y29sb3I6IzAwNTZiMzt0ZXh0LWRlY29yYXRpb246bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOiNlOWVjZWY7Ym9yZGVyLWNvbG9yOiNkZWUyZTZ9LnBhZ2UtbGluazpmb2N1c3t6LWluZGV4OjM7b3V0bGluZTowO2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoMCwxMjMsMjU1LDAuMjUpfS5wYWdlLWl0ZW06Zmlyc3QtY2hpbGQgLnBhZ2UtbGlua3ttYXJnaW4tbGVmdDowO2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MC4yNXJlbTtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjAuMjVyZW19LnBhZ2UtaXRlbTpsYXN0LWNoaWxkIC5wYWdlLWxpbmt7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MC4yNXJlbTtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czowLjI1cmVtfS5wYWdlLWl0ZW0uYWN0aXZlIC5wYWdlLWxpbmt7ei1pbmRleDozO2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMDA3YmZmO2JvcmRlci1jb2xvcjojMDA3YmZmfS5wYWdlLWl0ZW0uZGlzYWJsZWQgLnBhZ2UtbGlua3tjb2xvcjojNmM3NTdkO3BvaW50ZXItZXZlbnRzOm5vbmU7Y3Vyc29yOmF1dG87YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlci1jb2xvcjojZGVlMmU2fS5wYWdpbmF0aW9uLWxnIC5wYWdlLWxpbmt7cGFkZGluZzowLjc1cmVtIDEuNXJlbTtmb250LXNpemU6MS4yNXJlbTtsaW5lLWhlaWdodDoxLjV9LnBhZ2luYXRpb24tbGcgLnBhZ2UtaXRlbTpmaXJzdC1jaGlsZCAucGFnZS1saW5re2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MC4zcmVtO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MC4zcmVtfS5wYWdpbmF0aW9uLWxnIC5wYWdlLWl0ZW06bGFzdC1jaGlsZCAucGFnZS1saW5re2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjAuM3JlbTtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czowLjNyZW19LnBhZ2luYXRpb24tc20gLnBhZ2UtbGlua3twYWRkaW5nOjAuMjVyZW0gMC41cmVtO2ZvbnQtc2l6ZTowLjg3NXJlbTtsaW5lLWhlaWdodDoxLjV9LnBhZ2luYXRpb24tc20gLnBhZ2UtaXRlbTpmaXJzdC1jaGlsZCAucGFnZS1saW5re2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MC4ycmVtO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MC4ycmVtfS5wYWdpbmF0aW9uLXNtIC5wYWdlLWl0ZW06bGFzdC1jaGlsZCAucGFnZS1saW5re2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjAuMnJlbTtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czowLjJyZW19LmJhZGdle2Rpc3BsYXk6aW5saW5lLWJsb2NrO3BhZGRpbmc6MC4yNWVtIDAuNGVtO2ZvbnQtc2l6ZTo3NSU7Zm9udC13ZWlnaHQ6NzAwO2xpbmUtaGVpZ2h0OjE7dGV4dC1hbGlnbjpjZW50ZXI7d2hpdGUtc3BhY2U6bm93cmFwO3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lO2JvcmRlci1yYWRpdXM6MC4yNXJlbTt0cmFuc2l0aW9uOmNvbG9yIDAuMTVzIGVhc2UtaW4tb3V0LCBiYWNrZ3JvdW5kLWNvbG9yIDAuMTVzIGVhc2UtaW4tb3V0LCBib3JkZXItY29sb3IgMC4xNXMgZWFzZS1pbi1vdXQsIGJveC1zaGFkb3cgMC4xNXMgZWFzZS1pbi1vdXR9QG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiByZWR1Y2Upey5iYWRnZXt0cmFuc2l0aW9uOm5vbmV9fWEuYmFkZ2U6aG92ZXIsYS5iYWRnZTpmb2N1c3t0ZXh0LWRlY29yYXRpb246bm9uZX0uYmFkZ2U6ZW1wdHl7ZGlzcGxheTpub25lfS5idG4gLmJhZGdle3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDotMXB4fS5iYWRnZS1waWxse3BhZGRpbmctcmlnaHQ6MC42ZW07cGFkZGluZy1sZWZ0OjAuNmVtO2JvcmRlci1yYWRpdXM6MTByZW19LmJhZGdlLXByaW1hcnl7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMwMDdiZmZ9YS5iYWRnZS1wcmltYXJ5OmhvdmVyLGEuYmFkZ2UtcHJpbWFyeTpmb2N1c3tjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzAwNjJjY31hLmJhZGdlLXByaW1hcnk6Zm9jdXMsYS5iYWRnZS1wcmltYXJ5LmZvY3Vze291dGxpbmU6MDtib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDAsMTIzLDI1NSwwLjUpfS5iYWRnZS1zZWNvbmRhcnl7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiM2Yzc1N2R9YS5iYWRnZS1zZWNvbmRhcnk6aG92ZXIsYS5iYWRnZS1zZWNvbmRhcnk6Zm9jdXN7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiM1NDViNjJ9YS5iYWRnZS1zZWNvbmRhcnk6Zm9jdXMsYS5iYWRnZS1zZWNvbmRhcnkuZm9jdXN7b3V0bGluZTowO2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoMTA4LDExNywxMjUsMC41KX0uYmFkZ2Utc3VjY2Vzc3tjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzI4YTc0NX1hLmJhZGdlLXN1Y2Nlc3M6aG92ZXIsYS5iYWRnZS1zdWNjZXNzOmZvY3Vze2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMWU3ZTM0fWEuYmFkZ2Utc3VjY2Vzczpmb2N1cyxhLmJhZGdlLXN1Y2Nlc3MuZm9jdXN7b3V0bGluZTowO2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoNDAsMTY3LDY5LDAuNSl9LmJhZGdlLWluZm97Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMxN2EyYjh9YS5iYWRnZS1pbmZvOmhvdmVyLGEuYmFkZ2UtaW5mbzpmb2N1c3tjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzExN2E4Yn1hLmJhZGdlLWluZm86Zm9jdXMsYS5iYWRnZS1pbmZvLmZvY3Vze291dGxpbmU6MDtib3gtc2hhZG93OjAgMCAwIDAuMnJlbSByZ2JhKDIzLDE2MiwxODQsMC41KX0uYmFkZ2Utd2FybmluZ3tjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6I2ZmYzEwN31hLmJhZGdlLXdhcm5pbmc6aG92ZXIsYS5iYWRnZS13YXJuaW5nOmZvY3Vze2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZDM5ZTAwfWEuYmFkZ2Utd2FybmluZzpmb2N1cyxhLmJhZGdlLXdhcm5pbmcuZm9jdXN7b3V0bGluZTowO2JveC1zaGFkb3c6MCAwIDAgMC4ycmVtIHJnYmEoMjU1LDE5Myw3LDAuNSl9LmJhZGdlLWRhbmdlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6I2RjMzU0NX1hLmJhZGdlLWRhbmdlcjpob3ZlcixhLmJhZGdlLWRhbmdlcjpmb2N1c3tjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6I2JkMjEzMH1hLmJhZGdlLWRhbmdlcjpmb2N1cyxhLmJhZGdlLWRhbmdlci5mb2N1c3tvdXRsaW5lOjA7Ym94LXNoYWRvdzowIDAgMCAwLjJyZW0gcmdiYSgyMjAsNTMsNjksMC41KX0uYmFkZ2UtbGlnaHR7Y29sb3I6IzIxMjUyOTtiYWNrZ3JvdW5kLWNvbG9yOiNmOGY5ZmF9YS5iYWRnZS1saWdodDpob3ZlcixhLmJhZGdlLWxpZ2h0OmZvY3Vze2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZGFlMGU1fWEuYmFkZ2UtbGlnaHQ6Zm9jdXMsYS5iYWRnZS1saWdodC5mb2N1c3tvdXRsaW5lOjA7Ym94LXNoYWRvdzowIDAgMCAwLjJyZW0gcmdiYSgyNDgsMjQ5LDI1MCwwLjUpfS5iYWRnZS1kYXJre2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMzQzYTQwfWEuYmFkZ2UtZGFyazpob3ZlcixhLmJhZGdlLWRhcms6Zm9jdXN7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMxZDIxMjR9YS5iYWRnZS1kYXJrOmZvY3VzLGEuYmFkZ2UtZGFyay5mb2N1c3tvdXRsaW5lOjA7Ym94LXNoYWRvdzowIDAgMCAwLjJyZW0gcmdiYSg1Miw1OCw2NCwwLjUpfS5qdW1ib3Ryb257cGFkZGluZzoycmVtIDFyZW07bWFyZ2luLWJvdHRvbToycmVtO2JhY2tncm91bmQtY29sb3I6I2U5ZWNlZjtib3JkZXItcmFkaXVzOjAuM3JlbX1AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpey5qdW1ib3Ryb257cGFkZGluZzo0cmVtIDJyZW19fS5qdW1ib3Ryb24tZmx1aWR7cGFkZGluZy1yaWdodDowO3BhZGRpbmctbGVmdDowO2JvcmRlci1yYWRpdXM6MH0uYWxlcnR7cG9zaXRpb246cmVsYXRpdmU7cGFkZGluZzowLjc1cmVtIDEuMjVyZW07bWFyZ2luLWJvdHRvbToxcmVtO2JvcmRlcjoxcHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXJhZGl1czowLjI1cmVtfS5hbGVydC1oZWFkaW5ne2NvbG9yOmluaGVyaXR9LmFsZXJ0LWxpbmt7Zm9udC13ZWlnaHQ6NzAwfS5hbGVydC1kaXNtaXNzaWJsZXtwYWRkaW5nLXJpZ2h0OjRyZW19LmFsZXJ0LWRpc21pc3NpYmxlIC5jbG9zZXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtyaWdodDowO3BhZGRpbmc6MC43NXJlbSAxLjI1cmVtO2NvbG9yOmluaGVyaXR9LmFsZXJ0LXByaW1hcnl7Y29sb3I6IzAwNDA4NTtiYWNrZ3JvdW5kLWNvbG9yOiNjY2U1ZmY7Ym9yZGVyLWNvbG9yOiNiOGRhZmZ9LmFsZXJ0LXByaW1hcnkgaHJ7Ym9yZGVyLXRvcC1jb2xvcjojOWZjZGZmfS5hbGVydC1wcmltYXJ5IC5hbGVydC1saW5re2NvbG9yOiMwMDI3NTJ9LmFsZXJ0LXNlY29uZGFyeXtjb2xvcjojMzgzZDQxO2JhY2tncm91bmQtY29sb3I6I2UyZTNlNTtib3JkZXItY29sb3I6I2Q2ZDhkYn0uYWxlcnQtc2Vjb25kYXJ5IGhye2JvcmRlci10b3AtY29sb3I6I2M4Y2JjZn0uYWxlcnQtc2Vjb25kYXJ5IC5hbGVydC1saW5re2NvbG9yOiMyMDIzMjZ9LmFsZXJ0LXN1Y2Nlc3N7Y29sb3I6IzE1NTcyNDtiYWNrZ3JvdW5kLWNvbG9yOiNkNGVkZGE7Ym9yZGVyLWNvbG9yOiNjM2U2Y2J9LmFsZXJ0LXN1Y2Nlc3MgaHJ7Ym9yZGVyLXRvcC1jb2xvcjojYjFkZmJifS5hbGVydC1zdWNjZXNzIC5hbGVydC1saW5re2NvbG9yOiMwYjJlMTN9LmFsZXJ0LWluZm97Y29sb3I6IzBjNTQ2MDtiYWNrZ3JvdW5kLWNvbG9yOiNkMWVjZjE7Ym9yZGVyLWNvbG9yOiNiZWU1ZWJ9LmFsZXJ0LWluZm8gaHJ7Ym9yZGVyLXRvcC1jb2xvcjojYWJkZGU1fS5hbGVydC1pbmZvIC5hbGVydC1saW5re2NvbG9yOiMwNjJjMzN9LmFsZXJ0LXdhcm5pbmd7Y29sb3I6Izg1NjQwNDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmYzY2Q7Ym9yZGVyLWNvbG9yOiNmZmVlYmF9LmFsZXJ0LXdhcm5pbmcgaHJ7Ym9yZGVyLXRvcC1jb2xvcjojZmZlOGExfS5hbGVydC13YXJuaW5nIC5hbGVydC1saW5re2NvbG9yOiM1MzNmMDN9LmFsZXJ0LWRhbmdlcntjb2xvcjojNzIxYzI0O2JhY2tncm91bmQtY29sb3I6I2Y4ZDdkYTtib3JkZXItY29sb3I6I2Y1YzZjYn0uYWxlcnQtZGFuZ2VyIGhye2JvcmRlci10b3AtY29sb3I6I2YxYjBiN30uYWxlcnQtZGFuZ2VyIC5hbGVydC1saW5re2NvbG9yOiM0OTEyMTd9LmFsZXJ0LWxpZ2h0e2NvbG9yOiM4MTgxODI7YmFja2dyb3VuZC1jb2xvcjojZmVmZWZlO2JvcmRlci1jb2xvcjojZmRmZGZlfS5hbGVydC1saWdodCBocntib3JkZXItdG9wLWNvbG9yOiNlY2VjZjZ9LmFsZXJ0LWxpZ2h0IC5hbGVydC1saW5re2NvbG9yOiM2ODY4Njh9LmFsZXJ0LWRhcmt7Y29sb3I6IzFiMWUyMTtiYWNrZ3JvdW5kLWNvbG9yOiNkNmQ4ZDk7Ym9yZGVyLWNvbG9yOiNjNmM4Y2F9LmFsZXJ0LWRhcmsgaHJ7Ym9yZGVyLXRvcC1jb2xvcjojYjliYmJlfS5hbGVydC1kYXJrIC5hbGVydC1saW5re2NvbG9yOiMwNDA1MDV9QC13ZWJraXQta2V5ZnJhbWVzIHByb2dyZXNzLWJhci1zdHJpcGVze2Zyb217YmFja2dyb3VuZC1wb3NpdGlvbjoxcmVtIDB9dG97YmFja2dyb3VuZC1wb3NpdGlvbjowIDB9fUBrZXlmcmFtZXMgcHJvZ3Jlc3MtYmFyLXN0cmlwZXN7ZnJvbXtiYWNrZ3JvdW5kLXBvc2l0aW9uOjFyZW0gMH10b3tiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgMH19LnByb2dyZXNze2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4O2hlaWdodDoxcmVtO292ZXJmbG93OmhpZGRlbjtmb250LXNpemU6MC43NXJlbTtiYWNrZ3JvdW5kLWNvbG9yOiNlOWVjZWY7Ym9yZGVyLXJhZGl1czowLjI1cmVtfS5wcm9ncmVzcy1iYXJ7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjtvdmVyZmxvdzpoaWRkZW47Y29sb3I6I2ZmZjt0ZXh0LWFsaWduOmNlbnRlcjt3aGl0ZS1zcGFjZTpub3dyYXA7YmFja2dyb3VuZC1jb2xvcjojMDA3YmZmO3RyYW5zaXRpb246d2lkdGggMC42cyBlYXNlfUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKXsucHJvZ3Jlc3MtYmFye3RyYW5zaXRpb246bm9uZX19LnByb2dyZXNzLWJhci1zdHJpcGVke2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDI1NSwyNTUsMjU1LDAuMTUpIDI1JSwgdHJhbnNwYXJlbnQgMjUlLCB0cmFuc3BhcmVudCA1MCUsIHJnYmEoMjU1LDI1NSwyNTUsMC4xNSkgNTAlLCByZ2JhKDI1NSwyNTUsMjU1LDAuMTUpIDc1JSwgdHJhbnNwYXJlbnQgNzUlLCB0cmFuc3BhcmVudCk7YmFja2dyb3VuZC1zaXplOjFyZW0gMXJlbX0ucHJvZ3Jlc3MtYmFyLWFuaW1hdGVkey13ZWJraXQtYW5pbWF0aW9uOnByb2dyZXNzLWJhci1zdHJpcGVzIDFzIGxpbmVhciBpbmZpbml0ZTthbmltYXRpb246cHJvZ3Jlc3MtYmFyLXN0cmlwZXMgMXMgbGluZWFyIGluZmluaXRlfUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKXsucHJvZ3Jlc3MtYmFyLWFuaW1hdGVkey13ZWJraXQtYW5pbWF0aW9uOm5vbmU7YW5pbWF0aW9uOm5vbmV9fS5tZWRpYXtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1hbGlnbjpzdGFydDthbGlnbi1pdGVtczpmbGV4LXN0YXJ0fS5tZWRpYS1ib2R5ey1tcy1mbGV4OjE7ZmxleDoxfS5saXN0LWdyb3Vwe2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uO3BhZGRpbmctbGVmdDowO21hcmdpbi1ib3R0b206MH0ubGlzdC1ncm91cC1pdGVtLWFjdGlvbnt3aWR0aDoxMDAlO2NvbG9yOiM0OTUwNTc7dGV4dC1hbGlnbjppbmhlcml0fS5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmhvdmVyLC5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmZvY3Vze3otaW5kZXg6MTtjb2xvcjojNDk1MDU3O3RleHQtZGVjb3JhdGlvbjpub25lO2JhY2tncm91bmQtY29sb3I6I2Y4ZjlmYX0ubGlzdC1ncm91cC1pdGVtLWFjdGlvbjphY3RpdmV7Y29sb3I6IzIxMjUyOTtiYWNrZ3JvdW5kLWNvbG9yOiNlOWVjZWZ9Lmxpc3QtZ3JvdXAtaXRlbXtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmJsb2NrO3BhZGRpbmc6MC43NXJlbSAxLjI1cmVtO2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4xMjUpfS5saXN0LWdyb3VwLWl0ZW06Zmlyc3QtY2hpbGR7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowLjI1cmVtO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjAuMjVyZW19Lmxpc3QtZ3JvdXAtaXRlbTpsYXN0LWNoaWxke2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjAuMjVyZW07Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowLjI1cmVtfS5saXN0LWdyb3VwLWl0ZW0uZGlzYWJsZWQsLmxpc3QtZ3JvdXAtaXRlbTpkaXNhYmxlZHtjb2xvcjojNmM3NTdkO3BvaW50ZXItZXZlbnRzOm5vbmU7YmFja2dyb3VuZC1jb2xvcjojZmZmfS5saXN0LWdyb3VwLWl0ZW0uYWN0aXZle3otaW5kZXg6Mjtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzAwN2JmZjtib3JkZXItY29sb3I6IzAwN2JmZn0ubGlzdC1ncm91cC1pdGVtKy5saXN0LWdyb3VwLWl0ZW17Ym9yZGVyLXRvcC13aWR0aDowfS5saXN0LWdyb3VwLWl0ZW0rLmxpc3QtZ3JvdXAtaXRlbS5hY3RpdmV7bWFyZ2luLXRvcDotMXB4O2JvcmRlci10b3Atd2lkdGg6MXB4fS5saXN0LWdyb3VwLWhvcml6b250YWx7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3d9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbCAubGlzdC1ncm91cC1pdGVtOmZpcnN0LWNoaWxke2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MC4yNXJlbTtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowfS5saXN0LWdyb3VwLWhvcml6b250YWwgLmxpc3QtZ3JvdXAtaXRlbTpsYXN0LWNoaWxke2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjAuMjVyZW07Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowfS5saXN0LWdyb3VwLWhvcml6b250YWwgLmxpc3QtZ3JvdXAtaXRlbS5hY3RpdmV7bWFyZ2luLXRvcDowfS5saXN0LWdyb3VwLWhvcml6b250YWwgLmxpc3QtZ3JvdXAtaXRlbSsubGlzdC1ncm91cC1pdGVte2JvcmRlci10b3Atd2lkdGg6MXB4O2JvcmRlci1sZWZ0LXdpZHRoOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbCAubGlzdC1ncm91cC1pdGVtKy5saXN0LWdyb3VwLWl0ZW0uYWN0aXZle21hcmdpbi1sZWZ0Oi0xcHg7Ym9yZGVyLWxlZnQtd2lkdGg6MXB4fUBtZWRpYSAobWluLXdpZHRoOiA1NzZweCl7Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1zbXstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvd30ubGlzdC1ncm91cC1ob3Jpem9udGFsLXNtIC5saXN0LWdyb3VwLWl0ZW06Zmlyc3QtY2hpbGR7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowLjI1cmVtO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1zbSAubGlzdC1ncm91cC1pdGVtOmxhc3QtY2hpbGR7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MC4yNXJlbTtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1zbSAubGlzdC1ncm91cC1pdGVtLmFjdGl2ZXttYXJnaW4tdG9wOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1zbSAubGlzdC1ncm91cC1pdGVtKy5saXN0LWdyb3VwLWl0ZW17Ym9yZGVyLXRvcC13aWR0aDoxcHg7Ym9yZGVyLWxlZnQtd2lkdGg6MH0ubGlzdC1ncm91cC1ob3Jpem9udGFsLXNtIC5saXN0LWdyb3VwLWl0ZW0rLmxpc3QtZ3JvdXAtaXRlbS5hY3RpdmV7bWFyZ2luLWxlZnQ6LTFweDtib3JkZXItbGVmdC13aWR0aDoxcHh9fUBtZWRpYSAobWluLXdpZHRoOiA3NjhweCl7Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1tZHstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvd30ubGlzdC1ncm91cC1ob3Jpem9udGFsLW1kIC5saXN0LWdyb3VwLWl0ZW06Zmlyc3QtY2hpbGR7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowLjI1cmVtO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1tZCAubGlzdC1ncm91cC1pdGVtOmxhc3QtY2hpbGR7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MC4yNXJlbTtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1tZCAubGlzdC1ncm91cC1pdGVtLmFjdGl2ZXttYXJnaW4tdG9wOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1tZCAubGlzdC1ncm91cC1pdGVtKy5saXN0LWdyb3VwLWl0ZW17Ym9yZGVyLXRvcC13aWR0aDoxcHg7Ym9yZGVyLWxlZnQtd2lkdGg6MH0ubGlzdC1ncm91cC1ob3Jpem9udGFsLW1kIC5saXN0LWdyb3VwLWl0ZW0rLmxpc3QtZ3JvdXAtaXRlbS5hY3RpdmV7bWFyZ2luLWxlZnQ6LTFweDtib3JkZXItbGVmdC13aWR0aDoxcHh9fUBtZWRpYSAobWluLXdpZHRoOiA5OTJweCl7Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1sZ3stbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvd30ubGlzdC1ncm91cC1ob3Jpem9udGFsLWxnIC5saXN0LWdyb3VwLWl0ZW06Zmlyc3QtY2hpbGR7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowLjI1cmVtO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1sZyAubGlzdC1ncm91cC1pdGVtOmxhc3QtY2hpbGR7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MC4yNXJlbTtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1sZyAubGlzdC1ncm91cC1pdGVtLmFjdGl2ZXttYXJnaW4tdG9wOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1sZyAubGlzdC1ncm91cC1pdGVtKy5saXN0LWdyb3VwLWl0ZW17Ym9yZGVyLXRvcC13aWR0aDoxcHg7Ym9yZGVyLWxlZnQtd2lkdGg6MH0ubGlzdC1ncm91cC1ob3Jpem9udGFsLWxnIC5saXN0LWdyb3VwLWl0ZW0rLmxpc3QtZ3JvdXAtaXRlbS5hY3RpdmV7bWFyZ2luLWxlZnQ6LTFweDtib3JkZXItbGVmdC13aWR0aDoxcHh9fUBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpey5saXN0LWdyb3VwLWhvcml6b250YWwteGx7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3d9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC14bCAubGlzdC1ncm91cC1pdGVtOmZpcnN0LWNoaWxke2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MC4yNXJlbTtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowfS5saXN0LWdyb3VwLWhvcml6b250YWwteGwgLmxpc3QtZ3JvdXAtaXRlbTpsYXN0LWNoaWxke2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjAuMjVyZW07Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowfS5saXN0LWdyb3VwLWhvcml6b250YWwteGwgLmxpc3QtZ3JvdXAtaXRlbS5hY3RpdmV7bWFyZ2luLXRvcDowfS5saXN0LWdyb3VwLWhvcml6b250YWwteGwgLmxpc3QtZ3JvdXAtaXRlbSsubGlzdC1ncm91cC1pdGVte2JvcmRlci10b3Atd2lkdGg6MXB4O2JvcmRlci1sZWZ0LXdpZHRoOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC14bCAubGlzdC1ncm91cC1pdGVtKy5saXN0LWdyb3VwLWl0ZW0uYWN0aXZle21hcmdpbi1sZWZ0Oi0xcHg7Ym9yZGVyLWxlZnQtd2lkdGg6MXB4fX0ubGlzdC1ncm91cC1mbHVzaCAubGlzdC1ncm91cC1pdGVte2JvcmRlci1yaWdodC13aWR0aDowO2JvcmRlci1sZWZ0LXdpZHRoOjA7Ym9yZGVyLXJhZGl1czowfS5saXN0LWdyb3VwLWZsdXNoIC5saXN0LWdyb3VwLWl0ZW06Zmlyc3QtY2hpbGR7Ym9yZGVyLXRvcC13aWR0aDowfS5saXN0LWdyb3VwLWZsdXNoOmxhc3QtY2hpbGQgLmxpc3QtZ3JvdXAtaXRlbTpsYXN0LWNoaWxke2JvcmRlci1ib3R0b20td2lkdGg6MH0ubGlzdC1ncm91cC1pdGVtLXByaW1hcnl7Y29sb3I6IzAwNDA4NTtiYWNrZ3JvdW5kLWNvbG9yOiNiOGRhZmZ9Lmxpc3QtZ3JvdXAtaXRlbS1wcmltYXJ5Lmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb246aG92ZXIsLmxpc3QtZ3JvdXAtaXRlbS1wcmltYXJ5Lmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb246Zm9jdXN7Y29sb3I6IzAwNDA4NTtiYWNrZ3JvdW5kLWNvbG9yOiM5ZmNkZmZ9Lmxpc3QtZ3JvdXAtaXRlbS1wcmltYXJ5Lmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb24uYWN0aXZle2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMDA0MDg1O2JvcmRlci1jb2xvcjojMDA0MDg1fS5saXN0LWdyb3VwLWl0ZW0tc2Vjb25kYXJ5e2NvbG9yOiMzODNkNDE7YmFja2dyb3VuZC1jb2xvcjojZDZkOGRifS5saXN0LWdyb3VwLWl0ZW0tc2Vjb25kYXJ5Lmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb246aG92ZXIsLmxpc3QtZ3JvdXAtaXRlbS1zZWNvbmRhcnkubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpmb2N1c3tjb2xvcjojMzgzZDQxO2JhY2tncm91bmQtY29sb3I6I2M4Y2JjZn0ubGlzdC1ncm91cC1pdGVtLXNlY29uZGFyeS5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uLmFjdGl2ZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzM4M2Q0MTtib3JkZXItY29sb3I6IzM4M2Q0MX0ubGlzdC1ncm91cC1pdGVtLXN1Y2Nlc3N7Y29sb3I6IzE1NTcyNDtiYWNrZ3JvdW5kLWNvbG9yOiNjM2U2Y2J9Lmxpc3QtZ3JvdXAtaXRlbS1zdWNjZXNzLmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb246aG92ZXIsLmxpc3QtZ3JvdXAtaXRlbS1zdWNjZXNzLmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb246Zm9jdXN7Y29sb3I6IzE1NTcyNDtiYWNrZ3JvdW5kLWNvbG9yOiNiMWRmYmJ9Lmxpc3QtZ3JvdXAtaXRlbS1zdWNjZXNzLmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb24uYWN0aXZle2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMTU1NzI0O2JvcmRlci1jb2xvcjojMTU1NzI0fS5saXN0LWdyb3VwLWl0ZW0taW5mb3tjb2xvcjojMGM1NDYwO2JhY2tncm91bmQtY29sb3I6I2JlZTVlYn0ubGlzdC1ncm91cC1pdGVtLWluZm8ubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpob3ZlciwubGlzdC1ncm91cC1pdGVtLWluZm8ubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpmb2N1c3tjb2xvcjojMGM1NDYwO2JhY2tncm91bmQtY29sb3I6I2FiZGRlNX0ubGlzdC1ncm91cC1pdGVtLWluZm8ubGlzdC1ncm91cC1pdGVtLWFjdGlvbi5hY3RpdmV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMwYzU0NjA7Ym9yZGVyLWNvbG9yOiMwYzU0NjB9Lmxpc3QtZ3JvdXAtaXRlbS13YXJuaW5ne2NvbG9yOiM4NTY0MDQ7YmFja2dyb3VuZC1jb2xvcjojZmZlZWJhfS5saXN0LWdyb3VwLWl0ZW0td2FybmluZy5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmhvdmVyLC5saXN0LWdyb3VwLWl0ZW0td2FybmluZy5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmZvY3Vze2NvbG9yOiM4NTY0MDQ7YmFja2dyb3VuZC1jb2xvcjojZmZlOGExfS5saXN0LWdyb3VwLWl0ZW0td2FybmluZy5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uLmFjdGl2ZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6Izg1NjQwNDtib3JkZXItY29sb3I6Izg1NjQwNH0ubGlzdC1ncm91cC1pdGVtLWRhbmdlcntjb2xvcjojNzIxYzI0O2JhY2tncm91bmQtY29sb3I6I2Y1YzZjYn0ubGlzdC1ncm91cC1pdGVtLWRhbmdlci5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmhvdmVyLC5saXN0LWdyb3VwLWl0ZW0tZGFuZ2VyLmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb246Zm9jdXN7Y29sb3I6IzcyMWMyNDtiYWNrZ3JvdW5kLWNvbG9yOiNmMWIwYjd9Lmxpc3QtZ3JvdXAtaXRlbS1kYW5nZXIubGlzdC1ncm91cC1pdGVtLWFjdGlvbi5hY3RpdmV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiM3MjFjMjQ7Ym9yZGVyLWNvbG9yOiM3MjFjMjR9Lmxpc3QtZ3JvdXAtaXRlbS1saWdodHtjb2xvcjojODE4MTgyO2JhY2tncm91bmQtY29sb3I6I2ZkZmRmZX0ubGlzdC1ncm91cC1pdGVtLWxpZ2h0Lmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb246aG92ZXIsLmxpc3QtZ3JvdXAtaXRlbS1saWdodC5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmZvY3Vze2NvbG9yOiM4MTgxODI7YmFja2dyb3VuZC1jb2xvcjojZWNlY2Y2fS5saXN0LWdyb3VwLWl0ZW0tbGlnaHQubGlzdC1ncm91cC1pdGVtLWFjdGlvbi5hY3RpdmV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiM4MTgxODI7Ym9yZGVyLWNvbG9yOiM4MTgxODJ9Lmxpc3QtZ3JvdXAtaXRlbS1kYXJre2NvbG9yOiMxYjFlMjE7YmFja2dyb3VuZC1jb2xvcjojYzZjOGNhfS5saXN0LWdyb3VwLWl0ZW0tZGFyay5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmhvdmVyLC5saXN0LWdyb3VwLWl0ZW0tZGFyay5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmZvY3Vze2NvbG9yOiMxYjFlMjE7YmFja2dyb3VuZC1jb2xvcjojYjliYmJlfS5saXN0LWdyb3VwLWl0ZW0tZGFyay5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uLmFjdGl2ZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzFiMWUyMTtib3JkZXItY29sb3I6IzFiMWUyMX0uY2xvc2V7ZmxvYXQ6cmlnaHQ7Zm9udC1zaXplOjEuNXJlbTtmb250LXdlaWdodDo3MDA7bGluZS1oZWlnaHQ6MTtjb2xvcjojMDAwO3RleHQtc2hhZG93OjAgMXB4IDAgI2ZmZjtvcGFjaXR5Oi41fS5jbG9zZTpob3Zlcntjb2xvcjojMDAwO3RleHQtZGVjb3JhdGlvbjpub25lfS5jbG9zZTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTpob3ZlciwuY2xvc2U6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6Zm9jdXN7b3BhY2l0eTouNzV9YnV0dG9uLmNsb3Nle3BhZGRpbmc6MDtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlcjowOy13ZWJraXQtYXBwZWFyYW5jZTpub25lOy1tb3otYXBwZWFyYW5jZTpub25lO2FwcGVhcmFuY2U6bm9uZX1hLmNsb3NlLmRpc2FibGVke3BvaW50ZXItZXZlbnRzOm5vbmV9LnRvYXN0e21heC13aWR0aDozNTBweDtvdmVyZmxvdzpoaWRkZW47Zm9udC1zaXplOjAuODc1cmVtO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsMjU1LDI1NSwwLjg1KTtiYWNrZ3JvdW5kLWNsaXA6cGFkZGluZy1ib3g7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDAsMCwwLDAuMSk7Ym94LXNoYWRvdzowIDAuMjVyZW0gMC43NXJlbSByZ2JhKDAsMCwwLDAuMSk7LXdlYmtpdC1iYWNrZHJvcC1maWx0ZXI6Ymx1cigxMHB4KTtiYWNrZHJvcC1maWx0ZXI6Ymx1cigxMHB4KTtvcGFjaXR5OjA7Ym9yZGVyLXJhZGl1czowLjI1cmVtfS50b2FzdDpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1ib3R0b206MC43NXJlbX0udG9hc3Quc2hvd2luZ3tvcGFjaXR5OjF9LnRvYXN0LnNob3d7ZGlzcGxheTpibG9jaztvcGFjaXR5OjF9LnRvYXN0LmhpZGV7ZGlzcGxheTpub25lfS50b2FzdC1oZWFkZXJ7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nOjAuMjVyZW0gMC43NXJlbTtjb2xvcjojNmM3NTdkO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsMjU1LDI1NSwwLjg1KTtiYWNrZ3JvdW5kLWNsaXA6cGFkZGluZy1ib3g7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgcmdiYSgwLDAsMCwwLjA1KX0udG9hc3QtYm9keXtwYWRkaW5nOjAuNzVyZW19Lm1vZGFsLW9wZW57b3ZlcmZsb3c6aGlkZGVufS5tb2RhbC1vcGVuIC5tb2RhbHtvdmVyZmxvdy14OmhpZGRlbjtvdmVyZmxvdy15OmF1dG99Lm1vZGFse3Bvc2l0aW9uOmZpeGVkO3RvcDowO2xlZnQ6MDt6LWluZGV4OjEwNTA7ZGlzcGxheTpub25lO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7b3ZlcmZsb3c6aGlkZGVuO291dGxpbmU6MH0ubW9kYWwtZGlhbG9ne3Bvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOmF1dG87bWFyZ2luOjAuNXJlbTtwb2ludGVyLWV2ZW50czpub25lfS5tb2RhbC5mYWRlIC5tb2RhbC1kaWFsb2d7dHJhbnNpdGlvbjotd2Via2l0LXRyYW5zZm9ybSAwLjNzIGVhc2Utb3V0O3RyYW5zaXRpb246dHJhbnNmb3JtIDAuM3MgZWFzZS1vdXQ7dHJhbnNpdGlvbjp0cmFuc2Zvcm0gMC4zcyBlYXNlLW91dCwgLXdlYmtpdC10cmFuc2Zvcm0gMC4zcyBlYXNlLW91dDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUoMCwgLTUwcHgpO3RyYW5zZm9ybTp0cmFuc2xhdGUoMCwgLTUwcHgpfUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKXsubW9kYWwuZmFkZSAubW9kYWwtZGlhbG9ne3RyYW5zaXRpb246bm9uZX19Lm1vZGFsLnNob3cgLm1vZGFsLWRpYWxvZ3std2Via2l0LXRyYW5zZm9ybTpub25lO3RyYW5zZm9ybTpub25lfS5tb2RhbC5tb2RhbC1zdGF0aWMgLm1vZGFsLWRpYWxvZ3std2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLjAyKTt0cmFuc2Zvcm06c2NhbGUoMS4wMil9Lm1vZGFsLWRpYWxvZy1zY3JvbGxhYmxle2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4O21heC1oZWlnaHQ6Y2FsYygxMDAlIC0gMXJlbSl9Lm1vZGFsLWRpYWxvZy1zY3JvbGxhYmxlIC5tb2RhbC1jb250ZW50e21heC1oZWlnaHQ6Y2FsYygxMDB2aCAtIDFyZW0pO292ZXJmbG93OmhpZGRlbn0ubW9kYWwtZGlhbG9nLXNjcm9sbGFibGUgLm1vZGFsLWhlYWRlciwubW9kYWwtZGlhbG9nLXNjcm9sbGFibGUgLm1vZGFsLWZvb3RlcnstbXMtZmxleC1uZWdhdGl2ZTowO2ZsZXgtc2hyaW5rOjB9Lm1vZGFsLWRpYWxvZy1zY3JvbGxhYmxlIC5tb2RhbC1ib2R5e292ZXJmbG93LXk6YXV0b30ubW9kYWwtZGlhbG9nLWNlbnRlcmVke2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7bWluLWhlaWdodDpjYWxjKDEwMCUgLSAxcmVtKX0ubW9kYWwtZGlhbG9nLWNlbnRlcmVkOjpiZWZvcmV7ZGlzcGxheTpibG9jaztoZWlnaHQ6Y2FsYygxMDB2aCAtIDFyZW0pO2NvbnRlbnQ6XFxcIlxcXCJ9Lm1vZGFsLWRpYWxvZy1jZW50ZXJlZC5tb2RhbC1kaWFsb2ctc2Nyb2xsYWJsZXstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2hlaWdodDoxMDAlfS5tb2RhbC1kaWFsb2ctY2VudGVyZWQubW9kYWwtZGlhbG9nLXNjcm9sbGFibGUgLm1vZGFsLWNvbnRlbnR7bWF4LWhlaWdodDpub25lfS5tb2RhbC1kaWFsb2ctY2VudGVyZWQubW9kYWwtZGlhbG9nLXNjcm9sbGFibGU6OmJlZm9yZXtjb250ZW50Om5vbmV9Lm1vZGFsLWNvbnRlbnR7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47d2lkdGg6MTAwJTtwb2ludGVyLWV2ZW50czphdXRvO2JhY2tncm91bmQtY29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNsaXA6cGFkZGluZy1ib3g7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDAsMCwwLDAuMik7Ym9yZGVyLXJhZGl1czowLjNyZW07b3V0bGluZTowfS5tb2RhbC1iYWNrZHJvcHtwb3NpdGlvbjpmaXhlZDt0b3A6MDtsZWZ0OjA7ei1pbmRleDoxMDQwO3dpZHRoOjEwMHZ3O2hlaWdodDoxMDB2aDtiYWNrZ3JvdW5kLWNvbG9yOiMwMDB9Lm1vZGFsLWJhY2tkcm9wLmZhZGV7b3BhY2l0eTowfS5tb2RhbC1iYWNrZHJvcC5zaG93e29wYWNpdHk6MC41fS5tb2RhbC1oZWFkZXJ7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246c3RhcnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydDstbXMtZmxleC1wYWNrOmp1c3RpZnk7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47cGFkZGluZzoxcmVtIDFyZW07Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RlZTJlNjtib3JkZXItdG9wLWxlZnQtcmFkaXVzOmNhbGMoMC4zcmVtIC0gMXB4KTtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czpjYWxjKDAuM3JlbSAtIDFweCl9Lm1vZGFsLWhlYWRlciAuY2xvc2V7cGFkZGluZzoxcmVtIDFyZW07bWFyZ2luOi0xcmVtIC0xcmVtIC0xcmVtIGF1dG99Lm1vZGFsLXRpdGxle21hcmdpbi1ib3R0b206MDtsaW5lLWhlaWdodDoxLjV9Lm1vZGFsLWJvZHl7cG9zaXRpb246cmVsYXRpdmU7LW1zLWZsZXg6MSAxIGF1dG87ZmxleDoxIDEgYXV0bztwYWRkaW5nOjFyZW19Lm1vZGFsLWZvb3RlcntkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1wYWNrOmVuZDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmQ7cGFkZGluZzowLjc1cmVtO2JvcmRlci10b3A6MXB4IHNvbGlkICNkZWUyZTY7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6Y2FsYygwLjNyZW0gLSAxcHgpO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6Y2FsYygwLjNyZW0gLSAxcHgpfS5tb2RhbC1mb290ZXI+KnttYXJnaW46MC4yNXJlbX0ubW9kYWwtc2Nyb2xsYmFyLW1lYXN1cmV7cG9zaXRpb246YWJzb2x1dGU7dG9wOi05OTk5cHg7d2lkdGg6NTBweDtoZWlnaHQ6NTBweDtvdmVyZmxvdzpzY3JvbGx9QG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KXsubW9kYWwtZGlhbG9ne21heC13aWR0aDo1MDBweDttYXJnaW46MS43NXJlbSBhdXRvfS5tb2RhbC1kaWFsb2ctc2Nyb2xsYWJsZXttYXgtaGVpZ2h0OmNhbGMoMTAwJSAtIDMuNXJlbSl9Lm1vZGFsLWRpYWxvZy1zY3JvbGxhYmxlIC5tb2RhbC1jb250ZW50e21heC1oZWlnaHQ6Y2FsYygxMDB2aCAtIDMuNXJlbSl9Lm1vZGFsLWRpYWxvZy1jZW50ZXJlZHttaW4taGVpZ2h0OmNhbGMoMTAwJSAtIDMuNXJlbSl9Lm1vZGFsLWRpYWxvZy1jZW50ZXJlZDo6YmVmb3Jle2hlaWdodDpjYWxjKDEwMHZoIC0gMy41cmVtKX0ubW9kYWwtc217bWF4LXdpZHRoOjMwMHB4fX1AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpey5tb2RhbC1sZywubW9kYWwteGx7bWF4LXdpZHRoOjgwMHB4fX1AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KXsubW9kYWwteGx7bWF4LXdpZHRoOjExNDBweH19LnRvb2x0aXB7cG9zaXRpb246YWJzb2x1dGU7ei1pbmRleDoxMDcwO2Rpc3BsYXk6YmxvY2s7bWFyZ2luOjA7Zm9udC1mYW1pbHk6LWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcXFwiU2Vnb2UgVUlcXFwiLCBSb2JvdG8sIFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsIEFyaWFsLCBcXFwiTm90byBTYW5zXFxcIiwgc2Fucy1zZXJpZiwgXFxcIkFwcGxlIENvbG9yIEVtb2ppXFxcIiwgXFxcIlNlZ29lIFVJIEVtb2ppXFxcIiwgXFxcIlNlZ29lIFVJIFN5bWJvbFxcXCIsIFxcXCJOb3RvIENvbG9yIEVtb2ppXFxcIjtmb250LXN0eWxlOm5vcm1hbDtmb250LXdlaWdodDo0MDA7bGluZS1oZWlnaHQ6MS41O3RleHQtYWxpZ246bGVmdDt0ZXh0LWFsaWduOnN0YXJ0O3RleHQtZGVjb3JhdGlvbjpub25lO3RleHQtc2hhZG93Om5vbmU7dGV4dC10cmFuc2Zvcm06bm9uZTtsZXR0ZXItc3BhY2luZzpub3JtYWw7d29yZC1icmVhazpub3JtYWw7d29yZC1zcGFjaW5nOm5vcm1hbDt3aGl0ZS1zcGFjZTpub3JtYWw7bGluZS1icmVhazphdXRvO2ZvbnQtc2l6ZTowLjg3NXJlbTt3b3JkLXdyYXA6YnJlYWstd29yZDtvcGFjaXR5OjB9LnRvb2x0aXAuc2hvd3tvcGFjaXR5OjAuOX0udG9vbHRpcCAuYXJyb3d7cG9zaXRpb246YWJzb2x1dGU7ZGlzcGxheTpibG9jazt3aWR0aDowLjhyZW07aGVpZ2h0OjAuNHJlbX0udG9vbHRpcCAuYXJyb3c6OmJlZm9yZXtwb3NpdGlvbjphYnNvbHV0ZTtjb250ZW50OlxcXCJcXFwiO2JvcmRlci1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXItc3R5bGU6c29saWR9LmJzLXRvb2x0aXAtdG9wLC5icy10b29sdGlwLWF1dG9beC1wbGFjZW1lbnRePVxcXCJ0b3BcXFwiXXtwYWRkaW5nOjAuNHJlbSAwfS5icy10b29sdGlwLXRvcCAuYXJyb3csLmJzLXRvb2x0aXAtYXV0b1t4LXBsYWNlbWVudF49XFxcInRvcFxcXCJdIC5hcnJvd3tib3R0b206MH0uYnMtdG9vbHRpcC10b3AgLmFycm93OjpiZWZvcmUsLmJzLXRvb2x0aXAtYXV0b1t4LXBsYWNlbWVudF49XFxcInRvcFxcXCJdIC5hcnJvdzo6YmVmb3Jle3RvcDowO2JvcmRlci13aWR0aDowLjRyZW0gMC40cmVtIDA7Ym9yZGVyLXRvcC1jb2xvcjojMDAwfS5icy10b29sdGlwLXJpZ2h0LC5icy10b29sdGlwLWF1dG9beC1wbGFjZW1lbnRePVxcXCJyaWdodFxcXCJde3BhZGRpbmc6MCAwLjRyZW19LmJzLXRvb2x0aXAtcmlnaHQgLmFycm93LC5icy10b29sdGlwLWF1dG9beC1wbGFjZW1lbnRePVxcXCJyaWdodFxcXCJdIC5hcnJvd3tsZWZ0OjA7d2lkdGg6MC40cmVtO2hlaWdodDowLjhyZW19LmJzLXRvb2x0aXAtcmlnaHQgLmFycm93OjpiZWZvcmUsLmJzLXRvb2x0aXAtYXV0b1t4LXBsYWNlbWVudF49XFxcInJpZ2h0XFxcIl0gLmFycm93OjpiZWZvcmV7cmlnaHQ6MDtib3JkZXItd2lkdGg6MC40cmVtIDAuNHJlbSAwLjRyZW0gMDtib3JkZXItcmlnaHQtY29sb3I6IzAwMH0uYnMtdG9vbHRpcC1ib3R0b20sLmJzLXRvb2x0aXAtYXV0b1t4LXBsYWNlbWVudF49XFxcImJvdHRvbVxcXCJde3BhZGRpbmc6MC40cmVtIDB9LmJzLXRvb2x0aXAtYm90dG9tIC5hcnJvdywuYnMtdG9vbHRpcC1hdXRvW3gtcGxhY2VtZW50Xj1cXFwiYm90dG9tXFxcIl0gLmFycm93e3RvcDowfS5icy10b29sdGlwLWJvdHRvbSAuYXJyb3c6OmJlZm9yZSwuYnMtdG9vbHRpcC1hdXRvW3gtcGxhY2VtZW50Xj1cXFwiYm90dG9tXFxcIl0gLmFycm93OjpiZWZvcmV7Ym90dG9tOjA7Ym9yZGVyLXdpZHRoOjAgMC40cmVtIDAuNHJlbTtib3JkZXItYm90dG9tLWNvbG9yOiMwMDB9LmJzLXRvb2x0aXAtbGVmdCwuYnMtdG9vbHRpcC1hdXRvW3gtcGxhY2VtZW50Xj1cXFwibGVmdFxcXCJde3BhZGRpbmc6MCAwLjRyZW19LmJzLXRvb2x0aXAtbGVmdCAuYXJyb3csLmJzLXRvb2x0aXAtYXV0b1t4LXBsYWNlbWVudF49XFxcImxlZnRcXFwiXSAuYXJyb3d7cmlnaHQ6MDt3aWR0aDowLjRyZW07aGVpZ2h0OjAuOHJlbX0uYnMtdG9vbHRpcC1sZWZ0IC5hcnJvdzo6YmVmb3JlLC5icy10b29sdGlwLWF1dG9beC1wbGFjZW1lbnRePVxcXCJsZWZ0XFxcIl0gLmFycm93OjpiZWZvcmV7bGVmdDowO2JvcmRlci13aWR0aDowLjRyZW0gMCAwLjRyZW0gMC40cmVtO2JvcmRlci1sZWZ0LWNvbG9yOiMwMDB9LnRvb2x0aXAtaW5uZXJ7bWF4LXdpZHRoOjIwMHB4O3BhZGRpbmc6MC4yNXJlbSAwLjVyZW07Y29sb3I6I2ZmZjt0ZXh0LWFsaWduOmNlbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOiMwMDA7Ym9yZGVyLXJhZGl1czowLjI1cmVtfS5wb3BvdmVye3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDt6LWluZGV4OjEwNjA7ZGlzcGxheTpibG9jazttYXgtd2lkdGg6Mjc2cHg7Zm9udC1mYW1pbHk6LWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcXFwiU2Vnb2UgVUlcXFwiLCBSb2JvdG8sIFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsIEFyaWFsLCBcXFwiTm90byBTYW5zXFxcIiwgc2Fucy1zZXJpZiwgXFxcIkFwcGxlIENvbG9yIEVtb2ppXFxcIiwgXFxcIlNlZ29lIFVJIEVtb2ppXFxcIiwgXFxcIlNlZ29lIFVJIFN5bWJvbFxcXCIsIFxcXCJOb3RvIENvbG9yIEVtb2ppXFxcIjtmb250LXN0eWxlOm5vcm1hbDtmb250LXdlaWdodDo0MDA7bGluZS1oZWlnaHQ6MS41O3RleHQtYWxpZ246bGVmdDt0ZXh0LWFsaWduOnN0YXJ0O3RleHQtZGVjb3JhdGlvbjpub25lO3RleHQtc2hhZG93Om5vbmU7dGV4dC10cmFuc2Zvcm06bm9uZTtsZXR0ZXItc3BhY2luZzpub3JtYWw7d29yZC1icmVhazpub3JtYWw7d29yZC1zcGFjaW5nOm5vcm1hbDt3aGl0ZS1zcGFjZTpub3JtYWw7bGluZS1icmVhazphdXRvO2ZvbnQtc2l6ZTowLjg3NXJlbTt3b3JkLXdyYXA6YnJlYWstd29yZDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7YmFja2dyb3VuZC1jbGlwOnBhZGRpbmctYm94O2JvcmRlcjoxcHggc29saWQgcmdiYSgwLDAsMCwwLjIpO2JvcmRlci1yYWRpdXM6MC4zcmVtfS5wb3BvdmVyIC5hcnJvd3twb3NpdGlvbjphYnNvbHV0ZTtkaXNwbGF5OmJsb2NrO3dpZHRoOjFyZW07aGVpZ2h0OjAuNXJlbTttYXJnaW46MCAwLjNyZW19LnBvcG92ZXIgLmFycm93OjpiZWZvcmUsLnBvcG92ZXIgLmFycm93OjphZnRlcntwb3NpdGlvbjphYnNvbHV0ZTtkaXNwbGF5OmJsb2NrO2NvbnRlbnQ6XFxcIlxcXCI7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlci1zdHlsZTpzb2xpZH0uYnMtcG9wb3Zlci10b3AsLmJzLXBvcG92ZXItYXV0b1t4LXBsYWNlbWVudF49XFxcInRvcFxcXCJde21hcmdpbi1ib3R0b206MC41cmVtfS5icy1wb3BvdmVyLXRvcD4uYXJyb3csLmJzLXBvcG92ZXItYXV0b1t4LXBsYWNlbWVudF49XFxcInRvcFxcXCJdPi5hcnJvd3tib3R0b206Y2FsYygtMC41cmVtIC0gMXB4KX0uYnMtcG9wb3Zlci10b3A+LmFycm93OjpiZWZvcmUsLmJzLXBvcG92ZXItYXV0b1t4LXBsYWNlbWVudF49XFxcInRvcFxcXCJdPi5hcnJvdzo6YmVmb3Jle2JvdHRvbTowO2JvcmRlci13aWR0aDowLjVyZW0gMC41cmVtIDA7Ym9yZGVyLXRvcC1jb2xvcjpyZ2JhKDAsMCwwLDAuMjUpfS5icy1wb3BvdmVyLXRvcD4uYXJyb3c6OmFmdGVyLC5icy1wb3BvdmVyLWF1dG9beC1wbGFjZW1lbnRePVxcXCJ0b3BcXFwiXT4uYXJyb3c6OmFmdGVye2JvdHRvbToxcHg7Ym9yZGVyLXdpZHRoOjAuNXJlbSAwLjVyZW0gMDtib3JkZXItdG9wLWNvbG9yOiNmZmZ9LmJzLXBvcG92ZXItcmlnaHQsLmJzLXBvcG92ZXItYXV0b1t4LXBsYWNlbWVudF49XFxcInJpZ2h0XFxcIl17bWFyZ2luLWxlZnQ6MC41cmVtfS5icy1wb3BvdmVyLXJpZ2h0Pi5hcnJvdywuYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj1cXFwicmlnaHRcXFwiXT4uYXJyb3d7bGVmdDpjYWxjKC0wLjVyZW0gLSAxcHgpO3dpZHRoOjAuNXJlbTtoZWlnaHQ6MXJlbTttYXJnaW46MC4zcmVtIDB9LmJzLXBvcG92ZXItcmlnaHQ+LmFycm93OjpiZWZvcmUsLmJzLXBvcG92ZXItYXV0b1t4LXBsYWNlbWVudF49XFxcInJpZ2h0XFxcIl0+LmFycm93OjpiZWZvcmV7bGVmdDowO2JvcmRlci13aWR0aDowLjVyZW0gMC41cmVtIDAuNXJlbSAwO2JvcmRlci1yaWdodC1jb2xvcjpyZ2JhKDAsMCwwLDAuMjUpfS5icy1wb3BvdmVyLXJpZ2h0Pi5hcnJvdzo6YWZ0ZXIsLmJzLXBvcG92ZXItYXV0b1t4LXBsYWNlbWVudF49XFxcInJpZ2h0XFxcIl0+LmFycm93OjphZnRlcntsZWZ0OjFweDtib3JkZXItd2lkdGg6MC41cmVtIDAuNXJlbSAwLjVyZW0gMDtib3JkZXItcmlnaHQtY29sb3I6I2ZmZn0uYnMtcG9wb3Zlci1ib3R0b20sLmJzLXBvcG92ZXItYXV0b1t4LXBsYWNlbWVudF49XFxcImJvdHRvbVxcXCJde21hcmdpbi10b3A6MC41cmVtfS5icy1wb3BvdmVyLWJvdHRvbT4uYXJyb3csLmJzLXBvcG92ZXItYXV0b1t4LXBsYWNlbWVudF49XFxcImJvdHRvbVxcXCJdPi5hcnJvd3t0b3A6Y2FsYygtMC41cmVtIC0gMXB4KX0uYnMtcG9wb3Zlci1ib3R0b20+LmFycm93OjpiZWZvcmUsLmJzLXBvcG92ZXItYXV0b1t4LXBsYWNlbWVudF49XFxcImJvdHRvbVxcXCJdPi5hcnJvdzo6YmVmb3Jle3RvcDowO2JvcmRlci13aWR0aDowIDAuNXJlbSAwLjVyZW0gMC41cmVtO2JvcmRlci1ib3R0b20tY29sb3I6cmdiYSgwLDAsMCwwLjI1KX0uYnMtcG9wb3Zlci1ib3R0b20+LmFycm93OjphZnRlciwuYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj1cXFwiYm90dG9tXFxcIl0+LmFycm93OjphZnRlcnt0b3A6MXB4O2JvcmRlci13aWR0aDowIDAuNXJlbSAwLjVyZW0gMC41cmVtO2JvcmRlci1ib3R0b20tY29sb3I6I2ZmZn0uYnMtcG9wb3Zlci1ib3R0b20gLnBvcG92ZXItaGVhZGVyOjpiZWZvcmUsLmJzLXBvcG92ZXItYXV0b1t4LXBsYWNlbWVudF49XFxcImJvdHRvbVxcXCJdIC5wb3BvdmVyLWhlYWRlcjo6YmVmb3Jle3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6NTAlO2Rpc3BsYXk6YmxvY2s7d2lkdGg6MXJlbTttYXJnaW4tbGVmdDotMC41cmVtO2NvbnRlbnQ6XFxcIlxcXCI7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2Y3ZjdmN30uYnMtcG9wb3Zlci1sZWZ0LC5icy1wb3BvdmVyLWF1dG9beC1wbGFjZW1lbnRePVxcXCJsZWZ0XFxcIl17bWFyZ2luLXJpZ2h0OjAuNXJlbX0uYnMtcG9wb3Zlci1sZWZ0Pi5hcnJvdywuYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj1cXFwibGVmdFxcXCJdPi5hcnJvd3tyaWdodDpjYWxjKC0wLjVyZW0gLSAxcHgpO3dpZHRoOjAuNXJlbTtoZWlnaHQ6MXJlbTttYXJnaW46MC4zcmVtIDB9LmJzLXBvcG92ZXItbGVmdD4uYXJyb3c6OmJlZm9yZSwuYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj1cXFwibGVmdFxcXCJdPi5hcnJvdzo6YmVmb3Jle3JpZ2h0OjA7Ym9yZGVyLXdpZHRoOjAuNXJlbSAwIDAuNXJlbSAwLjVyZW07Ym9yZGVyLWxlZnQtY29sb3I6cmdiYSgwLDAsMCwwLjI1KX0uYnMtcG9wb3Zlci1sZWZ0Pi5hcnJvdzo6YWZ0ZXIsLmJzLXBvcG92ZXItYXV0b1t4LXBsYWNlbWVudF49XFxcImxlZnRcXFwiXT4uYXJyb3c6OmFmdGVye3JpZ2h0OjFweDtib3JkZXItd2lkdGg6MC41cmVtIDAgMC41cmVtIDAuNXJlbTtib3JkZXItbGVmdC1jb2xvcjojZmZmfS5wb3BvdmVyLWhlYWRlcntwYWRkaW5nOjAuNXJlbSAwLjc1cmVtO21hcmdpbi1ib3R0b206MDtmb250LXNpemU6MXJlbTtiYWNrZ3JvdW5kLWNvbG9yOiNmN2Y3Zjc7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2ViZWJlYjtib3JkZXItdG9wLWxlZnQtcmFkaXVzOmNhbGMoMC4zcmVtIC0gMXB4KTtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czpjYWxjKDAuM3JlbSAtIDFweCl9LnBvcG92ZXItaGVhZGVyOmVtcHR5e2Rpc3BsYXk6bm9uZX0ucG9wb3Zlci1ib2R5e3BhZGRpbmc6MC41cmVtIDAuNzVyZW07Y29sb3I6IzIxMjUyOX0uY2Fyb3VzZWx7cG9zaXRpb246cmVsYXRpdmV9LmNhcm91c2VsLnBvaW50ZXItZXZlbnR7LW1zLXRvdWNoLWFjdGlvbjpwYW4teTt0b3VjaC1hY3Rpb246cGFuLXl9LmNhcm91c2VsLWlubmVye3Bvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjEwMCU7b3ZlcmZsb3c6aGlkZGVufS5jYXJvdXNlbC1pbm5lcjo6YWZ0ZXJ7ZGlzcGxheTpibG9jaztjbGVhcjpib3RoO2NvbnRlbnQ6XFxcIlxcXCJ9LmNhcm91c2VsLWl0ZW17cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpub25lO2Zsb2F0OmxlZnQ7d2lkdGg6MTAwJTttYXJnaW4tcmlnaHQ6LTEwMCU7LXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OmhpZGRlbjtiYWNrZmFjZS12aXNpYmlsaXR5OmhpZGRlbjt0cmFuc2l0aW9uOi13ZWJraXQtdHJhbnNmb3JtIDAuNnMgZWFzZS1pbi1vdXQ7dHJhbnNpdGlvbjp0cmFuc2Zvcm0gMC42cyBlYXNlLWluLW91dDt0cmFuc2l0aW9uOnRyYW5zZm9ybSAwLjZzIGVhc2UtaW4tb3V0LCAtd2Via2l0LXRyYW5zZm9ybSAwLjZzIGVhc2UtaW4tb3V0fUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKXsuY2Fyb3VzZWwtaXRlbXt0cmFuc2l0aW9uOm5vbmV9fS5jYXJvdXNlbC1pdGVtLmFjdGl2ZSwuY2Fyb3VzZWwtaXRlbS1uZXh0LC5jYXJvdXNlbC1pdGVtLXByZXZ7ZGlzcGxheTpibG9ja30uY2Fyb3VzZWwtaXRlbS1uZXh0Om5vdCguY2Fyb3VzZWwtaXRlbS1sZWZ0KSwuYWN0aXZlLmNhcm91c2VsLWl0ZW0tcmlnaHR7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlWCgxMDAlKTt0cmFuc2Zvcm06dHJhbnNsYXRlWCgxMDAlKX0uY2Fyb3VzZWwtaXRlbS1wcmV2Om5vdCguY2Fyb3VzZWwtaXRlbS1yaWdodCksLmFjdGl2ZS5jYXJvdXNlbC1pdGVtLWxlZnR7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlWCgtMTAwJSk7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTEwMCUpfS5jYXJvdXNlbC1mYWRlIC5jYXJvdXNlbC1pdGVte29wYWNpdHk6MDt0cmFuc2l0aW9uLXByb3BlcnR5Om9wYWNpdHk7LXdlYmtpdC10cmFuc2Zvcm06bm9uZTt0cmFuc2Zvcm06bm9uZX0uY2Fyb3VzZWwtZmFkZSAuY2Fyb3VzZWwtaXRlbS5hY3RpdmUsLmNhcm91c2VsLWZhZGUgLmNhcm91c2VsLWl0ZW0tbmV4dC5jYXJvdXNlbC1pdGVtLWxlZnQsLmNhcm91c2VsLWZhZGUgLmNhcm91c2VsLWl0ZW0tcHJldi5jYXJvdXNlbC1pdGVtLXJpZ2h0e3otaW5kZXg6MTtvcGFjaXR5OjF9LmNhcm91c2VsLWZhZGUgLmFjdGl2ZS5jYXJvdXNlbC1pdGVtLWxlZnQsLmNhcm91c2VsLWZhZGUgLmFjdGl2ZS5jYXJvdXNlbC1pdGVtLXJpZ2h0e3otaW5kZXg6MDtvcGFjaXR5OjA7dHJhbnNpdGlvbjpvcGFjaXR5IDBzIDAuNnN9QG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiByZWR1Y2Upey5jYXJvdXNlbC1mYWRlIC5hY3RpdmUuY2Fyb3VzZWwtaXRlbS1sZWZ0LC5jYXJvdXNlbC1mYWRlIC5hY3RpdmUuY2Fyb3VzZWwtaXRlbS1yaWdodHt0cmFuc2l0aW9uOm5vbmV9fS5jYXJvdXNlbC1jb250cm9sLXByZXYsLmNhcm91c2VsLWNvbnRyb2wtbmV4dHtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtib3R0b206MDt6LWluZGV4OjE7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO3dpZHRoOjE1JTtjb2xvcjojZmZmO3RleHQtYWxpZ246Y2VudGVyO29wYWNpdHk6MC41O3RyYW5zaXRpb246b3BhY2l0eSAwLjE1cyBlYXNlfUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKXsuY2Fyb3VzZWwtY29udHJvbC1wcmV2LC5jYXJvdXNlbC1jb250cm9sLW5leHR7dHJhbnNpdGlvbjpub25lfX0uY2Fyb3VzZWwtY29udHJvbC1wcmV2OmhvdmVyLC5jYXJvdXNlbC1jb250cm9sLXByZXY6Zm9jdXMsLmNhcm91c2VsLWNvbnRyb2wtbmV4dDpob3ZlciwuY2Fyb3VzZWwtY29udHJvbC1uZXh0OmZvY3Vze2NvbG9yOiNmZmY7dGV4dC1kZWNvcmF0aW9uOm5vbmU7b3V0bGluZTowO29wYWNpdHk6MC45fS5jYXJvdXNlbC1jb250cm9sLXByZXZ7bGVmdDowfS5jYXJvdXNlbC1jb250cm9sLW5leHR7cmlnaHQ6MH0uY2Fyb3VzZWwtY29udHJvbC1wcmV2LWljb24sLmNhcm91c2VsLWNvbnRyb2wtbmV4dC1pY29ue2Rpc3BsYXk6aW5saW5lLWJsb2NrO3dpZHRoOjIwcHg7aGVpZ2h0OjIwcHg7YmFja2dyb3VuZDpuby1yZXBlYXQgNTAlIC8gMTAwJSAxMDAlfS5jYXJvdXNlbC1jb250cm9sLXByZXYtaWNvbntiYWNrZ3JvdW5kLWltYWdlOnVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIGZpbGw9JyUyM2ZmZicgd2lkdGg9JzgnIGhlaWdodD0nOCcgdmlld0JveD0nMCAwIDggOCclM2UlM2NwYXRoIGQ9J001LjI1IDBsLTQgNCA0IDQgMS41LTEuNUw0LjI1IDRsMi41LTIuNUw1LjI1IDB6Jy8lM2UlM2Mvc3ZnJTNlXFxcIil9LmNhcm91c2VsLWNvbnRyb2wtbmV4dC1pY29ue2JhY2tncm91bmQtaW1hZ2U6dXJsKFxcXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNjc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgZmlsbD0nJTIzZmZmJyB3aWR0aD0nOCcgaGVpZ2h0PSc4JyB2aWV3Qm94PScwIDAgOCA4JyUzZSUzY3BhdGggZD0nTTIuNzUgMGwtMS41IDEuNUwzLjc1IDRsLTIuNSAyLjVMMi43NSA4bDQtNC00LTR6Jy8lM2UlM2Mvc3ZnJTNlXFxcIil9LmNhcm91c2VsLWluZGljYXRvcnN7cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6MDtib3R0b206MDtsZWZ0OjA7ei1pbmRleDoxNTtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO3BhZGRpbmctbGVmdDowO21hcmdpbi1yaWdodDoxNSU7bWFyZ2luLWxlZnQ6MTUlO2xpc3Qtc3R5bGU6bm9uZX0uY2Fyb3VzZWwtaW5kaWNhdG9ycyBsaXtib3gtc2l6aW5nOmNvbnRlbnQtYm94Oy1tcy1mbGV4OjAgMSBhdXRvO2ZsZXg6MCAxIGF1dG87d2lkdGg6MzBweDtoZWlnaHQ6M3B4O21hcmdpbi1yaWdodDozcHg7bWFyZ2luLWxlZnQ6M3B4O3RleHQtaW5kZW50Oi05OTlweDtjdXJzb3I6cG9pbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7YmFja2dyb3VuZC1jbGlwOnBhZGRpbmctYm94O2JvcmRlci10b3A6MTBweCBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItYm90dG9tOjEwcHggc29saWQgdHJhbnNwYXJlbnQ7b3BhY2l0eTouNTt0cmFuc2l0aW9uOm9wYWNpdHkgMC42cyBlYXNlfUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKXsuY2Fyb3VzZWwtaW5kaWNhdG9ycyBsaXt0cmFuc2l0aW9uOm5vbmV9fS5jYXJvdXNlbC1pbmRpY2F0b3JzIC5hY3RpdmV7b3BhY2l0eToxfS5jYXJvdXNlbC1jYXB0aW9ue3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjE1JTtib3R0b206MjBweDtsZWZ0OjE1JTt6LWluZGV4OjEwO3BhZGRpbmctdG9wOjIwcHg7cGFkZGluZy1ib3R0b206MjBweDtjb2xvcjojZmZmO3RleHQtYWxpZ246Y2VudGVyfUAtd2Via2l0LWtleWZyYW1lcyBzcGlubmVyLWJvcmRlcnt0b3std2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMzYwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDM2MGRlZyl9fUBrZXlmcmFtZXMgc3Bpbm5lci1ib3JkZXJ7dG97LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKDM2MGRlZyk7dHJhbnNmb3JtOnJvdGF0ZSgzNjBkZWcpfX0uc3Bpbm5lci1ib3JkZXJ7ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6MnJlbTtoZWlnaHQ6MnJlbTt2ZXJ0aWNhbC1hbGlnbjp0ZXh0LWJvdHRvbTtib3JkZXI6MC4yNWVtIHNvbGlkIGN1cnJlbnRDb2xvcjtib3JkZXItcmlnaHQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLXJhZGl1czo1MCU7LXdlYmtpdC1hbmltYXRpb246c3Bpbm5lci1ib3JkZXIgLjc1cyBsaW5lYXIgaW5maW5pdGU7YW5pbWF0aW9uOnNwaW5uZXItYm9yZGVyIC43NXMgbGluZWFyIGluZmluaXRlfS5zcGlubmVyLWJvcmRlci1zbXt3aWR0aDoxcmVtO2hlaWdodDoxcmVtO2JvcmRlci13aWR0aDowLjJlbX1ALXdlYmtpdC1rZXlmcmFtZXMgc3Bpbm5lci1ncm93ezAley13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDApO3RyYW5zZm9ybTpzY2FsZSgwKX01MCV7b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIHNwaW5uZXItZ3Jvd3swJXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgwKTt0cmFuc2Zvcm06c2NhbGUoMCl9NTAle29wYWNpdHk6MX19LnNwaW5uZXItZ3Jvd3tkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDoycmVtO2hlaWdodDoycmVtO3ZlcnRpY2FsLWFsaWduOnRleHQtYm90dG9tO2JhY2tncm91bmQtY29sb3I6Y3VycmVudENvbG9yO2JvcmRlci1yYWRpdXM6NTAlO29wYWNpdHk6MDstd2Via2l0LWFuaW1hdGlvbjpzcGlubmVyLWdyb3cgLjc1cyBsaW5lYXIgaW5maW5pdGU7YW5pbWF0aW9uOnNwaW5uZXItZ3JvdyAuNzVzIGxpbmVhciBpbmZpbml0ZX0uc3Bpbm5lci1ncm93LXNte3dpZHRoOjFyZW07aGVpZ2h0OjFyZW19LmFsaWduLWJhc2VsaW5le3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lICFpbXBvcnRhbnR9LmFsaWduLXRvcHt2ZXJ0aWNhbC1hbGlnbjp0b3AgIWltcG9ydGFudH0uYWxpZ24tbWlkZGxle3ZlcnRpY2FsLWFsaWduOm1pZGRsZSAhaW1wb3J0YW50fS5hbGlnbi1ib3R0b217dmVydGljYWwtYWxpZ246Ym90dG9tICFpbXBvcnRhbnR9LmFsaWduLXRleHQtYm90dG9te3ZlcnRpY2FsLWFsaWduOnRleHQtYm90dG9tICFpbXBvcnRhbnR9LmFsaWduLXRleHQtdG9we3ZlcnRpY2FsLWFsaWduOnRleHQtdG9wICFpbXBvcnRhbnR9LmJnLXByaW1hcnl7YmFja2dyb3VuZC1jb2xvcjojMDA3YmZmICFpbXBvcnRhbnR9YS5iZy1wcmltYXJ5OmhvdmVyLGEuYmctcHJpbWFyeTpmb2N1cyxidXR0b24uYmctcHJpbWFyeTpob3ZlcixidXR0b24uYmctcHJpbWFyeTpmb2N1c3tiYWNrZ3JvdW5kLWNvbG9yOiMwMDYyY2MgIWltcG9ydGFudH0uYmctc2Vjb25kYXJ5e2JhY2tncm91bmQtY29sb3I6IzZjNzU3ZCAhaW1wb3J0YW50fWEuYmctc2Vjb25kYXJ5OmhvdmVyLGEuYmctc2Vjb25kYXJ5OmZvY3VzLGJ1dHRvbi5iZy1zZWNvbmRhcnk6aG92ZXIsYnV0dG9uLmJnLXNlY29uZGFyeTpmb2N1c3tiYWNrZ3JvdW5kLWNvbG9yOiM1NDViNjIgIWltcG9ydGFudH0uYmctc3VjY2Vzc3tiYWNrZ3JvdW5kLWNvbG9yOiMyOGE3NDUgIWltcG9ydGFudH1hLmJnLXN1Y2Nlc3M6aG92ZXIsYS5iZy1zdWNjZXNzOmZvY3VzLGJ1dHRvbi5iZy1zdWNjZXNzOmhvdmVyLGJ1dHRvbi5iZy1zdWNjZXNzOmZvY3Vze2JhY2tncm91bmQtY29sb3I6IzFlN2UzNCAhaW1wb3J0YW50fS5iZy1pbmZve2JhY2tncm91bmQtY29sb3I6IzE3YTJiOCAhaW1wb3J0YW50fWEuYmctaW5mbzpob3ZlcixhLmJnLWluZm86Zm9jdXMsYnV0dG9uLmJnLWluZm86aG92ZXIsYnV0dG9uLmJnLWluZm86Zm9jdXN7YmFja2dyb3VuZC1jb2xvcjojMTE3YThiICFpbXBvcnRhbnR9LmJnLXdhcm5pbmd7YmFja2dyb3VuZC1jb2xvcjojZmZjMTA3ICFpbXBvcnRhbnR9YS5iZy13YXJuaW5nOmhvdmVyLGEuYmctd2FybmluZzpmb2N1cyxidXR0b24uYmctd2FybmluZzpob3ZlcixidXR0b24uYmctd2FybmluZzpmb2N1c3tiYWNrZ3JvdW5kLWNvbG9yOiNkMzllMDAgIWltcG9ydGFudH0uYmctZGFuZ2Vye2JhY2tncm91bmQtY29sb3I6I2RjMzU0NSAhaW1wb3J0YW50fWEuYmctZGFuZ2VyOmhvdmVyLGEuYmctZGFuZ2VyOmZvY3VzLGJ1dHRvbi5iZy1kYW5nZXI6aG92ZXIsYnV0dG9uLmJnLWRhbmdlcjpmb2N1c3tiYWNrZ3JvdW5kLWNvbG9yOiNiZDIxMzAgIWltcG9ydGFudH0uYmctbGlnaHR7YmFja2dyb3VuZC1jb2xvcjojZjhmOWZhICFpbXBvcnRhbnR9YS5iZy1saWdodDpob3ZlcixhLmJnLWxpZ2h0OmZvY3VzLGJ1dHRvbi5iZy1saWdodDpob3ZlcixidXR0b24uYmctbGlnaHQ6Zm9jdXN7YmFja2dyb3VuZC1jb2xvcjojZGFlMGU1ICFpbXBvcnRhbnR9LmJnLWRhcmt7YmFja2dyb3VuZC1jb2xvcjojMzQzYTQwICFpbXBvcnRhbnR9YS5iZy1kYXJrOmhvdmVyLGEuYmctZGFyazpmb2N1cyxidXR0b24uYmctZGFyazpob3ZlcixidXR0b24uYmctZGFyazpmb2N1c3tiYWNrZ3JvdW5kLWNvbG9yOiMxZDIxMjQgIWltcG9ydGFudH0uYmctd2hpdGV7YmFja2dyb3VuZC1jb2xvcjojZmZmICFpbXBvcnRhbnR9LmJnLXRyYW5zcGFyZW50e2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQgIWltcG9ydGFudH0uYm9yZGVye2JvcmRlcjoxcHggc29saWQgI2RlZTJlNiAhaW1wb3J0YW50fS5ib3JkZXItdG9we2JvcmRlci10b3A6MXB4IHNvbGlkICNkZWUyZTYgIWltcG9ydGFudH0uYm9yZGVyLXJpZ2h0e2JvcmRlci1yaWdodDoxcHggc29saWQgI2RlZTJlNiAhaW1wb3J0YW50fS5ib3JkZXItYm90dG9te2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNkZWUyZTYgIWltcG9ydGFudH0uYm9yZGVyLWxlZnR7Ym9yZGVyLWxlZnQ6MXB4IHNvbGlkICNkZWUyZTYgIWltcG9ydGFudH0uYm9yZGVyLTB7Ym9yZGVyOjAgIWltcG9ydGFudH0uYm9yZGVyLXRvcC0we2JvcmRlci10b3A6MCAhaW1wb3J0YW50fS5ib3JkZXItcmlnaHQtMHtib3JkZXItcmlnaHQ6MCAhaW1wb3J0YW50fS5ib3JkZXItYm90dG9tLTB7Ym9yZGVyLWJvdHRvbTowICFpbXBvcnRhbnR9LmJvcmRlci1sZWZ0LTB7Ym9yZGVyLWxlZnQ6MCAhaW1wb3J0YW50fS5ib3JkZXItcHJpbWFyeXtib3JkZXItY29sb3I6IzAwN2JmZiAhaW1wb3J0YW50fS5ib3JkZXItc2Vjb25kYXJ5e2JvcmRlci1jb2xvcjojNmM3NTdkICFpbXBvcnRhbnR9LmJvcmRlci1zdWNjZXNze2JvcmRlci1jb2xvcjojMjhhNzQ1ICFpbXBvcnRhbnR9LmJvcmRlci1pbmZve2JvcmRlci1jb2xvcjojMTdhMmI4ICFpbXBvcnRhbnR9LmJvcmRlci13YXJuaW5ne2JvcmRlci1jb2xvcjojZmZjMTA3ICFpbXBvcnRhbnR9LmJvcmRlci1kYW5nZXJ7Ym9yZGVyLWNvbG9yOiNkYzM1NDUgIWltcG9ydGFudH0uYm9yZGVyLWxpZ2h0e2JvcmRlci1jb2xvcjojZjhmOWZhICFpbXBvcnRhbnR9LmJvcmRlci1kYXJre2JvcmRlci1jb2xvcjojMzQzYTQwICFpbXBvcnRhbnR9LmJvcmRlci13aGl0ZXtib3JkZXItY29sb3I6I2ZmZiAhaW1wb3J0YW50fS5yb3VuZGVkLXNte2JvcmRlci1yYWRpdXM6MC4ycmVtICFpbXBvcnRhbnR9LnJvdW5kZWR7Ym9yZGVyLXJhZGl1czowLjI1cmVtICFpbXBvcnRhbnR9LnJvdW5kZWQtdG9we2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MC4yNXJlbSAhaW1wb3J0YW50O2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjAuMjVyZW0gIWltcG9ydGFudH0ucm91bmRlZC1yaWdodHtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowLjI1cmVtICFpbXBvcnRhbnQ7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MC4yNXJlbSAhaW1wb3J0YW50fS5yb3VuZGVkLWJvdHRvbXtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czowLjI1cmVtICFpbXBvcnRhbnQ7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowLjI1cmVtICFpbXBvcnRhbnR9LnJvdW5kZWQtbGVmdHtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjAuMjVyZW0gIWltcG9ydGFudDtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjAuMjVyZW0gIWltcG9ydGFudH0ucm91bmRlZC1sZ3tib3JkZXItcmFkaXVzOjAuM3JlbSAhaW1wb3J0YW50fS5yb3VuZGVkLWNpcmNsZXtib3JkZXItcmFkaXVzOjUwJSAhaW1wb3J0YW50fS5yb3VuZGVkLXBpbGx7Ym9yZGVyLXJhZGl1czo1MHJlbSAhaW1wb3J0YW50fS5yb3VuZGVkLTB7Ym9yZGVyLXJhZGl1czowICFpbXBvcnRhbnR9LmNsZWFyZml4OjphZnRlcntkaXNwbGF5OmJsb2NrO2NsZWFyOmJvdGg7Y29udGVudDpcXFwiXFxcIn0uZC1ub25le2Rpc3BsYXk6bm9uZSAhaW1wb3J0YW50fS5kLWlubGluZXtkaXNwbGF5OmlubGluZSAhaW1wb3J0YW50fS5kLWlubGluZS1ibG9ja3tkaXNwbGF5OmlubGluZS1ibG9jayAhaW1wb3J0YW50fS5kLWJsb2Nre2Rpc3BsYXk6YmxvY2sgIWltcG9ydGFudH0uZC10YWJsZXtkaXNwbGF5OnRhYmxlICFpbXBvcnRhbnR9LmQtdGFibGUtcm93e2Rpc3BsYXk6dGFibGUtcm93ICFpbXBvcnRhbnR9LmQtdGFibGUtY2VsbHtkaXNwbGF5OnRhYmxlLWNlbGwgIWltcG9ydGFudH0uZC1mbGV4e2Rpc3BsYXk6LW1zLWZsZXhib3ggIWltcG9ydGFudDtkaXNwbGF5OmZsZXggIWltcG9ydGFudH0uZC1pbmxpbmUtZmxleHtkaXNwbGF5Oi1tcy1pbmxpbmUtZmxleGJveCAhaW1wb3J0YW50O2Rpc3BsYXk6aW5saW5lLWZsZXggIWltcG9ydGFudH1AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpey5kLXNtLW5vbmV7ZGlzcGxheTpub25lICFpbXBvcnRhbnR9LmQtc20taW5saW5le2Rpc3BsYXk6aW5saW5lICFpbXBvcnRhbnR9LmQtc20taW5saW5lLWJsb2Nre2Rpc3BsYXk6aW5saW5lLWJsb2NrICFpbXBvcnRhbnR9LmQtc20tYmxvY2t7ZGlzcGxheTpibG9jayAhaW1wb3J0YW50fS5kLXNtLXRhYmxle2Rpc3BsYXk6dGFibGUgIWltcG9ydGFudH0uZC1zbS10YWJsZS1yb3d7ZGlzcGxheTp0YWJsZS1yb3cgIWltcG9ydGFudH0uZC1zbS10YWJsZS1jZWxse2Rpc3BsYXk6dGFibGUtY2VsbCAhaW1wb3J0YW50fS5kLXNtLWZsZXh7ZGlzcGxheTotbXMtZmxleGJveCAhaW1wb3J0YW50O2Rpc3BsYXk6ZmxleCAhaW1wb3J0YW50fS5kLXNtLWlubGluZS1mbGV4e2Rpc3BsYXk6LW1zLWlubGluZS1mbGV4Ym94ICFpbXBvcnRhbnQ7ZGlzcGxheTppbmxpbmUtZmxleCAhaW1wb3J0YW50fX1AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpey5kLW1kLW5vbmV7ZGlzcGxheTpub25lICFpbXBvcnRhbnR9LmQtbWQtaW5saW5le2Rpc3BsYXk6aW5saW5lICFpbXBvcnRhbnR9LmQtbWQtaW5saW5lLWJsb2Nre2Rpc3BsYXk6aW5saW5lLWJsb2NrICFpbXBvcnRhbnR9LmQtbWQtYmxvY2t7ZGlzcGxheTpibG9jayAhaW1wb3J0YW50fS5kLW1kLXRhYmxle2Rpc3BsYXk6dGFibGUgIWltcG9ydGFudH0uZC1tZC10YWJsZS1yb3d7ZGlzcGxheTp0YWJsZS1yb3cgIWltcG9ydGFudH0uZC1tZC10YWJsZS1jZWxse2Rpc3BsYXk6dGFibGUtY2VsbCAhaW1wb3J0YW50fS5kLW1kLWZsZXh7ZGlzcGxheTotbXMtZmxleGJveCAhaW1wb3J0YW50O2Rpc3BsYXk6ZmxleCAhaW1wb3J0YW50fS5kLW1kLWlubGluZS1mbGV4e2Rpc3BsYXk6LW1zLWlubGluZS1mbGV4Ym94ICFpbXBvcnRhbnQ7ZGlzcGxheTppbmxpbmUtZmxleCAhaW1wb3J0YW50fX1AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpey5kLWxnLW5vbmV7ZGlzcGxheTpub25lICFpbXBvcnRhbnR9LmQtbGctaW5saW5le2Rpc3BsYXk6aW5saW5lICFpbXBvcnRhbnR9LmQtbGctaW5saW5lLWJsb2Nre2Rpc3BsYXk6aW5saW5lLWJsb2NrICFpbXBvcnRhbnR9LmQtbGctYmxvY2t7ZGlzcGxheTpibG9jayAhaW1wb3J0YW50fS5kLWxnLXRhYmxle2Rpc3BsYXk6dGFibGUgIWltcG9ydGFudH0uZC1sZy10YWJsZS1yb3d7ZGlzcGxheTp0YWJsZS1yb3cgIWltcG9ydGFudH0uZC1sZy10YWJsZS1jZWxse2Rpc3BsYXk6dGFibGUtY2VsbCAhaW1wb3J0YW50fS5kLWxnLWZsZXh7ZGlzcGxheTotbXMtZmxleGJveCAhaW1wb3J0YW50O2Rpc3BsYXk6ZmxleCAhaW1wb3J0YW50fS5kLWxnLWlubGluZS1mbGV4e2Rpc3BsYXk6LW1zLWlubGluZS1mbGV4Ym94ICFpbXBvcnRhbnQ7ZGlzcGxheTppbmxpbmUtZmxleCAhaW1wb3J0YW50fX1AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KXsuZC14bC1ub25le2Rpc3BsYXk6bm9uZSAhaW1wb3J0YW50fS5kLXhsLWlubGluZXtkaXNwbGF5OmlubGluZSAhaW1wb3J0YW50fS5kLXhsLWlubGluZS1ibG9ja3tkaXNwbGF5OmlubGluZS1ibG9jayAhaW1wb3J0YW50fS5kLXhsLWJsb2Nre2Rpc3BsYXk6YmxvY2sgIWltcG9ydGFudH0uZC14bC10YWJsZXtkaXNwbGF5OnRhYmxlICFpbXBvcnRhbnR9LmQteGwtdGFibGUtcm93e2Rpc3BsYXk6dGFibGUtcm93ICFpbXBvcnRhbnR9LmQteGwtdGFibGUtY2VsbHtkaXNwbGF5OnRhYmxlLWNlbGwgIWltcG9ydGFudH0uZC14bC1mbGV4e2Rpc3BsYXk6LW1zLWZsZXhib3ggIWltcG9ydGFudDtkaXNwbGF5OmZsZXggIWltcG9ydGFudH0uZC14bC1pbmxpbmUtZmxleHtkaXNwbGF5Oi1tcy1pbmxpbmUtZmxleGJveCAhaW1wb3J0YW50O2Rpc3BsYXk6aW5saW5lLWZsZXggIWltcG9ydGFudH19QG1lZGlhIHByaW50ey5kLXByaW50LW5vbmV7ZGlzcGxheTpub25lICFpbXBvcnRhbnR9LmQtcHJpbnQtaW5saW5le2Rpc3BsYXk6aW5saW5lICFpbXBvcnRhbnR9LmQtcHJpbnQtaW5saW5lLWJsb2Nre2Rpc3BsYXk6aW5saW5lLWJsb2NrICFpbXBvcnRhbnR9LmQtcHJpbnQtYmxvY2t7ZGlzcGxheTpibG9jayAhaW1wb3J0YW50fS5kLXByaW50LXRhYmxle2Rpc3BsYXk6dGFibGUgIWltcG9ydGFudH0uZC1wcmludC10YWJsZS1yb3d7ZGlzcGxheTp0YWJsZS1yb3cgIWltcG9ydGFudH0uZC1wcmludC10YWJsZS1jZWxse2Rpc3BsYXk6dGFibGUtY2VsbCAhaW1wb3J0YW50fS5kLXByaW50LWZsZXh7ZGlzcGxheTotbXMtZmxleGJveCAhaW1wb3J0YW50O2Rpc3BsYXk6ZmxleCAhaW1wb3J0YW50fS5kLXByaW50LWlubGluZS1mbGV4e2Rpc3BsYXk6LW1zLWlubGluZS1mbGV4Ym94ICFpbXBvcnRhbnQ7ZGlzcGxheTppbmxpbmUtZmxleCAhaW1wb3J0YW50fX0uZW1iZWQtcmVzcG9uc2l2ZXtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCU7cGFkZGluZzowO292ZXJmbG93OmhpZGRlbn0uZW1iZWQtcmVzcG9uc2l2ZTo6YmVmb3Jle2Rpc3BsYXk6YmxvY2s7Y29udGVudDpcXFwiXFxcIn0uZW1iZWQtcmVzcG9uc2l2ZSAuZW1iZWQtcmVzcG9uc2l2ZS1pdGVtLC5lbWJlZC1yZXNwb25zaXZlIGlmcmFtZSwuZW1iZWQtcmVzcG9uc2l2ZSBlbWJlZCwuZW1iZWQtcmVzcG9uc2l2ZSBvYmplY3QsLmVtYmVkLXJlc3BvbnNpdmUgdmlkZW97cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7Ym90dG9tOjA7bGVmdDowO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7Ym9yZGVyOjB9LmVtYmVkLXJlc3BvbnNpdmUtMjFieTk6OmJlZm9yZXtwYWRkaW5nLXRvcDo0Mi44NTcxNDMlfS5lbWJlZC1yZXNwb25zaXZlLTE2Ynk5OjpiZWZvcmV7cGFkZGluZy10b3A6NTYuMjUlfS5lbWJlZC1yZXNwb25zaXZlLTRieTM6OmJlZm9yZXtwYWRkaW5nLXRvcDo3NSV9LmVtYmVkLXJlc3BvbnNpdmUtMWJ5MTo6YmVmb3Jle3BhZGRpbmctdG9wOjEwMCV9LmZsZXgtcm93ey1tcy1mbGV4LWRpcmVjdGlvbjpyb3cgIWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpyb3cgIWltcG9ydGFudH0uZmxleC1jb2x1bW57LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbiAhaW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbiAhaW1wb3J0YW50fS5mbGV4LXJvdy1yZXZlcnNley1tcy1mbGV4LWRpcmVjdGlvbjpyb3ctcmV2ZXJzZSAhaW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOnJvdy1yZXZlcnNlICFpbXBvcnRhbnR9LmZsZXgtY29sdW1uLXJldmVyc2V7LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbi1yZXZlcnNlICFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246Y29sdW1uLXJldmVyc2UgIWltcG9ydGFudH0uZmxleC13cmFwey1tcy1mbGV4LXdyYXA6d3JhcCAhaW1wb3J0YW50O2ZsZXgtd3JhcDp3cmFwICFpbXBvcnRhbnR9LmZsZXgtbm93cmFwey1tcy1mbGV4LXdyYXA6bm93cmFwICFpbXBvcnRhbnQ7ZmxleC13cmFwOm5vd3JhcCAhaW1wb3J0YW50fS5mbGV4LXdyYXAtcmV2ZXJzZXstbXMtZmxleC13cmFwOndyYXAtcmV2ZXJzZSAhaW1wb3J0YW50O2ZsZXgtd3JhcDp3cmFwLXJldmVyc2UgIWltcG9ydGFudH0uZmxleC1maWxsey1tcy1mbGV4OjEgMSBhdXRvICFpbXBvcnRhbnQ7ZmxleDoxIDEgYXV0byAhaW1wb3J0YW50fS5mbGV4LWdyb3ctMHstbXMtZmxleC1wb3NpdGl2ZTowICFpbXBvcnRhbnQ7ZmxleC1ncm93OjAgIWltcG9ydGFudH0uZmxleC1ncm93LTF7LW1zLWZsZXgtcG9zaXRpdmU6MSAhaW1wb3J0YW50O2ZsZXgtZ3JvdzoxICFpbXBvcnRhbnR9LmZsZXgtc2hyaW5rLTB7LW1zLWZsZXgtbmVnYXRpdmU6MCAhaW1wb3J0YW50O2ZsZXgtc2hyaW5rOjAgIWltcG9ydGFudH0uZmxleC1zaHJpbmstMXstbXMtZmxleC1uZWdhdGl2ZToxICFpbXBvcnRhbnQ7ZmxleC1zaHJpbms6MSAhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtc3RhcnR7LW1zLWZsZXgtcGFjazpzdGFydCAhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0ICFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1lbmR7LW1zLWZsZXgtcGFjazplbmQgIWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmQgIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LWNlbnRlcnstbXMtZmxleC1wYWNrOmNlbnRlciAhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpjZW50ZXIgIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LWJldHdlZW57LW1zLWZsZXgtcGFjazpqdXN0aWZ5ICFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW4gIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LWFyb3VuZHstbXMtZmxleC1wYWNrOmRpc3RyaWJ1dGUgIWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kICFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLXN0YXJ0ey1tcy1mbGV4LWFsaWduOnN0YXJ0ICFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydCAhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1lbmR7LW1zLWZsZXgtYWxpZ246ZW5kICFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6ZmxleC1lbmQgIWltcG9ydGFudH0uYWxpZ24taXRlbXMtY2VudGVyey1tcy1mbGV4LWFsaWduOmNlbnRlciAhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmNlbnRlciAhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1iYXNlbGluZXstbXMtZmxleC1hbGlnbjpiYXNlbGluZSAhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmJhc2VsaW5lICFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLXN0cmV0Y2h7LW1zLWZsZXgtYWxpZ246c3RyZXRjaCAhaW1wb3J0YW50O2FsaWduLWl0ZW1zOnN0cmV0Y2ggIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1zdGFydHstbXMtZmxleC1saW5lLXBhY2s6c3RhcnQgIWltcG9ydGFudDthbGlnbi1jb250ZW50OmZsZXgtc3RhcnQgIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1lbmR7LW1zLWZsZXgtbGluZS1wYWNrOmVuZCAhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6ZmxleC1lbmQgIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1jZW50ZXJ7LW1zLWZsZXgtbGluZS1wYWNrOmNlbnRlciAhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6Y2VudGVyICFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtYmV0d2VlbnstbXMtZmxleC1saW5lLXBhY2s6anVzdGlmeSAhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6c3BhY2UtYmV0d2VlbiAhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LWFyb3VuZHstbXMtZmxleC1saW5lLXBhY2s6ZGlzdHJpYnV0ZSAhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6c3BhY2UtYXJvdW5kICFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtc3RyZXRjaHstbXMtZmxleC1saW5lLXBhY2s6c3RyZXRjaCAhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6c3RyZXRjaCAhaW1wb3J0YW50fS5hbGlnbi1zZWxmLWF1dG97LW1zLWZsZXgtaXRlbS1hbGlnbjphdXRvICFpbXBvcnRhbnQ7YWxpZ24tc2VsZjphdXRvICFpbXBvcnRhbnR9LmFsaWduLXNlbGYtc3RhcnR7LW1zLWZsZXgtaXRlbS1hbGlnbjpzdGFydCAhaW1wb3J0YW50O2FsaWduLXNlbGY6ZmxleC1zdGFydCAhaW1wb3J0YW50fS5hbGlnbi1zZWxmLWVuZHstbXMtZmxleC1pdGVtLWFsaWduOmVuZCAhaW1wb3J0YW50O2FsaWduLXNlbGY6ZmxleC1lbmQgIWltcG9ydGFudH0uYWxpZ24tc2VsZi1jZW50ZXJ7LW1zLWZsZXgtaXRlbS1hbGlnbjpjZW50ZXIgIWltcG9ydGFudDthbGlnbi1zZWxmOmNlbnRlciAhaW1wb3J0YW50fS5hbGlnbi1zZWxmLWJhc2VsaW5ley1tcy1mbGV4LWl0ZW0tYWxpZ246YmFzZWxpbmUgIWltcG9ydGFudDthbGlnbi1zZWxmOmJhc2VsaW5lICFpbXBvcnRhbnR9LmFsaWduLXNlbGYtc3RyZXRjaHstbXMtZmxleC1pdGVtLWFsaWduOnN0cmV0Y2ggIWltcG9ydGFudDthbGlnbi1zZWxmOnN0cmV0Y2ggIWltcG9ydGFudH1AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpey5mbGV4LXNtLXJvd3stbXMtZmxleC1kaXJlY3Rpb246cm93ICFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246cm93ICFpbXBvcnRhbnR9LmZsZXgtc20tY29sdW1uey1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW4gIWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpjb2x1bW4gIWltcG9ydGFudH0uZmxleC1zbS1yb3ctcmV2ZXJzZXstbXMtZmxleC1kaXJlY3Rpb246cm93LXJldmVyc2UgIWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpyb3ctcmV2ZXJzZSAhaW1wb3J0YW50fS5mbGV4LXNtLWNvbHVtbi1yZXZlcnNley1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW4tcmV2ZXJzZSAhaW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbi1yZXZlcnNlICFpbXBvcnRhbnR9LmZsZXgtc20td3JhcHstbXMtZmxleC13cmFwOndyYXAgIWltcG9ydGFudDtmbGV4LXdyYXA6d3JhcCAhaW1wb3J0YW50fS5mbGV4LXNtLW5vd3JhcHstbXMtZmxleC13cmFwOm5vd3JhcCAhaW1wb3J0YW50O2ZsZXgtd3JhcDpub3dyYXAgIWltcG9ydGFudH0uZmxleC1zbS13cmFwLXJldmVyc2V7LW1zLWZsZXgtd3JhcDp3cmFwLXJldmVyc2UgIWltcG9ydGFudDtmbGV4LXdyYXA6d3JhcC1yZXZlcnNlICFpbXBvcnRhbnR9LmZsZXgtc20tZmlsbHstbXMtZmxleDoxIDEgYXV0byAhaW1wb3J0YW50O2ZsZXg6MSAxIGF1dG8gIWltcG9ydGFudH0uZmxleC1zbS1ncm93LTB7LW1zLWZsZXgtcG9zaXRpdmU6MCAhaW1wb3J0YW50O2ZsZXgtZ3JvdzowICFpbXBvcnRhbnR9LmZsZXgtc20tZ3Jvdy0xey1tcy1mbGV4LXBvc2l0aXZlOjEgIWltcG9ydGFudDtmbGV4LWdyb3c6MSAhaW1wb3J0YW50fS5mbGV4LXNtLXNocmluay0wey1tcy1mbGV4LW5lZ2F0aXZlOjAgIWltcG9ydGFudDtmbGV4LXNocmluazowICFpbXBvcnRhbnR9LmZsZXgtc20tc2hyaW5rLTF7LW1zLWZsZXgtbmVnYXRpdmU6MSAhaW1wb3J0YW50O2ZsZXgtc2hyaW5rOjEgIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LXNtLXN0YXJ0ey1tcy1mbGV4LXBhY2s6c3RhcnQgIWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydCAhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtc20tZW5key1tcy1mbGV4LXBhY2s6ZW5kICFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OmZsZXgtZW5kICFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1zbS1jZW50ZXJ7LW1zLWZsZXgtcGFjazpjZW50ZXIgIWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyICFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1zbS1iZXR3ZWVuey1tcy1mbGV4LXBhY2s6anVzdGlmeSAhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuICFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1zbS1hcm91bmR7LW1zLWZsZXgtcGFjazpkaXN0cmlidXRlICFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OnNwYWNlLWFyb3VuZCAhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1zbS1zdGFydHstbXMtZmxleC1hbGlnbjpzdGFydCAhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmZsZXgtc3RhcnQgIWltcG9ydGFudH0uYWxpZ24taXRlbXMtc20tZW5key1tcy1mbGV4LWFsaWduOmVuZCAhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmZsZXgtZW5kICFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLXNtLWNlbnRlcnstbXMtZmxleC1hbGlnbjpjZW50ZXIgIWltcG9ydGFudDthbGlnbi1pdGVtczpjZW50ZXIgIWltcG9ydGFudH0uYWxpZ24taXRlbXMtc20tYmFzZWxpbmV7LW1zLWZsZXgtYWxpZ246YmFzZWxpbmUgIWltcG9ydGFudDthbGlnbi1pdGVtczpiYXNlbGluZSAhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1zbS1zdHJldGNoey1tcy1mbGV4LWFsaWduOnN0cmV0Y2ggIWltcG9ydGFudDthbGlnbi1pdGVtczpzdHJldGNoICFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtc20tc3RhcnR7LW1zLWZsZXgtbGluZS1wYWNrOnN0YXJ0ICFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpmbGV4LXN0YXJ0ICFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtc20tZW5key1tcy1mbGV4LWxpbmUtcGFjazplbmQgIWltcG9ydGFudDthbGlnbi1jb250ZW50OmZsZXgtZW5kICFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtc20tY2VudGVyey1tcy1mbGV4LWxpbmUtcGFjazpjZW50ZXIgIWltcG9ydGFudDthbGlnbi1jb250ZW50OmNlbnRlciAhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LXNtLWJldHdlZW57LW1zLWZsZXgtbGluZS1wYWNrOmp1c3RpZnkgIWltcG9ydGFudDthbGlnbi1jb250ZW50OnNwYWNlLWJldHdlZW4gIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1zbS1hcm91bmR7LW1zLWZsZXgtbGluZS1wYWNrOmRpc3RyaWJ1dGUgIWltcG9ydGFudDthbGlnbi1jb250ZW50OnNwYWNlLWFyb3VuZCAhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LXNtLXN0cmV0Y2h7LW1zLWZsZXgtbGluZS1wYWNrOnN0cmV0Y2ggIWltcG9ydGFudDthbGlnbi1jb250ZW50OnN0cmV0Y2ggIWltcG9ydGFudH0uYWxpZ24tc2VsZi1zbS1hdXRvey1tcy1mbGV4LWl0ZW0tYWxpZ246YXV0byAhaW1wb3J0YW50O2FsaWduLXNlbGY6YXV0byAhaW1wb3J0YW50fS5hbGlnbi1zZWxmLXNtLXN0YXJ0ey1tcy1mbGV4LWl0ZW0tYWxpZ246c3RhcnQgIWltcG9ydGFudDthbGlnbi1zZWxmOmZsZXgtc3RhcnQgIWltcG9ydGFudH0uYWxpZ24tc2VsZi1zbS1lbmR7LW1zLWZsZXgtaXRlbS1hbGlnbjplbmQgIWltcG9ydGFudDthbGlnbi1zZWxmOmZsZXgtZW5kICFpbXBvcnRhbnR9LmFsaWduLXNlbGYtc20tY2VudGVyey1tcy1mbGV4LWl0ZW0tYWxpZ246Y2VudGVyICFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpjZW50ZXIgIWltcG9ydGFudH0uYWxpZ24tc2VsZi1zbS1iYXNlbGluZXstbXMtZmxleC1pdGVtLWFsaWduOmJhc2VsaW5lICFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpiYXNlbGluZSAhaW1wb3J0YW50fS5hbGlnbi1zZWxmLXNtLXN0cmV0Y2h7LW1zLWZsZXgtaXRlbS1hbGlnbjpzdHJldGNoICFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpzdHJldGNoICFpbXBvcnRhbnR9fUBtZWRpYSAobWluLXdpZHRoOiA3NjhweCl7LmZsZXgtbWQtcm93ey1tcy1mbGV4LWRpcmVjdGlvbjpyb3cgIWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpyb3cgIWltcG9ydGFudH0uZmxleC1tZC1jb2x1bW57LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbiAhaW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbiAhaW1wb3J0YW50fS5mbGV4LW1kLXJvdy1yZXZlcnNley1tcy1mbGV4LWRpcmVjdGlvbjpyb3ctcmV2ZXJzZSAhaW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOnJvdy1yZXZlcnNlICFpbXBvcnRhbnR9LmZsZXgtbWQtY29sdW1uLXJldmVyc2V7LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbi1yZXZlcnNlICFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246Y29sdW1uLXJldmVyc2UgIWltcG9ydGFudH0uZmxleC1tZC13cmFwey1tcy1mbGV4LXdyYXA6d3JhcCAhaW1wb3J0YW50O2ZsZXgtd3JhcDp3cmFwICFpbXBvcnRhbnR9LmZsZXgtbWQtbm93cmFwey1tcy1mbGV4LXdyYXA6bm93cmFwICFpbXBvcnRhbnQ7ZmxleC13cmFwOm5vd3JhcCAhaW1wb3J0YW50fS5mbGV4LW1kLXdyYXAtcmV2ZXJzZXstbXMtZmxleC13cmFwOndyYXAtcmV2ZXJzZSAhaW1wb3J0YW50O2ZsZXgtd3JhcDp3cmFwLXJldmVyc2UgIWltcG9ydGFudH0uZmxleC1tZC1maWxsey1tcy1mbGV4OjEgMSBhdXRvICFpbXBvcnRhbnQ7ZmxleDoxIDEgYXV0byAhaW1wb3J0YW50fS5mbGV4LW1kLWdyb3ctMHstbXMtZmxleC1wb3NpdGl2ZTowICFpbXBvcnRhbnQ7ZmxleC1ncm93OjAgIWltcG9ydGFudH0uZmxleC1tZC1ncm93LTF7LW1zLWZsZXgtcG9zaXRpdmU6MSAhaW1wb3J0YW50O2ZsZXgtZ3JvdzoxICFpbXBvcnRhbnR9LmZsZXgtbWQtc2hyaW5rLTB7LW1zLWZsZXgtbmVnYXRpdmU6MCAhaW1wb3J0YW50O2ZsZXgtc2hyaW5rOjAgIWltcG9ydGFudH0uZmxleC1tZC1zaHJpbmstMXstbXMtZmxleC1uZWdhdGl2ZToxICFpbXBvcnRhbnQ7ZmxleC1zaHJpbms6MSAhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtbWQtc3RhcnR7LW1zLWZsZXgtcGFjazpzdGFydCAhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0ICFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1tZC1lbmR7LW1zLWZsZXgtcGFjazplbmQgIWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmQgIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LW1kLWNlbnRlcnstbXMtZmxleC1wYWNrOmNlbnRlciAhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpjZW50ZXIgIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LW1kLWJldHdlZW57LW1zLWZsZXgtcGFjazpqdXN0aWZ5ICFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW4gIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LW1kLWFyb3VuZHstbXMtZmxleC1wYWNrOmRpc3RyaWJ1dGUgIWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kICFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLW1kLXN0YXJ0ey1tcy1mbGV4LWFsaWduOnN0YXJ0ICFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydCAhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1tZC1lbmR7LW1zLWZsZXgtYWxpZ246ZW5kICFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6ZmxleC1lbmQgIWltcG9ydGFudH0uYWxpZ24taXRlbXMtbWQtY2VudGVyey1tcy1mbGV4LWFsaWduOmNlbnRlciAhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmNlbnRlciAhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1tZC1iYXNlbGluZXstbXMtZmxleC1hbGlnbjpiYXNlbGluZSAhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmJhc2VsaW5lICFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLW1kLXN0cmV0Y2h7LW1zLWZsZXgtYWxpZ246c3RyZXRjaCAhaW1wb3J0YW50O2FsaWduLWl0ZW1zOnN0cmV0Y2ggIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1tZC1zdGFydHstbXMtZmxleC1saW5lLXBhY2s6c3RhcnQgIWltcG9ydGFudDthbGlnbi1jb250ZW50OmZsZXgtc3RhcnQgIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1tZC1lbmR7LW1zLWZsZXgtbGluZS1wYWNrOmVuZCAhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6ZmxleC1lbmQgIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1tZC1jZW50ZXJ7LW1zLWZsZXgtbGluZS1wYWNrOmNlbnRlciAhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6Y2VudGVyICFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtbWQtYmV0d2VlbnstbXMtZmxleC1saW5lLXBhY2s6anVzdGlmeSAhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6c3BhY2UtYmV0d2VlbiAhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LW1kLWFyb3VuZHstbXMtZmxleC1saW5lLXBhY2s6ZGlzdHJpYnV0ZSAhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6c3BhY2UtYXJvdW5kICFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtbWQtc3RyZXRjaHstbXMtZmxleC1saW5lLXBhY2s6c3RyZXRjaCAhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6c3RyZXRjaCAhaW1wb3J0YW50fS5hbGlnbi1zZWxmLW1kLWF1dG97LW1zLWZsZXgtaXRlbS1hbGlnbjphdXRvICFpbXBvcnRhbnQ7YWxpZ24tc2VsZjphdXRvICFpbXBvcnRhbnR9LmFsaWduLXNlbGYtbWQtc3RhcnR7LW1zLWZsZXgtaXRlbS1hbGlnbjpzdGFydCAhaW1wb3J0YW50O2FsaWduLXNlbGY6ZmxleC1zdGFydCAhaW1wb3J0YW50fS5hbGlnbi1zZWxmLW1kLWVuZHstbXMtZmxleC1pdGVtLWFsaWduOmVuZCAhaW1wb3J0YW50O2FsaWduLXNlbGY6ZmxleC1lbmQgIWltcG9ydGFudH0uYWxpZ24tc2VsZi1tZC1jZW50ZXJ7LW1zLWZsZXgtaXRlbS1hbGlnbjpjZW50ZXIgIWltcG9ydGFudDthbGlnbi1zZWxmOmNlbnRlciAhaW1wb3J0YW50fS5hbGlnbi1zZWxmLW1kLWJhc2VsaW5ley1tcy1mbGV4LWl0ZW0tYWxpZ246YmFzZWxpbmUgIWltcG9ydGFudDthbGlnbi1zZWxmOmJhc2VsaW5lICFpbXBvcnRhbnR9LmFsaWduLXNlbGYtbWQtc3RyZXRjaHstbXMtZmxleC1pdGVtLWFsaWduOnN0cmV0Y2ggIWltcG9ydGFudDthbGlnbi1zZWxmOnN0cmV0Y2ggIWltcG9ydGFudH19QG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KXsuZmxleC1sZy1yb3d7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdyAhaW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOnJvdyAhaW1wb3J0YW50fS5mbGV4LWxnLWNvbHVtbnstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uICFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246Y29sdW1uICFpbXBvcnRhbnR9LmZsZXgtbGctcm93LXJldmVyc2V7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdy1yZXZlcnNlICFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246cm93LXJldmVyc2UgIWltcG9ydGFudH0uZmxleC1sZy1jb2x1bW4tcmV2ZXJzZXstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uLXJldmVyc2UgIWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpjb2x1bW4tcmV2ZXJzZSAhaW1wb3J0YW50fS5mbGV4LWxnLXdyYXB7LW1zLWZsZXgtd3JhcDp3cmFwICFpbXBvcnRhbnQ7ZmxleC13cmFwOndyYXAgIWltcG9ydGFudH0uZmxleC1sZy1ub3dyYXB7LW1zLWZsZXgtd3JhcDpub3dyYXAgIWltcG9ydGFudDtmbGV4LXdyYXA6bm93cmFwICFpbXBvcnRhbnR9LmZsZXgtbGctd3JhcC1yZXZlcnNley1tcy1mbGV4LXdyYXA6d3JhcC1yZXZlcnNlICFpbXBvcnRhbnQ7ZmxleC13cmFwOndyYXAtcmV2ZXJzZSAhaW1wb3J0YW50fS5mbGV4LWxnLWZpbGx7LW1zLWZsZXg6MSAxIGF1dG8gIWltcG9ydGFudDtmbGV4OjEgMSBhdXRvICFpbXBvcnRhbnR9LmZsZXgtbGctZ3Jvdy0wey1tcy1mbGV4LXBvc2l0aXZlOjAgIWltcG9ydGFudDtmbGV4LWdyb3c6MCAhaW1wb3J0YW50fS5mbGV4LWxnLWdyb3ctMXstbXMtZmxleC1wb3NpdGl2ZToxICFpbXBvcnRhbnQ7ZmxleC1ncm93OjEgIWltcG9ydGFudH0uZmxleC1sZy1zaHJpbmstMHstbXMtZmxleC1uZWdhdGl2ZTowICFpbXBvcnRhbnQ7ZmxleC1zaHJpbms6MCAhaW1wb3J0YW50fS5mbGV4LWxnLXNocmluay0xey1tcy1mbGV4LW5lZ2F0aXZlOjEgIWltcG9ydGFudDtmbGV4LXNocmluazoxICFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1sZy1zdGFydHstbXMtZmxleC1wYWNrOnN0YXJ0ICFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQgIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LWxnLWVuZHstbXMtZmxleC1wYWNrOmVuZCAhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpmbGV4LWVuZCAhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtbGctY2VudGVyey1tcy1mbGV4LXBhY2s6Y2VudGVyICFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OmNlbnRlciAhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtbGctYmV0d2VlbnstbXMtZmxleC1wYWNrOmp1c3RpZnkgIWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbiAhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtbGctYXJvdW5key1tcy1mbGV4LXBhY2s6ZGlzdHJpYnV0ZSAhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpzcGFjZS1hcm91bmQgIWltcG9ydGFudH0uYWxpZ24taXRlbXMtbGctc3RhcnR7LW1zLWZsZXgtYWxpZ246c3RhcnQgIWltcG9ydGFudDthbGlnbi1pdGVtczpmbGV4LXN0YXJ0ICFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLWxnLWVuZHstbXMtZmxleC1hbGlnbjplbmQgIWltcG9ydGFudDthbGlnbi1pdGVtczpmbGV4LWVuZCAhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1sZy1jZW50ZXJ7LW1zLWZsZXgtYWxpZ246Y2VudGVyICFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6Y2VudGVyICFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLWxnLWJhc2VsaW5ley1tcy1mbGV4LWFsaWduOmJhc2VsaW5lICFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6YmFzZWxpbmUgIWltcG9ydGFudH0uYWxpZ24taXRlbXMtbGctc3RyZXRjaHstbXMtZmxleC1hbGlnbjpzdHJldGNoICFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6c3RyZXRjaCAhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LWxnLXN0YXJ0ey1tcy1mbGV4LWxpbmUtcGFjazpzdGFydCAhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6ZmxleC1zdGFydCAhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LWxnLWVuZHstbXMtZmxleC1saW5lLXBhY2s6ZW5kICFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpmbGV4LWVuZCAhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LWxnLWNlbnRlcnstbXMtZmxleC1saW5lLXBhY2s6Y2VudGVyICFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpjZW50ZXIgIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1sZy1iZXR3ZWVuey1tcy1mbGV4LWxpbmUtcGFjazpqdXN0aWZ5ICFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpzcGFjZS1iZXR3ZWVuICFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtbGctYXJvdW5key1tcy1mbGV4LWxpbmUtcGFjazpkaXN0cmlidXRlICFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpzcGFjZS1hcm91bmQgIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1sZy1zdHJldGNoey1tcy1mbGV4LWxpbmUtcGFjazpzdHJldGNoICFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpzdHJldGNoICFpbXBvcnRhbnR9LmFsaWduLXNlbGYtbGctYXV0b3stbXMtZmxleC1pdGVtLWFsaWduOmF1dG8gIWltcG9ydGFudDthbGlnbi1zZWxmOmF1dG8gIWltcG9ydGFudH0uYWxpZ24tc2VsZi1sZy1zdGFydHstbXMtZmxleC1pdGVtLWFsaWduOnN0YXJ0ICFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpmbGV4LXN0YXJ0ICFpbXBvcnRhbnR9LmFsaWduLXNlbGYtbGctZW5key1tcy1mbGV4LWl0ZW0tYWxpZ246ZW5kICFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpmbGV4LWVuZCAhaW1wb3J0YW50fS5hbGlnbi1zZWxmLWxnLWNlbnRlcnstbXMtZmxleC1pdGVtLWFsaWduOmNlbnRlciAhaW1wb3J0YW50O2FsaWduLXNlbGY6Y2VudGVyICFpbXBvcnRhbnR9LmFsaWduLXNlbGYtbGctYmFzZWxpbmV7LW1zLWZsZXgtaXRlbS1hbGlnbjpiYXNlbGluZSAhaW1wb3J0YW50O2FsaWduLXNlbGY6YmFzZWxpbmUgIWltcG9ydGFudH0uYWxpZ24tc2VsZi1sZy1zdHJldGNoey1tcy1mbGV4LWl0ZW0tYWxpZ246c3RyZXRjaCAhaW1wb3J0YW50O2FsaWduLXNlbGY6c3RyZXRjaCAhaW1wb3J0YW50fX1AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KXsuZmxleC14bC1yb3d7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdyAhaW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOnJvdyAhaW1wb3J0YW50fS5mbGV4LXhsLWNvbHVtbnstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uICFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246Y29sdW1uICFpbXBvcnRhbnR9LmZsZXgteGwtcm93LXJldmVyc2V7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdy1yZXZlcnNlICFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246cm93LXJldmVyc2UgIWltcG9ydGFudH0uZmxleC14bC1jb2x1bW4tcmV2ZXJzZXstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uLXJldmVyc2UgIWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpjb2x1bW4tcmV2ZXJzZSAhaW1wb3J0YW50fS5mbGV4LXhsLXdyYXB7LW1zLWZsZXgtd3JhcDp3cmFwICFpbXBvcnRhbnQ7ZmxleC13cmFwOndyYXAgIWltcG9ydGFudH0uZmxleC14bC1ub3dyYXB7LW1zLWZsZXgtd3JhcDpub3dyYXAgIWltcG9ydGFudDtmbGV4LXdyYXA6bm93cmFwICFpbXBvcnRhbnR9LmZsZXgteGwtd3JhcC1yZXZlcnNley1tcy1mbGV4LXdyYXA6d3JhcC1yZXZlcnNlICFpbXBvcnRhbnQ7ZmxleC13cmFwOndyYXAtcmV2ZXJzZSAhaW1wb3J0YW50fS5mbGV4LXhsLWZpbGx7LW1zLWZsZXg6MSAxIGF1dG8gIWltcG9ydGFudDtmbGV4OjEgMSBhdXRvICFpbXBvcnRhbnR9LmZsZXgteGwtZ3Jvdy0wey1tcy1mbGV4LXBvc2l0aXZlOjAgIWltcG9ydGFudDtmbGV4LWdyb3c6MCAhaW1wb3J0YW50fS5mbGV4LXhsLWdyb3ctMXstbXMtZmxleC1wb3NpdGl2ZToxICFpbXBvcnRhbnQ7ZmxleC1ncm93OjEgIWltcG9ydGFudH0uZmxleC14bC1zaHJpbmstMHstbXMtZmxleC1uZWdhdGl2ZTowICFpbXBvcnRhbnQ7ZmxleC1zaHJpbms6MCAhaW1wb3J0YW50fS5mbGV4LXhsLXNocmluay0xey1tcy1mbGV4LW5lZ2F0aXZlOjEgIWltcG9ydGFudDtmbGV4LXNocmluazoxICFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC14bC1zdGFydHstbXMtZmxleC1wYWNrOnN0YXJ0ICFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQgIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LXhsLWVuZHstbXMtZmxleC1wYWNrOmVuZCAhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpmbGV4LWVuZCAhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQteGwtY2VudGVyey1tcy1mbGV4LXBhY2s6Y2VudGVyICFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OmNlbnRlciAhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQteGwtYmV0d2VlbnstbXMtZmxleC1wYWNrOmp1c3RpZnkgIWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbiAhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQteGwtYXJvdW5key1tcy1mbGV4LXBhY2s6ZGlzdHJpYnV0ZSAhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpzcGFjZS1hcm91bmQgIWltcG9ydGFudH0uYWxpZ24taXRlbXMteGwtc3RhcnR7LW1zLWZsZXgtYWxpZ246c3RhcnQgIWltcG9ydGFudDthbGlnbi1pdGVtczpmbGV4LXN0YXJ0ICFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLXhsLWVuZHstbXMtZmxleC1hbGlnbjplbmQgIWltcG9ydGFudDthbGlnbi1pdGVtczpmbGV4LWVuZCAhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy14bC1jZW50ZXJ7LW1zLWZsZXgtYWxpZ246Y2VudGVyICFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6Y2VudGVyICFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLXhsLWJhc2VsaW5ley1tcy1mbGV4LWFsaWduOmJhc2VsaW5lICFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6YmFzZWxpbmUgIWltcG9ydGFudH0uYWxpZ24taXRlbXMteGwtc3RyZXRjaHstbXMtZmxleC1hbGlnbjpzdHJldGNoICFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6c3RyZXRjaCAhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LXhsLXN0YXJ0ey1tcy1mbGV4LWxpbmUtcGFjazpzdGFydCAhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6ZmxleC1zdGFydCAhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LXhsLWVuZHstbXMtZmxleC1saW5lLXBhY2s6ZW5kICFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpmbGV4LWVuZCAhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LXhsLWNlbnRlcnstbXMtZmxleC1saW5lLXBhY2s6Y2VudGVyICFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpjZW50ZXIgIWltcG9ydGFudH0uYWxpZ24tY29udGVudC14bC1iZXR3ZWVuey1tcy1mbGV4LWxpbmUtcGFjazpqdXN0aWZ5ICFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpzcGFjZS1iZXR3ZWVuICFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQteGwtYXJvdW5key1tcy1mbGV4LWxpbmUtcGFjazpkaXN0cmlidXRlICFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpzcGFjZS1hcm91bmQgIWltcG9ydGFudH0uYWxpZ24tY29udGVudC14bC1zdHJldGNoey1tcy1mbGV4LWxpbmUtcGFjazpzdHJldGNoICFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpzdHJldGNoICFpbXBvcnRhbnR9LmFsaWduLXNlbGYteGwtYXV0b3stbXMtZmxleC1pdGVtLWFsaWduOmF1dG8gIWltcG9ydGFudDthbGlnbi1zZWxmOmF1dG8gIWltcG9ydGFudH0uYWxpZ24tc2VsZi14bC1zdGFydHstbXMtZmxleC1pdGVtLWFsaWduOnN0YXJ0ICFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpmbGV4LXN0YXJ0ICFpbXBvcnRhbnR9LmFsaWduLXNlbGYteGwtZW5key1tcy1mbGV4LWl0ZW0tYWxpZ246ZW5kICFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpmbGV4LWVuZCAhaW1wb3J0YW50fS5hbGlnbi1zZWxmLXhsLWNlbnRlcnstbXMtZmxleC1pdGVtLWFsaWduOmNlbnRlciAhaW1wb3J0YW50O2FsaWduLXNlbGY6Y2VudGVyICFpbXBvcnRhbnR9LmFsaWduLXNlbGYteGwtYmFzZWxpbmV7LW1zLWZsZXgtaXRlbS1hbGlnbjpiYXNlbGluZSAhaW1wb3J0YW50O2FsaWduLXNlbGY6YmFzZWxpbmUgIWltcG9ydGFudH0uYWxpZ24tc2VsZi14bC1zdHJldGNoey1tcy1mbGV4LWl0ZW0tYWxpZ246c3RyZXRjaCAhaW1wb3J0YW50O2FsaWduLXNlbGY6c3RyZXRjaCAhaW1wb3J0YW50fX0uZmxvYXQtbGVmdHtmbG9hdDpsZWZ0ICFpbXBvcnRhbnR9LmZsb2F0LXJpZ2h0e2Zsb2F0OnJpZ2h0ICFpbXBvcnRhbnR9LmZsb2F0LW5vbmV7ZmxvYXQ6bm9uZSAhaW1wb3J0YW50fUBtZWRpYSAobWluLXdpZHRoOiA1NzZweCl7LmZsb2F0LXNtLWxlZnR7ZmxvYXQ6bGVmdCAhaW1wb3J0YW50fS5mbG9hdC1zbS1yaWdodHtmbG9hdDpyaWdodCAhaW1wb3J0YW50fS5mbG9hdC1zbS1ub25le2Zsb2F0Om5vbmUgIWltcG9ydGFudH19QG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KXsuZmxvYXQtbWQtbGVmdHtmbG9hdDpsZWZ0ICFpbXBvcnRhbnR9LmZsb2F0LW1kLXJpZ2h0e2Zsb2F0OnJpZ2h0ICFpbXBvcnRhbnR9LmZsb2F0LW1kLW5vbmV7ZmxvYXQ6bm9uZSAhaW1wb3J0YW50fX1AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpey5mbG9hdC1sZy1sZWZ0e2Zsb2F0OmxlZnQgIWltcG9ydGFudH0uZmxvYXQtbGctcmlnaHR7ZmxvYXQ6cmlnaHQgIWltcG9ydGFudH0uZmxvYXQtbGctbm9uZXtmbG9hdDpub25lICFpbXBvcnRhbnR9fUBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpey5mbG9hdC14bC1sZWZ0e2Zsb2F0OmxlZnQgIWltcG9ydGFudH0uZmxvYXQteGwtcmlnaHR7ZmxvYXQ6cmlnaHQgIWltcG9ydGFudH0uZmxvYXQteGwtbm9uZXtmbG9hdDpub25lICFpbXBvcnRhbnR9fS5vdmVyZmxvdy1hdXRve292ZXJmbG93OmF1dG8gIWltcG9ydGFudH0ub3ZlcmZsb3ctaGlkZGVue292ZXJmbG93OmhpZGRlbiAhaW1wb3J0YW50fS5wb3NpdGlvbi1zdGF0aWN7cG9zaXRpb246c3RhdGljICFpbXBvcnRhbnR9LnBvc2l0aW9uLXJlbGF0aXZle3Bvc2l0aW9uOnJlbGF0aXZlICFpbXBvcnRhbnR9LnBvc2l0aW9uLWFic29sdXRle3Bvc2l0aW9uOmFic29sdXRlICFpbXBvcnRhbnR9LnBvc2l0aW9uLWZpeGVke3Bvc2l0aW9uOmZpeGVkICFpbXBvcnRhbnR9LnBvc2l0aW9uLXN0aWNreXtwb3NpdGlvbjotd2Via2l0LXN0aWNreSAhaW1wb3J0YW50O3Bvc2l0aW9uOnN0aWNreSAhaW1wb3J0YW50fS5maXhlZC10b3B7cG9zaXRpb246Zml4ZWQ7dG9wOjA7cmlnaHQ6MDtsZWZ0OjA7ei1pbmRleDoxMDMwfS5maXhlZC1ib3R0b217cG9zaXRpb246Zml4ZWQ7cmlnaHQ6MDtib3R0b206MDtsZWZ0OjA7ei1pbmRleDoxMDMwfUBzdXBwb3J0cyAocG9zaXRpb246IC13ZWJraXQtc3RpY2t5KSBvciAocG9zaXRpb246IHN0aWNreSl7LnN0aWNreS10b3B7cG9zaXRpb246LXdlYmtpdC1zdGlja3k7cG9zaXRpb246c3RpY2t5O3RvcDowO3otaW5kZXg6MTAyMH19LnNyLW9ubHl7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MXB4O2hlaWdodDoxcHg7cGFkZGluZzowO21hcmdpbjotMXB4O292ZXJmbG93OmhpZGRlbjtjbGlwOnJlY3QoMCwgMCwgMCwgMCk7d2hpdGUtc3BhY2U6bm93cmFwO2JvcmRlcjowfS5zci1vbmx5LWZvY3VzYWJsZTphY3RpdmUsLnNyLW9ubHktZm9jdXNhYmxlOmZvY3Vze3Bvc2l0aW9uOnN0YXRpYzt3aWR0aDphdXRvO2hlaWdodDphdXRvO292ZXJmbG93OnZpc2libGU7Y2xpcDphdXRvO3doaXRlLXNwYWNlOm5vcm1hbH0uc2hhZG93LXNte2JveC1zaGFkb3c6MCAwLjEyNXJlbSAwLjI1cmVtIHJnYmEoMCwwLDAsMC4wNzUpICFpbXBvcnRhbnR9LnNoYWRvd3tib3gtc2hhZG93OjAgMC41cmVtIDFyZW0gcmdiYSgwLDAsMCwwLjE1KSAhaW1wb3J0YW50fS5zaGFkb3ctbGd7Ym94LXNoYWRvdzowIDFyZW0gM3JlbSByZ2JhKDAsMCwwLDAuMTc1KSAhaW1wb3J0YW50fS5zaGFkb3ctbm9uZXtib3gtc2hhZG93Om5vbmUgIWltcG9ydGFudH0udy0yNXt3aWR0aDoyNSUgIWltcG9ydGFudH0udy01MHt3aWR0aDo1MCUgIWltcG9ydGFudH0udy03NXt3aWR0aDo3NSUgIWltcG9ydGFudH0udy0xMDB7d2lkdGg6MTAwJSAhaW1wb3J0YW50fS53LWF1dG97d2lkdGg6YXV0byAhaW1wb3J0YW50fS5oLTI1e2hlaWdodDoyNSUgIWltcG9ydGFudH0uaC01MHtoZWlnaHQ6NTAlICFpbXBvcnRhbnR9LmgtNzV7aGVpZ2h0Ojc1JSAhaW1wb3J0YW50fS5oLTEwMHtoZWlnaHQ6MTAwJSAhaW1wb3J0YW50fS5oLWF1dG97aGVpZ2h0OmF1dG8gIWltcG9ydGFudH0ubXctMTAwe21heC13aWR0aDoxMDAlICFpbXBvcnRhbnR9Lm1oLTEwMHttYXgtaGVpZ2h0OjEwMCUgIWltcG9ydGFudH0ubWluLXZ3LTEwMHttaW4td2lkdGg6MTAwdncgIWltcG9ydGFudH0ubWluLXZoLTEwMHttaW4taGVpZ2h0OjEwMHZoICFpbXBvcnRhbnR9LnZ3LTEwMHt3aWR0aDoxMDB2dyAhaW1wb3J0YW50fS52aC0xMDB7aGVpZ2h0OjEwMHZoICFpbXBvcnRhbnR9LnN0cmV0Y2hlZC1saW5rOjphZnRlcntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtyaWdodDowO2JvdHRvbTowO2xlZnQ6MDt6LWluZGV4OjE7cG9pbnRlci1ldmVudHM6YXV0bztjb250ZW50OlxcXCJcXFwiO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwwKX0ubS0we21hcmdpbjowICFpbXBvcnRhbnR9Lm10LTAsLm15LTB7bWFyZ2luLXRvcDowICFpbXBvcnRhbnR9Lm1yLTAsLm14LTB7bWFyZ2luLXJpZ2h0OjAgIWltcG9ydGFudH0ubWItMCwubXktMHttYXJnaW4tYm90dG9tOjAgIWltcG9ydGFudH0ubWwtMCwubXgtMHttYXJnaW4tbGVmdDowICFpbXBvcnRhbnR9Lm0tMXttYXJnaW46MC4yNXJlbSAhaW1wb3J0YW50fS5tdC0xLC5teS0xe21hcmdpbi10b3A6MC4yNXJlbSAhaW1wb3J0YW50fS5tci0xLC5teC0xe21hcmdpbi1yaWdodDowLjI1cmVtICFpbXBvcnRhbnR9Lm1iLTEsLm15LTF7bWFyZ2luLWJvdHRvbTowLjI1cmVtICFpbXBvcnRhbnR9Lm1sLTEsLm14LTF7bWFyZ2luLWxlZnQ6MC4yNXJlbSAhaW1wb3J0YW50fS5tLTJ7bWFyZ2luOjAuNXJlbSAhaW1wb3J0YW50fS5tdC0yLC5teS0ye21hcmdpbi10b3A6MC41cmVtICFpbXBvcnRhbnR9Lm1yLTIsLm14LTJ7bWFyZ2luLXJpZ2h0OjAuNXJlbSAhaW1wb3J0YW50fS5tYi0yLC5teS0ye21hcmdpbi1ib3R0b206MC41cmVtICFpbXBvcnRhbnR9Lm1sLTIsLm14LTJ7bWFyZ2luLWxlZnQ6MC41cmVtICFpbXBvcnRhbnR9Lm0tM3ttYXJnaW46MXJlbSAhaW1wb3J0YW50fS5tdC0zLC5teS0ze21hcmdpbi10b3A6MXJlbSAhaW1wb3J0YW50fS5tci0zLC5teC0ze21hcmdpbi1yaWdodDoxcmVtICFpbXBvcnRhbnR9Lm1iLTMsLm15LTN7bWFyZ2luLWJvdHRvbToxcmVtICFpbXBvcnRhbnR9Lm1sLTMsLm14LTN7bWFyZ2luLWxlZnQ6MXJlbSAhaW1wb3J0YW50fS5tLTR7bWFyZ2luOjEuNXJlbSAhaW1wb3J0YW50fS5tdC00LC5teS00e21hcmdpbi10b3A6MS41cmVtICFpbXBvcnRhbnR9Lm1yLTQsLm14LTR7bWFyZ2luLXJpZ2h0OjEuNXJlbSAhaW1wb3J0YW50fS5tYi00LC5teS00e21hcmdpbi1ib3R0b206MS41cmVtICFpbXBvcnRhbnR9Lm1sLTQsLm14LTR7bWFyZ2luLWxlZnQ6MS41cmVtICFpbXBvcnRhbnR9Lm0tNXttYXJnaW46M3JlbSAhaW1wb3J0YW50fS5tdC01LC5teS01e21hcmdpbi10b3A6M3JlbSAhaW1wb3J0YW50fS5tci01LC5teC01e21hcmdpbi1yaWdodDozcmVtICFpbXBvcnRhbnR9Lm1iLTUsLm15LTV7bWFyZ2luLWJvdHRvbTozcmVtICFpbXBvcnRhbnR9Lm1sLTUsLm14LTV7bWFyZ2luLWxlZnQ6M3JlbSAhaW1wb3J0YW50fS5wLTB7cGFkZGluZzowICFpbXBvcnRhbnR9LnB0LTAsLnB5LTB7cGFkZGluZy10b3A6MCAhaW1wb3J0YW50fS5wci0wLC5weC0we3BhZGRpbmctcmlnaHQ6MCAhaW1wb3J0YW50fS5wYi0wLC5weS0we3BhZGRpbmctYm90dG9tOjAgIWltcG9ydGFudH0ucGwtMCwucHgtMHtwYWRkaW5nLWxlZnQ6MCAhaW1wb3J0YW50fS5wLTF7cGFkZGluZzowLjI1cmVtICFpbXBvcnRhbnR9LnB0LTEsLnB5LTF7cGFkZGluZy10b3A6MC4yNXJlbSAhaW1wb3J0YW50fS5wci0xLC5weC0xe3BhZGRpbmctcmlnaHQ6MC4yNXJlbSAhaW1wb3J0YW50fS5wYi0xLC5weS0xe3BhZGRpbmctYm90dG9tOjAuMjVyZW0gIWltcG9ydGFudH0ucGwtMSwucHgtMXtwYWRkaW5nLWxlZnQ6MC4yNXJlbSAhaW1wb3J0YW50fS5wLTJ7cGFkZGluZzowLjVyZW0gIWltcG9ydGFudH0ucHQtMiwucHktMntwYWRkaW5nLXRvcDowLjVyZW0gIWltcG9ydGFudH0ucHItMiwucHgtMntwYWRkaW5nLXJpZ2h0OjAuNXJlbSAhaW1wb3J0YW50fS5wYi0yLC5weS0ye3BhZGRpbmctYm90dG9tOjAuNXJlbSAhaW1wb3J0YW50fS5wbC0yLC5weC0ye3BhZGRpbmctbGVmdDowLjVyZW0gIWltcG9ydGFudH0ucC0ze3BhZGRpbmc6MXJlbSAhaW1wb3J0YW50fS5wdC0zLC5weS0ze3BhZGRpbmctdG9wOjFyZW0gIWltcG9ydGFudH0ucHItMywucHgtM3twYWRkaW5nLXJpZ2h0OjFyZW0gIWltcG9ydGFudH0ucGItMywucHktM3twYWRkaW5nLWJvdHRvbToxcmVtICFpbXBvcnRhbnR9LnBsLTMsLnB4LTN7cGFkZGluZy1sZWZ0OjFyZW0gIWltcG9ydGFudH0ucC00e3BhZGRpbmc6MS41cmVtICFpbXBvcnRhbnR9LnB0LTQsLnB5LTR7cGFkZGluZy10b3A6MS41cmVtICFpbXBvcnRhbnR9LnByLTQsLnB4LTR7cGFkZGluZy1yaWdodDoxLjVyZW0gIWltcG9ydGFudH0ucGItNCwucHktNHtwYWRkaW5nLWJvdHRvbToxLjVyZW0gIWltcG9ydGFudH0ucGwtNCwucHgtNHtwYWRkaW5nLWxlZnQ6MS41cmVtICFpbXBvcnRhbnR9LnAtNXtwYWRkaW5nOjNyZW0gIWltcG9ydGFudH0ucHQtNSwucHktNXtwYWRkaW5nLXRvcDozcmVtICFpbXBvcnRhbnR9LnByLTUsLnB4LTV7cGFkZGluZy1yaWdodDozcmVtICFpbXBvcnRhbnR9LnBiLTUsLnB5LTV7cGFkZGluZy1ib3R0b206M3JlbSAhaW1wb3J0YW50fS5wbC01LC5weC01e3BhZGRpbmctbGVmdDozcmVtICFpbXBvcnRhbnR9Lm0tbjF7bWFyZ2luOi0wLjI1cmVtICFpbXBvcnRhbnR9Lm10LW4xLC5teS1uMXttYXJnaW4tdG9wOi0wLjI1cmVtICFpbXBvcnRhbnR9Lm1yLW4xLC5teC1uMXttYXJnaW4tcmlnaHQ6LTAuMjVyZW0gIWltcG9ydGFudH0ubWItbjEsLm15LW4xe21hcmdpbi1ib3R0b206LTAuMjVyZW0gIWltcG9ydGFudH0ubWwtbjEsLm14LW4xe21hcmdpbi1sZWZ0Oi0wLjI1cmVtICFpbXBvcnRhbnR9Lm0tbjJ7bWFyZ2luOi0wLjVyZW0gIWltcG9ydGFudH0ubXQtbjIsLm15LW4ye21hcmdpbi10b3A6LTAuNXJlbSAhaW1wb3J0YW50fS5tci1uMiwubXgtbjJ7bWFyZ2luLXJpZ2h0Oi0wLjVyZW0gIWltcG9ydGFudH0ubWItbjIsLm15LW4ye21hcmdpbi1ib3R0b206LTAuNXJlbSAhaW1wb3J0YW50fS5tbC1uMiwubXgtbjJ7bWFyZ2luLWxlZnQ6LTAuNXJlbSAhaW1wb3J0YW50fS5tLW4ze21hcmdpbjotMXJlbSAhaW1wb3J0YW50fS5tdC1uMywubXktbjN7bWFyZ2luLXRvcDotMXJlbSAhaW1wb3J0YW50fS5tci1uMywubXgtbjN7bWFyZ2luLXJpZ2h0Oi0xcmVtICFpbXBvcnRhbnR9Lm1iLW4zLC5teS1uM3ttYXJnaW4tYm90dG9tOi0xcmVtICFpbXBvcnRhbnR9Lm1sLW4zLC5teC1uM3ttYXJnaW4tbGVmdDotMXJlbSAhaW1wb3J0YW50fS5tLW40e21hcmdpbjotMS41cmVtICFpbXBvcnRhbnR9Lm10LW40LC5teS1uNHttYXJnaW4tdG9wOi0xLjVyZW0gIWltcG9ydGFudH0ubXItbjQsLm14LW40e21hcmdpbi1yaWdodDotMS41cmVtICFpbXBvcnRhbnR9Lm1iLW40LC5teS1uNHttYXJnaW4tYm90dG9tOi0xLjVyZW0gIWltcG9ydGFudH0ubWwtbjQsLm14LW40e21hcmdpbi1sZWZ0Oi0xLjVyZW0gIWltcG9ydGFudH0ubS1uNXttYXJnaW46LTNyZW0gIWltcG9ydGFudH0ubXQtbjUsLm15LW41e21hcmdpbi10b3A6LTNyZW0gIWltcG9ydGFudH0ubXItbjUsLm14LW41e21hcmdpbi1yaWdodDotM3JlbSAhaW1wb3J0YW50fS5tYi1uNSwubXktbjV7bWFyZ2luLWJvdHRvbTotM3JlbSAhaW1wb3J0YW50fS5tbC1uNSwubXgtbjV7bWFyZ2luLWxlZnQ6LTNyZW0gIWltcG9ydGFudH0ubS1hdXRve21hcmdpbjphdXRvICFpbXBvcnRhbnR9Lm10LWF1dG8sLm15LWF1dG97bWFyZ2luLXRvcDphdXRvICFpbXBvcnRhbnR9Lm1yLWF1dG8sLm14LWF1dG97bWFyZ2luLXJpZ2h0OmF1dG8gIWltcG9ydGFudH0ubWItYXV0bywubXktYXV0b3ttYXJnaW4tYm90dG9tOmF1dG8gIWltcG9ydGFudH0ubWwtYXV0bywubXgtYXV0b3ttYXJnaW4tbGVmdDphdXRvICFpbXBvcnRhbnR9QG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KXsubS1zbS0we21hcmdpbjowICFpbXBvcnRhbnR9Lm10LXNtLTAsLm15LXNtLTB7bWFyZ2luLXRvcDowICFpbXBvcnRhbnR9Lm1yLXNtLTAsLm14LXNtLTB7bWFyZ2luLXJpZ2h0OjAgIWltcG9ydGFudH0ubWItc20tMCwubXktc20tMHttYXJnaW4tYm90dG9tOjAgIWltcG9ydGFudH0ubWwtc20tMCwubXgtc20tMHttYXJnaW4tbGVmdDowICFpbXBvcnRhbnR9Lm0tc20tMXttYXJnaW46MC4yNXJlbSAhaW1wb3J0YW50fS5tdC1zbS0xLC5teS1zbS0xe21hcmdpbi10b3A6MC4yNXJlbSAhaW1wb3J0YW50fS5tci1zbS0xLC5teC1zbS0xe21hcmdpbi1yaWdodDowLjI1cmVtICFpbXBvcnRhbnR9Lm1iLXNtLTEsLm15LXNtLTF7bWFyZ2luLWJvdHRvbTowLjI1cmVtICFpbXBvcnRhbnR9Lm1sLXNtLTEsLm14LXNtLTF7bWFyZ2luLWxlZnQ6MC4yNXJlbSAhaW1wb3J0YW50fS5tLXNtLTJ7bWFyZ2luOjAuNXJlbSAhaW1wb3J0YW50fS5tdC1zbS0yLC5teS1zbS0ye21hcmdpbi10b3A6MC41cmVtICFpbXBvcnRhbnR9Lm1yLXNtLTIsLm14LXNtLTJ7bWFyZ2luLXJpZ2h0OjAuNXJlbSAhaW1wb3J0YW50fS5tYi1zbS0yLC5teS1zbS0ye21hcmdpbi1ib3R0b206MC41cmVtICFpbXBvcnRhbnR9Lm1sLXNtLTIsLm14LXNtLTJ7bWFyZ2luLWxlZnQ6MC41cmVtICFpbXBvcnRhbnR9Lm0tc20tM3ttYXJnaW46MXJlbSAhaW1wb3J0YW50fS5tdC1zbS0zLC5teS1zbS0ze21hcmdpbi10b3A6MXJlbSAhaW1wb3J0YW50fS5tci1zbS0zLC5teC1zbS0ze21hcmdpbi1yaWdodDoxcmVtICFpbXBvcnRhbnR9Lm1iLXNtLTMsLm15LXNtLTN7bWFyZ2luLWJvdHRvbToxcmVtICFpbXBvcnRhbnR9Lm1sLXNtLTMsLm14LXNtLTN7bWFyZ2luLWxlZnQ6MXJlbSAhaW1wb3J0YW50fS5tLXNtLTR7bWFyZ2luOjEuNXJlbSAhaW1wb3J0YW50fS5tdC1zbS00LC5teS1zbS00e21hcmdpbi10b3A6MS41cmVtICFpbXBvcnRhbnR9Lm1yLXNtLTQsLm14LXNtLTR7bWFyZ2luLXJpZ2h0OjEuNXJlbSAhaW1wb3J0YW50fS5tYi1zbS00LC5teS1zbS00e21hcmdpbi1ib3R0b206MS41cmVtICFpbXBvcnRhbnR9Lm1sLXNtLTQsLm14LXNtLTR7bWFyZ2luLWxlZnQ6MS41cmVtICFpbXBvcnRhbnR9Lm0tc20tNXttYXJnaW46M3JlbSAhaW1wb3J0YW50fS5tdC1zbS01LC5teS1zbS01e21hcmdpbi10b3A6M3JlbSAhaW1wb3J0YW50fS5tci1zbS01LC5teC1zbS01e21hcmdpbi1yaWdodDozcmVtICFpbXBvcnRhbnR9Lm1iLXNtLTUsLm15LXNtLTV7bWFyZ2luLWJvdHRvbTozcmVtICFpbXBvcnRhbnR9Lm1sLXNtLTUsLm14LXNtLTV7bWFyZ2luLWxlZnQ6M3JlbSAhaW1wb3J0YW50fS5wLXNtLTB7cGFkZGluZzowICFpbXBvcnRhbnR9LnB0LXNtLTAsLnB5LXNtLTB7cGFkZGluZy10b3A6MCAhaW1wb3J0YW50fS5wci1zbS0wLC5weC1zbS0we3BhZGRpbmctcmlnaHQ6MCAhaW1wb3J0YW50fS5wYi1zbS0wLC5weS1zbS0we3BhZGRpbmctYm90dG9tOjAgIWltcG9ydGFudH0ucGwtc20tMCwucHgtc20tMHtwYWRkaW5nLWxlZnQ6MCAhaW1wb3J0YW50fS5wLXNtLTF7cGFkZGluZzowLjI1cmVtICFpbXBvcnRhbnR9LnB0LXNtLTEsLnB5LXNtLTF7cGFkZGluZy10b3A6MC4yNXJlbSAhaW1wb3J0YW50fS5wci1zbS0xLC5weC1zbS0xe3BhZGRpbmctcmlnaHQ6MC4yNXJlbSAhaW1wb3J0YW50fS5wYi1zbS0xLC5weS1zbS0xe3BhZGRpbmctYm90dG9tOjAuMjVyZW0gIWltcG9ydGFudH0ucGwtc20tMSwucHgtc20tMXtwYWRkaW5nLWxlZnQ6MC4yNXJlbSAhaW1wb3J0YW50fS5wLXNtLTJ7cGFkZGluZzowLjVyZW0gIWltcG9ydGFudH0ucHQtc20tMiwucHktc20tMntwYWRkaW5nLXRvcDowLjVyZW0gIWltcG9ydGFudH0ucHItc20tMiwucHgtc20tMntwYWRkaW5nLXJpZ2h0OjAuNXJlbSAhaW1wb3J0YW50fS5wYi1zbS0yLC5weS1zbS0ye3BhZGRpbmctYm90dG9tOjAuNXJlbSAhaW1wb3J0YW50fS5wbC1zbS0yLC5weC1zbS0ye3BhZGRpbmctbGVmdDowLjVyZW0gIWltcG9ydGFudH0ucC1zbS0ze3BhZGRpbmc6MXJlbSAhaW1wb3J0YW50fS5wdC1zbS0zLC5weS1zbS0ze3BhZGRpbmctdG9wOjFyZW0gIWltcG9ydGFudH0ucHItc20tMywucHgtc20tM3twYWRkaW5nLXJpZ2h0OjFyZW0gIWltcG9ydGFudH0ucGItc20tMywucHktc20tM3twYWRkaW5nLWJvdHRvbToxcmVtICFpbXBvcnRhbnR9LnBsLXNtLTMsLnB4LXNtLTN7cGFkZGluZy1sZWZ0OjFyZW0gIWltcG9ydGFudH0ucC1zbS00e3BhZGRpbmc6MS41cmVtICFpbXBvcnRhbnR9LnB0LXNtLTQsLnB5LXNtLTR7cGFkZGluZy10b3A6MS41cmVtICFpbXBvcnRhbnR9LnByLXNtLTQsLnB4LXNtLTR7cGFkZGluZy1yaWdodDoxLjVyZW0gIWltcG9ydGFudH0ucGItc20tNCwucHktc20tNHtwYWRkaW5nLWJvdHRvbToxLjVyZW0gIWltcG9ydGFudH0ucGwtc20tNCwucHgtc20tNHtwYWRkaW5nLWxlZnQ6MS41cmVtICFpbXBvcnRhbnR9LnAtc20tNXtwYWRkaW5nOjNyZW0gIWltcG9ydGFudH0ucHQtc20tNSwucHktc20tNXtwYWRkaW5nLXRvcDozcmVtICFpbXBvcnRhbnR9LnByLXNtLTUsLnB4LXNtLTV7cGFkZGluZy1yaWdodDozcmVtICFpbXBvcnRhbnR9LnBiLXNtLTUsLnB5LXNtLTV7cGFkZGluZy1ib3R0b206M3JlbSAhaW1wb3J0YW50fS5wbC1zbS01LC5weC1zbS01e3BhZGRpbmctbGVmdDozcmVtICFpbXBvcnRhbnR9Lm0tc20tbjF7bWFyZ2luOi0wLjI1cmVtICFpbXBvcnRhbnR9Lm10LXNtLW4xLC5teS1zbS1uMXttYXJnaW4tdG9wOi0wLjI1cmVtICFpbXBvcnRhbnR9Lm1yLXNtLW4xLC5teC1zbS1uMXttYXJnaW4tcmlnaHQ6LTAuMjVyZW0gIWltcG9ydGFudH0ubWItc20tbjEsLm15LXNtLW4xe21hcmdpbi1ib3R0b206LTAuMjVyZW0gIWltcG9ydGFudH0ubWwtc20tbjEsLm14LXNtLW4xe21hcmdpbi1sZWZ0Oi0wLjI1cmVtICFpbXBvcnRhbnR9Lm0tc20tbjJ7bWFyZ2luOi0wLjVyZW0gIWltcG9ydGFudH0ubXQtc20tbjIsLm15LXNtLW4ye21hcmdpbi10b3A6LTAuNXJlbSAhaW1wb3J0YW50fS5tci1zbS1uMiwubXgtc20tbjJ7bWFyZ2luLXJpZ2h0Oi0wLjVyZW0gIWltcG9ydGFudH0ubWItc20tbjIsLm15LXNtLW4ye21hcmdpbi1ib3R0b206LTAuNXJlbSAhaW1wb3J0YW50fS5tbC1zbS1uMiwubXgtc20tbjJ7bWFyZ2luLWxlZnQ6LTAuNXJlbSAhaW1wb3J0YW50fS5tLXNtLW4ze21hcmdpbjotMXJlbSAhaW1wb3J0YW50fS5tdC1zbS1uMywubXktc20tbjN7bWFyZ2luLXRvcDotMXJlbSAhaW1wb3J0YW50fS5tci1zbS1uMywubXgtc20tbjN7bWFyZ2luLXJpZ2h0Oi0xcmVtICFpbXBvcnRhbnR9Lm1iLXNtLW4zLC5teS1zbS1uM3ttYXJnaW4tYm90dG9tOi0xcmVtICFpbXBvcnRhbnR9Lm1sLXNtLW4zLC5teC1zbS1uM3ttYXJnaW4tbGVmdDotMXJlbSAhaW1wb3J0YW50fS5tLXNtLW40e21hcmdpbjotMS41cmVtICFpbXBvcnRhbnR9Lm10LXNtLW40LC5teS1zbS1uNHttYXJnaW4tdG9wOi0xLjVyZW0gIWltcG9ydGFudH0ubXItc20tbjQsLm14LXNtLW40e21hcmdpbi1yaWdodDotMS41cmVtICFpbXBvcnRhbnR9Lm1iLXNtLW40LC5teS1zbS1uNHttYXJnaW4tYm90dG9tOi0xLjVyZW0gIWltcG9ydGFudH0ubWwtc20tbjQsLm14LXNtLW40e21hcmdpbi1sZWZ0Oi0xLjVyZW0gIWltcG9ydGFudH0ubS1zbS1uNXttYXJnaW46LTNyZW0gIWltcG9ydGFudH0ubXQtc20tbjUsLm15LXNtLW41e21hcmdpbi10b3A6LTNyZW0gIWltcG9ydGFudH0ubXItc20tbjUsLm14LXNtLW41e21hcmdpbi1yaWdodDotM3JlbSAhaW1wb3J0YW50fS5tYi1zbS1uNSwubXktc20tbjV7bWFyZ2luLWJvdHRvbTotM3JlbSAhaW1wb3J0YW50fS5tbC1zbS1uNSwubXgtc20tbjV7bWFyZ2luLWxlZnQ6LTNyZW0gIWltcG9ydGFudH0ubS1zbS1hdXRve21hcmdpbjphdXRvICFpbXBvcnRhbnR9Lm10LXNtLWF1dG8sLm15LXNtLWF1dG97bWFyZ2luLXRvcDphdXRvICFpbXBvcnRhbnR9Lm1yLXNtLWF1dG8sLm14LXNtLWF1dG97bWFyZ2luLXJpZ2h0OmF1dG8gIWltcG9ydGFudH0ubWItc20tYXV0bywubXktc20tYXV0b3ttYXJnaW4tYm90dG9tOmF1dG8gIWltcG9ydGFudH0ubWwtc20tYXV0bywubXgtc20tYXV0b3ttYXJnaW4tbGVmdDphdXRvICFpbXBvcnRhbnR9fUBtZWRpYSAobWluLXdpZHRoOiA3NjhweCl7Lm0tbWQtMHttYXJnaW46MCAhaW1wb3J0YW50fS5tdC1tZC0wLC5teS1tZC0we21hcmdpbi10b3A6MCAhaW1wb3J0YW50fS5tci1tZC0wLC5teC1tZC0we21hcmdpbi1yaWdodDowICFpbXBvcnRhbnR9Lm1iLW1kLTAsLm15LW1kLTB7bWFyZ2luLWJvdHRvbTowICFpbXBvcnRhbnR9Lm1sLW1kLTAsLm14LW1kLTB7bWFyZ2luLWxlZnQ6MCAhaW1wb3J0YW50fS5tLW1kLTF7bWFyZ2luOjAuMjVyZW0gIWltcG9ydGFudH0ubXQtbWQtMSwubXktbWQtMXttYXJnaW4tdG9wOjAuMjVyZW0gIWltcG9ydGFudH0ubXItbWQtMSwubXgtbWQtMXttYXJnaW4tcmlnaHQ6MC4yNXJlbSAhaW1wb3J0YW50fS5tYi1tZC0xLC5teS1tZC0xe21hcmdpbi1ib3R0b206MC4yNXJlbSAhaW1wb3J0YW50fS5tbC1tZC0xLC5teC1tZC0xe21hcmdpbi1sZWZ0OjAuMjVyZW0gIWltcG9ydGFudH0ubS1tZC0ye21hcmdpbjowLjVyZW0gIWltcG9ydGFudH0ubXQtbWQtMiwubXktbWQtMnttYXJnaW4tdG9wOjAuNXJlbSAhaW1wb3J0YW50fS5tci1tZC0yLC5teC1tZC0ye21hcmdpbi1yaWdodDowLjVyZW0gIWltcG9ydGFudH0ubWItbWQtMiwubXktbWQtMnttYXJnaW4tYm90dG9tOjAuNXJlbSAhaW1wb3J0YW50fS5tbC1tZC0yLC5teC1tZC0ye21hcmdpbi1sZWZ0OjAuNXJlbSAhaW1wb3J0YW50fS5tLW1kLTN7bWFyZ2luOjFyZW0gIWltcG9ydGFudH0ubXQtbWQtMywubXktbWQtM3ttYXJnaW4tdG9wOjFyZW0gIWltcG9ydGFudH0ubXItbWQtMywubXgtbWQtM3ttYXJnaW4tcmlnaHQ6MXJlbSAhaW1wb3J0YW50fS5tYi1tZC0zLC5teS1tZC0ze21hcmdpbi1ib3R0b206MXJlbSAhaW1wb3J0YW50fS5tbC1tZC0zLC5teC1tZC0ze21hcmdpbi1sZWZ0OjFyZW0gIWltcG9ydGFudH0ubS1tZC00e21hcmdpbjoxLjVyZW0gIWltcG9ydGFudH0ubXQtbWQtNCwubXktbWQtNHttYXJnaW4tdG9wOjEuNXJlbSAhaW1wb3J0YW50fS5tci1tZC00LC5teC1tZC00e21hcmdpbi1yaWdodDoxLjVyZW0gIWltcG9ydGFudH0ubWItbWQtNCwubXktbWQtNHttYXJnaW4tYm90dG9tOjEuNXJlbSAhaW1wb3J0YW50fS5tbC1tZC00LC5teC1tZC00e21hcmdpbi1sZWZ0OjEuNXJlbSAhaW1wb3J0YW50fS5tLW1kLTV7bWFyZ2luOjNyZW0gIWltcG9ydGFudH0ubXQtbWQtNSwubXktbWQtNXttYXJnaW4tdG9wOjNyZW0gIWltcG9ydGFudH0ubXItbWQtNSwubXgtbWQtNXttYXJnaW4tcmlnaHQ6M3JlbSAhaW1wb3J0YW50fS5tYi1tZC01LC5teS1tZC01e21hcmdpbi1ib3R0b206M3JlbSAhaW1wb3J0YW50fS5tbC1tZC01LC5teC1tZC01e21hcmdpbi1sZWZ0OjNyZW0gIWltcG9ydGFudH0ucC1tZC0we3BhZGRpbmc6MCAhaW1wb3J0YW50fS5wdC1tZC0wLC5weS1tZC0we3BhZGRpbmctdG9wOjAgIWltcG9ydGFudH0ucHItbWQtMCwucHgtbWQtMHtwYWRkaW5nLXJpZ2h0OjAgIWltcG9ydGFudH0ucGItbWQtMCwucHktbWQtMHtwYWRkaW5nLWJvdHRvbTowICFpbXBvcnRhbnR9LnBsLW1kLTAsLnB4LW1kLTB7cGFkZGluZy1sZWZ0OjAgIWltcG9ydGFudH0ucC1tZC0xe3BhZGRpbmc6MC4yNXJlbSAhaW1wb3J0YW50fS5wdC1tZC0xLC5weS1tZC0xe3BhZGRpbmctdG9wOjAuMjVyZW0gIWltcG9ydGFudH0ucHItbWQtMSwucHgtbWQtMXtwYWRkaW5nLXJpZ2h0OjAuMjVyZW0gIWltcG9ydGFudH0ucGItbWQtMSwucHktbWQtMXtwYWRkaW5nLWJvdHRvbTowLjI1cmVtICFpbXBvcnRhbnR9LnBsLW1kLTEsLnB4LW1kLTF7cGFkZGluZy1sZWZ0OjAuMjVyZW0gIWltcG9ydGFudH0ucC1tZC0ye3BhZGRpbmc6MC41cmVtICFpbXBvcnRhbnR9LnB0LW1kLTIsLnB5LW1kLTJ7cGFkZGluZy10b3A6MC41cmVtICFpbXBvcnRhbnR9LnByLW1kLTIsLnB4LW1kLTJ7cGFkZGluZy1yaWdodDowLjVyZW0gIWltcG9ydGFudH0ucGItbWQtMiwucHktbWQtMntwYWRkaW5nLWJvdHRvbTowLjVyZW0gIWltcG9ydGFudH0ucGwtbWQtMiwucHgtbWQtMntwYWRkaW5nLWxlZnQ6MC41cmVtICFpbXBvcnRhbnR9LnAtbWQtM3twYWRkaW5nOjFyZW0gIWltcG9ydGFudH0ucHQtbWQtMywucHktbWQtM3twYWRkaW5nLXRvcDoxcmVtICFpbXBvcnRhbnR9LnByLW1kLTMsLnB4LW1kLTN7cGFkZGluZy1yaWdodDoxcmVtICFpbXBvcnRhbnR9LnBiLW1kLTMsLnB5LW1kLTN7cGFkZGluZy1ib3R0b206MXJlbSAhaW1wb3J0YW50fS5wbC1tZC0zLC5weC1tZC0ze3BhZGRpbmctbGVmdDoxcmVtICFpbXBvcnRhbnR9LnAtbWQtNHtwYWRkaW5nOjEuNXJlbSAhaW1wb3J0YW50fS5wdC1tZC00LC5weS1tZC00e3BhZGRpbmctdG9wOjEuNXJlbSAhaW1wb3J0YW50fS5wci1tZC00LC5weC1tZC00e3BhZGRpbmctcmlnaHQ6MS41cmVtICFpbXBvcnRhbnR9LnBiLW1kLTQsLnB5LW1kLTR7cGFkZGluZy1ib3R0b206MS41cmVtICFpbXBvcnRhbnR9LnBsLW1kLTQsLnB4LW1kLTR7cGFkZGluZy1sZWZ0OjEuNXJlbSAhaW1wb3J0YW50fS5wLW1kLTV7cGFkZGluZzozcmVtICFpbXBvcnRhbnR9LnB0LW1kLTUsLnB5LW1kLTV7cGFkZGluZy10b3A6M3JlbSAhaW1wb3J0YW50fS5wci1tZC01LC5weC1tZC01e3BhZGRpbmctcmlnaHQ6M3JlbSAhaW1wb3J0YW50fS5wYi1tZC01LC5weS1tZC01e3BhZGRpbmctYm90dG9tOjNyZW0gIWltcG9ydGFudH0ucGwtbWQtNSwucHgtbWQtNXtwYWRkaW5nLWxlZnQ6M3JlbSAhaW1wb3J0YW50fS5tLW1kLW4xe21hcmdpbjotMC4yNXJlbSAhaW1wb3J0YW50fS5tdC1tZC1uMSwubXktbWQtbjF7bWFyZ2luLXRvcDotMC4yNXJlbSAhaW1wb3J0YW50fS5tci1tZC1uMSwubXgtbWQtbjF7bWFyZ2luLXJpZ2h0Oi0wLjI1cmVtICFpbXBvcnRhbnR9Lm1iLW1kLW4xLC5teS1tZC1uMXttYXJnaW4tYm90dG9tOi0wLjI1cmVtICFpbXBvcnRhbnR9Lm1sLW1kLW4xLC5teC1tZC1uMXttYXJnaW4tbGVmdDotMC4yNXJlbSAhaW1wb3J0YW50fS5tLW1kLW4ye21hcmdpbjotMC41cmVtICFpbXBvcnRhbnR9Lm10LW1kLW4yLC5teS1tZC1uMnttYXJnaW4tdG9wOi0wLjVyZW0gIWltcG9ydGFudH0ubXItbWQtbjIsLm14LW1kLW4ye21hcmdpbi1yaWdodDotMC41cmVtICFpbXBvcnRhbnR9Lm1iLW1kLW4yLC5teS1tZC1uMnttYXJnaW4tYm90dG9tOi0wLjVyZW0gIWltcG9ydGFudH0ubWwtbWQtbjIsLm14LW1kLW4ye21hcmdpbi1sZWZ0Oi0wLjVyZW0gIWltcG9ydGFudH0ubS1tZC1uM3ttYXJnaW46LTFyZW0gIWltcG9ydGFudH0ubXQtbWQtbjMsLm15LW1kLW4ze21hcmdpbi10b3A6LTFyZW0gIWltcG9ydGFudH0ubXItbWQtbjMsLm14LW1kLW4ze21hcmdpbi1yaWdodDotMXJlbSAhaW1wb3J0YW50fS5tYi1tZC1uMywubXktbWQtbjN7bWFyZ2luLWJvdHRvbTotMXJlbSAhaW1wb3J0YW50fS5tbC1tZC1uMywubXgtbWQtbjN7bWFyZ2luLWxlZnQ6LTFyZW0gIWltcG9ydGFudH0ubS1tZC1uNHttYXJnaW46LTEuNXJlbSAhaW1wb3J0YW50fS5tdC1tZC1uNCwubXktbWQtbjR7bWFyZ2luLXRvcDotMS41cmVtICFpbXBvcnRhbnR9Lm1yLW1kLW40LC5teC1tZC1uNHttYXJnaW4tcmlnaHQ6LTEuNXJlbSAhaW1wb3J0YW50fS5tYi1tZC1uNCwubXktbWQtbjR7bWFyZ2luLWJvdHRvbTotMS41cmVtICFpbXBvcnRhbnR9Lm1sLW1kLW40LC5teC1tZC1uNHttYXJnaW4tbGVmdDotMS41cmVtICFpbXBvcnRhbnR9Lm0tbWQtbjV7bWFyZ2luOi0zcmVtICFpbXBvcnRhbnR9Lm10LW1kLW41LC5teS1tZC1uNXttYXJnaW4tdG9wOi0zcmVtICFpbXBvcnRhbnR9Lm1yLW1kLW41LC5teC1tZC1uNXttYXJnaW4tcmlnaHQ6LTNyZW0gIWltcG9ydGFudH0ubWItbWQtbjUsLm15LW1kLW41e21hcmdpbi1ib3R0b206LTNyZW0gIWltcG9ydGFudH0ubWwtbWQtbjUsLm14LW1kLW41e21hcmdpbi1sZWZ0Oi0zcmVtICFpbXBvcnRhbnR9Lm0tbWQtYXV0b3ttYXJnaW46YXV0byAhaW1wb3J0YW50fS5tdC1tZC1hdXRvLC5teS1tZC1hdXRve21hcmdpbi10b3A6YXV0byAhaW1wb3J0YW50fS5tci1tZC1hdXRvLC5teC1tZC1hdXRve21hcmdpbi1yaWdodDphdXRvICFpbXBvcnRhbnR9Lm1iLW1kLWF1dG8sLm15LW1kLWF1dG97bWFyZ2luLWJvdHRvbTphdXRvICFpbXBvcnRhbnR9Lm1sLW1kLWF1dG8sLm14LW1kLWF1dG97bWFyZ2luLWxlZnQ6YXV0byAhaW1wb3J0YW50fX1AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpey5tLWxnLTB7bWFyZ2luOjAgIWltcG9ydGFudH0ubXQtbGctMCwubXktbGctMHttYXJnaW4tdG9wOjAgIWltcG9ydGFudH0ubXItbGctMCwubXgtbGctMHttYXJnaW4tcmlnaHQ6MCAhaW1wb3J0YW50fS5tYi1sZy0wLC5teS1sZy0we21hcmdpbi1ib3R0b206MCAhaW1wb3J0YW50fS5tbC1sZy0wLC5teC1sZy0we21hcmdpbi1sZWZ0OjAgIWltcG9ydGFudH0ubS1sZy0xe21hcmdpbjowLjI1cmVtICFpbXBvcnRhbnR9Lm10LWxnLTEsLm15LWxnLTF7bWFyZ2luLXRvcDowLjI1cmVtICFpbXBvcnRhbnR9Lm1yLWxnLTEsLm14LWxnLTF7bWFyZ2luLXJpZ2h0OjAuMjVyZW0gIWltcG9ydGFudH0ubWItbGctMSwubXktbGctMXttYXJnaW4tYm90dG9tOjAuMjVyZW0gIWltcG9ydGFudH0ubWwtbGctMSwubXgtbGctMXttYXJnaW4tbGVmdDowLjI1cmVtICFpbXBvcnRhbnR9Lm0tbGctMnttYXJnaW46MC41cmVtICFpbXBvcnRhbnR9Lm10LWxnLTIsLm15LWxnLTJ7bWFyZ2luLXRvcDowLjVyZW0gIWltcG9ydGFudH0ubXItbGctMiwubXgtbGctMnttYXJnaW4tcmlnaHQ6MC41cmVtICFpbXBvcnRhbnR9Lm1iLWxnLTIsLm15LWxnLTJ7bWFyZ2luLWJvdHRvbTowLjVyZW0gIWltcG9ydGFudH0ubWwtbGctMiwubXgtbGctMnttYXJnaW4tbGVmdDowLjVyZW0gIWltcG9ydGFudH0ubS1sZy0ze21hcmdpbjoxcmVtICFpbXBvcnRhbnR9Lm10LWxnLTMsLm15LWxnLTN7bWFyZ2luLXRvcDoxcmVtICFpbXBvcnRhbnR9Lm1yLWxnLTMsLm14LWxnLTN7bWFyZ2luLXJpZ2h0OjFyZW0gIWltcG9ydGFudH0ubWItbGctMywubXktbGctM3ttYXJnaW4tYm90dG9tOjFyZW0gIWltcG9ydGFudH0ubWwtbGctMywubXgtbGctM3ttYXJnaW4tbGVmdDoxcmVtICFpbXBvcnRhbnR9Lm0tbGctNHttYXJnaW46MS41cmVtICFpbXBvcnRhbnR9Lm10LWxnLTQsLm15LWxnLTR7bWFyZ2luLXRvcDoxLjVyZW0gIWltcG9ydGFudH0ubXItbGctNCwubXgtbGctNHttYXJnaW4tcmlnaHQ6MS41cmVtICFpbXBvcnRhbnR9Lm1iLWxnLTQsLm15LWxnLTR7bWFyZ2luLWJvdHRvbToxLjVyZW0gIWltcG9ydGFudH0ubWwtbGctNCwubXgtbGctNHttYXJnaW4tbGVmdDoxLjVyZW0gIWltcG9ydGFudH0ubS1sZy01e21hcmdpbjozcmVtICFpbXBvcnRhbnR9Lm10LWxnLTUsLm15LWxnLTV7bWFyZ2luLXRvcDozcmVtICFpbXBvcnRhbnR9Lm1yLWxnLTUsLm14LWxnLTV7bWFyZ2luLXJpZ2h0OjNyZW0gIWltcG9ydGFudH0ubWItbGctNSwubXktbGctNXttYXJnaW4tYm90dG9tOjNyZW0gIWltcG9ydGFudH0ubWwtbGctNSwubXgtbGctNXttYXJnaW4tbGVmdDozcmVtICFpbXBvcnRhbnR9LnAtbGctMHtwYWRkaW5nOjAgIWltcG9ydGFudH0ucHQtbGctMCwucHktbGctMHtwYWRkaW5nLXRvcDowICFpbXBvcnRhbnR9LnByLWxnLTAsLnB4LWxnLTB7cGFkZGluZy1yaWdodDowICFpbXBvcnRhbnR9LnBiLWxnLTAsLnB5LWxnLTB7cGFkZGluZy1ib3R0b206MCAhaW1wb3J0YW50fS5wbC1sZy0wLC5weC1sZy0we3BhZGRpbmctbGVmdDowICFpbXBvcnRhbnR9LnAtbGctMXtwYWRkaW5nOjAuMjVyZW0gIWltcG9ydGFudH0ucHQtbGctMSwucHktbGctMXtwYWRkaW5nLXRvcDowLjI1cmVtICFpbXBvcnRhbnR9LnByLWxnLTEsLnB4LWxnLTF7cGFkZGluZy1yaWdodDowLjI1cmVtICFpbXBvcnRhbnR9LnBiLWxnLTEsLnB5LWxnLTF7cGFkZGluZy1ib3R0b206MC4yNXJlbSAhaW1wb3J0YW50fS5wbC1sZy0xLC5weC1sZy0xe3BhZGRpbmctbGVmdDowLjI1cmVtICFpbXBvcnRhbnR9LnAtbGctMntwYWRkaW5nOjAuNXJlbSAhaW1wb3J0YW50fS5wdC1sZy0yLC5weS1sZy0ye3BhZGRpbmctdG9wOjAuNXJlbSAhaW1wb3J0YW50fS5wci1sZy0yLC5weC1sZy0ye3BhZGRpbmctcmlnaHQ6MC41cmVtICFpbXBvcnRhbnR9LnBiLWxnLTIsLnB5LWxnLTJ7cGFkZGluZy1ib3R0b206MC41cmVtICFpbXBvcnRhbnR9LnBsLWxnLTIsLnB4LWxnLTJ7cGFkZGluZy1sZWZ0OjAuNXJlbSAhaW1wb3J0YW50fS5wLWxnLTN7cGFkZGluZzoxcmVtICFpbXBvcnRhbnR9LnB0LWxnLTMsLnB5LWxnLTN7cGFkZGluZy10b3A6MXJlbSAhaW1wb3J0YW50fS5wci1sZy0zLC5weC1sZy0ze3BhZGRpbmctcmlnaHQ6MXJlbSAhaW1wb3J0YW50fS5wYi1sZy0zLC5weS1sZy0ze3BhZGRpbmctYm90dG9tOjFyZW0gIWltcG9ydGFudH0ucGwtbGctMywucHgtbGctM3twYWRkaW5nLWxlZnQ6MXJlbSAhaW1wb3J0YW50fS5wLWxnLTR7cGFkZGluZzoxLjVyZW0gIWltcG9ydGFudH0ucHQtbGctNCwucHktbGctNHtwYWRkaW5nLXRvcDoxLjVyZW0gIWltcG9ydGFudH0ucHItbGctNCwucHgtbGctNHtwYWRkaW5nLXJpZ2h0OjEuNXJlbSAhaW1wb3J0YW50fS5wYi1sZy00LC5weS1sZy00e3BhZGRpbmctYm90dG9tOjEuNXJlbSAhaW1wb3J0YW50fS5wbC1sZy00LC5weC1sZy00e3BhZGRpbmctbGVmdDoxLjVyZW0gIWltcG9ydGFudH0ucC1sZy01e3BhZGRpbmc6M3JlbSAhaW1wb3J0YW50fS5wdC1sZy01LC5weS1sZy01e3BhZGRpbmctdG9wOjNyZW0gIWltcG9ydGFudH0ucHItbGctNSwucHgtbGctNXtwYWRkaW5nLXJpZ2h0OjNyZW0gIWltcG9ydGFudH0ucGItbGctNSwucHktbGctNXtwYWRkaW5nLWJvdHRvbTozcmVtICFpbXBvcnRhbnR9LnBsLWxnLTUsLnB4LWxnLTV7cGFkZGluZy1sZWZ0OjNyZW0gIWltcG9ydGFudH0ubS1sZy1uMXttYXJnaW46LTAuMjVyZW0gIWltcG9ydGFudH0ubXQtbGctbjEsLm15LWxnLW4xe21hcmdpbi10b3A6LTAuMjVyZW0gIWltcG9ydGFudH0ubXItbGctbjEsLm14LWxnLW4xe21hcmdpbi1yaWdodDotMC4yNXJlbSAhaW1wb3J0YW50fS5tYi1sZy1uMSwubXktbGctbjF7bWFyZ2luLWJvdHRvbTotMC4yNXJlbSAhaW1wb3J0YW50fS5tbC1sZy1uMSwubXgtbGctbjF7bWFyZ2luLWxlZnQ6LTAuMjVyZW0gIWltcG9ydGFudH0ubS1sZy1uMnttYXJnaW46LTAuNXJlbSAhaW1wb3J0YW50fS5tdC1sZy1uMiwubXktbGctbjJ7bWFyZ2luLXRvcDotMC41cmVtICFpbXBvcnRhbnR9Lm1yLWxnLW4yLC5teC1sZy1uMnttYXJnaW4tcmlnaHQ6LTAuNXJlbSAhaW1wb3J0YW50fS5tYi1sZy1uMiwubXktbGctbjJ7bWFyZ2luLWJvdHRvbTotMC41cmVtICFpbXBvcnRhbnR9Lm1sLWxnLW4yLC5teC1sZy1uMnttYXJnaW4tbGVmdDotMC41cmVtICFpbXBvcnRhbnR9Lm0tbGctbjN7bWFyZ2luOi0xcmVtICFpbXBvcnRhbnR9Lm10LWxnLW4zLC5teS1sZy1uM3ttYXJnaW4tdG9wOi0xcmVtICFpbXBvcnRhbnR9Lm1yLWxnLW4zLC5teC1sZy1uM3ttYXJnaW4tcmlnaHQ6LTFyZW0gIWltcG9ydGFudH0ubWItbGctbjMsLm15LWxnLW4ze21hcmdpbi1ib3R0b206LTFyZW0gIWltcG9ydGFudH0ubWwtbGctbjMsLm14LWxnLW4ze21hcmdpbi1sZWZ0Oi0xcmVtICFpbXBvcnRhbnR9Lm0tbGctbjR7bWFyZ2luOi0xLjVyZW0gIWltcG9ydGFudH0ubXQtbGctbjQsLm15LWxnLW40e21hcmdpbi10b3A6LTEuNXJlbSAhaW1wb3J0YW50fS5tci1sZy1uNCwubXgtbGctbjR7bWFyZ2luLXJpZ2h0Oi0xLjVyZW0gIWltcG9ydGFudH0ubWItbGctbjQsLm15LWxnLW40e21hcmdpbi1ib3R0b206LTEuNXJlbSAhaW1wb3J0YW50fS5tbC1sZy1uNCwubXgtbGctbjR7bWFyZ2luLWxlZnQ6LTEuNXJlbSAhaW1wb3J0YW50fS5tLWxnLW41e21hcmdpbjotM3JlbSAhaW1wb3J0YW50fS5tdC1sZy1uNSwubXktbGctbjV7bWFyZ2luLXRvcDotM3JlbSAhaW1wb3J0YW50fS5tci1sZy1uNSwubXgtbGctbjV7bWFyZ2luLXJpZ2h0Oi0zcmVtICFpbXBvcnRhbnR9Lm1iLWxnLW41LC5teS1sZy1uNXttYXJnaW4tYm90dG9tOi0zcmVtICFpbXBvcnRhbnR9Lm1sLWxnLW41LC5teC1sZy1uNXttYXJnaW4tbGVmdDotM3JlbSAhaW1wb3J0YW50fS5tLWxnLWF1dG97bWFyZ2luOmF1dG8gIWltcG9ydGFudH0ubXQtbGctYXV0bywubXktbGctYXV0b3ttYXJnaW4tdG9wOmF1dG8gIWltcG9ydGFudH0ubXItbGctYXV0bywubXgtbGctYXV0b3ttYXJnaW4tcmlnaHQ6YXV0byAhaW1wb3J0YW50fS5tYi1sZy1hdXRvLC5teS1sZy1hdXRve21hcmdpbi1ib3R0b206YXV0byAhaW1wb3J0YW50fS5tbC1sZy1hdXRvLC5teC1sZy1hdXRve21hcmdpbi1sZWZ0OmF1dG8gIWltcG9ydGFudH19QG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCl7Lm0teGwtMHttYXJnaW46MCAhaW1wb3J0YW50fS5tdC14bC0wLC5teS14bC0we21hcmdpbi10b3A6MCAhaW1wb3J0YW50fS5tci14bC0wLC5teC14bC0we21hcmdpbi1yaWdodDowICFpbXBvcnRhbnR9Lm1iLXhsLTAsLm15LXhsLTB7bWFyZ2luLWJvdHRvbTowICFpbXBvcnRhbnR9Lm1sLXhsLTAsLm14LXhsLTB7bWFyZ2luLWxlZnQ6MCAhaW1wb3J0YW50fS5tLXhsLTF7bWFyZ2luOjAuMjVyZW0gIWltcG9ydGFudH0ubXQteGwtMSwubXkteGwtMXttYXJnaW4tdG9wOjAuMjVyZW0gIWltcG9ydGFudH0ubXIteGwtMSwubXgteGwtMXttYXJnaW4tcmlnaHQ6MC4yNXJlbSAhaW1wb3J0YW50fS5tYi14bC0xLC5teS14bC0xe21hcmdpbi1ib3R0b206MC4yNXJlbSAhaW1wb3J0YW50fS5tbC14bC0xLC5teC14bC0xe21hcmdpbi1sZWZ0OjAuMjVyZW0gIWltcG9ydGFudH0ubS14bC0ye21hcmdpbjowLjVyZW0gIWltcG9ydGFudH0ubXQteGwtMiwubXkteGwtMnttYXJnaW4tdG9wOjAuNXJlbSAhaW1wb3J0YW50fS5tci14bC0yLC5teC14bC0ye21hcmdpbi1yaWdodDowLjVyZW0gIWltcG9ydGFudH0ubWIteGwtMiwubXkteGwtMnttYXJnaW4tYm90dG9tOjAuNXJlbSAhaW1wb3J0YW50fS5tbC14bC0yLC5teC14bC0ye21hcmdpbi1sZWZ0OjAuNXJlbSAhaW1wb3J0YW50fS5tLXhsLTN7bWFyZ2luOjFyZW0gIWltcG9ydGFudH0ubXQteGwtMywubXkteGwtM3ttYXJnaW4tdG9wOjFyZW0gIWltcG9ydGFudH0ubXIteGwtMywubXgteGwtM3ttYXJnaW4tcmlnaHQ6MXJlbSAhaW1wb3J0YW50fS5tYi14bC0zLC5teS14bC0ze21hcmdpbi1ib3R0b206MXJlbSAhaW1wb3J0YW50fS5tbC14bC0zLC5teC14bC0ze21hcmdpbi1sZWZ0OjFyZW0gIWltcG9ydGFudH0ubS14bC00e21hcmdpbjoxLjVyZW0gIWltcG9ydGFudH0ubXQteGwtNCwubXkteGwtNHttYXJnaW4tdG9wOjEuNXJlbSAhaW1wb3J0YW50fS5tci14bC00LC5teC14bC00e21hcmdpbi1yaWdodDoxLjVyZW0gIWltcG9ydGFudH0ubWIteGwtNCwubXkteGwtNHttYXJnaW4tYm90dG9tOjEuNXJlbSAhaW1wb3J0YW50fS5tbC14bC00LC5teC14bC00e21hcmdpbi1sZWZ0OjEuNXJlbSAhaW1wb3J0YW50fS5tLXhsLTV7bWFyZ2luOjNyZW0gIWltcG9ydGFudH0ubXQteGwtNSwubXkteGwtNXttYXJnaW4tdG9wOjNyZW0gIWltcG9ydGFudH0ubXIteGwtNSwubXgteGwtNXttYXJnaW4tcmlnaHQ6M3JlbSAhaW1wb3J0YW50fS5tYi14bC01LC5teS14bC01e21hcmdpbi1ib3R0b206M3JlbSAhaW1wb3J0YW50fS5tbC14bC01LC5teC14bC01e21hcmdpbi1sZWZ0OjNyZW0gIWltcG9ydGFudH0ucC14bC0we3BhZGRpbmc6MCAhaW1wb3J0YW50fS5wdC14bC0wLC5weS14bC0we3BhZGRpbmctdG9wOjAgIWltcG9ydGFudH0ucHIteGwtMCwucHgteGwtMHtwYWRkaW5nLXJpZ2h0OjAgIWltcG9ydGFudH0ucGIteGwtMCwucHkteGwtMHtwYWRkaW5nLWJvdHRvbTowICFpbXBvcnRhbnR9LnBsLXhsLTAsLnB4LXhsLTB7cGFkZGluZy1sZWZ0OjAgIWltcG9ydGFudH0ucC14bC0xe3BhZGRpbmc6MC4yNXJlbSAhaW1wb3J0YW50fS5wdC14bC0xLC5weS14bC0xe3BhZGRpbmctdG9wOjAuMjVyZW0gIWltcG9ydGFudH0ucHIteGwtMSwucHgteGwtMXtwYWRkaW5nLXJpZ2h0OjAuMjVyZW0gIWltcG9ydGFudH0ucGIteGwtMSwucHkteGwtMXtwYWRkaW5nLWJvdHRvbTowLjI1cmVtICFpbXBvcnRhbnR9LnBsLXhsLTEsLnB4LXhsLTF7cGFkZGluZy1sZWZ0OjAuMjVyZW0gIWltcG9ydGFudH0ucC14bC0ye3BhZGRpbmc6MC41cmVtICFpbXBvcnRhbnR9LnB0LXhsLTIsLnB5LXhsLTJ7cGFkZGluZy10b3A6MC41cmVtICFpbXBvcnRhbnR9LnByLXhsLTIsLnB4LXhsLTJ7cGFkZGluZy1yaWdodDowLjVyZW0gIWltcG9ydGFudH0ucGIteGwtMiwucHkteGwtMntwYWRkaW5nLWJvdHRvbTowLjVyZW0gIWltcG9ydGFudH0ucGwteGwtMiwucHgteGwtMntwYWRkaW5nLWxlZnQ6MC41cmVtICFpbXBvcnRhbnR9LnAteGwtM3twYWRkaW5nOjFyZW0gIWltcG9ydGFudH0ucHQteGwtMywucHkteGwtM3twYWRkaW5nLXRvcDoxcmVtICFpbXBvcnRhbnR9LnByLXhsLTMsLnB4LXhsLTN7cGFkZGluZy1yaWdodDoxcmVtICFpbXBvcnRhbnR9LnBiLXhsLTMsLnB5LXhsLTN7cGFkZGluZy1ib3R0b206MXJlbSAhaW1wb3J0YW50fS5wbC14bC0zLC5weC14bC0ze3BhZGRpbmctbGVmdDoxcmVtICFpbXBvcnRhbnR9LnAteGwtNHtwYWRkaW5nOjEuNXJlbSAhaW1wb3J0YW50fS5wdC14bC00LC5weS14bC00e3BhZGRpbmctdG9wOjEuNXJlbSAhaW1wb3J0YW50fS5wci14bC00LC5weC14bC00e3BhZGRpbmctcmlnaHQ6MS41cmVtICFpbXBvcnRhbnR9LnBiLXhsLTQsLnB5LXhsLTR7cGFkZGluZy1ib3R0b206MS41cmVtICFpbXBvcnRhbnR9LnBsLXhsLTQsLnB4LXhsLTR7cGFkZGluZy1sZWZ0OjEuNXJlbSAhaW1wb3J0YW50fS5wLXhsLTV7cGFkZGluZzozcmVtICFpbXBvcnRhbnR9LnB0LXhsLTUsLnB5LXhsLTV7cGFkZGluZy10b3A6M3JlbSAhaW1wb3J0YW50fS5wci14bC01LC5weC14bC01e3BhZGRpbmctcmlnaHQ6M3JlbSAhaW1wb3J0YW50fS5wYi14bC01LC5weS14bC01e3BhZGRpbmctYm90dG9tOjNyZW0gIWltcG9ydGFudH0ucGwteGwtNSwucHgteGwtNXtwYWRkaW5nLWxlZnQ6M3JlbSAhaW1wb3J0YW50fS5tLXhsLW4xe21hcmdpbjotMC4yNXJlbSAhaW1wb3J0YW50fS5tdC14bC1uMSwubXkteGwtbjF7bWFyZ2luLXRvcDotMC4yNXJlbSAhaW1wb3J0YW50fS5tci14bC1uMSwubXgteGwtbjF7bWFyZ2luLXJpZ2h0Oi0wLjI1cmVtICFpbXBvcnRhbnR9Lm1iLXhsLW4xLC5teS14bC1uMXttYXJnaW4tYm90dG9tOi0wLjI1cmVtICFpbXBvcnRhbnR9Lm1sLXhsLW4xLC5teC14bC1uMXttYXJnaW4tbGVmdDotMC4yNXJlbSAhaW1wb3J0YW50fS5tLXhsLW4ye21hcmdpbjotMC41cmVtICFpbXBvcnRhbnR9Lm10LXhsLW4yLC5teS14bC1uMnttYXJnaW4tdG9wOi0wLjVyZW0gIWltcG9ydGFudH0ubXIteGwtbjIsLm14LXhsLW4ye21hcmdpbi1yaWdodDotMC41cmVtICFpbXBvcnRhbnR9Lm1iLXhsLW4yLC5teS14bC1uMnttYXJnaW4tYm90dG9tOi0wLjVyZW0gIWltcG9ydGFudH0ubWwteGwtbjIsLm14LXhsLW4ye21hcmdpbi1sZWZ0Oi0wLjVyZW0gIWltcG9ydGFudH0ubS14bC1uM3ttYXJnaW46LTFyZW0gIWltcG9ydGFudH0ubXQteGwtbjMsLm15LXhsLW4ze21hcmdpbi10b3A6LTFyZW0gIWltcG9ydGFudH0ubXIteGwtbjMsLm14LXhsLW4ze21hcmdpbi1yaWdodDotMXJlbSAhaW1wb3J0YW50fS5tYi14bC1uMywubXkteGwtbjN7bWFyZ2luLWJvdHRvbTotMXJlbSAhaW1wb3J0YW50fS5tbC14bC1uMywubXgteGwtbjN7bWFyZ2luLWxlZnQ6LTFyZW0gIWltcG9ydGFudH0ubS14bC1uNHttYXJnaW46LTEuNXJlbSAhaW1wb3J0YW50fS5tdC14bC1uNCwubXkteGwtbjR7bWFyZ2luLXRvcDotMS41cmVtICFpbXBvcnRhbnR9Lm1yLXhsLW40LC5teC14bC1uNHttYXJnaW4tcmlnaHQ6LTEuNXJlbSAhaW1wb3J0YW50fS5tYi14bC1uNCwubXkteGwtbjR7bWFyZ2luLWJvdHRvbTotMS41cmVtICFpbXBvcnRhbnR9Lm1sLXhsLW40LC5teC14bC1uNHttYXJnaW4tbGVmdDotMS41cmVtICFpbXBvcnRhbnR9Lm0teGwtbjV7bWFyZ2luOi0zcmVtICFpbXBvcnRhbnR9Lm10LXhsLW41LC5teS14bC1uNXttYXJnaW4tdG9wOi0zcmVtICFpbXBvcnRhbnR9Lm1yLXhsLW41LC5teC14bC1uNXttYXJnaW4tcmlnaHQ6LTNyZW0gIWltcG9ydGFudH0ubWIteGwtbjUsLm15LXhsLW41e21hcmdpbi1ib3R0b206LTNyZW0gIWltcG9ydGFudH0ubWwteGwtbjUsLm14LXhsLW41e21hcmdpbi1sZWZ0Oi0zcmVtICFpbXBvcnRhbnR9Lm0teGwtYXV0b3ttYXJnaW46YXV0byAhaW1wb3J0YW50fS5tdC14bC1hdXRvLC5teS14bC1hdXRve21hcmdpbi10b3A6YXV0byAhaW1wb3J0YW50fS5tci14bC1hdXRvLC5teC14bC1hdXRve21hcmdpbi1yaWdodDphdXRvICFpbXBvcnRhbnR9Lm1iLXhsLWF1dG8sLm15LXhsLWF1dG97bWFyZ2luLWJvdHRvbTphdXRvICFpbXBvcnRhbnR9Lm1sLXhsLWF1dG8sLm14LXhsLWF1dG97bWFyZ2luLWxlZnQ6YXV0byAhaW1wb3J0YW50fX0udGV4dC1tb25vc3BhY2V7Zm9udC1mYW1pbHk6U0ZNb25vLVJlZ3VsYXIsIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCBcXFwiTGliZXJhdGlvbiBNb25vXFxcIiwgXFxcIkNvdXJpZXIgTmV3XFxcIiwgbW9ub3NwYWNlICFpbXBvcnRhbnR9LnRleHQtanVzdGlmeXt0ZXh0LWFsaWduOmp1c3RpZnkgIWltcG9ydGFudH0udGV4dC13cmFwe3doaXRlLXNwYWNlOm5vcm1hbCAhaW1wb3J0YW50fS50ZXh0LW5vd3JhcHt3aGl0ZS1zcGFjZTpub3dyYXAgIWltcG9ydGFudH0udGV4dC10cnVuY2F0ZXtvdmVyZmxvdzpoaWRkZW47dGV4dC1vdmVyZmxvdzplbGxpcHNpczt3aGl0ZS1zcGFjZTpub3dyYXB9LnRleHQtbGVmdHt0ZXh0LWFsaWduOmxlZnQgIWltcG9ydGFudH0udGV4dC1yaWdodHt0ZXh0LWFsaWduOnJpZ2h0ICFpbXBvcnRhbnR9LnRleHQtY2VudGVye3RleHQtYWxpZ246Y2VudGVyICFpbXBvcnRhbnR9QG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KXsudGV4dC1zbS1sZWZ0e3RleHQtYWxpZ246bGVmdCAhaW1wb3J0YW50fS50ZXh0LXNtLXJpZ2h0e3RleHQtYWxpZ246cmlnaHQgIWltcG9ydGFudH0udGV4dC1zbS1jZW50ZXJ7dGV4dC1hbGlnbjpjZW50ZXIgIWltcG9ydGFudH19QG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KXsudGV4dC1tZC1sZWZ0e3RleHQtYWxpZ246bGVmdCAhaW1wb3J0YW50fS50ZXh0LW1kLXJpZ2h0e3RleHQtYWxpZ246cmlnaHQgIWltcG9ydGFudH0udGV4dC1tZC1jZW50ZXJ7dGV4dC1hbGlnbjpjZW50ZXIgIWltcG9ydGFudH19QG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KXsudGV4dC1sZy1sZWZ0e3RleHQtYWxpZ246bGVmdCAhaW1wb3J0YW50fS50ZXh0LWxnLXJpZ2h0e3RleHQtYWxpZ246cmlnaHQgIWltcG9ydGFudH0udGV4dC1sZy1jZW50ZXJ7dGV4dC1hbGlnbjpjZW50ZXIgIWltcG9ydGFudH19QG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCl7LnRleHQteGwtbGVmdHt0ZXh0LWFsaWduOmxlZnQgIWltcG9ydGFudH0udGV4dC14bC1yaWdodHt0ZXh0LWFsaWduOnJpZ2h0ICFpbXBvcnRhbnR9LnRleHQteGwtY2VudGVye3RleHQtYWxpZ246Y2VudGVyICFpbXBvcnRhbnR9fS50ZXh0LWxvd2VyY2FzZXt0ZXh0LXRyYW5zZm9ybTpsb3dlcmNhc2UgIWltcG9ydGFudH0udGV4dC11cHBlcmNhc2V7dGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlICFpbXBvcnRhbnR9LnRleHQtY2FwaXRhbGl6ZXt0ZXh0LXRyYW5zZm9ybTpjYXBpdGFsaXplICFpbXBvcnRhbnR9LmZvbnQtd2VpZ2h0LWxpZ2h0e2ZvbnQtd2VpZ2h0OjMwMCAhaW1wb3J0YW50fS5mb250LXdlaWdodC1saWdodGVye2ZvbnQtd2VpZ2h0OmxpZ2h0ZXIgIWltcG9ydGFudH0uZm9udC13ZWlnaHQtbm9ybWFse2ZvbnQtd2VpZ2h0OjQwMCAhaW1wb3J0YW50fS5mb250LXdlaWdodC1ib2xke2ZvbnQtd2VpZ2h0OjcwMCAhaW1wb3J0YW50fS5mb250LXdlaWdodC1ib2xkZXJ7Zm9udC13ZWlnaHQ6Ym9sZGVyICFpbXBvcnRhbnR9LmZvbnQtaXRhbGlje2ZvbnQtc3R5bGU6aXRhbGljICFpbXBvcnRhbnR9LnRleHQtd2hpdGV7Y29sb3I6I2ZmZiAhaW1wb3J0YW50fS50ZXh0LXByaW1hcnl7Y29sb3I6IzAwN2JmZiAhaW1wb3J0YW50fWEudGV4dC1wcmltYXJ5OmhvdmVyLGEudGV4dC1wcmltYXJ5OmZvY3Vze2NvbG9yOiMwMDU2YjMgIWltcG9ydGFudH0udGV4dC1zZWNvbmRhcnl7Y29sb3I6IzZjNzU3ZCAhaW1wb3J0YW50fWEudGV4dC1zZWNvbmRhcnk6aG92ZXIsYS50ZXh0LXNlY29uZGFyeTpmb2N1c3tjb2xvcjojNDk0ZjU0ICFpbXBvcnRhbnR9LnRleHQtc3VjY2Vzc3tjb2xvcjojMjhhNzQ1ICFpbXBvcnRhbnR9YS50ZXh0LXN1Y2Nlc3M6aG92ZXIsYS50ZXh0LXN1Y2Nlc3M6Zm9jdXN7Y29sb3I6IzE5NjkyYyAhaW1wb3J0YW50fS50ZXh0LWluZm97Y29sb3I6IzE3YTJiOCAhaW1wb3J0YW50fWEudGV4dC1pbmZvOmhvdmVyLGEudGV4dC1pbmZvOmZvY3Vze2NvbG9yOiMwZjY2NzQgIWltcG9ydGFudH0udGV4dC13YXJuaW5ne2NvbG9yOiNmZmMxMDcgIWltcG9ydGFudH1hLnRleHQtd2FybmluZzpob3ZlcixhLnRleHQtd2FybmluZzpmb2N1c3tjb2xvcjojYmE4YjAwICFpbXBvcnRhbnR9LnRleHQtZGFuZ2Vye2NvbG9yOiNkYzM1NDUgIWltcG9ydGFudH1hLnRleHQtZGFuZ2VyOmhvdmVyLGEudGV4dC1kYW5nZXI6Zm9jdXN7Y29sb3I6I2E3MWQyYSAhaW1wb3J0YW50fS50ZXh0LWxpZ2h0e2NvbG9yOiNmOGY5ZmEgIWltcG9ydGFudH1hLnRleHQtbGlnaHQ6aG92ZXIsYS50ZXh0LWxpZ2h0OmZvY3Vze2NvbG9yOiNjYmQzZGEgIWltcG9ydGFudH0udGV4dC1kYXJre2NvbG9yOiMzNDNhNDAgIWltcG9ydGFudH1hLnRleHQtZGFyazpob3ZlcixhLnRleHQtZGFyazpmb2N1c3tjb2xvcjojMTIxNDE2ICFpbXBvcnRhbnR9LnRleHQtYm9keXtjb2xvcjojMjEyNTI5ICFpbXBvcnRhbnR9LnRleHQtbXV0ZWR7Y29sb3I6IzZjNzU3ZCAhaW1wb3J0YW50fS50ZXh0LWJsYWNrLTUwe2NvbG9yOnJnYmEoMCwwLDAsMC41KSAhaW1wb3J0YW50fS50ZXh0LXdoaXRlLTUwe2NvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMC41KSAhaW1wb3J0YW50fS50ZXh0LWhpZGV7Zm9udDowLzAgYTtjb2xvcjp0cmFuc3BhcmVudDt0ZXh0LXNoYWRvdzpub25lO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyOjB9LnRleHQtZGVjb3JhdGlvbi1ub25le3RleHQtZGVjb3JhdGlvbjpub25lICFpbXBvcnRhbnR9LnRleHQtYnJlYWt7d29yZC1icmVhazpicmVhay13b3JkICFpbXBvcnRhbnQ7b3ZlcmZsb3ctd3JhcDpicmVhay13b3JkICFpbXBvcnRhbnR9LnRleHQtcmVzZXR7Y29sb3I6aW5oZXJpdCAhaW1wb3J0YW50fS52aXNpYmxle3Zpc2liaWxpdHk6dmlzaWJsZSAhaW1wb3J0YW50fS5pbnZpc2libGV7dmlzaWJpbGl0eTpoaWRkZW4gIWltcG9ydGFudH1AbWVkaWEgcHJpbnR7KiwqOjpiZWZvcmUsKjo6YWZ0ZXJ7dGV4dC1zaGFkb3c6bm9uZSAhaW1wb3J0YW50O2JveC1zaGFkb3c6bm9uZSAhaW1wb3J0YW50fWE6bm90KC5idG4pe3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmV9YWJiclt0aXRsZV06OmFmdGVye2NvbnRlbnQ6XFxcIiAoXFxcIiBhdHRyKHRpdGxlKSBcXFwiKVxcXCJ9cHJle3doaXRlLXNwYWNlOnByZS13cmFwICFpbXBvcnRhbnR9cHJlLGJsb2NrcXVvdGV7Ym9yZGVyOjFweCBzb2xpZCAjYWRiNWJkO3BhZ2UtYnJlYWstaW5zaWRlOmF2b2lkfXRoZWFke2Rpc3BsYXk6dGFibGUtaGVhZGVyLWdyb3VwfXRyLGltZ3twYWdlLWJyZWFrLWluc2lkZTphdm9pZH1wLGgyLGgze29ycGhhbnM6Mzt3aWRvd3M6M31oMixoM3twYWdlLWJyZWFrLWFmdGVyOmF2b2lkfUBwYWdle3NpemU6YTN9Ym9keXttaW4td2lkdGg6OTkycHggIWltcG9ydGFudH0uY29udGFpbmVye21pbi13aWR0aDo5OTJweCAhaW1wb3J0YW50fS5uYXZiYXJ7ZGlzcGxheTpub25lfS5iYWRnZXtib3JkZXI6MXB4IHNvbGlkICMwMDB9LnRhYmxle2JvcmRlci1jb2xsYXBzZTpjb2xsYXBzZSAhaW1wb3J0YW50fS50YWJsZSB0ZCwudGFibGUgdGh7YmFja2dyb3VuZC1jb2xvcjojZmZmICFpbXBvcnRhbnR9LnRhYmxlLWJvcmRlcmVkIHRoLC50YWJsZS1ib3JkZXJlZCB0ZHtib3JkZXI6MXB4IHNvbGlkICNkZWUyZTYgIWltcG9ydGFudH0udGFibGUtZGFya3tjb2xvcjppbmhlcml0fS50YWJsZS1kYXJrIHRoLC50YWJsZS1kYXJrIHRkLC50YWJsZS1kYXJrIHRoZWFkIHRoLC50YWJsZS1kYXJrIHRib2R5K3Rib2R5e2JvcmRlci1jb2xvcjojZGVlMmU2fS50YWJsZSAudGhlYWQtZGFyayB0aHtjb2xvcjppbmhlcml0O2JvcmRlci1jb2xvcjojZGVlMmU2fX1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcImZvb3RlcntkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OmNlbnRlcn1oMSxoMntkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXJ9ZGl2IGF7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJX0uY29uZmlnQnV0dG9ue3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjEwcHg7dG9wOjE1cHh9I2NhdElucHV0e3dpZHRoOjEwMCV9I1VzZXJEYXNoYm9hcmR7Y29sb3I6d2hpdGU7Zm9udC1mYW1pbHk6J0F1ZGlvd2lkZScsIGN1cnNpdmV9I2NvbmZpZ0Rhc2hib2FyZHt3aWR0aDo4MCU7Y29sb3I6YmxhY2s7Zm9udC1mYW1pbHk6J0F1ZGlvd2lkZScsIGN1cnNpdmV9ZGl2I2NvbmZpZ0hlYWRlcntiYWNrZ3JvdW5kLWNvbG9yOmxpZ2h0Z3JheTtib3JkZXItcmFkaXVzOjVweH0ucm91dGVye3dpZHRoOjEwMCU7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOnJvdzthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcn0uY2F0ZWdvcmllc0Ryb3B7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyfS5idG57d2lkdGg6MTAwJX0jY2hhcnRBcmVhe3dpZHRoOjgwJX1zdmd7d2lkdGg6MTAwJTtoZWlnaHQ6MzAwcHg7b3ZlcmZsb3c6dmlzaWJsZTttYXJnaW4tYm90dG9tOjJyZW07ZGlzcGxheTpibG9jaztib3gtc2hhZG93Omluc2V0IDFweCAyMDAwcHggcmdiYSgyMDgsMjA4LDIwOCwwLjc1KX10ZXh0e2NvbG9yOndoaXRlc21va2V9c3Bhbi5xdWVyeVNwYW4uaW5wdXR7bWFyZ2luLXJpZ2h0OjEwcHh9I3Jvb3R7Zm9udC1mYW1pbHk6J0F1ZGlvd2lkZScsIGN1cnNpdmU7ZmxleC1iYXNpczoxMDAlO2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47YWxpZ24taXRlbXM6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXJ9I3VzZXJEYXNoYm9hcmR7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjtmbGV4LWJhc2lzOjEwMCU7aGVpZ2h0OjEwMHZofSNuYXZCdG57ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOnJvdzthbGlnbi1zZWxmOmZsZXgtZW5kO2FsaWduLWl0ZW1zOmNlbnRlcn1kaXYjbmF2QnRue2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpyb3ctcmV2ZXJzZX1zcGFue2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtZXZlbmx5fWJ1dHRvbnttYXJnaW4tdG9wOjEwcHg7bWFyZ2luLWJvdHRvbTo1cHg7d2lkdGg6MTAwJX1idXR0b246aG92ZXJ7Y29sb3I6IzcyNzhhYjtib3gtc2hhZG93OjAgNXB4IDE1cHggIzcyNzhhYn1kaXYgLnRvb2x0aXB7YmFja2dyb3VuZDpsaWdodHN0ZWVsYmx1ZX10ZXh0LnRvb2x0aXB7YmFja2dyb3VuZDpsaWdodHN0ZWVsYmx1ZX0udG9vbHRpcHtwYWRkaW5nOjU7Zm9udC1zaXplOjIwcHg7ZmlsbDpibGFjaztmb250LXdlaWdodDo2MDB9LmJhcjpob3ZlcntmaWxsOiNmZmI3NGI7ZmlsbC1vcGFjaXR5OjcwJTtib3gtc2hhZG93OjAgNXB4IDE1cHggIzcyNzhhYn0jZW5kcG9pbnRIZWFkZXJ7bWFyZ2luLWxlZnQ6MTBweH0jY2F0ZWdvcmllc0hlYWRlcnttYXJnaW4tbGVmdDoxMHB4fSNidG5BZGRRdWVyeSBidXR0b257d2lkdGg6MTAwJX1idXR0b24uYnRuU2Vjb25kYXJ5LmJ0bi5idG4tb3V0bGluZS1zZWNvbmRhcnl7d2lkdGg6MTAwJTtiYWNrZ3JvdW5kLWNvbG9yOndoaXRlc21va2U7Y29sb3I6YmxhY2t9LmRlbGV0ZUJ0bntjb2xvcjp3aGl0ZTttYXJnaW4tbGVmdDoxMHB4O3NpemU6MTAlO2hlaWdodDo1MHB4O3dpZHRoOjUwcHg7Ym9yZGVyLXJhZGl1czo1cHh9c3BhbiNuYXZCdG5TcGFue3dpZHRoOjEwMCU7YWxpZ24tY29udGVudDpzcGFjZS1iZXR3ZWVuO2FsaWduLWl0ZW1zOmNlbnRlcn0jbmF2QnRuR3JvdXB7d2lkdGg6MTAwJTthbGlnbi1pdGVtczpjZW50ZXJ9I2J0bkNvbnRhaW5lcnt3aWR0aDoxMDAlfWRpdi5jb2wtNntkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2FsaWduLWl0ZW1zOmNlbnRlcn1idXR0b24jbmF2VXNlckRhc2h7bWFyZ2luOmF1dG87bWFyZ2luLXRvcDoxMHB4O21hcmdpbi1ib3R0b206MTBweH1idXR0b24jbmF2UHJvamVjdFNlbGVjdHttYXJnaW46YXV0bzttYXJnaW4tdG9wOjEwcHg7bWFyZ2luLWJvdHRvbToxMHB4fWJ1dHRvbiNuYXZDb25maWdEYXNoe2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47YWxpZ24taXRlbXM6Y2VudGVyfWEjbmF2Q29uZmlnTGlua3tjb2xvcjp3aGl0ZXNtb2tlO3RleHQtZGVjb3JhdGlvbi1saW5lOm5vbmU7d2lkdGg6MTAwJX1hI25hdlVzZXJEYXNoTGlua3tjb2xvcjp3aGl0ZXNtb2tlO3RleHQtZGVjb3JhdGlvbi1saW5lOm5vbmU7d2lkdGg6MTAwJX1hI25hdlByb2pMaW5re2NvbG9yOndoaXRlc21va2U7dGV4dC1kZWNvcmF0aW9uLWxpbmU6bm9uZTt3aWR0aDoxMDAlfSNwcm9qZWN0U2VsZWN0e2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47YWxpZ24taXRlbXM6Y2VudGVyfWxpbmt7Y29sb3I6d2hpdGU7dGV4dC1zaXplLWFkanVzdDoxMDAlfS5idG4tcHJpbWFyeXtiYWNrZ3JvdW5kLWNvbG9yOiMwNzNiNjY7Ym9yZGVyLWNvbG9yOiMxOTQ3Nzl9LmNsb3Nle3dpZHRoOjI1JX0uYnRuLWRhbmdlcnttYXJnaW46YXV0b31kaXYjZnJlcUV4YW1wbGVze2NvbG9yOmdyYXl9QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3MDBweCl7I25hdlByb2plY3RTZWxlY3R7d2lkdGg6bWF4LWNvbnRlbnQ7bWF4LXdpZHRoOjIzMHB4O2ZsZXgtd3JhcDp3cmFwfS5yb3V0ZXJ7bWluLXdpZHRoOjUwMH0jbmF2VXNlckRhc2h7d2lkdGg6bWF4LWNvbnRlbnR9bGlua3tjb2xvcjp3aGl0ZTttaW4td2lkdGg6MjMwcHg7aGVpZ2h0Om1heC1jb250ZW50O3RleHQtc2l6ZS1hZGp1c3Q6MTAwJX19XFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiIsIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIHJlc3VsdFtrXSA9IG1vZFtrXTtcbiAgICByZXN1bHRbXCJkZWZhdWx0XCJdID0gbW9kO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGQzXzEgPSByZXF1aXJlKFwiZDNcIik7XG52YXIgcmVhY3RfMSA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwicmVhY3RcIikpO1xucmVxdWlyZShcIi4uL3N0eWxlc2hlZXRzL3N0eWxlLnNjc3NcIik7XG52YXIgVGltZVZpeiA9IGZ1bmN0aW9uIChwcm9wcykge1xuICAgIHZhciB0aW1lRGF0YSA9IHByb3BzLnRpbWVEYXRhO1xuICAgIHZhciBzZWxlY3RlZFF1ZXJpZXMgPSBwcm9wcy5zZWxlY3RlZFF1ZXJpZXM7XG4gICAgdmFyIHRpbWluZyA9IHt9OyAvL3RoaXMgd2lsbCBiZSBhIHsncXVlcnInOiBbYXJyYXkgb2YgYWxsIHJlc3BvbnNldGltZXNdfVxuICAgIHZhciB0aW1lU3RhbXBzID0gW107IC8vdGhpcyB3aWxsIGJlIGFuIGFycmF5IG9mIHRpbWVzdGFtcCBzdHJpbmdzXG4gICAgdmFyIF9sb29wXzEgPSBmdW5jdGlvbiAocXVlcikge1xuICAgICAgICB0aW1pbmdbcXVlcl0gPSBbXTtcbiAgICAgICAgdGltZURhdGFbcXVlcl0uZm9yRWFjaChmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgIHRpbWVTdGFtcHMucHVzaChyZXNwb25zZS50aW1lc3RhbXApO1xuICAgICAgICAgICAgdGltaW5nW3F1ZXJdLnB1c2goKHJlc3BvbnNlLnRpbWluZ1swXSArIHJlc3BvbnNlLnRpbWluZ1sxXSAvIDEwMDAwMDAwMDApKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRpbWluZ1txdWVyXS5zaGlmdCgpO1xuICAgIH07XG4gICAgZm9yICh2YXIgcXVlciBpbiB0aW1lRGF0YSkge1xuICAgICAgICBfbG9vcF8xKHF1ZXIpO1xuICAgIH1cbiAgICAvLyBsZXQgW2RhdGEsIHNldERhdGFdID0gdXNlU3RhdGUoKTtcbiAgICB2YXIgZGF0YTtcbiAgICBpZiAodGltaW5nW3NlbGVjdGVkUXVlcmllc1swXV0pIHtcbiAgICAgICAgZGF0YSA9IHRpbWluZ1tzZWxlY3RlZFF1ZXJpZXNbMF1dO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZGF0YSA9IFsuMTAsIC4xMCwgLjEwLCAuMTAsIC4xMCwgLjEwLCAuMTBdO1xuICAgIH1cbiAgICAvLyBsZXQgW3RpbWUsIHNldFRpbWVdID0gdXNlU3RhdGUoW3sgbmFtZTogJ1F1ZXJ5IDEnLCBsYWJlbE9mZnNldDogNjAsIHZhbHVlOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gZDMuMTBsKHQsIDEsIDAuNSk7IH0gfSxcbiAgICAvLyBdKTtcbiAgICB2YXIgc3ZnUmVmID0gcmVhY3RfMS51c2VSZWYoKTtcbiAgICAvKlRoZSBtb3N0IGJhc2ljIFNWRyBmaWxlIGNvbnRhaW5zIHRoZSBmb2xsb3dpbmcgZm9ybWF0OlxuICAgIC0tU2l6ZSBvZiB0aGUgdmlld3BvcnQgKFRoaW5rIG9mIHRoaXMgYXMgdGhlIGltYWdlIHJlc29sdXRpb24pXG4gICAgLS1Hcm91cGluZyBpbnN0cnVjdGlvbnMgdmlhIHRoZSBlbGVtZW50IC0tIEhvdyBzaG91bGQgZWxlbWVudHMgYmUgZ3JvdXBlZD9cbiAgICAtLURyYXdpbmcgaW5zdHJ1Y3Rpb25zIHVzaW5nIHRoZSBzaGFwZXMgZWxlbWVudHNcbiAgICAtLVN0eWxlIHNwZWNpZmljYXRpb25zIGRlc2NyaWJpbmcgaG93IGVhY2ggZWxlbWVudCBzaG91bGQgYmUgZHJhd24uKi9cbiAgICAvLyB3aWxsIGJlIGNhbGxlZCBpbml0aWFsbHkgYW5kIG9uIGV2ZXJ5IGRhdGEgY2hhbmdlXG4gICAgcmVhY3RfMS51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICAvLyBpZiAodGltaW5nW3NlbGVjdGVkUXVlcmllc1swXV0pIHtcbiAgICAgICAgLy8gfVxuICAgICAgICB2YXIgY2hhcnREaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2hhcnRBcmVhJyk7IC8vZ3JhYiB0aGUgY2hhcnQgYXJlYSB0aGF0IHRoZSBncmFwaCBsaXZlcyBpblxuICAgICAgICB2YXIgbWFyZ2luID0geyB5aGVpZ2h0OiBjaGFydERpdi5jbGllbnRIZWlnaHQsIHh3aWR0aDogY2hhcnREaXYuY2xpZW50V2lkdGggfTsgLy9tYXJnaW5zIHJlcXVpcmVkIGZvciByZXNpemluZ1xuICAgICAgICBmdW5jdGlvbiByZWRyYXdMaW5lKCkge1xuICAgICAgICAgICAgbWFyZ2luLnloZWlnaHQgPSBjaGFydERpdi5jbGllbnRIZWlnaHQ7XG4gICAgICAgICAgICBtYXJnaW4ueHdpZHRoID0gY2hhcnREaXYuY2xpZW50V2lkdGg7XG4gICAgICAgICAgICB4U2NhbGUucmFuZ2UoWzAsIG1hcmdpbi54d2lkdGhdKTtcbiAgICAgICAgICAgIHhBeGlzID0gZDNfMS5heGlzQm90dG9tKHhTY2FsZSkudGlja3MoZGF0YS5sZW5ndGgpOyAvLy50aWNrRm9ybWF0KGluZGV4ID0+IE1hdGguZmxvb3IoaW5kZXggKyAxKSk7XG4gICAgICAgICAgICBzdmcuc2VsZWN0KCcueC1heGlzJykuY2FsbCh4QXhpcyk7XG4gICAgICAgICAgICBzdmcuc2VsZWN0KCcueS1heGlzJykuc3R5bGUoJ3RyYW5zZm9ybScsIFwidHJhbnNsYXRlWChcIiArIG1hcmdpbi54d2lkdGggKyBcInB4KVwiKTtcbiAgICAgICAgICAgIC8vIHN2Zy5zZWxlY3QoJy55LWF4aXMnKS5hcHBlbmQoJ3RleHQnKVxuICAgICAgICAgICAgbmV3TGluZSA9IGQzXzEubGluZSgpLngoZnVuY3Rpb24gKF92YWx1ZSwgaW5kZXgpIHsgcmV0dXJuIHhTY2FsZShpbmRleCk7IH0pLnkoeVNjYWxlKS5jdXJ2ZShkM18xLmN1cnZlQ2FyZGluYWwpO1xuICAgICAgICAgICAgc3ZnXG4gICAgICAgICAgICAgICAgLnNlbGVjdCgncmVjdCcpXG4gICAgICAgICAgICAgICAgLnN0eWxlKCdwb2ludGVyLWV2ZW50cycsICdhbGwnKVxuICAgICAgICAgICAgICAgIC5hdHRyKCd3aWR0aCcsIFwiXCIgKyBtYXJnaW4ueHdpZHRoKTtcbiAgICAgICAgICAgIHN2Z1xuICAgICAgICAgICAgICAgIC5zZWxlY3RBbGwoJy5saW5lJykuYXR0cignZCcsIG5ld0xpbmUpO1xuICAgICAgICB9XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCByZWRyYXdMaW5lKTsgLy9mb3JjZSBhIHJlZHJhdyB3aGVuIHRoZSBwYWdlIHJlc2l6ZXNcbiAgICAgICAgdmFyIG1heCA9IE1hdGgubWF4LmFwcGx5KE1hdGgsIGRhdGEpO1xuICAgICAgICB2YXIgdXBwZXJMaW5lID0gMS41ICogbWF4O1xuICAgICAgICB2YXIgc3ZnID0gZDNfMS5zZWxlY3Qoc3ZnUmVmLmN1cnJlbnQpO1xuICAgICAgICAvL3JhbmdlIGluIHRoZSBzY2FsZXMgY29udHJvbCBob3cgbG9uZyB0aGUgYXhpcyBsaW5lIGlzIG9uIHRoZSBncmFwaFxuICAgICAgICAvL2RvbWFpbiBpcyB0aGUgY29tcGxldGUgc2V0IG9mIHZhbHVlcyBhbmQgdGhlIHJhbmdlIGlzIHRoZSBzZXQgb2YgcmVzdWx0aW5nIHZhbHVlcyBvZiBhIGZ1bmN0aW9uXG4gICAgICAgIHZhciB4U2NhbGUgPSBkM18xLnNjYWxlTGluZWFyKCkuZG9tYWluKFswLCBkYXRhLmxlbmd0aCAtIDFdKS5yYW5nZShbMCwgbWFyZ2luLnh3aWR0aF0pO1xuICAgICAgICB2YXIgeVNjYWxlID0gZDNfMS5zY2FsZUxpbmVhcigpLmRvbWFpbihbMCwgdXBwZXJMaW5lXSkucmFuZ2UoWzMwMCwgMF0pO1xuICAgICAgICAvL2NhbGxpbmcgdGhlIHhBeGlzIGZ1bmN0aW9uIHdpdGggY3VycmVudCBzZWxlY3Rpb25cbiAgICAgICAgdmFyIHhBeGlzID0gZDNfMS5heGlzQm90dG9tKHhTY2FsZSkudGlja3MoZGF0YS5sZW5ndGgpO1xuICAgICAgICB4QXhpcy50aWNrRm9ybWF0KGZ1bmN0aW9uIChkb21haW4pIHsgcmV0dXJuIChNYXRoLmZsb29yKGRvbWFpbikpLnRvU3RyaW5nKCk7IH0pO1xuICAgICAgICBzdmcuc2VsZWN0KCcueC1heGlzJykuc3R5bGUoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGVZKDMwMHB4KScpLnN0eWxlKCdmaWx0ZXInLCAndXJsKCNnbG93KScpLmNhbGwoeEF4aXMpO1xuICAgICAgICAvL1xcdGlja3MgYXJlIGVhY2ggdmFsdWUgaW4gdGhlIGxpbmVcbiAgICAgICAgdmFyIHlBeGlzID0gZDNfMS5heGlzUmlnaHQoeVNjYWxlKS50aWNrcygyMCk7XG4gICAgICAgIHlBeGlzLnRpY2tGb3JtYXQoZnVuY3Rpb24gKGRvbWFpbikgeyByZXR1cm4gKE1hdGgucm91bmQoKGRvbWFpbikgKiAxMDAwKSAvIDEwMDApLnRvU3RyaW5nKCk7IH0pO1xuICAgICAgICBzdmcuc2VsZWN0KCcueS1heGlzJykuc3R5bGUoJ3RyYW5zZm9ybScsIFwidHJhbnNsYXRlWChcIiArIG1hcmdpbi54d2lkdGggKyBcInB4KVwiKS5zdHlsZSgnZmlsdGVyJywgJ3VybCgjZ2xvdyknKS5jYWxsKHlBeGlzKTtcbiAgICAgICAgc3ZnLnNlbGVjdCgnLnktYXhpcycpLmFwcGVuZCgndGV4dCcpXG4gICAgICAgICAgICAuYXR0cignY2xhc3MnLCAneWF4aXNsYWJlbCcpXG4gICAgICAgICAgICAuYXR0cigndHJhbnNmb3JtJywgJ3JvdGF0ZSg5MCknKVxuICAgICAgICAgICAgLmF0dHIoJ3knLCAyMClcbiAgICAgICAgICAgIC5hdHRyKCdkeScsICctM2VtJylcbiAgICAgICAgICAgIC5hdHRyKCd4JywgJzMuNzVlbScpXG4gICAgICAgICAgICAvLyAuYXR0cignZHgnLCAnMC41ZW0nKVxuICAgICAgICAgICAgLnN0eWxlKCd0ZXh0LWFuY2hvcicsICdzdGFydCcpXG4gICAgICAgICAgICAuc3R5bGUoJ2ZpbGwnLCAnd2hpdGUnKVxuICAgICAgICAgICAgLmF0dHIoJ2ZvbnQtc2l6ZScsICcyMHB4JylcbiAgICAgICAgICAgIC50ZXh0KCdSZXNwb25zZSBUaW1lKHMpJyk7XG4gICAgICAgIC8vaW5pdGlhbGl6ZSBhIGxpbmUgdG8gdGhlIHZhbHVlIG9mIGxpbmUgXG4gICAgICAgIC8veCBsaW5lIGlzIHJlbmRlcmluZyB4c2NhbGUgYW5kIHkgaXMgcmVuZGVyaW5nIHlzY2FsZVxuICAgICAgICB2YXIgbmV3TGluZSA9IGQzXzEubGluZSgpLngoZnVuY3Rpb24gKF92YWx1ZSwgaW5kZXgpIHsgcmV0dXJuIHhTY2FsZShpbmRleCk7IH0pLnkoeVNjYWxlKS5jdXJ2ZShkM18xLmN1cnZlQ2FyZGluYWwpO1xuICAgICAgICAvL3NlbGVjdCBhbGwgdGhlIGxpbmUgZWxlbWVudHMgeW91IGZpbmQgaW4gdGhlIHN2ZyBhbmQgc3luY2hyb25pemUgd2l0aCBkYXRhIHByb3ZpZGVkXG4gICAgICAgIC8vd3JhcCBkYXRhIGluIGFub3RoZXIgYXJyYXkgc28gZDMgZG9lc24ndCBnZW5lcmF0ZSBhIG5ldyBwYXRoIGVsZW1lbnQgZm9yIGV2ZXJ5IGVsZW1lbnQgaW4gZGF0YSBhcnJheVxuICAgICAgICAvL2pvaW4gY3JlYXRlcyBhIG5ldyBwYXRoIGVsZW1lbnQgZm9yIGV2ZXJ5IG5ldyBwaWVjZSBvZiBkYXRhXG4gICAgICAgIC8vY2xhc3MgbGluZSBpcyB0byBuZXcgdXBkYXRpbmcgcGF0aCBlbGVtZW50c1xuICAgICAgICAvL0NvbnRhaW5lciBmb3IgdGhlIGdyYWRpZW50c1xuICAgICAgICB2YXIgZGVmcyA9IHN2Zy5hcHBlbmQoJ2RlZnMnKTtcbiAgICAgICAgLy9GaWx0ZXIgZm9yIHRoZSBvdXRzaWRlIGdsb3dcbiAgICAgICAgdmFyIGZpbHRlciA9IGRlZnMuYXBwZW5kKCdmaWx0ZXInKVxuICAgICAgICAgICAgLmF0dHIoJ2lkJywgJ2dsb3cnKTtcbiAgICAgICAgZmlsdGVyLmFwcGVuZCgnZmVHYXVzc2lhbkJsdXInKVxuICAgICAgICAgICAgLmF0dHIoJ3N0ZERldmlhdGlvbicsICczLjUnKVxuICAgICAgICAgICAgLmF0dHIoJ3Jlc3VsdCcsICdjb2xvcmVkQmx1cicpO1xuICAgICAgICB2YXIgZmVNZXJnZSA9IGZpbHRlci5hcHBlbmQoJ2ZlTWVyZ2UnKTtcbiAgICAgICAgZmVNZXJnZS5hcHBlbmQoJ2ZlTWVyZ2VOb2RlJylcbiAgICAgICAgICAgIC5hdHRyKCdpbicsICdjb2xvcmVkQmx1cicpO1xuICAgICAgICBmZU1lcmdlLmFwcGVuZCgnZmVNZXJnZU5vZGUnKVxuICAgICAgICAgICAgLmF0dHIoJ2luJywgJ1NvdXJjZUdyYXBoaWMnKTtcbiAgICAgICAgc3ZnXG4gICAgICAgICAgICAuYXBwZW5kKCdyZWN0JylcbiAgICAgICAgICAgIC5zdHlsZSgnZmlsbCcsICdub25lJylcbiAgICAgICAgICAgIC5zdHlsZSgncG9pbnRlci1ldmVudHMnLCAnYWxsJylcbiAgICAgICAgICAgIC5hdHRyKCd3aWR0aCcsIFwiXCIgKyBtYXJnaW4ueHdpZHRoKVxuICAgICAgICAgICAgLmF0dHIoJ2hlaWdodCcsIDMwMClcbiAgICAgICAgICAgIC5vbignbW91c2VvdmVyJywgbW91c2VvdmVyKVxuICAgICAgICAgICAgLm9uKCdtb3VzZW1vdmUnLCBtb3VzZW1vdmUpXG4gICAgICAgICAgICAub24oJ21vdXNlb3V0JywgbW91c2VvdXQpO1xuICAgICAgICBzdmdcbiAgICAgICAgICAgIC5zZWxlY3RBbGwoJy5saW5lJylcbiAgICAgICAgICAgIC5kYXRhKFtkYXRhXSlcbiAgICAgICAgICAgIC5qb2luKCdwYXRoJylcbiAgICAgICAgICAgIC5hdHRyKCdjbGFzcycsICdsaW5lJylcbiAgICAgICAgICAgIC5hdHRyKCdkJywgbmV3TGluZSlcbiAgICAgICAgICAgIC5hdHRyKCdmaWxsJywgJ25vbmUnKVxuICAgICAgICAgICAgLmF0dHIoJ3N0cm9rZScsICdyZ2IoNiwgNzUsIDExNSknKVxuICAgICAgICAgICAgLnN0eWxlKCdmaWx0ZXInLCAndXJsKCNnbG93KScpO1xuICAgICAgICAvLyBDcmVhdGUgdGhlIGNpcmNsZSB0aGF0IHRyYXZlbHMgYWxvbmcgdGhlIGN1cnZlIG9mIGNoYXJ0XG4gICAgICAgIC8vIFRoaXMgYWxsb3dzIHRvIGZpbmQgdGhlIGNsb3Nlc3QgWCBpbmRleCBvZiB0aGUgbW91c2U6XG4gICAgICAgIC8vIGxldCBiaXNlY3QgPSBiaXNlY3RvcihmdW5jdGlvbiAoZCkgeyByZXR1cm4gZC54U2NhbGU7IH0pLmxlZnQ7XG4gICAgICAgIC8vdGhlIGNpcmNsZSBvbiB0aGUgbGluZVxuICAgICAgICB2YXIgZm9jdXMgPSBzdmdcbiAgICAgICAgICAgIC5hcHBlbmQoJ2cnKVxuICAgICAgICAgICAgLmFwcGVuZCgnY2lyY2xlJylcbiAgICAgICAgICAgIC5zdHlsZSgnZmlsbCcsICdub25lJylcbiAgICAgICAgICAgIC5hdHRyKCdzdHJva2UnLCAnYmxhY2snKVxuICAgICAgICAgICAgLmF0dHIoJ3InLCA4LjUpXG4gICAgICAgICAgICAuc3R5bGUoJ29wYWNpdHknLCAwKTtcbiAgICAgICAgLy90aGUgdGhlIHZlcnRpY2FsIGxpbmUgb24gdGhlIGdyYXBoIHdoZXJlIHRoZSBtb3VzZSBpc1xuICAgICAgICB2YXIgbW91c2VMaW5lID0gc3ZnXG4gICAgICAgICAgICAuYXBwZW5kKCdnJylcbiAgICAgICAgICAgIC5hcHBlbmQoJ3BhdGgnKVxuICAgICAgICAgICAgLmF0dHIoJ2NsYXNzJywgJ21vdXNlLWxpbmUnKVxuICAgICAgICAgICAgLnN0eWxlKCdzdHJva2UnLCAnYmxhY2snKVxuICAgICAgICAgICAgLnN0eWxlKCdzdHJva2Utd2lkdGgnLCAnMXB4JylcbiAgICAgICAgICAgIC5hdHRyKCdoZWlnaHQnLCAzMDApXG4gICAgICAgICAgICAuc3R5bGUoJ29wYWNpdHknLCAwKTtcbiAgICAgICAgLy90aGUgdGhlIHRleHQgb24gdGhlIGdyYXBoIHdoZXJlIHRoZSBtb3VzZSBpc1xuICAgICAgICB2YXIgZm9jdXNUZXh0ID0gc3ZnXG4gICAgICAgICAgICAuYXBwZW5kKCdnJylcbiAgICAgICAgICAgIC5hcHBlbmQoJ3RleHQnKVxuICAgICAgICAgICAgLnN0eWxlKCdvcGFjaXR5JywgMClcbiAgICAgICAgICAgIC5hdHRyKCd0ZXh0LWFuY2hvcicsICdsZWZ0JylcbiAgICAgICAgICAgIC5hdHRyKCdhbGlnbm1lbnQtYmFzZWxpbmUnLCAnbWlkZGxlJyk7XG4gICAgICAgIGZ1bmN0aW9uIG1vdXNlb3ZlcigpIHtcbiAgICAgICAgICAgIGZvY3VzLnN0eWxlKCdvcGFjaXR5JywgMSk7XG4gICAgICAgICAgICBmb2N1c1RleHQuc3R5bGUoJ29wYWNpdHknLCAxKTtcbiAgICAgICAgICAgIG1vdXNlTGluZS5zdHlsZSgnb3BhY2l0eScsIDEpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIG1vdXNlbW92ZSgpIHtcbiAgICAgICAgICAgIC8vIHJlY292ZXIgY29vcmRpbmF0ZSB3ZSBuZWVkXG4gICAgICAgICAgICB2YXIgeDAgPSBNYXRoLmNlaWwoeFNjYWxlLmludmVydChkM18xLm1vdXNlKHRoaXMpWzBdKSkgLSAxO1xuICAgICAgICAgICAgdmFyIHNlbGVjdGVkRGF0YVkgPSBkYXRhW3gwXTtcbiAgICAgICAgICAgIGZvY3VzXG4gICAgICAgICAgICAgICAgLmF0dHIoJ2N4JywgeFNjYWxlKHgwKSlcbiAgICAgICAgICAgICAgICAuYXR0cignY3knLCB5U2NhbGUoc2VsZWN0ZWREYXRhWSkpO1xuICAgICAgICAgICAgZm9jdXNUZXh0XG4gICAgICAgICAgICAgICAgLmh0bWwoKHgwKSArICcgIDogJyArIHNlbGVjdGVkRGF0YVkgKyAncycpXG4gICAgICAgICAgICAgICAgLmF0dHIoJ3gnLCB4U2NhbGUoeDApICsgMTUpXG4gICAgICAgICAgICAgICAgLmF0dHIoJ3knLCB5U2NhbGUoc2VsZWN0ZWREYXRhWSkgLSAyNSk7XG4gICAgICAgICAgICBtb3VzZUxpbmVcbiAgICAgICAgICAgICAgICAuYXR0cignZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgZCA9ICdNJyArIHhTY2FsZSh4MCkgKyAnLCcgKyAzMDA7IC8vdGhpcyBpcyBkcmF3aW5nIHRoZSBsaW5lIGZyb20gMCB0byAzMDBweFxuICAgICAgICAgICAgICAgIGQgKz0gJyAnICsgeFNjYWxlKHgwKSArICcsJyArIDA7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGQ7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBtb3VzZW91dCgpIHtcbiAgICAgICAgICAgIGZvY3VzLnN0eWxlKCdvcGFjaXR5JywgMCk7XG4gICAgICAgICAgICBmb2N1c1RleHQuc3R5bGUoJ29wYWNpdHknLCAwKTtcbiAgICAgICAgICAgIG1vdXNlTGluZS5zdHlsZSgnb3BhY2l0eScsIDApO1xuICAgICAgICB9XG4gICAgfSwgXG4gICAgLy9yZXJlbmRlciBkYXRhIGhlcmVcbiAgICBbZGF0YV0pO1xuICAgIHJldHVybiAocmVhY3RfMS5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQocmVhY3RfMS5kZWZhdWx0LkZyYWdtZW50LCBudWxsLFxuICAgICAgICByZWFjdF8xLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInN2Z1wiLCB7IHJlZjogc3ZnUmVmIH0sXG4gICAgICAgICAgICByZWFjdF8xLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImdcIiwgeyBjbGFzc05hbWU6ICd4LWF4aXMnIH0pLFxuICAgICAgICAgICAgcmVhY3RfMS5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJnXCIsIHsgY2xhc3NOYW1lOiAneS1heGlzJyB9KSksXG4gICAgICAgIHJlYWN0XzEuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYnJcIiwgbnVsbCkpKTtcbn07XG5leHBvcnRzLmRlZmF1bHQgPSBUaW1lVml6O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbldpdGhSZXNldCgpIHt9XG5lbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LnJlc2V0V2FybmluZ0NhY2hlID0gZW1wdHlGdW5jdGlvbjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG5cbiAgICBjaGVja1Byb3BUeXBlczogZW1wdHlGdW5jdGlvbldpdGhSZXNldCxcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoYXJyKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJyKSA9PSAnW29iamVjdCBBcnJheV0nO1xufTtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTIuMFxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7XG52YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTpcbjYwMTIwLHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSx0PWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsdj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTo2MDExNyx3PWI/U3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTo2MDExOCx4PWI/U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpOjYwMTE5O2Z1bmN0aW9uIHkoYSl7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSl7dmFyIHU9YS4kJHR5cGVvZjtzd2l0Y2godSl7Y2FzZSBjOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGw6Y2FzZSBtOmNhc2UgZTpjYXNlIGc6Y2FzZSBmOmNhc2UgcDpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgbjpjYXNlIHQ6Y2FzZSByOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIGQ6cmV0dXJuIHV9fX1mdW5jdGlvbiB6KGEpe3JldHVybiB5KGEpPT09bX1cbmV4cG9ydHMudHlwZU9mPXk7ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO2V4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9dDtleHBvcnRzLk1lbW89cjtleHBvcnRzLlBvcnRhbD1kO2V4cG9ydHMuUHJvZmlsZXI9ZztleHBvcnRzLlN0cmljdE1vZGU9ZjtleHBvcnRzLlN1c3BlbnNlPXA7XG5leHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fGE9PT1xfHxcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiYoYS4kJHR5cGVvZj09PXR8fGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09aHx8YS4kJHR5cGVvZj09PWt8fGEuJCR0eXBlb2Y9PT1ufHxhLiQkdHlwZW9mPT09dnx8YS4kJHR5cGVvZj09PXd8fGEuJCR0eXBlb2Y9PT14KX07ZXhwb3J0cy5pc0FzeW5jTW9kZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKXx8eShhKT09PWx9O2V4cG9ydHMuaXNDb25jdXJyZW50TW9kZT16O2V4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1rfTtleHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09aH07XG5leHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Y307ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1ufTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1lfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PXR9O2V4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09cn07ZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PWR9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PWd9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09Zn07ZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09cH07XG4iLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfcmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG52YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxudmFyIF9wcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5cbnZhciBfcHJvcFR5cGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb3BUeXBlcyk7XG5cbnZhciBfZ3VkID0gcmVxdWlyZSgnZ3VkJyk7XG5cbnZhciBfZ3VkMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2d1ZCk7XG5cbnZhciBfd2FybmluZyA9IHJlcXVpcmUoJ3dhcm5pbmcnKTtcblxudmFyIF93YXJuaW5nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3dhcm5pbmcpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgPSAxMDczNzQxODIzO1xuXG4vLyBJbmxpbmVkIE9iamVjdC5pcyBwb2x5ZmlsbC5cbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL09iamVjdC9pc1xuZnVuY3Rpb24gb2JqZWN0SXMoeCwgeSkge1xuICBpZiAoeCA9PT0geSkge1xuICAgIHJldHVybiB4ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50RW1pdHRlcih2YWx1ZSkge1xuICB2YXIgaGFuZGxlcnMgPSBbXTtcbiAgcmV0dXJuIHtcbiAgICBvbjogZnVuY3Rpb24gb24oaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMucHVzaChoYW5kbGVyKTtcbiAgICB9LFxuICAgIG9mZjogZnVuY3Rpb24gb2ZmKGhhbmRsZXIpIHtcbiAgICAgIGhhbmRsZXJzID0gaGFuZGxlcnMuZmlsdGVyKGZ1bmN0aW9uIChoKSB7XG4gICAgICAgIHJldHVybiBoICE9PSBoYW5kbGVyO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24gc2V0KG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgdmFsdWUgPSBuZXdWYWx1ZTtcbiAgICAgIGhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24gKGhhbmRsZXIpIHtcbiAgICAgICAgcmV0dXJuIGhhbmRsZXIodmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gb25seUNoaWxkKGNoaWxkcmVuKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuWzBdIDogY2hpbGRyZW47XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVJlYWN0Q29udGV4dChkZWZhdWx0VmFsdWUsIGNhbGN1bGF0ZUNoYW5nZWRCaXRzKSB7XG4gIHZhciBfUHJvdmlkZXIkY2hpbGRDb250ZXgsIF9Db25zdW1lciRjb250ZXh0VHlwZTtcblxuICB2YXIgY29udGV4dFByb3AgPSAnX19jcmVhdGUtcmVhY3QtY29udGV4dC0nICsgKDAsIF9ndWQyLmRlZmF1bHQpKCkgKyAnX18nO1xuXG4gIHZhciBQcm92aWRlciA9IGZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzKFByb3ZpZGVyLCBfQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIFByb3ZpZGVyKCkge1xuICAgICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFByb3ZpZGVyKTtcblxuICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfQ29tcG9uZW50LmNhbGwuYXBwbHkoX0NvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLmVtaXR0ZXIgPSBjcmVhdGVFdmVudEVtaXR0ZXIoX3RoaXMucHJvcHMudmFsdWUpLCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgICB9XG5cbiAgICBQcm92aWRlci5wcm90b3R5cGUuZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgICAgdmFyIF9yZWY7XG5cbiAgICAgIHJldHVybiBfcmVmID0ge30sIF9yZWZbY29udGV4dFByb3BdID0gdGhpcy5lbWl0dGVyLCBfcmVmO1xuICAgIH07XG5cbiAgICBQcm92aWRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICBpZiAodGhpcy5wcm9wcy52YWx1ZSAhPT0gbmV4dFByb3BzLnZhbHVlKSB7XG4gICAgICAgIHZhciBvbGRWYWx1ZSA9IHRoaXMucHJvcHMudmFsdWU7XG4gICAgICAgIHZhciBuZXdWYWx1ZSA9IG5leHRQcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIGNoYW5nZWRCaXRzID0gdm9pZCAwO1xuXG4gICAgICAgIGlmIChvYmplY3RJcyhvbGRWYWx1ZSwgbmV3VmFsdWUpKSB7XG4gICAgICAgICAgY2hhbmdlZEJpdHMgPSAwOyAvLyBObyBjaGFuZ2VcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IHR5cGVvZiBjYWxjdWxhdGVDaGFuZ2VkQml0cyA9PT0gJ2Z1bmN0aW9uJyA/IGNhbGN1bGF0ZUNoYW5nZWRCaXRzKG9sZFZhbHVlLCBuZXdWYWx1ZSkgOiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQ7XG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgICgwLCBfd2FybmluZzIuZGVmYXVsdCkoKGNoYW5nZWRCaXRzICYgTUFYX1NJR05FRF8zMV9CSVRfSU5UKSA9PT0gY2hhbmdlZEJpdHMsICdjYWxjdWxhdGVDaGFuZ2VkQml0czogRXhwZWN0ZWQgdGhlIHJldHVybiB2YWx1ZSB0byBiZSBhICcgKyAnMzEtYml0IGludGVnZXIuIEluc3RlYWQgcmVjZWl2ZWQ6ICVzJywgY2hhbmdlZEJpdHMpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNoYW5nZWRCaXRzIHw9IDA7XG5cbiAgICAgICAgICBpZiAoY2hhbmdlZEJpdHMgIT09IDApIHtcbiAgICAgICAgICAgIHRoaXMuZW1pdHRlci5zZXQobmV4dFByb3BzLnZhbHVlLCBjaGFuZ2VkQml0cyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIFByb3ZpZGVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbjtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFByb3ZpZGVyO1xuICB9KF9yZWFjdC5Db21wb25lbnQpO1xuXG4gIFByb3ZpZGVyLmNoaWxkQ29udGV4dFR5cGVzID0gKF9Qcm92aWRlciRjaGlsZENvbnRleCA9IHt9LCBfUHJvdmlkZXIkY2hpbGRDb250ZXhbY29udGV4dFByb3BdID0gX3Byb3BUeXBlczIuZGVmYXVsdC5vYmplY3QuaXNSZXF1aXJlZCwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4KTtcblxuICB2YXIgQ29uc3VtZXIgPSBmdW5jdGlvbiAoX0NvbXBvbmVudDIpIHtcbiAgICBfaW5oZXJpdHMoQ29uc3VtZXIsIF9Db21wb25lbnQyKTtcblxuICAgIGZ1bmN0aW9uIENvbnN1bWVyKCkge1xuICAgICAgdmFyIF90ZW1wMiwgX3RoaXMyLCBfcmV0MjtcblxuICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENvbnN1bWVyKTtcblxuICAgICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbjIpLCBfa2V5MiA9IDA7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgICAgYXJnc1tfa2V5Ml0gPSBhcmd1bWVudHNbX2tleTJdO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gX3JldDIgPSAoX3RlbXAyID0gKF90aGlzMiA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9Db21wb25lbnQyLmNhbGwuYXBwbHkoX0NvbXBvbmVudDIsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMyKSwgX3RoaXMyLnN0YXRlID0ge1xuICAgICAgICB2YWx1ZTogX3RoaXMyLmdldFZhbHVlKClcbiAgICAgIH0sIF90aGlzMi5vblVwZGF0ZSA9IGZ1bmN0aW9uIChuZXdWYWx1ZSwgY2hhbmdlZEJpdHMpIHtcbiAgICAgICAgdmFyIG9ic2VydmVkQml0cyA9IF90aGlzMi5vYnNlcnZlZEJpdHMgfCAwO1xuICAgICAgICBpZiAoKG9ic2VydmVkQml0cyAmIGNoYW5nZWRCaXRzKSAhPT0gMCkge1xuICAgICAgICAgIF90aGlzMi5zZXRTdGF0ZSh7IHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKSB9KTtcbiAgICAgICAgfVxuICAgICAgfSwgX3RlbXAyKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMyLCBfcmV0Mik7XG4gICAgfVxuXG4gICAgQ29uc3VtZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IG5leHRQcm9wcy5vYnNlcnZlZEJpdHM7XG5cbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIC8vIFN1YnNjcmliZSB0byBhbGwgY2hhbmdlcyBieSBkZWZhdWx0XG4gICAgICA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgQ29uc3VtZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9uKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IHRoaXMucHJvcHMub2JzZXJ2ZWRCaXRzO1xuXG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCAvLyBTdWJzY3JpYmUgdG8gYWxsIGNoYW5nZXMgYnkgZGVmYXVsdFxuICAgICAgOiBvYnNlcnZlZEJpdHM7XG4gICAgfTtcblxuICAgIENvbnN1bWVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vZmYodGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIENvbnN1bWVyLnByb3RvdHlwZS5nZXRWYWx1ZSA9IGZ1bmN0aW9uIGdldFZhbHVlKCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0uZ2V0KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBDb25zdW1lci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIG9ubHlDaGlsZCh0aGlzLnByb3BzLmNoaWxkcmVuKSh0aGlzLnN0YXRlLnZhbHVlKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIENvbnN1bWVyO1xuICB9KF9yZWFjdC5Db21wb25lbnQpO1xuXG4gIENvbnN1bWVyLmNvbnRleHRUeXBlcyA9IChfQ29uc3VtZXIkY29udGV4dFR5cGUgPSB7fSwgX0NvbnN1bWVyJGNvbnRleHRUeXBlW2NvbnRleHRQcm9wXSA9IF9wcm9wVHlwZXMyLmRlZmF1bHQub2JqZWN0LCBfQ29uc3VtZXIkY29udGV4dFR5cGUpO1xuXG5cbiAgcmV0dXJuIHtcbiAgICBQcm92aWRlcjogUHJvdmlkZXIsXG4gICAgQ29uc3VtZXI6IENvbnN1bWVyXG4gIH07XG59XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGNyZWF0ZVJlYWN0Q29udGV4dDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIid1c2Ugc3RyaWN0JztcblxudmFyIGtleXNTaGltO1xuaWYgKCFPYmplY3Qua2V5cykge1xuXHQvLyBtb2RpZmllZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9lcy1zaGltcy9lczUtc2hpbVxuXHR2YXIgaGFzID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblx0dmFyIHRvU3RyID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblx0dmFyIGlzQXJncyA9IHJlcXVpcmUoJy4vaXNBcmd1bWVudHMnKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBnbG9iYWwtcmVxdWlyZVxuXHR2YXIgaXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblx0dmFyIGhhc0RvbnRFbnVtQnVnID0gIWlzRW51bWVyYWJsZS5jYWxsKHsgdG9TdHJpbmc6IG51bGwgfSwgJ3RvU3RyaW5nJyk7XG5cdHZhciBoYXNQcm90b0VudW1CdWcgPSBpc0VudW1lcmFibGUuY2FsbChmdW5jdGlvbiAoKSB7fSwgJ3Byb3RvdHlwZScpO1xuXHR2YXIgZG9udEVudW1zID0gW1xuXHRcdCd0b1N0cmluZycsXG5cdFx0J3RvTG9jYWxlU3RyaW5nJyxcblx0XHQndmFsdWVPZicsXG5cdFx0J2hhc093blByb3BlcnR5Jyxcblx0XHQnaXNQcm90b3R5cGVPZicsXG5cdFx0J3Byb3BlcnR5SXNFbnVtZXJhYmxlJyxcblx0XHQnY29uc3RydWN0b3InXG5cdF07XG5cdHZhciBlcXVhbHNDb25zdHJ1Y3RvclByb3RvdHlwZSA9IGZ1bmN0aW9uIChvKSB7XG5cdFx0dmFyIGN0b3IgPSBvLmNvbnN0cnVjdG9yO1xuXHRcdHJldHVybiBjdG9yICYmIGN0b3IucHJvdG90eXBlID09PSBvO1xuXHR9O1xuXHR2YXIgZXhjbHVkZWRLZXlzID0ge1xuXHRcdCRhcHBsaWNhdGlvbkNhY2hlOiB0cnVlLFxuXHRcdCRjb25zb2xlOiB0cnVlLFxuXHRcdCRleHRlcm5hbDogdHJ1ZSxcblx0XHQkZnJhbWU6IHRydWUsXG5cdFx0JGZyYW1lRWxlbWVudDogdHJ1ZSxcblx0XHQkZnJhbWVzOiB0cnVlLFxuXHRcdCRpbm5lckhlaWdodDogdHJ1ZSxcblx0XHQkaW5uZXJXaWR0aDogdHJ1ZSxcblx0XHQkb25tb3pmdWxsc2NyZWVuY2hhbmdlOiB0cnVlLFxuXHRcdCRvbm1vemZ1bGxzY3JlZW5lcnJvcjogdHJ1ZSxcblx0XHQkb3V0ZXJIZWlnaHQ6IHRydWUsXG5cdFx0JG91dGVyV2lkdGg6IHRydWUsXG5cdFx0JHBhZ2VYT2Zmc2V0OiB0cnVlLFxuXHRcdCRwYWdlWU9mZnNldDogdHJ1ZSxcblx0XHQkcGFyZW50OiB0cnVlLFxuXHRcdCRzY3JvbGxMZWZ0OiB0cnVlLFxuXHRcdCRzY3JvbGxUb3A6IHRydWUsXG5cdFx0JHNjcm9sbFg6IHRydWUsXG5cdFx0JHNjcm9sbFk6IHRydWUsXG5cdFx0JHNlbGY6IHRydWUsXG5cdFx0JHdlYmtpdEluZGV4ZWREQjogdHJ1ZSxcblx0XHQkd2Via2l0U3RvcmFnZUluZm86IHRydWUsXG5cdFx0JHdpbmRvdzogdHJ1ZVxuXHR9O1xuXHR2YXIgaGFzQXV0b21hdGlvbkVxdWFsaXR5QnVnID0gKGZ1bmN0aW9uICgpIHtcblx0XHQvKiBnbG9iYWwgd2luZG93ICovXG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7IHJldHVybiBmYWxzZTsgfVxuXHRcdGZvciAodmFyIGsgaW4gd2luZG93KSB7XG5cdFx0XHR0cnkge1xuXHRcdFx0XHRpZiAoIWV4Y2x1ZGVkS2V5c1snJCcgKyBrXSAmJiBoYXMuY2FsbCh3aW5kb3csIGspICYmIHdpbmRvd1trXSAhPT0gbnVsbCAmJiB0eXBlb2Ygd2luZG93W2tdID09PSAnb2JqZWN0Jykge1xuXHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRlcXVhbHNDb25zdHJ1Y3RvclByb3RvdHlwZSh3aW5kb3dba10pO1xuXHRcdFx0XHRcdH0gY2F0Y2ggKGUpIHtcblx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSBjYXRjaCAoZSkge1xuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9KCkpO1xuXHR2YXIgZXF1YWxzQ29uc3RydWN0b3JQcm90b3R5cGVJZk5vdEJ1Z2d5ID0gZnVuY3Rpb24gKG8pIHtcblx0XHQvKiBnbG9iYWwgd2luZG93ICovXG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnIHx8ICFoYXNBdXRvbWF0aW9uRXF1YWxpdHlCdWcpIHtcblx0XHRcdHJldHVybiBlcXVhbHNDb25zdHJ1Y3RvclByb3RvdHlwZShvKTtcblx0XHR9XG5cdFx0dHJ5IHtcblx0XHRcdHJldHVybiBlcXVhbHNDb25zdHJ1Y3RvclByb3RvdHlwZShvKTtcblx0XHR9IGNhdGNoIChlKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHR9O1xuXG5cdGtleXNTaGltID0gZnVuY3Rpb24ga2V5cyhvYmplY3QpIHtcblx0XHR2YXIgaXNPYmplY3QgPSBvYmplY3QgIT09IG51bGwgJiYgdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCc7XG5cdFx0dmFyIGlzRnVuY3Rpb24gPSB0b1N0ci5jYWxsKG9iamVjdCkgPT09ICdbb2JqZWN0IEZ1bmN0aW9uXSc7XG5cdFx0dmFyIGlzQXJndW1lbnRzID0gaXNBcmdzKG9iamVjdCk7XG5cdFx0dmFyIGlzU3RyaW5nID0gaXNPYmplY3QgJiYgdG9TdHIuY2FsbChvYmplY3QpID09PSAnW29iamVjdCBTdHJpbmddJztcblx0XHR2YXIgdGhlS2V5cyA9IFtdO1xuXG5cdFx0aWYgKCFpc09iamVjdCAmJiAhaXNGdW5jdGlvbiAmJiAhaXNBcmd1bWVudHMpIHtcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5rZXlzIGNhbGxlZCBvbiBhIG5vbi1vYmplY3QnKTtcblx0XHR9XG5cblx0XHR2YXIgc2tpcFByb3RvID0gaGFzUHJvdG9FbnVtQnVnICYmIGlzRnVuY3Rpb247XG5cdFx0aWYgKGlzU3RyaW5nICYmIG9iamVjdC5sZW5ndGggPiAwICYmICFoYXMuY2FsbChvYmplY3QsIDApKSB7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG9iamVjdC5sZW5ndGg7ICsraSkge1xuXHRcdFx0XHR0aGVLZXlzLnB1c2goU3RyaW5nKGkpKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoaXNBcmd1bWVudHMgJiYgb2JqZWN0Lmxlbmd0aCA+IDApIHtcblx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgb2JqZWN0Lmxlbmd0aDsgKytqKSB7XG5cdFx0XHRcdHRoZUtleXMucHVzaChTdHJpbmcoaikpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRmb3IgKHZhciBuYW1lIGluIG9iamVjdCkge1xuXHRcdFx0XHRpZiAoIShza2lwUHJvdG8gJiYgbmFtZSA9PT0gJ3Byb3RvdHlwZScpICYmIGhhcy5jYWxsKG9iamVjdCwgbmFtZSkpIHtcblx0XHRcdFx0XHR0aGVLZXlzLnB1c2goU3RyaW5nKG5hbWUpKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChoYXNEb250RW51bUJ1Zykge1xuXHRcdFx0dmFyIHNraXBDb25zdHJ1Y3RvciA9IGVxdWFsc0NvbnN0cnVjdG9yUHJvdG90eXBlSWZOb3RCdWdneShvYmplY3QpO1xuXG5cdFx0XHRmb3IgKHZhciBrID0gMDsgayA8IGRvbnRFbnVtcy5sZW5ndGg7ICsraykge1xuXHRcdFx0XHRpZiAoIShza2lwQ29uc3RydWN0b3IgJiYgZG9udEVudW1zW2tdID09PSAnY29uc3RydWN0b3InKSAmJiBoYXMuY2FsbChvYmplY3QsIGRvbnRFbnVtc1trXSkpIHtcblx0XHRcdFx0XHR0aGVLZXlzLnB1c2goZG9udEVudW1zW2tdKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gdGhlS2V5cztcblx0fTtcbn1cbm1vZHVsZS5leHBvcnRzID0ga2V5c1NoaW07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBoYXNUb1N0cmluZ1RhZyA9IHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIFN5bWJvbC50b1N0cmluZ1RhZyA9PT0gJ3N5bWJvbCc7XG52YXIgdG9TdHIgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xuXG52YXIgaXNTdGFuZGFyZEFyZ3VtZW50cyA9IGZ1bmN0aW9uIGlzQXJndW1lbnRzKHZhbHVlKSB7XG5cdGlmIChoYXNUb1N0cmluZ1RhZyAmJiB2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIFN5bWJvbC50b1N0cmluZ1RhZyBpbiB2YWx1ZSkge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXHRyZXR1cm4gdG9TdHIuY2FsbCh2YWx1ZSkgPT09ICdbb2JqZWN0IEFyZ3VtZW50c10nO1xufTtcblxudmFyIGlzTGVnYWN5QXJndW1lbnRzID0gZnVuY3Rpb24gaXNBcmd1bWVudHModmFsdWUpIHtcblx0aWYgKGlzU3RhbmRhcmRBcmd1bWVudHModmFsdWUpKSB7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cblx0cmV0dXJuIHZhbHVlICE9PSBudWxsICYmXG5cdFx0dHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJlxuXHRcdHR5cGVvZiB2YWx1ZS5sZW5ndGggPT09ICdudW1iZXInICYmXG5cdFx0dmFsdWUubGVuZ3RoID49IDAgJiZcblx0XHR0b1N0ci5jYWxsKHZhbHVlKSAhPT0gJ1tvYmplY3QgQXJyYXldJyAmJlxuXHRcdHRvU3RyLmNhbGwodmFsdWUuY2FsbGVlKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbn07XG5cbnZhciBzdXBwb3J0c1N0YW5kYXJkQXJndW1lbnRzID0gKGZ1bmN0aW9uICgpIHtcblx0cmV0dXJuIGlzU3RhbmRhcmRBcmd1bWVudHMoYXJndW1lbnRzKTtcbn0oKSk7XG5cbmlzU3RhbmRhcmRBcmd1bWVudHMuaXNMZWdhY3lBcmd1bWVudHMgPSBpc0xlZ2FjeUFyZ3VtZW50czsgLy8gZm9yIHRlc3RzXG5cbm1vZHVsZS5leHBvcnRzID0gc3VwcG9ydHNTdGFuZGFyZEFyZ3VtZW50cyA/IGlzU3RhbmRhcmRBcmd1bWVudHMgOiBpc0xlZ2FjeUFyZ3VtZW50cztcbiIsIid1c2Ugc3RyaWN0JztcblxuLy8gaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzYuMC8jc2VjLW9iamVjdC5pc1xuXG52YXIgbnVtYmVySXNOYU4gPSBmdW5jdGlvbiAodmFsdWUpIHtcblx0cmV0dXJuIHZhbHVlICE9PSB2YWx1ZTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXMoYSwgYikge1xuXHRpZiAoYSA9PT0gMCAmJiBiID09PSAwKSB7XG5cdFx0cmV0dXJuIDEgLyBhID09PSAxIC8gYjtcblx0fVxuXHRpZiAoYSA9PT0gYikge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cdGlmIChudW1iZXJJc05hTihhKSAmJiBudW1iZXJJc05hTihiKSkge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cdHJldHVybiBmYWxzZTtcbn07XG5cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGhhcyA9IHJlcXVpcmUoJ2hhcycpO1xudmFyIHJlZ2V4RXhlYyA9IFJlZ0V4cC5wcm90b3R5cGUuZXhlYztcbnZhciBnT1BEID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcblxudmFyIHRyeVJlZ2V4RXhlY0NhbGwgPSBmdW5jdGlvbiB0cnlSZWdleEV4ZWModmFsdWUpIHtcblx0dHJ5IHtcblx0XHR2YXIgbGFzdEluZGV4ID0gdmFsdWUubGFzdEluZGV4O1xuXHRcdHZhbHVlLmxhc3RJbmRleCA9IDA7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cblxuXHRcdHJlZ2V4RXhlYy5jYWxsKHZhbHVlKTtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fSBmaW5hbGx5IHtcblx0XHR2YWx1ZS5sYXN0SW5kZXggPSBsYXN0SW5kZXg7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cblx0fVxufTtcbnZhciB0b1N0ciA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG52YXIgcmVnZXhDbGFzcyA9ICdbb2JqZWN0IFJlZ0V4cF0nO1xudmFyIGhhc1RvU3RyaW5nVGFnID0gdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgU3ltYm9sLnRvU3RyaW5nVGFnID09PSAnc3ltYm9sJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc1JlZ2V4KHZhbHVlKSB7XG5cdGlmICghdmFsdWUgfHwgdHlwZW9mIHZhbHVlICE9PSAnb2JqZWN0Jykge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXHRpZiAoIWhhc1RvU3RyaW5nVGFnKSB7XG5cdFx0cmV0dXJuIHRvU3RyLmNhbGwodmFsdWUpID09PSByZWdleENsYXNzO1xuXHR9XG5cblx0dmFyIGRlc2NyaXB0b3IgPSBnT1BEKHZhbHVlLCAnbGFzdEluZGV4Jyk7XG5cdHZhciBoYXNMYXN0SW5kZXhEYXRhUHJvcGVydHkgPSBkZXNjcmlwdG9yICYmIGhhcyhkZXNjcmlwdG9yLCAndmFsdWUnKTtcblx0aWYgKCFoYXNMYXN0SW5kZXhEYXRhUHJvcGVydHkpIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHRyZXR1cm4gdHJ5UmVnZXhFeGVjQ2FsbCh2YWx1ZSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYmluZCA9IHJlcXVpcmUoJ2Z1bmN0aW9uLWJpbmQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBiaW5kLmNhbGwoRnVuY3Rpb24uY2FsbCwgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qIGVzbGludCBuby1pbnZhbGlkLXRoaXM6IDEgKi9cblxudmFyIEVSUk9SX01FU1NBR0UgPSAnRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQgY2FsbGVkIG9uIGluY29tcGF0aWJsZSAnO1xudmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlO1xudmFyIHRvU3RyID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcbnZhciBmdW5jVHlwZSA9ICdbb2JqZWN0IEZ1bmN0aW9uXSc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYmluZCh0aGF0KSB7XG4gICAgdmFyIHRhcmdldCA9IHRoaXM7XG4gICAgaWYgKHR5cGVvZiB0YXJnZXQgIT09ICdmdW5jdGlvbicgfHwgdG9TdHIuY2FsbCh0YXJnZXQpICE9PSBmdW5jVHlwZSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKEVSUk9SX01FU1NBR0UgKyB0YXJnZXQpO1xuICAgIH1cbiAgICB2YXIgYXJncyA9IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcblxuICAgIHZhciBib3VuZDtcbiAgICB2YXIgYmluZGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcyBpbnN0YW5jZW9mIGJvdW5kKSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gdGFyZ2V0LmFwcGx5KFxuICAgICAgICAgICAgICAgIHRoaXMsXG4gICAgICAgICAgICAgICAgYXJncy5jb25jYXQoc2xpY2UuY2FsbChhcmd1bWVudHMpKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGlmIChPYmplY3QocmVzdWx0KSA9PT0gcmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRhcmdldC5hcHBseShcbiAgICAgICAgICAgICAgICB0aGF0LFxuICAgICAgICAgICAgICAgIGFyZ3MuY29uY2F0KHNsaWNlLmNhbGwoYXJndW1lbnRzKSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgdmFyIGJvdW5kTGVuZ3RoID0gTWF0aC5tYXgoMCwgdGFyZ2V0Lmxlbmd0aCAtIGFyZ3MubGVuZ3RoKTtcbiAgICB2YXIgYm91bmRBcmdzID0gW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBib3VuZExlbmd0aDsgaSsrKSB7XG4gICAgICAgIGJvdW5kQXJncy5wdXNoKCckJyArIGkpO1xuICAgIH1cblxuICAgIGJvdW5kID0gRnVuY3Rpb24oJ2JpbmRlcicsICdyZXR1cm4gZnVuY3Rpb24gKCcgKyBib3VuZEFyZ3Muam9pbignLCcpICsgJyl7IHJldHVybiBiaW5kZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpOyB9JykoYmluZGVyKTtcblxuICAgIGlmICh0YXJnZXQucHJvdG90eXBlKSB7XG4gICAgICAgIHZhciBFbXB0eSA9IGZ1bmN0aW9uIEVtcHR5KCkge307XG4gICAgICAgIEVtcHR5LnByb3RvdHlwZSA9IHRhcmdldC5wcm90b3R5cGU7XG4gICAgICAgIGJvdW5kLnByb3RvdHlwZSA9IG5ldyBFbXB0eSgpO1xuICAgICAgICBFbXB0eS5wcm90b3R5cGUgPSBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBib3VuZDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBkZWZpbmUgPSByZXF1aXJlKCdkZWZpbmUtcHJvcGVydGllcycpO1xudmFyIGNhbGxCaW5kID0gcmVxdWlyZSgnZXMtYWJzdHJhY3QvaGVscGVycy9jYWxsQmluZCcpO1xuXG52YXIgaW1wbGVtZW50YXRpb24gPSByZXF1aXJlKCcuL2ltcGxlbWVudGF0aW9uJyk7XG52YXIgZ2V0UG9seWZpbGwgPSByZXF1aXJlKCcuL3BvbHlmaWxsJyk7XG52YXIgc2hpbSA9IHJlcXVpcmUoJy4vc2hpbScpO1xuXG52YXIgZmxhZ3NCb3VuZCA9IGNhbGxCaW5kKGltcGxlbWVudGF0aW9uKTtcblxuZGVmaW5lKGZsYWdzQm91bmQsIHtcblx0Z2V0UG9seWZpbGw6IGdldFBvbHlmaWxsLFxuXHRpbXBsZW1lbnRhdGlvbjogaW1wbGVtZW50YXRpb24sXG5cdHNoaW06IHNoaW1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZsYWdzQm91bmQ7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBiaW5kID0gcmVxdWlyZSgnZnVuY3Rpb24tYmluZCcpO1xuXG52YXIgR2V0SW50cmluc2ljID0gcmVxdWlyZSgnLi4vR2V0SW50cmluc2ljJyk7XG5cbnZhciAkRnVuY3Rpb24gPSBHZXRJbnRyaW5zaWMoJyVGdW5jdGlvbiUnKTtcbnZhciAkYXBwbHkgPSAkRnVuY3Rpb24uYXBwbHk7XG52YXIgJGNhbGwgPSAkRnVuY3Rpb24uY2FsbDtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjYWxsQmluZCgpIHtcblx0cmV0dXJuIGJpbmQuYXBwbHkoJGNhbGwsIGFyZ3VtZW50cyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5hcHBseSA9IGZ1bmN0aW9uIGFwcGx5QmluZCgpIHtcblx0cmV0dXJuIGJpbmQuYXBwbHkoJGFwcGx5LCBhcmd1bWVudHMpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyogZ2xvYmFsc1xuXHRBdG9taWNzLFxuXHRTaGFyZWRBcnJheUJ1ZmZlcixcbiovXG5cbnZhciB1bmRlZmluZWQ7XG5cbnZhciAkVHlwZUVycm9yID0gVHlwZUVycm9yO1xuXG52YXIgJGdPUEQgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuaWYgKCRnT1BEKSB7XG5cdHRyeSB7XG5cdFx0JGdPUEQoe30sICcnKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdCRnT1BEID0gbnVsbDsgLy8gdGhpcyBpcyBJRSA4LCB3aGljaCBoYXMgYSBicm9rZW4gZ09QRFxuXHR9XG59XG5cbnZhciB0aHJvd1R5cGVFcnJvciA9IGZ1bmN0aW9uICgpIHsgdGhyb3cgbmV3ICRUeXBlRXJyb3IoKTsgfTtcbnZhciBUaHJvd1R5cGVFcnJvciA9ICRnT1BEXG5cdD8gKGZ1bmN0aW9uICgpIHtcblx0XHR0cnkge1xuXHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC1leHByZXNzaW9ucywgbm8tY2FsbGVyLCBuby1yZXN0cmljdGVkLXByb3BlcnRpZXNcblx0XHRcdGFyZ3VtZW50cy5jYWxsZWU7IC8vIElFIDggZG9lcyBub3QgdGhyb3cgaGVyZVxuXHRcdFx0cmV0dXJuIHRocm93VHlwZUVycm9yO1xuXHRcdH0gY2F0Y2ggKGNhbGxlZVRocm93cykge1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0Ly8gSUUgOCB0aHJvd3Mgb24gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhcmd1bWVudHMsICcnKVxuXHRcdFx0XHRyZXR1cm4gJGdPUEQoYXJndW1lbnRzLCAnY2FsbGVlJykuZ2V0O1xuXHRcdFx0fSBjYXRjaCAoZ09QRHRocm93cykge1xuXHRcdFx0XHRyZXR1cm4gdGhyb3dUeXBlRXJyb3I7XG5cdFx0XHR9XG5cdFx0fVxuXHR9KCkpXG5cdDogdGhyb3dUeXBlRXJyb3I7XG5cbnZhciBoYXNTeW1ib2xzID0gcmVxdWlyZSgnaGFzLXN5bWJvbHMnKSgpO1xuXG52YXIgZ2V0UHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHguX19wcm90b19fOyB9OyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXByb3RvXG5cbnZhciBnZW5lcmF0b3I7IC8vID0gZnVuY3Rpb24gKiAoKSB7fTtcbnZhciBnZW5lcmF0b3JGdW5jdGlvbiA9IGdlbmVyYXRvciA/IGdldFByb3RvKGdlbmVyYXRvcikgOiB1bmRlZmluZWQ7XG52YXIgYXN5bmNGbjsgLy8gYXN5bmMgZnVuY3Rpb24oKSB7fTtcbnZhciBhc3luY0Z1bmN0aW9uID0gYXN5bmNGbiA/IGFzeW5jRm4uY29uc3RydWN0b3IgOiB1bmRlZmluZWQ7XG52YXIgYXN5bmNHZW47IC8vIGFzeW5jIGZ1bmN0aW9uICogKCkge307XG52YXIgYXN5bmNHZW5GdW5jdGlvbiA9IGFzeW5jR2VuID8gZ2V0UHJvdG8oYXN5bmNHZW4pIDogdW5kZWZpbmVkO1xudmFyIGFzeW5jR2VuSXRlcmF0b3IgPSBhc3luY0dlbiA/IGFzeW5jR2VuKCkgOiB1bmRlZmluZWQ7XG5cbnZhciBUeXBlZEFycmF5ID0gdHlwZW9mIFVpbnQ4QXJyYXkgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogZ2V0UHJvdG8oVWludDhBcnJheSk7XG5cbnZhciBJTlRSSU5TSUNTID0ge1xuXHQnJUFycmF5JSc6IEFycmF5LFxuXHQnJUFycmF5QnVmZmVyJSc6IHR5cGVvZiBBcnJheUJ1ZmZlciA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBBcnJheUJ1ZmZlcixcblx0JyVBcnJheUJ1ZmZlclByb3RvdHlwZSUnOiB0eXBlb2YgQXJyYXlCdWZmZXIgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogQXJyYXlCdWZmZXIucHJvdG90eXBlLFxuXHQnJUFycmF5SXRlcmF0b3JQcm90b3R5cGUlJzogaGFzU3ltYm9scyA/IGdldFByb3RvKFtdW1N5bWJvbC5pdGVyYXRvcl0oKSkgOiB1bmRlZmluZWQsXG5cdCclQXJyYXlQcm90b3R5cGUlJzogQXJyYXkucHJvdG90eXBlLFxuXHQnJUFycmF5UHJvdG9fZW50cmllcyUnOiBBcnJheS5wcm90b3R5cGUuZW50cmllcyxcblx0JyVBcnJheVByb3RvX2ZvckVhY2glJzogQXJyYXkucHJvdG90eXBlLmZvckVhY2gsXG5cdCclQXJyYXlQcm90b19rZXlzJSc6IEFycmF5LnByb3RvdHlwZS5rZXlzLFxuXHQnJUFycmF5UHJvdG9fdmFsdWVzJSc6IEFycmF5LnByb3RvdHlwZS52YWx1ZXMsXG5cdCclQXN5bmNGcm9tU3luY0l0ZXJhdG9yUHJvdG90eXBlJSc6IHVuZGVmaW5lZCxcblx0JyVBc3luY0Z1bmN0aW9uJSc6IGFzeW5jRnVuY3Rpb24sXG5cdCclQXN5bmNGdW5jdGlvblByb3RvdHlwZSUnOiBhc3luY0Z1bmN0aW9uID8gYXN5bmNGdW5jdGlvbi5wcm90b3R5cGUgOiB1bmRlZmluZWQsXG5cdCclQXN5bmNHZW5lcmF0b3IlJzogYXN5bmNHZW4gPyBnZXRQcm90byhhc3luY0dlbkl0ZXJhdG9yKSA6IHVuZGVmaW5lZCxcblx0JyVBc3luY0dlbmVyYXRvckZ1bmN0aW9uJSc6IGFzeW5jR2VuRnVuY3Rpb24sXG5cdCclQXN5bmNHZW5lcmF0b3JQcm90b3R5cGUlJzogYXN5bmNHZW5GdW5jdGlvbiA/IGFzeW5jR2VuRnVuY3Rpb24ucHJvdG90eXBlIDogdW5kZWZpbmVkLFxuXHQnJUFzeW5jSXRlcmF0b3JQcm90b3R5cGUlJzogYXN5bmNHZW5JdGVyYXRvciAmJiBoYXNTeW1ib2xzICYmIFN5bWJvbC5hc3luY0l0ZXJhdG9yID8gYXN5bmNHZW5JdGVyYXRvcltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSA6IHVuZGVmaW5lZCxcblx0JyVBdG9taWNzJSc6IHR5cGVvZiBBdG9taWNzID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IEF0b21pY3MsXG5cdCclQm9vbGVhbiUnOiBCb29sZWFuLFxuXHQnJUJvb2xlYW5Qcm90b3R5cGUlJzogQm9vbGVhbi5wcm90b3R5cGUsXG5cdCclRGF0YVZpZXclJzogdHlwZW9mIERhdGFWaWV3ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IERhdGFWaWV3LFxuXHQnJURhdGFWaWV3UHJvdG90eXBlJSc6IHR5cGVvZiBEYXRhVmlldyA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBEYXRhVmlldy5wcm90b3R5cGUsXG5cdCclRGF0ZSUnOiBEYXRlLFxuXHQnJURhdGVQcm90b3R5cGUlJzogRGF0ZS5wcm90b3R5cGUsXG5cdCclZGVjb2RlVVJJJSc6IGRlY29kZVVSSSxcblx0JyVkZWNvZGVVUklDb21wb25lbnQlJzogZGVjb2RlVVJJQ29tcG9uZW50LFxuXHQnJWVuY29kZVVSSSUnOiBlbmNvZGVVUkksXG5cdCclZW5jb2RlVVJJQ29tcG9uZW50JSc6IGVuY29kZVVSSUNvbXBvbmVudCxcblx0JyVFcnJvciUnOiBFcnJvcixcblx0JyVFcnJvclByb3RvdHlwZSUnOiBFcnJvci5wcm90b3R5cGUsXG5cdCclZXZhbCUnOiBldmFsLCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWV2YWxcblx0JyVFdmFsRXJyb3IlJzogRXZhbEVycm9yLFxuXHQnJUV2YWxFcnJvclByb3RvdHlwZSUnOiBFdmFsRXJyb3IucHJvdG90eXBlLFxuXHQnJUZsb2F0MzJBcnJheSUnOiB0eXBlb2YgRmxvYXQzMkFycmF5ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IEZsb2F0MzJBcnJheSxcblx0JyVGbG9hdDMyQXJyYXlQcm90b3R5cGUlJzogdHlwZW9mIEZsb2F0MzJBcnJheSA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBGbG9hdDMyQXJyYXkucHJvdG90eXBlLFxuXHQnJUZsb2F0NjRBcnJheSUnOiB0eXBlb2YgRmxvYXQ2NEFycmF5ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IEZsb2F0NjRBcnJheSxcblx0JyVGbG9hdDY0QXJyYXlQcm90b3R5cGUlJzogdHlwZW9mIEZsb2F0NjRBcnJheSA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBGbG9hdDY0QXJyYXkucHJvdG90eXBlLFxuXHQnJUZ1bmN0aW9uJSc6IEZ1bmN0aW9uLFxuXHQnJUZ1bmN0aW9uUHJvdG90eXBlJSc6IEZ1bmN0aW9uLnByb3RvdHlwZSxcblx0JyVHZW5lcmF0b3IlJzogZ2VuZXJhdG9yID8gZ2V0UHJvdG8oZ2VuZXJhdG9yKCkpIDogdW5kZWZpbmVkLFxuXHQnJUdlbmVyYXRvckZ1bmN0aW9uJSc6IGdlbmVyYXRvckZ1bmN0aW9uLFxuXHQnJUdlbmVyYXRvclByb3RvdHlwZSUnOiBnZW5lcmF0b3JGdW5jdGlvbiA/IGdlbmVyYXRvckZ1bmN0aW9uLnByb3RvdHlwZSA6IHVuZGVmaW5lZCxcblx0JyVJbnQ4QXJyYXklJzogdHlwZW9mIEludDhBcnJheSA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBJbnQ4QXJyYXksXG5cdCclSW50OEFycmF5UHJvdG90eXBlJSc6IHR5cGVvZiBJbnQ4QXJyYXkgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogSW50OEFycmF5LnByb3RvdHlwZSxcblx0JyVJbnQxNkFycmF5JSc6IHR5cGVvZiBJbnQxNkFycmF5ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IEludDE2QXJyYXksXG5cdCclSW50MTZBcnJheVByb3RvdHlwZSUnOiB0eXBlb2YgSW50MTZBcnJheSA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBJbnQ4QXJyYXkucHJvdG90eXBlLFxuXHQnJUludDMyQXJyYXklJzogdHlwZW9mIEludDMyQXJyYXkgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogSW50MzJBcnJheSxcblx0JyVJbnQzMkFycmF5UHJvdG90eXBlJSc6IHR5cGVvZiBJbnQzMkFycmF5ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IEludDMyQXJyYXkucHJvdG90eXBlLFxuXHQnJWlzRmluaXRlJSc6IGlzRmluaXRlLFxuXHQnJWlzTmFOJSc6IGlzTmFOLFxuXHQnJUl0ZXJhdG9yUHJvdG90eXBlJSc6IGhhc1N5bWJvbHMgPyBnZXRQcm90byhnZXRQcm90byhbXVtTeW1ib2wuaXRlcmF0b3JdKCkpKSA6IHVuZGVmaW5lZCxcblx0JyVKU09OJSc6IHR5cGVvZiBKU09OID09PSAnb2JqZWN0JyA/IEpTT04gOiB1bmRlZmluZWQsXG5cdCclSlNPTlBhcnNlJSc6IHR5cGVvZiBKU09OID09PSAnb2JqZWN0JyA/IEpTT04ucGFyc2UgOiB1bmRlZmluZWQsXG5cdCclTWFwJSc6IHR5cGVvZiBNYXAgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogTWFwLFxuXHQnJU1hcEl0ZXJhdG9yUHJvdG90eXBlJSc6IHR5cGVvZiBNYXAgPT09ICd1bmRlZmluZWQnIHx8ICFoYXNTeW1ib2xzID8gdW5kZWZpbmVkIDogZ2V0UHJvdG8obmV3IE1hcCgpW1N5bWJvbC5pdGVyYXRvcl0oKSksXG5cdCclTWFwUHJvdG90eXBlJSc6IHR5cGVvZiBNYXAgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogTWFwLnByb3RvdHlwZSxcblx0JyVNYXRoJSc6IE1hdGgsXG5cdCclTnVtYmVyJSc6IE51bWJlcixcblx0JyVOdW1iZXJQcm90b3R5cGUlJzogTnVtYmVyLnByb3RvdHlwZSxcblx0JyVPYmplY3QlJzogT2JqZWN0LFxuXHQnJU9iamVjdFByb3RvdHlwZSUnOiBPYmplY3QucHJvdG90eXBlLFxuXHQnJU9ialByb3RvX3RvU3RyaW5nJSc6IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsXG5cdCclT2JqUHJvdG9fdmFsdWVPZiUnOiBPYmplY3QucHJvdG90eXBlLnZhbHVlT2YsXG5cdCclcGFyc2VGbG9hdCUnOiBwYXJzZUZsb2F0LFxuXHQnJXBhcnNlSW50JSc6IHBhcnNlSW50LFxuXHQnJVByb21pc2UlJzogdHlwZW9mIFByb21pc2UgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogUHJvbWlzZSxcblx0JyVQcm9taXNlUHJvdG90eXBlJSc6IHR5cGVvZiBQcm9taXNlID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IFByb21pc2UucHJvdG90eXBlLFxuXHQnJVByb21pc2VQcm90b190aGVuJSc6IHR5cGVvZiBQcm9taXNlID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IFByb21pc2UucHJvdG90eXBlLnRoZW4sXG5cdCclUHJvbWlzZV9hbGwlJzogdHlwZW9mIFByb21pc2UgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogUHJvbWlzZS5hbGwsXG5cdCclUHJvbWlzZV9yZWplY3QlJzogdHlwZW9mIFByb21pc2UgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogUHJvbWlzZS5yZWplY3QsXG5cdCclUHJvbWlzZV9yZXNvbHZlJSc6IHR5cGVvZiBQcm9taXNlID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IFByb21pc2UucmVzb2x2ZSxcblx0JyVQcm94eSUnOiB0eXBlb2YgUHJveHkgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogUHJveHksXG5cdCclUmFuZ2VFcnJvciUnOiBSYW5nZUVycm9yLFxuXHQnJVJhbmdlRXJyb3JQcm90b3R5cGUlJzogUmFuZ2VFcnJvci5wcm90b3R5cGUsXG5cdCclUmVmZXJlbmNlRXJyb3IlJzogUmVmZXJlbmNlRXJyb3IsXG5cdCclUmVmZXJlbmNlRXJyb3JQcm90b3R5cGUlJzogUmVmZXJlbmNlRXJyb3IucHJvdG90eXBlLFxuXHQnJVJlZmxlY3QlJzogdHlwZW9mIFJlZmxlY3QgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogUmVmbGVjdCxcblx0JyVSZWdFeHAlJzogUmVnRXhwLFxuXHQnJVJlZ0V4cFByb3RvdHlwZSUnOiBSZWdFeHAucHJvdG90eXBlLFxuXHQnJVNldCUnOiB0eXBlb2YgU2V0ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IFNldCxcblx0JyVTZXRJdGVyYXRvclByb3RvdHlwZSUnOiB0eXBlb2YgU2V0ID09PSAndW5kZWZpbmVkJyB8fCAhaGFzU3ltYm9scyA/IHVuZGVmaW5lZCA6IGdldFByb3RvKG5ldyBTZXQoKVtTeW1ib2wuaXRlcmF0b3JdKCkpLFxuXHQnJVNldFByb3RvdHlwZSUnOiB0eXBlb2YgU2V0ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IFNldC5wcm90b3R5cGUsXG5cdCclU2hhcmVkQXJyYXlCdWZmZXIlJzogdHlwZW9mIFNoYXJlZEFycmF5QnVmZmVyID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IFNoYXJlZEFycmF5QnVmZmVyLFxuXHQnJVNoYXJlZEFycmF5QnVmZmVyUHJvdG90eXBlJSc6IHR5cGVvZiBTaGFyZWRBcnJheUJ1ZmZlciA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBTaGFyZWRBcnJheUJ1ZmZlci5wcm90b3R5cGUsXG5cdCclU3RyaW5nJSc6IFN0cmluZyxcblx0JyVTdHJpbmdJdGVyYXRvclByb3RvdHlwZSUnOiBoYXNTeW1ib2xzID8gZ2V0UHJvdG8oJydbU3ltYm9sLml0ZXJhdG9yXSgpKSA6IHVuZGVmaW5lZCxcblx0JyVTdHJpbmdQcm90b3R5cGUlJzogU3RyaW5nLnByb3RvdHlwZSxcblx0JyVTeW1ib2wlJzogaGFzU3ltYm9scyA/IFN5bWJvbCA6IHVuZGVmaW5lZCxcblx0JyVTeW1ib2xQcm90b3R5cGUlJzogaGFzU3ltYm9scyA/IFN5bWJvbC5wcm90b3R5cGUgOiB1bmRlZmluZWQsXG5cdCclU3ludGF4RXJyb3IlJzogU3ludGF4RXJyb3IsXG5cdCclU3ludGF4RXJyb3JQcm90b3R5cGUlJzogU3ludGF4RXJyb3IucHJvdG90eXBlLFxuXHQnJVRocm93VHlwZUVycm9yJSc6IFRocm93VHlwZUVycm9yLFxuXHQnJVR5cGVkQXJyYXklJzogVHlwZWRBcnJheSxcblx0JyVUeXBlZEFycmF5UHJvdG90eXBlJSc6IFR5cGVkQXJyYXkgPyBUeXBlZEFycmF5LnByb3RvdHlwZSA6IHVuZGVmaW5lZCxcblx0JyVUeXBlRXJyb3IlJzogJFR5cGVFcnJvcixcblx0JyVUeXBlRXJyb3JQcm90b3R5cGUlJzogJFR5cGVFcnJvci5wcm90b3R5cGUsXG5cdCclVWludDhBcnJheSUnOiB0eXBlb2YgVWludDhBcnJheSA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBVaW50OEFycmF5LFxuXHQnJVVpbnQ4QXJyYXlQcm90b3R5cGUlJzogdHlwZW9mIFVpbnQ4QXJyYXkgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogVWludDhBcnJheS5wcm90b3R5cGUsXG5cdCclVWludDhDbGFtcGVkQXJyYXklJzogdHlwZW9mIFVpbnQ4Q2xhbXBlZEFycmF5ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IFVpbnQ4Q2xhbXBlZEFycmF5LFxuXHQnJVVpbnQ4Q2xhbXBlZEFycmF5UHJvdG90eXBlJSc6IHR5cGVvZiBVaW50OENsYW1wZWRBcnJheSA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBVaW50OENsYW1wZWRBcnJheS5wcm90b3R5cGUsXG5cdCclVWludDE2QXJyYXklJzogdHlwZW9mIFVpbnQxNkFycmF5ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IFVpbnQxNkFycmF5LFxuXHQnJVVpbnQxNkFycmF5UHJvdG90eXBlJSc6IHR5cGVvZiBVaW50MTZBcnJheSA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBVaW50MTZBcnJheS5wcm90b3R5cGUsXG5cdCclVWludDMyQXJyYXklJzogdHlwZW9mIFVpbnQzMkFycmF5ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IFVpbnQzMkFycmF5LFxuXHQnJVVpbnQzMkFycmF5UHJvdG90eXBlJSc6IHR5cGVvZiBVaW50MzJBcnJheSA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiBVaW50MzJBcnJheS5wcm90b3R5cGUsXG5cdCclVVJJRXJyb3IlJzogVVJJRXJyb3IsXG5cdCclVVJJRXJyb3JQcm90b3R5cGUlJzogVVJJRXJyb3IucHJvdG90eXBlLFxuXHQnJVdlYWtNYXAlJzogdHlwZW9mIFdlYWtNYXAgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogV2Vha01hcCxcblx0JyVXZWFrTWFwUHJvdG90eXBlJSc6IHR5cGVvZiBXZWFrTWFwID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IFdlYWtNYXAucHJvdG90eXBlLFxuXHQnJVdlYWtTZXQlJzogdHlwZW9mIFdlYWtTZXQgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogV2Vha1NldCxcblx0JyVXZWFrU2V0UHJvdG90eXBlJSc6IHR5cGVvZiBXZWFrU2V0ID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IFdlYWtTZXQucHJvdG90eXBlXG59O1xuXG52YXIgYmluZCA9IHJlcXVpcmUoJ2Z1bmN0aW9uLWJpbmQnKTtcbnZhciAkcmVwbGFjZSA9IGJpbmQuY2FsbChGdW5jdGlvbi5jYWxsLCBTdHJpbmcucHJvdG90eXBlLnJlcGxhY2UpO1xuXG4vKiBhZGFwdGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2xvZGFzaC9sb2Rhc2gvYmxvYi80LjE3LjE1L2Rpc3QvbG9kYXNoLmpzI0w2NzM1LUw2NzQ0ICovXG52YXIgcmVQcm9wTmFtZSA9IC9bXiUuW1xcXV0rfFxcWyg/OigtP1xcZCsoPzpcXC5cXGQrKT8pfChbXCInXSkoKD86KD8hXFwyKVteXFxcXF18XFxcXC4pKj8pXFwyKVxcXXwoPz0oPzpcXC58XFxbXFxdKSg/OlxcLnxcXFtcXF18JSQpKS9nO1xudmFyIHJlRXNjYXBlQ2hhciA9IC9cXFxcKFxcXFwpPy9nOyAvKiogVXNlZCB0byBtYXRjaCBiYWNrc2xhc2hlcyBpbiBwcm9wZXJ0eSBwYXRocy4gKi9cbnZhciBzdHJpbmdUb1BhdGggPSBmdW5jdGlvbiBzdHJpbmdUb1BhdGgoc3RyaW5nKSB7XG5cdHZhciByZXN1bHQgPSBbXTtcblx0JHJlcGxhY2Uoc3RyaW5nLCByZVByb3BOYW1lLCBmdW5jdGlvbiAobWF0Y2gsIG51bWJlciwgcXVvdGUsIHN1YlN0cmluZykge1xuXHRcdHJlc3VsdFtyZXN1bHQubGVuZ3RoXSA9IHF1b3RlID8gJHJlcGxhY2Uoc3ViU3RyaW5nLCByZUVzY2FwZUNoYXIsICckMScpIDogKG51bWJlciB8fCBtYXRjaCk7XG5cdH0pO1xuXHRyZXR1cm4gcmVzdWx0O1xufTtcbi8qIGVuZCBhZGFwdGF0aW9uICovXG5cbnZhciBnZXRCYXNlSW50cmluc2ljID0gZnVuY3Rpb24gZ2V0QmFzZUludHJpbnNpYyhuYW1lLCBhbGxvd01pc3NpbmcpIHtcblx0aWYgKCEobmFtZSBpbiBJTlRSSU5TSUNTKSkge1xuXHRcdHRocm93IG5ldyBTeW50YXhFcnJvcignaW50cmluc2ljICcgKyBuYW1lICsgJyBkb2VzIG5vdCBleGlzdCEnKTtcblx0fVxuXG5cdC8vIGlzdGFuYnVsIGlnbm9yZSBpZiAvLyBob3BlZnVsbHkgdGhpcyBpcyBpbXBvc3NpYmxlIHRvIHRlc3QgOi0pXG5cdGlmICh0eXBlb2YgSU5UUklOU0lDU1tuYW1lXSA9PT0gJ3VuZGVmaW5lZCcgJiYgIWFsbG93TWlzc2luZykge1xuXHRcdHRocm93IG5ldyAkVHlwZUVycm9yKCdpbnRyaW5zaWMgJyArIG5hbWUgKyAnIGV4aXN0cywgYnV0IGlzIG5vdCBhdmFpbGFibGUuIFBsZWFzZSBmaWxlIGFuIGlzc3VlIScpO1xuXHR9XG5cblx0cmV0dXJuIElOVFJJTlNJQ1NbbmFtZV07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIEdldEludHJpbnNpYyhuYW1lLCBhbGxvd01pc3NpbmcpIHtcblx0aWYgKHR5cGVvZiBuYW1lICE9PSAnc3RyaW5nJyB8fCBuYW1lLmxlbmd0aCA9PT0gMCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ2ludHJpbnNpYyBuYW1lIG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nJyk7XG5cdH1cblx0aWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIHR5cGVvZiBhbGxvd01pc3NpbmcgIT09ICdib29sZWFuJykge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ1wiYWxsb3dNaXNzaW5nXCIgYXJndW1lbnQgbXVzdCBiZSBhIGJvb2xlYW4nKTtcblx0fVxuXG5cdHZhciBwYXJ0cyA9IHN0cmluZ1RvUGF0aChuYW1lKTtcblxuXHR2YXIgdmFsdWUgPSBnZXRCYXNlSW50cmluc2ljKCclJyArIChwYXJ0cy5sZW5ndGggPiAwID8gcGFydHNbMF0gOiAnJykgKyAnJScsIGFsbG93TWlzc2luZyk7XG5cdGZvciAodmFyIGkgPSAxOyBpIDwgcGFydHMubGVuZ3RoOyBpICs9IDEpIHtcblx0XHRpZiAodmFsdWUgIT0gbnVsbCkge1xuXHRcdFx0aWYgKCRnT1BEICYmIChpICsgMSkgPj0gcGFydHMubGVuZ3RoKSB7XG5cdFx0XHRcdHZhciBkZXNjID0gJGdPUEQodmFsdWUsIHBhcnRzW2ldKTtcblx0XHRcdFx0aWYgKCFhbGxvd01pc3NpbmcgJiYgIShwYXJ0c1tpXSBpbiB2YWx1ZSkpIHtcblx0XHRcdFx0XHR0aHJvdyBuZXcgJFR5cGVFcnJvcignYmFzZSBpbnRyaW5zaWMgZm9yICcgKyBuYW1lICsgJyBleGlzdHMsIGJ1dCB0aGUgcHJvcGVydHkgaXMgbm90IGF2YWlsYWJsZS4nKTtcblx0XHRcdFx0fVxuXHRcdFx0XHR2YWx1ZSA9IGRlc2MgPyAoZGVzYy5nZXQgfHwgZGVzYy52YWx1ZSkgOiB2YWx1ZVtwYXJ0c1tpXV07XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR2YWx1ZSA9IHZhbHVlW3BhcnRzW2ldXTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0cmV0dXJuIHZhbHVlO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIG9yaWdTeW1ib2wgPSBnbG9iYWwuU3ltYm9sO1xudmFyIGhhc1N5bWJvbFNoYW0gPSByZXF1aXJlKCcuL3NoYW1zJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaGFzTmF0aXZlU3ltYm9scygpIHtcblx0aWYgKHR5cGVvZiBvcmlnU3ltYm9sICE9PSAnZnVuY3Rpb24nKSB7IHJldHVybiBmYWxzZTsgfVxuXHRpZiAodHlwZW9mIFN5bWJvbCAhPT0gJ2Z1bmN0aW9uJykgeyByZXR1cm4gZmFsc2U7IH1cblx0aWYgKHR5cGVvZiBvcmlnU3ltYm9sKCdmb28nKSAhPT0gJ3N5bWJvbCcpIHsgcmV0dXJuIGZhbHNlOyB9XG5cdGlmICh0eXBlb2YgU3ltYm9sKCdiYXInKSAhPT0gJ3N5bWJvbCcpIHsgcmV0dXJuIGZhbHNlOyB9XG5cblx0cmV0dXJuIGhhc1N5bWJvbFNoYW0oKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qIGVzbGludCBjb21wbGV4aXR5OiBbMiwgMThdLCBtYXgtc3RhdGVtZW50czogWzIsIDMzXSAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBoYXNTeW1ib2xzKCkge1xuXHRpZiAodHlwZW9mIFN5bWJvbCAhPT0gJ2Z1bmN0aW9uJyB8fCB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyAhPT0gJ2Z1bmN0aW9uJykgeyByZXR1cm4gZmFsc2U7IH1cblx0aWYgKHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09ICdzeW1ib2wnKSB7IHJldHVybiB0cnVlOyB9XG5cblx0dmFyIG9iaiA9IHt9O1xuXHR2YXIgc3ltID0gU3ltYm9sKCd0ZXN0Jyk7XG5cdHZhciBzeW1PYmogPSBPYmplY3Qoc3ltKTtcblx0aWYgKHR5cGVvZiBzeW0gPT09ICdzdHJpbmcnKSB7IHJldHVybiBmYWxzZTsgfVxuXG5cdGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoc3ltKSAhPT0gJ1tvYmplY3QgU3ltYm9sXScpIHsgcmV0dXJuIGZhbHNlOyB9XG5cdGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoc3ltT2JqKSAhPT0gJ1tvYmplY3QgU3ltYm9sXScpIHsgcmV0dXJuIGZhbHNlOyB9XG5cblx0Ly8gdGVtcCBkaXNhYmxlZCBwZXIgaHR0cHM6Ly9naXRodWIuY29tL2xqaGFyYi9vYmplY3QuYXNzaWduL2lzc3Vlcy8xN1xuXHQvLyBpZiAoc3ltIGluc3RhbmNlb2YgU3ltYm9sKSB7IHJldHVybiBmYWxzZTsgfVxuXHQvLyB0ZW1wIGRpc2FibGVkIHBlciBodHRwczovL2dpdGh1Yi5jb20vV2ViUmVmbGVjdGlvbi9nZXQtb3duLXByb3BlcnR5LXN5bWJvbHMvaXNzdWVzLzRcblx0Ly8gaWYgKCEoc3ltT2JqIGluc3RhbmNlb2YgU3ltYm9sKSkgeyByZXR1cm4gZmFsc2U7IH1cblxuXHQvLyBpZiAodHlwZW9mIFN5bWJvbC5wcm90b3R5cGUudG9TdHJpbmcgIT09ICdmdW5jdGlvbicpIHsgcmV0dXJuIGZhbHNlOyB9XG5cdC8vIGlmIChTdHJpbmcoc3ltKSAhPT0gU3ltYm9sLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHN5bSkpIHsgcmV0dXJuIGZhbHNlOyB9XG5cblx0dmFyIHN5bVZhbCA9IDQyO1xuXHRvYmpbc3ltXSA9IHN5bVZhbDtcblx0Zm9yIChzeW0gaW4gb2JqKSB7IHJldHVybiBmYWxzZTsgfSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXJlc3RyaWN0ZWQtc3ludGF4XG5cdGlmICh0eXBlb2YgT2JqZWN0LmtleXMgPT09ICdmdW5jdGlvbicgJiYgT2JqZWN0LmtleXMob2JqKS5sZW5ndGggIT09IDApIHsgcmV0dXJuIGZhbHNlOyB9XG5cblx0aWYgKHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyA9PT0gJ2Z1bmN0aW9uJyAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhvYmopLmxlbmd0aCAhPT0gMCkgeyByZXR1cm4gZmFsc2U7IH1cblxuXHR2YXIgc3ltcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqKTtcblx0aWYgKHN5bXMubGVuZ3RoICE9PSAxIHx8IHN5bXNbMF0gIT09IHN5bSkgeyByZXR1cm4gZmFsc2U7IH1cblxuXHRpZiAoIU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChvYmosIHN5bSkpIHsgcmV0dXJuIGZhbHNlOyB9XG5cblx0aWYgKHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0dmFyIGRlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwgc3ltKTtcblx0XHRpZiAoZGVzY3JpcHRvci52YWx1ZSAhPT0gc3ltVmFsIHx8IGRlc2NyaXB0b3IuZW51bWVyYWJsZSAhPT0gdHJ1ZSkgeyByZXR1cm4gZmFsc2U7IH1cblx0fVxuXG5cdHJldHVybiB0cnVlO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHN1cHBvcnRzRGVzY3JpcHRvcnMgPSByZXF1aXJlKCdkZWZpbmUtcHJvcGVydGllcycpLnN1cHBvcnRzRGVzY3JpcHRvcnM7XG52YXIgZ2V0UG9seWZpbGwgPSByZXF1aXJlKCcuL3BvbHlmaWxsJyk7XG52YXIgZ09QRCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgVHlwZUVyciA9IFR5cGVFcnJvcjtcbnZhciBnZXRQcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciByZWdleCA9IC9hLztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzaGltRmxhZ3MoKSB7XG5cdGlmICghc3VwcG9ydHNEZXNjcmlwdG9ycyB8fCAhZ2V0UHJvdG8pIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycignUmVnRXhwLnByb3RvdHlwZS5mbGFncyByZXF1aXJlcyBhIHRydWUgRVM1IGVudmlyb25tZW50IHRoYXQgc3VwcG9ydHMgcHJvcGVydHkgZGVzY3JpcHRvcnMnKTtcblx0fVxuXHR2YXIgcG9seWZpbGwgPSBnZXRQb2x5ZmlsbCgpO1xuXHR2YXIgcHJvdG8gPSBnZXRQcm90byhyZWdleCk7XG5cdHZhciBkZXNjcmlwdG9yID0gZ09QRChwcm90bywgJ2ZsYWdzJyk7XG5cdGlmICghZGVzY3JpcHRvciB8fCBkZXNjcmlwdG9yLmdldCAhPT0gcG9seWZpbGwpIHtcblx0XHRkZWZpbmVQcm9wZXJ0eShwcm90bywgJ2ZsYWdzJywge1xuXHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXHRcdFx0ZW51bWVyYWJsZTogZmFsc2UsXG5cdFx0XHRnZXQ6IHBvbHlmaWxsXG5cdFx0fSk7XG5cdH1cblx0cmV0dXJuIHBvbHlmaWxsO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGdldERheSA9IERhdGUucHJvdG90eXBlLmdldERheTtcbnZhciB0cnlEYXRlT2JqZWN0ID0gZnVuY3Rpb24gdHJ5RGF0ZUdldERheUNhbGwodmFsdWUpIHtcblx0dHJ5IHtcblx0XHRnZXREYXkuY2FsbCh2YWx1ZSk7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn07XG5cbnZhciB0b1N0ciA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG52YXIgZGF0ZUNsYXNzID0gJ1tvYmplY3QgRGF0ZV0nO1xudmFyIGhhc1RvU3RyaW5nVGFnID0gdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgU3ltYm9sLnRvU3RyaW5nVGFnID09PSAnc3ltYm9sJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0RhdGVPYmplY3QodmFsdWUpIHtcblx0aWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcgfHwgdmFsdWUgPT09IG51bGwpIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblx0cmV0dXJuIGhhc1RvU3RyaW5nVGFnID8gdHJ5RGF0ZU9iamVjdCh2YWx1ZSkgOiB0b1N0ci5jYWxsKHZhbHVlKSA9PT0gZGF0ZUNsYXNzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxudmFyIHJ1bnRpbWUgPSAoZnVuY3Rpb24gKGV4cG9ydHMpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIE9wID0gT2JqZWN0LnByb3RvdHlwZTtcbiAgdmFyIGhhc093biA9IE9wLmhhc093blByb3BlcnR5O1xuICB2YXIgdW5kZWZpbmVkOyAvLyBNb3JlIGNvbXByZXNzaWJsZSB0aGFuIHZvaWQgMC5cbiAgdmFyICRTeW1ib2wgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgPyBTeW1ib2wgOiB7fTtcbiAgdmFyIGl0ZXJhdG9yU3ltYm9sID0gJFN5bWJvbC5pdGVyYXRvciB8fCBcIkBAaXRlcmF0b3JcIjtcbiAgdmFyIGFzeW5jSXRlcmF0b3JTeW1ib2wgPSAkU3ltYm9sLmFzeW5jSXRlcmF0b3IgfHwgXCJAQGFzeW5jSXRlcmF0b3JcIjtcbiAgdmFyIHRvU3RyaW5nVGFnU3ltYm9sID0gJFN5bWJvbC50b1N0cmluZ1RhZyB8fCBcIkBAdG9TdHJpbmdUYWdcIjtcblxuICBmdW5jdGlvbiB3cmFwKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0KSB7XG4gICAgLy8gSWYgb3V0ZXJGbiBwcm92aWRlZCBhbmQgb3V0ZXJGbi5wcm90b3R5cGUgaXMgYSBHZW5lcmF0b3IsIHRoZW4gb3V0ZXJGbi5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IuXG4gICAgdmFyIHByb3RvR2VuZXJhdG9yID0gb3V0ZXJGbiAmJiBvdXRlckZuLnByb3RvdHlwZSBpbnN0YW5jZW9mIEdlbmVyYXRvciA/IG91dGVyRm4gOiBHZW5lcmF0b3I7XG4gICAgdmFyIGdlbmVyYXRvciA9IE9iamVjdC5jcmVhdGUocHJvdG9HZW5lcmF0b3IucHJvdG90eXBlKTtcbiAgICB2YXIgY29udGV4dCA9IG5ldyBDb250ZXh0KHRyeUxvY3NMaXN0IHx8IFtdKTtcblxuICAgIC8vIFRoZSAuX2ludm9rZSBtZXRob2QgdW5pZmllcyB0aGUgaW1wbGVtZW50YXRpb25zIG9mIHRoZSAubmV4dCxcbiAgICAvLyAudGhyb3csIGFuZCAucmV0dXJuIG1ldGhvZHMuXG4gICAgZ2VuZXJhdG9yLl9pbnZva2UgPSBtYWtlSW52b2tlTWV0aG9kKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpO1xuXG4gICAgcmV0dXJuIGdlbmVyYXRvcjtcbiAgfVxuICBleHBvcnRzLndyYXAgPSB3cmFwO1xuXG4gIC8vIFRyeS9jYXRjaCBoZWxwZXIgdG8gbWluaW1pemUgZGVvcHRpbWl6YXRpb25zLiBSZXR1cm5zIGEgY29tcGxldGlvblxuICAvLyByZWNvcmQgbGlrZSBjb250ZXh0LnRyeUVudHJpZXNbaV0uY29tcGxldGlvbi4gVGhpcyBpbnRlcmZhY2UgY291bGRcbiAgLy8gaGF2ZSBiZWVuIChhbmQgd2FzIHByZXZpb3VzbHkpIGRlc2lnbmVkIHRvIHRha2UgYSBjbG9zdXJlIHRvIGJlXG4gIC8vIGludm9rZWQgd2l0aG91dCBhcmd1bWVudHMsIGJ1dCBpbiBhbGwgdGhlIGNhc2VzIHdlIGNhcmUgYWJvdXQgd2VcbiAgLy8gYWxyZWFkeSBoYXZlIGFuIGV4aXN0aW5nIG1ldGhvZCB3ZSB3YW50IHRvIGNhbGwsIHNvIHRoZXJlJ3Mgbm8gbmVlZFxuICAvLyB0byBjcmVhdGUgYSBuZXcgZnVuY3Rpb24gb2JqZWN0LiBXZSBjYW4gZXZlbiBnZXQgYXdheSB3aXRoIGFzc3VtaW5nXG4gIC8vIHRoZSBtZXRob2QgdGFrZXMgZXhhY3RseSBvbmUgYXJndW1lbnQsIHNpbmNlIHRoYXQgaGFwcGVucyB0byBiZSB0cnVlXG4gIC8vIGluIGV2ZXJ5IGNhc2UsIHNvIHdlIGRvbid0IGhhdmUgdG8gdG91Y2ggdGhlIGFyZ3VtZW50cyBvYmplY3QuIFRoZVxuICAvLyBvbmx5IGFkZGl0aW9uYWwgYWxsb2NhdGlvbiByZXF1aXJlZCBpcyB0aGUgY29tcGxldGlvbiByZWNvcmQsIHdoaWNoXG4gIC8vIGhhcyBhIHN0YWJsZSBzaGFwZSBhbmQgc28gaG9wZWZ1bGx5IHNob3VsZCBiZSBjaGVhcCB0byBhbGxvY2F0ZS5cbiAgZnVuY3Rpb24gdHJ5Q2F0Y2goZm4sIG9iaiwgYXJnKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiB7IHR5cGU6IFwibm9ybWFsXCIsIGFyZzogZm4uY2FsbChvYmosIGFyZykgfTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHJldHVybiB7IHR5cGU6IFwidGhyb3dcIiwgYXJnOiBlcnIgfTtcbiAgICB9XG4gIH1cblxuICB2YXIgR2VuU3RhdGVTdXNwZW5kZWRTdGFydCA9IFwic3VzcGVuZGVkU3RhcnRcIjtcbiAgdmFyIEdlblN0YXRlU3VzcGVuZGVkWWllbGQgPSBcInN1c3BlbmRlZFlpZWxkXCI7XG4gIHZhciBHZW5TdGF0ZUV4ZWN1dGluZyA9IFwiZXhlY3V0aW5nXCI7XG4gIHZhciBHZW5TdGF0ZUNvbXBsZXRlZCA9IFwiY29tcGxldGVkXCI7XG5cbiAgLy8gUmV0dXJuaW5nIHRoaXMgb2JqZWN0IGZyb20gdGhlIGlubmVyRm4gaGFzIHRoZSBzYW1lIGVmZmVjdCBhc1xuICAvLyBicmVha2luZyBvdXQgb2YgdGhlIGRpc3BhdGNoIHN3aXRjaCBzdGF0ZW1lbnQuXG4gIHZhciBDb250aW51ZVNlbnRpbmVsID0ge307XG5cbiAgLy8gRHVtbXkgY29uc3RydWN0b3IgZnVuY3Rpb25zIHRoYXQgd2UgdXNlIGFzIHRoZSAuY29uc3RydWN0b3IgYW5kXG4gIC8vIC5jb25zdHJ1Y3Rvci5wcm90b3R5cGUgcHJvcGVydGllcyBmb3IgZnVuY3Rpb25zIHRoYXQgcmV0dXJuIEdlbmVyYXRvclxuICAvLyBvYmplY3RzLiBGb3IgZnVsbCBzcGVjIGNvbXBsaWFuY2UsIHlvdSBtYXkgd2lzaCB0byBjb25maWd1cmUgeW91clxuICAvLyBtaW5pZmllciBub3QgdG8gbWFuZ2xlIHRoZSBuYW1lcyBvZiB0aGVzZSB0d28gZnVuY3Rpb25zLlxuICBmdW5jdGlvbiBHZW5lcmF0b3IoKSB7fVxuICBmdW5jdGlvbiBHZW5lcmF0b3JGdW5jdGlvbigpIHt9XG4gIGZ1bmN0aW9uIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKCkge31cblxuICAvLyBUaGlzIGlzIGEgcG9seWZpbGwgZm9yICVJdGVyYXRvclByb3RvdHlwZSUgZm9yIGVudmlyb25tZW50cyB0aGF0XG4gIC8vIGRvbid0IG5hdGl2ZWx5IHN1cHBvcnQgaXQuXG4gIHZhciBJdGVyYXRvclByb3RvdHlwZSA9IHt9O1xuICBJdGVyYXRvclByb3RvdHlwZVtpdGVyYXRvclN5bWJvbF0gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgdmFyIGdldFByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xuICB2YXIgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90byAmJiBnZXRQcm90byhnZXRQcm90byh2YWx1ZXMoW10pKSk7XG4gIGlmIChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSAmJlxuICAgICAgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgIT09IE9wICYmXG4gICAgICBoYXNPd24uY2FsbChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSwgaXRlcmF0b3JTeW1ib2wpKSB7XG4gICAgLy8gVGhpcyBlbnZpcm9ubWVudCBoYXMgYSBuYXRpdmUgJUl0ZXJhdG9yUHJvdG90eXBlJTsgdXNlIGl0IGluc3RlYWRcbiAgICAvLyBvZiB0aGUgcG9seWZpbGwuXG4gICAgSXRlcmF0b3JQcm90b3R5cGUgPSBOYXRpdmVJdGVyYXRvclByb3RvdHlwZTtcbiAgfVxuXG4gIHZhciBHcCA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLnByb3RvdHlwZSA9XG4gICAgR2VuZXJhdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUpO1xuICBHZW5lcmF0b3JGdW5jdGlvbi5wcm90b3R5cGUgPSBHcC5jb25zdHJ1Y3RvciA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlO1xuICBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IEdlbmVyYXRvckZ1bmN0aW9uO1xuICBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZVt0b1N0cmluZ1RhZ1N5bWJvbF0gPVxuICAgIEdlbmVyYXRvckZ1bmN0aW9uLmRpc3BsYXlOYW1lID0gXCJHZW5lcmF0b3JGdW5jdGlvblwiO1xuXG4gIC8vIEhlbHBlciBmb3IgZGVmaW5pbmcgdGhlIC5uZXh0LCAudGhyb3csIGFuZCAucmV0dXJuIG1ldGhvZHMgb2YgdGhlXG4gIC8vIEl0ZXJhdG9yIGludGVyZmFjZSBpbiB0ZXJtcyBvZiBhIHNpbmdsZSAuX2ludm9rZSBtZXRob2QuXG4gIGZ1bmN0aW9uIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhwcm90b3R5cGUpIHtcbiAgICBbXCJuZXh0XCIsIFwidGhyb3dcIiwgXCJyZXR1cm5cIl0uZm9yRWFjaChmdW5jdGlvbihtZXRob2QpIHtcbiAgICAgIHByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24oYXJnKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pbnZva2UobWV0aG9kLCBhcmcpO1xuICAgICAgfTtcbiAgICB9KTtcbiAgfVxuXG4gIGV4cG9ydHMuaXNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKGdlbkZ1bikge1xuICAgIHZhciBjdG9yID0gdHlwZW9mIGdlbkZ1biA9PT0gXCJmdW5jdGlvblwiICYmIGdlbkZ1bi5jb25zdHJ1Y3RvcjtcbiAgICByZXR1cm4gY3RvclxuICAgICAgPyBjdG9yID09PSBHZW5lcmF0b3JGdW5jdGlvbiB8fFxuICAgICAgICAvLyBGb3IgdGhlIG5hdGl2ZSBHZW5lcmF0b3JGdW5jdGlvbiBjb25zdHJ1Y3RvciwgdGhlIGJlc3Qgd2UgY2FuXG4gICAgICAgIC8vIGRvIGlzIHRvIGNoZWNrIGl0cyAubmFtZSBwcm9wZXJ0eS5cbiAgICAgICAgKGN0b3IuZGlzcGxheU5hbWUgfHwgY3Rvci5uYW1lKSA9PT0gXCJHZW5lcmF0b3JGdW5jdGlvblwiXG4gICAgICA6IGZhbHNlO1xuICB9O1xuXG4gIGV4cG9ydHMubWFyayA9IGZ1bmN0aW9uKGdlbkZ1bikge1xuICAgIGlmIChPYmplY3Quc2V0UHJvdG90eXBlT2YpIHtcbiAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihnZW5GdW4sIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZ2VuRnVuLl9fcHJvdG9fXyA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlO1xuICAgICAgaWYgKCEodG9TdHJpbmdUYWdTeW1ib2wgaW4gZ2VuRnVuKSkge1xuICAgICAgICBnZW5GdW5bdG9TdHJpbmdUYWdTeW1ib2xdID0gXCJHZW5lcmF0b3JGdW5jdGlvblwiO1xuICAgICAgfVxuICAgIH1cbiAgICBnZW5GdW4ucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShHcCk7XG4gICAgcmV0dXJuIGdlbkZ1bjtcbiAgfTtcblxuICAvLyBXaXRoaW4gdGhlIGJvZHkgb2YgYW55IGFzeW5jIGZ1bmN0aW9uLCBgYXdhaXQgeGAgaXMgdHJhbnNmb3JtZWQgdG9cbiAgLy8gYHlpZWxkIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcCh4KWAsIHNvIHRoYXQgdGhlIHJ1bnRpbWUgY2FuIHRlc3RcbiAgLy8gYGhhc093bi5jYWxsKHZhbHVlLCBcIl9fYXdhaXRcIilgIHRvIGRldGVybWluZSBpZiB0aGUgeWllbGRlZCB2YWx1ZSBpc1xuICAvLyBtZWFudCB0byBiZSBhd2FpdGVkLlxuICBleHBvcnRzLmF3cmFwID0gZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIHsgX19hd2FpdDogYXJnIH07XG4gIH07XG5cbiAgZnVuY3Rpb24gQXN5bmNJdGVyYXRvcihnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGdlbmVyYXRvclttZXRob2RdLCBnZW5lcmF0b3IsIGFyZyk7XG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICByZWplY3QocmVjb3JkLmFyZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgcmVzdWx0ID0gcmVjb3JkLmFyZztcbiAgICAgICAgdmFyIHZhbHVlID0gcmVzdWx0LnZhbHVlO1xuICAgICAgICBpZiAodmFsdWUgJiZcbiAgICAgICAgICAgIHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAgICAgaGFzT3duLmNhbGwodmFsdWUsIFwiX19hd2FpdFwiKSkge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodmFsdWUuX19hd2FpdCkudGhlbihmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgaW52b2tlKFwibmV4dFwiLCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgIGludm9rZShcInRocm93XCIsIGVyciwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oZnVuY3Rpb24odW53cmFwcGVkKSB7XG4gICAgICAgICAgLy8gV2hlbiBhIHlpZWxkZWQgUHJvbWlzZSBpcyByZXNvbHZlZCwgaXRzIGZpbmFsIHZhbHVlIGJlY29tZXNcbiAgICAgICAgICAvLyB0aGUgLnZhbHVlIG9mIHRoZSBQcm9taXNlPHt2YWx1ZSxkb25lfT4gcmVzdWx0IGZvciB0aGVcbiAgICAgICAgICAvLyBjdXJyZW50IGl0ZXJhdGlvbi5cbiAgICAgICAgICByZXN1bHQudmFsdWUgPSB1bndyYXBwZWQ7XG4gICAgICAgICAgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgICB9LCBmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAgIC8vIElmIGEgcmVqZWN0ZWQgUHJvbWlzZSB3YXMgeWllbGRlZCwgdGhyb3cgdGhlIHJlamVjdGlvbiBiYWNrXG4gICAgICAgICAgLy8gaW50byB0aGUgYXN5bmMgZ2VuZXJhdG9yIGZ1bmN0aW9uIHNvIGl0IGNhbiBiZSBoYW5kbGVkIHRoZXJlLlxuICAgICAgICAgIHJldHVybiBpbnZva2UoXCJ0aHJvd1wiLCBlcnJvciwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIHByZXZpb3VzUHJvbWlzZTtcblxuICAgIGZ1bmN0aW9uIGVucXVldWUobWV0aG9kLCBhcmcpIHtcbiAgICAgIGZ1bmN0aW9uIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgaW52b2tlKG1ldGhvZCwgYXJnLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHByZXZpb3VzUHJvbWlzZSA9XG4gICAgICAgIC8vIElmIGVucXVldWUgaGFzIGJlZW4gY2FsbGVkIGJlZm9yZSwgdGhlbiB3ZSB3YW50IHRvIHdhaXQgdW50aWxcbiAgICAgICAgLy8gYWxsIHByZXZpb3VzIFByb21pc2VzIGhhdmUgYmVlbiByZXNvbHZlZCBiZWZvcmUgY2FsbGluZyBpbnZva2UsXG4gICAgICAgIC8vIHNvIHRoYXQgcmVzdWx0cyBhcmUgYWx3YXlzIGRlbGl2ZXJlZCBpbiB0aGUgY29ycmVjdCBvcmRlci4gSWZcbiAgICAgICAgLy8gZW5xdWV1ZSBoYXMgbm90IGJlZW4gY2FsbGVkIGJlZm9yZSwgdGhlbiBpdCBpcyBpbXBvcnRhbnQgdG9cbiAgICAgICAgLy8gY2FsbCBpbnZva2UgaW1tZWRpYXRlbHksIHdpdGhvdXQgd2FpdGluZyBvbiBhIGNhbGxiYWNrIHRvIGZpcmUsXG4gICAgICAgIC8vIHNvIHRoYXQgdGhlIGFzeW5jIGdlbmVyYXRvciBmdW5jdGlvbiBoYXMgdGhlIG9wcG9ydHVuaXR5IHRvIGRvXG4gICAgICAgIC8vIGFueSBuZWNlc3Nhcnkgc2V0dXAgaW4gYSBwcmVkaWN0YWJsZSB3YXkuIFRoaXMgcHJlZGljdGFiaWxpdHlcbiAgICAgICAgLy8gaXMgd2h5IHRoZSBQcm9taXNlIGNvbnN0cnVjdG9yIHN5bmNocm9ub3VzbHkgaW52b2tlcyBpdHNcbiAgICAgICAgLy8gZXhlY3V0b3IgY2FsbGJhY2ssIGFuZCB3aHkgYXN5bmMgZnVuY3Rpb25zIHN5bmNocm9ub3VzbHlcbiAgICAgICAgLy8gZXhlY3V0ZSBjb2RlIGJlZm9yZSB0aGUgZmlyc3QgYXdhaXQuIFNpbmNlIHdlIGltcGxlbWVudCBzaW1wbGVcbiAgICAgICAgLy8gYXN5bmMgZnVuY3Rpb25zIGluIHRlcm1zIG9mIGFzeW5jIGdlbmVyYXRvcnMsIGl0IGlzIGVzcGVjaWFsbHlcbiAgICAgICAgLy8gaW1wb3J0YW50IHRvIGdldCB0aGlzIHJpZ2h0LCBldmVuIHRob3VnaCBpdCByZXF1aXJlcyBjYXJlLlxuICAgICAgICBwcmV2aW91c1Byb21pc2UgPyBwcmV2aW91c1Byb21pc2UudGhlbihcbiAgICAgICAgICBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyxcbiAgICAgICAgICAvLyBBdm9pZCBwcm9wYWdhdGluZyBmYWlsdXJlcyB0byBQcm9taXNlcyByZXR1cm5lZCBieSBsYXRlclxuICAgICAgICAgIC8vIGludm9jYXRpb25zIG9mIHRoZSBpdGVyYXRvci5cbiAgICAgICAgICBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZ1xuICAgICAgICApIDogY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcoKTtcbiAgICB9XG5cbiAgICAvLyBEZWZpbmUgdGhlIHVuaWZpZWQgaGVscGVyIG1ldGhvZCB0aGF0IGlzIHVzZWQgdG8gaW1wbGVtZW50IC5uZXh0LFxuICAgIC8vIC50aHJvdywgYW5kIC5yZXR1cm4gKHNlZSBkZWZpbmVJdGVyYXRvck1ldGhvZHMpLlxuICAgIHRoaXMuX2ludm9rZSA9IGVucXVldWU7XG4gIH1cblxuICBkZWZpbmVJdGVyYXRvck1ldGhvZHMoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUpO1xuICBBc3luY0l0ZXJhdG9yLnByb3RvdHlwZVthc3luY0l0ZXJhdG9yU3ltYm9sXSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcbiAgZXhwb3J0cy5Bc3luY0l0ZXJhdG9yID0gQXN5bmNJdGVyYXRvcjtcblxuICAvLyBOb3RlIHRoYXQgc2ltcGxlIGFzeW5jIGZ1bmN0aW9ucyBhcmUgaW1wbGVtZW50ZWQgb24gdG9wIG9mXG4gIC8vIEFzeW5jSXRlcmF0b3Igb2JqZWN0czsgdGhleSBqdXN0IHJldHVybiBhIFByb21pc2UgZm9yIHRoZSB2YWx1ZSBvZlxuICAvLyB0aGUgZmluYWwgcmVzdWx0IHByb2R1Y2VkIGJ5IHRoZSBpdGVyYXRvci5cbiAgZXhwb3J0cy5hc3luYyA9IGZ1bmN0aW9uKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0KSB7XG4gICAgdmFyIGl0ZXIgPSBuZXcgQXN5bmNJdGVyYXRvcihcbiAgICAgIHdyYXAoaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpXG4gICAgKTtcblxuICAgIHJldHVybiBleHBvcnRzLmlzR2VuZXJhdG9yRnVuY3Rpb24ob3V0ZXJGbilcbiAgICAgID8gaXRlciAvLyBJZiBvdXRlckZuIGlzIGEgZ2VuZXJhdG9yLCByZXR1cm4gdGhlIGZ1bGwgaXRlcmF0b3IuXG4gICAgICA6IGl0ZXIubmV4dCgpLnRoZW4oZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdC5kb25lID8gcmVzdWx0LnZhbHVlIDogaXRlci5uZXh0KCk7XG4gICAgICAgIH0pO1xuICB9O1xuXG4gIGZ1bmN0aW9uIG1ha2VJbnZva2VNZXRob2QoaW5uZXJGbiwgc2VsZiwgY29udGV4dCkge1xuICAgIHZhciBzdGF0ZSA9IEdlblN0YXRlU3VzcGVuZGVkU3RhcnQ7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gaW52b2tlKG1ldGhvZCwgYXJnKSB7XG4gICAgICBpZiAoc3RhdGUgPT09IEdlblN0YXRlRXhlY3V0aW5nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IHJ1bm5pbmdcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChzdGF0ZSA9PT0gR2VuU3RhdGVDb21wbGV0ZWQpIHtcbiAgICAgICAgaWYgKG1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgdGhyb3cgYXJnO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQmUgZm9yZ2l2aW5nLCBwZXIgMjUuMy4zLjMuMyBvZiB0aGUgc3BlYzpcbiAgICAgICAgLy8gaHR0cHM6Ly9wZW9wbGUubW96aWxsYS5vcmcvfmpvcmVuZG9yZmYvZXM2LWRyYWZ0Lmh0bWwjc2VjLWdlbmVyYXRvcnJlc3VtZVxuICAgICAgICByZXR1cm4gZG9uZVJlc3VsdCgpO1xuICAgICAgfVxuXG4gICAgICBjb250ZXh0Lm1ldGhvZCA9IG1ldGhvZDtcbiAgICAgIGNvbnRleHQuYXJnID0gYXJnO1xuXG4gICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICB2YXIgZGVsZWdhdGUgPSBjb250ZXh0LmRlbGVnYXRlO1xuICAgICAgICBpZiAoZGVsZWdhdGUpIHtcbiAgICAgICAgICB2YXIgZGVsZWdhdGVSZXN1bHQgPSBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KTtcbiAgICAgICAgICBpZiAoZGVsZWdhdGVSZXN1bHQpIHtcbiAgICAgICAgICAgIGlmIChkZWxlZ2F0ZVJlc3VsdCA9PT0gQ29udGludWVTZW50aW5lbCkgY29udGludWU7XG4gICAgICAgICAgICByZXR1cm4gZGVsZWdhdGVSZXN1bHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvbnRleHQubWV0aG9kID09PSBcIm5leHRcIikge1xuICAgICAgICAgIC8vIFNldHRpbmcgY29udGV4dC5fc2VudCBmb3IgbGVnYWN5IHN1cHBvcnQgb2YgQmFiZWwnc1xuICAgICAgICAgIC8vIGZ1bmN0aW9uLnNlbnQgaW1wbGVtZW50YXRpb24uXG4gICAgICAgICAgY29udGV4dC5zZW50ID0gY29udGV4dC5fc2VudCA9IGNvbnRleHQuYXJnO1xuXG4gICAgICAgIH0gZWxzZSBpZiAoY29udGV4dC5tZXRob2QgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgIGlmIChzdGF0ZSA9PT0gR2VuU3RhdGVTdXNwZW5kZWRTdGFydCkge1xuICAgICAgICAgICAgc3RhdGUgPSBHZW5TdGF0ZUNvbXBsZXRlZDtcbiAgICAgICAgICAgIHRocm93IGNvbnRleHQuYXJnO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRleHQuZGlzcGF0Y2hFeGNlcHRpb24oY29udGV4dC5hcmcpO1xuXG4gICAgICAgIH0gZWxzZSBpZiAoY29udGV4dC5tZXRob2QgPT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgICBjb250ZXh0LmFicnVwdChcInJldHVyblwiLCBjb250ZXh0LmFyZyk7XG4gICAgICAgIH1cblxuICAgICAgICBzdGF0ZSA9IEdlblN0YXRlRXhlY3V0aW5nO1xuXG4gICAgICAgIHZhciByZWNvcmQgPSB0cnlDYXRjaChpbm5lckZuLCBzZWxmLCBjb250ZXh0KTtcbiAgICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcIm5vcm1hbFwiKSB7XG4gICAgICAgICAgLy8gSWYgYW4gZXhjZXB0aW9uIGlzIHRocm93biBmcm9tIGlubmVyRm4sIHdlIGxlYXZlIHN0YXRlID09PVxuICAgICAgICAgIC8vIEdlblN0YXRlRXhlY3V0aW5nIGFuZCBsb29wIGJhY2sgZm9yIGFub3RoZXIgaW52b2NhdGlvbi5cbiAgICAgICAgICBzdGF0ZSA9IGNvbnRleHQuZG9uZVxuICAgICAgICAgICAgPyBHZW5TdGF0ZUNvbXBsZXRlZFxuICAgICAgICAgICAgOiBHZW5TdGF0ZVN1c3BlbmRlZFlpZWxkO1xuXG4gICAgICAgICAgaWYgKHJlY29yZC5hcmcgPT09IENvbnRpbnVlU2VudGluZWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZTogcmVjb3JkLmFyZyxcbiAgICAgICAgICAgIGRvbmU6IGNvbnRleHQuZG9uZVxuICAgICAgICAgIH07XG5cbiAgICAgICAgfSBlbHNlIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgc3RhdGUgPSBHZW5TdGF0ZUNvbXBsZXRlZDtcbiAgICAgICAgICAvLyBEaXNwYXRjaCB0aGUgZXhjZXB0aW9uIGJ5IGxvb3BpbmcgYmFjayBhcm91bmQgdG8gdGhlXG4gICAgICAgICAgLy8gY29udGV4dC5kaXNwYXRjaEV4Y2VwdGlvbihjb250ZXh0LmFyZykgY2FsbCBhYm92ZS5cbiAgICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgICAgICBjb250ZXh0LmFyZyA9IHJlY29yZC5hcmc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgLy8gQ2FsbCBkZWxlZ2F0ZS5pdGVyYXRvcltjb250ZXh0Lm1ldGhvZF0oY29udGV4dC5hcmcpIGFuZCBoYW5kbGUgdGhlXG4gIC8vIHJlc3VsdCwgZWl0aGVyIGJ5IHJldHVybmluZyBhIHsgdmFsdWUsIGRvbmUgfSByZXN1bHQgZnJvbSB0aGVcbiAgLy8gZGVsZWdhdGUgaXRlcmF0b3IsIG9yIGJ5IG1vZGlmeWluZyBjb250ZXh0Lm1ldGhvZCBhbmQgY29udGV4dC5hcmcsXG4gIC8vIHNldHRpbmcgY29udGV4dC5kZWxlZ2F0ZSB0byBudWxsLCBhbmQgcmV0dXJuaW5nIHRoZSBDb250aW51ZVNlbnRpbmVsLlxuICBmdW5jdGlvbiBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KSB7XG4gICAgdmFyIG1ldGhvZCA9IGRlbGVnYXRlLml0ZXJhdG9yW2NvbnRleHQubWV0aG9kXTtcbiAgICBpZiAobWV0aG9kID09PSB1bmRlZmluZWQpIHtcbiAgICAgIC8vIEEgLnRocm93IG9yIC5yZXR1cm4gd2hlbiB0aGUgZGVsZWdhdGUgaXRlcmF0b3IgaGFzIG5vIC50aHJvd1xuICAgICAgLy8gbWV0aG9kIGFsd2F5cyB0ZXJtaW5hdGVzIHRoZSB5aWVsZCogbG9vcC5cbiAgICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuXG4gICAgICBpZiAoY29udGV4dC5tZXRob2QgPT09IFwidGhyb3dcIikge1xuICAgICAgICAvLyBOb3RlOiBbXCJyZXR1cm5cIl0gbXVzdCBiZSB1c2VkIGZvciBFUzMgcGFyc2luZyBjb21wYXRpYmlsaXR5LlxuICAgICAgICBpZiAoZGVsZWdhdGUuaXRlcmF0b3JbXCJyZXR1cm5cIl0pIHtcbiAgICAgICAgICAvLyBJZiB0aGUgZGVsZWdhdGUgaXRlcmF0b3IgaGFzIGEgcmV0dXJuIG1ldGhvZCwgZ2l2ZSBpdCBhXG4gICAgICAgICAgLy8gY2hhbmNlIHRvIGNsZWFuIHVwLlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJyZXR1cm5cIjtcbiAgICAgICAgICBjb250ZXh0LmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KTtcblxuICAgICAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgICAvLyBJZiBtYXliZUludm9rZURlbGVnYXRlKGNvbnRleHQpIGNoYW5nZWQgY29udGV4dC5tZXRob2QgZnJvbVxuICAgICAgICAgICAgLy8gXCJyZXR1cm5cIiB0byBcInRocm93XCIsIGxldCB0aGF0IG92ZXJyaWRlIHRoZSBUeXBlRXJyb3IgYmVsb3cuXG4gICAgICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgICAgY29udGV4dC5hcmcgPSBuZXcgVHlwZUVycm9yKFxuICAgICAgICAgIFwiVGhlIGl0ZXJhdG9yIGRvZXMgbm90IHByb3ZpZGUgYSAndGhyb3cnIG1ldGhvZFwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKG1ldGhvZCwgZGVsZWdhdGUuaXRlcmF0b3IsIGNvbnRleHQuYXJnKTtcblxuICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgIGNvbnRleHQuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgdmFyIGluZm8gPSByZWNvcmQuYXJnO1xuXG4gICAgaWYgKCEgaW5mbykge1xuICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICBjb250ZXh0LmFyZyA9IG5ldyBUeXBlRXJyb3IoXCJpdGVyYXRvciByZXN1bHQgaXMgbm90IGFuIG9iamVjdFwiKTtcbiAgICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgaWYgKGluZm8uZG9uZSkge1xuICAgICAgLy8gQXNzaWduIHRoZSByZXN1bHQgb2YgdGhlIGZpbmlzaGVkIGRlbGVnYXRlIHRvIHRoZSB0ZW1wb3JhcnlcbiAgICAgIC8vIHZhcmlhYmxlIHNwZWNpZmllZCBieSBkZWxlZ2F0ZS5yZXN1bHROYW1lIChzZWUgZGVsZWdhdGVZaWVsZCkuXG4gICAgICBjb250ZXh0W2RlbGVnYXRlLnJlc3VsdE5hbWVdID0gaW5mby52YWx1ZTtcblxuICAgICAgLy8gUmVzdW1lIGV4ZWN1dGlvbiBhdCB0aGUgZGVzaXJlZCBsb2NhdGlvbiAoc2VlIGRlbGVnYXRlWWllbGQpLlxuICAgICAgY29udGV4dC5uZXh0ID0gZGVsZWdhdGUubmV4dExvYztcblxuICAgICAgLy8gSWYgY29udGV4dC5tZXRob2Qgd2FzIFwidGhyb3dcIiBidXQgdGhlIGRlbGVnYXRlIGhhbmRsZWQgdGhlXG4gICAgICAvLyBleGNlcHRpb24sIGxldCB0aGUgb3V0ZXIgZ2VuZXJhdG9yIHByb2NlZWQgbm9ybWFsbHkuIElmXG4gICAgICAvLyBjb250ZXh0Lm1ldGhvZCB3YXMgXCJuZXh0XCIsIGZvcmdldCBjb250ZXh0LmFyZyBzaW5jZSBpdCBoYXMgYmVlblxuICAgICAgLy8gXCJjb25zdW1lZFwiIGJ5IHRoZSBkZWxlZ2F0ZSBpdGVyYXRvci4gSWYgY29udGV4dC5tZXRob2Qgd2FzXG4gICAgICAvLyBcInJldHVyblwiLCBhbGxvdyB0aGUgb3JpZ2luYWwgLnJldHVybiBjYWxsIHRvIGNvbnRpbnVlIGluIHRoZVxuICAgICAgLy8gb3V0ZXIgZ2VuZXJhdG9yLlxuICAgICAgaWYgKGNvbnRleHQubWV0aG9kICE9PSBcInJldHVyblwiKSB7XG4gICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFJlLXlpZWxkIHRoZSByZXN1bHQgcmV0dXJuZWQgYnkgdGhlIGRlbGVnYXRlIG1ldGhvZC5cbiAgICAgIHJldHVybiBpbmZvO1xuICAgIH1cblxuICAgIC8vIFRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBpcyBmaW5pc2hlZCwgc28gZm9yZ2V0IGl0IGFuZCBjb250aW51ZSB3aXRoXG4gICAgLy8gdGhlIG91dGVyIGdlbmVyYXRvci5cbiAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcbiAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgfVxuXG4gIC8vIERlZmluZSBHZW5lcmF0b3IucHJvdG90eXBlLntuZXh0LHRocm93LHJldHVybn0gaW4gdGVybXMgb2YgdGhlXG4gIC8vIHVuaWZpZWQgLl9pbnZva2UgaGVscGVyIG1ldGhvZC5cbiAgZGVmaW5lSXRlcmF0b3JNZXRob2RzKEdwKTtcblxuICBHcFt0b1N0cmluZ1RhZ1N5bWJvbF0gPSBcIkdlbmVyYXRvclwiO1xuXG4gIC8vIEEgR2VuZXJhdG9yIHNob3VsZCBhbHdheXMgcmV0dXJuIGl0c2VsZiBhcyB0aGUgaXRlcmF0b3Igb2JqZWN0IHdoZW4gdGhlXG4gIC8vIEBAaXRlcmF0b3IgZnVuY3Rpb24gaXMgY2FsbGVkIG9uIGl0LiBTb21lIGJyb3dzZXJzJyBpbXBsZW1lbnRhdGlvbnMgb2YgdGhlXG4gIC8vIGl0ZXJhdG9yIHByb3RvdHlwZSBjaGFpbiBpbmNvcnJlY3RseSBpbXBsZW1lbnQgdGhpcywgY2F1c2luZyB0aGUgR2VuZXJhdG9yXG4gIC8vIG9iamVjdCB0byBub3QgYmUgcmV0dXJuZWQgZnJvbSB0aGlzIGNhbGwuIFRoaXMgZW5zdXJlcyB0aGF0IGRvZXNuJ3QgaGFwcGVuLlxuICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlZ2VuZXJhdG9yL2lzc3Vlcy8yNzQgZm9yIG1vcmUgZGV0YWlscy5cbiAgR3BbaXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgR3AudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCJbb2JqZWN0IEdlbmVyYXRvcl1cIjtcbiAgfTtcblxuICBmdW5jdGlvbiBwdXNoVHJ5RW50cnkobG9jcykge1xuICAgIHZhciBlbnRyeSA9IHsgdHJ5TG9jOiBsb2NzWzBdIH07XG5cbiAgICBpZiAoMSBpbiBsb2NzKSB7XG4gICAgICBlbnRyeS5jYXRjaExvYyA9IGxvY3NbMV07XG4gICAgfVxuXG4gICAgaWYgKDIgaW4gbG9jcykge1xuICAgICAgZW50cnkuZmluYWxseUxvYyA9IGxvY3NbMl07XG4gICAgICBlbnRyeS5hZnRlckxvYyA9IGxvY3NbM107XG4gICAgfVxuXG4gICAgdGhpcy50cnlFbnRyaWVzLnB1c2goZW50cnkpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVzZXRUcnlFbnRyeShlbnRyeSkge1xuICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uIHx8IHt9O1xuICAgIHJlY29yZC50eXBlID0gXCJub3JtYWxcIjtcbiAgICBkZWxldGUgcmVjb3JkLmFyZztcbiAgICBlbnRyeS5jb21wbGV0aW9uID0gcmVjb3JkO1xuICB9XG5cbiAgZnVuY3Rpb24gQ29udGV4dCh0cnlMb2NzTGlzdCkge1xuICAgIC8vIFRoZSByb290IGVudHJ5IG9iamVjdCAoZWZmZWN0aXZlbHkgYSB0cnkgc3RhdGVtZW50IHdpdGhvdXQgYSBjYXRjaFxuICAgIC8vIG9yIGEgZmluYWxseSBibG9jaykgZ2l2ZXMgdXMgYSBwbGFjZSB0byBzdG9yZSB2YWx1ZXMgdGhyb3duIGZyb21cbiAgICAvLyBsb2NhdGlvbnMgd2hlcmUgdGhlcmUgaXMgbm8gZW5jbG9zaW5nIHRyeSBzdGF0ZW1lbnQuXG4gICAgdGhpcy50cnlFbnRyaWVzID0gW3sgdHJ5TG9jOiBcInJvb3RcIiB9XTtcbiAgICB0cnlMb2NzTGlzdC5mb3JFYWNoKHB1c2hUcnlFbnRyeSwgdGhpcyk7XG4gICAgdGhpcy5yZXNldCh0cnVlKTtcbiAgfVxuXG4gIGV4cG9ydHMua2V5cyA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHZhciBrZXlzID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIG9iamVjdCkge1xuICAgICAga2V5cy5wdXNoKGtleSk7XG4gICAgfVxuICAgIGtleXMucmV2ZXJzZSgpO1xuXG4gICAgLy8gUmF0aGVyIHRoYW4gcmV0dXJuaW5nIGFuIG9iamVjdCB3aXRoIGEgbmV4dCBtZXRob2QsIHdlIGtlZXBcbiAgICAvLyB0aGluZ3Mgc2ltcGxlIGFuZCByZXR1cm4gdGhlIG5leHQgZnVuY3Rpb24gaXRzZWxmLlxuICAgIHJldHVybiBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgd2hpbGUgKGtleXMubGVuZ3RoKSB7XG4gICAgICAgIHZhciBrZXkgPSBrZXlzLnBvcCgpO1xuICAgICAgICBpZiAoa2V5IGluIG9iamVjdCkge1xuICAgICAgICAgIG5leHQudmFsdWUgPSBrZXk7XG4gICAgICAgICAgbmV4dC5kb25lID0gZmFsc2U7XG4gICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gVG8gYXZvaWQgY3JlYXRpbmcgYW4gYWRkaXRpb25hbCBvYmplY3QsIHdlIGp1c3QgaGFuZyB0aGUgLnZhbHVlXG4gICAgICAvLyBhbmQgLmRvbmUgcHJvcGVydGllcyBvZmYgdGhlIG5leHQgZnVuY3Rpb24gb2JqZWN0IGl0c2VsZi4gVGhpc1xuICAgICAgLy8gYWxzbyBlbnN1cmVzIHRoYXQgdGhlIG1pbmlmaWVyIHdpbGwgbm90IGFub255bWl6ZSB0aGUgZnVuY3Rpb24uXG4gICAgICBuZXh0LmRvbmUgPSB0cnVlO1xuICAgICAgcmV0dXJuIG5leHQ7XG4gICAgfTtcbiAgfTtcblxuICBmdW5jdGlvbiB2YWx1ZXMoaXRlcmFibGUpIHtcbiAgICBpZiAoaXRlcmFibGUpIHtcbiAgICAgIHZhciBpdGVyYXRvck1ldGhvZCA9IGl0ZXJhYmxlW2l0ZXJhdG9yU3ltYm9sXTtcbiAgICAgIGlmIChpdGVyYXRvck1ldGhvZCkge1xuICAgICAgICByZXR1cm4gaXRlcmF0b3JNZXRob2QuY2FsbChpdGVyYWJsZSk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgaXRlcmFibGUubmV4dCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBpdGVyYWJsZTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFpc05hTihpdGVyYWJsZS5sZW5ndGgpKSB7XG4gICAgICAgIHZhciBpID0gLTEsIG5leHQgPSBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICAgIHdoaWxlICgrK2kgPCBpdGVyYWJsZS5sZW5ndGgpIHtcbiAgICAgICAgICAgIGlmIChoYXNPd24uY2FsbChpdGVyYWJsZSwgaSkpIHtcbiAgICAgICAgICAgICAgbmV4dC52YWx1ZSA9IGl0ZXJhYmxlW2ldO1xuICAgICAgICAgICAgICBuZXh0LmRvbmUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgbmV4dC52YWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBuZXh0LmRvbmUgPSB0cnVlO1xuXG4gICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIG5leHQubmV4dCA9IG5leHQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmV0dXJuIGFuIGl0ZXJhdG9yIHdpdGggbm8gdmFsdWVzLlxuICAgIHJldHVybiB7IG5leHQ6IGRvbmVSZXN1bHQgfTtcbiAgfVxuICBleHBvcnRzLnZhbHVlcyA9IHZhbHVlcztcblxuICBmdW5jdGlvbiBkb25lUmVzdWx0KCkge1xuICAgIHJldHVybiB7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfTtcbiAgfVxuXG4gIENvbnRleHQucHJvdG90eXBlID0ge1xuICAgIGNvbnN0cnVjdG9yOiBDb250ZXh0LFxuXG4gICAgcmVzZXQ6IGZ1bmN0aW9uKHNraXBUZW1wUmVzZXQpIHtcbiAgICAgIHRoaXMucHJldiA9IDA7XG4gICAgICB0aGlzLm5leHQgPSAwO1xuICAgICAgLy8gUmVzZXR0aW5nIGNvbnRleHQuX3NlbnQgZm9yIGxlZ2FjeSBzdXBwb3J0IG9mIEJhYmVsJ3NcbiAgICAgIC8vIGZ1bmN0aW9uLnNlbnQgaW1wbGVtZW50YXRpb24uXG4gICAgICB0aGlzLnNlbnQgPSB0aGlzLl9zZW50ID0gdW5kZWZpbmVkO1xuICAgICAgdGhpcy5kb25lID0gZmFsc2U7XG4gICAgICB0aGlzLmRlbGVnYXRlID0gbnVsbDtcblxuICAgICAgdGhpcy5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgIHRoaXMuYXJnID0gdW5kZWZpbmVkO1xuXG4gICAgICB0aGlzLnRyeUVudHJpZXMuZm9yRWFjaChyZXNldFRyeUVudHJ5KTtcblxuICAgICAgaWYgKCFza2lwVGVtcFJlc2V0KSB7XG4gICAgICAgIGZvciAodmFyIG5hbWUgaW4gdGhpcykge1xuICAgICAgICAgIC8vIE5vdCBzdXJlIGFib3V0IHRoZSBvcHRpbWFsIG9yZGVyIG9mIHRoZXNlIGNvbmRpdGlvbnM6XG4gICAgICAgICAgaWYgKG5hbWUuY2hhckF0KDApID09PSBcInRcIiAmJlxuICAgICAgICAgICAgICBoYXNPd24uY2FsbCh0aGlzLCBuYW1lKSAmJlxuICAgICAgICAgICAgICAhaXNOYU4oK25hbWUuc2xpY2UoMSkpKSB7XG4gICAgICAgICAgICB0aGlzW25hbWVdID0gdW5kZWZpbmVkO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBzdG9wOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuZG9uZSA9IHRydWU7XG5cbiAgICAgIHZhciByb290RW50cnkgPSB0aGlzLnRyeUVudHJpZXNbMF07XG4gICAgICB2YXIgcm9vdFJlY29yZCA9IHJvb3RFbnRyeS5jb21wbGV0aW9uO1xuICAgICAgaWYgKHJvb3RSZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIHRocm93IHJvb3RSZWNvcmQuYXJnO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5ydmFsO1xuICAgIH0sXG5cbiAgICBkaXNwYXRjaEV4Y2VwdGlvbjogZnVuY3Rpb24oZXhjZXB0aW9uKSB7XG4gICAgICBpZiAodGhpcy5kb25lKSB7XG4gICAgICAgIHRocm93IGV4Y2VwdGlvbjtcbiAgICAgIH1cblxuICAgICAgdmFyIGNvbnRleHQgPSB0aGlzO1xuICAgICAgZnVuY3Rpb24gaGFuZGxlKGxvYywgY2F1Z2h0KSB7XG4gICAgICAgIHJlY29yZC50eXBlID0gXCJ0aHJvd1wiO1xuICAgICAgICByZWNvcmQuYXJnID0gZXhjZXB0aW9uO1xuICAgICAgICBjb250ZXh0Lm5leHQgPSBsb2M7XG5cbiAgICAgICAgaWYgKGNhdWdodCkge1xuICAgICAgICAgIC8vIElmIHRoZSBkaXNwYXRjaGVkIGV4Y2VwdGlvbiB3YXMgY2F1Z2h0IGJ5IGEgY2F0Y2ggYmxvY2ssXG4gICAgICAgICAgLy8gdGhlbiBsZXQgdGhhdCBjYXRjaCBibG9jayBoYW5kbGUgdGhlIGV4Y2VwdGlvbiBub3JtYWxseS5cbiAgICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICEhIGNhdWdodDtcbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uO1xuXG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPT09IFwicm9vdFwiKSB7XG4gICAgICAgICAgLy8gRXhjZXB0aW9uIHRocm93biBvdXRzaWRlIG9mIGFueSB0cnkgYmxvY2sgdGhhdCBjb3VsZCBoYW5kbGVcbiAgICAgICAgICAvLyBpdCwgc28gc2V0IHRoZSBjb21wbGV0aW9uIHZhbHVlIG9mIHRoZSBlbnRpcmUgZnVuY3Rpb24gdG9cbiAgICAgICAgICAvLyB0aHJvdyB0aGUgZXhjZXB0aW9uLlxuICAgICAgICAgIHJldHVybiBoYW5kbGUoXCJlbmRcIik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZW50cnkudHJ5TG9jIDw9IHRoaXMucHJldikge1xuICAgICAgICAgIHZhciBoYXNDYXRjaCA9IGhhc093bi5jYWxsKGVudHJ5LCBcImNhdGNoTG9jXCIpO1xuICAgICAgICAgIHZhciBoYXNGaW5hbGx5ID0gaGFzT3duLmNhbGwoZW50cnksIFwiZmluYWxseUxvY1wiKTtcblxuICAgICAgICAgIGlmIChoYXNDYXRjaCAmJiBoYXNGaW5hbGx5KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuY2F0Y2hMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5jYXRjaExvYywgdHJ1ZSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5maW5hbGx5TG9jKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSBpZiAoaGFzQ2F0Y2gpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5jYXRjaExvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmNhdGNoTG9jLCB0cnVlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSBpZiAoaGFzRmluYWxseSkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5maW5hbGx5TG9jKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0cnkgc3RhdGVtZW50IHdpdGhvdXQgY2F0Y2ggb3IgZmluYWxseVwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgYWJydXB0OiBmdW5jdGlvbih0eXBlLCBhcmcpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICBpZiAoZW50cnkudHJ5TG9jIDw9IHRoaXMucHJldiAmJlxuICAgICAgICAgICAgaGFzT3duLmNhbGwoZW50cnksIFwiZmluYWxseUxvY1wiKSAmJlxuICAgICAgICAgICAgdGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgIHZhciBmaW5hbGx5RW50cnkgPSBlbnRyeTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoZmluYWxseUVudHJ5ICYmXG4gICAgICAgICAgKHR5cGUgPT09IFwiYnJlYWtcIiB8fFxuICAgICAgICAgICB0eXBlID09PSBcImNvbnRpbnVlXCIpICYmXG4gICAgICAgICAgZmluYWxseUVudHJ5LnRyeUxvYyA8PSBhcmcgJiZcbiAgICAgICAgICBhcmcgPD0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgLy8gSWdub3JlIHRoZSBmaW5hbGx5IGVudHJ5IGlmIGNvbnRyb2wgaXMgbm90IGp1bXBpbmcgdG8gYVxuICAgICAgICAvLyBsb2NhdGlvbiBvdXRzaWRlIHRoZSB0cnkvY2F0Y2ggYmxvY2suXG4gICAgICAgIGZpbmFsbHlFbnRyeSA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIHZhciByZWNvcmQgPSBmaW5hbGx5RW50cnkgPyBmaW5hbGx5RW50cnkuY29tcGxldGlvbiA6IHt9O1xuICAgICAgcmVjb3JkLnR5cGUgPSB0eXBlO1xuICAgICAgcmVjb3JkLmFyZyA9IGFyZztcblxuICAgICAgaWYgKGZpbmFsbHlFbnRyeSkge1xuICAgICAgICB0aGlzLm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICB0aGlzLm5leHQgPSBmaW5hbGx5RW50cnkuZmluYWxseUxvYztcbiAgICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLmNvbXBsZXRlKHJlY29yZCk7XG4gICAgfSxcblxuICAgIGNvbXBsZXRlOiBmdW5jdGlvbihyZWNvcmQsIGFmdGVyTG9jKSB7XG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICB0aHJvdyByZWNvcmQuYXJnO1xuICAgICAgfVxuXG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwiYnJlYWtcIiB8fFxuICAgICAgICAgIHJlY29yZC50eXBlID09PSBcImNvbnRpbnVlXCIpIHtcbiAgICAgICAgdGhpcy5uZXh0ID0gcmVjb3JkLmFyZztcbiAgICAgIH0gZWxzZSBpZiAocmVjb3JkLnR5cGUgPT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgdGhpcy5ydmFsID0gdGhpcy5hcmcgPSByZWNvcmQuYXJnO1xuICAgICAgICB0aGlzLm1ldGhvZCA9IFwicmV0dXJuXCI7XG4gICAgICAgIHRoaXMubmV4dCA9IFwiZW5kXCI7XG4gICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcIm5vcm1hbFwiICYmIGFmdGVyTG9jKSB7XG4gICAgICAgIHRoaXMubmV4dCA9IGFmdGVyTG9jO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9LFxuXG4gICAgZmluaXNoOiBmdW5jdGlvbihmaW5hbGx5TG9jKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LmZpbmFsbHlMb2MgPT09IGZpbmFsbHlMb2MpIHtcbiAgICAgICAgICB0aGlzLmNvbXBsZXRlKGVudHJ5LmNvbXBsZXRpb24sIGVudHJ5LmFmdGVyTG9jKTtcbiAgICAgICAgICByZXNldFRyeUVudHJ5KGVudHJ5KTtcbiAgICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBcImNhdGNoXCI6IGZ1bmN0aW9uKHRyeUxvYykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPT09IHRyeUxvYykge1xuICAgICAgICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uO1xuICAgICAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgICB2YXIgdGhyb3duID0gcmVjb3JkLmFyZztcbiAgICAgICAgICAgIHJlc2V0VHJ5RW50cnkoZW50cnkpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gdGhyb3duO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIFRoZSBjb250ZXh0LmNhdGNoIG1ldGhvZCBtdXN0IG9ubHkgYmUgY2FsbGVkIHdpdGggYSBsb2NhdGlvblxuICAgICAgLy8gYXJndW1lbnQgdGhhdCBjb3JyZXNwb25kcyB0byBhIGtub3duIGNhdGNoIGJsb2NrLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaWxsZWdhbCBjYXRjaCBhdHRlbXB0XCIpO1xuICAgIH0sXG5cbiAgICBkZWxlZ2F0ZVlpZWxkOiBmdW5jdGlvbihpdGVyYWJsZSwgcmVzdWx0TmFtZSwgbmV4dExvYykge1xuICAgICAgdGhpcy5kZWxlZ2F0ZSA9IHtcbiAgICAgICAgaXRlcmF0b3I6IHZhbHVlcyhpdGVyYWJsZSksXG4gICAgICAgIHJlc3VsdE5hbWU6IHJlc3VsdE5hbWUsXG4gICAgICAgIG5leHRMb2M6IG5leHRMb2NcbiAgICAgIH07XG5cbiAgICAgIGlmICh0aGlzLm1ldGhvZCA9PT0gXCJuZXh0XCIpIHtcbiAgICAgICAgLy8gRGVsaWJlcmF0ZWx5IGZvcmdldCB0aGUgbGFzdCBzZW50IHZhbHVlIHNvIHRoYXQgd2UgZG9uJ3RcbiAgICAgICAgLy8gYWNjaWRlbnRhbGx5IHBhc3MgaXQgb24gdG8gdGhlIGRlbGVnYXRlLlxuICAgICAgICB0aGlzLmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuICB9O1xuXG4gIC8vIFJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB0aGlzIHNjcmlwdCBpcyBleGVjdXRpbmcgYXMgYSBDb21tb25KUyBtb2R1bGVcbiAgLy8gb3Igbm90LCByZXR1cm4gdGhlIHJ1bnRpbWUgb2JqZWN0IHNvIHRoYXQgd2UgY2FuIGRlY2xhcmUgdGhlIHZhcmlhYmxlXG4gIC8vIHJlZ2VuZXJhdG9yUnVudGltZSBpbiB0aGUgb3V0ZXIgc2NvcGUsIHdoaWNoIGFsbG93cyB0aGlzIG1vZHVsZSB0byBiZVxuICAvLyBpbmplY3RlZCBlYXNpbHkgYnkgYGJpbi9yZWdlbmVyYXRvciAtLWluY2x1ZGUtcnVudGltZSBzY3JpcHQuanNgLlxuICByZXR1cm4gZXhwb3J0cztcblxufShcbiAgLy8gSWYgdGhpcyBzY3JpcHQgaXMgZXhlY3V0aW5nIGFzIGEgQ29tbW9uSlMgbW9kdWxlLCB1c2UgbW9kdWxlLmV4cG9ydHNcbiAgLy8gYXMgdGhlIHJlZ2VuZXJhdG9yUnVudGltZSBuYW1lc3BhY2UuIE90aGVyd2lzZSBjcmVhdGUgYSBuZXcgZW1wdHlcbiAgLy8gb2JqZWN0LiBFaXRoZXIgd2F5LCB0aGUgcmVzdWx0aW5nIG9iamVjdCB3aWxsIGJlIHVzZWQgdG8gaW5pdGlhbGl6ZVxuICAvLyB0aGUgcmVnZW5lcmF0b3JSdW50aW1lIHZhcmlhYmxlIGF0IHRoZSB0b3Agb2YgdGhpcyBmaWxlLlxuICB0eXBlb2YgbW9kdWxlID09PSBcIm9iamVjdFwiID8gbW9kdWxlLmV4cG9ydHMgOiB7fVxuKSk7XG5cbnRyeSB7XG4gIHJlZ2VuZXJhdG9yUnVudGltZSA9IHJ1bnRpbWU7XG59IGNhdGNoIChhY2NpZGVudGFsU3RyaWN0TW9kZSkge1xuICAvLyBUaGlzIG1vZHVsZSBzaG91bGQgbm90IGJlIHJ1bm5pbmcgaW4gc3RyaWN0IG1vZGUsIHNvIHRoZSBhYm92ZVxuICAvLyBhc3NpZ25tZW50IHNob3VsZCBhbHdheXMgd29yayB1bmxlc3Mgc29tZXRoaW5nIGlzIG1pc2NvbmZpZ3VyZWQuIEp1c3RcbiAgLy8gaW4gY2FzZSBydW50aW1lLmpzIGFjY2lkZW50YWxseSBydW5zIGluIHN0cmljdCBtb2RlLCB3ZSBjYW4gZXNjYXBlXG4gIC8vIHN0cmljdCBtb2RlIHVzaW5nIGEgZ2xvYmFsIEZ1bmN0aW9uIGNhbGwuIFRoaXMgY291bGQgY29uY2VpdmFibHkgZmFpbFxuICAvLyBpZiBhIENvbnRlbnQgU2VjdXJpdHkgUG9saWN5IGZvcmJpZHMgdXNpbmcgRnVuY3Rpb24sIGJ1dCBpbiB0aGF0IGNhc2VcbiAgLy8gdGhlIHByb3BlciBzb2x1dGlvbiBpcyB0byBmaXggdGhlIGFjY2lkZW50YWwgc3RyaWN0IG1vZGUgcHJvYmxlbS4gSWZcbiAgLy8geW91J3ZlIG1pc2NvbmZpZ3VyZWQgeW91ciBidW5kbGVyIHRvIGZvcmNlIHN0cmljdCBtb2RlIGFuZCBhcHBsaWVkIGFcbiAgLy8gQ1NQIHRvIGZvcmJpZCBGdW5jdGlvbiwgYW5kIHlvdSdyZSBub3Qgd2lsbGluZyB0byBmaXggZWl0aGVyIG9mIHRob3NlXG4gIC8vIHByb2JsZW1zLCBwbGVhc2UgZGV0YWlsIHlvdXIgdW5pcXVlIHByZWRpY2FtZW50IGluIGEgR2l0SHViIGlzc3VlLlxuICBGdW5jdGlvbihcInJcIiwgXCJyZWdlbmVyYXRvclJ1bnRpbWUgPSByXCIpKHJ1bnRpbWUpO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBQcm9wVHlwZXMgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwicHJvcC10eXBlc1wiKSk7XG5cbnZhciBfYWRkQ2xhc3MgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJkb20taGVscGVycy9jbGFzcy9hZGRDbGFzc1wiKSk7XG5cbnZhciBfcmVtb3ZlQ2xhc3MgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJkb20taGVscGVycy9jbGFzcy9yZW1vdmVDbGFzc1wiKSk7XG5cbnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5cbnZhciBfVHJhbnNpdGlvbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vVHJhbnNpdGlvblwiKSk7XG5cbnZhciBfUHJvcFR5cGVzID0gcmVxdWlyZShcIi4vdXRpbHMvUHJvcFR5cGVzXCIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGVsc2UgeyB2YXIgbmV3T2JqID0ge307IGlmIChvYmogIT0gbnVsbCkgeyBmb3IgKHZhciBrZXkgaW4gb2JqKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7IHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OyBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsgfSBlbHNlIHsgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IH0gfSBuZXdPYmouZGVmYXVsdCA9IG9iajsgcmV0dXJuIG5ld09iajsgfSB9XG5cbmZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpOyBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzczsgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgYWRkQ2xhc3MgPSBmdW5jdGlvbiBhZGRDbGFzcyhub2RlLCBjbGFzc2VzKSB7XG4gIHJldHVybiBub2RlICYmIGNsYXNzZXMgJiYgY2xhc3Nlcy5zcGxpdCgnICcpLmZvckVhY2goZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gKDAsIF9hZGRDbGFzcy5kZWZhdWx0KShub2RlLCBjKTtcbiAgfSk7XG59O1xuXG52YXIgcmVtb3ZlQ2xhc3MgPSBmdW5jdGlvbiByZW1vdmVDbGFzcyhub2RlLCBjbGFzc2VzKSB7XG4gIHJldHVybiBub2RlICYmIGNsYXNzZXMgJiYgY2xhc3Nlcy5zcGxpdCgnICcpLmZvckVhY2goZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gKDAsIF9yZW1vdmVDbGFzcy5kZWZhdWx0KShub2RlLCBjKTtcbiAgfSk7XG59O1xuLyoqXG4gKiBBIHRyYW5zaXRpb24gY29tcG9uZW50IGluc3BpcmVkIGJ5IHRoZSBleGNlbGxlbnRcbiAqIFtuZy1hbmltYXRlXShodHRwOi8vd3d3Lm5nYW5pbWF0ZS5vcmcvKSBsaWJyYXJ5LCB5b3Ugc2hvdWxkIHVzZSBpdCBpZiB5b3UncmVcbiAqIHVzaW5nIENTUyB0cmFuc2l0aW9ucyBvciBhbmltYXRpb25zLiBJdCdzIGJ1aWx0IHVwb24gdGhlXG4gKiBbYFRyYW5zaXRpb25gXShodHRwczovL3JlYWN0Y29tbXVuaXR5Lm9yZy9yZWFjdC10cmFuc2l0aW9uLWdyb3VwL3RyYW5zaXRpb24pXG4gKiBjb21wb25lbnQsIHNvIGl0IGluaGVyaXRzIGFsbCBvZiBpdHMgcHJvcHMuXG4gKlxuICogYENTU1RyYW5zaXRpb25gIGFwcGxpZXMgYSBwYWlyIG9mIGNsYXNzIG5hbWVzIGR1cmluZyB0aGUgYGFwcGVhcmAsIGBlbnRlcmAsXG4gKiBhbmQgYGV4aXRgIHN0YXRlcyBvZiB0aGUgdHJhbnNpdGlvbi4gVGhlIGZpcnN0IGNsYXNzIGlzIGFwcGxpZWQgYW5kIHRoZW4gYVxuICogc2Vjb25kIGAqLWFjdGl2ZWAgY2xhc3MgaW4gb3JkZXIgdG8gYWN0aXZhdGUgdGhlIENTU1MgdHJhbnNpdGlvbi4gQWZ0ZXIgdGhlXG4gKiB0cmFuc2l0aW9uLCBtYXRjaGluZyBgKi1kb25lYCBjbGFzcyBuYW1lcyBhcmUgYXBwbGllZCB0byBwZXJzaXN0IHRoZVxuICogdHJhbnNpdGlvbiBzdGF0ZS5cbiAqXG4gKiBgYGBqc3hcbiAqIGZ1bmN0aW9uIEFwcCgpIHtcbiAqICAgY29uc3QgW2luUHJvcCwgc2V0SW5Qcm9wXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAqICAgcmV0dXJuIChcbiAqICAgICA8ZGl2PlxuICogICAgICAgPENTU1RyYW5zaXRpb24gaW49e2luUHJvcH0gdGltZW91dD17MjAwfSBjbGFzc05hbWVzPVwibXktbm9kZVwiPlxuICogICAgICAgICA8ZGl2PlxuICogICAgICAgICAgIHtcIkknbGwgcmVjZWl2ZSBteS1ub2RlLSogY2xhc3Nlc1wifVxuICogICAgICAgICA8L2Rpdj5cbiAqICAgICAgIDwvQ1NTVHJhbnNpdGlvbj5cbiAqICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIG9uQ2xpY2s9eygpID0+IHNldEluUHJvcCh0cnVlKX0+XG4gKiAgICAgICAgIENsaWNrIHRvIEVudGVyXG4gKiAgICAgICA8L2J1dHRvbj5cbiAqICAgICA8L2Rpdj5cbiAqICAgKTtcbiAqIH1cbiAqIGBgYFxuICpcbiAqIFdoZW4gdGhlIGBpbmAgcHJvcCBpcyBzZXQgdG8gYHRydWVgLCB0aGUgY2hpbGQgY29tcG9uZW50IHdpbGwgZmlyc3QgcmVjZWl2ZVxuICogdGhlIGNsYXNzIGBleGFtcGxlLWVudGVyYCwgdGhlbiB0aGUgYGV4YW1wbGUtZW50ZXItYWN0aXZlYCB3aWxsIGJlIGFkZGVkIGluXG4gKiB0aGUgbmV4dCB0aWNrLiBgQ1NTVHJhbnNpdGlvbmAgW2ZvcmNlcyBhXG4gKiByZWZsb3ddKGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvYmxvYi81MDA3MzAzZTcyOWE3NGJlNjZhMjFjM2UyMjA1ZTQ5MTY4MjE1MjRiL3NyYy9DU1NUcmFuc2l0aW9uLmpzI0wyMDgtTDIxNSlcbiAqIGJldHdlZW4gYmVmb3JlIGFkZGluZyB0aGUgYGV4YW1wbGUtZW50ZXItYWN0aXZlYC4gVGhpcyBpcyBhbiBpbXBvcnRhbnQgdHJpY2tcbiAqIGJlY2F1c2UgaXQgYWxsb3dzIHVzIHRvIHRyYW5zaXRpb24gYmV0d2VlbiBgZXhhbXBsZS1lbnRlcmAgYW5kXG4gKiBgZXhhbXBsZS1lbnRlci1hY3RpdmVgIGV2ZW4gdGhvdWdoIHRoZXkgd2VyZSBhZGRlZCBpbW1lZGlhdGVseSBvbmUgYWZ0ZXJcbiAqIGFub3RoZXIuIE1vc3Qgbm90YWJseSwgdGhpcyBpcyB3aGF0IG1ha2VzIGl0IHBvc3NpYmxlIGZvciB1cyB0byBhbmltYXRlXG4gKiBfYXBwZWFyYW5jZV8uXG4gKlxuICogYGBgY3NzXG4gKiAubXktbm9kZS1lbnRlciB7XG4gKiAgIG9wYWNpdHk6IDA7XG4gKiB9XG4gKiAubXktbm9kZS1lbnRlci1hY3RpdmUge1xuICogICBvcGFjaXR5OiAxO1xuICogICB0cmFuc2l0aW9uOiBvcGFjaXR5IDIwMG1zO1xuICogfVxuICogLm15LW5vZGUtZXhpdCB7XG4gKiAgIG9wYWNpdHk6IDE7XG4gKiB9XG4gKiAubXktbm9kZS1leGl0LWFjdGl2ZSB7XG4gKiAgIG9wYWNpdHk6IDA7XG4gKiAgIHRyYW5zaXRpb246IG9wYWNpdHk6IDIwMG1zO1xuICogfVxuICogYGBgXG4gKlxuICogYCotYWN0aXZlYCBjbGFzc2VzIHJlcHJlc2VudCB3aGljaCBzdHlsZXMgeW91IHdhbnQgdG8gYW5pbWF0ZSAqKnRvKiouXG4gKi9cblxuXG52YXIgQ1NTVHJhbnNpdGlvbiA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShDU1NUcmFuc2l0aW9uLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBDU1NUcmFuc2l0aW9uKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuXG4gICAgX3RoaXMub25FbnRlciA9IGZ1bmN0aW9uIChub2RlLCBhcHBlYXJpbmcpIHtcbiAgICAgIHZhciBfdGhpcyRnZXRDbGFzc05hbWVzID0gX3RoaXMuZ2V0Q2xhc3NOYW1lcyhhcHBlYXJpbmcgPyAnYXBwZWFyJyA6ICdlbnRlcicpLFxuICAgICAgICAgIGNsYXNzTmFtZSA9IF90aGlzJGdldENsYXNzTmFtZXMuY2xhc3NOYW1lO1xuXG4gICAgICBfdGhpcy5yZW1vdmVDbGFzc2VzKG5vZGUsICdleGl0Jyk7XG5cbiAgICAgIGFkZENsYXNzKG5vZGUsIGNsYXNzTmFtZSk7XG5cbiAgICAgIGlmIChfdGhpcy5wcm9wcy5vbkVudGVyKSB7XG4gICAgICAgIF90aGlzLnByb3BzLm9uRW50ZXIobm9kZSwgYXBwZWFyaW5nKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3RoaXMub25FbnRlcmluZyA9IGZ1bmN0aW9uIChub2RlLCBhcHBlYXJpbmcpIHtcbiAgICAgIHZhciBfdGhpcyRnZXRDbGFzc05hbWVzMiA9IF90aGlzLmdldENsYXNzTmFtZXMoYXBwZWFyaW5nID8gJ2FwcGVhcicgOiAnZW50ZXInKSxcbiAgICAgICAgICBhY3RpdmVDbGFzc05hbWUgPSBfdGhpcyRnZXRDbGFzc05hbWVzMi5hY3RpdmVDbGFzc05hbWU7XG5cbiAgICAgIF90aGlzLnJlZmxvd0FuZEFkZENsYXNzKG5vZGUsIGFjdGl2ZUNsYXNzTmFtZSk7XG5cbiAgICAgIGlmIChfdGhpcy5wcm9wcy5vbkVudGVyaW5nKSB7XG4gICAgICAgIF90aGlzLnByb3BzLm9uRW50ZXJpbmcobm9kZSwgYXBwZWFyaW5nKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3RoaXMub25FbnRlcmVkID0gZnVuY3Rpb24gKG5vZGUsIGFwcGVhcmluZykge1xuICAgICAgdmFyIGFwcGVhckNsYXNzTmFtZSA9IF90aGlzLmdldENsYXNzTmFtZXMoJ2FwcGVhcicpLmRvbmVDbGFzc05hbWU7XG5cbiAgICAgIHZhciBlbnRlckNsYXNzTmFtZSA9IF90aGlzLmdldENsYXNzTmFtZXMoJ2VudGVyJykuZG9uZUNsYXNzTmFtZTtcblxuICAgICAgdmFyIGRvbmVDbGFzc05hbWUgPSBhcHBlYXJpbmcgPyBhcHBlYXJDbGFzc05hbWUgKyBcIiBcIiArIGVudGVyQ2xhc3NOYW1lIDogZW50ZXJDbGFzc05hbWU7XG5cbiAgICAgIF90aGlzLnJlbW92ZUNsYXNzZXMobm9kZSwgYXBwZWFyaW5nID8gJ2FwcGVhcicgOiAnZW50ZXInKTtcblxuICAgICAgYWRkQ2xhc3Mobm9kZSwgZG9uZUNsYXNzTmFtZSk7XG5cbiAgICAgIGlmIChfdGhpcy5wcm9wcy5vbkVudGVyZWQpIHtcbiAgICAgICAgX3RoaXMucHJvcHMub25FbnRlcmVkKG5vZGUsIGFwcGVhcmluZyk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF90aGlzLm9uRXhpdCA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICB2YXIgX3RoaXMkZ2V0Q2xhc3NOYW1lczMgPSBfdGhpcy5nZXRDbGFzc05hbWVzKCdleGl0JyksXG4gICAgICAgICAgY2xhc3NOYW1lID0gX3RoaXMkZ2V0Q2xhc3NOYW1lczMuY2xhc3NOYW1lO1xuXG4gICAgICBfdGhpcy5yZW1vdmVDbGFzc2VzKG5vZGUsICdhcHBlYXInKTtcblxuICAgICAgX3RoaXMucmVtb3ZlQ2xhc3Nlcyhub2RlLCAnZW50ZXInKTtcblxuICAgICAgYWRkQ2xhc3Mobm9kZSwgY2xhc3NOYW1lKTtcblxuICAgICAgaWYgKF90aGlzLnByb3BzLm9uRXhpdCkge1xuICAgICAgICBfdGhpcy5wcm9wcy5vbkV4aXQobm9kZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF90aGlzLm9uRXhpdGluZyA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICB2YXIgX3RoaXMkZ2V0Q2xhc3NOYW1lczQgPSBfdGhpcy5nZXRDbGFzc05hbWVzKCdleGl0JyksXG4gICAgICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gX3RoaXMkZ2V0Q2xhc3NOYW1lczQuYWN0aXZlQ2xhc3NOYW1lO1xuXG4gICAgICBfdGhpcy5yZWZsb3dBbmRBZGRDbGFzcyhub2RlLCBhY3RpdmVDbGFzc05hbWUpO1xuXG4gICAgICBpZiAoX3RoaXMucHJvcHMub25FeGl0aW5nKSB7XG4gICAgICAgIF90aGlzLnByb3BzLm9uRXhpdGluZyhub2RlKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3RoaXMub25FeGl0ZWQgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgdmFyIF90aGlzJGdldENsYXNzTmFtZXM1ID0gX3RoaXMuZ2V0Q2xhc3NOYW1lcygnZXhpdCcpLFxuICAgICAgICAgIGRvbmVDbGFzc05hbWUgPSBfdGhpcyRnZXRDbGFzc05hbWVzNS5kb25lQ2xhc3NOYW1lO1xuXG4gICAgICBfdGhpcy5yZW1vdmVDbGFzc2VzKG5vZGUsICdleGl0Jyk7XG5cbiAgICAgIGFkZENsYXNzKG5vZGUsIGRvbmVDbGFzc05hbWUpO1xuXG4gICAgICBpZiAoX3RoaXMucHJvcHMub25FeGl0ZWQpIHtcbiAgICAgICAgX3RoaXMucHJvcHMub25FeGl0ZWQobm9kZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF90aGlzLmdldENsYXNzTmFtZXMgPSBmdW5jdGlvbiAodHlwZSkge1xuICAgICAgdmFyIGNsYXNzTmFtZXMgPSBfdGhpcy5wcm9wcy5jbGFzc05hbWVzO1xuICAgICAgdmFyIGlzU3RyaW5nQ2xhc3NOYW1lcyA9IHR5cGVvZiBjbGFzc05hbWVzID09PSAnc3RyaW5nJztcbiAgICAgIHZhciBwcmVmaXggPSBpc1N0cmluZ0NsYXNzTmFtZXMgJiYgY2xhc3NOYW1lcyA/IGNsYXNzTmFtZXMgKyAnLScgOiAnJztcbiAgICAgIHZhciBjbGFzc05hbWUgPSBpc1N0cmluZ0NsYXNzTmFtZXMgPyBwcmVmaXggKyB0eXBlIDogY2xhc3NOYW1lc1t0eXBlXTtcbiAgICAgIHZhciBhY3RpdmVDbGFzc05hbWUgPSBpc1N0cmluZ0NsYXNzTmFtZXMgPyBjbGFzc05hbWUgKyAnLWFjdGl2ZScgOiBjbGFzc05hbWVzW3R5cGUgKyAnQWN0aXZlJ107XG4gICAgICB2YXIgZG9uZUNsYXNzTmFtZSA9IGlzU3RyaW5nQ2xhc3NOYW1lcyA/IGNsYXNzTmFtZSArICctZG9uZScgOiBjbGFzc05hbWVzW3R5cGUgKyAnRG9uZSddO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICAgIGFjdGl2ZUNsYXNzTmFtZTogYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgICBkb25lQ2xhc3NOYW1lOiBkb25lQ2xhc3NOYW1lXG4gICAgICB9O1xuICAgIH07XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gQ1NTVHJhbnNpdGlvbi5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbW92ZUNsYXNzZXMgPSBmdW5jdGlvbiByZW1vdmVDbGFzc2VzKG5vZGUsIHR5cGUpIHtcbiAgICB2YXIgX3RoaXMkZ2V0Q2xhc3NOYW1lczYgPSB0aGlzLmdldENsYXNzTmFtZXModHlwZSksXG4gICAgICAgIGNsYXNzTmFtZSA9IF90aGlzJGdldENsYXNzTmFtZXM2LmNsYXNzTmFtZSxcbiAgICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gX3RoaXMkZ2V0Q2xhc3NOYW1lczYuYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgICBkb25lQ2xhc3NOYW1lID0gX3RoaXMkZ2V0Q2xhc3NOYW1lczYuZG9uZUNsYXNzTmFtZTtcblxuICAgIGNsYXNzTmFtZSAmJiByZW1vdmVDbGFzcyhub2RlLCBjbGFzc05hbWUpO1xuICAgIGFjdGl2ZUNsYXNzTmFtZSAmJiByZW1vdmVDbGFzcyhub2RlLCBhY3RpdmVDbGFzc05hbWUpO1xuICAgIGRvbmVDbGFzc05hbWUgJiYgcmVtb3ZlQ2xhc3Mobm9kZSwgZG9uZUNsYXNzTmFtZSk7XG4gIH07XG5cbiAgX3Byb3RvLnJlZmxvd0FuZEFkZENsYXNzID0gZnVuY3Rpb24gcmVmbG93QW5kQWRkQ2xhc3Mobm9kZSwgY2xhc3NOYW1lKSB7XG4gICAgLy8gVGhpcyBpcyBmb3IgdG8gZm9yY2UgYSByZXBhaW50LFxuICAgIC8vIHdoaWNoIGlzIG5lY2Vzc2FyeSBpbiBvcmRlciB0byB0cmFuc2l0aW9uIHN0eWxlcyB3aGVuIGFkZGluZyBhIGNsYXNzIG5hbWUuXG4gICAgaWYgKGNsYXNzTmFtZSkge1xuICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLWV4cHJlc3Npb25zICovXG4gICAgICBub2RlICYmIG5vZGUuc2Nyb2xsVG9wO1xuICAgICAgLyogZXNsaW50LWVuYWJsZSBuby11bnVzZWQtZXhwcmVzc2lvbnMgKi9cblxuICAgICAgYWRkQ2xhc3Mobm9kZSwgY2xhc3NOYW1lKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7fSwgdGhpcy5wcm9wcyk7XG5cbiAgICBkZWxldGUgcHJvcHMuY2xhc3NOYW1lcztcbiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfVHJhbnNpdGlvbi5kZWZhdWx0LCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICAgIG9uRW50ZXI6IHRoaXMub25FbnRlcixcbiAgICAgIG9uRW50ZXJlZDogdGhpcy5vbkVudGVyZWQsXG4gICAgICBvbkVudGVyaW5nOiB0aGlzLm9uRW50ZXJpbmcsXG4gICAgICBvbkV4aXQ6IHRoaXMub25FeGl0LFxuICAgICAgb25FeGl0aW5nOiB0aGlzLm9uRXhpdGluZyxcbiAgICAgIG9uRXhpdGVkOiB0aGlzLm9uRXhpdGVkXG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBDU1NUcmFuc2l0aW9uO1xufShfcmVhY3QuZGVmYXVsdC5Db21wb25lbnQpO1xuXG5DU1NUcmFuc2l0aW9uLmRlZmF1bHRQcm9wcyA9IHtcbiAgY2xhc3NOYW1lczogJydcbn07XG5DU1NUcmFuc2l0aW9uLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IF9leHRlbmRzKHt9LCBfVHJhbnNpdGlvbi5kZWZhdWx0LnByb3BUeXBlcywge1xuICAvKipcbiAgICogVGhlIGFuaW1hdGlvbiBjbGFzc05hbWVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudCBhcyBpdCBlbnRlcnMsIGV4aXRzIG9yXG4gICAqIGhhcyBmaW5pc2hlZCB0aGUgdHJhbnNpdGlvbi4gQSBzaW5nbGUgbmFtZSBjYW4gYmUgcHJvdmlkZWQgYW5kIGl0IHdpbGwgYmVcbiAgICogc3VmZml4ZWQgZm9yIGVhY2ggc3RhZ2U6IGUuZy5cbiAgICpcbiAgICogYGNsYXNzTmFtZXM9XCJmYWRlXCJgIGFwcGxpZXMgYGZhZGUtZW50ZXJgLCBgZmFkZS1lbnRlci1hY3RpdmVgLFxuICAgKiBgZmFkZS1lbnRlci1kb25lYCwgYGZhZGUtZXhpdGAsIGBmYWRlLWV4aXQtYWN0aXZlYCwgYGZhZGUtZXhpdC1kb25lYCxcbiAgICogYGZhZGUtYXBwZWFyYCwgYGZhZGUtYXBwZWFyLWFjdGl2ZWAsIGFuZCBgZmFkZS1hcHBlYXItZG9uZWAuXG4gICAqXG4gICAqICoqTm90ZSoqOiBgZmFkZS1hcHBlYXItZG9uZWAgYW5kIGBmYWRlLWVudGVyLWRvbmVgIHdpbGwgX2JvdGhfIGJlIGFwcGxpZWQuXG4gICAqIFRoaXMgYWxsb3dzIHlvdSB0byBkZWZpbmUgZGlmZmVyZW50IGJlaGF2aW9yIGZvciB3aGVuIGFwcGVhcmluZyBpcyBkb25lIGFuZFxuICAgKiB3aGVuIHJlZ3VsYXIgZW50ZXJpbmcgaXMgZG9uZSwgdXNpbmcgc2VsZWN0b3JzIGxpa2VcbiAgICogYC5mYWRlLWVudGVyLWRvbmU6bm90KC5mYWRlLWFwcGVhci1kb25lKWAuIEZvciBleGFtcGxlLCB5b3UgY291bGQgYXBwbHkgYW5cbiAgICogZXBpYyBlbnRyYW5jZSBhbmltYXRpb24gd2hlbiBlbGVtZW50IGZpcnN0IGFwcGVhcnMgaW4gdGhlIERPTSB1c2luZ1xuICAgKiBbQW5pbWF0ZS5jc3NdKGh0dHBzOi8vZGFuZWRlbi5naXRodWIuaW8vYW5pbWF0ZS5jc3MvKS4gT3RoZXJ3aXNlIHlvdSBjYW5cbiAgICogc2ltcGx5IHVzZSBgZmFkZS1lbnRlci1kb25lYCBmb3IgZGVmaW5pbmcgYm90aCBjYXNlcy5cbiAgICpcbiAgICogRWFjaCBpbmRpdmlkdWFsIGNsYXNzTmFtZXMgY2FuIGFsc28gYmUgc3BlY2lmaWVkIGluZGVwZW5kZW50bHkgbGlrZTpcbiAgICpcbiAgICogYGBganNcbiAgICogY2xhc3NOYW1lcz17e1xuICAgKiAgYXBwZWFyOiAnbXktYXBwZWFyJyxcbiAgICogIGFwcGVhckFjdGl2ZTogJ215LWFjdGl2ZS1hcHBlYXInLFxuICAgKiAgYXBwZWFyRG9uZTogJ215LWRvbmUtYXBwZWFyJyxcbiAgICogIGVudGVyOiAnbXktZW50ZXInLFxuICAgKiAgZW50ZXJBY3RpdmU6ICdteS1hY3RpdmUtZW50ZXInLFxuICAgKiAgZW50ZXJEb25lOiAnbXktZG9uZS1lbnRlcicsXG4gICAqICBleGl0OiAnbXktZXhpdCcsXG4gICAqICBleGl0QWN0aXZlOiAnbXktYWN0aXZlLWV4aXQnLFxuICAgKiAgZXhpdERvbmU6ICdteS1kb25lLWV4aXQnLFxuICAgKiB9fVxuICAgKiBgYGBcbiAgICpcbiAgICogSWYgeW91IHdhbnQgdG8gc2V0IHRoZXNlIGNsYXNzZXMgdXNpbmcgQ1NTIE1vZHVsZXM6XG4gICAqXG4gICAqIGBgYGpzXG4gICAqIGltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMuY3NzJztcbiAgICogYGBgXG4gICAqXG4gICAqIHlvdSBtaWdodCB3YW50IHRvIHVzZSBjYW1lbENhc2UgaW4geW91ciBDU1MgZmlsZSwgdGhhdCB3YXkgY291bGQgc2ltcGx5XG4gICAqIHNwcmVhZCB0aGVtIGluc3RlYWQgb2YgbGlzdGluZyB0aGVtIG9uZSBieSBvbmU6XG4gICAqXG4gICAqIGBgYGpzXG4gICAqIGNsYXNzTmFtZXM9e3sgLi4uc3R5bGVzIH19XG4gICAqIGBgYFxuICAgKlxuICAgKiBAdHlwZSB7c3RyaW5nIHwge1xuICAgKiAgYXBwZWFyPzogc3RyaW5nLFxuICAgKiAgYXBwZWFyQWN0aXZlPzogc3RyaW5nLFxuICAgKiAgYXBwZWFyRG9uZT86IHN0cmluZyxcbiAgICogIGVudGVyPzogc3RyaW5nLFxuICAgKiAgZW50ZXJBY3RpdmU/OiBzdHJpbmcsXG4gICAqICBlbnRlckRvbmU/OiBzdHJpbmcsXG4gICAqICBleGl0Pzogc3RyaW5nLFxuICAgKiAgZXhpdEFjdGl2ZT86IHN0cmluZyxcbiAgICogIGV4aXREb25lPzogc3RyaW5nLFxuICAgKiB9fVxuICAgKi9cbiAgY2xhc3NOYW1lczogX1Byb3BUeXBlcy5jbGFzc05hbWVzU2hhcGUsXG5cbiAgLyoqXG4gICAqIEEgYDxUcmFuc2l0aW9uPmAgY2FsbGJhY2sgZmlyZWQgaW1tZWRpYXRlbHkgYWZ0ZXIgdGhlICdlbnRlcicgb3IgJ2FwcGVhcicgY2xhc3MgaXNcbiAgICogYXBwbGllZC5cbiAgICpcbiAgICogQHR5cGUgRnVuY3Rpb24obm9kZTogSHRtbEVsZW1lbnQsIGlzQXBwZWFyaW5nOiBib29sKVxuICAgKi9cbiAgb25FbnRlcjogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIEEgYDxUcmFuc2l0aW9uPmAgY2FsbGJhY2sgZmlyZWQgaW1tZWRpYXRlbHkgYWZ0ZXIgdGhlICdlbnRlci1hY3RpdmUnIG9yXG4gICAqICdhcHBlYXItYWN0aXZlJyBjbGFzcyBpcyBhcHBsaWVkLlxuICAgKlxuICAgKiBAdHlwZSBGdW5jdGlvbihub2RlOiBIdG1sRWxlbWVudCwgaXNBcHBlYXJpbmc6IGJvb2wpXG4gICAqL1xuICBvbkVudGVyaW5nOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQSBgPFRyYW5zaXRpb24+YCBjYWxsYmFjayBmaXJlZCBpbW1lZGlhdGVseSBhZnRlciB0aGUgJ2VudGVyJyBvclxuICAgKiAnYXBwZWFyJyBjbGFzc2VzIGFyZSAqKnJlbW92ZWQqKiBhbmQgdGhlIGBkb25lYCBjbGFzcyBpcyBhZGRlZCB0byB0aGUgRE9NIG5vZGUuXG4gICAqXG4gICAqIEB0eXBlIEZ1bmN0aW9uKG5vZGU6IEh0bWxFbGVtZW50LCBpc0FwcGVhcmluZzogYm9vbClcbiAgICovXG4gIG9uRW50ZXJlZDogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIEEgYDxUcmFuc2l0aW9uPmAgY2FsbGJhY2sgZmlyZWQgaW1tZWRpYXRlbHkgYWZ0ZXIgdGhlICdleGl0JyBjbGFzcyBpc1xuICAgKiBhcHBsaWVkLlxuICAgKlxuICAgKiBAdHlwZSBGdW5jdGlvbihub2RlOiBIdG1sRWxlbWVudClcbiAgICovXG4gIG9uRXhpdDogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIEEgYDxUcmFuc2l0aW9uPmAgY2FsbGJhY2sgZmlyZWQgaW1tZWRpYXRlbHkgYWZ0ZXIgdGhlICdleGl0LWFjdGl2ZScgaXMgYXBwbGllZC5cbiAgICpcbiAgICogQHR5cGUgRnVuY3Rpb24obm9kZTogSHRtbEVsZW1lbnQpXG4gICAqL1xuICBvbkV4aXRpbmc6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBBIGA8VHJhbnNpdGlvbj5gIGNhbGxiYWNrIGZpcmVkIGltbWVkaWF0ZWx5IGFmdGVyIHRoZSAnZXhpdCcgY2xhc3Nlc1xuICAgKiBhcmUgKipyZW1vdmVkKiogYW5kIHRoZSBgZXhpdC1kb25lYCBjbGFzcyBpcyBhZGRlZCB0byB0aGUgRE9NIG5vZGUuXG4gICAqXG4gICAqIEB0eXBlIEZ1bmN0aW9uKG5vZGU6IEh0bWxFbGVtZW50KVxuICAgKi9cbiAgb25FeGl0ZWQ6IFByb3BUeXBlcy5mdW5jXG59KSA6IHt9O1xudmFyIF9kZWZhdWx0ID0gQ1NTVHJhbnNpdGlvbjtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzW1wiZGVmYXVsdFwiXTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSBhZGRDbGFzcztcblxudmFyIF9oYXNDbGFzcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vaGFzQ2xhc3NcIikpO1xuXG5mdW5jdGlvbiBhZGRDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpIHtcbiAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0KSBlbGVtZW50LmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKTtlbHNlIGlmICghKDAsIF9oYXNDbGFzcy5kZWZhdWx0KShlbGVtZW50LCBjbGFzc05hbWUpKSBpZiAodHlwZW9mIGVsZW1lbnQuY2xhc3NOYW1lID09PSAnc3RyaW5nJykgZWxlbWVudC5jbGFzc05hbWUgPSBlbGVtZW50LmNsYXNzTmFtZSArICcgJyArIGNsYXNzTmFtZTtlbHNlIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdjbGFzcycsIChlbGVtZW50LmNsYXNzTmFtZSAmJiBlbGVtZW50LmNsYXNzTmFtZS5iYXNlVmFsIHx8ICcnKSArICcgJyArIGNsYXNzTmFtZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07IiwiZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICBcImRlZmF1bHRcIjogb2JqXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdDsiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IGhhc0NsYXNzO1xuXG5mdW5jdGlvbiBoYXNDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpIHtcbiAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0KSByZXR1cm4gISFjbGFzc05hbWUgJiYgZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKTtlbHNlIHJldHVybiAoXCIgXCIgKyAoZWxlbWVudC5jbGFzc05hbWUuYmFzZVZhbCB8fCBlbGVtZW50LmNsYXNzTmFtZSkgKyBcIiBcIikuaW5kZXhPZihcIiBcIiArIGNsYXNzTmFtZSArIFwiIFwiKSAhPT0gLTE7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07IiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiByZXBsYWNlQ2xhc3NOYW1lKG9yaWdDbGFzcywgY2xhc3NUb1JlbW92ZSkge1xuICByZXR1cm4gb3JpZ0NsYXNzLnJlcGxhY2UobmV3IFJlZ0V4cCgnKF58XFxcXHMpJyArIGNsYXNzVG9SZW1vdmUgKyAnKD86XFxcXHN8JCknLCAnZycpLCAnJDEnKS5yZXBsYWNlKC9cXHMrL2csICcgJykucmVwbGFjZSgvXlxccyp8XFxzKiQvZywgJycpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJlbW92ZUNsYXNzKGVsZW1lbnQsIGNsYXNzTmFtZSkge1xuICBpZiAoZWxlbWVudC5jbGFzc0xpc3QpIGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWUpO2Vsc2UgaWYgKHR5cGVvZiBlbGVtZW50LmNsYXNzTmFtZSA9PT0gJ3N0cmluZycpIGVsZW1lbnQuY2xhc3NOYW1lID0gcmVwbGFjZUNsYXNzTmFtZShlbGVtZW50LmNsYXNzTmFtZSwgY2xhc3NOYW1lKTtlbHNlIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdjbGFzcycsIHJlcGxhY2VDbGFzc05hbWUoZWxlbWVudC5jbGFzc05hbWUgJiYgZWxlbWVudC5jbGFzc05hbWUuYmFzZVZhbCB8fCAnJywgY2xhc3NOYW1lKSk7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX3Byb3BUeXBlcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcInByb3AtdHlwZXNcIikpO1xuXG52YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwicmVhY3RcIikpO1xuXG52YXIgX3JlYWN0RG9tID0gcmVxdWlyZShcInJlYWN0LWRvbVwiKTtcblxudmFyIF9UcmFuc2l0aW9uR3JvdXAgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL1RyYW5zaXRpb25Hcm91cFwiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSB7fTsgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpOyB2YXIga2V5LCBpOyBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykgeyBrZXkgPSBzb3VyY2VLZXlzW2ldOyBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7IHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzOyBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbi8qKlxuICogVGhlIGA8UmVwbGFjZVRyYW5zaXRpb24+YCBjb21wb25lbnQgaXMgYSBzcGVjaWFsaXplZCBgVHJhbnNpdGlvbmAgY29tcG9uZW50XG4gKiB0aGF0IGFuaW1hdGVzIGJldHdlZW4gdHdvIGNoaWxkcmVuLlxuICpcbiAqIGBgYGpzeFxuICogPFJlcGxhY2VUcmFuc2l0aW9uIGluPlxuICogICA8RmFkZT48ZGl2PkkgYXBwZWFyIGZpcnN0PC9kaXY+PC9GYWRlPlxuICogICA8RmFkZT48ZGl2PkkgcmVwbGFjZSB0aGUgYWJvdmU8L2Rpdj48L0ZhZGU+XG4gKiA8L1JlcGxhY2VUcmFuc2l0aW9uPlxuICogYGBgXG4gKi9cbnZhciBSZXBsYWNlVHJhbnNpdGlvbiA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSZXBsYWNlVHJhbnNpdGlvbiwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUmVwbGFjZVRyYW5zaXRpb24oKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIF9hcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgX2FyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChfYXJncykpIHx8IHRoaXM7XG5cbiAgICBfdGhpcy5oYW5kbGVFbnRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuMiksIF9rZXkyID0gMDsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgICAgICBhcmdzW19rZXkyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBfdGhpcy5oYW5kbGVMaWZlY3ljbGUoJ29uRW50ZXInLCAwLCBhcmdzKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlRW50ZXJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBmb3IgKHZhciBfbGVuMyA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjMpLCBfa2V5MyA9IDA7IF9rZXkzIDwgX2xlbjM7IF9rZXkzKyspIHtcbiAgICAgICAgYXJnc1tfa2V5M10gPSBhcmd1bWVudHNbX2tleTNdO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gX3RoaXMuaGFuZGxlTGlmZWN5Y2xlKCdvbkVudGVyaW5nJywgMCwgYXJncyk7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUVudGVyZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBmb3IgKHZhciBfbGVuNCA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjQpLCBfa2V5NCA9IDA7IF9rZXk0IDwgX2xlbjQ7IF9rZXk0KyspIHtcbiAgICAgICAgYXJnc1tfa2V5NF0gPSBhcmd1bWVudHNbX2tleTRdO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gX3RoaXMuaGFuZGxlTGlmZWN5Y2xlKCdvbkVudGVyZWQnLCAwLCBhcmdzKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlRXhpdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGZvciAodmFyIF9sZW41ID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuNSksIF9rZXk1ID0gMDsgX2tleTUgPCBfbGVuNTsgX2tleTUrKykge1xuICAgICAgICBhcmdzW19rZXk1XSA9IGFyZ3VtZW50c1tfa2V5NV07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBfdGhpcy5oYW5kbGVMaWZlY3ljbGUoJ29uRXhpdCcsIDEsIGFyZ3MpO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVFeGl0aW5nID0gZnVuY3Rpb24gKCkge1xuICAgICAgZm9yICh2YXIgX2xlbjYgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW42KSwgX2tleTYgPSAwOyBfa2V5NiA8IF9sZW42OyBfa2V5NisrKSB7XG4gICAgICAgIGFyZ3NbX2tleTZdID0gYXJndW1lbnRzW19rZXk2XTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIF90aGlzLmhhbmRsZUxpZmVjeWNsZSgnb25FeGl0aW5nJywgMSwgYXJncyk7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUV4aXRlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGZvciAodmFyIF9sZW43ID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuNyksIF9rZXk3ID0gMDsgX2tleTcgPCBfbGVuNzsgX2tleTcrKykge1xuICAgICAgICBhcmdzW19rZXk3XSA9IGFyZ3VtZW50c1tfa2V5N107XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBfdGhpcy5oYW5kbGVMaWZlY3ljbGUoJ29uRXhpdGVkJywgMSwgYXJncyk7XG4gICAgfTtcblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBSZXBsYWNlVHJhbnNpdGlvbi5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmhhbmRsZUxpZmVjeWNsZSA9IGZ1bmN0aW9uIGhhbmRsZUxpZmVjeWNsZShoYW5kbGVyLCBpZHgsIG9yaWdpbmFsQXJncykge1xuICAgIHZhciBfY2hpbGQkcHJvcHM7XG5cbiAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLnByb3BzLmNoaWxkcmVuO1xuXG4gICAgdmFyIGNoaWxkID0gX3JlYWN0LmRlZmF1bHQuQ2hpbGRyZW4udG9BcnJheShjaGlsZHJlbilbaWR4XTtcblxuICAgIGlmIChjaGlsZC5wcm9wc1toYW5kbGVyXSkgKF9jaGlsZCRwcm9wcyA9IGNoaWxkLnByb3BzKVtoYW5kbGVyXS5hcHBseShfY2hpbGQkcHJvcHMsIG9yaWdpbmFsQXJncyk7XG4gICAgaWYgKHRoaXMucHJvcHNbaGFuZGxlcl0pIHRoaXMucHJvcHNbaGFuZGxlcl0oKDAsIF9yZWFjdERvbS5maW5kRE9NTm9kZSkodGhpcykpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wcy5jaGlsZHJlbixcbiAgICAgICAgaW5Qcm9wID0gX3RoaXMkcHJvcHMuaW4sXG4gICAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3RoaXMkcHJvcHMsIFtcImNoaWxkcmVuXCIsIFwiaW5cIl0pO1xuXG4gICAgdmFyIF9SZWFjdCRDaGlsZHJlbiR0b0FyciA9IF9yZWFjdC5kZWZhdWx0LkNoaWxkcmVuLnRvQXJyYXkoY2hpbGRyZW4pLFxuICAgICAgICBmaXJzdCA9IF9SZWFjdCRDaGlsZHJlbiR0b0FyclswXSxcbiAgICAgICAgc2Vjb25kID0gX1JlYWN0JENoaWxkcmVuJHRvQXJyWzFdO1xuXG4gICAgZGVsZXRlIHByb3BzLm9uRW50ZXI7XG4gICAgZGVsZXRlIHByb3BzLm9uRW50ZXJpbmc7XG4gICAgZGVsZXRlIHByb3BzLm9uRW50ZXJlZDtcbiAgICBkZWxldGUgcHJvcHMub25FeGl0O1xuICAgIGRlbGV0ZSBwcm9wcy5vbkV4aXRpbmc7XG4gICAgZGVsZXRlIHByb3BzLm9uRXhpdGVkO1xuICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9UcmFuc2l0aW9uR3JvdXAuZGVmYXVsdCwgcHJvcHMsIGluUHJvcCA/IF9yZWFjdC5kZWZhdWx0LmNsb25lRWxlbWVudChmaXJzdCwge1xuICAgICAga2V5OiAnZmlyc3QnLFxuICAgICAgb25FbnRlcjogdGhpcy5oYW5kbGVFbnRlcixcbiAgICAgIG9uRW50ZXJpbmc6IHRoaXMuaGFuZGxlRW50ZXJpbmcsXG4gICAgICBvbkVudGVyZWQ6IHRoaXMuaGFuZGxlRW50ZXJlZFxuICAgIH0pIDogX3JlYWN0LmRlZmF1bHQuY2xvbmVFbGVtZW50KHNlY29uZCwge1xuICAgICAga2V5OiAnc2Vjb25kJyxcbiAgICAgIG9uRW50ZXI6IHRoaXMuaGFuZGxlRXhpdCxcbiAgICAgIG9uRW50ZXJpbmc6IHRoaXMuaGFuZGxlRXhpdGluZyxcbiAgICAgIG9uRW50ZXJlZDogdGhpcy5oYW5kbGVFeGl0ZWRcbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIFJlcGxhY2VUcmFuc2l0aW9uO1xufShfcmVhY3QuZGVmYXVsdC5Db21wb25lbnQpO1xuXG5SZXBsYWNlVHJhbnNpdGlvbi5wcm9wVHlwZXMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB7XG4gIGluOiBfcHJvcFR5cGVzLmRlZmF1bHQuYm9vbC5pc1JlcXVpcmVkLFxuICBjaGlsZHJlbjogZnVuY3Rpb24gY2hpbGRyZW4ocHJvcHMsIHByb3BOYW1lKSB7XG4gICAgaWYgKF9yZWFjdC5kZWZhdWx0LkNoaWxkcmVuLmNvdW50KHByb3BzW3Byb3BOYW1lXSkgIT09IDIpIHJldHVybiBuZXcgRXJyb3IoXCJcXFwiXCIgKyBwcm9wTmFtZSArIFwiXFxcIiBtdXN0IGJlIGV4YWN0bHkgdHdvIHRyYW5zaXRpb24gY29tcG9uZW50cy5cIik7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn0gOiB7fTtcbnZhciBfZGVmYXVsdCA9IFJlcGxhY2VUcmFuc2l0aW9uO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdOyIsIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5nZXRDaGlsZE1hcHBpbmcgPSBnZXRDaGlsZE1hcHBpbmc7XG5leHBvcnRzLm1lcmdlQ2hpbGRNYXBwaW5ncyA9IG1lcmdlQ2hpbGRNYXBwaW5ncztcbmV4cG9ydHMuZ2V0SW5pdGlhbENoaWxkTWFwcGluZyA9IGdldEluaXRpYWxDaGlsZE1hcHBpbmc7XG5leHBvcnRzLmdldE5leHRDaGlsZE1hcHBpbmcgPSBnZXROZXh0Q2hpbGRNYXBwaW5nO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuXG4vKipcbiAqIEdpdmVuIGB0aGlzLnByb3BzLmNoaWxkcmVuYCwgcmV0dXJuIGFuIG9iamVjdCBtYXBwaW5nIGtleSB0byBjaGlsZC5cbiAqXG4gKiBAcGFyYW0geyp9IGNoaWxkcmVuIGB0aGlzLnByb3BzLmNoaWxkcmVuYFxuICogQHJldHVybiB7b2JqZWN0fSBNYXBwaW5nIG9mIGtleSB0byBjaGlsZFxuICovXG5mdW5jdGlvbiBnZXRDaGlsZE1hcHBpbmcoY2hpbGRyZW4sIG1hcEZuKSB7XG4gIHZhciBtYXBwZXIgPSBmdW5jdGlvbiBtYXBwZXIoY2hpbGQpIHtcbiAgICByZXR1cm4gbWFwRm4gJiYgKDAsIF9yZWFjdC5pc1ZhbGlkRWxlbWVudCkoY2hpbGQpID8gbWFwRm4oY2hpbGQpIDogY2hpbGQ7XG4gIH07XG5cbiAgdmFyIHJlc3VsdCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIGlmIChjaGlsZHJlbikgX3JlYWN0LkNoaWxkcmVuLm1hcChjaGlsZHJlbiwgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gYztcbiAgfSkuZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAvLyBydW4gdGhlIG1hcCBmdW5jdGlvbiBoZXJlIGluc3RlYWQgc28gdGhhdCB0aGUga2V5IGlzIHRoZSBjb21wdXRlZCBvbmVcbiAgICByZXN1bHRbY2hpbGQua2V5XSA9IG1hcHBlcihjaGlsZCk7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBXaGVuIHlvdSdyZSBhZGRpbmcgb3IgcmVtb3ZpbmcgY2hpbGRyZW4gc29tZSBtYXkgYmUgYWRkZWQgb3IgcmVtb3ZlZCBpbiB0aGVcbiAqIHNhbWUgcmVuZGVyIHBhc3MuIFdlIHdhbnQgdG8gc2hvdyAqYm90aCogc2luY2Ugd2Ugd2FudCB0byBzaW11bHRhbmVvdXNseVxuICogYW5pbWF0ZSBlbGVtZW50cyBpbiBhbmQgb3V0LiBUaGlzIGZ1bmN0aW9uIHRha2VzIGEgcHJldmlvdXMgc2V0IG9mIGtleXNcbiAqIGFuZCBhIG5ldyBzZXQgb2Yga2V5cyBhbmQgbWVyZ2VzIHRoZW0gd2l0aCBpdHMgYmVzdCBndWVzcyBvZiB0aGUgY29ycmVjdFxuICogb3JkZXJpbmcuIEluIHRoZSBmdXR1cmUgd2UgbWF5IGV4cG9zZSBzb21lIG9mIHRoZSB1dGlsaXRpZXMgaW5cbiAqIFJlYWN0TXVsdGlDaGlsZCB0byBtYWtlIHRoaXMgZWFzeSwgYnV0IGZvciBub3cgUmVhY3QgaXRzZWxmIGRvZXMgbm90XG4gKiBkaXJlY3RseSBoYXZlIHRoaXMgY29uY2VwdCBvZiB0aGUgdW5pb24gb2YgcHJldkNoaWxkcmVuIGFuZCBuZXh0Q2hpbGRyZW5cbiAqIHNvIHdlIGltcGxlbWVudCBpdCBoZXJlLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBwcmV2IHByZXYgY2hpbGRyZW4gYXMgcmV0dXJuZWQgZnJvbVxuICogYFJlYWN0VHJhbnNpdGlvbkNoaWxkTWFwcGluZy5nZXRDaGlsZE1hcHBpbmcoKWAuXG4gKiBAcGFyYW0ge29iamVjdH0gbmV4dCBuZXh0IGNoaWxkcmVuIGFzIHJldHVybmVkIGZyb21cbiAqIGBSZWFjdFRyYW5zaXRpb25DaGlsZE1hcHBpbmcuZ2V0Q2hpbGRNYXBwaW5nKClgLlxuICogQHJldHVybiB7b2JqZWN0fSBhIGtleSBzZXQgdGhhdCBjb250YWlucyBhbGwga2V5cyBpbiBgcHJldmAgYW5kIGFsbCBrZXlzXG4gKiBpbiBgbmV4dGAgaW4gYSByZWFzb25hYmxlIG9yZGVyLlxuICovXG5cblxuZnVuY3Rpb24gbWVyZ2VDaGlsZE1hcHBpbmdzKHByZXYsIG5leHQpIHtcbiAgcHJldiA9IHByZXYgfHwge307XG4gIG5leHQgPSBuZXh0IHx8IHt9O1xuXG4gIGZ1bmN0aW9uIGdldFZhbHVlRm9yS2V5KGtleSkge1xuICAgIHJldHVybiBrZXkgaW4gbmV4dCA/IG5leHRba2V5XSA6IHByZXZba2V5XTtcbiAgfSAvLyBGb3IgZWFjaCBrZXkgb2YgYG5leHRgLCB0aGUgbGlzdCBvZiBrZXlzIHRvIGluc2VydCBiZWZvcmUgdGhhdCBrZXkgaW5cbiAgLy8gdGhlIGNvbWJpbmVkIGxpc3RcblxuXG4gIHZhciBuZXh0S2V5c1BlbmRpbmcgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICB2YXIgcGVuZGluZ0tleXMgPSBbXTtcblxuICBmb3IgKHZhciBwcmV2S2V5IGluIHByZXYpIHtcbiAgICBpZiAocHJldktleSBpbiBuZXh0KSB7XG4gICAgICBpZiAocGVuZGluZ0tleXMubGVuZ3RoKSB7XG4gICAgICAgIG5leHRLZXlzUGVuZGluZ1twcmV2S2V5XSA9IHBlbmRpbmdLZXlzO1xuICAgICAgICBwZW5kaW5nS2V5cyA9IFtdO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBwZW5kaW5nS2V5cy5wdXNoKHByZXZLZXkpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpO1xuICB2YXIgY2hpbGRNYXBwaW5nID0ge307XG5cbiAgZm9yICh2YXIgbmV4dEtleSBpbiBuZXh0KSB7XG4gICAgaWYgKG5leHRLZXlzUGVuZGluZ1tuZXh0S2V5XSkge1xuICAgICAgZm9yIChpID0gMDsgaSA8IG5leHRLZXlzUGVuZGluZ1tuZXh0S2V5XS5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgcGVuZGluZ05leHRLZXkgPSBuZXh0S2V5c1BlbmRpbmdbbmV4dEtleV1baV07XG4gICAgICAgIGNoaWxkTWFwcGluZ1tuZXh0S2V5c1BlbmRpbmdbbmV4dEtleV1baV1dID0gZ2V0VmFsdWVGb3JLZXkocGVuZGluZ05leHRLZXkpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNoaWxkTWFwcGluZ1tuZXh0S2V5XSA9IGdldFZhbHVlRm9yS2V5KG5leHRLZXkpO1xuICB9IC8vIEZpbmFsbHksIGFkZCB0aGUga2V5cyB3aGljaCBkaWRuJ3QgYXBwZWFyIGJlZm9yZSBhbnkga2V5IGluIGBuZXh0YFxuXG5cbiAgZm9yIChpID0gMDsgaSA8IHBlbmRpbmdLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgY2hpbGRNYXBwaW5nW3BlbmRpbmdLZXlzW2ldXSA9IGdldFZhbHVlRm9yS2V5KHBlbmRpbmdLZXlzW2ldKTtcbiAgfVxuXG4gIHJldHVybiBjaGlsZE1hcHBpbmc7XG59XG5cbmZ1bmN0aW9uIGdldFByb3AoY2hpbGQsIHByb3AsIHByb3BzKSB7XG4gIHJldHVybiBwcm9wc1twcm9wXSAhPSBudWxsID8gcHJvcHNbcHJvcF0gOiBjaGlsZC5wcm9wc1twcm9wXTtcbn1cblxuZnVuY3Rpb24gZ2V0SW5pdGlhbENoaWxkTWFwcGluZyhwcm9wcywgb25FeGl0ZWQpIHtcbiAgcmV0dXJuIGdldENoaWxkTWFwcGluZyhwcm9wcy5jaGlsZHJlbiwgZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgcmV0dXJuICgwLCBfcmVhY3QuY2xvbmVFbGVtZW50KShjaGlsZCwge1xuICAgICAgb25FeGl0ZWQ6IG9uRXhpdGVkLmJpbmQobnVsbCwgY2hpbGQpLFxuICAgICAgaW46IHRydWUsXG4gICAgICBhcHBlYXI6IGdldFByb3AoY2hpbGQsICdhcHBlYXInLCBwcm9wcyksXG4gICAgICBlbnRlcjogZ2V0UHJvcChjaGlsZCwgJ2VudGVyJywgcHJvcHMpLFxuICAgICAgZXhpdDogZ2V0UHJvcChjaGlsZCwgJ2V4aXQnLCBwcm9wcylcbiAgICB9KTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGdldE5leHRDaGlsZE1hcHBpbmcobmV4dFByb3BzLCBwcmV2Q2hpbGRNYXBwaW5nLCBvbkV4aXRlZCkge1xuICB2YXIgbmV4dENoaWxkTWFwcGluZyA9IGdldENoaWxkTWFwcGluZyhuZXh0UHJvcHMuY2hpbGRyZW4pO1xuICB2YXIgY2hpbGRyZW4gPSBtZXJnZUNoaWxkTWFwcGluZ3MocHJldkNoaWxkTWFwcGluZywgbmV4dENoaWxkTWFwcGluZyk7XG4gIE9iamVjdC5rZXlzKGNoaWxkcmVuKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgY2hpbGQgPSBjaGlsZHJlbltrZXldO1xuICAgIGlmICghKDAsIF9yZWFjdC5pc1ZhbGlkRWxlbWVudCkoY2hpbGQpKSByZXR1cm47XG4gICAgdmFyIGhhc1ByZXYgPSBrZXkgaW4gcHJldkNoaWxkTWFwcGluZztcbiAgICB2YXIgaGFzTmV4dCA9IGtleSBpbiBuZXh0Q2hpbGRNYXBwaW5nO1xuICAgIHZhciBwcmV2Q2hpbGQgPSBwcmV2Q2hpbGRNYXBwaW5nW2tleV07XG4gICAgdmFyIGlzTGVhdmluZyA9ICgwLCBfcmVhY3QuaXNWYWxpZEVsZW1lbnQpKHByZXZDaGlsZCkgJiYgIXByZXZDaGlsZC5wcm9wcy5pbjsgLy8gaXRlbSBpcyBuZXcgKGVudGVyaW5nKVxuXG4gICAgaWYgKGhhc05leHQgJiYgKCFoYXNQcmV2IHx8IGlzTGVhdmluZykpIHtcbiAgICAgIC8vIGNvbnNvbGUubG9nKCdlbnRlcmluZycsIGtleSlcbiAgICAgIGNoaWxkcmVuW2tleV0gPSAoMCwgX3JlYWN0LmNsb25lRWxlbWVudCkoY2hpbGQsIHtcbiAgICAgICAgb25FeGl0ZWQ6IG9uRXhpdGVkLmJpbmQobnVsbCwgY2hpbGQpLFxuICAgICAgICBpbjogdHJ1ZSxcbiAgICAgICAgZXhpdDogZ2V0UHJvcChjaGlsZCwgJ2V4aXQnLCBuZXh0UHJvcHMpLFxuICAgICAgICBlbnRlcjogZ2V0UHJvcChjaGlsZCwgJ2VudGVyJywgbmV4dFByb3BzKVxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmICghaGFzTmV4dCAmJiBoYXNQcmV2ICYmICFpc0xlYXZpbmcpIHtcbiAgICAgIC8vIGl0ZW0gaXMgb2xkIChleGl0aW5nKVxuICAgICAgLy8gY29uc29sZS5sb2coJ2xlYXZpbmcnLCBrZXkpXG4gICAgICBjaGlsZHJlbltrZXldID0gKDAsIF9yZWFjdC5jbG9uZUVsZW1lbnQpKGNoaWxkLCB7XG4gICAgICAgIGluOiBmYWxzZVxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChoYXNOZXh0ICYmIGhhc1ByZXYgJiYgKDAsIF9yZWFjdC5pc1ZhbGlkRWxlbWVudCkocHJldkNoaWxkKSkge1xuICAgICAgLy8gaXRlbSBoYXNuJ3QgY2hhbmdlZCB0cmFuc2l0aW9uIHN0YXRlc1xuICAgICAgLy8gY29weSBvdmVyIHRoZSBsYXN0IHRyYW5zaXRpb24gcHJvcHM7XG4gICAgICAvLyBjb25zb2xlLmxvZygndW5jaGFuZ2VkJywga2V5KVxuICAgICAgY2hpbGRyZW5ba2V5XSA9ICgwLCBfcmVhY3QuY2xvbmVFbGVtZW50KShjaGlsZCwge1xuICAgICAgICBvbkV4aXRlZDogb25FeGl0ZWQuYmluZChudWxsLCBjaGlsZCksXG4gICAgICAgIGluOiBwcmV2Q2hpbGQucHJvcHMuaW4sXG4gICAgICAgIGV4aXQ6IGdldFByb3AoY2hpbGQsICdleGl0JywgbmV4dFByb3BzKSxcbiAgICAgICAgZW50ZXI6IGdldFByb3AoY2hpbGQsICdlbnRlcicsIG5leHRQcm9wcylcbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBjaGlsZHJlbjtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTtcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gIHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcblxuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn0iLCJmdW5jdGlvbiBpc0Fic29sdXRlKHBhdGhuYW1lKSB7XG4gIHJldHVybiBwYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJztcbn1cblxuLy8gQWJvdXQgMS41eCBmYXN0ZXIgdGhhbiB0aGUgdHdvLWFyZyB2ZXJzaW9uIG9mIEFycmF5I3NwbGljZSgpXG5mdW5jdGlvbiBzcGxpY2VPbmUobGlzdCwgaW5kZXgpIHtcbiAgZm9yICh2YXIgaSA9IGluZGV4LCBrID0gaSArIDEsIG4gPSBsaXN0Lmxlbmd0aDsgayA8IG47IGkgKz0gMSwgayArPSAxKSB7XG4gICAgbGlzdFtpXSA9IGxpc3Rba107XG4gIH1cblxuICBsaXN0LnBvcCgpO1xufVxuXG4vLyBUaGlzIGltcGxlbWVudGF0aW9uIGlzIGJhc2VkIGhlYXZpbHkgb24gbm9kZSdzIHVybC5wYXJzZVxuZnVuY3Rpb24gcmVzb2x2ZVBhdGhuYW1lKHRvLCBmcm9tKSB7XG4gIGlmIChmcm9tID09PSB1bmRlZmluZWQpIGZyb20gPSAnJztcblxuICB2YXIgdG9QYXJ0cyA9ICh0byAmJiB0by5zcGxpdCgnLycpKSB8fCBbXTtcbiAgdmFyIGZyb21QYXJ0cyA9IChmcm9tICYmIGZyb20uc3BsaXQoJy8nKSkgfHwgW107XG5cbiAgdmFyIGlzVG9BYnMgPSB0byAmJiBpc0Fic29sdXRlKHRvKTtcbiAgdmFyIGlzRnJvbUFicyA9IGZyb20gJiYgaXNBYnNvbHV0ZShmcm9tKTtcbiAgdmFyIG11c3RFbmRBYnMgPSBpc1RvQWJzIHx8IGlzRnJvbUFicztcblxuICBpZiAodG8gJiYgaXNBYnNvbHV0ZSh0bykpIHtcbiAgICAvLyB0byBpcyBhYnNvbHV0ZVxuICAgIGZyb21QYXJ0cyA9IHRvUGFydHM7XG4gIH0gZWxzZSBpZiAodG9QYXJ0cy5sZW5ndGgpIHtcbiAgICAvLyB0byBpcyByZWxhdGl2ZSwgZHJvcCB0aGUgZmlsZW5hbWVcbiAgICBmcm9tUGFydHMucG9wKCk7XG4gICAgZnJvbVBhcnRzID0gZnJvbVBhcnRzLmNvbmNhdCh0b1BhcnRzKTtcbiAgfVxuXG4gIGlmICghZnJvbVBhcnRzLmxlbmd0aCkgcmV0dXJuICcvJztcblxuICB2YXIgaGFzVHJhaWxpbmdTbGFzaDtcbiAgaWYgKGZyb21QYXJ0cy5sZW5ndGgpIHtcbiAgICB2YXIgbGFzdCA9IGZyb21QYXJ0c1tmcm9tUGFydHMubGVuZ3RoIC0gMV07XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGxhc3QgPT09ICcuJyB8fCBsYXN0ID09PSAnLi4nIHx8IGxhc3QgPT09ICcnO1xuICB9IGVsc2Uge1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBmYWxzZTtcbiAgfVxuXG4gIHZhciB1cCA9IDA7XG4gIGZvciAodmFyIGkgPSBmcm9tUGFydHMubGVuZ3RoOyBpID49IDA7IGktLSkge1xuICAgIHZhciBwYXJ0ID0gZnJvbVBhcnRzW2ldO1xuXG4gICAgaWYgKHBhcnQgPT09ICcuJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgfSBlbHNlIGlmIChwYXJ0ID09PSAnLi4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwKys7XG4gICAgfSBlbHNlIGlmICh1cCkge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cC0tO1xuICAgIH1cbiAgfVxuXG4gIGlmICghbXVzdEVuZEFicykgZm9yICg7IHVwLS07IHVwKSBmcm9tUGFydHMudW5zaGlmdCgnLi4nKTtcblxuICBpZiAoXG4gICAgbXVzdEVuZEFicyAmJlxuICAgIGZyb21QYXJ0c1swXSAhPT0gJycgJiZcbiAgICAoIWZyb21QYXJ0c1swXSB8fCAhaXNBYnNvbHV0ZShmcm9tUGFydHNbMF0pKVxuICApXG4gICAgZnJvbVBhcnRzLnVuc2hpZnQoJycpO1xuXG4gIHZhciByZXN1bHQgPSBmcm9tUGFydHMuam9pbignLycpO1xuXG4gIGlmIChoYXNUcmFpbGluZ1NsYXNoICYmIHJlc3VsdC5zdWJzdHIoLTEpICE9PSAnLycpIHJlc3VsdCArPSAnLyc7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZVBhdGhuYW1lO1xuIiwidmFyIGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbic7XG52YXIgcHJlZml4ID0gJ0ludmFyaWFudCBmYWlsZWQnO1xuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICBpZiAoY29uZGl0aW9uKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGlzUHJvZHVjdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXggKyBcIjogXCIgKyAobWVzc2FnZSB8fCAnJykpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGludmFyaWFudDtcbiIsImltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCByZXNvbHZlUGF0aG5hbWUgZnJvbSAncmVzb2x2ZS1wYXRobmFtZSc7XG5pbXBvcnQgdmFsdWVFcXVhbCBmcm9tICd2YWx1ZS1lcXVhbCc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbmZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aCA6ICcvJyArIHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBwYXRoLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihwcmVmaXgudG9Mb3dlckNhc2UoKSkgPT09IDAgJiYgJy8/IycuaW5kZXhPZihwYXRoLmNoYXJBdChwcmVmaXgubGVuZ3RoKSkgIT09IC0xO1xufVxuZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkgPyBwYXRoLnN1YnN0cihwcmVmaXgubGVuZ3RoKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcFRyYWlsaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQocGF0aC5sZW5ndGggLSAxKSA9PT0gJy8nID8gcGF0aC5zbGljZSgwLCAtMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gcGFyc2VQYXRoKHBhdGgpIHtcbiAgdmFyIHBhdGhuYW1lID0gcGF0aCB8fCAnLyc7XG4gIHZhciBzZWFyY2ggPSAnJztcbiAgdmFyIGhhc2ggPSAnJztcbiAgdmFyIGhhc2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJyMnKTtcblxuICBpZiAoaGFzaEluZGV4ICE9PSAtMSkge1xuICAgIGhhc2ggPSBwYXRobmFtZS5zdWJzdHIoaGFzaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBoYXNoSW5kZXgpO1xuICB9XG5cbiAgdmFyIHNlYXJjaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignPycpO1xuXG4gIGlmIChzZWFyY2hJbmRleCAhPT0gLTEpIHtcbiAgICBzZWFyY2ggPSBwYXRobmFtZS5zdWJzdHIoc2VhcmNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIHNlYXJjaEluZGV4KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgIHNlYXJjaDogc2VhcmNoID09PSAnPycgPyAnJyA6IHNlYXJjaCxcbiAgICBoYXNoOiBoYXNoID09PSAnIycgPyAnJyA6IGhhc2hcbiAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVBhdGgobG9jYXRpb24pIHtcbiAgdmFyIHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2gsXG4gICAgICBoYXNoID0gbG9jYXRpb24uaGFzaDtcbiAgdmFyIHBhdGggPSBwYXRobmFtZSB8fCAnLyc7XG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoICE9PSAnPycpIHBhdGggKz0gc2VhcmNoLmNoYXJBdCgwKSA9PT0gJz8nID8gc2VhcmNoIDogXCI/XCIgKyBzZWFyY2g7XG4gIGlmIChoYXNoICYmIGhhc2ggIT09ICcjJykgcGF0aCArPSBoYXNoLmNoYXJBdCgwKSA9PT0gJyMnID8gaGFzaCA6IFwiI1wiICsgaGFzaDtcbiAgcmV0dXJuIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXksIGN1cnJlbnRMb2NhdGlvbikge1xuICB2YXIgbG9jYXRpb247XG5cbiAgaWYgKHR5cGVvZiBwYXRoID09PSAnc3RyaW5nJykge1xuICAgIC8vIFR3by1hcmcgZm9ybTogcHVzaChwYXRoLCBzdGF0ZSlcbiAgICBsb2NhdGlvbiA9IHBhcnNlUGF0aChwYXRoKTtcbiAgICBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9IGVsc2Uge1xuICAgIC8vIE9uZS1hcmcgZm9ybTogcHVzaChsb2NhdGlvbilcbiAgICBsb2NhdGlvbiA9IF9leHRlbmRzKHt9LCBwYXRoKTtcbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24ucGF0aG5hbWUgPSAnJztcblxuICAgIGlmIChsb2NhdGlvbi5zZWFyY2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5zZWFyY2guY2hhckF0KDApICE9PSAnPycpIGxvY2F0aW9uLnNlYXJjaCA9ICc/JyArIGxvY2F0aW9uLnNlYXJjaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uc2VhcmNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKGxvY2F0aW9uLmhhc2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5oYXNoLmNoYXJBdCgwKSAhPT0gJyMnKSBsb2NhdGlvbi5oYXNoID0gJyMnICsgbG9jYXRpb24uaGFzaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uaGFzaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChzdGF0ZSAhPT0gdW5kZWZpbmVkICYmIGxvY2F0aW9uLnN0YXRlID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH1cblxuICB0cnkge1xuICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gZGVjb2RlVVJJKGxvY2F0aW9uLnBhdGhuYW1lKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgVVJJRXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBVUklFcnJvcignUGF0aG5hbWUgXCInICsgbG9jYXRpb24ucGF0aG5hbWUgKyAnXCIgY291bGQgbm90IGJlIGRlY29kZWQuICcgKyAnVGhpcyBpcyBsaWtlbHkgY2F1c2VkIGJ5IGFuIGludmFsaWQgcGVyY2VudC1lbmNvZGluZy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gIH1cblxuICBpZiAoa2V5KSBsb2NhdGlvbi5rZXkgPSBrZXk7XG5cbiAgaWYgKGN1cnJlbnRMb2NhdGlvbikge1xuICAgIC8vIFJlc29sdmUgaW5jb21wbGV0ZS9yZWxhdGl2ZSBwYXRobmFtZSByZWxhdGl2ZSB0byBjdXJyZW50IGxvY2F0aW9uLlxuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gY3VycmVudExvY2F0aW9uLnBhdGhuYW1lO1xuICAgIH0gZWxzZSBpZiAobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApICE9PSAnLycpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gcmVzb2x2ZVBhdGhuYW1lKGxvY2F0aW9uLnBhdGhuYW1lLCBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBXaGVuIHRoZXJlIGlzIG5vIHByaW9yIGxvY2F0aW9uIGFuZCBwYXRobmFtZSBpcyBlbXB0eSwgc2V0IGl0IHRvIC9cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9ICcvJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbG9jYXRpb247XG59XG5mdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbChhLCBiKSB7XG4gIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaCAmJiBhLmtleSA9PT0gYi5rZXkgJiYgdmFsdWVFcXVhbChhLnN0YXRlLCBiLnN0YXRlKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKSB7XG4gIHZhciBwcm9tcHQgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIHNldFByb21wdChuZXh0UHJvbXB0KSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwcm9tcHQgPT0gbnVsbCwgJ0EgaGlzdG9yeSBzdXBwb3J0cyBvbmx5IG9uZSBwcm9tcHQgYXQgYSB0aW1lJykgOiB2b2lkIDA7XG4gICAgcHJvbXB0ID0gbmV4dFByb21wdDtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHByb21wdCA9PT0gbmV4dFByb21wdCkgcHJvbXB0ID0gbnVsbDtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBjYWxsYmFjaykge1xuICAgIC8vIFRPRE86IElmIGFub3RoZXIgdHJhbnNpdGlvbiBzdGFydHMgd2hpbGUgd2UncmUgc3RpbGwgY29uZmlybWluZ1xuICAgIC8vIHRoZSBwcmV2aW91cyBvbmUsIHdlIG1heSBlbmQgdXAgaW4gYSB3ZWlyZCBzdGF0ZS4gRmlndXJlIG91dCB0aGVcbiAgICAvLyBiZXN0IHdheSB0byBoYW5kbGUgdGhpcy5cbiAgICBpZiAocHJvbXB0ICE9IG51bGwpIHtcbiAgICAgIHZhciByZXN1bHQgPSB0eXBlb2YgcHJvbXB0ID09PSAnZnVuY3Rpb24nID8gcHJvbXB0KGxvY2F0aW9uLCBhY3Rpb24pIDogcHJvbXB0O1xuXG4gICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBnZXRVc2VyQ29uZmlybWF0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbihyZXN1bHQsIGNhbGxiYWNrKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnQSBoaXN0b3J5IG5lZWRzIGEgZ2V0VXNlckNvbmZpcm1hdGlvbiBmdW5jdGlvbiBpbiBvcmRlciB0byB1c2UgYSBwcm9tcHQgbWVzc2FnZScpIDogdm9pZCAwO1xuICAgICAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBSZXR1cm4gZmFsc2UgZnJvbSBhIHRyYW5zaXRpb24gaG9vayB0byBjYW5jZWwgdGhlIHRyYW5zaXRpb24uXG4gICAgICAgIGNhbGxiYWNrKHJlc3VsdCAhPT0gZmFsc2UpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgbGlzdGVuZXJzID0gW107XG5cbiAgZnVuY3Rpb24gYXBwZW5kTGlzdGVuZXIoZm4pIHtcbiAgICB2YXIgaXNBY3RpdmUgPSB0cnVlO1xuXG4gICAgZnVuY3Rpb24gbGlzdGVuZXIoKSB7XG4gICAgICBpZiAoaXNBY3RpdmUpIGZuLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlzQWN0aXZlID0gZmFsc2U7XG4gICAgICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtICE9PSBsaXN0ZW5lcjtcbiAgICAgIH0pO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBub3RpZnlMaXN0ZW5lcnMoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIGxpc3RlbmVyLmFwcGx5KHZvaWQgMCwgYXJncyk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHNldFByb21wdDogc2V0UHJvbXB0LFxuICAgIGNvbmZpcm1UcmFuc2l0aW9uVG86IGNvbmZpcm1UcmFuc2l0aW9uVG8sXG4gICAgYXBwZW5kTGlzdGVuZXI6IGFwcGVuZExpc3RlbmVyLFxuICAgIG5vdGlmeUxpc3RlbmVyczogbm90aWZ5TGlzdGVuZXJzXG4gIH07XG59XG5cbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuZnVuY3Rpb24gZ2V0Q29uZmlybWF0aW9uKG1lc3NhZ2UsIGNhbGxiYWNrKSB7XG4gIGNhbGxiYWNrKHdpbmRvdy5jb25maXJtKG1lc3NhZ2UpKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1hbGVydFxufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGlzIHN1cHBvcnRlZC4gVGFrZW4gZnJvbSBNb2Rlcm5penIuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvZmVhdHVyZS1kZXRlY3RzL2hpc3RvcnkuanNcbiAqIGNoYW5nZWQgdG8gYXZvaWQgZmFsc2UgbmVnYXRpdmVzIGZvciBXaW5kb3dzIFBob25lczogaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmVhY3Qtcm91dGVyL2lzc3Vlcy81ODZcbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0hpc3RvcnkoKSB7XG4gIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xuICBpZiAoKHVhLmluZGV4T2YoJ0FuZHJvaWQgMi4nKSAhPT0gLTEgfHwgdWEuaW5kZXhPZignQW5kcm9pZCA0LjAnKSAhPT0gLTEpICYmIHVhLmluZGV4T2YoJ01vYmlsZSBTYWZhcmknKSAhPT0gLTEgJiYgdWEuaW5kZXhPZignQ2hyb21lJykgPT09IC0xICYmIHVhLmluZGV4T2YoJ1dpbmRvd3MgUGhvbmUnKSA9PT0gLTEpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5ICYmICdwdXNoU3RhdGUnIGluIHdpbmRvdy5oaXN0b3J5O1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYnJvd3NlciBmaXJlcyBwb3BzdGF0ZSBvbiBoYXNoIGNoYW5nZS5cbiAqIElFMTAgYW5kIElFMTEgZG8gbm90LlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdUcmlkZW50JykgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIGZhbHNlIGlmIHVzaW5nIGdvKG4pIHdpdGggaGFzaCBoaXN0b3J5IGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdGaXJlZm94JykgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYSBnaXZlbiBwb3BzdGF0ZSBldmVudCBpcyBhbiBleHRyYW5lb3VzIFdlYktpdCBldmVudC5cbiAqIEFjY291bnRzIGZvciB0aGUgZmFjdCB0aGF0IENocm9tZSBvbiBpT1MgZmlyZXMgcmVhbCBwb3BzdGF0ZSBldmVudHNcbiAqIGNvbnRhaW5pbmcgdW5kZWZpbmVkIHN0YXRlIHdoZW4gcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uLlxuICovXG5cbmZ1bmN0aW9uIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuIGV2ZW50LnN0YXRlID09PSB1bmRlZmluZWQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdDcmlPUycpID09PSAtMTtcbn1cblxudmFyIFBvcFN0YXRlRXZlbnQgPSAncG9wc3RhdGUnO1xudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcblxuZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlKCkge1xuICB0cnkge1xuICAgIHJldHVybiB3aW5kb3cuaGlzdG9yeS5zdGF0ZSB8fCB7fTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIElFIDExIHNvbWV0aW1lcyB0aHJvd3Mgd2hlbiBhY2Nlc3Npbmcgd2luZG93Lmhpc3Rvcnkuc3RhdGVcbiAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL1JlYWN0VHJhaW5pbmcvaGlzdG9yeS9wdWxsLzI4OVxuICAgIHJldHVybiB7fTtcbiAgfVxufVxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCB1c2VzIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpbmNsdWRpbmdcbiAqIHB1c2hTdGF0ZSwgcmVwbGFjZVN0YXRlLCBhbmQgdGhlIHBvcHN0YXRlIGV2ZW50LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlQnJvd3Nlckhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0Jyb3dzZXIgaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhblVzZUhpc3RvcnkgPSBzdXBwb3J0c0hpc3RvcnkoKTtcbiAgdmFyIG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyID0gIXN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKTtcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgX3Byb3BzJGZvcmNlUmVmcmVzaCA9IF9wcm9wcy5mb3JjZVJlZnJlc2gsXG4gICAgICBmb3JjZVJlZnJlc2ggPSBfcHJvcHMkZm9yY2VSZWZyZXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9wcm9wcyRmb3JjZVJlZnJlc2gsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oaGlzdG9yeVN0YXRlKSB7XG4gICAgdmFyIF9yZWYgPSBoaXN0b3J5U3RhdGUgfHwge30sXG4gICAgICAgIGtleSA9IF9yZWYua2V5LFxuICAgICAgICBzdGF0ZSA9IF9yZWYuc3RhdGU7XG5cbiAgICB2YXIgX3dpbmRvdyRsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbixcbiAgICAgICAgcGF0aG5hbWUgPSBfd2luZG93JGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgICBzZWFyY2ggPSBfd2luZG93JGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgICAgaGFzaCA9IF93aW5kb3ckbG9jYXRpb24uaGFzaDtcbiAgICB2YXIgcGF0aCA9IHBhdGhuYW1lICsgc2VhcmNoICsgaGFzaDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3BTdGF0ZShldmVudCkge1xuICAgIC8vIElnbm9yZSBleHRyYW5lb3VzIHBvcHN0YXRlIGV2ZW50cyBpbiBXZWJLaXQuXG4gICAgaWYgKGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpKSByZXR1cm47XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGV2ZW50LnN0YXRlKSk7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSkpO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIGtleXMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3Iga2V5cyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxLZXlzLmluZGV4T2YodG9Mb2NhdGlvbi5rZXkpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbEtleXMuaW5kZXhPZihmcm9tTG9jYXRpb24ua2V5KTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSk7XG4gIHZhciBhbGxLZXlzID0gW2luaXRpYWxMb2NhdGlvbi5rZXldOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiBiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICB2YXIgbmV4dEtleXMgPSBhbGxLZXlzLnNsaWNlKDAsIHByZXZJbmRleCArIDEpO1xuICAgICAgICAgIG5leHRLZXlzLnB1c2gobG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBhbGxLZXlzID0gbmV4dEtleXM7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpIDogdm9pZCAwO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHN0YXRlOiBzdGF0ZVxuICAgICAgICB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbEtleXNbcHJldkluZGV4XSA9IGxvY2F0aW9uLmtleTtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxICYmIGRlbHRhID09PSAxKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG52YXIgSGFzaENoYW5nZUV2ZW50JDEgPSAnaGFzaGNoYW5nZSc7XG52YXIgSGFzaFBhdGhDb2RlcnMgPSB7XG4gIGhhc2hiYW5nOiB7XG4gICAgZW5jb2RlUGF0aDogZnVuY3Rpb24gZW5jb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGggOiAnIS8nICsgc3RyaXBMZWFkaW5nU2xhc2gocGF0aCk7XG4gICAgfSxcbiAgICBkZWNvZGVQYXRoOiBmdW5jdGlvbiBkZWNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xuICAgIH1cbiAgfSxcbiAgbm9zbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IHN0cmlwTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9LFxuICBzbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfVxufTtcblxuZnVuY3Rpb24gc3RyaXBIYXNoKHVybCkge1xuICB2YXIgaGFzaEluZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyB1cmwgOiB1cmwuc2xpY2UoMCwgaGFzaEluZGV4KTtcbn1cblxuZnVuY3Rpb24gZ2V0SGFzaFBhdGgoKSB7XG4gIC8vIFdlIGNhbid0IHVzZSB3aW5kb3cubG9jYXRpb24uaGFzaCBoZXJlIGJlY2F1c2UgaXQncyBub3RcbiAgLy8gY29uc2lzdGVudCBhY3Jvc3MgYnJvd3NlcnMgLSBGaXJlZm94IHdpbGwgcHJlLWRlY29kZSBpdCFcbiAgdmFyIGhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgdmFyIGhhc2hJbmRleCA9IGhyZWYuaW5kZXhPZignIycpO1xuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/ICcnIDogaHJlZi5zdWJzdHJpbmcoaGFzaEluZGV4ICsgMSk7XG59XG5cbmZ1bmN0aW9uIHB1c2hIYXNoUGF0aChwYXRoKSB7XG4gIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gcGF0aDtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZUhhc2hQYXRoKHBhdGgpIHtcbiAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2Uoc3RyaXBIYXNoKHdpbmRvdy5sb2NhdGlvbi5ocmVmKSArICcjJyArIHBhdGgpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVIYXNoSGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnSGFzaCBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuR29XaXRob3V0UmVsb2FkID0gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKTtcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB2b2lkIDAgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMkaGFzaFR5cGUgPSBfcHJvcHMuaGFzaFR5cGUsXG4gICAgICBoYXNoVHlwZSA9IF9wcm9wcyRoYXNoVHlwZSA9PT0gdm9pZCAwID8gJ3NsYXNoJyA6IF9wcm9wcyRoYXNoVHlwZTtcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcbiAgdmFyIF9IYXNoUGF0aENvZGVycyRoYXNoVCA9IEhhc2hQYXRoQ29kZXJzW2hhc2hUeXBlXSxcbiAgICAgIGVuY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZW5jb2RlUGF0aCxcbiAgICAgIGRlY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZGVjb2RlUGF0aDtcblxuICBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbigpIHtcbiAgICB2YXIgcGF0aCA9IGRlY29kZVBhdGgoZ2V0SGFzaFBhdGgoKSk7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKSA6IHZvaWQgMDtcbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCk7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gIHZhciBpZ25vcmVQYXRoID0gbnVsbDtcblxuICBmdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbCQkMShhLCBiKSB7XG4gICAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcblxuICAgIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkge1xuICAgICAgLy8gRW5zdXJlIHdlIGFsd2F5cyBoYXZlIGEgcHJvcGVybHktZW5jb2RlZCBoYXNoLlxuICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGxvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgICAgIHZhciBwcmV2TG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuICAgICAgaWYgKCFmb3JjZU5leHRQb3AgJiYgbG9jYXRpb25zQXJlRXF1YWwkJDEocHJldkxvY2F0aW9uLCBsb2NhdGlvbikpIHJldHVybjsgLy8gQSBoYXNoY2hhbmdlIGRvZXNuJ3QgYWx3YXlzID09IGxvY2F0aW9uIGNoYW5nZS5cblxuICAgICAgaWYgKGlnbm9yZVBhdGggPT09IGNyZWF0ZVBhdGgobG9jYXRpb24pKSByZXR1cm47IC8vIElnbm9yZSB0aGlzIGNoYW5nZTsgd2UgYWxyZWFkeSBzZXRTdGF0ZSBpbiBwdXNoL3JlcGxhY2UuXG5cbiAgICAgIGlnbm9yZVBhdGggPSBudWxsO1xuICAgICAgaGFuZGxlUG9wKGxvY2F0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBwYXRocyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBwYXRocyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKHRvTG9jYXRpb24pKTtcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuICAgIHZhciBmcm9tSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGZyb21Mb2NhdGlvbikpO1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9IC8vIEVuc3VyZSB0aGUgaGFzaCBpcyBlbmNvZGVkIHByb3Blcmx5IGJlZm9yZSBkb2luZyBhbnl0aGluZyBlbHNlLlxuXG5cbiAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICB2YXIgYWxsUGF0aHMgPSBbY3JlYXRlUGF0aChpbml0aWFsTG9jYXRpb24pXTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICB2YXIgYmFzZVRhZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Jhc2UnKTtcbiAgICB2YXIgaHJlZiA9ICcnO1xuXG4gICAgaWYgKGJhc2VUYWcgJiYgYmFzZVRhZy5nZXRBdHRyaWJ1dGUoJ2hyZWYnKSkge1xuICAgICAgaHJlZiA9IHN0cmlwSGFzaCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG4gICAgfVxuXG4gICAgcmV0dXJuIGhyZWYgKyAnIycgKyBlbmNvZGVQYXRoKGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbikpO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFBVU0gsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHB1c2hIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgICAgdmFyIG5leHRQYXRocyA9IGFsbFBhdGhzLnNsaWNlKDAsIHByZXZJbmRleCArIDEpO1xuICAgICAgICBuZXh0UGF0aHMucHVzaChwYXRoKTtcbiAgICAgICAgYWxsUGF0aHMgPSBuZXh0UGF0aHM7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBQVVNIIHRoZSBzYW1lIHBhdGg7IGEgbmV3IGVudHJ5IHdpbGwgbm90IGJlIGFkZGVkIHRvIHRoZSBoaXN0b3J5IHN0YWNrJykgOiB2b2lkIDA7XG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUkVQTEFDRSwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsUGF0aHNbcHJldkluZGV4XSA9IHBhdGg7XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoY2FuR29XaXRob3V0UmVsb2FkLCAnSGFzaCBoaXN0b3J5IGdvKG4pIGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQgaW4gdGhpcyBicm93c2VyJykgOiB2b2lkIDA7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmZ1bmN0aW9uIGNsYW1wKG4sIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpIHtcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgc3RvcmVzIGxvY2F0aW9ucyBpbiBtZW1vcnkuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVNZW1vcnlIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIF9wcm9wcyRpbml0aWFsRW50cmllcyA9IF9wcm9wcy5pbml0aWFsRW50cmllcyxcbiAgICAgIGluaXRpYWxFbnRyaWVzID0gX3Byb3BzJGluaXRpYWxFbnRyaWVzID09PSB2b2lkIDAgPyBbJy8nXSA6IF9wcm9wcyRpbml0aWFsRW50cmllcyxcbiAgICAgIF9wcm9wcyRpbml0aWFsSW5kZXggPSBfcHJvcHMuaW5pdGlhbEluZGV4LFxuICAgICAgaW5pdGlhbEluZGV4ID0gX3Byb3BzJGluaXRpYWxJbmRleCA9PT0gdm9pZCAwID8gMCA6IF9wcm9wcyRpbml0aWFsSW5kZXgsXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgaW5kZXggPSBjbGFtcChpbml0aWFsSW5kZXgsIDAsIGluaXRpYWxFbnRyaWVzLmxlbmd0aCAtIDEpO1xuICB2YXIgZW50cmllcyA9IGluaXRpYWxFbnRyaWVzLm1hcChmdW5jdGlvbiAoZW50cnkpIHtcbiAgICByZXR1cm4gdHlwZW9mIGVudHJ5ID09PSAnc3RyaW5nJyA/IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGNyZWF0ZUtleSgpKSA6IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGVudHJ5LmtleSB8fCBjcmVhdGVLZXkoKSk7XG4gIH0pOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBjcmVhdGVQYXRoO1xuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcHJldkluZGV4ID0gaGlzdG9yeS5pbmRleDtcbiAgICAgIHZhciBuZXh0SW5kZXggPSBwcmV2SW5kZXggKyAxO1xuICAgICAgdmFyIG5leHRFbnRyaWVzID0gaGlzdG9yeS5lbnRyaWVzLnNsaWNlKDApO1xuXG4gICAgICBpZiAobmV4dEVudHJpZXMubGVuZ3RoID4gbmV4dEluZGV4KSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dEVudHJpZXMucHVzaChsb2NhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIGhpc3RvcnkuZW50cmllc1toaXN0b3J5LmluZGV4XSA9IGxvY2F0aW9uO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gY2xhbXAoaGlzdG9yeS5pbmRleCArIG4sIDAsIGhpc3RvcnkuZW50cmllcy5sZW5ndGggLSAxKTtcbiAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgdmFyIGxvY2F0aW9uID0gaGlzdG9yeS5lbnRyaWVzW25leHRJbmRleF07XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmIChvaykge1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICAgIGluZGV4OiBuZXh0SW5kZXhcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBNaW1pYyB0aGUgYmVoYXZpb3Igb2YgRE9NIGhpc3RvcmllcyBieVxuICAgICAgICAvLyBjYXVzaW5nIGEgcmVuZGVyIGFmdGVyIGEgY2FuY2VsbGVkIFBPUC5cbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICBmdW5jdGlvbiBjYW5HbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGhpc3RvcnkuaW5kZXggKyBuO1xuICAgIHJldHVybiBuZXh0SW5kZXggPj0gMCAmJiBuZXh0SW5kZXggPCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICB9XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBlbnRyaWVzLmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBlbnRyaWVzW2luZGV4XSxcbiAgICBpbmRleDogaW5kZXgsXG4gICAgZW50cmllczogZW50cmllcyxcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgY2FuR286IGNhbkdvLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIHBhcnNlUGF0aCwgY3JlYXRlUGF0aCB9O1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBndWQgZnJvbSAnZ3VkJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5cbnZhciBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgPSAxMDczNzQxODIzO1xuXG5mdW5jdGlvbiBvYmplY3RJcyh4LCB5KSB7XG4gIGlmICh4ID09PSB5KSB7XG4gICAgcmV0dXJuIHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlRXZlbnRFbWl0dGVyKHZhbHVlKSB7XG4gIHZhciBoYW5kbGVycyA9IFtdO1xuICByZXR1cm4ge1xuICAgIG9uOiBmdW5jdGlvbiBvbihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycy5wdXNoKGhhbmRsZXIpO1xuICAgIH0sXG4gICAgb2ZmOiBmdW5jdGlvbiBvZmYoaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMgPSBoYW5kbGVycy5maWx0ZXIoZnVuY3Rpb24gKGgpIHtcbiAgICAgICAgcmV0dXJuIGggIT09IGhhbmRsZXI7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbiBzZXQobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICB2YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgaGFuZGxlcnMuZm9yRWFjaChmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICByZXR1cm4gaGFuZGxlcih2YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBvbmx5Q2hpbGQoY2hpbGRyZW4pIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW5bMF0gOiBjaGlsZHJlbjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlUmVhY3RDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY2FsY3VsYXRlQ2hhbmdlZEJpdHMpIHtcbiAgdmFyIF9Qcm92aWRlciRjaGlsZENvbnRleCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlO1xuXG4gIHZhciBjb250ZXh0UHJvcCA9ICdfX2NyZWF0ZS1yZWFjdC1jb250ZXh0LScgKyBndWQoKSArICdfXyc7XG5cbiAgdmFyIFByb3ZpZGVyID1cbiAgLyojX19QVVJFX18qL1xuICBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICAgIF9pbmhlcml0c0xvb3NlKFByb3ZpZGVyLCBfQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIFByb3ZpZGVyKCkge1xuICAgICAgdmFyIF90aGlzO1xuXG4gICAgICBfdGhpcyA9IF9Db21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgX3RoaXMuZW1pdHRlciA9IGNyZWF0ZUV2ZW50RW1pdHRlcihfdGhpcy5wcm9wcy52YWx1ZSk7XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90byA9IFByb3ZpZGVyLnByb3RvdHlwZTtcblxuICAgIF9wcm90by5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgICB2YXIgX3JlZjtcblxuICAgICAgcmV0dXJuIF9yZWYgPSB7fSwgX3JlZltjb250ZXh0UHJvcF0gPSB0aGlzLmVtaXR0ZXIsIF9yZWY7XG4gICAgfTtcblxuICAgIF9wcm90by5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLnZhbHVlICE9PSBuZXh0UHJvcHMudmFsdWUpIHtcbiAgICAgICAgdmFyIG9sZFZhbHVlID0gdGhpcy5wcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIG5ld1ZhbHVlID0gbmV4dFByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgY2hhbmdlZEJpdHM7XG5cbiAgICAgICAgaWYgKG9iamVjdElzKG9sZFZhbHVlLCBuZXdWYWx1ZSkpIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IDA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2hhbmdlZEJpdHMgPSB0eXBlb2YgY2FsY3VsYXRlQ2hhbmdlZEJpdHMgPT09ICdmdW5jdGlvbicgPyBjYWxjdWxhdGVDaGFuZ2VkQml0cyhvbGRWYWx1ZSwgbmV3VmFsdWUpIDogTUFYX1NJR05FRF8zMV9CSVRfSU5UO1xuXG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgIHdhcm5pbmcoKGNoYW5nZWRCaXRzICYgTUFYX1NJR05FRF8zMV9CSVRfSU5UKSA9PT0gY2hhbmdlZEJpdHMsICdjYWxjdWxhdGVDaGFuZ2VkQml0czogRXhwZWN0ZWQgdGhlIHJldHVybiB2YWx1ZSB0byBiZSBhICcgKyAnMzEtYml0IGludGVnZXIuIEluc3RlYWQgcmVjZWl2ZWQ6ICcgKyBjaGFuZ2VkQml0cyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY2hhbmdlZEJpdHMgfD0gMDtcblxuICAgICAgICAgIGlmIChjaGFuZ2VkQml0cyAhPT0gMCkge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLnNldChuZXh0UHJvcHMudmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICAgIH07XG5cbiAgICByZXR1cm4gUHJvdmlkZXI7XG4gIH0oQ29tcG9uZW50KTtcblxuICBQcm92aWRlci5jaGlsZENvbnRleHRUeXBlcyA9IChfUHJvdmlkZXIkY2hpbGRDb250ZXggPSB7fSwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4W2NvbnRleHRQcm9wXSA9IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4KTtcblxuICB2YXIgQ29uc3VtZXIgPVxuICAvKiNfX1BVUkVfXyovXG4gIGZ1bmN0aW9uIChfQ29tcG9uZW50Mikge1xuICAgIF9pbmhlcml0c0xvb3NlKENvbnN1bWVyLCBfQ29tcG9uZW50Mik7XG5cbiAgICBmdW5jdGlvbiBDb25zdW1lcigpIHtcbiAgICAgIHZhciBfdGhpczI7XG5cbiAgICAgIF90aGlzMiA9IF9Db21wb25lbnQyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgIF90aGlzMi5zdGF0ZSA9IHtcbiAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXG4gICAgICB9O1xuXG4gICAgICBfdGhpczIub25VcGRhdGUgPSBmdW5jdGlvbiAobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBfdGhpczIub2JzZXJ2ZWRCaXRzIHwgMDtcblxuICAgICAgICBpZiAoKG9ic2VydmVkQml0cyAmIGNoYW5nZWRCaXRzKSAhPT0gMCkge1xuICAgICAgICAgIF90aGlzMi5zZXRTdGF0ZSh7XG4gICAgICAgICAgICB2YWx1ZTogX3RoaXMyLmdldFZhbHVlKClcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgcmV0dXJuIF90aGlzMjtcbiAgICB9XG5cbiAgICB2YXIgX3Byb3RvMiA9IENvbnN1bWVyLnByb3RvdHlwZTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gbmV4dFByb3BzLm9ic2VydmVkQml0cztcbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIDogb2JzZXJ2ZWRCaXRzO1xuICAgIH07XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9uKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuXG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gdGhpcy5wcm9wcy5vYnNlcnZlZEJpdHM7XG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vZmYodGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90bzIuZ2V0VmFsdWUgPSBmdW5jdGlvbiBnZXRWYWx1ZSgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLmdldCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvMi5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gb25seUNoaWxkKHRoaXMucHJvcHMuY2hpbGRyZW4pKHRoaXMuc3RhdGUudmFsdWUpO1xuICAgIH07XG5cbiAgICByZXR1cm4gQ29uc3VtZXI7XG4gIH0oQ29tcG9uZW50KTtcblxuICBDb25zdW1lci5jb250ZXh0VHlwZXMgPSAoX0NvbnN1bWVyJGNvbnRleHRUeXBlID0ge30sIF9Db25zdW1lciRjb250ZXh0VHlwZVtjb250ZXh0UHJvcF0gPSBQcm9wVHlwZXMub2JqZWN0LCBfQ29uc3VtZXIkY29udGV4dFR5cGUpO1xuICByZXR1cm4ge1xuICAgIFByb3ZpZGVyOiBQcm92aWRlcixcbiAgICBDb25zdW1lcjogQ29uc3VtZXJcbiAgfTtcbn1cblxudmFyIGluZGV4ID0gUmVhY3QuY3JlYXRlQ29udGV4dCB8fCBjcmVhdGVSZWFjdENvbnRleHQ7XG5cbmV4cG9ydCBkZWZhdWx0IGluZGV4O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59IiwiaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIGNyZWF0ZVBhdGggfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgY3JlYXRlQ29udGV4dCBmcm9tICdtaW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0JztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tICdwYXRoLXRvLXJlZ2V4cCc7XG5pbXBvcnQgeyBpc1ZhbGlkRWxlbWVudFR5cGUgfSBmcm9tICdyZWFjdC1pcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaG9pc3RTdGF0aWNzIGZyb20gJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJztcblxuLy8gVE9ETzogUmVwbGFjZSB3aXRoIFJlYWN0LmNyZWF0ZUNvbnRleHQgb25jZSB3ZSBjYW4gYXNzdW1lIFJlYWN0IDE2K1xuXG52YXIgY3JlYXRlTmFtZWRDb250ZXh0ID0gZnVuY3Rpb24gY3JlYXRlTmFtZWRDb250ZXh0KG5hbWUpIHtcbiAgdmFyIGNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG4gIGNvbnRleHQuZGlzcGxheU5hbWUgPSBuYW1lO1xuICByZXR1cm4gY29udGV4dDtcbn07XG5cbnZhciBjb250ZXh0ID1cbi8qI19fUFVSRV9fKi9cbmNyZWF0ZU5hbWVkQ29udGV4dChcIlJvdXRlclwiKTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHV0dGluZyBoaXN0b3J5IG9uIGNvbnRleHQuXG4gKi9cblxudmFyIFJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIFJvdXRlci5jb21wdXRlUm9vdE1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZVJvb3RNYXRjaChwYXRobmFtZSkge1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBcIi9cIixcbiAgICAgIHVybDogXCIvXCIsXG4gICAgICBwYXJhbXM6IHt9LFxuICAgICAgaXNFeGFjdDogcGF0aG5hbWUgPT09IFwiL1wiXG4gICAgfTtcbiAgfTtcblxuICBmdW5jdGlvbiBSb3V0ZXIocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGxvY2F0aW9uOiBwcm9wcy5oaXN0b3J5LmxvY2F0aW9uXG4gICAgfTsgLy8gVGhpcyBpcyBhIGJpdCBvZiBhIGhhY2suIFdlIGhhdmUgdG8gc3RhcnQgbGlzdGVuaW5nIGZvciBsb2NhdGlvblxuICAgIC8vIGNoYW5nZXMgaGVyZSBpbiB0aGUgY29uc3RydWN0b3IgaW4gY2FzZSB0aGVyZSBhcmUgYW55IDxSZWRpcmVjdD5zXG4gICAgLy8gb24gdGhlIGluaXRpYWwgcmVuZGVyLiBJZiB0aGVyZSBhcmUsIHRoZXkgd2lsbCByZXBsYWNlL3B1c2ggd2hlblxuICAgIC8vIHRoZXkgbW91bnQgYW5kIHNpbmNlIGNETSBmaXJlcyBpbiBjaGlsZHJlbiBiZWZvcmUgcGFyZW50cywgd2UgbWF5XG4gICAgLy8gZ2V0IGEgbmV3IGxvY2F0aW9uIGJlZm9yZSB0aGUgPFJvdXRlcj4gaXMgbW91bnRlZC5cblxuICAgIF90aGlzLl9pc01vdW50ZWQgPSBmYWxzZTtcbiAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbnVsbDtcblxuICAgIGlmICghcHJvcHMuc3RhdGljQ29udGV4dCkge1xuICAgICAgX3RoaXMudW5saXN0ZW4gPSBwcm9wcy5oaXN0b3J5Lmxpc3RlbihmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgICAgaWYgKF90aGlzLl9pc01vdW50ZWQpIHtcbiAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbG9jYXRpb247XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuX2lzTW91bnRlZCA9IHRydWU7XG5cbiAgICBpZiAodGhpcy5fcGVuZGluZ0xvY2F0aW9uKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgbG9jYXRpb246IHRoaXMuX3BlbmRpbmdMb2NhdGlvblxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnVubGlzdGVuKSB0aGlzLnVubGlzdGVuKCk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlbiB8fCBudWxsLFxuICAgICAgdmFsdWU6IHtcbiAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgICBsb2NhdGlvbjogdGhpcy5zdGF0ZS5sb2NhdGlvbixcbiAgICAgICAgbWF0Y2g6IFJvdXRlci5jb21wdXRlUm9vdE1hdGNoKHRoaXMuc3RhdGUubG9jYXRpb24ucGF0aG5hbWUpLFxuICAgICAgICBzdGF0aWNDb250ZXh0OiB0aGlzLnByb3BzLnN0YXRpY0NvbnRleHRcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBzdGF0aWNDb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwcmV2UHJvcHMuaGlzdG9yeSA9PT0gdGhpcy5wcm9wcy5oaXN0b3J5LCBcIllvdSBjYW5ub3QgY2hhbmdlIDxSb3V0ZXIgaGlzdG9yeT5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCBzdG9yZXMgbG9jYXRpb24gaW4gbWVtb3J5LlxuICovXG5cbnZhciBNZW1vcnlSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTWVtb3J5Um91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBNZW1vcnlSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZU1lbW9yeUhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBNZW1vcnlSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBNZW1vcnlSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTWVtb3J5Um91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBpbml0aWFsRW50cmllczogUHJvcFR5cGVzLmFycmF5LFxuICAgIGluaXRpYWxJbmRleDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG4gIH07XG5cbiAgTWVtb3J5Um91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPE1lbW9yeVJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IE1lbW9yeVJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG52YXIgTGlmZWN5Y2xlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKExpZmVjeWNsZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTGlmZWN5Y2xlKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBMaWZlY3ljbGUucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uTW91bnQpIHRoaXMucHJvcHMub25Nb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25VcGRhdGUpIHRoaXMucHJvcHMub25VcGRhdGUuY2FsbCh0aGlzLCB0aGlzLCBwcmV2UHJvcHMpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uVW5tb3VudCkgdGhpcy5wcm9wcy5vblVubW91bnQuY2FsbCh0aGlzLCB0aGlzKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBMaWZlY3ljbGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHByb21wdGluZyB0aGUgdXNlciBiZWZvcmUgbmF2aWdhdGluZyBhd2F5IGZyb20gYSBzY3JlZW4uXG4gKi9cblxuZnVuY3Rpb24gUHJvbXB0KF9yZWYpIHtcbiAgdmFyIG1lc3NhZ2UgPSBfcmVmLm1lc3NhZ2UsXG4gICAgICBfcmVmJHdoZW4gPSBfcmVmLndoZW4sXG4gICAgICB3aGVuID0gX3JlZiR3aGVuID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZiR3aGVuO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8UHJvbXB0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIGlmICghd2hlbiB8fCBjb250ZXh0LnN0YXRpY0NvbnRleHQpIHJldHVybiBudWxsO1xuICAgIHZhciBtZXRob2QgPSBjb250ZXh0Lmhpc3RvcnkuYmxvY2s7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGlmZWN5Y2xlLCB7XG4gICAgICBvbk1vdW50OiBmdW5jdGlvbiBvbk1vdW50KHNlbGYpIHtcbiAgICAgICAgc2VsZi5yZWxlYXNlID0gbWV0aG9kKG1lc3NhZ2UpO1xuICAgICAgfSxcbiAgICAgIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZShzZWxmLCBwcmV2UHJvcHMpIHtcbiAgICAgICAgaWYgKHByZXZQcm9wcy5tZXNzYWdlICE9PSBtZXNzYWdlKSB7XG4gICAgICAgICAgc2VsZi5yZWxlYXNlKCk7XG4gICAgICAgICAgc2VsZi5yZWxlYXNlID0gbWV0aG9kKG1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb25Vbm1vdW50OiBmdW5jdGlvbiBvblVubW91bnQoc2VsZikge1xuICAgICAgICBzZWxmLnJlbGVhc2UoKTtcbiAgICAgIH0sXG4gICAgICBtZXNzYWdlOiBtZXNzYWdlXG4gICAgfSk7XG4gIH0pO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIHZhciBtZXNzYWdlVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc3RyaW5nXSk7XG4gIFByb21wdC5wcm9wVHlwZXMgPSB7XG4gICAgd2hlbjogUHJvcFR5cGVzLmJvb2wsXG4gICAgbWVzc2FnZTogbWVzc2FnZVR5cGUuaXNSZXF1aXJlZFxuICB9O1xufVxuXG52YXIgY2FjaGUgPSB7fTtcbnZhciBjYWNoZUxpbWl0ID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCA9IDA7XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdGgpIHtcbiAgaWYgKGNhY2hlW3BhdGhdKSByZXR1cm4gY2FjaGVbcGF0aF07XG4gIHZhciBnZW5lcmF0b3IgPSBwYXRoVG9SZWdleHAuY29tcGlsZShwYXRoKTtcblxuICBpZiAoY2FjaGVDb3VudCA8IGNhY2hlTGltaXQpIHtcbiAgICBjYWNoZVtwYXRoXSA9IGdlbmVyYXRvcjtcbiAgICBjYWNoZUNvdW50Kys7XG4gIH1cblxuICByZXR1cm4gZ2VuZXJhdG9yO1xufVxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBnZW5lcmF0aW5nIGEgVVJMIHBhdGhuYW1lIGZyb20gYSBwYXRoIGFuZCBwYXJhbWV0ZXJzLlxuICovXG5cblxuZnVuY3Rpb24gZ2VuZXJhdGVQYXRoKHBhdGgsIHBhcmFtcykge1xuICBpZiAocGF0aCA9PT0gdm9pZCAwKSB7XG4gICAgcGF0aCA9IFwiL1wiO1xuICB9XG5cbiAgaWYgKHBhcmFtcyA9PT0gdm9pZCAwKSB7XG4gICAgcGFyYW1zID0ge307XG4gIH1cblxuICByZXR1cm4gcGF0aCA9PT0gXCIvXCIgPyBwYXRoIDogY29tcGlsZVBhdGgocGF0aCkocGFyYW1zLCB7XG4gICAgcHJldHR5OiB0cnVlXG4gIH0pO1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBuYXZpZ2F0aW5nIHByb2dyYW1tYXRpY2FsbHkgd2l0aCBhIGNvbXBvbmVudC5cbiAqL1xuXG5mdW5jdGlvbiBSZWRpcmVjdChfcmVmKSB7XG4gIHZhciBjb21wdXRlZE1hdGNoID0gX3JlZi5jb21wdXRlZE1hdGNoLFxuICAgICAgdG8gPSBfcmVmLnRvLFxuICAgICAgX3JlZiRwdXNoID0gX3JlZi5wdXNoLFxuICAgICAgcHVzaCA9IF9yZWYkcHVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmJHB1c2g7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSZWRpcmVjdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICB2YXIgaGlzdG9yeSA9IGNvbnRleHQuaGlzdG9yeSxcbiAgICAgICAgc3RhdGljQ29udGV4dCA9IGNvbnRleHQuc3RhdGljQ29udGV4dDtcbiAgICB2YXIgbWV0aG9kID0gcHVzaCA/IGhpc3RvcnkucHVzaCA6IGhpc3RvcnkucmVwbGFjZTtcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihjb21wdXRlZE1hdGNoID8gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gZ2VuZXJhdGVQYXRoKHRvLCBjb21wdXRlZE1hdGNoLnBhcmFtcykgOiBfZXh0ZW5kcyh7fSwgdG8sIHtcbiAgICAgIHBhdGhuYW1lOiBnZW5lcmF0ZVBhdGgodG8ucGF0aG5hbWUsIGNvbXB1dGVkTWF0Y2gucGFyYW1zKVxuICAgIH0pIDogdG8pOyAvLyBXaGVuIHJlbmRlcmluZyBpbiBhIHN0YXRpYyBjb250ZXh0LFxuICAgIC8vIHNldCB0aGUgbmV3IGxvY2F0aW9uIGltbWVkaWF0ZWx5LlxuXG4gICAgaWYgKHN0YXRpY0NvbnRleHQpIHtcbiAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaWZlY3ljbGUsIHtcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoKSB7XG4gICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICB9LFxuICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKHNlbGYsIHByZXZQcm9wcykge1xuICAgICAgICB2YXIgcHJldkxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocHJldlByb3BzLnRvKTtcblxuICAgICAgICBpZiAoIWxvY2F0aW9uc0FyZUVxdWFsKHByZXZMb2NhdGlvbiwgX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgICAgICAga2V5OiBwcmV2TG9jYXRpb24ua2V5XG4gICAgICAgIH0pKSkge1xuICAgICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB0bzogdG9cbiAgICB9KTtcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUmVkaXJlY3QucHJvcFR5cGVzID0ge1xuICAgIHB1c2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGZyb206IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdG86IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBjYWNoZSQxID0ge307XG52YXIgY2FjaGVMaW1pdCQxID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCQxID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgkMShwYXRoLCBvcHRpb25zKSB7XG4gIHZhciBjYWNoZUtleSA9IFwiXCIgKyBvcHRpb25zLmVuZCArIG9wdGlvbnMuc3RyaWN0ICsgb3B0aW9ucy5zZW5zaXRpdmU7XG4gIHZhciBwYXRoQ2FjaGUgPSBjYWNoZSQxW2NhY2hlS2V5XSB8fCAoY2FjaGUkMVtjYWNoZUtleV0gPSB7fSk7XG4gIGlmIChwYXRoQ2FjaGVbcGF0aF0pIHJldHVybiBwYXRoQ2FjaGVbcGF0aF07XG4gIHZhciBrZXlzID0gW107XG4gIHZhciByZWdleHAgPSBwYXRoVG9SZWdleHAocGF0aCwga2V5cywgb3B0aW9ucyk7XG4gIHZhciByZXN1bHQgPSB7XG4gICAgcmVnZXhwOiByZWdleHAsXG4gICAga2V5czoga2V5c1xuICB9O1xuXG4gIGlmIChjYWNoZUNvdW50JDEgPCBjYWNoZUxpbWl0JDEpIHtcbiAgICBwYXRoQ2FjaGVbcGF0aF0gPSByZXN1bHQ7XG4gICAgY2FjaGVDb3VudCQxKys7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIFVSTCBwYXRobmFtZSB0byBhIHBhdGguXG4gKi9cblxuXG5mdW5jdGlvbiBtYXRjaFBhdGgocGF0aG5hbWUsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIiB8fCBBcnJheS5pc0FycmF5KG9wdGlvbnMpKSB7XG4gICAgb3B0aW9ucyA9IHtcbiAgICAgIHBhdGg6IG9wdGlvbnNcbiAgICB9O1xuICB9XG5cbiAgdmFyIF9vcHRpb25zID0gb3B0aW9ucyxcbiAgICAgIHBhdGggPSBfb3B0aW9ucy5wYXRoLFxuICAgICAgX29wdGlvbnMkZXhhY3QgPSBfb3B0aW9ucy5leGFjdCxcbiAgICAgIGV4YWN0ID0gX29wdGlvbnMkZXhhY3QgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkZXhhY3QsXG4gICAgICBfb3B0aW9ucyRzdHJpY3QgPSBfb3B0aW9ucy5zdHJpY3QsXG4gICAgICBzdHJpY3QgPSBfb3B0aW9ucyRzdHJpY3QgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkc3RyaWN0LFxuICAgICAgX29wdGlvbnMkc2Vuc2l0aXZlID0gX29wdGlvbnMuc2Vuc2l0aXZlLFxuICAgICAgc2Vuc2l0aXZlID0gX29wdGlvbnMkc2Vuc2l0aXZlID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJHNlbnNpdGl2ZTtcbiAgdmFyIHBhdGhzID0gW10uY29uY2F0KHBhdGgpO1xuICByZXR1cm4gcGF0aHMucmVkdWNlKGZ1bmN0aW9uIChtYXRjaGVkLCBwYXRoKSB7XG4gICAgaWYgKCFwYXRoICYmIHBhdGggIT09IFwiXCIpIHJldHVybiBudWxsO1xuICAgIGlmIChtYXRjaGVkKSByZXR1cm4gbWF0Y2hlZDtcblxuICAgIHZhciBfY29tcGlsZVBhdGggPSBjb21waWxlUGF0aCQxKHBhdGgsIHtcbiAgICAgIGVuZDogZXhhY3QsXG4gICAgICBzdHJpY3Q6IHN0cmljdCxcbiAgICAgIHNlbnNpdGl2ZTogc2Vuc2l0aXZlXG4gICAgfSksXG4gICAgICAgIHJlZ2V4cCA9IF9jb21waWxlUGF0aC5yZWdleHAsXG4gICAgICAgIGtleXMgPSBfY29tcGlsZVBhdGgua2V5cztcblxuICAgIHZhciBtYXRjaCA9IHJlZ2V4cC5leGVjKHBhdGhuYW1lKTtcbiAgICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcbiAgICB2YXIgdXJsID0gbWF0Y2hbMF0sXG4gICAgICAgIHZhbHVlcyA9IG1hdGNoLnNsaWNlKDEpO1xuICAgIHZhciBpc0V4YWN0ID0gcGF0aG5hbWUgPT09IHVybDtcbiAgICBpZiAoZXhhY3QgJiYgIWlzRXhhY3QpIHJldHVybiBudWxsO1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBwYXRoLFxuICAgICAgLy8gdGhlIHBhdGggdXNlZCB0byBtYXRjaFxuICAgICAgdXJsOiBwYXRoID09PSBcIi9cIiAmJiB1cmwgPT09IFwiXCIgPyBcIi9cIiA6IHVybCxcbiAgICAgIC8vIHRoZSBtYXRjaGVkIHBvcnRpb24gb2YgdGhlIFVSTFxuICAgICAgaXNFeGFjdDogaXNFeGFjdCxcbiAgICAgIC8vIHdoZXRoZXIgb3Igbm90IHdlIG1hdGNoZWQgZXhhY3RseVxuICAgICAgcGFyYW1zOiBrZXlzLnJlZHVjZShmdW5jdGlvbiAobWVtbywga2V5LCBpbmRleCkge1xuICAgICAgICBtZW1vW2tleS5uYW1lXSA9IHZhbHVlc1tpbmRleF07XG4gICAgICAgIHJldHVybiBtZW1vO1xuICAgICAgfSwge30pXG4gICAgfTtcbiAgfSwgbnVsbCk7XG59XG5cbmZ1bmN0aW9uIGlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikge1xuICByZXR1cm4gUmVhY3QuQ2hpbGRyZW4uY291bnQoY2hpbGRyZW4pID09PSAwO1xufVxuXG5mdW5jdGlvbiBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBwYXRoKSB7XG4gIHZhciB2YWx1ZSA9IGNoaWxkcmVuKHByb3BzKTtcbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyh2YWx1ZSAhPT0gdW5kZWZpbmVkLCBcIllvdSByZXR1cm5lZCBgdW5kZWZpbmVkYCBmcm9tIHRoZSBgY2hpbGRyZW5gIGZ1bmN0aW9uIG9mIFwiICsgKFwiPFJvdXRlXCIgKyAocGF0aCA/IFwiIHBhdGg9XFxcIlwiICsgcGF0aCArIFwiXFxcIlwiIDogXCJcIikgKyBcIj4sIGJ1dCB5b3UgXCIpICsgXCJzaG91bGQgaGF2ZSByZXR1cm5lZCBhIFJlYWN0IGVsZW1lbnQgb3IgYG51bGxgXCIpIDogdm9pZCAwO1xuICByZXR1cm4gdmFsdWUgfHwgbnVsbDtcbn1cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgc2luZ2xlIHBhdGggYW5kIHJlbmRlcmluZy5cbiAqL1xuXG5cbnZhciBSb3V0ZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGUoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFJvdXRlLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCQxKSB7XG4gICAgICAhY29udGV4dCQxID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGU+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCBjb250ZXh0JDEubG9jYXRpb247XG4gICAgICB2YXIgbWF0Y2ggPSBfdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoID8gX3RoaXMucHJvcHMuY29tcHV0ZWRNYXRjaCAvLyA8U3dpdGNoPiBhbHJlYWR5IGNvbXB1dGVkIHRoZSBtYXRjaCBmb3IgdXNcbiAgICAgIDogX3RoaXMucHJvcHMucGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX3RoaXMucHJvcHMpIDogY29udGV4dCQxLm1hdGNoO1xuXG4gICAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7fSwgY29udGV4dCQxLCB7XG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgbWF0Y2g6IG1hdGNoXG4gICAgICB9KTtcblxuICAgICAgdmFyIF90aGlzJHByb3BzID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wcy5jaGlsZHJlbixcbiAgICAgICAgICBjb21wb25lbnQgPSBfdGhpcyRwcm9wcy5jb21wb25lbnQsXG4gICAgICAgICAgcmVuZGVyID0gX3RoaXMkcHJvcHMucmVuZGVyOyAvLyBQcmVhY3QgdXNlcyBhbiBlbXB0eSBhcnJheSBhcyBjaGlsZHJlbiBieVxuICAgICAgLy8gZGVmYXVsdCwgc28gdXNlIG51bGwgaWYgdGhhdCdzIHRoZSBjYXNlLlxuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZHJlbikgJiYgY2hpbGRyZW4ubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGNoaWxkcmVuID0gbnVsbDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Qcm92aWRlciwge1xuICAgICAgICB2YWx1ZTogcHJvcHNcbiAgICAgIH0sIHByb3BzLm1hdGNoID8gY2hpbGRyZW4gPyB0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIiA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIF90aGlzLnByb3BzLnBhdGgpIDogY2hpbGRyZW4ocHJvcHMpIDogY2hpbGRyZW4gOiBjb21wb25lbnQgPyBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgcHJvcHMpIDogcmVuZGVyID8gcmVuZGVyKHByb3BzKSA6IG51bGwgOiB0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIiA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIF90aGlzLnByb3BzLnBhdGgpIDogY2hpbGRyZW4ocHJvcHMpIDogbnVsbCk7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5ub2RlXSksXG4gICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocHJvcHMsIHByb3BOYW1lKSB7XG4gICAgICBpZiAocHJvcHNbcHJvcE5hbWVdICYmICFpc1ZhbGlkRWxlbWVudFR5cGUocHJvcHNbcHJvcE5hbWVdKSkge1xuICAgICAgICByZXR1cm4gbmV3IEVycm9yKFwiSW52YWxpZCBwcm9wICdjb21wb25lbnQnIHN1cHBsaWVkIHRvICdSb3V0ZSc6IHRoZSBwcm9wIGlzIG5vdCBhIHZhbGlkIFJlYWN0IGNvbXBvbmVudFwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBwYXRoOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc3RyaW5nKV0pLFxuICAgIHJlbmRlcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sXG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5jb21wb25lbnQpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIGNvbXBvbmVudD4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgcmVuZGVyPiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgcmVuZGVyPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSBcIi9cIiA/IHBhdGggOiBcIi9cIiArIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICBwYXRobmFtZTogYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKSArIGxvY2F0aW9uLnBhdGhuYW1lXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG4gIHZhciBiYXNlID0gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKTtcbiAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmluZGV4T2YoYmFzZSkgIT09IDApIHJldHVybiBsb2NhdGlvbjtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBsb2NhdGlvbi5wYXRobmFtZS5zdWJzdHIoYmFzZS5sZW5ndGgpXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVVUkwobG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiBsb2NhdGlvbiA9PT0gXCJzdHJpbmdcIiA/IGxvY2F0aW9uIDogY3JlYXRlUGF0aChsb2NhdGlvbik7XG59XG5cbmZ1bmN0aW9uIHN0YXRpY0hhbmRsZXIobWV0aG9kTmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IGNhbm5vdCAlcyB3aXRoIDxTdGF0aWNSb3V0ZXI+XCIsIG1ldGhvZE5hbWUpIDogaW52YXJpYW50KGZhbHNlKSA7XG4gIH07XG59XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuLyoqXG4gKiBUaGUgcHVibGljIHRvcC1sZXZlbCBBUEkgZm9yIGEgXCJzdGF0aWNcIiA8Um91dGVyPiwgc28tY2FsbGVkIGJlY2F1c2UgaXRcbiAqIGNhbid0IGFjdHVhbGx5IGNoYW5nZSB0aGUgY3VycmVudCBsb2NhdGlvbi4gSW5zdGVhZCwgaXQganVzdCByZWNvcmRzXG4gKiBsb2NhdGlvbiBjaGFuZ2VzIGluIGEgY29udGV4dCBvYmplY3QuIFVzZWZ1bCBtYWlubHkgaW4gdGVzdGluZyBhbmRcbiAqIHNlcnZlci1yZW5kZXJpbmcgc2NlbmFyaW9zLlxuICovXG5cblxudmFyIFN0YXRpY1JvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShTdGF0aWNSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN0YXRpY1JvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcblxuICAgIF90aGlzLmhhbmRsZVB1c2ggPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgIHJldHVybiBfdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlBVU0hcIik7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZVJlcGxhY2UgPSBmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgIHJldHVybiBfdGhpcy5uYXZpZ2F0ZVRvKGxvY2F0aW9uLCBcIlJFUExBQ0VcIik7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUxpc3RlbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBub29wO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVCbG9jayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBub29wO1xuICAgIH07XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3RhdGljUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ubmF2aWdhdGVUbyA9IGZ1bmN0aW9uIG5hdmlnYXRlVG8obG9jYXRpb24sIGFjdGlvbikge1xuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIF90aGlzJHByb3BzJGJhc2VuYW1lID0gX3RoaXMkcHJvcHMuYmFzZW5hbWUsXG4gICAgICAgIGJhc2VuYW1lID0gX3RoaXMkcHJvcHMkYmFzZW5hbWUgPT09IHZvaWQgMCA/IFwiXCIgOiBfdGhpcyRwcm9wcyRiYXNlbmFtZSxcbiAgICAgICAgX3RoaXMkcHJvcHMkY29udGV4dCA9IF90aGlzJHByb3BzLmNvbnRleHQsXG4gICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wcyRjb250ZXh0ID09PSB2b2lkIDAgPyB7fSA6IF90aGlzJHByb3BzJGNvbnRleHQ7XG4gICAgY29udGV4dC5hY3Rpb24gPSBhY3Rpb247XG4gICAgY29udGV4dC5sb2NhdGlvbiA9IGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpO1xuICAgIGNvbnRleHQudXJsID0gY3JlYXRlVVJMKGNvbnRleHQubG9jYXRpb24pO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzJHByb3BzMiA9IHRoaXMucHJvcHMsXG4gICAgICAgIF90aGlzJHByb3BzMiRiYXNlbmFtZSA9IF90aGlzJHByb3BzMi5iYXNlbmFtZSxcbiAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wczIkYmFzZW5hbWUgPT09IHZvaWQgMCA/IFwiXCIgOiBfdGhpcyRwcm9wczIkYmFzZW5hbWUsXG4gICAgICAgIF90aGlzJHByb3BzMiRjb250ZXh0ID0gX3RoaXMkcHJvcHMyLmNvbnRleHQsXG4gICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wczIkY29udGV4dCA9PT0gdm9pZCAwID8ge30gOiBfdGhpcyRwcm9wczIkY29udGV4dCxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGxvY2F0aW9uID0gX3RoaXMkcHJvcHMyLmxvY2F0aW9uLFxuICAgICAgICBsb2NhdGlvbiA9IF90aGlzJHByb3BzMiRsb2NhdGlvbiA9PT0gdm9pZCAwID8gXCIvXCIgOiBfdGhpcyRwcm9wczIkbG9jYXRpb24sXG4gICAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wczIsIFtcImJhc2VuYW1lXCIsIFwiY29udGV4dFwiLCBcImxvY2F0aW9uXCJdKTtcblxuICAgIHZhciBoaXN0b3J5ID0ge1xuICAgICAgY3JlYXRlSHJlZjogZnVuY3Rpb24gY3JlYXRlSHJlZihwYXRoKSB7XG4gICAgICAgIHJldHVybiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUgKyBjcmVhdGVVUkwocGF0aCkpO1xuICAgICAgfSxcbiAgICAgIGFjdGlvbjogXCJQT1BcIixcbiAgICAgIGxvY2F0aW9uOiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBjcmVhdGVMb2NhdGlvbihsb2NhdGlvbikpLFxuICAgICAgcHVzaDogdGhpcy5oYW5kbGVQdXNoLFxuICAgICAgcmVwbGFjZTogdGhpcy5oYW5kbGVSZXBsYWNlLFxuICAgICAgZ286IHN0YXRpY0hhbmRsZXIoXCJnb1wiKSxcbiAgICAgIGdvQmFjazogc3RhdGljSGFuZGxlcihcImdvQmFja1wiKSxcbiAgICAgIGdvRm9yd2FyZDogc3RhdGljSGFuZGxlcihcImdvRm9yd2FyZFwiKSxcbiAgICAgIGxpc3RlbjogdGhpcy5oYW5kbGVMaXN0ZW4sXG4gICAgICBibG9jazogdGhpcy5oYW5kbGVCbG9ja1xuICAgIH07XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCBfZXh0ZW5kcyh7fSwgcmVzdCwge1xuICAgICAgaGlzdG9yeTogaGlzdG9yeSxcbiAgICAgIHN0YXRpY0NvbnRleHQ6IGNvbnRleHRcbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIFN0YXRpY1JvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBTdGF0aWNSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNvbnRleHQ6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKVxuICB9O1xuXG4gIFN0YXRpY1JvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxTdGF0aWNSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBTdGF0aWNSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIHRoZSBmaXJzdCA8Um91dGU+IHRoYXQgbWF0Y2hlcy5cbiAqL1xuXG52YXIgU3dpdGNoID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFN3aXRjaCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3dpdGNoKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTd2l0Y2gucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFN3aXRjaD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IF90aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQubG9jYXRpb247XG4gICAgICB2YXIgZWxlbWVudCwgbWF0Y2g7IC8vIFdlIHVzZSBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoIGluc3RlYWQgb2YgUmVhY3QuQ2hpbGRyZW4udG9BcnJheSgpLmZpbmQoKVxuICAgICAgLy8gaGVyZSBiZWNhdXNlIHRvQXJyYXkgYWRkcyBrZXlzIHRvIGFsbCBjaGlsZCBlbGVtZW50cyBhbmQgd2UgZG8gbm90IHdhbnRcbiAgICAgIC8vIHRvIHRyaWdnZXIgYW4gdW5tb3VudC9yZW1vdW50IGZvciB0d28gPFJvdXRlPnMgdGhhdCByZW5kZXIgdGhlIHNhbWVcbiAgICAgIC8vIGNvbXBvbmVudCBhdCBkaWZmZXJlbnQgVVJMcy5cblxuICAgICAgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaChfdGhpcy5wcm9wcy5jaGlsZHJlbiwgZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICAgIGlmIChtYXRjaCA9PSBudWxsICYmIFJlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkKSkge1xuICAgICAgICAgIGVsZW1lbnQgPSBjaGlsZDtcbiAgICAgICAgICB2YXIgcGF0aCA9IGNoaWxkLnByb3BzLnBhdGggfHwgY2hpbGQucHJvcHMuZnJvbTtcbiAgICAgICAgICBtYXRjaCA9IHBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIF9leHRlbmRzKHt9LCBjaGlsZC5wcm9wcywge1xuICAgICAgICAgICAgcGF0aDogcGF0aFxuICAgICAgICAgIH0pKSA6IGNvbnRleHQubWF0Y2g7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIG1hdGNoID8gUmVhY3QuY2xvbmVFbGVtZW50KGVsZW1lbnQsIHtcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBjb21wdXRlZE1hdGNoOiBtYXRjaFxuICAgICAgfSkgOiBudWxsO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBTd2l0Y2g7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgU3dpdGNoLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBTd2l0Y2gucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogQSBwdWJsaWMgaGlnaGVyLW9yZGVyIGNvbXBvbmVudCB0byBhY2Nlc3MgdGhlIGltcGVyYXRpdmUgQVBJXG4gKi9cblxuZnVuY3Rpb24gd2l0aFJvdXRlcihDb21wb25lbnQpIHtcbiAgdmFyIGRpc3BsYXlOYW1lID0gXCJ3aXRoUm91dGVyKFwiICsgKENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSkgKyBcIilcIjtcblxuICB2YXIgQyA9IGZ1bmN0aW9uIEMocHJvcHMpIHtcbiAgICB2YXIgd3JhcHBlZENvbXBvbmVudFJlZiA9IHByb3BzLndyYXBwZWRDb21wb25lbnRSZWYsXG4gICAgICAgIHJlbWFpbmluZ1Byb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIFtcIndyYXBwZWRDb21wb25lbnRSZWZcIl0pO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8XCIgKyBkaXNwbGF5TmFtZSArIFwiIC8+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHt9LCByZW1haW5pbmdQcm9wcywgY29udGV4dCwge1xuICAgICAgICByZWY6IHdyYXBwZWRDb21wb25lbnRSZWZcbiAgICAgIH0pKTtcbiAgICB9KTtcbiAgfTtcblxuICBDLmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG4gIEMuV3JhcHBlZENvbXBvbmVudCA9IENvbXBvbmVudDtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgQy5wcm9wVHlwZXMgPSB7XG4gICAgICB3cmFwcGVkQ29tcG9uZW50UmVmOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm9iamVjdF0pXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBob2lzdFN0YXRpY3MoQywgQ29tcG9uZW50KTtcbn1cblxudmFyIHVzZUNvbnRleHQgPSBSZWFjdC51c2VDb250ZXh0O1xuZnVuY3Rpb24gdXNlSGlzdG9yeSgpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZUhpc3RvcnkoKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gdXNlQ29udGV4dChjb250ZXh0KS5oaXN0b3J5O1xufVxuZnVuY3Rpb24gdXNlTG9jYXRpb24oKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VMb2NhdGlvbigpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHJldHVybiB1c2VDb250ZXh0KGNvbnRleHQpLmxvY2F0aW9uO1xufVxuZnVuY3Rpb24gdXNlUGFyYW1zKCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlUGFyYW1zKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgdmFyIG1hdGNoID0gdXNlQ29udGV4dChjb250ZXh0KS5tYXRjaDtcbiAgcmV0dXJuIG1hdGNoID8gbWF0Y2gucGFyYW1zIDoge307XG59XG5mdW5jdGlvbiB1c2VSb3V0ZU1hdGNoKHBhdGgpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZVJvdXRlTWF0Y2goKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gcGF0aCA/IG1hdGNoUGF0aCh1c2VMb2NhdGlvbigpLnBhdGhuYW1lLCBwYXRoKSA6IHVzZUNvbnRleHQoY29udGV4dCkubWF0Y2g7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgZ2xvYmFsID0gd2luZG93O1xuICAgIHZhciBrZXkgPSBcIl9fcmVhY3Rfcm91dGVyX2J1aWxkX19cIjtcbiAgICB2YXIgYnVpbGROYW1lcyA9IHtcbiAgICAgIGNqczogXCJDb21tb25KU1wiLFxuICAgICAgZXNtOiBcIkVTIG1vZHVsZXNcIixcbiAgICAgIHVtZDogXCJVTURcIlxuICAgIH07XG5cbiAgICBpZiAoZ2xvYmFsW2tleV0gJiYgZ2xvYmFsW2tleV0gIT09IFwiZXNtXCIpIHtcbiAgICAgIHZhciBpbml0aWFsQnVpbGROYW1lID0gYnVpbGROYW1lc1tnbG9iYWxba2V5XV07XG4gICAgICB2YXIgc2Vjb25kYXJ5QnVpbGROYW1lID0gYnVpbGROYW1lc1tcImVzbVwiXTsgLy8gVE9ETzogQWRkIGxpbmsgdG8gYXJ0aWNsZSB0aGF0IGV4cGxhaW5zIGluIGRldGFpbCBob3cgdG8gYXZvaWRcbiAgICAgIC8vIGxvYWRpbmcgMiBkaWZmZXJlbnQgYnVpbGRzLlxuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgYXJlIGxvYWRpbmcgdGhlIFwiICsgc2Vjb25kYXJ5QnVpbGROYW1lICsgXCIgYnVpbGQgb2YgUmVhY3QgUm91dGVyIFwiICsgKFwib24gYSBwYWdlIHRoYXQgaXMgYWxyZWFkeSBydW5uaW5nIHRoZSBcIiArIGluaXRpYWxCdWlsZE5hbWUgKyBcIiBcIikgKyBcImJ1aWxkLCBzbyB0aGluZ3Mgd29uJ3Qgd29yayByaWdodC5cIik7XG4gICAgfVxuXG4gICAgZ2xvYmFsW2tleV0gPSBcImVzbVwiO1xuICB9XG59XG5cbmV4cG9ydCB7IE1lbW9yeVJvdXRlciwgUHJvbXB0LCBSZWRpcmVjdCwgUm91dGUsIFJvdXRlciwgU3RhdGljUm91dGVyLCBTd2l0Y2gsIGNvbnRleHQgYXMgX19Sb3V0ZXJDb250ZXh0LCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgdXNlSGlzdG9yeSwgdXNlTG9jYXRpb24sIHVzZVBhcmFtcywgdXNlUm91dGVNYXRjaCwgd2l0aFJvdXRlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhY3Qtcm91dGVyLmpzLm1hcFxuIiwiaW1wb3J0IHsgUm91dGVyLCBfX1JvdXRlckNvbnRleHQsIG1hdGNoUGF0aCB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5leHBvcnQgKiBmcm9tICdyZWFjdC1yb3V0ZXInO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTG9jYXRpb24gfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIEhUTUw1IGhpc3RvcnkuXG4gKi9cblxudmFyIEJyb3dzZXJSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoQnJvd3NlclJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gQnJvd3NlclJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlQnJvd3Nlckhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBCcm93c2VyUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gQnJvd3NlclJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBCcm93c2VyUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZm9yY2VSZWZyZXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXJcbiAgfTtcblxuICBCcm93c2VyUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEJyb3dzZXJSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIHdpbmRvdy5sb2NhdGlvbi5oYXNoLlxuICovXG5cbnZhciBIYXNoUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKEhhc2hSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEhhc2hSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUhhc2hIaXN0b3J5KF90aGlzLnByb3BzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gSGFzaFJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIEhhc2hSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgSGFzaFJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGhhc2hUeXBlOiBQcm9wVHlwZXMub25lT2YoW1wiaGFzaGJhbmdcIiwgXCJub3NsYXNoXCIsIFwic2xhc2hcIl0pXG4gIH07XG5cbiAgSGFzaFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxIYXNoUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgSGFzaFJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG52YXIgcmVzb2x2ZVRvTG9jYXRpb24gPSBmdW5jdGlvbiByZXNvbHZlVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgdG8gPT09IFwiZnVuY3Rpb25cIiA/IHRvKGN1cnJlbnRMb2NhdGlvbikgOiB0bztcbn07XG52YXIgbm9ybWFsaXplVG9Mb2NhdGlvbiA9IGZ1bmN0aW9uIG5vcm1hbGl6ZVRvTG9jYXRpb24odG8sIGN1cnJlbnRMb2NhdGlvbikge1xuICByZXR1cm4gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gY3JlYXRlTG9jYXRpb24odG8sIG51bGwsIG51bGwsIGN1cnJlbnRMb2NhdGlvbikgOiB0bztcbn07XG5cbnZhciBmb3J3YXJkUmVmU2hpbSA9IGZ1bmN0aW9uIGZvcndhcmRSZWZTaGltKEMpIHtcbiAgcmV0dXJuIEM7XG59O1xuXG52YXIgZm9yd2FyZFJlZiA9IFJlYWN0LmZvcndhcmRSZWY7XG5cbmlmICh0eXBlb2YgZm9yd2FyZFJlZiA9PT0gXCJ1bmRlZmluZWRcIikge1xuICBmb3J3YXJkUmVmID0gZm9yd2FyZFJlZlNoaW07XG59XG5cbmZ1bmN0aW9uIGlzTW9kaWZpZWRFdmVudChldmVudCkge1xuICByZXR1cm4gISEoZXZlbnQubWV0YUtleSB8fCBldmVudC5hbHRLZXkgfHwgZXZlbnQuY3RybEtleSB8fCBldmVudC5zaGlmdEtleSk7XG59XG5cbnZhciBMaW5rQW5jaG9yID0gZm9yd2FyZFJlZihmdW5jdGlvbiAoX3JlZiwgZm9yd2FyZGVkUmVmKSB7XG4gIHZhciBpbm5lclJlZiA9IF9yZWYuaW5uZXJSZWYsXG4gICAgICBuYXZpZ2F0ZSA9IF9yZWYubmF2aWdhdGUsXG4gICAgICBfb25DbGljayA9IF9yZWYub25DbGljayxcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJpbm5lclJlZlwiLCBcIm5hdmlnYXRlXCIsIFwib25DbGlja1wiXSk7XG5cbiAgdmFyIHRhcmdldCA9IHJlc3QudGFyZ2V0O1xuXG4gIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhldmVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgaWYgKF9vbkNsaWNrKSBfb25DbGljayhldmVudCk7XG4gICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aHJvdyBleDtcbiAgICAgIH1cblxuICAgICAgaWYgKCFldmVudC5kZWZhdWx0UHJldmVudGVkICYmIC8vIG9uQ2xpY2sgcHJldmVudGVkIGRlZmF1bHRcbiAgICAgIGV2ZW50LmJ1dHRvbiA9PT0gMCAmJiAoIC8vIGlnbm9yZSBldmVyeXRoaW5nIGJ1dCBsZWZ0IGNsaWNrc1xuICAgICAgIXRhcmdldCB8fCB0YXJnZXQgPT09IFwiX3NlbGZcIikgJiYgLy8gbGV0IGJyb3dzZXIgaGFuZGxlIFwidGFyZ2V0PV9ibGFua1wiIGV0Yy5cbiAgICAgICFpc01vZGlmaWVkRXZlbnQoZXZlbnQpIC8vIGlnbm9yZSBjbGlja3Mgd2l0aCBtb2RpZmllciBrZXlzXG4gICAgICApIHtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIG5hdmlnYXRlKCk7XG4gICAgICAgIH1cbiAgICB9XG4gIH0pOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gIGlmIChmb3J3YXJkUmVmU2hpbSAhPT0gZm9yd2FyZFJlZikge1xuICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcbiAgfSBlbHNlIHtcbiAgICBwcm9wcy5yZWYgPSBpbm5lclJlZjtcbiAgfVxuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCBwcm9wcyk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBMaW5rQW5jaG9yLmRpc3BsYXlOYW1lID0gXCJMaW5rQW5jaG9yXCI7XG59XG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuXG5cbnZhciBMaW5rID0gZm9yd2FyZFJlZihmdW5jdGlvbiAoX3JlZjIsIGZvcndhcmRlZFJlZikge1xuICB2YXIgX3JlZjIkY29tcG9uZW50ID0gX3JlZjIuY29tcG9uZW50LFxuICAgICAgY29tcG9uZW50ID0gX3JlZjIkY29tcG9uZW50ID09PSB2b2lkIDAgPyBMaW5rQW5jaG9yIDogX3JlZjIkY29tcG9uZW50LFxuICAgICAgcmVwbGFjZSA9IF9yZWYyLnJlcGxhY2UsXG4gICAgICB0byA9IF9yZWYyLnRvLFxuICAgICAgaW5uZXJSZWYgPSBfcmVmMi5pbm5lclJlZixcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMiwgW1wiY29tcG9uZW50XCIsIFwicmVwbGFjZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPExpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGhpc3RvcnkgPSBjb250ZXh0Lmhpc3Rvcnk7XG4gICAgdmFyIGxvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbiksIGNvbnRleHQubG9jYXRpb24pO1xuICAgIHZhciBocmVmID0gbG9jYXRpb24gPyBoaXN0b3J5LmNyZWF0ZUhyZWYobG9jYXRpb24pIDogXCJcIjtcblxuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBocmVmOiBocmVmLFxuICAgICAgbmF2aWdhdGU6IGZ1bmN0aW9uIG5hdmlnYXRlKCkge1xuICAgICAgICB2YXIgbG9jYXRpb24gPSByZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbik7XG4gICAgICAgIHZhciBtZXRob2QgPSByZXBsYWNlID8gaGlzdG9yeS5yZXBsYWNlIDogaGlzdG9yeS5wdXNoO1xuICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgfVxuICAgIH0pOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcyk7XG4gIH0pO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIHRvVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSk7XG4gIHZhciByZWZUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgY3VycmVudDogUHJvcFR5cGVzLmFueVxuICB9KV0pO1xuICBMaW5rLmRpc3BsYXlOYW1lID0gXCJMaW5rXCI7XG4gIExpbmsucHJvcFR5cGVzID0ge1xuICAgIGlubmVyUmVmOiByZWZUeXBlLFxuICAgIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAgIHJlcGxhY2U6IFByb3BUeXBlcy5ib29sLFxuICAgIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogdG9UeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGZvcndhcmRSZWZTaGltJDEgPSBmdW5jdGlvbiBmb3J3YXJkUmVmU2hpbShDKSB7XG4gIHJldHVybiBDO1xufTtcblxudmFyIGZvcndhcmRSZWYkMSA9IFJlYWN0LmZvcndhcmRSZWY7XG5cbmlmICh0eXBlb2YgZm9yd2FyZFJlZiQxID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYkMSA9IGZvcndhcmRSZWZTaGltJDE7XG59XG5cbmZ1bmN0aW9uIGpvaW5DbGFzc25hbWVzKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgY2xhc3NuYW1lcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBjbGFzc25hbWVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGNsYXNzbmFtZXMuZmlsdGVyKGZ1bmN0aW9uIChpKSB7XG4gICAgcmV0dXJuIGk7XG4gIH0pLmpvaW4oXCIgXCIpO1xufVxuLyoqXG4gKiBBIDxMaW5rPiB3cmFwcGVyIHRoYXQga25vd3MgaWYgaXQncyBcImFjdGl2ZVwiIG9yIG5vdC5cbiAqL1xuXG5cbnZhciBOYXZMaW5rID0gZm9yd2FyZFJlZiQxKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIF9yZWYkYXJpYUN1cnJlbnQgPSBfcmVmW1wiYXJpYS1jdXJyZW50XCJdLFxuICAgICAgYXJpYUN1cnJlbnQgPSBfcmVmJGFyaWFDdXJyZW50ID09PSB2b2lkIDAgPyBcInBhZ2VcIiA6IF9yZWYkYXJpYUN1cnJlbnQsXG4gICAgICBfcmVmJGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYuYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gX3JlZiRhY3RpdmVDbGFzc05hbWUgPT09IHZvaWQgMCA/IFwiYWN0aXZlXCIgOiBfcmVmJGFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZVN0eWxlID0gX3JlZi5hY3RpdmVTdHlsZSxcbiAgICAgIGNsYXNzTmFtZVByb3AgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgIGlzQWN0aXZlUHJvcCA9IF9yZWYuaXNBY3RpdmUsXG4gICAgICBsb2NhdGlvblByb3AgPSBfcmVmLmxvY2F0aW9uLFxuICAgICAgc3RyaWN0ID0gX3JlZi5zdHJpY3QsXG4gICAgICBzdHlsZVByb3AgPSBfcmVmLnN0eWxlLFxuICAgICAgdG8gPSBfcmVmLnRvLFxuICAgICAgaW5uZXJSZWYgPSBfcmVmLmlubmVyUmVmLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImFyaWEtY3VycmVudFwiLCBcImFjdGl2ZUNsYXNzTmFtZVwiLCBcImFjdGl2ZVN0eWxlXCIsIFwiY2xhc3NOYW1lXCIsIFwiZXhhY3RcIiwgXCJpc0FjdGl2ZVwiLCBcImxvY2F0aW9uXCIsIFwic3RyaWN0XCIsIFwic3R5bGVcIiwgXCJ0b1wiLCBcImlubmVyUmVmXCJdKTtcblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChfX1JvdXRlckNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxOYXZMaW5rPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBjdXJyZW50TG9jYXRpb24gPSBsb2NhdGlvblByb3AgfHwgY29udGV4dC5sb2NhdGlvbjtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IG5vcm1hbGl6ZVRvTG9jYXRpb24ocmVzb2x2ZVRvTG9jYXRpb24odG8sIGN1cnJlbnRMb2NhdGlvbiksIGN1cnJlbnRMb2NhdGlvbik7XG4gICAgdmFyIHBhdGggPSB0b0xvY2F0aW9uLnBhdGhuYW1lOyAvLyBSZWdleCB0YWtlbiBmcm9tOiBodHRwczovL2dpdGh1Yi5jb20vcGlsbGFyanMvcGF0aC10by1yZWdleHAvYmxvYi9tYXN0ZXIvaW5kZXguanMjTDIwMlxuXG4gICAgdmFyIGVzY2FwZWRQYXRoID0gcGF0aCAmJiBwYXRoLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18L1xcXFxdKS9nLCBcIlxcXFwkMVwiKTtcbiAgICB2YXIgbWF0Y2ggPSBlc2NhcGVkUGF0aCA/IG1hdGNoUGF0aChjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUsIHtcbiAgICAgIHBhdGg6IGVzY2FwZWRQYXRoLFxuICAgICAgZXhhY3Q6IGV4YWN0LFxuICAgICAgc3RyaWN0OiBzdHJpY3RcbiAgICB9KSA6IG51bGw7XG4gICAgdmFyIGlzQWN0aXZlID0gISEoaXNBY3RpdmVQcm9wID8gaXNBY3RpdmVQcm9wKG1hdGNoLCBjdXJyZW50TG9jYXRpb24pIDogbWF0Y2gpO1xuICAgIHZhciBjbGFzc05hbWUgPSBpc0FjdGl2ZSA/IGpvaW5DbGFzc25hbWVzKGNsYXNzTmFtZVByb3AsIGFjdGl2ZUNsYXNzTmFtZSkgOiBjbGFzc05hbWVQcm9wO1xuICAgIHZhciBzdHlsZSA9IGlzQWN0aXZlID8gX2V4dGVuZHMoe30sIHN0eWxlUHJvcCwge30sIGFjdGl2ZVN0eWxlKSA6IHN0eWxlUHJvcDtcblxuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHtcbiAgICAgIFwiYXJpYS1jdXJyZW50XCI6IGlzQWN0aXZlICYmIGFyaWFDdXJyZW50IHx8IG51bGwsXG4gICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZSxcbiAgICAgIHN0eWxlOiBzdHlsZSxcbiAgICAgIHRvOiB0b0xvY2F0aW9uXG4gICAgfSwgcmVzdCk7IC8vIFJlYWN0IDE1IGNvbXBhdFxuXG5cbiAgICBpZiAoZm9yd2FyZFJlZlNoaW0kMSAhPT0gZm9yd2FyZFJlZiQxKSB7XG4gICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgcHJvcHMpO1xuICB9KTtcbn0pO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIE5hdkxpbmsuZGlzcGxheU5hbWUgPSBcIk5hdkxpbmtcIjtcbiAgdmFyIGFyaWFDdXJyZW50VHlwZSA9IFByb3BUeXBlcy5vbmVPZihbXCJwYWdlXCIsIFwic3RlcFwiLCBcImxvY2F0aW9uXCIsIFwiZGF0ZVwiLCBcInRpbWVcIiwgXCJ0cnVlXCJdKTtcbiAgTmF2TGluay5wcm9wVHlwZXMgPSBfZXh0ZW5kcyh7fSwgTGluay5wcm9wVHlwZXMsIHtcbiAgICBcImFyaWEtY3VycmVudFwiOiBhcmlhQ3VycmVudFR5cGUsXG4gICAgYWN0aXZlQ2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGFjdGl2ZVN0eWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgaXNBY3RpdmU6IFByb3BUeXBlcy5mdW5jLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3RcbiAgfSk7XG59XG5cbmV4cG9ydCB7IEJyb3dzZXJSb3V0ZXIsIEhhc2hSb3V0ZXIsIExpbmssIE5hdkxpbmsgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXJvdXRlci1kb20uanMubWFwXG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuXG4gIHJldHVybiBzZWxmO1xufSIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7IC8vIGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL3Y0LjAuMC1hbHBoYS40L2pzL3NyYy9tb2RhbC5qcyNMNDM2LUw0NDNcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFNjcm9sbGJhcldpZHRoKCkge1xuICB2YXIgc2Nyb2xsRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7IC8vIC5tb2RhbC1zY3JvbGxiYXItbWVhc3VyZSBzdHlsZXMgLy8gaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvdjQuMC4wLWFscGhhLjQvc2Nzcy9fbW9kYWwuc2NzcyNMMTA2LUwxMTNcblxuICBzY3JvbGxEaXYuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xuICBzY3JvbGxEaXYuc3R5bGUudG9wID0gJy05OTk5cHgnO1xuICBzY3JvbGxEaXYuc3R5bGUud2lkdGggPSAnNTBweCc7XG4gIHNjcm9sbERpdi5zdHlsZS5oZWlnaHQgPSAnNTBweCc7XG4gIHNjcm9sbERpdi5zdHlsZS5vdmVyZmxvdyA9ICdzY3JvbGwnO1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHNjcm9sbERpdik7XG4gIHZhciBzY3JvbGxiYXJXaWR0aCA9IHNjcm9sbERpdi5vZmZzZXRXaWR0aCAtIHNjcm9sbERpdi5jbGllbnRXaWR0aDtcbiAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChzY3JvbGxEaXYpO1xuICByZXR1cm4gc2Nyb2xsYmFyV2lkdGg7XG59XG5leHBvcnQgZnVuY3Rpb24gc2V0U2Nyb2xsYmFyV2lkdGgocGFkZGluZykge1xuICBkb2N1bWVudC5ib2R5LnN0eWxlLnBhZGRpbmdSaWdodCA9IHBhZGRpbmcgPiAwID8gcGFkZGluZyArIFwicHhcIiA6IG51bGw7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNCb2R5T3ZlcmZsb3dpbmcoKSB7XG4gIHJldHVybiBkb2N1bWVudC5ib2R5LmNsaWVudFdpZHRoIDwgd2luZG93LmlubmVyV2lkdGg7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0T3JpZ2luYWxCb2R5UGFkZGluZygpIHtcbiAgdmFyIHN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQuYm9keSwgbnVsbCk7XG4gIHJldHVybiBwYXJzZUludChzdHlsZSAmJiBzdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKCdwYWRkaW5nLXJpZ2h0JykgfHwgMCwgMTApO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvbmRpdGlvbmFsbHlVcGRhdGVTY3JvbGxiYXIoKSB7XG4gIHZhciBzY3JvbGxiYXJXaWR0aCA9IGdldFNjcm9sbGJhcldpZHRoKCk7IC8vIGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL3Y0LjAuMC1hbHBoYS42L2pzL3NyYy9tb2RhbC5qcyNMNDMzXG5cbiAgdmFyIGZpeGVkQ29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5maXhlZC10b3AsIC5maXhlZC1ib3R0b20sIC5pcy1maXhlZCwgLnN0aWNreS10b3AnKVswXTtcbiAgdmFyIGJvZHlQYWRkaW5nID0gZml4ZWRDb250ZW50ID8gcGFyc2VJbnQoZml4ZWRDb250ZW50LnN0eWxlLnBhZGRpbmdSaWdodCB8fCAwLCAxMCkgOiAwO1xuXG4gIGlmIChpc0JvZHlPdmVyZmxvd2luZygpKSB7XG4gICAgc2V0U2Nyb2xsYmFyV2lkdGgoYm9keVBhZGRpbmcgKyBzY3JvbGxiYXJXaWR0aCk7XG4gIH1cbn1cbnZhciBnbG9iYWxDc3NNb2R1bGU7XG5leHBvcnQgZnVuY3Rpb24gc2V0R2xvYmFsQ3NzTW9kdWxlKGNzc01vZHVsZSkge1xuICBnbG9iYWxDc3NNb2R1bGUgPSBjc3NNb2R1bGU7XG59XG5leHBvcnQgZnVuY3Rpb24gbWFwVG9Dc3NNb2R1bGVzKGNsYXNzTmFtZSwgY3NzTW9kdWxlKSB7XG4gIGlmIChjbGFzc05hbWUgPT09IHZvaWQgMCkge1xuICAgIGNsYXNzTmFtZSA9ICcnO1xuICB9XG5cbiAgaWYgKGNzc01vZHVsZSA9PT0gdm9pZCAwKSB7XG4gICAgY3NzTW9kdWxlID0gZ2xvYmFsQ3NzTW9kdWxlO1xuICB9XG5cbiAgaWYgKCFjc3NNb2R1bGUpIHJldHVybiBjbGFzc05hbWU7XG4gIHJldHVybiBjbGFzc05hbWUuc3BsaXQoJyAnKS5tYXAoZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gY3NzTW9kdWxlW2NdIHx8IGM7XG4gIH0pLmpvaW4oJyAnKTtcbn1cbi8qKlxuICogUmV0dXJucyBhIG5ldyBvYmplY3Qgd2l0aCB0aGUga2V5L3ZhbHVlIHBhaXJzIGZyb20gYG9iamAgdGhhdCBhcmUgbm90IGluIHRoZSBhcnJheSBgb21pdEtleXNgLlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBvbWl0KG9iaiwgb21pdEtleXMpIHtcbiAgdmFyIHJlc3VsdCA9IHt9O1xuICBPYmplY3Qua2V5cyhvYmopLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIGlmIChvbWl0S2V5cy5pbmRleE9mKGtleSkgPT09IC0xKSB7XG4gICAgICByZXN1bHRba2V5XSA9IG9ialtrZXldO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIFJldHVybnMgYSBmaWx0ZXJlZCBjb3B5IG9mIGFuIG9iamVjdCB3aXRoIG9ubHkgdGhlIHNwZWNpZmllZCBrZXlzLlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBwaWNrKG9iaiwga2V5cykge1xuICB2YXIgcGlja0tleXMgPSBBcnJheS5pc0FycmF5KGtleXMpID8ga2V5cyA6IFtrZXlzXTtcbiAgdmFyIGxlbmd0aCA9IHBpY2tLZXlzLmxlbmd0aDtcbiAgdmFyIGtleTtcbiAgdmFyIHJlc3VsdCA9IHt9O1xuXG4gIHdoaWxlIChsZW5ndGggPiAwKSB7XG4gICAgbGVuZ3RoIC09IDE7XG4gICAga2V5ID0gcGlja0tleXNbbGVuZ3RoXTtcbiAgICByZXN1bHRba2V5XSA9IG9ialtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbnZhciB3YXJuZWQgPSB7fTtcbmV4cG9ydCBmdW5jdGlvbiB3YXJuT25jZShtZXNzYWdlKSB7XG4gIGlmICghd2FybmVkW21lc3NhZ2VdKSB7XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgICB9XG5cbiAgICB3YXJuZWRbbWVzc2FnZV0gPSB0cnVlO1xuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gZGVwcmVjYXRlZChwcm9wVHlwZSwgZXhwbGFuYXRpb24pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSkge1xuICAgIGlmIChwcm9wc1twcm9wTmFtZV0gIT09IG51bGwgJiYgdHlwZW9mIHByb3BzW3Byb3BOYW1lXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHdhcm5PbmNlKFwiXFxcIlwiICsgcHJvcE5hbWUgKyBcIlxcXCIgcHJvcGVydHkgb2YgXFxcIlwiICsgY29tcG9uZW50TmFtZSArIFwiXFxcIiBoYXMgYmVlbiBkZXByZWNhdGVkLlxcblwiICsgZXhwbGFuYXRpb24pO1xuICAgIH1cblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCByZXN0ID0gbmV3IEFycmF5KF9sZW4gPiAzID8gX2xlbiAtIDMgOiAwKSwgX2tleSA9IDM7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIHJlc3RbX2tleSAtIDNdID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9wVHlwZS5hcHBseSh2b2lkIDAsIFtwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWVdLmNvbmNhdChyZXN0KSk7XG4gIH07XG59IC8vIFNoaW0gRWxlbWVudCBpZiBuZWVkZWQgKGUuZy4gaW4gTm9kZSBlbnZpcm9ubWVudClcblxudmFyIEVsZW1lbnQgPSB0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JyAmJiB3aW5kb3cuRWxlbWVudCB8fCBmdW5jdGlvbiAoKSB7fTtcblxuZXhwb3J0IGZ1bmN0aW9uIERPTUVsZW1lbnQocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lKSB7XG4gIGlmICghKHByb3BzW3Byb3BOYW1lXSBpbnN0YW5jZW9mIEVsZW1lbnQpKSB7XG4gICAgcmV0dXJuIG5ldyBFcnJvcignSW52YWxpZCBwcm9wIGAnICsgcHJvcE5hbWUgKyAnYCBzdXBwbGllZCB0byBgJyArIGNvbXBvbmVudE5hbWUgKyAnYC4gRXhwZWN0ZWQgcHJvcCB0byBiZSBhbiBpbnN0YW5jZSBvZiBFbGVtZW50LiBWYWxpZGF0aW9uIGZhaWxlZC4nKTtcbiAgfVxufVxuZXhwb3J0IHZhciB0YXJnZXRQcm9wVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jLCBET01FbGVtZW50LCBQcm9wVHlwZXMuc2hhcGUoe1xuICBjdXJyZW50OiBQcm9wVHlwZXMuYW55XG59KV0pO1xuZXhwb3J0IHZhciB0YWdQcm9wVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuc2hhcGUoe1xuICAkJHR5cGVvZjogUHJvcFR5cGVzLnN5bWJvbCxcbiAgcmVuZGVyOiBQcm9wVHlwZXMuZnVuY1xufSksIFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuc2hhcGUoe1xuICAkJHR5cGVvZjogUHJvcFR5cGVzLnN5bWJvbCxcbiAgcmVuZGVyOiBQcm9wVHlwZXMuZnVuY1xufSldKSldKTtcbi8qIGVzbGludCBrZXktc3BhY2luZzogW1wiZXJyb3JcIiwgeyBhZnRlckNvbG9uOiB0cnVlLCBhbGlnbjogXCJ2YWx1ZVwiIH1dICovXG4vLyBUaGVzZSBhcmUgYWxsIHNldHVwIHRvIG1hdGNoIHdoYXQgaXMgaW4gdGhlIGJvb3RzdHJhcCBfdmFyaWFibGVzLnNjc3Ncbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL3Y0LWRldi9zY3NzL192YXJpYWJsZXMuc2Nzc1xuXG5leHBvcnQgdmFyIFRyYW5zaXRpb25UaW1lb3V0cyA9IHtcbiAgRmFkZTogMTUwLFxuICAvLyAkdHJhbnNpdGlvbi1mYWRlXG4gIENvbGxhcHNlOiAzNTAsXG4gIC8vICR0cmFuc2l0aW9uLWNvbGxhcHNlXG4gIE1vZGFsOiAzMDAsXG4gIC8vICRtb2RhbC10cmFuc2l0aW9uXG4gIENhcm91c2VsOiA2MDAgLy8gJGNhcm91c2VsLXRyYW5zaXRpb25cblxufTsgLy8gRHVwbGljYXRlZCBUcmFuc2l0aW9uLnByb3BUeXBlIGtleXMgdG8gZW5zdXJlIHRoYXQgUmVhY3RzdHJhcCBidWlsZHNcbi8vIGZvciBkaXN0cmlidXRpb24gcHJvcGVybHkgZXhjbHVkZSB0aGVzZSBrZXlzIGZvciBuZXN0ZWQgY2hpbGQgSFRNTCBhdHRyaWJ1dGVzXG4vLyBzaW5jZSBgcmVhY3QtdHJhbnNpdGlvbi1ncm91cGAgcmVtb3ZlcyBwcm9wVHlwZXMgaW4gcHJvZHVjdGlvbiBidWlsZHMuXG5cbmV4cG9ydCB2YXIgVHJhbnNpdGlvblByb3BUeXBlS2V5cyA9IFsnaW4nLCAnbW91bnRPbkVudGVyJywgJ3VubW91bnRPbkV4aXQnLCAnYXBwZWFyJywgJ2VudGVyJywgJ2V4aXQnLCAndGltZW91dCcsICdvbkVudGVyJywgJ29uRW50ZXJpbmcnLCAnb25FbnRlcmVkJywgJ29uRXhpdCcsICdvbkV4aXRpbmcnLCAnb25FeGl0ZWQnXTtcbmV4cG9ydCB2YXIgVHJhbnNpdGlvblN0YXR1c2VzID0ge1xuICBFTlRFUklORzogJ2VudGVyaW5nJyxcbiAgRU5URVJFRDogJ2VudGVyZWQnLFxuICBFWElUSU5HOiAnZXhpdGluZycsXG4gIEVYSVRFRDogJ2V4aXRlZCdcbn07XG5leHBvcnQgdmFyIGtleUNvZGVzID0ge1xuICBlc2M6IDI3LFxuICBzcGFjZTogMzIsXG4gIGVudGVyOiAxMyxcbiAgdGFiOiA5LFxuICB1cDogMzgsXG4gIGRvd246IDQwLFxuICBob21lOiAzNixcbiAgZW5kOiAzNSxcbiAgbjogNzgsXG4gIHA6IDgwXG59O1xuZXhwb3J0IHZhciBQb3BwZXJQbGFjZW1lbnRzID0gWydhdXRvLXN0YXJ0JywgJ2F1dG8nLCAnYXV0by1lbmQnLCAndG9wLXN0YXJ0JywgJ3RvcCcsICd0b3AtZW5kJywgJ3JpZ2h0LXN0YXJ0JywgJ3JpZ2h0JywgJ3JpZ2h0LWVuZCcsICdib3R0b20tZW5kJywgJ2JvdHRvbScsICdib3R0b20tc3RhcnQnLCAnbGVmdC1lbmQnLCAnbGVmdCcsICdsZWZ0LXN0YXJ0J107XG5leHBvcnQgdmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5leHBvcnQgZnVuY3Rpb24gaXNSZWFjdFJlZk9iaih0YXJnZXQpIHtcbiAgaWYgKHRhcmdldCAmJiB0eXBlb2YgdGFyZ2V0ID09PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiAnY3VycmVudCcgaW4gdGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBnZXRUYWcodmFsdWUpIHtcbiAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/ICdbb2JqZWN0IFVuZGVmaW5lZF0nIDogJ1tvYmplY3QgTnVsbF0nO1xuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b051bWJlcih2YWx1ZSkge1xuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgdmFyIE5BTiA9IDAgLyAwO1xuXG4gIGlmICh0eXBlID09PSAnbnVtYmVyJykge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIGlmICh0eXBlID09PSAnc3ltYm9sJyB8fCB0eXBlID09PSAnb2JqZWN0JyAmJiBnZXRUYWcodmFsdWUpID09PSAnW29iamVjdCBTeW1ib2xdJykge1xuICAgIHJldHVybiBOQU47XG4gIH1cblxuICBpZiAoaXNPYmplY3QodmFsdWUpKSB7XG4gICAgdmFyIG90aGVyID0gdHlwZW9mIHZhbHVlLnZhbHVlT2YgPT09ICdmdW5jdGlvbicgPyB2YWx1ZS52YWx1ZU9mKCkgOiB2YWx1ZTtcbiAgICB2YWx1ZSA9IGlzT2JqZWN0KG90aGVyKSA/IFwiXCIgKyBvdGhlciA6IG90aGVyO1xuICB9XG5cbiAgaWYgKHR5cGUgIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHZhbHVlID09PSAwID8gdmFsdWUgOiArdmFsdWU7XG4gIH1cblxuICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoL15cXHMrfFxccyskL2csICcnKTtcbiAgdmFyIGlzQmluYXJ5ID0gL14wYlswMV0rJC9pLnRlc3QodmFsdWUpO1xuICByZXR1cm4gaXNCaW5hcnkgfHwgL14wb1swLTddKyQvaS50ZXN0KHZhbHVlKSA/IHBhcnNlSW50KHZhbHVlLnNsaWNlKDIpLCBpc0JpbmFyeSA/IDIgOiA4KSA6IC9eWy0rXTB4WzAtOWEtZl0rJC9pLnRlc3QodmFsdWUpID8gTkFOIDogK3ZhbHVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiAodHlwZSA9PT0gJ29iamVjdCcgfHwgdHlwZSA9PT0gJ2Z1bmN0aW9uJyk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNGdW5jdGlvbih2YWx1ZSkge1xuICBpZiAoIWlzT2JqZWN0KHZhbHVlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciB0YWcgPSBnZXRUYWcodmFsdWUpO1xuICByZXR1cm4gdGFnID09PSAnW29iamVjdCBGdW5jdGlvbl0nIHx8IHRhZyA9PT0gJ1tvYmplY3QgQXN5bmNGdW5jdGlvbl0nIHx8IHRhZyA9PT0gJ1tvYmplY3QgR2VuZXJhdG9yRnVuY3Rpb25dJyB8fCB0YWcgPT09ICdbb2JqZWN0IFByb3h5XSc7XG59XG5leHBvcnQgZnVuY3Rpb24gZmluZERPTUVsZW1lbnRzKHRhcmdldCkge1xuICBpZiAoaXNSZWFjdFJlZk9iaih0YXJnZXQpKSB7XG4gICAgcmV0dXJuIHRhcmdldC5jdXJyZW50O1xuICB9XG5cbiAgaWYgKGlzRnVuY3Rpb24odGFyZ2V0KSkge1xuICAgIHJldHVybiB0YXJnZXQoKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgdGFyZ2V0ID09PSAnc3RyaW5nJyAmJiBjYW5Vc2VET00pIHtcbiAgICB2YXIgc2VsZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0YXJnZXQpO1xuXG4gICAgaWYgKCFzZWxlY3Rpb24ubGVuZ3RoKSB7XG4gICAgICBzZWxlY3Rpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI1wiICsgdGFyZ2V0KTtcbiAgICB9XG5cbiAgICBpZiAoIXNlbGVjdGlvbi5sZW5ndGgpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSB0YXJnZXQgJ1wiICsgdGFyZ2V0ICsgXCInIGNvdWxkIG5vdCBiZSBpZGVudGlmaWVkIGluIHRoZSBkb20sIHRpcDogY2hlY2sgc3BlbGxpbmdcIik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHNlbGVjdGlvbjtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNBcnJheU9yTm9kZUxpc3QoZWxzKSB7XG4gIGlmIChlbHMgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gQXJyYXkuaXNBcnJheShlbHMpIHx8IGNhblVzZURPTSAmJiB0eXBlb2YgZWxzLmxlbmd0aCA9PT0gJ251bWJlcic7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCwgYWxsRWxlbWVudHMpIHtcbiAgdmFyIGVscyA9IGZpbmRET01FbGVtZW50cyh0YXJnZXQpO1xuXG4gIGlmIChhbGxFbGVtZW50cykge1xuICAgIGlmIChpc0FycmF5T3JOb2RlTGlzdChlbHMpKSB7XG4gICAgICByZXR1cm4gZWxzO1xuICAgIH1cblxuICAgIGlmIChlbHMgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiBbXTtcbiAgICB9XG5cbiAgICByZXR1cm4gW2Vsc107XG4gIH0gZWxzZSB7XG4gICAgaWYgKGlzQXJyYXlPck5vZGVMaXN0KGVscykpIHtcbiAgICAgIHJldHVybiBlbHNbMF07XG4gICAgfVxuXG4gICAgcmV0dXJuIGVscztcbiAgfVxufVxuZXhwb3J0IHZhciBkZWZhdWx0VG9nZ2xlRXZlbnRzID0gWyd0b3VjaHN0YXJ0JywgJ2NsaWNrJ107XG5leHBvcnQgZnVuY3Rpb24gYWRkTXVsdGlwbGVFdmVudExpc3RlbmVycyhfZWxzLCBoYW5kbGVyLCBfZXZlbnRzLCB1c2VDYXB0dXJlKSB7XG4gIHZhciBlbHMgPSBfZWxzO1xuXG4gIGlmICghaXNBcnJheU9yTm9kZUxpc3QoZWxzKSkge1xuICAgIGVscyA9IFtlbHNdO1xuICB9XG5cbiAgdmFyIGV2ZW50cyA9IF9ldmVudHM7XG5cbiAgaWYgKHR5cGVvZiBldmVudHMgPT09ICdzdHJpbmcnKSB7XG4gICAgZXZlbnRzID0gZXZlbnRzLnNwbGl0KC9cXHMrLyk7XG4gIH1cblxuICBpZiAoIWlzQXJyYXlPck5vZGVMaXN0KGVscykgfHwgdHlwZW9mIGhhbmRsZXIgIT09ICdmdW5jdGlvbicgfHwgIUFycmF5LmlzQXJyYXkoZXZlbnRzKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlxcbiAgICAgIFRoZSBmaXJzdCBhcmd1bWVudCBvZiB0aGlzIGZ1bmN0aW9uIG11c3QgYmUgRE9NIG5vZGUgb3IgYW4gYXJyYXkgb24gRE9NIG5vZGVzIG9yIE5vZGVMaXN0LlxcbiAgICAgIFRoZSBzZWNvbmQgbXVzdCBiZSBhIGZ1bmN0aW9uLlxcbiAgICAgIFRoZSB0aGlyZCBpcyBhIHN0cmluZyBvciBhbiBhcnJheSBvZiBzdHJpbmdzIHRoYXQgcmVwcmVzZW50cyBET00gZXZlbnRzXFxuICAgIFwiKTtcbiAgfVxuXG4gIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoZXZlbnRzLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGVscywgZnVuY3Rpb24gKGVsKSB7XG4gICAgICBlbC5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBoYW5kbGVyLCB1c2VDYXB0dXJlKTtcbiAgICB9KTtcbiAgfSk7XG4gIHJldHVybiBmdW5jdGlvbiByZW1vdmVFdmVudHMoKSB7XG4gICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChldmVudHMsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChlbHMsIGZ1bmN0aW9uIChlbCkge1xuICAgICAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBoYW5kbGVyLCB1c2VDYXB0dXJlKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xufVxuZXhwb3J0IHZhciBmb2N1c2FibGVFbGVtZW50cyA9IFsnYVtocmVmXScsICdhcmVhW2hyZWZdJywgJ2lucHV0Om5vdChbZGlzYWJsZWRdKTpub3QoW3R5cGU9aGlkZGVuXSknLCAnc2VsZWN0Om5vdChbZGlzYWJsZWRdKScsICd0ZXh0YXJlYTpub3QoW2Rpc2FibGVkXSknLCAnYnV0dG9uOm5vdChbZGlzYWJsZWRdKScsICdvYmplY3QnLCAnZW1iZWQnLCAnW3RhYmluZGV4XTpub3QoLm1vZGFsKScsICdhdWRpb1tjb250cm9sc10nLCAndmlkZW9bY29udHJvbHNdJywgJ1tjb250ZW50ZWRpdGFibGVdOm5vdChbY29udGVudGVkaXRhYmxlPVwiZmFsc2VcIl0pJ107IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0Jztcbi8qKlxuICogRHJvcGRvd25Db250ZXh0XG4gKiB7XG4gKiAgdG9nZ2xlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICogIGlzT3BlbjogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAqICBkaXJlY3Rpb246IFByb3BUeXBlcy5vbmVPZihbJ3VwJywgJ2Rvd24nLCAnbGVmdCcsICdyaWdodCddKS5pc1JlcXVpcmVkLFxuICogIGluTmF2YmFyOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICogIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbFxuICogfVxuICovXG5cbmV4cG9ydCB2YXIgRHJvcGRvd25Db250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCh7fSk7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfYXNzZXJ0VGhpc0luaXRpYWxpemVkIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWRcIjtcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZVwiO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7IERyb3Bkb3duQ29udGV4dCB9IGZyb20gJy4vRHJvcGRvd25Db250ZXh0JztcbmltcG9ydCB7IG1hcFRvQ3NzTW9kdWxlcywgb21pdCwgdGFnUHJvcFR5cGUgfSBmcm9tICcuL3V0aWxzJztcbnZhciBwcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgYWN0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICBkaXZpZGVyOiBQcm9wVHlwZXMuYm9vbCxcbiAgdGFnOiB0YWdQcm9wVHlwZSxcbiAgaGVhZGVyOiBQcm9wVHlwZXMuYm9vbCxcbiAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzTW9kdWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICB0b2dnbGU6IFByb3BUeXBlcy5ib29sXG59O1xudmFyIGRlZmF1bHRQcm9wcyA9IHtcbiAgdGFnOiAnYnV0dG9uJyxcbiAgdG9nZ2xlOiB0cnVlXG59O1xuXG52YXIgRHJvcGRvd25JdGVtID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKERyb3Bkb3duSXRlbSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gRHJvcGRvd25JdGVtKHByb3BzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMpIHx8IHRoaXM7XG4gICAgX3RoaXMub25DbGljayA9IF90aGlzLm9uQ2xpY2suYmluZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgX3RoaXMuZ2V0VGFiSW5kZXggPSBfdGhpcy5nZXRUYWJJbmRleC5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gRHJvcGRvd25JdGVtLnByb3RvdHlwZTtcblxuICBfcHJvdG8ub25DbGljayA9IGZ1bmN0aW9uIG9uQ2xpY2soZSkge1xuICAgIGlmICh0aGlzLnByb3BzLmRpc2FibGVkIHx8IHRoaXMucHJvcHMuaGVhZGVyIHx8IHRoaXMucHJvcHMuZGl2aWRlcikge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnByb3BzLm9uQ2xpY2spIHtcbiAgICAgIHRoaXMucHJvcHMub25DbGljayhlKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5wcm9wcy50b2dnbGUpIHtcbiAgICAgIHRoaXMuY29udGV4dC50b2dnbGUoZSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5nZXRUYWJJbmRleCA9IGZ1bmN0aW9uIGdldFRhYkluZGV4KCkge1xuICAgIGlmICh0aGlzLnByb3BzLmRpc2FibGVkIHx8IHRoaXMucHJvcHMuaGVhZGVyIHx8IHRoaXMucHJvcHMuZGl2aWRlcikge1xuICAgICAgcmV0dXJuICctMSc7XG4gICAgfVxuXG4gICAgcmV0dXJuICcwJztcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciB0YWJJbmRleCA9IHRoaXMuZ2V0VGFiSW5kZXgoKTtcbiAgICB2YXIgcm9sZSA9IHRhYkluZGV4ID4gLTEgPyAnbWVudWl0ZW0nIDogdW5kZWZpbmVkO1xuXG4gICAgdmFyIF9vbWl0ID0gb21pdCh0aGlzLnByb3BzLCBbJ3RvZ2dsZSddKSxcbiAgICAgICAgY2xhc3NOYW1lID0gX29taXQuY2xhc3NOYW1lLFxuICAgICAgICBjc3NNb2R1bGUgPSBfb21pdC5jc3NNb2R1bGUsXG4gICAgICAgIGRpdmlkZXIgPSBfb21pdC5kaXZpZGVyLFxuICAgICAgICBUYWcgPSBfb21pdC50YWcsXG4gICAgICAgIGhlYWRlciA9IF9vbWl0LmhlYWRlcixcbiAgICAgICAgYWN0aXZlID0gX29taXQuYWN0aXZlLFxuICAgICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9vbWl0LCBbXCJjbGFzc05hbWVcIiwgXCJjc3NNb2R1bGVcIiwgXCJkaXZpZGVyXCIsIFwidGFnXCIsIFwiaGVhZGVyXCIsIFwiYWN0aXZlXCJdKTtcblxuICAgIHZhciBjbGFzc2VzID0gbWFwVG9Dc3NNb2R1bGVzKGNsYXNzTmFtZXMoY2xhc3NOYW1lLCB7XG4gICAgICBkaXNhYmxlZDogcHJvcHMuZGlzYWJsZWQsXG4gICAgICAnZHJvcGRvd24taXRlbSc6ICFkaXZpZGVyICYmICFoZWFkZXIsXG4gICAgICBhY3RpdmU6IGFjdGl2ZSxcbiAgICAgICdkcm9wZG93bi1oZWFkZXInOiBoZWFkZXIsXG4gICAgICAnZHJvcGRvd24tZGl2aWRlcic6IGRpdmlkZXJcbiAgICB9KSwgY3NzTW9kdWxlKTtcblxuICAgIGlmIChUYWcgPT09ICdidXR0b24nKSB7XG4gICAgICBpZiAoaGVhZGVyKSB7XG4gICAgICAgIFRhZyA9ICdoNic7XG4gICAgICB9IGVsc2UgaWYgKGRpdmlkZXIpIHtcbiAgICAgICAgVGFnID0gJ2Rpdic7XG4gICAgICB9IGVsc2UgaWYgKHByb3BzLmhyZWYpIHtcbiAgICAgICAgVGFnID0gJ2EnO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFRhZywgX2V4dGVuZHMoe1xuICAgICAgdHlwZTogVGFnID09PSAnYnV0dG9uJyAmJiAocHJvcHMub25DbGljayB8fCB0aGlzLnByb3BzLnRvZ2dsZSkgPyAnYnV0dG9uJyA6IHVuZGVmaW5lZFxuICAgIH0sIHByb3BzLCB7XG4gICAgICB0YWJJbmRleDogdGFiSW5kZXgsXG4gICAgICByb2xlOiByb2xlLFxuICAgICAgY2xhc3NOYW1lOiBjbGFzc2VzLFxuICAgICAgb25DbGljazogdGhpcy5vbkNsaWNrXG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBEcm9wZG93bkl0ZW07XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbkRyb3Bkb3duSXRlbS5wcm9wVHlwZXMgPSBwcm9wVHlwZXM7XG5Ecm9wZG93bkl0ZW0uZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuRHJvcGRvd25JdGVtLmNvbnRleHRUeXBlID0gRHJvcGRvd25Db250ZXh0O1xuZXhwb3J0IGRlZmF1bHQgRHJvcGRvd25JdGVtOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHsgbWFwVG9Dc3NNb2R1bGVzLCB0YWdQcm9wVHlwZSB9IGZyb20gJy4vdXRpbHMnO1xudmFyIHByb3BUeXBlcyA9IHtcbiAgdGFnOiB0YWdQcm9wVHlwZSxcbiAgZmx1aWQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5ib29sLCBQcm9wVHlwZXMuc3RyaW5nXSksXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzTW9kdWxlOiBQcm9wVHlwZXMub2JqZWN0XG59O1xudmFyIGRlZmF1bHRQcm9wcyA9IHtcbiAgdGFnOiAnZGl2J1xufTtcblxudmFyIENvbnRhaW5lciA9IGZ1bmN0aW9uIENvbnRhaW5lcihwcm9wcykge1xuICB2YXIgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgY3NzTW9kdWxlID0gcHJvcHMuY3NzTW9kdWxlLFxuICAgICAgZmx1aWQgPSBwcm9wcy5mbHVpZCxcbiAgICAgIFRhZyA9IHByb3BzLnRhZyxcbiAgICAgIGF0dHJpYnV0ZXMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgW1wiY2xhc3NOYW1lXCIsIFwiY3NzTW9kdWxlXCIsIFwiZmx1aWRcIiwgXCJ0YWdcIl0pO1xuXG4gIHZhciBjb250YWluZXJDbGFzcyA9ICdjb250YWluZXInO1xuXG4gIGlmIChmbHVpZCA9PT0gdHJ1ZSkge1xuICAgIGNvbnRhaW5lckNsYXNzID0gJ2NvbnRhaW5lci1mbHVpZCc7XG4gIH0gZWxzZSBpZiAoZmx1aWQpIHtcbiAgICBjb250YWluZXJDbGFzcyA9IFwiY29udGFpbmVyLVwiICsgZmx1aWQ7XG4gIH1cblxuICB2YXIgY2xhc3NlcyA9IG1hcFRvQ3NzTW9kdWxlcyhjbGFzc05hbWVzKGNsYXNzTmFtZSwgY29udGFpbmVyQ2xhc3MpLCBjc3NNb2R1bGUpO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChUYWcsIF9leHRlbmRzKHt9LCBhdHRyaWJ1dGVzLCB7XG4gICAgY2xhc3NOYW1lOiBjbGFzc2VzXG4gIH0pKTtcbn07XG5cbkNvbnRhaW5lci5wcm9wVHlwZXMgPSBwcm9wVHlwZXM7XG5Db250YWluZXIuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ29udGFpbmVyOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHsgbWFwVG9Dc3NNb2R1bGVzLCB0YWdQcm9wVHlwZSB9IGZyb20gJy4vdXRpbHMnO1xudmFyIHJvd0NvbFdpZHRocyA9IFsneHMnLCAnc20nLCAnbWQnLCAnbGcnLCAneGwnXTtcbnZhciByb3dDb2xzUHJvcFR5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSk7XG52YXIgcHJvcFR5cGVzID0ge1xuICB0YWc6IHRhZ1Byb3BUeXBlLFxuICBub0d1dHRlcnM6IFByb3BUeXBlcy5ib29sLFxuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzc01vZHVsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgZm9ybTogUHJvcFR5cGVzLmJvb2wsXG4gIHhzOiByb3dDb2xzUHJvcFR5cGUsXG4gIHNtOiByb3dDb2xzUHJvcFR5cGUsXG4gIG1kOiByb3dDb2xzUHJvcFR5cGUsXG4gIGxnOiByb3dDb2xzUHJvcFR5cGUsXG4gIHhsOiByb3dDb2xzUHJvcFR5cGVcbn07XG52YXIgZGVmYXVsdFByb3BzID0ge1xuICB0YWc6ICdkaXYnLFxuICB3aWR0aHM6IHJvd0NvbFdpZHRoc1xufTtcblxudmFyIFJvdyA9IGZ1bmN0aW9uIFJvdyhwcm9wcykge1xuICB2YXIgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgY3NzTW9kdWxlID0gcHJvcHMuY3NzTW9kdWxlLFxuICAgICAgbm9HdXR0ZXJzID0gcHJvcHMubm9HdXR0ZXJzLFxuICAgICAgVGFnID0gcHJvcHMudGFnLFxuICAgICAgZm9ybSA9IHByb3BzLmZvcm0sXG4gICAgICB3aWR0aHMgPSBwcm9wcy53aWR0aHMsXG4gICAgICBhdHRyaWJ1dGVzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIFtcImNsYXNzTmFtZVwiLCBcImNzc01vZHVsZVwiLCBcIm5vR3V0dGVyc1wiLCBcInRhZ1wiLCBcImZvcm1cIiwgXCJ3aWR0aHNcIl0pO1xuXG4gIHZhciBjb2xDbGFzc2VzID0gW107XG4gIHdpZHRocy5mb3JFYWNoKGZ1bmN0aW9uIChjb2xXaWR0aCwgaSkge1xuICAgIHZhciBjb2xTaXplID0gcHJvcHNbY29sV2lkdGhdO1xuICAgIGRlbGV0ZSBhdHRyaWJ1dGVzW2NvbFdpZHRoXTtcblxuICAgIGlmICghY29sU2l6ZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBpc1hzID0gIWk7XG4gICAgY29sQ2xhc3Nlcy5wdXNoKGlzWHMgPyBcInJvdy1jb2xzLVwiICsgY29sU2l6ZSA6IFwicm93LWNvbHMtXCIgKyBjb2xXaWR0aCArIFwiLVwiICsgY29sU2l6ZSk7XG4gIH0pO1xuICB2YXIgY2xhc3NlcyA9IG1hcFRvQ3NzTW9kdWxlcyhjbGFzc05hbWVzKGNsYXNzTmFtZSwgbm9HdXR0ZXJzID8gJ25vLWd1dHRlcnMnIDogbnVsbCwgZm9ybSA/ICdmb3JtLXJvdycgOiAncm93JywgY29sQ2xhc3NlcyksIGNzc01vZHVsZSk7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFRhZywgX2V4dGVuZHMoe30sIGF0dHJpYnV0ZXMsIHtcbiAgICBjbGFzc05hbWU6IGNsYXNzZXNcbiAgfSkpO1xufTtcblxuUm93LnByb3BUeXBlcyA9IHByb3BUeXBlcztcblJvdy5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBSb3c7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgeyBtYXBUb0Nzc01vZHVsZXMsIHRhZ1Byb3BUeXBlLCBpc09iamVjdCB9IGZyb20gJy4vdXRpbHMnO1xudmFyIGNvbFdpZHRocyA9IFsneHMnLCAnc20nLCAnbWQnLCAnbGcnLCAneGwnXTtcbnZhciBzdHJpbmdPck51bWJlclByb3AgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSk7XG52YXIgY29sdW1uUHJvcHMgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuYm9vbCwgUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLnNoYXBlKHtcbiAgc2l6ZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmJvb2wsIFByb3BUeXBlcy5udW1iZXIsIFByb3BUeXBlcy5zdHJpbmddKSxcbiAgb3JkZXI6IHN0cmluZ09yTnVtYmVyUHJvcCxcbiAgb2Zmc2V0OiBzdHJpbmdPck51bWJlclByb3Bcbn0pXSk7XG52YXIgcHJvcFR5cGVzID0ge1xuICB0YWc6IHRhZ1Byb3BUeXBlLFxuICB4czogY29sdW1uUHJvcHMsXG4gIHNtOiBjb2x1bW5Qcm9wcyxcbiAgbWQ6IGNvbHVtblByb3BzLFxuICBsZzogY29sdW1uUHJvcHMsXG4gIHhsOiBjb2x1bW5Qcm9wcyxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3NNb2R1bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gIHdpZHRoczogUHJvcFR5cGVzLmFycmF5XG59O1xudmFyIGRlZmF1bHRQcm9wcyA9IHtcbiAgdGFnOiAnZGl2JyxcbiAgd2lkdGhzOiBjb2xXaWR0aHNcbn07XG5cbnZhciBnZXRDb2x1bW5TaXplQ2xhc3MgPSBmdW5jdGlvbiBnZXRDb2x1bW5TaXplQ2xhc3MoaXNYcywgY29sV2lkdGgsIGNvbFNpemUpIHtcbiAgaWYgKGNvbFNpemUgPT09IHRydWUgfHwgY29sU2l6ZSA9PT0gJycpIHtcbiAgICByZXR1cm4gaXNYcyA/ICdjb2wnIDogXCJjb2wtXCIgKyBjb2xXaWR0aDtcbiAgfSBlbHNlIGlmIChjb2xTaXplID09PSAnYXV0bycpIHtcbiAgICByZXR1cm4gaXNYcyA/ICdjb2wtYXV0bycgOiBcImNvbC1cIiArIGNvbFdpZHRoICsgXCItYXV0b1wiO1xuICB9XG5cbiAgcmV0dXJuIGlzWHMgPyBcImNvbC1cIiArIGNvbFNpemUgOiBcImNvbC1cIiArIGNvbFdpZHRoICsgXCItXCIgKyBjb2xTaXplO1xufTtcblxudmFyIENvbCA9IGZ1bmN0aW9uIENvbChwcm9wcykge1xuICB2YXIgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgY3NzTW9kdWxlID0gcHJvcHMuY3NzTW9kdWxlLFxuICAgICAgd2lkdGhzID0gcHJvcHMud2lkdGhzLFxuICAgICAgVGFnID0gcHJvcHMudGFnLFxuICAgICAgYXR0cmlidXRlcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBbXCJjbGFzc05hbWVcIiwgXCJjc3NNb2R1bGVcIiwgXCJ3aWR0aHNcIiwgXCJ0YWdcIl0pO1xuXG4gIHZhciBjb2xDbGFzc2VzID0gW107XG4gIHdpZHRocy5mb3JFYWNoKGZ1bmN0aW9uIChjb2xXaWR0aCwgaSkge1xuICAgIHZhciBjb2x1bW5Qcm9wID0gcHJvcHNbY29sV2lkdGhdO1xuICAgIGRlbGV0ZSBhdHRyaWJ1dGVzW2NvbFdpZHRoXTtcblxuICAgIGlmICghY29sdW1uUHJvcCAmJiBjb2x1bW5Qcm9wICE9PSAnJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBpc1hzID0gIWk7XG5cbiAgICBpZiAoaXNPYmplY3QoY29sdW1uUHJvcCkpIHtcbiAgICAgIHZhciBfY2xhc3NOYW1lcztcblxuICAgICAgdmFyIGNvbFNpemVJbnRlcmZpeCA9IGlzWHMgPyAnLScgOiBcIi1cIiArIGNvbFdpZHRoICsgXCItXCI7XG4gICAgICB2YXIgY29sQ2xhc3MgPSBnZXRDb2x1bW5TaXplQ2xhc3MoaXNYcywgY29sV2lkdGgsIGNvbHVtblByb3Auc2l6ZSk7XG4gICAgICBjb2xDbGFzc2VzLnB1c2gobWFwVG9Dc3NNb2R1bGVzKGNsYXNzTmFtZXMoKF9jbGFzc05hbWVzID0ge30sIF9jbGFzc05hbWVzW2NvbENsYXNzXSA9IGNvbHVtblByb3Auc2l6ZSB8fCBjb2x1bW5Qcm9wLnNpemUgPT09ICcnLCBfY2xhc3NOYW1lc1tcIm9yZGVyXCIgKyBjb2xTaXplSW50ZXJmaXggKyBjb2x1bW5Qcm9wLm9yZGVyXSA9IGNvbHVtblByb3Aub3JkZXIgfHwgY29sdW1uUHJvcC5vcmRlciA9PT0gMCwgX2NsYXNzTmFtZXNbXCJvZmZzZXRcIiArIGNvbFNpemVJbnRlcmZpeCArIGNvbHVtblByb3Aub2Zmc2V0XSA9IGNvbHVtblByb3Aub2Zmc2V0IHx8IGNvbHVtblByb3Aub2Zmc2V0ID09PSAwLCBfY2xhc3NOYW1lcykpLCBjc3NNb2R1bGUpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIF9jb2xDbGFzcyA9IGdldENvbHVtblNpemVDbGFzcyhpc1hzLCBjb2xXaWR0aCwgY29sdW1uUHJvcCk7XG5cbiAgICAgIGNvbENsYXNzZXMucHVzaChfY29sQ2xhc3MpO1xuICAgIH1cbiAgfSk7XG5cbiAgaWYgKCFjb2xDbGFzc2VzLmxlbmd0aCkge1xuICAgIGNvbENsYXNzZXMucHVzaCgnY29sJyk7XG4gIH1cblxuICB2YXIgY2xhc3NlcyA9IG1hcFRvQ3NzTW9kdWxlcyhjbGFzc05hbWVzKGNsYXNzTmFtZSwgY29sQ2xhc3NlcyksIGNzc01vZHVsZSk7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFRhZywgX2V4dGVuZHMoe30sIGF0dHJpYnV0ZXMsIHtcbiAgICBjbGFzc05hbWU6IGNsYXNzZXNcbiAgfSkpO1xufTtcblxuQ29sLnByb3BUeXBlcyA9IHByb3BUeXBlcztcbkNvbC5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb2w7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfYXNzZXJ0VGhpc0luaXRpYWxpemVkIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWRcIjtcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZVwiO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7IG1hcFRvQ3NzTW9kdWxlcywgdGFnUHJvcFR5cGUgfSBmcm9tICcuL3V0aWxzJztcbnZhciBwcm9wVHlwZXMgPSB7XG4gIGFjdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gICdhcmlhLWxhYmVsJzogUHJvcFR5cGVzLnN0cmluZyxcbiAgYmxvY2s6IFByb3BUeXBlcy5ib29sLFxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICBvdXRsaW5lOiBQcm9wVHlwZXMuYm9vbCxcbiAgdGFnOiB0YWdQcm9wVHlwZSxcbiAgaW5uZXJSZWY6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc3RyaW5nXSksXG4gIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICBzaXplOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzTW9kdWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICBjbG9zZTogUHJvcFR5cGVzLmJvb2xcbn07XG52YXIgZGVmYXVsdFByb3BzID0ge1xuICBjb2xvcjogJ3NlY29uZGFyeScsXG4gIHRhZzogJ2J1dHRvbidcbn07XG5cbnZhciBCdXR0b24gPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoQnV0dG9uLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBCdXR0b24ocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICBfdGhpcy5vbkNsaWNrID0gX3RoaXMub25DbGljay5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gQnV0dG9uLnByb3RvdHlwZTtcblxuICBfcHJvdG8ub25DbGljayA9IGZ1bmN0aW9uIG9uQ2xpY2soZSkge1xuICAgIGlmICh0aGlzLnByb3BzLmRpc2FibGVkKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHRoaXMucHJvcHMub25DbGljaykge1xuICAgICAgdGhpcy5wcm9wcy5vbkNsaWNrKGUpO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGFjdGl2ZSA9IF90aGlzJHByb3BzLmFjdGl2ZSxcbiAgICAgICAgYXJpYUxhYmVsID0gX3RoaXMkcHJvcHNbJ2FyaWEtbGFiZWwnXSxcbiAgICAgICAgYmxvY2sgPSBfdGhpcyRwcm9wcy5ibG9jayxcbiAgICAgICAgY2xhc3NOYW1lID0gX3RoaXMkcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgICBjbG9zZSA9IF90aGlzJHByb3BzLmNsb3NlLFxuICAgICAgICBjc3NNb2R1bGUgPSBfdGhpcyRwcm9wcy5jc3NNb2R1bGUsXG4gICAgICAgIGNvbG9yID0gX3RoaXMkcHJvcHMuY29sb3IsXG4gICAgICAgIG91dGxpbmUgPSBfdGhpcyRwcm9wcy5vdXRsaW5lLFxuICAgICAgICBzaXplID0gX3RoaXMkcHJvcHMuc2l6ZSxcbiAgICAgICAgVGFnID0gX3RoaXMkcHJvcHMudGFnLFxuICAgICAgICBpbm5lclJlZiA9IF90aGlzJHByb3BzLmlubmVyUmVmLFxuICAgICAgICBhdHRyaWJ1dGVzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3RoaXMkcHJvcHMsIFtcImFjdGl2ZVwiLCBcImFyaWEtbGFiZWxcIiwgXCJibG9ja1wiLCBcImNsYXNzTmFtZVwiLCBcImNsb3NlXCIsIFwiY3NzTW9kdWxlXCIsIFwiY29sb3JcIiwgXCJvdXRsaW5lXCIsIFwic2l6ZVwiLCBcInRhZ1wiLCBcImlubmVyUmVmXCJdKTtcblxuICAgIGlmIChjbG9zZSAmJiB0eXBlb2YgYXR0cmlidXRlcy5jaGlsZHJlbiA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGF0dHJpYnV0ZXMuY2hpbGRyZW4gPSBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7XG4gICAgICAgIFwiYXJpYS1oaWRkZW5cIjogdHJ1ZVxuICAgICAgfSwgXCJcXHhEN1wiKTtcbiAgICB9XG5cbiAgICB2YXIgYnRuT3V0bGluZUNvbG9yID0gXCJidG5cIiArIChvdXRsaW5lID8gJy1vdXRsaW5lJyA6ICcnKSArIFwiLVwiICsgY29sb3I7XG4gICAgdmFyIGNsYXNzZXMgPSBtYXBUb0Nzc01vZHVsZXMoY2xhc3NOYW1lcyhjbGFzc05hbWUsIHtcbiAgICAgIGNsb3NlOiBjbG9zZVxuICAgIH0sIGNsb3NlIHx8ICdidG4nLCBjbG9zZSB8fCBidG5PdXRsaW5lQ29sb3IsIHNpemUgPyBcImJ0bi1cIiArIHNpemUgOiBmYWxzZSwgYmxvY2sgPyAnYnRuLWJsb2NrJyA6IGZhbHNlLCB7XG4gICAgICBhY3RpdmU6IGFjdGl2ZSxcbiAgICAgIGRpc2FibGVkOiB0aGlzLnByb3BzLmRpc2FibGVkXG4gICAgfSksIGNzc01vZHVsZSk7XG5cbiAgICBpZiAoYXR0cmlidXRlcy5ocmVmICYmIFRhZyA9PT0gJ2J1dHRvbicpIHtcbiAgICAgIFRhZyA9ICdhJztcbiAgICB9XG5cbiAgICB2YXIgZGVmYXVsdEFyaWFMYWJlbCA9IGNsb3NlID8gJ0Nsb3NlJyA6IG51bGw7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVGFnLCBfZXh0ZW5kcyh7XG4gICAgICB0eXBlOiBUYWcgPT09ICdidXR0b24nICYmIGF0dHJpYnV0ZXMub25DbGljayA/ICdidXR0b24nIDogdW5kZWZpbmVkXG4gICAgfSwgYXR0cmlidXRlcywge1xuICAgICAgY2xhc3NOYW1lOiBjbGFzc2VzLFxuICAgICAgcmVmOiBpbm5lclJlZixcbiAgICAgIG9uQ2xpY2s6IHRoaXMub25DbGljayxcbiAgICAgIFwiYXJpYS1sYWJlbFwiOiBhcmlhTGFiZWwgfHwgZGVmYXVsdEFyaWFMYWJlbFxuICAgIH0pKTtcbiAgfTtcblxuICByZXR1cm4gQnV0dG9uO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5CdXR0b24ucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuQnV0dG9uLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IEJ1dHRvbjsiLCJpbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3NlcnRUaGlzSW5pdGlhbGl6ZWRcIjtcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c0xvb3NlXCI7XG5pbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5XCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY3JlYXRlQ29udGV4dCBmcm9tICdjcmVhdGUtcmVhY3QtY29udGV4dCc7XG5leHBvcnQgdmFyIE1hbmFnZXJSZWZlcmVuY2VOb2RlQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbmV4cG9ydCB2YXIgTWFuYWdlclJlZmVyZW5jZU5vZGVTZXR0ZXJDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuXG52YXIgTWFuYWdlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShNYW5hZ2VyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBNYW5hZ2VyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInJlZmVyZW5jZU5vZGVcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJzZXRSZWZlcmVuY2VOb2RlXCIsIGZ1bmN0aW9uIChuZXdSZWZlcmVuY2VOb2RlKSB7XG4gICAgICBpZiAobmV3UmVmZXJlbmNlTm9kZSAmJiBfdGhpcy5yZWZlcmVuY2VOb2RlICE9PSBuZXdSZWZlcmVuY2VOb2RlKSB7XG4gICAgICAgIF90aGlzLnJlZmVyZW5jZU5vZGUgPSBuZXdSZWZlcmVuY2VOb2RlO1xuXG4gICAgICAgIF90aGlzLmZvcmNlVXBkYXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTWFuYWdlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy5yZWZlcmVuY2VOb2RlID0gbnVsbDtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KE1hbmFnZXJSZWZlcmVuY2VOb2RlQ29udGV4dC5Qcm92aWRlciwge1xuICAgICAgdmFsdWU6IHRoaXMucmVmZXJlbmNlTm9kZVxuICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTWFuYWdlclJlZmVyZW5jZU5vZGVTZXR0ZXJDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICB2YWx1ZTogdGhpcy5zZXRSZWZlcmVuY2VOb2RlXG4gICAgfSwgdGhpcy5wcm9wcy5jaGlsZHJlbikpO1xuICB9O1xuXG4gIHJldHVybiBNYW5hZ2VyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5leHBvcnQgeyBNYW5hZ2VyIGFzIGRlZmF1bHQgfTsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2Fzc2VydFRoaXNJbml0aWFsaXplZFwiO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlXCI7XG5cbi8qIGVzbGludCByZWFjdC9uby1maW5kLWRvbS1ub2RlOiAwICovXG4vLyBodHRwczovL2dpdGh1Yi5jb20veWFubmlja2NyL2VzbGludC1wbHVnaW4tcmVhY3QvYmxvYi9tYXN0ZXIvZG9jcy9ydWxlcy9uby1maW5kLWRvbS1ub2RlLm1kXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IE1hbmFnZXIgfSBmcm9tICdyZWFjdC1wb3BwZXInO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgeyBEcm9wZG93bkNvbnRleHQgfSBmcm9tICcuL0Ryb3Bkb3duQ29udGV4dCc7XG5pbXBvcnQgeyBtYXBUb0Nzc01vZHVsZXMsIG9taXQsIGtleUNvZGVzLCB0YWdQcm9wVHlwZSB9IGZyb20gJy4vdXRpbHMnO1xudmFyIHByb3BUeXBlcyA9IHtcbiAgYTExeTogUHJvcFR5cGVzLmJvb2wsXG4gIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgZGlyZWN0aW9uOiBQcm9wVHlwZXMub25lT2YoWyd1cCcsICdkb3duJywgJ2xlZnQnLCAncmlnaHQnXSksXG4gIGdyb3VwOiBQcm9wVHlwZXMuYm9vbCxcbiAgaXNPcGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgbmF2OiBQcm9wVHlwZXMuYm9vbCxcbiAgYWN0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgYWRkb25UeXBlOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuYm9vbCwgUHJvcFR5cGVzLm9uZU9mKFsncHJlcGVuZCcsICdhcHBlbmQnXSldKSxcbiAgc2l6ZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgdGFnOiB0YWdQcm9wVHlwZSxcbiAgdG9nZ2xlOiBQcm9wVHlwZXMuZnVuYyxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzc01vZHVsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgaW5OYXZiYXI6IFByb3BUeXBlcy5ib29sLFxuICBzZXRBY3RpdmVGcm9tQ2hpbGQ6IFByb3BUeXBlcy5ib29sXG59O1xudmFyIGRlZmF1bHRQcm9wcyA9IHtcbiAgYTExeTogdHJ1ZSxcbiAgaXNPcGVuOiBmYWxzZSxcbiAgZGlyZWN0aW9uOiAnZG93bicsXG4gIG5hdjogZmFsc2UsXG4gIGFjdGl2ZTogZmFsc2UsXG4gIGFkZG9uVHlwZTogZmFsc2UsXG4gIGluTmF2YmFyOiBmYWxzZSxcbiAgc2V0QWN0aXZlRnJvbUNoaWxkOiBmYWxzZVxufTtcbnZhciBwcmV2ZW50RGVmYXVsdEtleXMgPSBba2V5Q29kZXMuc3BhY2UsIGtleUNvZGVzLmVudGVyLCBrZXlDb2Rlcy51cCwga2V5Q29kZXMuZG93biwga2V5Q29kZXMuZW5kLCBrZXlDb2Rlcy5ob21lXTtcblxudmFyIERyb3Bkb3duID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKERyb3Bkb3duLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBEcm9wZG93bihwcm9wcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzO1xuICAgIF90aGlzLmFkZEV2ZW50cyA9IF90aGlzLmFkZEV2ZW50cy5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICBfdGhpcy5oYW5kbGVEb2N1bWVudENsaWNrID0gX3RoaXMuaGFuZGxlRG9jdW1lbnRDbGljay5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICBfdGhpcy5oYW5kbGVLZXlEb3duID0gX3RoaXMuaGFuZGxlS2V5RG93bi5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICBfdGhpcy5yZW1vdmVFdmVudHMgPSBfdGhpcy5yZW1vdmVFdmVudHMuYmluZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgX3RoaXMudG9nZ2xlID0gX3RoaXMudG9nZ2xlLmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIF90aGlzLmNvbnRhaW5lclJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBEcm9wZG93bi5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmdldENvbnRleHRWYWx1ZSA9IGZ1bmN0aW9uIGdldENvbnRleHRWYWx1ZSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdG9nZ2xlOiB0aGlzLnRvZ2dsZSxcbiAgICAgIGlzT3BlbjogdGhpcy5wcm9wcy5pc09wZW4sXG4gICAgICBkaXJlY3Rpb246IHRoaXMucHJvcHMuZGlyZWN0aW9uID09PSAnZG93bicgJiYgdGhpcy5wcm9wcy5kcm9wdXAgPyAndXAnIDogdGhpcy5wcm9wcy5kaXJlY3Rpb24sXG4gICAgICBpbk5hdmJhcjogdGhpcy5wcm9wcy5pbk5hdmJhcixcbiAgICAgIGRpc2FibGVkOiB0aGlzLnByb3BzLmRpc2FibGVkXG4gICAgfTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLmhhbmRsZVByb3BzKCk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5pc09wZW4gIT09IHByZXZQcm9wcy5pc09wZW4pIHtcbiAgICAgIHRoaXMuaGFuZGxlUHJvcHMoKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy5yZW1vdmVFdmVudHMoKTtcbiAgfTtcblxuICBfcHJvdG8uZ2V0Q29udGFpbmVyID0gZnVuY3Rpb24gZ2V0Q29udGFpbmVyKCkge1xuICAgIHJldHVybiB0aGlzLmNvbnRhaW5lclJlZi5jdXJyZW50O1xuICB9O1xuXG4gIF9wcm90by5nZXRNZW51Q3RybCA9IGZ1bmN0aW9uIGdldE1lbnVDdHJsKCkge1xuICAgIGlmICh0aGlzLl8kbWVudUN0cmwpIHJldHVybiB0aGlzLl8kbWVudUN0cmw7XG4gICAgdGhpcy5fJG1lbnVDdHJsID0gdGhpcy5nZXRDb250YWluZXIoKS5xdWVyeVNlbGVjdG9yKCdbYXJpYS1leHBhbmRlZF0nKTtcbiAgICByZXR1cm4gdGhpcy5fJG1lbnVDdHJsO1xuICB9O1xuXG4gIF9wcm90by5nZXRNZW51SXRlbXMgPSBmdW5jdGlvbiBnZXRNZW51SXRlbXMoKSB7XG4gICAgcmV0dXJuIFtdLnNsaWNlLmNhbGwodGhpcy5nZXRDb250YWluZXIoKS5xdWVyeVNlbGVjdG9yQWxsKCdbcm9sZT1cIm1lbnVpdGVtXCJdJykpO1xuICB9O1xuXG4gIF9wcm90by5hZGRFdmVudHMgPSBmdW5jdGlvbiBhZGRFdmVudHMoKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICBbJ2NsaWNrJywgJ3RvdWNoc3RhcnQnLCAna2V5dXAnXS5mb3JFYWNoKGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgcmV0dXJuIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIF90aGlzMi5oYW5kbGVEb2N1bWVudENsaWNrLCB0cnVlKTtcbiAgICB9KTtcbiAgfTtcblxuICBfcHJvdG8ucmVtb3ZlRXZlbnRzID0gZnVuY3Rpb24gcmVtb3ZlRXZlbnRzKCkge1xuICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgWydjbGljaycsICd0b3VjaHN0YXJ0JywgJ2tleXVwJ10uZm9yRWFjaChmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIHJldHVybiBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBfdGhpczMuaGFuZGxlRG9jdW1lbnRDbGljaywgdHJ1ZSk7XG4gICAgfSk7XG4gIH07XG5cbiAgX3Byb3RvLmhhbmRsZURvY3VtZW50Q2xpY2sgPSBmdW5jdGlvbiBoYW5kbGVEb2N1bWVudENsaWNrKGUpIHtcbiAgICBpZiAoZSAmJiAoZS53aGljaCA9PT0gMyB8fCBlLnR5cGUgPT09ICdrZXl1cCcgJiYgZS53aGljaCAhPT0ga2V5Q29kZXMudGFiKSkgcmV0dXJuO1xuICAgIHZhciBjb250YWluZXIgPSB0aGlzLmdldENvbnRhaW5lcigpO1xuXG4gICAgaWYgKGNvbnRhaW5lci5jb250YWlucyhlLnRhcmdldCkgJiYgY29udGFpbmVyICE9PSBlLnRhcmdldCAmJiAoZS50eXBlICE9PSAna2V5dXAnIHx8IGUud2hpY2ggPT09IGtleUNvZGVzLnRhYikpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLnRvZ2dsZShlKTtcbiAgfTtcblxuICBfcHJvdG8uaGFuZGxlS2V5RG93biA9IGZ1bmN0aW9uIGhhbmRsZUtleURvd24oZSkge1xuICAgIHZhciBfdGhpczQgPSB0aGlzO1xuXG4gICAgaWYgKC9pbnB1dHx0ZXh0YXJlYS9pLnRlc3QoZS50YXJnZXQudGFnTmFtZSkgfHwga2V5Q29kZXMudGFiID09PSBlLndoaWNoICYmIChlLnRhcmdldC5nZXRBdHRyaWJ1dGUoJ3JvbGUnKSAhPT0gJ21lbnVpdGVtJyB8fCAhdGhpcy5wcm9wcy5hMTF5KSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChwcmV2ZW50RGVmYXVsdEtleXMuaW5kZXhPZihlLndoaWNoKSAhPT0gLTEgfHwgZS53aGljaCA+PSA0OCAmJiBlLndoaWNoIDw9IDkwKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMucHJvcHMuZGlzYWJsZWQpIHJldHVybjtcblxuICAgIGlmICh0aGlzLmdldE1lbnVDdHJsKCkgPT09IGUudGFyZ2V0KSB7XG4gICAgICBpZiAoIXRoaXMucHJvcHMuaXNPcGVuICYmIFtrZXlDb2Rlcy5zcGFjZSwga2V5Q29kZXMuZW50ZXIsIGtleUNvZGVzLnVwLCBrZXlDb2Rlcy5kb3duXS5pbmRleE9mKGUud2hpY2gpID4gLTEpIHtcbiAgICAgICAgdGhpcy50b2dnbGUoZSk7XG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczQuZ2V0TWVudUl0ZW1zKClbMF0uZm9jdXMoKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucHJvcHMuaXNPcGVuICYmIGUud2hpY2ggPT09IGtleUNvZGVzLmVzYykge1xuICAgICAgICB0aGlzLnRvZ2dsZShlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodGhpcy5wcm9wcy5pc09wZW4gJiYgZS50YXJnZXQuZ2V0QXR0cmlidXRlKCdyb2xlJykgPT09ICdtZW51aXRlbScpIHtcbiAgICAgIGlmIChba2V5Q29kZXMudGFiLCBrZXlDb2Rlcy5lc2NdLmluZGV4T2YoZS53aGljaCkgPiAtMSkge1xuICAgICAgICB0aGlzLnRvZ2dsZShlKTtcbiAgICAgICAgdGhpcy5nZXRNZW51Q3RybCgpLmZvY3VzKCk7XG4gICAgICB9IGVsc2UgaWYgKFtrZXlDb2Rlcy5zcGFjZSwga2V5Q29kZXMuZW50ZXJdLmluZGV4T2YoZS53aGljaCkgPiAtMSkge1xuICAgICAgICBlLnRhcmdldC5jbGljaygpO1xuICAgICAgICB0aGlzLmdldE1lbnVDdHJsKCkuZm9jdXMoKTtcbiAgICAgIH0gZWxzZSBpZiAoW2tleUNvZGVzLmRvd24sIGtleUNvZGVzLnVwXS5pbmRleE9mKGUud2hpY2gpID4gLTEgfHwgW2tleUNvZGVzLm4sIGtleUNvZGVzLnBdLmluZGV4T2YoZS53aGljaCkgPiAtMSAmJiBlLmN0cmxLZXkpIHtcbiAgICAgICAgdmFyICRtZW51aXRlbXMgPSB0aGlzLmdldE1lbnVJdGVtcygpO1xuICAgICAgICB2YXIgaW5kZXggPSAkbWVudWl0ZW1zLmluZGV4T2YoZS50YXJnZXQpO1xuXG4gICAgICAgIGlmIChrZXlDb2Rlcy51cCA9PT0gZS53aGljaCB8fCBrZXlDb2Rlcy5wID09PSBlLndoaWNoICYmIGUuY3RybEtleSkge1xuICAgICAgICAgIGluZGV4ID0gaW5kZXggIT09IDAgPyBpbmRleCAtIDEgOiAkbWVudWl0ZW1zLmxlbmd0aCAtIDE7XG4gICAgICAgIH0gZWxzZSBpZiAoa2V5Q29kZXMuZG93biA9PT0gZS53aGljaCB8fCBrZXlDb2Rlcy5uID09PSBlLndoaWNoICYmIGUuY3RybEtleSkge1xuICAgICAgICAgIGluZGV4ID0gaW5kZXggPT09ICRtZW51aXRlbXMubGVuZ3RoIC0gMSA/IDAgOiBpbmRleCArIDE7XG4gICAgICAgIH1cblxuICAgICAgICAkbWVudWl0ZW1zW2luZGV4XS5mb2N1cygpO1xuICAgICAgfSBlbHNlIGlmIChrZXlDb2Rlcy5lbmQgPT09IGUud2hpY2gpIHtcbiAgICAgICAgdmFyIF8kbWVudWl0ZW1zID0gdGhpcy5nZXRNZW51SXRlbXMoKTtcblxuICAgICAgICBfJG1lbnVpdGVtc1tfJG1lbnVpdGVtcy5sZW5ndGggLSAxXS5mb2N1cygpO1xuICAgICAgfSBlbHNlIGlmIChrZXlDb2Rlcy5ob21lID09PSBlLndoaWNoKSB7XG4gICAgICAgIHZhciBfJG1lbnVpdGVtczIgPSB0aGlzLmdldE1lbnVJdGVtcygpO1xuXG4gICAgICAgIF8kbWVudWl0ZW1zMlswXS5mb2N1cygpO1xuICAgICAgfSBlbHNlIGlmIChlLndoaWNoID49IDQ4ICYmIGUud2hpY2ggPD0gOTApIHtcbiAgICAgICAgdmFyIF8kbWVudWl0ZW1zMyA9IHRoaXMuZ2V0TWVudUl0ZW1zKCk7XG5cbiAgICAgICAgdmFyIGNoYXJQcmVzc2VkID0gU3RyaW5nLmZyb21DaGFyQ29kZShlLndoaWNoKS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgXyRtZW51aXRlbXMzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgdmFyIGZpcnN0TGV0dGVyID0gXyRtZW51aXRlbXMzW2ldLnRleHRDb250ZW50ICYmIF8kbWVudWl0ZW1zM1tpXS50ZXh0Q29udGVudFswXS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgICAgICAgaWYgKGZpcnN0TGV0dGVyID09PSBjaGFyUHJlc3NlZCkge1xuICAgICAgICAgICAgXyRtZW51aXRlbXMzW2ldLmZvY3VzKCk7XG5cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uaGFuZGxlUHJvcHMgPSBmdW5jdGlvbiBoYW5kbGVQcm9wcygpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5pc09wZW4pIHtcbiAgICAgIHRoaXMuYWRkRXZlbnRzKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlRXZlbnRzKCk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by50b2dnbGUgPSBmdW5jdGlvbiB0b2dnbGUoZSkge1xuICAgIGlmICh0aGlzLnByb3BzLmRpc2FibGVkKSB7XG4gICAgICByZXR1cm4gZSAmJiBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMucHJvcHMudG9nZ2xlKGUpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF9jbGFzc05hbWVzLCBfcmVmO1xuXG4gICAgdmFyIF9vbWl0ID0gb21pdCh0aGlzLnByb3BzLCBbJ3RvZ2dsZScsICdkaXNhYmxlZCcsICdpbk5hdmJhcicsICdhMTF5J10pLFxuICAgICAgICBjbGFzc05hbWUgPSBfb21pdC5jbGFzc05hbWUsXG4gICAgICAgIGNzc01vZHVsZSA9IF9vbWl0LmNzc01vZHVsZSxcbiAgICAgICAgZGlyZWN0aW9uID0gX29taXQuZGlyZWN0aW9uLFxuICAgICAgICBpc09wZW4gPSBfb21pdC5pc09wZW4sXG4gICAgICAgIGdyb3VwID0gX29taXQuZ3JvdXAsXG4gICAgICAgIHNpemUgPSBfb21pdC5zaXplLFxuICAgICAgICBuYXYgPSBfb21pdC5uYXYsXG4gICAgICAgIHNldEFjdGl2ZUZyb21DaGlsZCA9IF9vbWl0LnNldEFjdGl2ZUZyb21DaGlsZCxcbiAgICAgICAgYWN0aXZlID0gX29taXQuYWN0aXZlLFxuICAgICAgICBhZGRvblR5cGUgPSBfb21pdC5hZGRvblR5cGUsXG4gICAgICAgIHRhZyA9IF9vbWl0LnRhZyxcbiAgICAgICAgYXR0cnMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfb21pdCwgW1wiY2xhc3NOYW1lXCIsIFwiY3NzTW9kdWxlXCIsIFwiZGlyZWN0aW9uXCIsIFwiaXNPcGVuXCIsIFwiZ3JvdXBcIiwgXCJzaXplXCIsIFwibmF2XCIsIFwic2V0QWN0aXZlRnJvbUNoaWxkXCIsIFwiYWN0aXZlXCIsIFwiYWRkb25UeXBlXCIsIFwidGFnXCJdKTtcblxuICAgIHZhciBUYWcgPSB0YWcgfHwgKG5hdiA/ICdsaScgOiAnZGl2Jyk7XG4gICAgdmFyIHN1Ykl0ZW1Jc0FjdGl2ZSA9IGZhbHNlO1xuXG4gICAgaWYgKHNldEFjdGl2ZUZyb21DaGlsZCkge1xuICAgICAgUmVhY3QuQ2hpbGRyZW4ubWFwKHRoaXMucHJvcHMuY2hpbGRyZW5bMV0ucHJvcHMuY2hpbGRyZW4sIGZ1bmN0aW9uIChkcm9wZG93bkl0ZW0pIHtcbiAgICAgICAgaWYgKGRyb3Bkb3duSXRlbSAmJiBkcm9wZG93bkl0ZW0ucHJvcHMuYWN0aXZlKSBzdWJJdGVtSXNBY3RpdmUgPSB0cnVlO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdmFyIGNsYXNzZXMgPSBtYXBUb0Nzc01vZHVsZXMoY2xhc3NOYW1lcyhjbGFzc05hbWUsIGRpcmVjdGlvbiAhPT0gJ2Rvd24nICYmIFwiZHJvcFwiICsgZGlyZWN0aW9uLCBuYXYgJiYgYWN0aXZlID8gJ2FjdGl2ZScgOiBmYWxzZSwgc2V0QWN0aXZlRnJvbUNoaWxkICYmIHN1Ykl0ZW1Jc0FjdGl2ZSA/ICdhY3RpdmUnIDogZmFsc2UsIChfY2xhc3NOYW1lcyA9IHt9LCBfY2xhc3NOYW1lc1tcImlucHV0LWdyb3VwLVwiICsgYWRkb25UeXBlXSA9IGFkZG9uVHlwZSwgX2NsYXNzTmFtZXNbJ2J0bi1ncm91cCddID0gZ3JvdXAsIF9jbGFzc05hbWVzW1wiYnRuLWdyb3VwLVwiICsgc2l6ZV0gPSAhIXNpemUsIF9jbGFzc05hbWVzLmRyb3Bkb3duID0gIWdyb3VwICYmICFhZGRvblR5cGUsIF9jbGFzc05hbWVzLnNob3cgPSBpc09wZW4sIF9jbGFzc05hbWVzWyduYXYtaXRlbSddID0gbmF2LCBfY2xhc3NOYW1lcykpLCBjc3NNb2R1bGUpO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KERyb3Bkb3duQ29udGV4dC5Qcm92aWRlciwge1xuICAgICAgdmFsdWU6IHRoaXMuZ2V0Q29udGV4dFZhbHVlKClcbiAgICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KE1hbmFnZXIsIG51bGwsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVGFnLCBfZXh0ZW5kcyh7fSwgYXR0cnMsIChfcmVmID0ge30sIF9yZWZbdHlwZW9mIFRhZyA9PT0gJ3N0cmluZycgPyAncmVmJyA6ICdpbm5lclJlZiddID0gdGhpcy5jb250YWluZXJSZWYsIF9yZWYpLCB7XG4gICAgICBvbktleURvd246IHRoaXMuaGFuZGxlS2V5RG93bixcbiAgICAgIGNsYXNzTmFtZTogY2xhc3Nlc1xuICAgIH0pKSkpO1xuICB9O1xuXG4gIHJldHVybiBEcm9wZG93bjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuRHJvcGRvd24ucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuRHJvcGRvd24uZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgRHJvcGRvd247IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBEcm9wZG93biBmcm9tICcuL0Ryb3Bkb3duJztcbnZhciBwcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxufTtcblxudmFyIEJ1dHRvbkRyb3Bkb3duID0gZnVuY3Rpb24gQnV0dG9uRHJvcGRvd24ocHJvcHMpIHtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRHJvcGRvd24sIF9leHRlbmRzKHtcbiAgICBncm91cDogdHJ1ZVxuICB9LCBwcm9wcykpO1xufTtcblxuQnV0dG9uRHJvcGRvd24ucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuZXhwb3J0IGRlZmF1bHQgQnV0dG9uRHJvcGRvd247IiwiLyoqXG4gKiBUYWtlcyBhbiBhcmd1bWVudCBhbmQgaWYgaXQncyBhbiBhcnJheSwgcmV0dXJucyB0aGUgZmlyc3QgaXRlbSBpbiB0aGUgYXJyYXksXG4gKiBvdGhlcndpc2UgcmV0dXJucyB0aGUgYXJndW1lbnQuIFVzZWQgZm9yIFByZWFjdCBjb21wYXRpYmlsaXR5LlxuICovXG5leHBvcnQgdmFyIHVud3JhcEFycmF5ID0gZnVuY3Rpb24gdW53cmFwQXJyYXkoYXJnKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KGFyZykgPyBhcmdbMF0gOiBhcmc7XG59O1xuLyoqXG4gKiBUYWtlcyBhIG1heWJlLXVuZGVmaW5lZCBmdW5jdGlvbiBhbmQgYXJiaXRyYXJ5IGFyZ3MgYW5kIGludm9rZXMgdGhlIGZ1bmN0aW9uXG4gKiBvbmx5IGlmIGl0IGlzIGRlZmluZWQuXG4gKi9cblxuZXhwb3J0IHZhciBzYWZlSW52b2tlID0gZnVuY3Rpb24gc2FmZUludm9rZShmbikge1xuICBpZiAodHlwZW9mIGZuID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gZm4uYXBwbHkodm9pZCAwLCBhcmdzKTtcbiAgfVxufTtcbi8qKlxuICogRG9lcyBhIHNoYWxsb3cgZXF1YWxpdHkgY2hlY2sgb2YgdHdvIG9iamVjdHMgYnkgY29tcGFyaW5nIHRoZSByZWZlcmVuY2VcbiAqIGVxdWFsaXR5IG9mIGVhY2ggdmFsdWUuXG4gKi9cblxuZXhwb3J0IHZhciBzaGFsbG93RXF1YWwgPSBmdW5jdGlvbiBzaGFsbG93RXF1YWwob2JqQSwgb2JqQikge1xuICB2YXIgYUtleXMgPSBPYmplY3Qua2V5cyhvYmpBKTtcbiAgdmFyIGJLZXlzID0gT2JqZWN0LmtleXMob2JqQik7XG5cbiAgaWYgKGJLZXlzLmxlbmd0aCAhPT0gYUtleXMubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBiS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBrZXkgPSBhS2V5c1tpXTtcblxuICAgIGlmIChvYmpBW2tleV0gIT09IG9iakJba2V5XSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufTtcbi8qKlxuICogU2V0cyBhIHJlZiB1c2luZyBlaXRoZXIgYSByZWYgY2FsbGJhY2sgb3IgYSByZWYgb2JqZWN0XG4gKi9cblxuZXhwb3J0IHZhciBzZXRSZWYgPSBmdW5jdGlvbiBzZXRSZWYocmVmLCBub2RlKSB7XG4gIC8vIGlmIGl0cyBhIGZ1bmN0aW9uIGNhbGwgaXRcbiAgaWYgKHR5cGVvZiByZWYgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHJldHVybiBzYWZlSW52b2tlKHJlZiwgbm9kZSk7XG4gIH0gLy8gb3RoZXJ3aXNlIHdlIHNob3VsZCB0cmVhdCBpdCBhcyBhIHJlZiBvYmplY3RcbiAgZWxzZSBpZiAocmVmICE9IG51bGwpIHtcbiAgICAgIHJlZi5jdXJyZW50ID0gbm9kZTtcbiAgICB9XG59OyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9leHRlbmRzXCI7XG5pbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3NlcnRUaGlzSW5pdGlhbGl6ZWRcIjtcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c0xvb3NlXCI7XG5pbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5XCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcbmltcG9ydCB7IE1hbmFnZXJSZWZlcmVuY2VOb2RlU2V0dGVyQ29udGV4dCB9IGZyb20gJy4vTWFuYWdlcic7XG5pbXBvcnQgeyBzYWZlSW52b2tlLCB1bndyYXBBcnJheSwgc2V0UmVmIH0gZnJvbSAnLi91dGlscyc7XG5cbnZhciBJbm5lclJlZmVyZW5jZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShJbm5lclJlZmVyZW5jZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gSW5uZXJSZWZlcmVuY2UoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwicmVmSGFuZGxlclwiLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgc2V0UmVmKF90aGlzLnByb3BzLmlubmVyUmVmLCBub2RlKTtcbiAgICAgIHNhZmVJbnZva2UoX3RoaXMucHJvcHMuc2V0UmVmZXJlbmNlTm9kZSwgbm9kZSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gSW5uZXJSZWZlcmVuY2UucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHNldFJlZih0aGlzLnByb3BzLmlubmVyUmVmLCBudWxsKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHdhcm5pbmcoQm9vbGVhbih0aGlzLnByb3BzLnNldFJlZmVyZW5jZU5vZGUpLCAnYFJlZmVyZW5jZWAgc2hvdWxkIG5vdCBiZSB1c2VkIG91dHNpZGUgb2YgYSBgTWFuYWdlcmAgY29tcG9uZW50LicpO1xuICAgIHJldHVybiB1bndyYXBBcnJheSh0aGlzLnByb3BzLmNoaWxkcmVuKSh7XG4gICAgICByZWY6IHRoaXMucmVmSGFuZGxlclxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBJbm5lclJlZmVyZW5jZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUmVmZXJlbmNlKHByb3BzKSB7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KE1hbmFnZXJSZWZlcmVuY2VOb2RlU2V0dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKHNldFJlZmVyZW5jZU5vZGUpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChJbm5lclJlZmVyZW5jZSwgX2V4dGVuZHMoe1xuICAgICAgc2V0UmVmZXJlbmNlTm9kZTogc2V0UmVmZXJlbmNlTm9kZVxuICAgIH0sIHByb3BzKSk7XG4gIH0pO1xufSIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXNzZXJ0VGhpc0luaXRpYWxpemVkXCI7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2VcIjtcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgeyBSZWZlcmVuY2UgfSBmcm9tICdyZWFjdC1wb3BwZXInO1xuaW1wb3J0IHsgRHJvcGRvd25Db250ZXh0IH0gZnJvbSAnLi9Ecm9wZG93bkNvbnRleHQnO1xuaW1wb3J0IHsgbWFwVG9Dc3NNb2R1bGVzLCB0YWdQcm9wVHlwZSB9IGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuL0J1dHRvbic7XG52YXIgcHJvcFR5cGVzID0ge1xuICBjYXJldDogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzTW9kdWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsXG4gIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAnYXJpYS1oYXNwb3B1cCc6IFByb3BUeXBlcy5ib29sLFxuICBzcGxpdDogUHJvcFR5cGVzLmJvb2wsXG4gIHRhZzogdGFnUHJvcFR5cGUsXG4gIG5hdjogUHJvcFR5cGVzLmJvb2xcbn07XG52YXIgZGVmYXVsdFByb3BzID0ge1xuICAnYXJpYS1oYXNwb3B1cCc6IHRydWUsXG4gIGNvbG9yOiAnc2Vjb25kYXJ5J1xufTtcblxudmFyIERyb3Bkb3duVG9nZ2xlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKERyb3Bkb3duVG9nZ2xlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBEcm9wZG93blRvZ2dsZShwcm9wcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzO1xuICAgIF90aGlzLm9uQ2xpY2sgPSBfdGhpcy5vbkNsaWNrLmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBEcm9wZG93blRvZ2dsZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLm9uQ2xpY2sgPSBmdW5jdGlvbiBvbkNsaWNrKGUpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5kaXNhYmxlZCB8fCB0aGlzLmNvbnRleHQuZGlzYWJsZWQpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5wcm9wcy5uYXYgJiYgIXRoaXMucHJvcHMudGFnKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMucHJvcHMub25DbGljaykge1xuICAgICAgdGhpcy5wcm9wcy5vbkNsaWNrKGUpO1xuICAgIH1cblxuICAgIHRoaXMuY29udGV4dC50b2dnbGUoZSk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGNsYXNzTmFtZSA9IF90aGlzJHByb3BzLmNsYXNzTmFtZSxcbiAgICAgICAgY29sb3IgPSBfdGhpcyRwcm9wcy5jb2xvcixcbiAgICAgICAgY3NzTW9kdWxlID0gX3RoaXMkcHJvcHMuY3NzTW9kdWxlLFxuICAgICAgICBjYXJldCA9IF90aGlzJHByb3BzLmNhcmV0LFxuICAgICAgICBzcGxpdCA9IF90aGlzJHByb3BzLnNwbGl0LFxuICAgICAgICBuYXYgPSBfdGhpcyRwcm9wcy5uYXYsXG4gICAgICAgIHRhZyA9IF90aGlzJHByb3BzLnRhZyxcbiAgICAgICAgaW5uZXJSZWYgPSBfdGhpcyRwcm9wcy5pbm5lclJlZixcbiAgICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wcywgW1wiY2xhc3NOYW1lXCIsIFwiY29sb3JcIiwgXCJjc3NNb2R1bGVcIiwgXCJjYXJldFwiLCBcInNwbGl0XCIsIFwibmF2XCIsIFwidGFnXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gICAgdmFyIGFyaWFMYWJlbCA9IHByb3BzWydhcmlhLWxhYmVsJ10gfHwgJ1RvZ2dsZSBEcm9wZG93bic7XG4gICAgdmFyIGNsYXNzZXMgPSBtYXBUb0Nzc01vZHVsZXMoY2xhc3NOYW1lcyhjbGFzc05hbWUsIHtcbiAgICAgICdkcm9wZG93bi10b2dnbGUnOiBjYXJldCB8fCBzcGxpdCxcbiAgICAgICdkcm9wZG93bi10b2dnbGUtc3BsaXQnOiBzcGxpdCxcbiAgICAgICduYXYtbGluayc6IG5hdlxuICAgIH0pLCBjc3NNb2R1bGUpO1xuICAgIHZhciBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuIHx8IFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJzci1vbmx5XCJcbiAgICB9LCBhcmlhTGFiZWwpO1xuICAgIHZhciBUYWc7XG5cbiAgICBpZiAobmF2ICYmICF0YWcpIHtcbiAgICAgIFRhZyA9ICdhJztcbiAgICAgIHByb3BzLmhyZWYgPSAnIyc7XG4gICAgfSBlbHNlIGlmICghdGFnKSB7XG4gICAgICBUYWcgPSBCdXR0b247XG4gICAgICBwcm9wcy5jb2xvciA9IGNvbG9yO1xuICAgICAgcHJvcHMuY3NzTW9kdWxlID0gY3NzTW9kdWxlO1xuICAgIH0gZWxzZSB7XG4gICAgICBUYWcgPSB0YWc7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuY29udGV4dC5pbk5hdmJhcikge1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVGFnLCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBjbGFzc2VzLFxuICAgICAgICBvbkNsaWNrOiB0aGlzLm9uQ2xpY2ssXG4gICAgICAgIFwiYXJpYS1leHBhbmRlZFwiOiB0aGlzLmNvbnRleHQuaXNPcGVuLFxuICAgICAgICBjaGlsZHJlbjogY2hpbGRyZW5cbiAgICAgIH0pKTtcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSZWZlcmVuY2UsIHtcbiAgICAgIGlubmVyUmVmOiBpbm5lclJlZlxuICAgIH0sIGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgICB2YXIgX3JlZjI7XG5cbiAgICAgIHZhciByZWYgPSBfcmVmLnJlZjtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFRhZywgX2V4dGVuZHMoe30sIHByb3BzLCAoX3JlZjIgPSB7fSwgX3JlZjJbdHlwZW9mIFRhZyA9PT0gJ3N0cmluZycgPyAncmVmJyA6ICdpbm5lclJlZiddID0gcmVmLCBfcmVmMiksIHtcbiAgICAgICAgY2xhc3NOYW1lOiBjbGFzc2VzLFxuICAgICAgICBvbkNsaWNrOiBfdGhpczIub25DbGljayxcbiAgICAgICAgXCJhcmlhLWV4cGFuZGVkXCI6IF90aGlzMi5jb250ZXh0LmlzT3BlbixcbiAgICAgICAgY2hpbGRyZW46IGNoaWxkcmVuXG4gICAgICB9KSk7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIERyb3Bkb3duVG9nZ2xlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5Ecm9wZG93blRvZ2dsZS5wcm9wVHlwZXMgPSBwcm9wVHlwZXM7XG5Ecm9wZG93blRvZ2dsZS5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5Ecm9wZG93blRvZ2dsZS5jb250ZXh0VHlwZSA9IERyb3Bkb3duQ29udGV4dDtcbmV4cG9ydCBkZWZhdWx0IERyb3Bkb3duVG9nZ2xlOyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufSIsImltcG9ydCBkZWZpbmVQcm9wZXJ0eSBmcm9tIFwiLi9kZWZpbmVQcm9wZXJ0eVwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBPYmplY3QoYXJndW1lbnRzW2ldKSA6IHt9O1xuICAgIHZhciBvd25LZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcblxuICAgIGlmICh0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgb3duS2V5cyA9IG93bktleXMuY29uY2F0KE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlKS5maWx0ZXIoZnVuY3Rpb24gKHN5bSkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIHN5bSkuZW51bWVyYWJsZTtcbiAgICAgIH0pKTtcbiAgICB9XG5cbiAgICBvd25LZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59IiwiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9leHRlbmRzXCI7XG5pbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3NlcnRUaGlzSW5pdGlhbGl6ZWRcIjtcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c0xvb3NlXCI7XG5pbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5XCI7XG5pbXBvcnQgZGVlcEVxdWFsIGZyb20gXCJkZWVwLWVxdWFsXCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUG9wcGVySlMgZnJvbSAncG9wcGVyLmpzJztcbmltcG9ydCB7IE1hbmFnZXJSZWZlcmVuY2VOb2RlQ29udGV4dCB9IGZyb20gJy4vTWFuYWdlcic7XG5pbXBvcnQgeyB1bndyYXBBcnJheSwgc2V0UmVmLCBzaGFsbG93RXF1YWwgfSBmcm9tICcuL3V0aWxzJztcbnZhciBpbml0aWFsU3R5bGUgPSB7XG4gIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICB0b3A6IDAsXG4gIGxlZnQ6IDAsXG4gIG9wYWNpdHk6IDAsXG4gIHBvaW50ZXJFdmVudHM6ICdub25lJ1xufTtcbnZhciBpbml0aWFsQXJyb3dTdHlsZSA9IHt9O1xuZXhwb3J0IHZhciBJbm5lclBvcHBlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShJbm5lclBvcHBlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gSW5uZXJQb3BwZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwic3RhdGVcIiwge1xuICAgICAgZGF0YTogdW5kZWZpbmVkLFxuICAgICAgcGxhY2VtZW50OiB1bmRlZmluZWRcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJwb3BwZXJJbnN0YW5jZVwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInBvcHBlck5vZGVcIiwgbnVsbCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiYXJyb3dOb2RlXCIsIG51bGwpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInNldFBvcHBlck5vZGVcIiwgZnVuY3Rpb24gKHBvcHBlck5vZGUpIHtcbiAgICAgIGlmICghcG9wcGVyTm9kZSB8fCBfdGhpcy5wb3BwZXJOb2RlID09PSBwb3BwZXJOb2RlKSByZXR1cm47XG4gICAgICBzZXRSZWYoX3RoaXMucHJvcHMuaW5uZXJSZWYsIHBvcHBlck5vZGUpO1xuICAgICAgX3RoaXMucG9wcGVyTm9kZSA9IHBvcHBlck5vZGU7XG5cbiAgICAgIF90aGlzLnVwZGF0ZVBvcHBlckluc3RhbmNlKCk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwic2V0QXJyb3dOb2RlXCIsIGZ1bmN0aW9uIChhcnJvd05vZGUpIHtcbiAgICAgIF90aGlzLmFycm93Tm9kZSA9IGFycm93Tm9kZTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJ1cGRhdGVTdGF0ZU1vZGlmaWVyXCIsIHtcbiAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICBvcmRlcjogOTAwLFxuICAgICAgZm46IGZ1bmN0aW9uIGZuKGRhdGEpIHtcbiAgICAgICAgdmFyIHBsYWNlbWVudCA9IGRhdGEucGxhY2VtZW50O1xuXG4gICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgIHBsYWNlbWVudDogcGxhY2VtZW50XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImdldE9wdGlvbnNcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcGxhY2VtZW50OiBfdGhpcy5wcm9wcy5wbGFjZW1lbnQsXG4gICAgICAgIGV2ZW50c0VuYWJsZWQ6IF90aGlzLnByb3BzLmV2ZW50c0VuYWJsZWQsXG4gICAgICAgIHBvc2l0aW9uRml4ZWQ6IF90aGlzLnByb3BzLnBvc2l0aW9uRml4ZWQsXG4gICAgICAgIG1vZGlmaWVyczogX2V4dGVuZHMoe30sIF90aGlzLnByb3BzLm1vZGlmaWVycywge1xuICAgICAgICAgIGFycm93OiBfZXh0ZW5kcyh7fSwgX3RoaXMucHJvcHMubW9kaWZpZXJzICYmIF90aGlzLnByb3BzLm1vZGlmaWVycy5hcnJvdywge1xuICAgICAgICAgICAgZW5hYmxlZDogISFfdGhpcy5hcnJvd05vZGUsXG4gICAgICAgICAgICBlbGVtZW50OiBfdGhpcy5hcnJvd05vZGVcbiAgICAgICAgICB9KSxcbiAgICAgICAgICBhcHBseVN0eWxlOiB7XG4gICAgICAgICAgICBlbmFibGVkOiBmYWxzZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgdXBkYXRlU3RhdGVNb2RpZmllcjogX3RoaXMudXBkYXRlU3RhdGVNb2RpZmllclxuICAgICAgICB9KVxuICAgICAgfTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJnZXRQb3BwZXJTdHlsZVwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gIV90aGlzLnBvcHBlck5vZGUgfHwgIV90aGlzLnN0YXRlLmRhdGEgPyBpbml0aWFsU3R5bGUgOiBfZXh0ZW5kcyh7XG4gICAgICAgIHBvc2l0aW9uOiBfdGhpcy5zdGF0ZS5kYXRhLm9mZnNldHMucG9wcGVyLnBvc2l0aW9uXG4gICAgICB9LCBfdGhpcy5zdGF0ZS5kYXRhLnN0eWxlcyk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiZ2V0UG9wcGVyUGxhY2VtZW50XCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiAhX3RoaXMuc3RhdGUuZGF0YSA/IHVuZGVmaW5lZCA6IF90aGlzLnN0YXRlLnBsYWNlbWVudDtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJnZXRBcnJvd1N0eWxlXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiAhX3RoaXMuYXJyb3dOb2RlIHx8ICFfdGhpcy5zdGF0ZS5kYXRhID8gaW5pdGlhbEFycm93U3R5bGUgOiBfdGhpcy5zdGF0ZS5kYXRhLmFycm93U3R5bGVzO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImdldE91dE9mQm91bmRhcmllc1N0YXRlXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBfdGhpcy5zdGF0ZS5kYXRhID8gX3RoaXMuc3RhdGUuZGF0YS5oaWRlIDogdW5kZWZpbmVkO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImRlc3Ryb3lQb3BwZXJJbnN0YW5jZVwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoIV90aGlzLnBvcHBlckluc3RhbmNlKSByZXR1cm47XG5cbiAgICAgIF90aGlzLnBvcHBlckluc3RhbmNlLmRlc3Ryb3koKTtcblxuICAgICAgX3RoaXMucG9wcGVySW5zdGFuY2UgPSBudWxsO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInVwZGF0ZVBvcHBlckluc3RhbmNlXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLmRlc3Ryb3lQb3BwZXJJbnN0YW5jZSgpO1xuXG4gICAgICB2YXIgX2Fzc2VydFRoaXNJbml0aWFsaXplID0gX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksXG4gICAgICAgICAgcG9wcGVyTm9kZSA9IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZS5wb3BwZXJOb2RlO1xuXG4gICAgICB2YXIgcmVmZXJlbmNlRWxlbWVudCA9IF90aGlzLnByb3BzLnJlZmVyZW5jZUVsZW1lbnQ7XG4gICAgICBpZiAoIXJlZmVyZW5jZUVsZW1lbnQgfHwgIXBvcHBlck5vZGUpIHJldHVybjtcbiAgICAgIF90aGlzLnBvcHBlckluc3RhbmNlID0gbmV3IFBvcHBlckpTKHJlZmVyZW5jZUVsZW1lbnQsIHBvcHBlck5vZGUsIF90aGlzLmdldE9wdGlvbnMoKSk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwic2NoZWR1bGVVcGRhdGVcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKF90aGlzLnBvcHBlckluc3RhbmNlKSB7XG4gICAgICAgIF90aGlzLnBvcHBlckluc3RhbmNlLnNjaGVkdWxlVXBkYXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gSW5uZXJQb3BwZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzLCBwcmV2U3RhdGUpIHtcbiAgICAvLyBJZiB0aGUgUG9wcGVyLmpzIG9wdGlvbnMgaGF2ZSBjaGFuZ2VkLCB1cGRhdGUgdGhlIGluc3RhbmNlIChkZXN0cm95ICsgY3JlYXRlKVxuICAgIGlmICh0aGlzLnByb3BzLnBsYWNlbWVudCAhPT0gcHJldlByb3BzLnBsYWNlbWVudCB8fCB0aGlzLnByb3BzLnJlZmVyZW5jZUVsZW1lbnQgIT09IHByZXZQcm9wcy5yZWZlcmVuY2VFbGVtZW50IHx8IHRoaXMucHJvcHMucG9zaXRpb25GaXhlZCAhPT0gcHJldlByb3BzLnBvc2l0aW9uRml4ZWQgfHwgIWRlZXBFcXVhbCh0aGlzLnByb3BzLm1vZGlmaWVycywgcHJldlByb3BzLm1vZGlmaWVycywge1xuICAgICAgc3RyaWN0OiB0cnVlXG4gICAgfSkpIHtcbiAgICAgIC8vIGRldmVsb3Agb25seSBjaGVjayB0aGF0IG1vZGlmaWVycyBpc24ndCBiZWluZyB1cGRhdGVkIG5lZWRsZXNzbHlcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJkZXZlbG9wbWVudFwiKSB7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLm1vZGlmaWVycyAhPT0gcHJldlByb3BzLm1vZGlmaWVycyAmJiB0aGlzLnByb3BzLm1vZGlmaWVycyAhPSBudWxsICYmIHByZXZQcm9wcy5tb2RpZmllcnMgIT0gbnVsbCAmJiBzaGFsbG93RXF1YWwodGhpcy5wcm9wcy5tb2RpZmllcnMsIHByZXZQcm9wcy5tb2RpZmllcnMpKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKFwiJ21vZGlmaWVycycgcHJvcCByZWZlcmVuY2UgdXBkYXRlZCBldmVuIHRob3VnaCBhbGwgdmFsdWVzIGFwcGVhciB0aGUgc2FtZS5cXG5Db25zaWRlciBtZW1vaXppbmcgdGhlICdtb2RpZmllcnMnIG9iamVjdCB0byBhdm9pZCBuZWVkbGVzcyByZW5kZXJpbmcuXCIpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHRoaXMudXBkYXRlUG9wcGVySW5zdGFuY2UoKTtcbiAgICB9IGVsc2UgaWYgKHRoaXMucHJvcHMuZXZlbnRzRW5hYmxlZCAhPT0gcHJldlByb3BzLmV2ZW50c0VuYWJsZWQgJiYgdGhpcy5wb3BwZXJJbnN0YW5jZSkge1xuICAgICAgdGhpcy5wcm9wcy5ldmVudHNFbmFibGVkID8gdGhpcy5wb3BwZXJJbnN0YW5jZS5lbmFibGVFdmVudExpc3RlbmVycygpIDogdGhpcy5wb3BwZXJJbnN0YW5jZS5kaXNhYmxlRXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB9IC8vIEEgcGxhY2VtZW50IGRpZmZlcmVuY2UgaW4gc3RhdGUgbWVhbnMgcG9wcGVyIGRldGVybWluZWQgYSBuZXcgcGxhY2VtZW50XG4gICAgLy8gYXBhcnQgZnJvbSB0aGUgcHJvcHMgdmFsdWUuIEJ5IHRoZSB0aW1lIHRoZSBwb3BwZXIgZWxlbWVudCBpcyByZW5kZXJlZCB3aXRoXG4gICAgLy8gdGhlIG5ldyBwb3NpdGlvbiBQb3BwZXIgaGFzIGFscmVhZHkgbWVhc3VyZWQgaXQsIGlmIHRoZSBwbGFjZSBjaGFuZ2UgdHJpZ2dlcnNcbiAgICAvLyBhIHNpemUgY2hhbmdlIGl0IHdpbGwgcmVzdWx0IGluIGEgbWlzYWxpZ25lZCBwb3BwZXIuIFNvIHdlIHNjaGVkdWxlIGFuIHVwZGF0ZSB0byBiZSBzdXJlLlxuXG5cbiAgICBpZiAocHJldlN0YXRlLnBsYWNlbWVudCAhPT0gdGhpcy5zdGF0ZS5wbGFjZW1lbnQpIHtcbiAgICAgIHRoaXMuc2NoZWR1bGVVcGRhdGUoKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgc2V0UmVmKHRoaXMucHJvcHMuaW5uZXJSZWYsIG51bGwpO1xuICAgIHRoaXMuZGVzdHJveVBvcHBlckluc3RhbmNlKCk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gdW53cmFwQXJyYXkodGhpcy5wcm9wcy5jaGlsZHJlbikoe1xuICAgICAgcmVmOiB0aGlzLnNldFBvcHBlck5vZGUsXG4gICAgICBzdHlsZTogdGhpcy5nZXRQb3BwZXJTdHlsZSgpLFxuICAgICAgcGxhY2VtZW50OiB0aGlzLmdldFBvcHBlclBsYWNlbWVudCgpLFxuICAgICAgb3V0T2ZCb3VuZGFyaWVzOiB0aGlzLmdldE91dE9mQm91bmRhcmllc1N0YXRlKCksXG4gICAgICBzY2hlZHVsZVVwZGF0ZTogdGhpcy5zY2hlZHVsZVVwZGF0ZSxcbiAgICAgIGFycm93UHJvcHM6IHtcbiAgICAgICAgcmVmOiB0aGlzLnNldEFycm93Tm9kZSxcbiAgICAgICAgc3R5bGU6IHRoaXMuZ2V0QXJyb3dTdHlsZSgpXG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIElubmVyUG9wcGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5fZGVmaW5lUHJvcGVydHkoSW5uZXJQb3BwZXIsIFwiZGVmYXVsdFByb3BzXCIsIHtcbiAgcGxhY2VtZW50OiAnYm90dG9tJyxcbiAgZXZlbnRzRW5hYmxlZDogdHJ1ZSxcbiAgcmVmZXJlbmNlRWxlbWVudDogdW5kZWZpbmVkLFxuICBwb3NpdGlvbkZpeGVkOiBmYWxzZVxufSk7XG5cbnZhciBwbGFjZW1lbnRzID0gUG9wcGVySlMucGxhY2VtZW50cztcbmV4cG9ydCB7IHBsYWNlbWVudHMgfTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFBvcHBlcihfcmVmKSB7XG4gIHZhciByZWZlcmVuY2VFbGVtZW50ID0gX3JlZi5yZWZlcmVuY2VFbGVtZW50LFxuICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJyZWZlcmVuY2VFbGVtZW50XCJdKTtcblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChNYW5hZ2VyUmVmZXJlbmNlTm9kZUNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChyZWZlcmVuY2VOb2RlKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5uZXJQb3BwZXIsIF9leHRlbmRzKHtcbiAgICAgIHJlZmVyZW5jZUVsZW1lbnQ6IHJlZmVyZW5jZUVsZW1lbnQgIT09IHVuZGVmaW5lZCA/IHJlZmVyZW5jZUVsZW1lbnQgOiByZWZlcmVuY2VOb2RlXG4gICAgfSwgcHJvcHMpKTtcbiAgfSk7XG59IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFNwcmVhZDIgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZFwiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2VcIjtcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgeyBQb3BwZXIgfSBmcm9tICdyZWFjdC1wb3BwZXInO1xuaW1wb3J0IHsgRHJvcGRvd25Db250ZXh0IH0gZnJvbSAnLi9Ecm9wZG93bkNvbnRleHQnO1xuaW1wb3J0IHsgbWFwVG9Dc3NNb2R1bGVzLCB0YWdQcm9wVHlwZSB9IGZyb20gJy4vdXRpbHMnO1xudmFyIHByb3BUeXBlcyA9IHtcbiAgdGFnOiB0YWdQcm9wVHlwZSxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLmlzUmVxdWlyZWQsXG4gIHJpZ2h0OiBQcm9wVHlwZXMuYm9vbCxcbiAgZmxpcDogUHJvcFR5cGVzLmJvb2wsXG4gIG1vZGlmaWVyczogUHJvcFR5cGVzLm9iamVjdCxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3NNb2R1bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gIHBlcnNpc3Q6IFByb3BUeXBlcy5ib29sLFxuICBwb3NpdGlvbkZpeGVkOiBQcm9wVHlwZXMuYm9vbFxufTtcbnZhciBkZWZhdWx0UHJvcHMgPSB7XG4gIHRhZzogJ2RpdicsXG4gIGZsaXA6IHRydWVcbn07XG52YXIgbm9GbGlwTW9kaWZpZXIgPSB7XG4gIGZsaXA6IHtcbiAgICBlbmFibGVkOiBmYWxzZVxuICB9XG59O1xudmFyIGRpcmVjdGlvblBvc2l0aW9uTWFwID0ge1xuICB1cDogJ3RvcCcsXG4gIGxlZnQ6ICdsZWZ0JyxcbiAgcmlnaHQ6ICdyaWdodCcsXG4gIGRvd246ICdib3R0b20nXG59O1xuXG52YXIgRHJvcGRvd25NZW51ID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKERyb3Bkb3duTWVudSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gRHJvcGRvd25NZW51KCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBEcm9wZG93bk1lbnUucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGNsYXNzTmFtZSA9IF90aGlzJHByb3BzLmNsYXNzTmFtZSxcbiAgICAgICAgY3NzTW9kdWxlID0gX3RoaXMkcHJvcHMuY3NzTW9kdWxlLFxuICAgICAgICByaWdodCA9IF90aGlzJHByb3BzLnJpZ2h0LFxuICAgICAgICB0YWcgPSBfdGhpcyRwcm9wcy50YWcsXG4gICAgICAgIGZsaXAgPSBfdGhpcyRwcm9wcy5mbGlwLFxuICAgICAgICBtb2RpZmllcnMgPSBfdGhpcyRwcm9wcy5tb2RpZmllcnMsXG4gICAgICAgIHBlcnNpc3QgPSBfdGhpcyRwcm9wcy5wZXJzaXN0LFxuICAgICAgICBwb3NpdGlvbkZpeGVkID0gX3RoaXMkcHJvcHMucG9zaXRpb25GaXhlZCxcbiAgICAgICAgYXR0cnMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wcywgW1wiY2xhc3NOYW1lXCIsIFwiY3NzTW9kdWxlXCIsIFwicmlnaHRcIiwgXCJ0YWdcIiwgXCJmbGlwXCIsIFwibW9kaWZpZXJzXCIsIFwicGVyc2lzdFwiLCBcInBvc2l0aW9uRml4ZWRcIl0pO1xuXG4gICAgdmFyIGNsYXNzZXMgPSBtYXBUb0Nzc01vZHVsZXMoY2xhc3NOYW1lcyhjbGFzc05hbWUsICdkcm9wZG93bi1tZW51Jywge1xuICAgICAgJ2Ryb3Bkb3duLW1lbnUtcmlnaHQnOiByaWdodCxcbiAgICAgIHNob3c6IHRoaXMuY29udGV4dC5pc09wZW5cbiAgICB9KSwgY3NzTW9kdWxlKTtcbiAgICB2YXIgVGFnID0gdGFnO1xuXG4gICAgaWYgKHBlcnNpc3QgfHwgdGhpcy5jb250ZXh0LmlzT3BlbiAmJiAhdGhpcy5jb250ZXh0LmluTmF2YmFyKSB7XG4gICAgICB2YXIgcG9zaXRpb24xID0gZGlyZWN0aW9uUG9zaXRpb25NYXBbdGhpcy5jb250ZXh0LmRpcmVjdGlvbl0gfHwgJ2JvdHRvbSc7XG4gICAgICB2YXIgcG9zaXRpb24yID0gcmlnaHQgPyAnZW5kJyA6ICdzdGFydCc7XG4gICAgICB2YXIgcG9wZXJQbGFjZW1lbnQgPSBwb3NpdGlvbjEgKyBcIi1cIiArIHBvc2l0aW9uMjtcbiAgICAgIHZhciBwb3Blck1vZGlmaWVycyA9ICFmbGlwID8gX29iamVjdFNwcmVhZDIoe30sIG1vZGlmaWVycywge30sIG5vRmxpcE1vZGlmaWVyKSA6IG1vZGlmaWVycztcbiAgICAgIHZhciBwb3BwZXJQb3NpdGlvbkZpeGVkID0gISFwb3NpdGlvbkZpeGVkO1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUG9wcGVyLCB7XG4gICAgICAgIHBsYWNlbWVudDogcG9wZXJQbGFjZW1lbnQsXG4gICAgICAgIG1vZGlmaWVyczogcG9wZXJNb2RpZmllcnMsXG4gICAgICAgIHBvc2l0aW9uRml4ZWQ6IHBvcHBlclBvc2l0aW9uRml4ZWRcbiAgICAgIH0sIGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgICAgIHZhciByZWYgPSBfcmVmLnJlZixcbiAgICAgICAgICAgIHN0eWxlID0gX3JlZi5zdHlsZSxcbiAgICAgICAgICAgIHBsYWNlbWVudCA9IF9yZWYucGxhY2VtZW50O1xuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChUYWcsIF9leHRlbmRzKHtcbiAgICAgICAgICB0YWJJbmRleDogXCItMVwiLFxuICAgICAgICAgIHJvbGU6IFwibWVudVwiLFxuICAgICAgICAgIHJlZjogcmVmLFxuICAgICAgICAgIHN0eWxlOiBzdHlsZVxuICAgICAgICB9LCBhdHRycywge1xuICAgICAgICAgIFwiYXJpYS1oaWRkZW5cIjogIV90aGlzLmNvbnRleHQuaXNPcGVuLFxuICAgICAgICAgIGNsYXNzTmFtZTogY2xhc3NlcyxcbiAgICAgICAgICBcIngtcGxhY2VtZW50XCI6IHBsYWNlbWVudFxuICAgICAgICB9KSk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChUYWcsIF9leHRlbmRzKHtcbiAgICAgIHRhYkluZGV4OiBcIi0xXCIsXG4gICAgICByb2xlOiBcIm1lbnVcIlxuICAgIH0sIGF0dHJzLCB7XG4gICAgICBcImFyaWEtaGlkZGVuXCI6ICF0aGlzLmNvbnRleHQuaXNPcGVuLFxuICAgICAgY2xhc3NOYW1lOiBjbGFzc2VzLFxuICAgICAgXCJ4LXBsYWNlbWVudFwiOiBhdHRycy5wbGFjZW1lbnRcbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIERyb3Bkb3duTWVudTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuO1xuRHJvcGRvd25NZW51LnByb3BUeXBlcyA9IHByb3BUeXBlcztcbkRyb3Bkb3duTWVudS5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5Ecm9wZG93bk1lbnUuY29udGV4dFR5cGUgPSBEcm9wZG93bkNvbnRleHQ7XG5leHBvcnQgZGVmYXVsdCBEcm9wZG93bk1lbnU7IiwiaW1wb3J0IFJlYWN0LCB7IGNyZWF0ZUNvbnRleHQsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgY29uc3QgUHJvamVjdENvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG5cbmV4cG9ydCBmdW5jdGlvbiBQcm9qZWN0UHJvdmlkZXIocHJvcHMpIHtcbiAgY29uc3QgW3Byb2plY3QsIHNldFByb2plY3RdID0gdXNlU3RhdGUoe30pO1xuXG4gIC8vIGN1c3RvbSB1cGRhdGUgZnVuY3Rpb25cbiAgY29uc3QgdXBkYXRlUHJvamVjdCA9IG5ld1Byb2ogPT4ge1xuICAgIHNldFByb2plY3QobmV3UHJvaik7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8UHJvamVjdENvbnRleHQuUHJvdmlkZXJcbiAgICAgIHZhbHVlPXt7XG4gICAgICAgIHByb2plY3QsXG4gICAgICAgIHVwZGF0ZVByb2plY3RcbiAgICAgIH19XG4gICAgPlxuICAgICAge3Byb3BzLmNoaWxkcmVufVxuICAgIDwvUHJvamVjdENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9wcm9wLXR5cGVzICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1yZXN0cmljdGVkLXN5bnRheCAqL1xuLyogZXNsaW50LWRpc2FibGUgZ3VhcmQtZm9yLWluICovXG5pbXBvcnQgUmVhY3QsIHsgdXNlQ29udGV4dCwgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7XG4gIENvbnRhaW5lcixcbiAgUm93LFxuICBDb2wsXG4gIEJ1dHRvbixcbiAgQnV0dG9uRHJvcGRvd24sXG4gIERyb3Bkb3duVG9nZ2xlLFxuICBEcm9wZG93bk1lbnUsXG4gIERyb3Bkb3duSXRlbVxufSBmcm9tICdyZWFjdHN0cmFwJztcblxuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0ICdib290c3RyYXAvZGlzdC9jc3MvYm9vdHN0cmFwLmNzcyc7XG5pbXBvcnQgVmVydENvbFZpeiBmcm9tICcuL1ZlcnRDb2xWaXp0c3gudHN4JztcbmltcG9ydCB7IFByb2plY3RDb250ZXh0IH0gZnJvbSAnLi9Db250ZXh0L1Byb2plY3RDb250ZXh0JztcblxuZnVuY3Rpb24gVXNlckRhc2hib2FyZChwcm9wcykge1xuICBjb25zdCBbZHJvcGRvd25DYXRPcGVuLCBzZXRDYXRPcGVuXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICAvLyB0aGVzZSBhcmUgdXNlZCB0byBncmFiIGRhdGEgZnJvbSB3YXRjaG1vIGFuZCBsb2FkZWQgaXQgaW50byB0aGUgc3RhdGVcbiAgY29uc3QgW2RhdGFGcm9tU2VydmVyLCBzZXREYXRhRnJvbVNlcnZlcl0gPSB1c2VTdGF0ZShbXSk7XG4gIGNvbnN0IFtkYXRhR2FpbmVkLCBzZXREYXRhR2FpbmVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgY29uc3QgeyBwcm9qZWN0LCB1cGRhdGVQcm9qZWN0IH0gPSB1c2VDb250ZXh0KFByb2plY3RDb250ZXh0KTtcblxuICBpZiAoIXByb2plY3QucHJvamVjdHMpIHtcbiAgICBwcm9wcy5oaXN0b3J5LnB1c2goJy8nKTtcbiAgfVxuXG4gIC8vIHRoaXMgaXMgdG8gaG9sZCB0aGUgY3VycmVudCBjYXRlZ29yeSB0byBiZSBkaXNwbGF5ZWQgaW50IGhlIGJhciBncmFwaFxuICBjb25zdCBbY3VycmVudENhdCwgc2V0Q3VycmVudENhdF0gPSB1c2VTdGF0ZSgnJyk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWRhdGFHYWluZWQpIHtcbiAgICAgIGZldGNoKGAke3Byb2plY3QucHJvamVjdHN9L3BhcnNlZERhdGEuanNvbmApXG4gICAgICAgIC50aGVuKGRhdGEgPT4gZGF0YS5qc29uKCkpXG4gICAgICAgIC50aGVuKHBhcnNlZCA9PiB7XG4gICAgICAgICAgc2V0RGF0YUZyb21TZXJ2ZXIocGFyc2VkKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmxvZyhlcnIpKTtcbiAgICAgIHNldERhdGFHYWluZWQodHJ1ZSk7XG4gICAgfVxuICB9LCBbcHJvamVjdF0pO1xuXG4gIC8vIGZ1bmN0aW9uIHRoYXQgaXMgaW4gY2hhcmdlIG9mIGNoYW5naW5nIHRoZSBzdGF0ZVxuICBjb25zdCB0b2dnbGVDYXQgPSAoKSA9PiB7XG4gICAgc2V0Q2F0T3BlbighZHJvcGRvd25DYXRPcGVuKTtcbiAgfTtcbiAgLy8gZHJvcGRvd24gbWVudSBpdGVtcyBjb25zdHJ1Y3Rpb24gd2l0aCBjYXRlZ29yaWVzIGZyb20gdGhlIGRhdGEgKHRoZSBmaXJzdCBsYXllciBvZiBrZXlzIGluIHRoZSBvYmplY3QpXG4gIGNvbnN0IGNhdGVnb3JpZXNJbkRyb3BEb3duID0gW107XG4gIGZvciAoY29uc3QgY2F0ZWdvcnkgaW4gZGF0YUZyb21TZXJ2ZXIpIHtcbiAgICBjYXRlZ29yaWVzSW5Ecm9wRG93bi5wdXNoKFxuICAgICAgPERyb3Bkb3duSXRlbSBrZXk9e2NhdGVnb3J5fSBvbkNsaWNrPXsoKSA9PiBzZXRDdXJyZW50Q2F0KGNhdGVnb3J5KX0+XG4gICAgICAgIHtjYXRlZ29yeX1cbiAgICAgIDwvRHJvcGRvd25JdGVtPlxuICAgICk7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXYgaWQ9XCJVc2VyRGFzaGJvYXJkXCI+XG4gICAgICA8Q29udGFpbmVyPlxuICAgICAgICA8Um93IHhzPVwiMVwiPlxuICAgICAgICAgIDxDb2wgeHM9XCI2XCI+XG4gICAgICAgICAgICA8TGluayBpZD1cIm5hdlByb2pMaW5rXCIgdG89XCIvXCI+XG4gICAgICAgICAgICAgIDxCdXR0b24gY29sb3I9XCJzZWNvbmRhcnlcIiBpZD1cIm5hdlByb2pTZWxlY3RcIiBibG9jaz5cbiAgICAgICAgICAgICAgICBQcm9qZWN0Jm5ic3A7U2VsZWN0XG4gICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgIDwvQ29sPlxuICAgICAgICAgIDxDb2wgeHM9XCI2XCI+XG4gICAgICAgICAgICA8TGluayBpZD1cIm5hdkNvbmZpZ0xpbmtcIiB0bz1cIi9jb25maWdEYXNoXCI+XG4gICAgICAgICAgICAgIDxCdXR0b24gaWQ9XCJuYXZDb25maWdEYXNoXCIgY29sb3I9XCJzZWNvbmRhcnlcIiBibG9jaz5cbiAgICAgICAgICAgICAgICBDb25maWcmbmJzcDtEYXNoYm9hcmRcbiAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgPC9Db2w+XG4gICAgICAgIDwvUm93PlxuICAgICAgPC9Db250YWluZXI+XG5cbiAgICAgIDxoMT4gVXNlciBEYXNoYm9hcmQgPC9oMT5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2F0ZWdvcmllc0Ryb3BcIj5cbiAgICAgICAgPEJ1dHRvbkRyb3Bkb3duIGlzT3Blbj17ZHJvcGRvd25DYXRPcGVufSB0b2dnbGU9e3RvZ2dsZUNhdH0+XG4gICAgICAgICAgPERyb3Bkb3duVG9nZ2xlIGNhcmV0IGNvbG9yPVwicHJpbWFyeVwiPlxuICAgICAgICAgICAgQ2F0ZWdvcmllczpcbiAgICAgICAgICA8L0Ryb3Bkb3duVG9nZ2xlPlxuICAgICAgICAgIDxEcm9wZG93bk1lbnU+e2NhdGVnb3JpZXNJbkRyb3BEb3dufTwvRHJvcGRvd25NZW51PlxuICAgICAgICA8L0J1dHRvbkRyb3Bkb3duPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGlkPVwiY2hhcnRBcmVhXCI+XG4gICAgICAgIDxWZXJ0Q29sVml6IGRhdGFDYXQ9e2RhdGFGcm9tU2VydmVyW2N1cnJlbnRDYXRdfSAvPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFVzZXJEYXNoYm9hcmQ7XG4iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2Fzc2VydFRoaXNJbml0aWFsaXplZFwiO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlXCI7XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHsgbWFwVG9Dc3NNb2R1bGVzLCB0YWdQcm9wVHlwZSB9IGZyb20gJy4vdXRpbHMnO1xudmFyIHByb3BUeXBlcyA9IHtcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICBpbmxpbmU6IFByb3BUeXBlcy5ib29sLFxuICB0YWc6IHRhZ1Byb3BUeXBlLFxuICBpbm5lclJlZjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zdHJpbmddKSxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3NNb2R1bGU6IFByb3BUeXBlcy5vYmplY3Rcbn07XG52YXIgZGVmYXVsdFByb3BzID0ge1xuICB0YWc6ICdmb3JtJ1xufTtcblxudmFyIEZvcm0gPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoRm9ybSwgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gRm9ybShwcm9wcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX0NvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzO1xuICAgIF90aGlzLmdldFJlZiA9IF90aGlzLmdldFJlZi5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICBfdGhpcy5zdWJtaXQgPSBfdGhpcy5zdWJtaXQuYmluZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IEZvcm0ucHJvdG90eXBlO1xuXG4gIF9wcm90by5nZXRSZWYgPSBmdW5jdGlvbiBnZXRSZWYocmVmKSB7XG4gICAgaWYgKHRoaXMucHJvcHMuaW5uZXJSZWYpIHtcbiAgICAgIHRoaXMucHJvcHMuaW5uZXJSZWYocmVmKTtcbiAgICB9XG5cbiAgICB0aGlzLnJlZiA9IHJlZjtcbiAgfTtcblxuICBfcHJvdG8uc3VibWl0ID0gZnVuY3Rpb24gc3VibWl0KCkge1xuICAgIGlmICh0aGlzLnJlZikge1xuICAgICAgdGhpcy5yZWYuc3VibWl0KCk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgY2xhc3NOYW1lID0gX3RoaXMkcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgICBjc3NNb2R1bGUgPSBfdGhpcyRwcm9wcy5jc3NNb2R1bGUsXG4gICAgICAgIGlubGluZSA9IF90aGlzJHByb3BzLmlubGluZSxcbiAgICAgICAgVGFnID0gX3RoaXMkcHJvcHMudGFnLFxuICAgICAgICBpbm5lclJlZiA9IF90aGlzJHByb3BzLmlubmVyUmVmLFxuICAgICAgICBhdHRyaWJ1dGVzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3RoaXMkcHJvcHMsIFtcImNsYXNzTmFtZVwiLCBcImNzc01vZHVsZVwiLCBcImlubGluZVwiLCBcInRhZ1wiLCBcImlubmVyUmVmXCJdKTtcblxuICAgIHZhciBjbGFzc2VzID0gbWFwVG9Dc3NNb2R1bGVzKGNsYXNzTmFtZXMoY2xhc3NOYW1lLCBpbmxpbmUgPyAnZm9ybS1pbmxpbmUnIDogZmFsc2UpLCBjc3NNb2R1bGUpO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFRhZywgX2V4dGVuZHMoe30sIGF0dHJpYnV0ZXMsIHtcbiAgICAgIHJlZjogaW5uZXJSZWYsXG4gICAgICBjbGFzc05hbWU6IGNsYXNzZXNcbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIEZvcm07XG59KENvbXBvbmVudCk7XG5cbkZvcm0ucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuRm9ybS5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBGb3JtOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHsgbWFwVG9Dc3NNb2R1bGVzLCB0YWdQcm9wVHlwZSB9IGZyb20gJy4vdXRpbHMnO1xudmFyIHByb3BUeXBlcyA9IHtcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICByb3c6IFByb3BUeXBlcy5ib29sLFxuICBjaGVjazogUHJvcFR5cGVzLmJvb2wsXG4gIGlubGluZTogUHJvcFR5cGVzLmJvb2wsXG4gIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgdGFnOiB0YWdQcm9wVHlwZSxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3NNb2R1bGU6IFByb3BUeXBlcy5vYmplY3Rcbn07XG52YXIgZGVmYXVsdFByb3BzID0ge1xuICB0YWc6ICdkaXYnXG59O1xuXG52YXIgRm9ybUdyb3VwID0gZnVuY3Rpb24gRm9ybUdyb3VwKHByb3BzKSB7XG4gIHZhciBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgICBjc3NNb2R1bGUgPSBwcm9wcy5jc3NNb2R1bGUsXG4gICAgICByb3cgPSBwcm9wcy5yb3csXG4gICAgICBkaXNhYmxlZCA9IHByb3BzLmRpc2FibGVkLFxuICAgICAgY2hlY2sgPSBwcm9wcy5jaGVjayxcbiAgICAgIGlubGluZSA9IHByb3BzLmlubGluZSxcbiAgICAgIFRhZyA9IHByb3BzLnRhZyxcbiAgICAgIGF0dHJpYnV0ZXMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgW1wiY2xhc3NOYW1lXCIsIFwiY3NzTW9kdWxlXCIsIFwicm93XCIsIFwiZGlzYWJsZWRcIiwgXCJjaGVja1wiLCBcImlubGluZVwiLCBcInRhZ1wiXSk7XG5cbiAgdmFyIGNsYXNzZXMgPSBtYXBUb0Nzc01vZHVsZXMoY2xhc3NOYW1lcyhjbGFzc05hbWUsIHJvdyA/ICdyb3cnIDogZmFsc2UsIGNoZWNrID8gJ2Zvcm0tY2hlY2snIDogJ2Zvcm0tZ3JvdXAnLCBjaGVjayAmJiBpbmxpbmUgPyAnZm9ybS1jaGVjay1pbmxpbmUnIDogZmFsc2UsIGNoZWNrICYmIGRpc2FibGVkID8gJ2Rpc2FibGVkJyA6IGZhbHNlKSwgY3NzTW9kdWxlKTtcblxuICBpZiAoVGFnID09PSAnZmllbGRzZXQnKSB7XG4gICAgYXR0cmlidXRlcy5kaXNhYmxlZCA9IGRpc2FibGVkO1xuICB9XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVGFnLCBfZXh0ZW5kcyh7fSwgYXR0cmlidXRlcywge1xuICAgIGNsYXNzTmFtZTogY2xhc3Nlc1xuICB9KSk7XG59O1xuXG5Gb3JtR3JvdXAucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuRm9ybUdyb3VwLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IEZvcm1Hcm91cDsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7IG1hcFRvQ3NzTW9kdWxlcywgdGFnUHJvcFR5cGUsIGlzT2JqZWN0IH0gZnJvbSAnLi91dGlscyc7XG52YXIgY29sV2lkdGhzID0gWyd4cycsICdzbScsICdtZCcsICdsZycsICd4bCddO1xudmFyIHN0cmluZ09yTnVtYmVyUHJvcCA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5udW1iZXIsIFByb3BUeXBlcy5zdHJpbmddKTtcbnZhciBjb2x1bW5Qcm9wcyA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXIsIFByb3BUeXBlcy5zaGFwZSh7XG4gIHNpemU6IHN0cmluZ09yTnVtYmVyUHJvcCxcbiAgb3JkZXI6IHN0cmluZ09yTnVtYmVyUHJvcCxcbiAgb2Zmc2V0OiBzdHJpbmdPck51bWJlclByb3Bcbn0pXSk7XG52YXIgcHJvcFR5cGVzID0ge1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gIGhpZGRlbjogUHJvcFR5cGVzLmJvb2wsXG4gIGNoZWNrOiBQcm9wVHlwZXMuYm9vbCxcbiAgc2l6ZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgZm9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB0YWc6IHRhZ1Byb3BUeXBlLFxuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzc01vZHVsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgeHM6IGNvbHVtblByb3BzLFxuICBzbTogY29sdW1uUHJvcHMsXG4gIG1kOiBjb2x1bW5Qcm9wcyxcbiAgbGc6IGNvbHVtblByb3BzLFxuICB4bDogY29sdW1uUHJvcHMsXG4gIHdpZHRoczogUHJvcFR5cGVzLmFycmF5XG59O1xudmFyIGRlZmF1bHRQcm9wcyA9IHtcbiAgdGFnOiAnbGFiZWwnLFxuICB3aWR0aHM6IGNvbFdpZHRoc1xufTtcblxudmFyIGdldENvbHVtblNpemVDbGFzcyA9IGZ1bmN0aW9uIGdldENvbHVtblNpemVDbGFzcyhpc1hzLCBjb2xXaWR0aCwgY29sU2l6ZSkge1xuICBpZiAoY29sU2l6ZSA9PT0gdHJ1ZSB8fCBjb2xTaXplID09PSAnJykge1xuICAgIHJldHVybiBpc1hzID8gJ2NvbCcgOiBcImNvbC1cIiArIGNvbFdpZHRoO1xuICB9IGVsc2UgaWYgKGNvbFNpemUgPT09ICdhdXRvJykge1xuICAgIHJldHVybiBpc1hzID8gJ2NvbC1hdXRvJyA6IFwiY29sLVwiICsgY29sV2lkdGggKyBcIi1hdXRvXCI7XG4gIH1cblxuICByZXR1cm4gaXNYcyA/IFwiY29sLVwiICsgY29sU2l6ZSA6IFwiY29sLVwiICsgY29sV2lkdGggKyBcIi1cIiArIGNvbFNpemU7XG59O1xuXG52YXIgTGFiZWwgPSBmdW5jdGlvbiBMYWJlbChwcm9wcykge1xuICB2YXIgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgY3NzTW9kdWxlID0gcHJvcHMuY3NzTW9kdWxlLFxuICAgICAgaGlkZGVuID0gcHJvcHMuaGlkZGVuLFxuICAgICAgd2lkdGhzID0gcHJvcHMud2lkdGhzLFxuICAgICAgVGFnID0gcHJvcHMudGFnLFxuICAgICAgY2hlY2sgPSBwcm9wcy5jaGVjayxcbiAgICAgIHNpemUgPSBwcm9wcy5zaXplLFxuICAgICAgaHRtbEZvciA9IHByb3BzLmZvcixcbiAgICAgIGF0dHJpYnV0ZXMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgW1wiY2xhc3NOYW1lXCIsIFwiY3NzTW9kdWxlXCIsIFwiaGlkZGVuXCIsIFwid2lkdGhzXCIsIFwidGFnXCIsIFwiY2hlY2tcIiwgXCJzaXplXCIsIFwiZm9yXCJdKTtcblxuICB2YXIgY29sQ2xhc3NlcyA9IFtdO1xuICB3aWR0aHMuZm9yRWFjaChmdW5jdGlvbiAoY29sV2lkdGgsIGkpIHtcbiAgICB2YXIgY29sdW1uUHJvcCA9IHByb3BzW2NvbFdpZHRoXTtcbiAgICBkZWxldGUgYXR0cmlidXRlc1tjb2xXaWR0aF07XG5cbiAgICBpZiAoIWNvbHVtblByb3AgJiYgY29sdW1uUHJvcCAhPT0gJycpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgaXNYcyA9ICFpO1xuICAgIHZhciBjb2xDbGFzcztcblxuICAgIGlmIChpc09iamVjdChjb2x1bW5Qcm9wKSkge1xuICAgICAgdmFyIF9jbGFzc05hbWVzO1xuXG4gICAgICB2YXIgY29sU2l6ZUludGVyZml4ID0gaXNYcyA/ICctJyA6IFwiLVwiICsgY29sV2lkdGggKyBcIi1cIjtcbiAgICAgIGNvbENsYXNzID0gZ2V0Q29sdW1uU2l6ZUNsYXNzKGlzWHMsIGNvbFdpZHRoLCBjb2x1bW5Qcm9wLnNpemUpO1xuICAgICAgY29sQ2xhc3Nlcy5wdXNoKG1hcFRvQ3NzTW9kdWxlcyhjbGFzc05hbWVzKChfY2xhc3NOYW1lcyA9IHt9LCBfY2xhc3NOYW1lc1tjb2xDbGFzc10gPSBjb2x1bW5Qcm9wLnNpemUgfHwgY29sdW1uUHJvcC5zaXplID09PSAnJywgX2NsYXNzTmFtZXNbXCJvcmRlclwiICsgY29sU2l6ZUludGVyZml4ICsgY29sdW1uUHJvcC5vcmRlcl0gPSBjb2x1bW5Qcm9wLm9yZGVyIHx8IGNvbHVtblByb3Aub3JkZXIgPT09IDAsIF9jbGFzc05hbWVzW1wib2Zmc2V0XCIgKyBjb2xTaXplSW50ZXJmaXggKyBjb2x1bW5Qcm9wLm9mZnNldF0gPSBjb2x1bW5Qcm9wLm9mZnNldCB8fCBjb2x1bW5Qcm9wLm9mZnNldCA9PT0gMCwgX2NsYXNzTmFtZXMpKSksIGNzc01vZHVsZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbENsYXNzID0gZ2V0Q29sdW1uU2l6ZUNsYXNzKGlzWHMsIGNvbFdpZHRoLCBjb2x1bW5Qcm9wKTtcbiAgICAgIGNvbENsYXNzZXMucHVzaChjb2xDbGFzcyk7XG4gICAgfVxuICB9KTtcbiAgdmFyIGNsYXNzZXMgPSBtYXBUb0Nzc01vZHVsZXMoY2xhc3NOYW1lcyhjbGFzc05hbWUsIGhpZGRlbiA/ICdzci1vbmx5JyA6IGZhbHNlLCBjaGVjayA/ICdmb3JtLWNoZWNrLWxhYmVsJyA6IGZhbHNlLCBzaXplID8gXCJjb2wtZm9ybS1sYWJlbC1cIiArIHNpemUgOiBmYWxzZSwgY29sQ2xhc3NlcywgY29sQ2xhc3Nlcy5sZW5ndGggPyAnY29sLWZvcm0tbGFiZWwnIDogZmFsc2UpLCBjc3NNb2R1bGUpO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChUYWcsIF9leHRlbmRzKHtcbiAgICBodG1sRm9yOiBodG1sRm9yXG4gIH0sIGF0dHJpYnV0ZXMsIHtcbiAgICBjbGFzc05hbWU6IGNsYXNzZXNcbiAgfSkpO1xufTtcblxuTGFiZWwucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuTGFiZWwuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgTGFiZWw7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfYXNzZXJ0VGhpc0luaXRpYWxpemVkIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWRcIjtcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZVwiO1xuXG4vKiBlc2xpbnQgcmVhY3QvcHJlZmVyLXN0YXRlbGVzcy1mdW5jdGlvbjogMCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7IG1hcFRvQ3NzTW9kdWxlcywgd2Fybk9uY2UsIHRhZ1Byb3BUeXBlIH0gZnJvbSAnLi91dGlscyc7XG52YXIgcHJvcFR5cGVzID0ge1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGJzU2l6ZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgdmFsaWQ6IFByb3BUeXBlcy5ib29sLFxuICBpbnZhbGlkOiBQcm9wVHlwZXMuYm9vbCxcbiAgdGFnOiB0YWdQcm9wVHlwZSxcbiAgaW5uZXJSZWY6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc3RyaW5nXSksXG4gIHBsYWludGV4dDogUHJvcFR5cGVzLmJvb2wsXG4gIGFkZG9uOiBQcm9wVHlwZXMuYm9vbCxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3NNb2R1bGU6IFByb3BUeXBlcy5vYmplY3Rcbn07XG52YXIgZGVmYXVsdFByb3BzID0ge1xuICB0eXBlOiAndGV4dCdcbn07XG5cbnZhciBJbnB1dCA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShJbnB1dCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gSW5wdXQocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICBfdGhpcy5nZXRSZWYgPSBfdGhpcy5nZXRSZWYuYmluZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgX3RoaXMuZm9jdXMgPSBfdGhpcy5mb2N1cy5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gSW5wdXQucHJvdG90eXBlO1xuXG4gIF9wcm90by5nZXRSZWYgPSBmdW5jdGlvbiBnZXRSZWYocmVmKSB7XG4gICAgaWYgKHRoaXMucHJvcHMuaW5uZXJSZWYpIHtcbiAgICAgIHRoaXMucHJvcHMuaW5uZXJSZWYocmVmKTtcbiAgICB9XG5cbiAgICB0aGlzLnJlZiA9IHJlZjtcbiAgfTtcblxuICBfcHJvdG8uZm9jdXMgPSBmdW5jdGlvbiBmb2N1cygpIHtcbiAgICBpZiAodGhpcy5yZWYpIHtcbiAgICAgIHRoaXMucmVmLmZvY3VzKCk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgY2xhc3NOYW1lID0gX3RoaXMkcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgICBjc3NNb2R1bGUgPSBfdGhpcyRwcm9wcy5jc3NNb2R1bGUsXG4gICAgICAgIHR5cGUgPSBfdGhpcyRwcm9wcy50eXBlLFxuICAgICAgICBic1NpemUgPSBfdGhpcyRwcm9wcy5ic1NpemUsXG4gICAgICAgIHZhbGlkID0gX3RoaXMkcHJvcHMudmFsaWQsXG4gICAgICAgIGludmFsaWQgPSBfdGhpcyRwcm9wcy5pbnZhbGlkLFxuICAgICAgICB0YWcgPSBfdGhpcyRwcm9wcy50YWcsXG4gICAgICAgIGFkZG9uID0gX3RoaXMkcHJvcHMuYWRkb24sXG4gICAgICAgIHBsYWludGV4dCA9IF90aGlzJHByb3BzLnBsYWludGV4dCxcbiAgICAgICAgaW5uZXJSZWYgPSBfdGhpcyRwcm9wcy5pbm5lclJlZixcbiAgICAgICAgYXR0cmlidXRlcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF90aGlzJHByb3BzLCBbXCJjbGFzc05hbWVcIiwgXCJjc3NNb2R1bGVcIiwgXCJ0eXBlXCIsIFwiYnNTaXplXCIsIFwidmFsaWRcIiwgXCJpbnZhbGlkXCIsIFwidGFnXCIsIFwiYWRkb25cIiwgXCJwbGFpbnRleHRcIiwgXCJpbm5lclJlZlwiXSk7XG5cbiAgICB2YXIgY2hlY2tJbnB1dCA9IFsncmFkaW8nLCAnY2hlY2tib3gnXS5pbmRleE9mKHR5cGUpID4gLTE7XG4gICAgdmFyIGlzTm90YU51bWJlciA9IG5ldyBSZWdFeHAoJ1xcXFxEJywgJ2cnKTtcbiAgICB2YXIgZmlsZUlucHV0ID0gdHlwZSA9PT0gJ2ZpbGUnO1xuICAgIHZhciB0ZXh0YXJlYUlucHV0ID0gdHlwZSA9PT0gJ3RleHRhcmVhJztcbiAgICB2YXIgc2VsZWN0SW5wdXQgPSB0eXBlID09PSAnc2VsZWN0JztcbiAgICB2YXIgVGFnID0gdGFnIHx8IChzZWxlY3RJbnB1dCB8fCB0ZXh0YXJlYUlucHV0ID8gdHlwZSA6ICdpbnB1dCcpO1xuICAgIHZhciBmb3JtQ29udHJvbENsYXNzID0gJ2Zvcm0tY29udHJvbCc7XG5cbiAgICBpZiAocGxhaW50ZXh0KSB7XG4gICAgICBmb3JtQ29udHJvbENsYXNzID0gZm9ybUNvbnRyb2xDbGFzcyArIFwiLXBsYWludGV4dFwiO1xuICAgICAgVGFnID0gdGFnIHx8ICdpbnB1dCc7XG4gICAgfSBlbHNlIGlmIChmaWxlSW5wdXQpIHtcbiAgICAgIGZvcm1Db250cm9sQ2xhc3MgPSBmb3JtQ29udHJvbENsYXNzICsgXCItZmlsZVwiO1xuICAgIH0gZWxzZSBpZiAoY2hlY2tJbnB1dCkge1xuICAgICAgaWYgKGFkZG9uKSB7XG4gICAgICAgIGZvcm1Db250cm9sQ2xhc3MgPSBudWxsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm9ybUNvbnRyb2xDbGFzcyA9ICdmb3JtLWNoZWNrLWlucHV0JztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoYXR0cmlidXRlcy5zaXplICYmIGlzTm90YU51bWJlci50ZXN0KGF0dHJpYnV0ZXMuc2l6ZSkpIHtcbiAgICAgIHdhcm5PbmNlKCdQbGVhc2UgdXNlIHRoZSBwcm9wIFwiYnNTaXplXCIgaW5zdGVhZCBvZiB0aGUgXCJzaXplXCIgdG8gYm9vdHN0cmFwXFwncyBpbnB1dCBzaXppbmcuJyk7XG4gICAgICBic1NpemUgPSBhdHRyaWJ1dGVzLnNpemU7XG4gICAgICBkZWxldGUgYXR0cmlidXRlcy5zaXplO1xuICAgIH1cblxuICAgIHZhciBjbGFzc2VzID0gbWFwVG9Dc3NNb2R1bGVzKGNsYXNzTmFtZXMoY2xhc3NOYW1lLCBpbnZhbGlkICYmICdpcy1pbnZhbGlkJywgdmFsaWQgJiYgJ2lzLXZhbGlkJywgYnNTaXplID8gXCJmb3JtLWNvbnRyb2wtXCIgKyBic1NpemUgOiBmYWxzZSwgZm9ybUNvbnRyb2xDbGFzcyksIGNzc01vZHVsZSk7XG5cbiAgICBpZiAoVGFnID09PSAnaW5wdXQnIHx8IHRhZyAmJiB0eXBlb2YgdGFnID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBhdHRyaWJ1dGVzLnR5cGUgPSB0eXBlO1xuICAgIH1cblxuICAgIGlmIChhdHRyaWJ1dGVzLmNoaWxkcmVuICYmICEocGxhaW50ZXh0IHx8IHR5cGUgPT09ICdzZWxlY3QnIHx8IHR5cGVvZiBUYWcgIT09ICdzdHJpbmcnIHx8IFRhZyA9PT0gJ3NlbGVjdCcpKSB7XG4gICAgICB3YXJuT25jZShcIklucHV0IHdpdGggYSB0eXBlIG9mIFxcXCJcIiArIHR5cGUgKyBcIlxcXCIgY2Fubm90IGhhdmUgY2hpbGRyZW4uIFBsZWFzZSB1c2UgXFxcInZhbHVlXFxcIi9cXFwiZGVmYXVsdFZhbHVlXFxcIiBpbnN0ZWFkLlwiKTtcbiAgICAgIGRlbGV0ZSBhdHRyaWJ1dGVzLmNoaWxkcmVuO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFRhZywgX2V4dGVuZHMoe30sIGF0dHJpYnV0ZXMsIHtcbiAgICAgIHJlZjogaW5uZXJSZWYsXG4gICAgICBjbGFzc05hbWU6IGNsYXNzZXNcbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIElucHV0O1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5JbnB1dC5wcm9wVHlwZXMgPSBwcm9wVHlwZXM7XG5JbnB1dC5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBJbnB1dDsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7IG1hcFRvQ3NzTW9kdWxlcywgdGFnUHJvcFR5cGUgfSBmcm9tICcuL3V0aWxzJztcbnZhciBwcm9wVHlwZXMgPSB7XG4gIHRhZzogdGFnUHJvcFR5cGUsXG4gIGludmVyc2U6IFByb3BUeXBlcy5ib29sLFxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgYm9keTogUHJvcFR5cGVzLmJvb2wsXG4gIG91dGxpbmU6IFByb3BUeXBlcy5ib29sLFxuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzc01vZHVsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgaW5uZXJSZWY6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jXSlcbn07XG52YXIgZGVmYXVsdFByb3BzID0ge1xuICB0YWc6ICdkaXYnXG59O1xuXG52YXIgQ2FyZCA9IGZ1bmN0aW9uIENhcmQocHJvcHMpIHtcbiAgdmFyIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGNzc01vZHVsZSA9IHByb3BzLmNzc01vZHVsZSxcbiAgICAgIGNvbG9yID0gcHJvcHMuY29sb3IsXG4gICAgICBib2R5ID0gcHJvcHMuYm9keSxcbiAgICAgIGludmVyc2UgPSBwcm9wcy5pbnZlcnNlLFxuICAgICAgb3V0bGluZSA9IHByb3BzLm91dGxpbmUsXG4gICAgICBUYWcgPSBwcm9wcy50YWcsXG4gICAgICBpbm5lclJlZiA9IHByb3BzLmlubmVyUmVmLFxuICAgICAgYXR0cmlidXRlcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBbXCJjbGFzc05hbWVcIiwgXCJjc3NNb2R1bGVcIiwgXCJjb2xvclwiLCBcImJvZHlcIiwgXCJpbnZlcnNlXCIsIFwib3V0bGluZVwiLCBcInRhZ1wiLCBcImlubmVyUmVmXCJdKTtcblxuICB2YXIgY2xhc3NlcyA9IG1hcFRvQ3NzTW9kdWxlcyhjbGFzc05hbWVzKGNsYXNzTmFtZSwgJ2NhcmQnLCBpbnZlcnNlID8gJ3RleHQtd2hpdGUnIDogZmFsc2UsIGJvZHkgPyAnY2FyZC1ib2R5JyA6IGZhbHNlLCBjb2xvciA/IChvdXRsaW5lID8gJ2JvcmRlcicgOiAnYmcnKSArIFwiLVwiICsgY29sb3IgOiBmYWxzZSksIGNzc01vZHVsZSk7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFRhZywgX2V4dGVuZHMoe30sIGF0dHJpYnV0ZXMsIHtcbiAgICBjbGFzc05hbWU6IGNsYXNzZXMsXG4gICAgcmVmOiBpbm5lclJlZlxuICB9KSk7XG59O1xuXG5DYXJkLnByb3BUeXBlcyA9IHByb3BUeXBlcztcbkNhcmQuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ2FyZDsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7IG1hcFRvQ3NzTW9kdWxlcywgdGFnUHJvcFR5cGUgfSBmcm9tICcuL3V0aWxzJztcbnZhciBwcm9wVHlwZXMgPSB7XG4gIHRhZzogdGFnUHJvcFR5cGUsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzTW9kdWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICBpbm5lclJlZjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmNdKVxufTtcbnZhciBkZWZhdWx0UHJvcHMgPSB7XG4gIHRhZzogJ2Rpdidcbn07XG5cbnZhciBDYXJkQm9keSA9IGZ1bmN0aW9uIENhcmRCb2R5KHByb3BzKSB7XG4gIHZhciBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgICBjc3NNb2R1bGUgPSBwcm9wcy5jc3NNb2R1bGUsXG4gICAgICBpbm5lclJlZiA9IHByb3BzLmlubmVyUmVmLFxuICAgICAgVGFnID0gcHJvcHMudGFnLFxuICAgICAgYXR0cmlidXRlcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBbXCJjbGFzc05hbWVcIiwgXCJjc3NNb2R1bGVcIiwgXCJpbm5lclJlZlwiLCBcInRhZ1wiXSk7XG5cbiAgdmFyIGNsYXNzZXMgPSBtYXBUb0Nzc01vZHVsZXMoY2xhc3NOYW1lcyhjbGFzc05hbWUsICdjYXJkLWJvZHknKSwgY3NzTW9kdWxlKTtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVGFnLCBfZXh0ZW5kcyh7fSwgYXR0cmlidXRlcywge1xuICAgIGNsYXNzTmFtZTogY2xhc3NlcyxcbiAgICByZWY6IGlubmVyUmVmXG4gIH0pKTtcbn07XG5cbkNhcmRCb2R5LnByb3BUeXBlcyA9IHByb3BUeXBlcztcbkNhcmRCb2R5LmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENhcmRCb2R5OyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHsgbWFwVG9Dc3NNb2R1bGVzLCB0YWdQcm9wVHlwZSB9IGZyb20gJy4vdXRpbHMnO1xudmFyIHByb3BUeXBlcyA9IHtcbiAgdGFnOiB0YWdQcm9wVHlwZSxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3NNb2R1bGU6IFByb3BUeXBlcy5vYmplY3Rcbn07XG52YXIgZGVmYXVsdFByb3BzID0ge1xuICB0YWc6ICdkaXYnXG59O1xuXG52YXIgQ2FyZFRpdGxlID0gZnVuY3Rpb24gQ2FyZFRpdGxlKHByb3BzKSB7XG4gIHZhciBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgICBjc3NNb2R1bGUgPSBwcm9wcy5jc3NNb2R1bGUsXG4gICAgICBUYWcgPSBwcm9wcy50YWcsXG4gICAgICBhdHRyaWJ1dGVzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIFtcImNsYXNzTmFtZVwiLCBcImNzc01vZHVsZVwiLCBcInRhZ1wiXSk7XG5cbiAgdmFyIGNsYXNzZXMgPSBtYXBUb0Nzc01vZHVsZXMoY2xhc3NOYW1lcyhjbGFzc05hbWUsICdjYXJkLXRpdGxlJyksIGNzc01vZHVsZSk7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFRhZywgX2V4dGVuZHMoe30sIGF0dHJpYnV0ZXMsIHtcbiAgICBjbGFzc05hbWU6IGNsYXNzZXNcbiAgfSkpO1xufTtcblxuQ2FyZFRpdGxlLnByb3BUeXBlcyA9IHByb3BUeXBlcztcbkNhcmRUaXRsZS5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDYXJkVGl0bGU7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgeyBtYXBUb0Nzc01vZHVsZXMsIHRhZ1Byb3BUeXBlIH0gZnJvbSAnLi91dGlscyc7XG52YXIgcHJvcFR5cGVzID0ge1xuICB0YWc6IHRhZ1Byb3BUeXBlLFxuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzc01vZHVsZTogUHJvcFR5cGVzLm9iamVjdFxufTtcbnZhciBkZWZhdWx0UHJvcHMgPSB7XG4gIHRhZzogJ2Rpdidcbn07XG5cbnZhciBDYXJkU3VidGl0bGUgPSBmdW5jdGlvbiBDYXJkU3VidGl0bGUocHJvcHMpIHtcbiAgdmFyIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGNzc01vZHVsZSA9IHByb3BzLmNzc01vZHVsZSxcbiAgICAgIFRhZyA9IHByb3BzLnRhZyxcbiAgICAgIGF0dHJpYnV0ZXMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgW1wiY2xhc3NOYW1lXCIsIFwiY3NzTW9kdWxlXCIsIFwidGFnXCJdKTtcblxuICB2YXIgY2xhc3NlcyA9IG1hcFRvQ3NzTW9kdWxlcyhjbGFzc05hbWVzKGNsYXNzTmFtZSwgJ2NhcmQtc3VidGl0bGUnKSwgY3NzTW9kdWxlKTtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVGFnLCBfZXh0ZW5kcyh7fSwgYXR0cmlidXRlcywge1xuICAgIGNsYXNzTmFtZTogY2xhc3Nlc1xuICB9KSk7XG59O1xuXG5DYXJkU3VidGl0bGUucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuQ2FyZFN1YnRpdGxlLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENhcmRTdWJ0aXRsZTsiLCIvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9wcm9wLXR5cGVzICovXG4vKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9kZXN0cnVjdHVyaW5nLWFzc2lnbm1lbnQgKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBCdXR0b24sIElucHV0IH0gZnJvbSAncmVhY3RzdHJhcCc7XG5pbXBvcnQgeyBydW50aW1lIH0gZnJvbSAncmVnZW5lcmF0b3ItcnVudGltZSc7XG5pbXBvcnQgJy4uL3N0eWxlc2hlZXRzL3N0eWxlLnNjc3MnO1xuLy8gaW1wb3J0IHsgR3JhcGhxbENvZGVCbG9jayB9IGZyb20gJ2dyYXBocWwtc3ludGF4LWhpZ2hsaWdodGVyLXJlYWN0JztcblxuY29uc3QgUXVlcnlJdGVtID0gcHJvcHMgPT4ge1xuICAvLyBjb25zdCBbcXVlcnlTdHJpbmdzLCBzZXRRdWVyeVN0cmluZ10gPSB1c2VTdGF0ZShwcm9wcy5xdWVyeUl0ZW0pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBrZXk9e2Ake3Byb3BzLmlkfS1xdWVyeUl0ZW1gfSBpZD17YCR7cHJvcHMuaWR9LXF1ZXJ5SXRlbWB9PlxuICAgICAgPHNwYW4gY2xhc3NOYW1lPVwicXVlcnlTcGFuXCI+XG4gICAgICAgIDxJbnB1dFxuICAgICAgICAgIHR5cGU9XCJ0ZXh0YXJlYVwiXG4gICAgICAgICAgbmFtZT1cInF1ZXJ5U3RyaW5nXCJcbiAgICAgICAgICBpZD17YCR7cHJvcHMuaWR9LXF1ZXJpZXNgfVxuICAgICAgICAgIHBsYWNlaG9sZGVyPVwiSW5wdXQgeW91ciBHcmFwaFFMIHF1ZXJpZXNcIlxuICAgICAgICAgIHZhbHVlPXtwcm9wcy5xdWVyeUl0ZW19XG4gICAgICAgICAgb25DaGFuZ2U9e3Byb3BzLnF1ZXJ5Q2hhbmdlfVxuICAgICAgICAvPlxuICAgICAgICA8QnV0dG9uXG4gICAgICAgICAga2V5PXtgYnV0dG9uLSR7cHJvcHMuaWR9YH1cbiAgICAgICAgICBjbGFzc05hbWU9XCJkZWxldGVCdG5cIlxuICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgIHNpemU9XCJzbVwiXG4gICAgICAgICAgaWQ9e2Ake3Byb3BzLmlkfS1kZWxldGVgfVxuICAgICAgICAgIG9uQ2xpY2s9e3Byb3BzLmRlbGV0ZVF1ZXJ5fVxuICAgICAgICAgIGNvbG9yPVwic2Vjb25kYXJ5XCJcbiAgICAgICAgPlxuICAgICAgICAgIFhcbiAgICAgICAgPC9CdXR0b24+XG4gICAgICA8L3NwYW4+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBRdWVyeUl0ZW07XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9wcm9wLXR5cGVzICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSAncmVhY3RzdHJhcCc7XG5pbXBvcnQgUXVlcnlJdGVtIGZyb20gJy4vUXVlcnlJdGVtJztcbmltcG9ydCAnLi4vc3R5bGVzaGVldHMvc3R5bGUuc2Nzcyc7XG4vLyBpbXBvcnQgeyBHcmFwaHFsQ29kZUJsb2NrIH0gZnJvbSAnZ3JhcGhxbC1zeW50YXgtaGlnaGxpZ2h0ZXItcmVhY3QnO1xuXG5jb25zdCBRdWVyeUxpc3QgPSBwcm9wcyA9PiB7XG4gIGNvbnN0IHF1ZXJ5SXRlbXMgPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcm9wcy5xdWVyaWVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgcXVlcnlJdGVtcy5wdXNoKFxuICAgICAgPFF1ZXJ5SXRlbVxuICAgICAgICBrZXk9e2l9XG4gICAgICAgIGlkPXtgJHtwcm9wcy5uYW1lfS0ke2l9YH1cbiAgICAgICAgbmFtZT17YCR7cHJvcHMubmFtZX0tcXVlcnlJdGVtYH1cbiAgICAgICAgcXVlcnlJdGVtPXtgJHtwcm9wcy5xdWVyaWVzW2ldfWB9XG4gICAgICAgIHF1ZXJ5Q2hhbmdlPXtwcm9wcy5xdWVyeUNoYW5nZX1cbiAgICAgICAgZGVsZXRlUXVlcnk9e3Byb3BzLmRlbGV0ZVF1ZXJ5fVxuICAgICAgLz5cbiAgICApO1xuICB9XG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDxGb3JtR3JvdXA+XG4gICAgICAgIHtxdWVyeUl0ZW1zfVxuICAgICAgICB7LyogPEdyYXBocWxDb2RlQmxvY2sgY2xhc3NOYW1lPVwiR3JhcGhxbENvZGVCbG9ja1wiIHF1ZXJ5Qm9keT17YCR7cXVlcnlTdHJpbmdzfWB9IC8+ICovfVxuICAgICAgPC9Gb3JtR3JvdXA+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBRdWVyeUxpc3Q7XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSBpbXBvcnQvbm8tY3ljbGUgKi9cbi8qIGVzbGludC1kaXNhYmxlIHJlYWN0L2Rlc3RydWN0dXJpbmctYXNzaWdubWVudCAqL1xuLyogZXNsaW50LWRpc2FibGUgcmVhY3QvcHJvcC10eXBlcyAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEJ1dHRvbiwgQ2FyZFRpdGxlLCBDYXJkU3VidGl0bGUsIElucHV0IH0gZnJvbSAncmVhY3RzdHJhcCc7XG5pbXBvcnQgJy4uL3N0eWxlc2hlZXRzL3N0eWxlLnNjc3MnO1xuaW1wb3J0IFF1ZXJ5TGlzdCBmcm9tICcuL1F1ZXJ5TGlzdCc7XG4vLyBpbXBvcnQgeyBHcmFwaHFsQ29kZUJsb2NrIH0gZnJvbSAnZ3JhcGhxbC1zeW50YXgtaGlnaGxpZ2h0ZXItcmVhY3QnO1xuXG5jb25zdCBDYXRlZ29yeURhdGEgPSBwcm9wcyA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDxDYXJkVGl0bGU+XG4gICAgICAgIDxoND57cHJvcHMuY2F0RGF0YS5uYW1lfTwvaDQ+XG4gICAgICA8L0NhcmRUaXRsZT5cbiAgICAgIDxDYXJkU3VidGl0bGU+XG4gICAgICAgIEZyZXF1ZW5jeShtcyk6IDxiciAvPnsnICd9XG4gICAgICAgIDxkaXYgaWQ9XCJmcmVxRXhhbXBsZXNcIj5cbiAgICAgICAgICAoZXg6IDEgc2VjID0gMTAwMDsgMSBtaW4gPSA2MDAwMDsgMzAgbWluID0gMTgwMDAwMDsgMSBob3VyID0gMzYwMDAwMDsgMSBkYXkgPSA4NjQwMDAwMClcbiAgICAgICAgPC9kaXY+XG4gICAgICA8L0NhcmRTdWJ0aXRsZT5cbiAgICAgIDxJbnB1dFxuICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgIG5hbWU9XCJmcmVxdWVuY3lcIlxuICAgICAgICBpZD17YCR7cHJvcHMuY2F0RGF0YS5uYW1lfS1mcmVxYH1cbiAgICAgICAgcGxhY2Vob2xkZXI9XCJTZXQgZnJlcXVlbmN5IG9mIHF1ZXJ5IGV4ZWN1dGlvblwiXG4gICAgICAgIHZhbHVlPXtwcm9wcy5jYXREYXRhLmZyZXF1ZW5jeX1cbiAgICAgICAgb25DaGFuZ2U9e3Byb3BzLmZyZXFDaGFuZ2V9XG4gICAgICAvPlxuICAgICAgPGJyIC8+XG4gICAgICA8Q2FyZFN1YnRpdGxlPlF1ZXJpZXM6PC9DYXJkU3VidGl0bGU+XG4gICAgICA8UXVlcnlMaXN0XG4gICAgICAgIGtleT17cHJvcHMuY2F0RGF0YS5uYW1lfVxuICAgICAgICBuYW1lPXtwcm9wcy5jYXREYXRhLm5hbWV9XG4gICAgICAgIHF1ZXJpZXM9e3Byb3BzLmNhdERhdGEucXVlcmllc31cbiAgICAgICAgZGVsZXRlUXVlcnk9e3Byb3BzLmRlbGV0ZVF1ZXJ5fVxuICAgICAgICBxdWVyeUNoYW5nZT17cHJvcHMucXVlcnlDaGFuZ2V9XG4gICAgICAvPlxuICAgICAgPGRpdiBpZD1cImJ0bkFkZFF1ZXJ5XCI+XG4gICAgICAgIDxCdXR0b25cbiAgICAgICAgICBjbGFzc05hbWU9XCJhZGRRdWVyeUJ0blwiXG4gICAgICAgICAgY29sb3I9XCJwcmltYXJ5XCJcbiAgICAgICAgICBzaXplPVwibWRcIlxuICAgICAgICAgIGlkPXtgJHtwcm9wcy5jYXREYXRhLm5hbWV9LWFkZFF1ZXJ5YH1cbiAgICAgICAgICBvbkNsaWNrPXtwcm9wcy5hZGRRdWVyeX1cbiAgICAgICAgICBibG9ja1xuICAgICAgICA+XG4gICAgICAgICAgQWRkIFF1ZXJ5XG4gICAgICAgIDwvQnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuZXhwb3J0IGRlZmF1bHQgQ2F0ZWdvcnlEYXRhO1xuIiwiLyogZXNsaW50LWRpc2FibGUgbm8tcmVzdHJpY3RlZC1zeW50YXggKi9cbi8qIGVzbGludC1kaXNhYmxlIHJlYWN0L2Rlc3RydWN0dXJpbmctYXNzaWdubWVudCAqL1xuLyogZXNsaW50LWRpc2FibGUgcmVhY3QvcHJvcC10eXBlcyAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IENhcmQsIENhcmRCb2R5IH0gZnJvbSAncmVhY3RzdHJhcCc7XG5pbXBvcnQgJy4uL3N0eWxlc2hlZXRzL3N0eWxlLnNjc3MnO1xuaW1wb3J0IENhdGVnb3J5RGF0YSBmcm9tICcuL0NhdGVnb3J5RGF0YSc7XG4vLyBpbXBvcnQgeyBHcmFwaHFsQ29kZUJsb2NrIH0gZnJvbSAnZ3JhcGhxbC1zeW50YXgtaGlnaGxpZ2h0ZXItcmVhY3QnO1xuXG5jb25zdCBDYXRlZ29yeSA9IHByb3BzID0+IHtcbiAgY29uc3QgY2F0ZWdvcnlDYXJkcyA9IFtdO1xuICBmdW5jdGlvbiBjYXRlZ29yeUJ1aWxkZXIoY2F0RGF0YVBhcmFtKSB7XG4gICAgZm9yIChjb25zdCBjYXRlZ29yeSBvZiBjYXREYXRhUGFyYW0pIHtcbiAgICAgIGNhdGVnb3J5Q2FyZHMucHVzaChcbiAgICAgICAgPGRpdiBrZXk9e2NhdGVnb3J5Lm5hbWV9PlxuICAgICAgICAgIDxDYXJkIHNpemU9XCJtZFwiIG5hbWU9e2NhdGVnb3J5Lm5hbWV9PlxuICAgICAgICAgICAgPENhcmRCb2R5PlxuICAgICAgICAgICAgICA8Q2F0ZWdvcnlEYXRhXG4gICAgICAgICAgICAgICAgY2F0RGF0YT17Y2F0ZWdvcnl9XG4gICAgICAgICAgICAgICAgcXVlcnlDaGFuZ2U9e3Byb3BzLnF1ZXJ5Q2hhbmdlfVxuICAgICAgICAgICAgICAgIGFkZFF1ZXJ5PXtwcm9wcy5hZGRRdWVyeX1cbiAgICAgICAgICAgICAgICBkZWxldGVRdWVyeT17cHJvcHMuZGVsZXRlUXVlcnl9XG4gICAgICAgICAgICAgICAgZnJlcUNoYW5nZT17cHJvcHMuZnJlcUNoYW5nZX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvQ2FyZEJvZHk+XG4gICAgICAgICAgPC9DYXJkPlxuICAgICAgICAgIDxiciAvPlxuICAgICAgICAgIDxiciAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gICAgfVxuICB9XG4gIGNhdGVnb3J5QnVpbGRlcihwcm9wcy5jYXRlZ29yaWVzKTtcbiAgcmV0dXJuIGNhdGVnb3J5Q2FyZHM7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDYXRlZ29yeTtcbiIsIi8qIGVzbGludC1kaXNhYmxlIHJlYWN0L2Rlc3RydWN0dXJpbmctYXNzaWdubWVudCAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tcmVzdHJpY3RlZC1zeW50YXggKi9cbi8qIGVzbGludC1kaXNhYmxlIGd1YXJkLWZvci1pbiAqL1xuLyogZXNsaW50LWRpc2FibGUgcmVhY3QvcHJvcC10eXBlcyAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAnLi4vc3R5bGVzaGVldHMvc3R5bGUuc2Nzcyc7XG5pbXBvcnQgQ2F0ZWdvcnkgZnJvbSAnLi9DYXRlZ29yeSc7XG4vLyBpbXBvcnQgeyBHcmFwaHFsQ29kZUJsb2NrIH0gZnJvbSAnZ3JhcGhxbC1zeW50YXgtaGlnaGxpZ2h0ZXItcmVhY3QnO1xuXG5jb25zdCBDYXRlZ29yaWVzQ29udGFpbmVyID0gcHJvcHMgPT4ge1xuICAvLyBkZWNsYXJpbmcgYW4gYXJyYXkgdG8gY29sbGVjdCBlYWNoIHNldCBvZiBkYXRhIGJ5IGNhdGVnb3J5XG4gIGNvbnN0IGxvY2FsQ2F0cyA9IFtdO1xuICAvLyBidWlsZGluZyBhcnJheSBvZiBjYXRlZ29yeSBvYmplY3RzXG4gIGZvciAoY29uc3QgY2F0ZWdvcnkgaW4gcHJvcHMuY29uZmlnRGF0YS5jYXRlZ29yaWVzKSB7XG4gICAgY29uc3QgbGlsQ2F0cyA9IHt9O1xuICAgIGxpbENhdHMubmFtZSA9IGNhdGVnb3J5O1xuICAgIGxpbENhdHMucXVlcmllcyA9IHByb3BzLmNvbmZpZ0RhdGEuY2F0ZWdvcmllc1tjYXRlZ29yeV0ucXVlcmllcztcbiAgICBsaWxDYXRzLmZyZXF1ZW5jeSA9IHByb3BzLmNvbmZpZ0RhdGEuY2F0ZWdvcmllc1tjYXRlZ29yeV0uZnJlcXVlbmN5O1xuICAgIGxvY2FsQ2F0cy5wdXNoKGxpbENhdHMpO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImNhdGVnb3J5XCI+XG4gICAgICA8ZGl2PlxuICAgICAgICA8Q2F0ZWdvcnlcbiAgICAgICAgICBjYXRlZ29yaWVzPXtsb2NhbENhdHN9XG4gICAgICAgICAgY29uZmlnRGF0YT17cHJvcHMuY29uZmlnRGF0YX1cbiAgICAgICAgICBxdWVyeUNoYW5nZT17cHJvcHMucXVlcnlDaGFuZ2V9XG4gICAgICAgICAgYWRkUXVlcnk9e3Byb3BzLmFkZFF1ZXJ5fVxuICAgICAgICAgIGRlbGV0ZVF1ZXJ5PXtwcm9wcy5kZWxldGVRdWVyeX1cbiAgICAgICAgICBmcmVxQ2hhbmdlPXtwcm9wcy5mcmVxQ2hhbmdlfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8aW5wdXRcbiAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICBpZD1cImNhdElucHV0XCJcbiAgICAgICAgcGxhY2Vob2xkZXI9XCIgQWRkL1NlbGVjdCBDYXRlZ29yeSAobG93ZXIgY2FzZSlcIlxuICAgICAgICBvbkNoYW5nZT17cHJvcHMuYWRkVHlwZWRDYXR9XG4gICAgICAgIHZhbHVlPXtwcm9wcy50eXBlZENhdH1cbiAgICAgIC8+XG4gICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBvbkNsaWNrPXtwcm9wcy5hZGRDYXRlZ29yeX0+XG4gICAgICAgIEFkZCBDYXRlZ29yeVxuICAgICAgPC9idXR0b24+XG4gICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBvbkNsaWNrPXtwcm9wcy5kZWxDYXRlZ29yeX0+XG4gICAgICAgIERlbGV0ZSBDYXRlZ29yeVxuICAgICAgPC9idXR0b24+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuZXhwb3J0IGRlZmF1bHQgQ2F0ZWdvcmllc0NvbnRhaW5lcjtcbiIsImltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZVwiO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGNhblVzZURPTSB9IGZyb20gJy4vdXRpbHMnO1xudmFyIHByb3BUeXBlcyA9IHtcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLmlzUmVxdWlyZWQsXG4gIG5vZGU6IFByb3BUeXBlcy5hbnlcbn07XG5cbnZhciBQb3J0YWwgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoUG9ydGFsLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBQb3J0YWwoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFBvcnRhbC5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMuZGVmYXVsdE5vZGUpIHtcbiAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQodGhpcy5kZWZhdWx0Tm9kZSk7XG4gICAgfVxuXG4gICAgdGhpcy5kZWZhdWx0Tm9kZSA9IG51bGw7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICBpZiAoIWNhblVzZURPTSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLnByb3BzLm5vZGUgJiYgIXRoaXMuZGVmYXVsdE5vZGUpIHtcbiAgICAgIHRoaXMuZGVmYXVsdE5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5kZWZhdWx0Tm9kZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0RE9NLmNyZWF0ZVBvcnRhbCh0aGlzLnByb3BzLmNoaWxkcmVuLCB0aGlzLnByb3BzLm5vZGUgfHwgdGhpcy5kZWZhdWx0Tm9kZSk7XG4gIH07XG5cbiAgcmV0dXJuIFBvcnRhbDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuUG9ydGFsLnByb3BUeXBlcyA9IHByb3BUeXBlcztcbmV4cG9ydCBkZWZhdWx0IFBvcnRhbDsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IF9vYmplY3RTcHJlYWQyIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWRcIjtcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgeyBUcmFuc2l0aW9uIH0gZnJvbSAncmVhY3QtdHJhbnNpdGlvbi1ncm91cCc7XG5pbXBvcnQgeyBtYXBUb0Nzc01vZHVsZXMsIG9taXQsIHBpY2ssIFRyYW5zaXRpb25Qcm9wVHlwZUtleXMsIFRyYW5zaXRpb25UaW1lb3V0cywgdGFnUHJvcFR5cGUgfSBmcm9tICcuL3V0aWxzJztcblxudmFyIHByb3BUeXBlcyA9IF9vYmplY3RTcHJlYWQyKHt9LCBUcmFuc2l0aW9uLnByb3BUeXBlcywge1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm5vZGUpLCBQcm9wVHlwZXMubm9kZV0pLFxuICB0YWc6IHRhZ1Byb3BUeXBlLFxuICBiYXNlQ2xhc3M6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGJhc2VDbGFzc0FjdGl2ZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3NNb2R1bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gIGlubmVyUmVmOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuY10pXG59KTtcblxudmFyIGRlZmF1bHRQcm9wcyA9IF9vYmplY3RTcHJlYWQyKHt9LCBUcmFuc2l0aW9uLmRlZmF1bHRQcm9wcywge1xuICB0YWc6ICdkaXYnLFxuICBiYXNlQ2xhc3M6ICdmYWRlJyxcbiAgYmFzZUNsYXNzQWN0aXZlOiAnc2hvdycsXG4gIHRpbWVvdXQ6IFRyYW5zaXRpb25UaW1lb3V0cy5GYWRlLFxuICBhcHBlYXI6IHRydWUsXG4gIGVudGVyOiB0cnVlLFxuICBleGl0OiB0cnVlLFxuICBpbjogdHJ1ZVxufSk7XG5cbmZ1bmN0aW9uIEZhZGUocHJvcHMpIHtcbiAgdmFyIFRhZyA9IHByb3BzLnRhZyxcbiAgICAgIGJhc2VDbGFzcyA9IHByb3BzLmJhc2VDbGFzcyxcbiAgICAgIGJhc2VDbGFzc0FjdGl2ZSA9IHByb3BzLmJhc2VDbGFzc0FjdGl2ZSxcbiAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGNzc01vZHVsZSA9IHByb3BzLmNzc01vZHVsZSxcbiAgICAgIGNoaWxkcmVuID0gcHJvcHMuY2hpbGRyZW4sXG4gICAgICBpbm5lclJlZiA9IHByb3BzLmlubmVyUmVmLFxuICAgICAgb3RoZXJQcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBbXCJ0YWdcIiwgXCJiYXNlQ2xhc3NcIiwgXCJiYXNlQ2xhc3NBY3RpdmVcIiwgXCJjbGFzc05hbWVcIiwgXCJjc3NNb2R1bGVcIiwgXCJjaGlsZHJlblwiLCBcImlubmVyUmVmXCJdKTtcblxuICB2YXIgdHJhbnNpdGlvblByb3BzID0gcGljayhvdGhlclByb3BzLCBUcmFuc2l0aW9uUHJvcFR5cGVLZXlzKTtcbiAgdmFyIGNoaWxkUHJvcHMgPSBvbWl0KG90aGVyUHJvcHMsIFRyYW5zaXRpb25Qcm9wVHlwZUtleXMpO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChUcmFuc2l0aW9uLCB0cmFuc2l0aW9uUHJvcHMsIGZ1bmN0aW9uIChzdGF0dXMpIHtcbiAgICB2YXIgaXNBY3RpdmUgPSBzdGF0dXMgPT09ICdlbnRlcmVkJztcbiAgICB2YXIgY2xhc3NlcyA9IG1hcFRvQ3NzTW9kdWxlcyhjbGFzc05hbWVzKGNsYXNzTmFtZSwgYmFzZUNsYXNzLCBpc0FjdGl2ZSAmJiBiYXNlQ2xhc3NBY3RpdmUpLCBjc3NNb2R1bGUpO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFRhZywgX2V4dGVuZHMoe1xuICAgICAgY2xhc3NOYW1lOiBjbGFzc2VzXG4gICAgfSwgY2hpbGRQcm9wcywge1xuICAgICAgcmVmOiBpbm5lclJlZlxuICAgIH0pLCBjaGlsZHJlbik7XG4gIH0pO1xufVxuXG5GYWRlLnByb3BUeXBlcyA9IHByb3BUeXBlcztcbkZhZGUuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgRmFkZTsiLCJpbXBvcnQgX29iamVjdFNwcmVhZDIgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZFwiO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXNzZXJ0VGhpc0luaXRpYWxpemVkXCI7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2VcIjtcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUG9ydGFsIGZyb20gJy4vUG9ydGFsJztcbmltcG9ydCBGYWRlIGZyb20gJy4vRmFkZSc7XG5pbXBvcnQgeyBnZXRPcmlnaW5hbEJvZHlQYWRkaW5nLCBjb25kaXRpb25hbGx5VXBkYXRlU2Nyb2xsYmFyLCBzZXRTY3JvbGxiYXJXaWR0aCwgbWFwVG9Dc3NNb2R1bGVzLCBvbWl0LCBmb2N1c2FibGVFbGVtZW50cywgVHJhbnNpdGlvblRpbWVvdXRzLCBrZXlDb2RlcyB9IGZyb20gJy4vdXRpbHMnO1xuXG5mdW5jdGlvbiBub29wKCkge31cblxudmFyIEZhZGVQcm9wVHlwZXMgPSBQcm9wVHlwZXMuc2hhcGUoRmFkZS5wcm9wVHlwZXMpO1xudmFyIHByb3BUeXBlcyA9IHtcbiAgaXNPcGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgYXV0b0ZvY3VzOiBQcm9wVHlwZXMuYm9vbCxcbiAgY2VudGVyZWQ6IFByb3BUeXBlcy5ib29sLFxuICBzY3JvbGxhYmxlOiBQcm9wVHlwZXMuYm9vbCxcbiAgc2l6ZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgdG9nZ2xlOiBQcm9wVHlwZXMuZnVuYyxcbiAga2V5Ym9hcmQ6IFByb3BUeXBlcy5ib29sLFxuICByb2xlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBsYWJlbGxlZEJ5OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBiYWNrZHJvcDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmJvb2wsIFByb3BUeXBlcy5vbmVPZihbJ3N0YXRpYyddKV0pLFxuICBvbkVudGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25FeGl0OiBQcm9wVHlwZXMuZnVuYyxcbiAgb25PcGVuZWQ6IFByb3BUeXBlcy5mdW5jLFxuICBvbkNsb3NlZDogUHJvcFR5cGVzLmZ1bmMsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB3cmFwQ2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBtb2RhbENsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgYmFja2Ryb3BDbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNvbnRlbnRDbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGV4dGVybmFsOiBQcm9wVHlwZXMubm9kZSxcbiAgZmFkZTogUHJvcFR5cGVzLmJvb2wsXG4gIGNzc01vZHVsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgekluZGV4OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSksXG4gIGJhY2tkcm9wVHJhbnNpdGlvbjogRmFkZVByb3BUeXBlcyxcbiAgbW9kYWxUcmFuc2l0aW9uOiBGYWRlUHJvcFR5cGVzLFxuICBpbm5lclJlZjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmNdKSxcbiAgdW5tb3VudE9uQ2xvc2U6IFByb3BUeXBlcy5ib29sLFxuICByZXR1cm5Gb2N1c0FmdGVyQ2xvc2U6IFByb3BUeXBlcy5ib29sXG59O1xudmFyIHByb3BzVG9PbWl0ID0gT2JqZWN0LmtleXMocHJvcFR5cGVzKTtcbnZhciBkZWZhdWx0UHJvcHMgPSB7XG4gIGlzT3BlbjogZmFsc2UsXG4gIGF1dG9Gb2N1czogdHJ1ZSxcbiAgY2VudGVyZWQ6IGZhbHNlLFxuICBzY3JvbGxhYmxlOiBmYWxzZSxcbiAgcm9sZTogJ2RpYWxvZycsXG4gIGJhY2tkcm9wOiB0cnVlLFxuICBrZXlib2FyZDogdHJ1ZSxcbiAgekluZGV4OiAxMDUwLFxuICBmYWRlOiB0cnVlLFxuICBvbk9wZW5lZDogbm9vcCxcbiAgb25DbG9zZWQ6IG5vb3AsXG4gIG1vZGFsVHJhbnNpdGlvbjoge1xuICAgIHRpbWVvdXQ6IFRyYW5zaXRpb25UaW1lb3V0cy5Nb2RhbFxuICB9LFxuICBiYWNrZHJvcFRyYW5zaXRpb246IHtcbiAgICBtb3VudE9uRW50ZXI6IHRydWUsXG4gICAgdGltZW91dDogVHJhbnNpdGlvblRpbWVvdXRzLkZhZGUgLy8gdXNlcyBzdGFuZGFyZCBmYWRlIHRyYW5zaXRpb25cblxuICB9LFxuICB1bm1vdW50T25DbG9zZTogdHJ1ZSxcbiAgcmV0dXJuRm9jdXNBZnRlckNsb3NlOiB0cnVlXG59O1xuXG52YXIgTW9kYWwgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTW9kYWwsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIE1vZGFsKHByb3BzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMpIHx8IHRoaXM7XG4gICAgX3RoaXMuX2VsZW1lbnQgPSBudWxsO1xuICAgIF90aGlzLl9vcmlnaW5hbEJvZHlQYWRkaW5nID0gbnVsbDtcbiAgICBfdGhpcy5nZXRGb2N1c2FibGVDaGlsZHJlbiA9IF90aGlzLmdldEZvY3VzYWJsZUNoaWxkcmVuLmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIF90aGlzLmhhbmRsZUJhY2tkcm9wQ2xpY2sgPSBfdGhpcy5oYW5kbGVCYWNrZHJvcENsaWNrLmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIF90aGlzLmhhbmRsZUJhY2tkcm9wTW91c2VEb3duID0gX3RoaXMuaGFuZGxlQmFja2Ryb3BNb3VzZURvd24uYmluZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgX3RoaXMuaGFuZGxlRXNjYXBlID0gX3RoaXMuaGFuZGxlRXNjYXBlLmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIF90aGlzLmhhbmRsZVN0YXRpY0JhY2tkcm9wQW5pbWF0aW9uID0gX3RoaXMuaGFuZGxlU3RhdGljQmFja2Ryb3BBbmltYXRpb24uYmluZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgX3RoaXMuaGFuZGxlVGFiID0gX3RoaXMuaGFuZGxlVGFiLmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIF90aGlzLm9uT3BlbmVkID0gX3RoaXMub25PcGVuZWQuYmluZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgX3RoaXMub25DbG9zZWQgPSBfdGhpcy5vbkNsb3NlZC5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICBfdGhpcy5tYW5hZ2VGb2N1c0FmdGVyQ2xvc2UgPSBfdGhpcy5tYW5hZ2VGb2N1c0FmdGVyQ2xvc2UuYmluZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgX3RoaXMuY2xlYXJCYWNrZHJvcEFuaW1hdGlvblRpbWVvdXQgPSBfdGhpcy5jbGVhckJhY2tkcm9wQW5pbWF0aW9uVGltZW91dC5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGlzT3BlbjogZmFsc2UsXG4gICAgICBzaG93U3RhdGljQmFja2Ryb3BBbmltYXRpb246IGZhbHNlXG4gICAgfTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTW9kYWwucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGlzT3BlbiA9IF90aGlzJHByb3BzLmlzT3BlbixcbiAgICAgICAgYXV0b0ZvY3VzID0gX3RoaXMkcHJvcHMuYXV0b0ZvY3VzLFxuICAgICAgICBvbkVudGVyID0gX3RoaXMkcHJvcHMub25FbnRlcjtcblxuICAgIGlmIChpc09wZW4pIHtcbiAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGlzT3BlbjogdHJ1ZVxuICAgICAgfSk7XG5cbiAgICAgIGlmIChhdXRvRm9jdXMpIHtcbiAgICAgICAgdGhpcy5zZXRGb2N1cygpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChvbkVudGVyKSB7XG4gICAgICBvbkVudGVyKCk7XG4gICAgfVxuXG4gICAgdGhpcy5faXNNb3VudGVkID0gdHJ1ZTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcywgcHJldlN0YXRlKSB7XG4gICAgaWYgKHRoaXMucHJvcHMuaXNPcGVuICYmICFwcmV2UHJvcHMuaXNPcGVuKSB7XG4gICAgICB0aGlzLmluaXQoKTtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBpc09wZW46IHRydWVcbiAgICAgIH0pOyAvLyBsZXQgcmVuZGVyKCkgcmVuZGVycyBNb2RhbCBEaWFsb2cgZmlyc3RcblxuICAgICAgcmV0dXJuO1xuICAgIH0gLy8gbm93IE1vZGFsIERpYWxvZyBpcyByZW5kZXJlZCBhbmQgd2UgY2FuIHJlZmVyIHRoaXMuX2VsZW1lbnQgYW5kIHRoaXMuX2RpYWxvZ1xuXG5cbiAgICBpZiAodGhpcy5wcm9wcy5hdXRvRm9jdXMgJiYgdGhpcy5zdGF0ZS5pc09wZW4gJiYgIXByZXZTdGF0ZS5pc09wZW4pIHtcbiAgICAgIHRoaXMuc2V0Rm9jdXMoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fZWxlbWVudCAmJiBwcmV2UHJvcHMuekluZGV4ICE9PSB0aGlzLnByb3BzLnpJbmRleCkge1xuICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZS56SW5kZXggPSB0aGlzLnByb3BzLnpJbmRleDtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy5jbGVhckJhY2tkcm9wQW5pbWF0aW9uVGltZW91dCgpO1xuXG4gICAgaWYgKHRoaXMucHJvcHMub25FeGl0KSB7XG4gICAgICB0aGlzLnByb3BzLm9uRXhpdCgpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9lbGVtZW50KSB7XG4gICAgICB0aGlzLmRlc3Ryb3koKTtcblxuICAgICAgaWYgKHRoaXMucHJvcHMuaXNPcGVuKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLl9pc01vdW50ZWQgPSBmYWxzZTtcbiAgfTtcblxuICBfcHJvdG8ub25PcGVuZWQgPSBmdW5jdGlvbiBvbk9wZW5lZChub2RlLCBpc0FwcGVhcmluZykge1xuICAgIHRoaXMucHJvcHMub25PcGVuZWQoKTtcbiAgICAodGhpcy5wcm9wcy5tb2RhbFRyYW5zaXRpb24ub25FbnRlcmVkIHx8IG5vb3ApKG5vZGUsIGlzQXBwZWFyaW5nKTtcbiAgfTtcblxuICBfcHJvdG8ub25DbG9zZWQgPSBmdW5jdGlvbiBvbkNsb3NlZChub2RlKSB7XG4gICAgdmFyIHVubW91bnRPbkNsb3NlID0gdGhpcy5wcm9wcy51bm1vdW50T25DbG9zZTsgLy8gc28gYWxsIG1ldGhvZHMgZ2V0IGNhbGxlZCBiZWZvcmUgaXQgaXMgdW5tb3VudGVkXG5cbiAgICB0aGlzLnByb3BzLm9uQ2xvc2VkKCk7XG4gICAgKHRoaXMucHJvcHMubW9kYWxUcmFuc2l0aW9uLm9uRXhpdGVkIHx8IG5vb3ApKG5vZGUpO1xuXG4gICAgaWYgKHVubW91bnRPbkNsb3NlKSB7XG4gICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICB9XG5cbiAgICB0aGlzLmNsb3NlKCk7XG5cbiAgICBpZiAodGhpcy5faXNNb3VudGVkKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgaXNPcGVuOiBmYWxzZVxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5zZXRGb2N1cyA9IGZ1bmN0aW9uIHNldEZvY3VzKCkge1xuICAgIGlmICh0aGlzLl9kaWFsb2cgJiYgdGhpcy5fZGlhbG9nLnBhcmVudE5vZGUgJiYgdHlwZW9mIHRoaXMuX2RpYWxvZy5wYXJlbnROb2RlLmZvY3VzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aGlzLl9kaWFsb2cucGFyZW50Tm9kZS5mb2N1cygpO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uZ2V0Rm9jdXNhYmxlQ2hpbGRyZW4gPSBmdW5jdGlvbiBnZXRGb2N1c2FibGVDaGlsZHJlbigpIHtcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKGZvY3VzYWJsZUVsZW1lbnRzLmpvaW4oJywgJykpO1xuICB9O1xuXG4gIF9wcm90by5nZXRGb2N1c2VkQ2hpbGQgPSBmdW5jdGlvbiBnZXRGb2N1c2VkQ2hpbGQoKSB7XG4gICAgdmFyIGN1cnJlbnRGb2N1cztcbiAgICB2YXIgZm9jdXNhYmxlQ2hpbGRyZW4gPSB0aGlzLmdldEZvY3VzYWJsZUNoaWxkcmVuKCk7XG5cbiAgICB0cnkge1xuICAgICAgY3VycmVudEZvY3VzID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGN1cnJlbnRGb2N1cyA9IGZvY3VzYWJsZUNoaWxkcmVuWzBdO1xuICAgIH1cblxuICAgIHJldHVybiBjdXJyZW50Rm9jdXM7XG4gIH0gLy8gbm90IG1vdXNlVXAgYmVjYXVzZSBzY3JvbGxiYXIgZmlyZXMgaXQsIHNob3VsZG4ndCBjbG9zZSB3aGVuIHVzZXIgc2Nyb2xsc1xuICA7XG5cbiAgX3Byb3RvLmhhbmRsZUJhY2tkcm9wQ2xpY2sgPSBmdW5jdGlvbiBoYW5kbGVCYWNrZHJvcENsaWNrKGUpIHtcbiAgICBpZiAoZS50YXJnZXQgPT09IHRoaXMuX21vdXNlRG93bkVsZW1lbnQpIHtcbiAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICB2YXIgYmFja2Ryb3AgPSB0aGlzLl9kaWFsb2cgPyB0aGlzLl9kaWFsb2cucGFyZW50Tm9kZSA6IG51bGw7XG5cbiAgICAgIGlmIChiYWNrZHJvcCAmJiBlLnRhcmdldCA9PT0gYmFja2Ryb3AgJiYgdGhpcy5wcm9wcy5iYWNrZHJvcCA9PT0gJ3N0YXRpYycpIHtcbiAgICAgICAgdGhpcy5oYW5kbGVTdGF0aWNCYWNrZHJvcEFuaW1hdGlvbigpO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXRoaXMucHJvcHMuaXNPcGVuIHx8IHRoaXMucHJvcHMuYmFja2Ryb3AgIT09IHRydWUpIHJldHVybjtcblxuICAgICAgaWYgKGJhY2tkcm9wICYmIGUudGFyZ2V0ID09PSBiYWNrZHJvcCAmJiB0aGlzLnByb3BzLnRvZ2dsZSkge1xuICAgICAgICB0aGlzLnByb3BzLnRvZ2dsZShlKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmhhbmRsZVRhYiA9IGZ1bmN0aW9uIGhhbmRsZVRhYihlKSB7XG4gICAgaWYgKGUud2hpY2ggIT09IDkpIHJldHVybjtcbiAgICB2YXIgZm9jdXNhYmxlQ2hpbGRyZW4gPSB0aGlzLmdldEZvY3VzYWJsZUNoaWxkcmVuKCk7XG4gICAgdmFyIHRvdGFsRm9jdXNhYmxlID0gZm9jdXNhYmxlQ2hpbGRyZW4ubGVuZ3RoO1xuICAgIGlmICh0b3RhbEZvY3VzYWJsZSA9PT0gMCkgcmV0dXJuO1xuICAgIHZhciBjdXJyZW50Rm9jdXMgPSB0aGlzLmdldEZvY3VzZWRDaGlsZCgpO1xuICAgIHZhciBmb2N1c2VkSW5kZXggPSAwO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b3RhbEZvY3VzYWJsZTsgaSArPSAxKSB7XG4gICAgICBpZiAoZm9jdXNhYmxlQ2hpbGRyZW5baV0gPT09IGN1cnJlbnRGb2N1cykge1xuICAgICAgICBmb2N1c2VkSW5kZXggPSBpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoZS5zaGlmdEtleSAmJiBmb2N1c2VkSW5kZXggPT09IDApIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGZvY3VzYWJsZUNoaWxkcmVuW3RvdGFsRm9jdXNhYmxlIC0gMV0uZm9jdXMoKTtcbiAgICB9IGVsc2UgaWYgKCFlLnNoaWZ0S2V5ICYmIGZvY3VzZWRJbmRleCA9PT0gdG90YWxGb2N1c2FibGUgLSAxKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBmb2N1c2FibGVDaGlsZHJlblswXS5mb2N1cygpO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uaGFuZGxlQmFja2Ryb3BNb3VzZURvd24gPSBmdW5jdGlvbiBoYW5kbGVCYWNrZHJvcE1vdXNlRG93bihlKSB7XG4gICAgdGhpcy5fbW91c2VEb3duRWxlbWVudCA9IGUudGFyZ2V0O1xuICB9O1xuXG4gIF9wcm90by5oYW5kbGVFc2NhcGUgPSBmdW5jdGlvbiBoYW5kbGVFc2NhcGUoZSkge1xuICAgIGlmICh0aGlzLnByb3BzLmlzT3BlbiAmJiB0aGlzLnByb3BzLmtleWJvYXJkICYmIGUua2V5Q29kZSA9PT0ga2V5Q29kZXMuZXNjICYmIHRoaXMucHJvcHMudG9nZ2xlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgICBpZiAodGhpcy5wcm9wcy5iYWNrZHJvcCA9PT0gJ3N0YXRpYycpIHtcbiAgICAgICAgdGhpcy5oYW5kbGVTdGF0aWNCYWNrZHJvcEFuaW1hdGlvbigpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRoaXMucHJvcHMudG9nZ2xlKGUpO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uaGFuZGxlU3RhdGljQmFja2Ryb3BBbmltYXRpb24gPSBmdW5jdGlvbiBoYW5kbGVTdGF0aWNCYWNrZHJvcEFuaW1hdGlvbigpIHtcbiAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgIHRoaXMuY2xlYXJCYWNrZHJvcEFuaW1hdGlvblRpbWVvdXQoKTtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIHNob3dTdGF0aWNCYWNrZHJvcEFuaW1hdGlvbjogdHJ1ZVxuICAgIH0pO1xuICAgIHRoaXMuX2JhY2tkcm9wQW5pbWF0aW9uVGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMyLnNldFN0YXRlKHtcbiAgICAgICAgc2hvd1N0YXRpY0JhY2tkcm9wQW5pbWF0aW9uOiBmYWxzZVxuICAgICAgfSk7XG4gICAgfSwgMTAwKTtcbiAgfTtcblxuICBfcHJvdG8uaW5pdCA9IGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgdHJ5IHtcbiAgICAgIHRoaXMuX3RyaWdnZXJpbmdFbGVtZW50ID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHRoaXMuX3RyaWdnZXJpbmdFbGVtZW50ID0gbnVsbDtcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMuX2VsZW1lbnQpIHtcbiAgICAgIHRoaXMuX2VsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblxuICAgICAgdGhpcy5fZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywgJy0xJyk7XG5cbiAgICAgIHRoaXMuX2VsZW1lbnQuc3R5bGUucG9zaXRpb24gPSAncmVsYXRpdmUnO1xuICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZS56SW5kZXggPSB0aGlzLnByb3BzLnpJbmRleDtcbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5fZWxlbWVudCk7XG4gICAgfVxuXG4gICAgdGhpcy5fb3JpZ2luYWxCb2R5UGFkZGluZyA9IGdldE9yaWdpbmFsQm9keVBhZGRpbmcoKTtcbiAgICBjb25kaXRpb25hbGx5VXBkYXRlU2Nyb2xsYmFyKCk7XG5cbiAgICBpZiAoTW9kYWwub3BlbkNvdW50ID09PSAwKSB7XG4gICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTmFtZSA9IGNsYXNzTmFtZXMoZG9jdW1lbnQuYm9keS5jbGFzc05hbWUsIG1hcFRvQ3NzTW9kdWxlcygnbW9kYWwtb3BlbicsIHRoaXMucHJvcHMuY3NzTW9kdWxlKSk7XG4gICAgfVxuXG4gICAgTW9kYWwub3BlbkNvdW50ICs9IDE7XG4gIH07XG5cbiAgX3Byb3RvLmRlc3Ryb3kgPSBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgIGlmICh0aGlzLl9lbGVtZW50KSB7XG4gICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRoaXMuX2VsZW1lbnQpO1xuICAgICAgdGhpcy5fZWxlbWVudCA9IG51bGw7XG4gICAgfVxuXG4gICAgdGhpcy5tYW5hZ2VGb2N1c0FmdGVyQ2xvc2UoKTtcbiAgfTtcblxuICBfcHJvdG8ubWFuYWdlRm9jdXNBZnRlckNsb3NlID0gZnVuY3Rpb24gbWFuYWdlRm9jdXNBZnRlckNsb3NlKCkge1xuICAgIGlmICh0aGlzLl90cmlnZ2VyaW5nRWxlbWVudCkge1xuICAgICAgdmFyIHJldHVybkZvY3VzQWZ0ZXJDbG9zZSA9IHRoaXMucHJvcHMucmV0dXJuRm9jdXNBZnRlckNsb3NlO1xuICAgICAgaWYgKHRoaXMuX3RyaWdnZXJpbmdFbGVtZW50LmZvY3VzICYmIHJldHVybkZvY3VzQWZ0ZXJDbG9zZSkgdGhpcy5fdHJpZ2dlcmluZ0VsZW1lbnQuZm9jdXMoKTtcbiAgICAgIHRoaXMuX3RyaWdnZXJpbmdFbGVtZW50ID0gbnVsbDtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmNsb3NlID0gZnVuY3Rpb24gY2xvc2UoKSB7XG4gICAgaWYgKE1vZGFsLm9wZW5Db3VudCA8PSAxKSB7XG4gICAgICB2YXIgbW9kYWxPcGVuQ2xhc3NOYW1lID0gbWFwVG9Dc3NNb2R1bGVzKCdtb2RhbC1vcGVuJywgdGhpcy5wcm9wcy5jc3NNb2R1bGUpOyAvLyBVc2UgcmVnZXggdG8gcHJldmVudCBtYXRjaGluZyBgbW9kYWwtb3BlbmAgYXMgcGFydCBvZiBhIGRpZmZlcmVudCBjbGFzcywgZS5nLiBgbXktbW9kYWwtb3BlbmVkYFxuXG4gICAgICB2YXIgbW9kYWxPcGVuQ2xhc3NOYW1lUmVnZXggPSBuZXcgUmVnRXhwKFwiKF58IClcIiArIG1vZGFsT3BlbkNsYXNzTmFtZSArIFwiKCB8JClcIik7XG4gICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTmFtZSA9IGRvY3VtZW50LmJvZHkuY2xhc3NOYW1lLnJlcGxhY2UobW9kYWxPcGVuQ2xhc3NOYW1lUmVnZXgsICcgJykudHJpbSgpO1xuICAgIH1cblxuICAgIHRoaXMubWFuYWdlRm9jdXNBZnRlckNsb3NlKCk7XG4gICAgTW9kYWwub3BlbkNvdW50ID0gTWF0aC5tYXgoMCwgTW9kYWwub3BlbkNvdW50IC0gMSk7XG4gICAgc2V0U2Nyb2xsYmFyV2lkdGgodGhpcy5fb3JpZ2luYWxCb2R5UGFkZGluZyk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlck1vZGFsRGlhbG9nID0gZnVuY3Rpb24gcmVuZGVyTW9kYWxEaWFsb2coKSB7XG4gICAgdmFyIF9jbGFzc05hbWVzLFxuICAgICAgICBfdGhpczMgPSB0aGlzO1xuXG4gICAgdmFyIGF0dHJpYnV0ZXMgPSBvbWl0KHRoaXMucHJvcHMsIHByb3BzVG9PbWl0KTtcbiAgICB2YXIgZGlhbG9nQmFzZUNsYXNzID0gJ21vZGFsLWRpYWxvZyc7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgX2V4dGVuZHMoe30sIGF0dHJpYnV0ZXMsIHtcbiAgICAgIGNsYXNzTmFtZTogbWFwVG9Dc3NNb2R1bGVzKGNsYXNzTmFtZXMoZGlhbG9nQmFzZUNsYXNzLCB0aGlzLnByb3BzLmNsYXNzTmFtZSwgKF9jbGFzc05hbWVzID0ge30sIF9jbGFzc05hbWVzW1wibW9kYWwtXCIgKyB0aGlzLnByb3BzLnNpemVdID0gdGhpcy5wcm9wcy5zaXplLCBfY2xhc3NOYW1lc1tkaWFsb2dCYXNlQ2xhc3MgKyBcIi1jZW50ZXJlZFwiXSA9IHRoaXMucHJvcHMuY2VudGVyZWQsIF9jbGFzc05hbWVzW2RpYWxvZ0Jhc2VDbGFzcyArIFwiLXNjcm9sbGFibGVcIl0gPSB0aGlzLnByb3BzLnNjcm9sbGFibGUsIF9jbGFzc05hbWVzKSksIHRoaXMucHJvcHMuY3NzTW9kdWxlKSxcbiAgICAgIHJvbGU6IFwiZG9jdW1lbnRcIixcbiAgICAgIHJlZjogZnVuY3Rpb24gcmVmKGMpIHtcbiAgICAgICAgX3RoaXMzLl9kaWFsb2cgPSBjO1xuICAgICAgfVxuICAgIH0pLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogbWFwVG9Dc3NNb2R1bGVzKGNsYXNzTmFtZXMoJ21vZGFsLWNvbnRlbnQnLCB0aGlzLnByb3BzLmNvbnRlbnRDbGFzc05hbWUpLCB0aGlzLnByb3BzLmNzc01vZHVsZSlcbiAgICB9LCB0aGlzLnByb3BzLmNoaWxkcmVuKSk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgdW5tb3VudE9uQ2xvc2UgPSB0aGlzLnByb3BzLnVubW91bnRPbkNsb3NlO1xuXG4gICAgaWYgKCEhdGhpcy5fZWxlbWVudCAmJiAodGhpcy5zdGF0ZS5pc09wZW4gfHwgIXVubW91bnRPbkNsb3NlKSkge1xuICAgICAgdmFyIGlzTW9kYWxIaWRkZW4gPSAhIXRoaXMuX2VsZW1lbnQgJiYgIXRoaXMuc3RhdGUuaXNPcGVuICYmICF1bm1vdW50T25DbG9zZTtcbiAgICAgIHRoaXMuX2VsZW1lbnQuc3R5bGUuZGlzcGxheSA9IGlzTW9kYWxIaWRkZW4gPyAnbm9uZScgOiAnYmxvY2snO1xuICAgICAgdmFyIF90aGlzJHByb3BzMiA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgd3JhcENsYXNzTmFtZSA9IF90aGlzJHByb3BzMi53cmFwQ2xhc3NOYW1lLFxuICAgICAgICAgIG1vZGFsQ2xhc3NOYW1lID0gX3RoaXMkcHJvcHMyLm1vZGFsQ2xhc3NOYW1lLFxuICAgICAgICAgIGJhY2tkcm9wQ2xhc3NOYW1lID0gX3RoaXMkcHJvcHMyLmJhY2tkcm9wQ2xhc3NOYW1lLFxuICAgICAgICAgIGNzc01vZHVsZSA9IF90aGlzJHByb3BzMi5jc3NNb2R1bGUsXG4gICAgICAgICAgaXNPcGVuID0gX3RoaXMkcHJvcHMyLmlzT3BlbixcbiAgICAgICAgICBiYWNrZHJvcCA9IF90aGlzJHByb3BzMi5iYWNrZHJvcCxcbiAgICAgICAgICByb2xlID0gX3RoaXMkcHJvcHMyLnJvbGUsXG4gICAgICAgICAgbGFiZWxsZWRCeSA9IF90aGlzJHByb3BzMi5sYWJlbGxlZEJ5LFxuICAgICAgICAgIGV4dGVybmFsID0gX3RoaXMkcHJvcHMyLmV4dGVybmFsLFxuICAgICAgICAgIGlubmVyUmVmID0gX3RoaXMkcHJvcHMyLmlubmVyUmVmO1xuICAgICAgdmFyIG1vZGFsQXR0cmlidXRlcyA9IHtcbiAgICAgICAgb25DbGljazogdGhpcy5oYW5kbGVCYWNrZHJvcENsaWNrLFxuICAgICAgICBvbk1vdXNlRG93bjogdGhpcy5oYW5kbGVCYWNrZHJvcE1vdXNlRG93bixcbiAgICAgICAgb25LZXlVcDogdGhpcy5oYW5kbGVFc2NhcGUsXG4gICAgICAgIG9uS2V5RG93bjogdGhpcy5oYW5kbGVUYWIsXG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgZGlzcGxheTogJ2Jsb2NrJ1xuICAgICAgICB9LFxuICAgICAgICAnYXJpYS1sYWJlbGxlZGJ5JzogbGFiZWxsZWRCeSxcbiAgICAgICAgcm9sZTogcm9sZSxcbiAgICAgICAgdGFiSW5kZXg6ICctMSdcbiAgICAgIH07XG4gICAgICB2YXIgaGFzVHJhbnNpdGlvbiA9IHRoaXMucHJvcHMuZmFkZTtcblxuICAgICAgdmFyIG1vZGFsVHJhbnNpdGlvbiA9IF9vYmplY3RTcHJlYWQyKHt9LCBGYWRlLmRlZmF1bHRQcm9wcywge30sIHRoaXMucHJvcHMubW9kYWxUcmFuc2l0aW9uLCB7XG4gICAgICAgIGJhc2VDbGFzczogaGFzVHJhbnNpdGlvbiA/IHRoaXMucHJvcHMubW9kYWxUcmFuc2l0aW9uLmJhc2VDbGFzcyA6ICcnLFxuICAgICAgICB0aW1lb3V0OiBoYXNUcmFuc2l0aW9uID8gdGhpcy5wcm9wcy5tb2RhbFRyYW5zaXRpb24udGltZW91dCA6IDBcbiAgICAgIH0pO1xuXG4gICAgICB2YXIgYmFja2Ryb3BUcmFuc2l0aW9uID0gX29iamVjdFNwcmVhZDIoe30sIEZhZGUuZGVmYXVsdFByb3BzLCB7fSwgdGhpcy5wcm9wcy5iYWNrZHJvcFRyYW5zaXRpb24sIHtcbiAgICAgICAgYmFzZUNsYXNzOiBoYXNUcmFuc2l0aW9uID8gdGhpcy5wcm9wcy5iYWNrZHJvcFRyYW5zaXRpb24uYmFzZUNsYXNzIDogJycsXG4gICAgICAgIHRpbWVvdXQ6IGhhc1RyYW5zaXRpb24gPyB0aGlzLnByb3BzLmJhY2tkcm9wVHJhbnNpdGlvbi50aW1lb3V0IDogMFxuICAgICAgfSk7XG5cbiAgICAgIHZhciBCYWNrZHJvcCA9IGJhY2tkcm9wICYmIChoYXNUcmFuc2l0aW9uID8gUmVhY3QuY3JlYXRlRWxlbWVudChGYWRlLCBfZXh0ZW5kcyh7fSwgYmFja2Ryb3BUcmFuc2l0aW9uLCB7XG4gICAgICAgIGluOiBpc09wZW4gJiYgISFiYWNrZHJvcCxcbiAgICAgICAgY3NzTW9kdWxlOiBjc3NNb2R1bGUsXG4gICAgICAgIGNsYXNzTmFtZTogbWFwVG9Dc3NNb2R1bGVzKGNsYXNzTmFtZXMoJ21vZGFsLWJhY2tkcm9wJywgYmFja2Ryb3BDbGFzc05hbWUpLCBjc3NNb2R1bGUpXG4gICAgICB9KSkgOiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBtYXBUb0Nzc01vZHVsZXMoY2xhc3NOYW1lcygnbW9kYWwtYmFja2Ryb3AnLCAnc2hvdycsIGJhY2tkcm9wQ2xhc3NOYW1lKSwgY3NzTW9kdWxlKVxuICAgICAgfSkpO1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUG9ydGFsLCB7XG4gICAgICAgIG5vZGU6IHRoaXMuX2VsZW1lbnRcbiAgICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6IG1hcFRvQ3NzTW9kdWxlcyh3cmFwQ2xhc3NOYW1lKVxuICAgICAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudChGYWRlLCBfZXh0ZW5kcyh7fSwgbW9kYWxBdHRyaWJ1dGVzLCBtb2RhbFRyYW5zaXRpb24sIHtcbiAgICAgICAgaW46IGlzT3BlbixcbiAgICAgICAgb25FbnRlcmVkOiB0aGlzLm9uT3BlbmVkLFxuICAgICAgICBvbkV4aXRlZDogdGhpcy5vbkNsb3NlZCxcbiAgICAgICAgY3NzTW9kdWxlOiBjc3NNb2R1bGUsXG4gICAgICAgIGNsYXNzTmFtZTogbWFwVG9Dc3NNb2R1bGVzKGNsYXNzTmFtZXMoJ21vZGFsJywgbW9kYWxDbGFzc05hbWUsIHRoaXMuc3RhdGUuc2hvd1N0YXRpY0JhY2tkcm9wQW5pbWF0aW9uICYmICdtb2RhbC1zdGF0aWMnKSwgY3NzTW9kdWxlKSxcbiAgICAgICAgaW5uZXJSZWY6IGlubmVyUmVmXG4gICAgICB9KSwgZXh0ZXJuYWwsIHRoaXMucmVuZGVyTW9kYWxEaWFsb2coKSksIEJhY2tkcm9wKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgX3Byb3RvLmNsZWFyQmFja2Ryb3BBbmltYXRpb25UaW1lb3V0ID0gZnVuY3Rpb24gY2xlYXJCYWNrZHJvcEFuaW1hdGlvblRpbWVvdXQoKSB7XG4gICAgaWYgKHRoaXMuX2JhY2tkcm9wQW5pbWF0aW9uVGltZW91dCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuX2JhY2tkcm9wQW5pbWF0aW9uVGltZW91dCk7XG4gICAgICB0aGlzLl9iYWNrZHJvcEFuaW1hdGlvblRpbWVvdXQgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBNb2RhbDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuTW9kYWwucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuTW9kYWwuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuTW9kYWwub3BlbkNvdW50ID0gMDtcbmV4cG9ydCBkZWZhdWx0IE1vZGFsOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHsgbWFwVG9Dc3NNb2R1bGVzLCB0YWdQcm9wVHlwZSB9IGZyb20gJy4vdXRpbHMnO1xudmFyIHByb3BUeXBlcyA9IHtcbiAgdGFnOiB0YWdQcm9wVHlwZSxcbiAgd3JhcFRhZzogdGFnUHJvcFR5cGUsXG4gIHRvZ2dsZTogUHJvcFR5cGVzLmZ1bmMsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzTW9kdWxlOiBQcm9wVHlwZXMub2JqZWN0LFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gIGNsb3NlQXJpYUxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjaGFyQ29kZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm51bWJlcl0pLFxuICBjbG9zZTogUHJvcFR5cGVzLm9iamVjdFxufTtcbnZhciBkZWZhdWx0UHJvcHMgPSB7XG4gIHRhZzogJ2g1JyxcbiAgd3JhcFRhZzogJ2RpdicsXG4gIGNsb3NlQXJpYUxhYmVsOiAnQ2xvc2UnLFxuICBjaGFyQ29kZTogMjE1XG59O1xuXG52YXIgTW9kYWxIZWFkZXIgPSBmdW5jdGlvbiBNb2RhbEhlYWRlcihwcm9wcykge1xuICB2YXIgY2xvc2VCdXR0b247XG5cbiAgdmFyIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGNzc01vZHVsZSA9IHByb3BzLmNzc01vZHVsZSxcbiAgICAgIGNoaWxkcmVuID0gcHJvcHMuY2hpbGRyZW4sXG4gICAgICB0b2dnbGUgPSBwcm9wcy50b2dnbGUsXG4gICAgICBUYWcgPSBwcm9wcy50YWcsXG4gICAgICBXcmFwVGFnID0gcHJvcHMud3JhcFRhZyxcbiAgICAgIGNsb3NlQXJpYUxhYmVsID0gcHJvcHMuY2xvc2VBcmlhTGFiZWwsXG4gICAgICBjaGFyQ29kZSA9IHByb3BzLmNoYXJDb2RlLFxuICAgICAgY2xvc2UgPSBwcm9wcy5jbG9zZSxcbiAgICAgIGF0dHJpYnV0ZXMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgW1wiY2xhc3NOYW1lXCIsIFwiY3NzTW9kdWxlXCIsIFwiY2hpbGRyZW5cIiwgXCJ0b2dnbGVcIiwgXCJ0YWdcIiwgXCJ3cmFwVGFnXCIsIFwiY2xvc2VBcmlhTGFiZWxcIiwgXCJjaGFyQ29kZVwiLCBcImNsb3NlXCJdKTtcblxuICB2YXIgY2xhc3NlcyA9IG1hcFRvQ3NzTW9kdWxlcyhjbGFzc05hbWVzKGNsYXNzTmFtZSwgJ21vZGFsLWhlYWRlcicpLCBjc3NNb2R1bGUpO1xuXG4gIGlmICghY2xvc2UgJiYgdG9nZ2xlKSB7XG4gICAgdmFyIGNsb3NlSWNvbiA9IHR5cGVvZiBjaGFyQ29kZSA9PT0gJ251bWJlcicgPyBTdHJpbmcuZnJvbUNoYXJDb2RlKGNoYXJDb2RlKSA6IGNoYXJDb2RlO1xuICAgIGNsb3NlQnV0dG9uID0gUmVhY3QuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCB7XG4gICAgICB0eXBlOiBcImJ1dHRvblwiLFxuICAgICAgb25DbGljazogdG9nZ2xlLFxuICAgICAgY2xhc3NOYW1lOiBtYXBUb0Nzc01vZHVsZXMoJ2Nsb3NlJywgY3NzTW9kdWxlKSxcbiAgICAgIFwiYXJpYS1sYWJlbFwiOiBjbG9zZUFyaWFMYWJlbFxuICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICAgIFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCJcbiAgICB9LCBjbG9zZUljb24pKTtcbiAgfVxuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFdyYXBUYWcsIF9leHRlbmRzKHt9LCBhdHRyaWJ1dGVzLCB7XG4gICAgY2xhc3NOYW1lOiBjbGFzc2VzXG4gIH0pLCBSZWFjdC5jcmVhdGVFbGVtZW50KFRhZywge1xuICAgIGNsYXNzTmFtZTogbWFwVG9Dc3NNb2R1bGVzKCdtb2RhbC10aXRsZScsIGNzc01vZHVsZSlcbiAgfSwgY2hpbGRyZW4pLCBjbG9zZSB8fCBjbG9zZUJ1dHRvbik7XG59O1xuXG5Nb2RhbEhlYWRlci5wcm9wVHlwZXMgPSBwcm9wVHlwZXM7XG5Nb2RhbEhlYWRlci5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBNb2RhbEhlYWRlcjsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7IG1hcFRvQ3NzTW9kdWxlcywgdGFnUHJvcFR5cGUgfSBmcm9tICcuL3V0aWxzJztcbnZhciBwcm9wVHlwZXMgPSB7XG4gIHRhZzogdGFnUHJvcFR5cGUsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzTW9kdWxlOiBQcm9wVHlwZXMub2JqZWN0XG59O1xudmFyIGRlZmF1bHRQcm9wcyA9IHtcbiAgdGFnOiAnZGl2J1xufTtcblxudmFyIE1vZGFsQm9keSA9IGZ1bmN0aW9uIE1vZGFsQm9keShwcm9wcykge1xuICB2YXIgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgY3NzTW9kdWxlID0gcHJvcHMuY3NzTW9kdWxlLFxuICAgICAgVGFnID0gcHJvcHMudGFnLFxuICAgICAgYXR0cmlidXRlcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBbXCJjbGFzc05hbWVcIiwgXCJjc3NNb2R1bGVcIiwgXCJ0YWdcIl0pO1xuXG4gIHZhciBjbGFzc2VzID0gbWFwVG9Dc3NNb2R1bGVzKGNsYXNzTmFtZXMoY2xhc3NOYW1lLCAnbW9kYWwtYm9keScpLCBjc3NNb2R1bGUpO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChUYWcsIF9leHRlbmRzKHt9LCBhdHRyaWJ1dGVzLCB7XG4gICAgY2xhc3NOYW1lOiBjbGFzc2VzXG4gIH0pKTtcbn07XG5cbk1vZGFsQm9keS5wcm9wVHlwZXMgPSBwcm9wVHlwZXM7XG5Nb2RhbEJvZHkuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgTW9kYWxCb2R5OyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHsgbWFwVG9Dc3NNb2R1bGVzLCB0YWdQcm9wVHlwZSB9IGZyb20gJy4vdXRpbHMnO1xudmFyIHByb3BUeXBlcyA9IHtcbiAgdGFnOiB0YWdQcm9wVHlwZSxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3NNb2R1bGU6IFByb3BUeXBlcy5vYmplY3Rcbn07XG52YXIgZGVmYXVsdFByb3BzID0ge1xuICB0YWc6ICdkaXYnXG59O1xuXG52YXIgTW9kYWxGb290ZXIgPSBmdW5jdGlvbiBNb2RhbEZvb3Rlcihwcm9wcykge1xuICB2YXIgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgY3NzTW9kdWxlID0gcHJvcHMuY3NzTW9kdWxlLFxuICAgICAgVGFnID0gcHJvcHMudGFnLFxuICAgICAgYXR0cmlidXRlcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBbXCJjbGFzc05hbWVcIiwgXCJjc3NNb2R1bGVcIiwgXCJ0YWdcIl0pO1xuXG4gIHZhciBjbGFzc2VzID0gbWFwVG9Dc3NNb2R1bGVzKGNsYXNzTmFtZXMoY2xhc3NOYW1lLCAnbW9kYWwtZm9vdGVyJyksIGNzc01vZHVsZSk7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFRhZywgX2V4dGVuZHMoe30sIGF0dHJpYnV0ZXMsIHtcbiAgICBjbGFzc05hbWU6IGNsYXNzZXNcbiAgfSkpO1xufTtcblxuTW9kYWxGb290ZXIucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuTW9kYWxGb290ZXIuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgTW9kYWxGb290ZXI7IiwiLyogZXNsaW50IHJlYWN0L25vLW11bHRpLWNvbXA6IDAsIHJlYWN0L3Byb3AtdHlwZXM6IDAgKi9cblxuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQnV0dG9uLCBNb2RhbCwgTW9kYWxIZWFkZXIsIE1vZGFsQm9keSwgTW9kYWxGb290ZXIgfSBmcm9tICdyZWFjdHN0cmFwJztcbi8vIGltcG9ydCBGaWxlU2F2ZWRBbGVydCBmcm9tICcuL0ZpbGVTYXZlZEFsZXJ0JztcblxuY29uc3QgQ29uZmlnU2F2ZU1vZGFsID0gcHJvcHMgPT4ge1xuICBjb25zdCB7IGJ1dHRvbkxhYmVsLCBjbGFzc05hbWUsIGhhbmRsZVN1Ym1pdCB9ID0gcHJvcHM7XG5cbiAgY29uc3QgW21vZGFsLCBzZXRNb2RhbF0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgY29uc3QgdG9nZ2xlID0gKCkgPT4gc2V0TW9kYWwoIW1vZGFsKTtcblxuICBjb25zdCBzdWJtaXRUb2dnbGUgPSAoKSA9PiB7XG4gICAgaGFuZGxlU3VibWl0KCk7XG4gICAgdG9nZ2xlKCk7XG4gICAgLy8gZmlsZVNhdmVkKCk7XG4gIH07XG5cbiAgY29uc3QgY2VudGVyID0gdHJ1ZTtcblxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8QnV0dG9uIGNvbG9yPVwicHJpbWFyeVwiIG9uQ2xpY2s9e3RvZ2dsZX0+XG4gICAgICAgIHtidXR0b25MYWJlbH1cbiAgICAgIDwvQnV0dG9uPlxuICAgICAgPE1vZGFsXG4gICAgICAgIGNlbnRlcmVkPXtjZW50ZXJ9XG4gICAgICAgIGlzT3Blbj17bW9kYWx9XG4gICAgICAgIHRvZ2dsZT17dG9nZ2xlfVxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZX1cbiAgICAgID5cbiAgICAgICAgPE1vZGFsSGVhZGVyIHRvZ2dsZT17dG9nZ2xlfT5Db25maXJtIEN1cnJlbnQgQ29uZmlndXJhdGlvbjwvTW9kYWxIZWFkZXI+XG4gICAgICAgIDxNb2RhbEJvZHk+XG4gICAgICAgICAgU2F2aW5nIHdpbGwgb3ZlcndyaXRlIHlvdXIgZXhpc3RpbmcgY29uZmlndXJhdGlvbi4gQXJlIHlvdSBzdXJlIHlvdVxuICAgICAgICAgIHdhbnQgdG8gZG8gdGhpcz9cbiAgICAgICAgPC9Nb2RhbEJvZHk+XG4gICAgICAgIDxNb2RhbEZvb3Rlcj5cbiAgICAgICAgICA8QnV0dG9uIGNvbG9yPVwicHJpbWFyeVwiIG9uQ2xpY2s9e3N1Ym1pdFRvZ2dsZX0+XG4gICAgICAgICAgICBTYXZlXG4gICAgICAgICAgPC9CdXR0b24+eycgJ31cbiAgICAgICAgICA8QnV0dG9uIGNvbG9yPVwic2Vjb25kYXJ5XCIgb25DbGljaz17dG9nZ2xlfT5cbiAgICAgICAgICAgIENhbmNlbFxuICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8L01vZGFsRm9vdGVyPlxuICAgICAgPC9Nb2RhbD5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbmZpZ1NhdmVNb2RhbDtcbiIsIi8qIGVzbGludCByZWFjdC9uby1tdWx0aS1jb21wOiAwLCByZWFjdC9wcm9wLXR5cGVzOiAwICovXG5cbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEJ1dHRvbiwgTW9kYWwsIE1vZGFsSGVhZGVyLCBNb2RhbEJvZHksIE1vZGFsRm9vdGVyIH0gZnJvbSAncmVhY3RzdHJhcCc7XG5cbmNvbnN0IENvbmZpZ1Jlc2V0TW9kYWwgPSBwcm9wcyA9PiB7XG4gIGNvbnN0IHsgYnV0dG9uTGFiZWwsIGNsYXNzTmFtZSwgaGFuZGxlUmVzZXQgfSA9IHByb3BzO1xuXG4gIGNvbnN0IFttb2RhbCwgc2V0TW9kYWxdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIGNvbnN0IHRvZ2dsZSA9ICgpID0+IHNldE1vZGFsKCFtb2RhbCk7XG5cbiAgY29uc3QgcmVzZXRSZWxvYWQgPSAoKSA9PiB7XG4gICAgaGFuZGxlUmVzZXQoKTtcbiAgICB0b2dnbGUoKTtcbiAgfTtcblxuICBjb25zdCBjZW50ZXIgPSB0cnVlO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDxCdXR0b24gY29sb3I9XCJkYW5nZXJcIiBvbkNsaWNrPXt0b2dnbGV9PlxuICAgICAgICB7YnV0dG9uTGFiZWx9XG4gICAgICA8L0J1dHRvbj5cbiAgICAgIDxNb2RhbFxuICAgICAgICBjZW50ZXJlZD17Y2VudGVyfVxuICAgICAgICBpc09wZW49e21vZGFsfVxuICAgICAgICB0b2dnbGU9e3RvZ2dsZX1cbiAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWV9XG4gICAgICA+XG4gICAgICAgIDxNb2RhbEhlYWRlciB0b2dnbGU9e3RvZ2dsZX0+Q29uZmlybSBSZXNldDwvTW9kYWxIZWFkZXI+XG4gICAgICAgIDxNb2RhbEJvZHk+XG4gICAgICAgICAgRm9ybSBkYXRhIHdpbGwgcmV2ZXJ0IHRvIHlvdXIgbGFzdCBzYXZlZCBjb25maWd1cmF0aW9uLiBBcmUgeW91IHN1cmVcbiAgICAgICAgICB5b3Ugd2FudCB0byBkbyB0aGlzP1xuICAgICAgICA8L01vZGFsQm9keT5cbiAgICAgICAgPE1vZGFsRm9vdGVyPlxuICAgICAgICAgIDxCdXR0b24gY29sb3I9XCJwcmltYXJ5XCIgb25DbGljaz17cmVzZXRSZWxvYWR9PlxuICAgICAgICAgICAgUmVzZXQgRm9ybVxuICAgICAgICAgIDwvQnV0dG9uPnsnICd9XG4gICAgICAgICAgPEJ1dHRvbiBjb2xvcj1cInNlY29uZGFyeVwiIG9uQ2xpY2s9e3RvZ2dsZX0+XG4gICAgICAgICAgICBDYW5jZWwgUmVzZXRcbiAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgPC9Nb2RhbEZvb3Rlcj5cbiAgICAgIDwvTW9kYWw+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb25maWdSZXNldE1vZGFsO1xuIiwiLyogZXNsaW50LWRpc2FibGUgcmVhY3QvcHJvcC10eXBlcyAqL1xuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VDb250ZXh0LCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICBCdXR0b24sXG4gIENvbCxcbiAgQ29udGFpbmVyLFxuICBGb3JtLFxuICBGb3JtR3JvdXAsXG4gIElucHV0LFxuICBMYWJlbCxcbiAgUm93XG59IGZyb20gJ3JlYWN0c3RyYXAnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgUHJvamVjdENvbnRleHQgfSBmcm9tICcuL0NvbnRleHQvUHJvamVjdENvbnRleHQnO1xuaW1wb3J0ICcuLi9zdHlsZXNoZWV0cy9zdHlsZS5zY3NzJztcbmltcG9ydCAnYm9vdHN0cmFwL2Rpc3QvY3NzL2Jvb3RzdHJhcC5jc3MnO1xuaW1wb3J0IENhdGVnb3JpZXNDb250YWluZXIgZnJvbSAnLi9DYXRlZ29yaWVzQ29udGFpbmVyJztcbmltcG9ydCBDb25maWdTYXZlTW9kYWwgZnJvbSAnLi9Db25maWdTYXZlTW9kYWwnO1xuaW1wb3J0IENvbmZpZ1Jlc2V0TW9kYWwgZnJvbSAnLi9Db25maWdSZXNldE1vZGFsJztcbi8vIGltcG9ydCBGaWxlU2F2ZWRBbGVydCBmcm9tICcuL0ZpbGVTYXZlZEFsZXJ0JztcblxuY29uc3QgQ29uZmlnRGFzaGJvYXJkID0gcHJvcHMgPT4ge1xuICBjb25zdCBbb3JpZ0NvbmZpZywgc2V0T3JpZ0NvbmZpZ10gPSB1c2VTdGF0ZSh7fSk7XG4gIGNvbnN0IFtkYXRhRnJvbUNvbmZpZywgc2V0RGF0YUZyb21Db25maWddID0gdXNlU3RhdGUoe30pO1xuICBjb25zdCBbZW5kcG9pbnRDb25maWcsIHNldEVuZHBvaW50Q29uZmlnXSA9IHVzZVN0YXRlKCcnKTtcbiAgY29uc3QgW3R5cGVkQ2F0LCBzZXRUeXBlZENhdF0gPSB1c2VTdGF0ZSgnJyk7XG4gIC8vIGNvbnN0IFtmaWxlU2F2ZWRBbGVydCwgc2V0RmlsZVNhdmVkQWxlcnRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCB7IHByb2plY3QgfSA9IHVzZUNvbnRleHQoUHJvamVjdENvbnRleHQpO1xuXG4gIGlmICghcHJvamVjdC5wcm9qZWN0cykge1xuICAgIHByb3BzLmhpc3RvcnkucHVzaCgnLycpO1xuICB9XG5cbiAgYXN5bmMgZnVuY3Rpb24gZmV0Y2hEYXRhKCkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7cHJvamVjdC5wcm9qZWN0c30vY29uZmlnLmpzb25gKTtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCkudGhlbihyZXMgPT4ge1xuICAgICAgc2V0T3JpZ0NvbmZpZyhyZXMpO1xuICAgICAgc2V0RGF0YUZyb21Db25maWcocmVzKTtcbiAgICAgIHNldEVuZHBvaW50Q29uZmlnKHJlcy5lbmRwb2ludCk7XG4gICAgfSk7XG4gIH1cblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGZldGNoRGF0YSgpO1xuICB9LCBbXSk7XG5cbiAgY29uc3QgaGFuZGxlRW5kcG9pbnRDaGFuZ2UgPSBlID0+IHtcbiAgICBjb25zdCB1cmwgPSBlLnRhcmdldC52YWx1ZTtcbiAgICBjb25zdCBKU09OaWZpZWQgPSBKU09OLnN0cmluZ2lmeShkYXRhRnJvbUNvbmZpZyk7XG4gICAgY29uc3QgbmV3RGF0YUZyb21Db25maWcgPSBKU09OLnBhcnNlKEpTT05pZmllZCk7XG4gICAgbmV3RGF0YUZyb21Db25maWcuZW5kcG9pbnQgPSB1cmw7XG4gICAgc2V0RGF0YUZyb21Db25maWcobmV3RGF0YUZyb21Db25maWcpO1xuICAgIHNldEVuZHBvaW50Q29uZmlnKHVybCk7XG4gIH07XG5cbiAgY29uc3QgYWRkVHlwZWRDYXQgPSBlID0+IHtcbiAgICBzZXRUeXBlZENhdChlLnRhcmdldC52YWx1ZSk7XG4gIH07XG5cbiAgY29uc3QgYWRkQ2F0ZWdvcnkgPSAoKSA9PiB7XG4gICAgY29uc3QgSlNPTmlmaWVkID0gSlNPTi5zdHJpbmdpZnkoZGF0YUZyb21Db25maWcpO1xuICAgIGNvbnN0IG5ld0RhdGFGcm9tQ29uZmlnID0gSlNPTi5wYXJzZShKU09OaWZpZWQpO1xuICAgIG5ld0RhdGFGcm9tQ29uZmlnLmNhdGVnb3JpZXNbdHlwZWRDYXRdID0ge307XG4gICAgbmV3RGF0YUZyb21Db25maWcuY2F0ZWdvcmllc1t0eXBlZENhdF0ucXVlcmllcyA9IFsnJ107XG4gICAgbmV3RGF0YUZyb21Db25maWcuY2F0ZWdvcmllc1t0eXBlZENhdF0uZnJlcXVlbmN5ID0gJyc7XG4gICAgc2V0VHlwZWRDYXQoJycpO1xuICAgIHNldERhdGFGcm9tQ29uZmlnKG5ld0RhdGFGcm9tQ29uZmlnKTtcbiAgfTtcblxuICBjb25zdCBkZWxDYXRlZ29yeSA9ICgpID0+IHtcbiAgICBjb25zdCBKU09OaWZpZWQgPSBKU09OLnN0cmluZ2lmeShkYXRhRnJvbUNvbmZpZyk7XG4gICAgY29uc3QgbmV3RGF0YUZyb21Db25maWcgPSBKU09OLnBhcnNlKEpTT05pZmllZCk7XG4gICAgZGVsZXRlIG5ld0RhdGFGcm9tQ29uZmlnLmNhdGVnb3JpZXNbdHlwZWRDYXRdO1xuICAgIHNldFR5cGVkQ2F0KCcnKTtcbiAgICBzZXREYXRhRnJvbUNvbmZpZyhuZXdEYXRhRnJvbUNvbmZpZyk7XG4gIH07XG5cbiAgY29uc3QgcXVlcnlDaGFuZ2UgPSBlID0+IHtcbiAgICBjb25zdCBjYXROYW1lID0gZS50YXJnZXQuaWQuc3BsaXQoJy0nKVswXTtcbiAgICBjb25zdCBxdWVyeUlkeCA9IGUudGFyZ2V0LmlkLnNwbGl0KCctJylbMV07XG4gICAgY29uc3QgSlNPTmlmaWVkID0gSlNPTi5zdHJpbmdpZnkoZGF0YUZyb21Db25maWcpO1xuICAgIGNvbnN0IG5ld0RhdGFGcm9tQ29uZmlnID0gSlNPTi5wYXJzZShKU09OaWZpZWQpO1xuICAgIG5ld0RhdGFGcm9tQ29uZmlnLmNhdGVnb3JpZXNbY2F0TmFtZV0ucXVlcmllc1txdWVyeUlkeF0gPSBlLnRhcmdldC52YWx1ZTtcbiAgICBzZXREYXRhRnJvbUNvbmZpZyhuZXdEYXRhRnJvbUNvbmZpZyk7XG4gIH07XG5cbiAgY29uc3QgYWRkUXVlcnkgPSBlID0+IHtcbiAgICBjb25zdCBjYXROYW1lID0gZS50YXJnZXQuaWQuc3BsaXQoJy0nKVswXTtcbiAgICBjb25zdCBKU09OaWZpZWQgPSBKU09OLnN0cmluZ2lmeShkYXRhRnJvbUNvbmZpZyk7XG4gICAgY29uc3QgbmV3RGF0YUZyb21Db25maWcgPSBKU09OLnBhcnNlKEpTT05pZmllZCk7XG4gICAgbmV3RGF0YUZyb21Db25maWcuY2F0ZWdvcmllc1tjYXROYW1lXS5xdWVyaWVzLnB1c2goJycpO1xuICAgIHNldERhdGFGcm9tQ29uZmlnKG5ld0RhdGFGcm9tQ29uZmlnKTtcbiAgfTtcblxuICBjb25zdCBkZWxldGVRdWVyeSA9IGUgPT4ge1xuICAgIGNvbnN0IGNhdE5hbWUgPSBlLnRhcmdldC5pZC5zcGxpdCgnLScpWzBdO1xuICAgIGNvbnN0IHF1ZXJ5SWR4ID0gZS50YXJnZXQuaWQuc3BsaXQoJy0nKVsxXTtcbiAgICBjb25zdCBKU09OaWZpZWQgPSBKU09OLnN0cmluZ2lmeShkYXRhRnJvbUNvbmZpZyk7XG4gICAgY29uc3QgbmV3RGF0YUZyb21Db25maWcgPSBKU09OLnBhcnNlKEpTT05pZmllZCk7XG4gICAgbmV3RGF0YUZyb21Db25maWcuY2F0ZWdvcmllc1tjYXROYW1lXS5xdWVyaWVzLnNwbGljZShxdWVyeUlkeCwgMSk7XG4gICAgc2V0RGF0YUZyb21Db25maWcobmV3RGF0YUZyb21Db25maWcpO1xuICB9O1xuXG4gIGNvbnN0IGZyZXF1ZW5jeUNoYW5nZSA9IGUgPT4ge1xuICAgIGNvbnN0IGNhdE5hbWUgPSBlLnRhcmdldC5pZC5zcGxpdCgnLScpWzBdO1xuICAgIGNvbnN0IEpTT05pZmllZCA9IEpTT04uc3RyaW5naWZ5KGRhdGFGcm9tQ29uZmlnKTtcbiAgICBjb25zdCBuZXdEYXRhRnJvbUNvbmZpZyA9IEpTT04ucGFyc2UoSlNPTmlmaWVkKTtcbiAgICBuZXdEYXRhRnJvbUNvbmZpZy5jYXRlZ29yaWVzW2NhdE5hbWVdLmZyZXF1ZW5jeSA9IGUudGFyZ2V0LnZhbHVlO1xuICAgIHNldERhdGFGcm9tQ29uZmlnKG5ld0RhdGFGcm9tQ29uZmlnKTtcbiAgfTtcblxuICAvLyBmdW5jIHRvIHVwZGF0ZSBkYXRhIHdpdGhpbiBjb25maWcgZmlsZVxuICBhc3luYyBmdW5jdGlvbiBoYW5kbGVTdWJtaXQoKSB7XG4gICAgY29uc3QgZGF0YSA9IHsgcHJvamVjdDogcHJvamVjdC5wcm9qZWN0cywgZGF0YTogZGF0YUZyb21Db25maWcgfTtcblxuICAgIC8vZW5zdXJlIHRoYXQgZnJlcXVlbmNpZXMgYXJlIHdob2xlIHBvc2l0aXZlIGludGVnZXJzXG4gICAgZm9yIChsZXQgY2F0TmFtZSBpbiBkYXRhRnJvbUNvbmZpZy5jYXRlZ29yaWVzKSB7XG4gICAgICBpZiAoL15cXGQrJC8udGVzdChkYXRhRnJvbUNvbmZpZy5jYXRlZ29yaWVzW2NhdE5hbWVdLmZyZXF1ZW5jeSk9PT1mYWxzZSl7XG4gICAgICAgIGFsZXJ0KFwiUGxlYXNlIGVuc3VyZSBGcmVxdWVuY2llcyBhcmUgd2hvbGUgcG9zaXRpdmUgaW50ZWdlcnNcIilcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH1cblxuICAgIGF3YWl0IGZldGNoKCcvYXBpL2NvbmZpZ0Rhc2gnLCB7XG4gICAgICBtZXRob2Q6ICdwb3N0JyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgQWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKVxuICAgIH0pO1xuICB9XG5cbiAgY29uc3QgaGFuZGxlUmVzZXQgPSAoKSA9PiB7XG4gICAgc2V0RGF0YUZyb21Db25maWcob3JpZ0NvbmZpZyk7XG4gICAgc2V0RW5kcG9pbnRDb25maWcob3JpZ0NvbmZpZy5lbmRwb2ludCk7XG4gICAgcHJvcHMuaGlzdG9yeS5wdXNoKCcvY29uZmlnRGFzaCcpO1xuICB9O1xuXG4gIC8vIGNvbnN0IGZpbGVTYXZlZCA9ICgpID0+IHtcbiAgLy8gICBzZXRGaWxlU2F2ZWRBbGVydCh0cnVlKTtcbiAgLy8gfTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgaWQ9XCJjb25maWdEYXNoYm9hcmRcIj5cbiAgICAgIDxkaXYgaWQ9XCJuYXZCdG5cIj5cbiAgICAgICAgPENvbnRhaW5lcj5cbiAgICAgICAgICA8Um93IHhzPVwiMVwiPlxuICAgICAgICAgICAgPENvbCB4cz1cIjZcIj5cbiAgICAgICAgICAgICAgPExpbmsgaWQ9XCJuYXZVc2VyRGFzaExpbmtcIiB0bz1cIi91c2VyRGFzaEJvYXJkXCI+XG4gICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgaWQ9XCJuYXZVc2VyRGFzaFwiXG4gICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgIGNvbG9yPVwic2Vjb25kYXJ5XCJcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0blNlY29uZGFyeVwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgQmFjayZuYnNwO3RvIFVzZXImbmJzcDtEYXNoYm9hcmRcbiAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgPC9Db2w+XG4gICAgICAgICAgICA8Q29sIHhzPVwiNlwiPlxuICAgICAgICAgICAgICA8TGluayBpZD1cIm5hdlByb2pMaW5rXCIgdG89XCIvXCI+XG4gICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgaWQ9XCJuYXZQcm9qZWN0U2VsZWN0XCJcbiAgICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAgY29sb3I9XCJzZWNvbmRhcnlcIlxuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuU2Vjb25kYXJ5XCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICBCYWNrJm5ic3A7dG8gUHJvamVjdCZuYnNwO1NlbGVjdFxuICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICA8L0NvbD5cbiAgICAgICAgICA8L1Jvdz5cbiAgICAgICAgPC9Db250YWluZXI+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgaWQ9XCJjb25maWdIZWFkZXJcIj5cbiAgICAgICAgPGJyIC8+XG4gICAgICAgIDxoMT5Db25maWcgRGFzaGJvYXJkPC9oMT5cbiAgICAgICAgPGhyIC8+XG4gICAgICAgIDxGb3JtIGlkPVwiY29uZmlnRm9ybVwiPlxuICAgICAgICAgIDxkaXYgaWQ9XCJjYXRlZ29yaWVzXCI+XG4gICAgICAgICAgICA8Rm9ybUdyb3VwPlxuICAgICAgICAgICAgICA8TGFiZWwgZm9yPVwiZW5kcG9pbnRMYWJlbFwiPlxuICAgICAgICAgICAgICAgIDxoNCBpZD1cImVuZHBvaW50SGVhZGVyXCI+RW5kcG9pbnQ8L2g0PlxuICAgICAgICAgICAgICA8L0xhYmVsPlxuICAgICAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgbmFtZT1cImVuZHBvaW50XCJcbiAgICAgICAgICAgICAgICBpZD1cImVuZHBvaW50XCJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIklucHV0IHlvdXIgR3JhcGhRTCBlbmRwb2ludFwiXG4gICAgICAgICAgICAgICAgdmFsdWU9e2VuZHBvaW50Q29uZmlnfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVFbmRwb2ludENoYW5nZX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPGhyIC8+XG4gICAgICAgICAgICAgIDxMYWJlbCBmb3I9XCJjYXRlZ29yaWVzXCI+XG4gICAgICAgICAgICAgICAgPGg0IGlkPVwiY2F0ZWdvcmllc0hlYWRlclwiPkNhdGVnb3JpZXM8L2g0PlxuICAgICAgICAgICAgICA8L0xhYmVsPlxuICAgICAgICAgICAgICA8Q2F0ZWdvcmllc0NvbnRhaW5lclxuICAgICAgICAgICAgICAgIGNvbmZpZ0RhdGE9e2RhdGFGcm9tQ29uZmlnfVxuICAgICAgICAgICAgICAgIGFkZENhdGVnb3J5PXthZGRDYXRlZ29yeX1cbiAgICAgICAgICAgICAgICBkZWxDYXRlZ29yeT17ZGVsQ2F0ZWdvcnl9XG4gICAgICAgICAgICAgICAgYWRkVHlwZWRDYXQ9e2FkZFR5cGVkQ2F0fVxuICAgICAgICAgICAgICAgIHR5cGVkQ2F0PXt0eXBlZENhdH1cbiAgICAgICAgICAgICAgICBxdWVyeUNoYW5nZT17cXVlcnlDaGFuZ2V9XG4gICAgICAgICAgICAgICAgYWRkUXVlcnk9e2FkZFF1ZXJ5fVxuICAgICAgICAgICAgICAgIGRlbGV0ZVF1ZXJ5PXtkZWxldGVRdWVyeX1cbiAgICAgICAgICAgICAgICBmcmVxQ2hhbmdlPXtmcmVxdWVuY3lDaGFuZ2V9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L0Zvcm1Hcm91cD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICB7LyogPEZpbGVTYXZlZEFsZXJ0IHZpc2libGU9e2ZhbHNlfSAvPiAqL31cbiAgICAgICAgICA8Q29uZmlnU2F2ZU1vZGFsXG4gICAgICAgICAgICBoYW5kbGVTdWJtaXQ9e2hhbmRsZVN1Ym1pdH1cbiAgICAgICAgICAgIGJ1dHRvbkxhYmVsPVwiU2F2ZSBDb25maWd1cmF0aW9uXCJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cInNhdmVDb25maWdcIlxuICAgICAgICAgICAgLy8gZmlsZVNhdmVkPXtmaWxlU2F2ZWRBbGVydH1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxDb25maWdSZXNldE1vZGFsXG4gICAgICAgICAgICBoYW5kbGVSZXNldD17aGFuZGxlUmVzZXR9XG4gICAgICAgICAgICBidXR0b25MYWJlbD1cIlJlc2V0IENvbmZpZ3VyYXRpb25cIlxuICAgICAgICAgICAgY2xhc3NOYW1lPVwicmVzZXRDb25maWdcIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvRm9ybT5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29uZmlnRGFzaGJvYXJkO1xuIiwiLyogZXNsaW50LWRpc2FibGUgbm8tcmVzdHJpY3RlZC1zeW50YXggKi9cbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlLCB1c2VDb250ZXh0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtcbiAgQnV0dG9uLFxuICBCdXR0b25Ecm9wZG93bixcbiAgRHJvcGRvd25Ub2dnbGUsXG4gIERyb3Bkb3duTWVudSxcbiAgRHJvcGRvd25JdGVtXG59IGZyb20gJ3JlYWN0c3RyYXAnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0ICdib290c3RyYXAvZGlzdC9jc3MvYm9vdHN0cmFwLmNzcyc7XG5pbXBvcnQgeyBQcm9qZWN0Q29udGV4dCB9IGZyb20gJy4vQ29udGV4dC9Qcm9qZWN0Q29udGV4dCc7XG5cbmZ1bmN0aW9uIFByb2plY3RTZWxlY3QoKSB7XG4gIC8vIHNldHRpbmcgdGhlIHN0YXRlIGZvciB0aGUgZHJvcCBkb3duIGJ1dHRvbiB3aXRoIHR5cGVzY3JpcHRcbiAgY29uc3QgW2Ryb3Bkb3duUHJvak9wZW4sIHNldFByb2pPcGVuXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICBjb25zdCB7IHByb2plY3QsIHVwZGF0ZVByb2plY3QgfSA9IHVzZUNvbnRleHQoUHJvamVjdENvbnRleHQpO1xuXG4gIC8vIHRoZXNlIGFyZSB1c2VkIHRvIGdyYWIgZGF0YSBmcm9tIHdhdGNobW8gYW5kIGxvYWRlZCBpdCBpbnRvIHRoZSBzdGF0ZVxuICBjb25zdCBbcHJvanNGcm9tU2VydmVyLCBzZXRQcm9qc0Zyb21TZXJ2ZXJdID0gdXNlU3RhdGUoWzEsIDJdKTtcbiAgY29uc3QgW3Byb2pHYWluZWQsIHNldERhdGFHYWluZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIC8vIGZ1bmN0aW9uIHRoYXQgaXMgaW4gY2hhcmdlIG9mIGNoYW5naW5nIHRoZSBzdGF0ZVxuICBjb25zdCB0b2dnbGVDYXQgPSAoKSA9PiB7XG4gICAgc2V0UHJvak9wZW4oIWRyb3Bkb3duUHJvak9wZW4pO1xuICB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFwcm9qR2FpbmVkKSB7XG4gICAgICBmZXRjaCgnL3Byb2plY3ROYW1lcy5qc29uJylcbiAgICAgICAgLnRoZW4oZGF0YSA9PiBkYXRhLmpzb24oKSlcbiAgICAgICAgLnRoZW4ocGFyc2VkID0+IHtcbiAgICAgICAgICBzZXRQcm9qc0Zyb21TZXJ2ZXIocGFyc2VkKTtcbiAgICAgICAgfSk7XG4gICAgICBzZXREYXRhR2FpbmVkKHRydWUpO1xuICAgIH1cbiAgfSwgW3Byb2pzRnJvbVNlcnZlcl0pO1xuXG4gIGNvbnN0IHByb2pjYXRlZ29yaWVzSW5Ecm9wRG93biA9IFtdO1xuICBmb3IgKGNvbnN0IHByb2plY3RzIG9mIHByb2pzRnJvbVNlcnZlcikge1xuICAgIHByb2pjYXRlZ29yaWVzSW5Ecm9wRG93bi5wdXNoKFxuICAgICAgPERyb3Bkb3duSXRlbSBrZXk9e3Byb2plY3RzfSBvbkNsaWNrPXsoKSA9PiB1cGRhdGVQcm9qZWN0KHsgcHJvamVjdHMgfSl9PlxuICAgICAgICB7cHJvamVjdHN9XG4gICAgICA8L0Ryb3Bkb3duSXRlbT5cbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGlkPVwicHJvamVjdFNlbGVjdFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJwcm9qRHJvcFwiPlxuICAgICAgICA8QnV0dG9uRHJvcGRvd24gaXNPcGVuPXtkcm9wZG93blByb2pPcGVufSB0b2dnbGU9e3RvZ2dsZUNhdH0+XG4gICAgICAgICAgPERyb3Bkb3duVG9nZ2xlIGNhcmV0IGNvbG9yPVwicHJpbWFyeVwiPlxuICAgICAgICAgICAgUHJvamVjdHM6XG4gICAgICAgICAgPC9Ecm9wZG93blRvZ2dsZT5cbiAgICAgICAgICA8RHJvcGRvd25NZW51Pntwcm9qY2F0ZWdvcmllc0luRHJvcERvd259PC9Ecm9wZG93bk1lbnU+XG4gICAgICAgIDwvQnV0dG9uRHJvcGRvd24+XG4gICAgICA8L2Rpdj5cbiAgICAgIHtwcm9qZWN0LnByb2plY3RzICYmIChcbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8ZGl2IGlkPVwidXNlckRhc2hCdG5cIj5cbiAgICAgICAgICAgIDxMaW5rIHRvPVwiL3VzZXJEYXNoQm9hcmRcIj5cbiAgICAgICAgICAgICAgPEJ1dHRvbiBzaXplPVwibWRcIiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuU2Vjb25kYXJ5XCI+XG4gICAgICAgICAgICAgICAgREFTSEJPQVJEXG4gICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdiBpZD1cImNvbmZpZ0J0blwiPlxuICAgICAgICAgICAgPExpbmsgdG89XCIvY29uZmlnRGFzaFwiPlxuICAgICAgICAgICAgICA8QnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG5TZWNvbmRhcnlcIj5cbiAgICAgICAgICAgICAgICBDT05GSUdcbiAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgUHJvamVjdFNlbGVjdDtcbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAqIGFzIFJlYWN0RG9tIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgeyBBcHAgfSBmcm9tICcuL0NvbXBvbmVudHMvQXBwJztcbmltcG9ydCB7IFByb2plY3RQcm92aWRlciB9IGZyb20gJy4vQ29tcG9uZW50cy9Db250ZXh0L1Byb2plY3RDb250ZXh0JztcblxuUmVhY3REb20ucmVuZGVyKFxuICA8UHJvamVjdFByb3ZpZGVyPlxuICAgIDxBcHAgLz5cbiAgPC9Qcm9qZWN0UHJvdmlkZXI+LCBcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKSk7XG5cbiIsImltcG9ydCBSZWFjdCwgeyB1c2VDb250ZXh0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUm91dGUsIEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBVc2VyRGFzaGJvYXJkIGZyb20gJy4vVXNlckRhc2hib2FyZCc7XG5pbXBvcnQgQ29uZmlnRGFzaGJvYXJkIGZyb20gJy4vQ29uZmlnRGFzaGJvYXJkLmpzeCc7XG5pbXBvcnQgUHJvamVjdFNlbGVjdCBmcm9tICcuL1Byb2plY3RTZWxlY3QuanN4JztcbmltcG9ydCB7IFByb2plY3RQcm92aWRlciB9IGZyb20gJy4vQ29udGV4dC9Qcm9qZWN0Q29udGV4dCc7XG5pbXBvcnQgJy4uL3N0eWxlc2hlZXRzL3N0eWxlLnNjc3MnO1xuXG5leHBvcnQgY29uc3QgQXBwID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwicm91dGVyXCI+XG4gICAgICA8Um91dGVyPlxuICAgICAgICA8Um91dGUgZXhhY3QgcGF0aD1cIi9cIiBjb21wb25lbnQ9e1Byb2plY3RTZWxlY3R9IC8+XG4gICAgICAgIDxSb3V0ZSBleGFjdCBwYXRoPVwiL2NvbmZpZ0Rhc2hcIiBjb21wb25lbnQ9e0NvbmZpZ0Rhc2hib2FyZH0gLz5cbiAgICAgICAgPFJvdXRlIGV4YWN0IHBhdGg9XCIvdXNlckRhc2hCb2FyZFwiIGNvbXBvbmVudD17VXNlckRhc2hib2FyZH0gLz5cbiAgICAgIDwvUm91dGVyPlxuICAgIDwvZGl2PlxuICApO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=