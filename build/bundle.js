!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=72)}([function(t,e,n){"use strict";t.exports=n(39)},function(t,e,n){t.exports=n(46)()},function(t,e,n){var r;
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/!function(){"use strict";var n={}.hasOwnProperty;function o(){for(var t=[],e=0;e<arguments.length;e++){var r=arguments[e];if(r){var i=typeof r;if("string"===i||"number"===i)t.push(r);else if(Array.isArray(r)&&r.length){var a=o.apply(null,r);a&&t.push(a)}else if("object"===i)for(var l in r)n.call(r,l)&&r[l]&&t.push(l)}}return t.join(" ")}t.exports?(o.default=o,t.exports=o):void 0===(r=function(){return o}.apply(e,[]))||(t.exports=r)}()},function(t,e){t.exports=function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}},function(t,e){t.exports=function(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}},function(t,e,n){var r=n(23),o=n(44);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[t.i,o,""]]);var i={insert:"head",singleton:!1},a=(r(o,i),o.locals?o.locals:{});t.exports=a},function(t,e){t.exports=function(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e}},,function(t,e,n){"use strict";!function t(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)}catch(t){console.error(t)}}}(),t.exports=n(40)},function(t,e){function n(){return t.exports=n=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},n.apply(this,arguments)}t.exports=n},function(t,e,n){"use strict";var r=l(n(65)),o=l(n(70)),i=l(n(33)),a=l(n(30));function l(t){return t&&t.__esModule?t:{default:t}}t.exports={Transition:a.default,TransitionGroup:i.default,ReplaceTransition:o.default,CSSTransition:r.default}},,function(t,e,n){var r=n(23),o=n(43);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[t.i,o,""]]);var i={insert:"head",singleton:!1},a=(r(o,i),o.locals?o.locals:{});t.exports=a},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){"use strict";var r=n(56);t.exports=Function.prototype.bind||r},function(t,e,n){"use strict";var r=n(26),o="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),i=Object.prototype.toString,a=Array.prototype.concat,l=Object.defineProperty,c=l&&function(){var t={};try{for(var e in l(t,"x",{enumerable:!1,value:t}),t)return!1;return t.x===t}catch(t){return!1}}(),u=function(t,e,n,r){var o;e in t&&("function"!=typeof(o=r)||"[object Function]"!==i.call(o)||!r())||(c?l(t,e,{configurable:!0,enumerable:!1,value:n,writable:!0}):t[e]=n)},s=function(t,e){var n=arguments.length>2?arguments[2]:{},i=r(e);o&&(i=a.call(i,Object.getOwnPropertySymbols(e)));for(var l=0;l<i.length;l+=1)u(t,i[l],e[i[l]],n[i[l]])};s.supportsDescriptors=!!c,t.exports=s},function(t,e,n){"use strict";(function(e){var n="__global_unique_id__";t.exports=function(){return e[n]=(e[n]||0)+1}}).call(this,n(13))},function(t,e,n){"use strict";var r=function(){};t.exports=r},function(t,e,n){var r=n(48);t.exports=p,t.exports.parse=i,t.exports.compile=function(t,e){return l(i(t,e),e)},t.exports.tokensToFunction=l,t.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(t,e){for(var n,r=[],i=0,a=0,l="",s=e&&e.delimiter||"/";null!=(n=o.exec(t));){var f=n[0],d=n[1],p=n.index;if(l+=t.slice(a,p),a=p+f.length,d)l+=d[1];else{var m=t[a],h=n[2],g=n[3],b=n[4],v=n[5],y=n[6],x=n[7];l&&(r.push(l),l="");var w=null!=h&&null!=m&&m!==h,k="+"===y||"*"===y,_="?"===y||"*"===y,E=n[2]||s,S=b||v;r.push({name:g||i++,prefix:h||"",delimiter:E,optional:_,repeat:k,partial:w,asterisk:!!x,pattern:S?u(S):x?".*":"[^"+c(E)+"]+?"})}}return a<t.length&&(l+=t.substr(a)),l&&r.push(l),r}function a(t){return encodeURI(t).replace(/[\/?#]/g,(function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()}))}function l(t,e){for(var n=new Array(t.length),o=0;o<t.length;o++)"object"==typeof t[o]&&(n[o]=new RegExp("^(?:"+t[o].pattern+")$",f(e)));return function(e,o){for(var i="",l=e||{},c=(o||{}).pretty?a:encodeURIComponent,u=0;u<t.length;u++){var s=t[u];if("string"!=typeof s){var f,d=l[s.name];if(null==d){if(s.optional){s.partial&&(i+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=c(d[p]),!n[u].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");i+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()})):c(d),!n[u].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');i+=s.prefix+f}}else i+=s}return i}}function c(t){return t.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function u(t){return t.replace(/([=!:$\/()])/g,"\\$1")}function s(t,e){return t.keys=e,t}function f(t){return t&&t.sensitive?"":"i"}function d(t,e,n){r(e)||(n=e||n,e=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<t.length;l++){var u=t[l];if("string"==typeof u)a+=c(u);else{var d=c(u.prefix),p="(?:"+u.pattern+")";e.push(u),u.repeat&&(p+="(?:"+d+p+")*"),a+=p=u.optional?u.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var m=c(n.delimiter||"/"),h=a.slice(-m.length)===m;return o||(a=(h?a.slice(0,-m.length):a)+"(?:"+m+"(?=$))?"),a+=i?"$":o&&h?"":"(?="+m+"|$)",s(new RegExp("^"+a,f(n)),e)}function p(t,e,n){return r(e)||(n=e||n,e=[]),n=n||{},t instanceof RegExp?function(t,e){var n=t.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(t,e)}(t,e):r(t)?function(t,e,n){for(var r=[],o=0;o<t.length;o++)r.push(p(t[o],e,n).source);return s(new RegExp("(?:"+r.join("|")+")",f(n)),e)}(t,e,n):function(t,e,n){return d(i(t,n),e,n)}(t,e,n)}},function(t,e,n){"use strict";e.__esModule=!0;var r=i(n(0)),o=i(n(50));function i(t){return t&&t.__esModule?t:{default:t}}e.default=r.default.createContext||o.default,t.exports=e.default},function(t,e,n){"use strict";(function(t){
/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.16.1
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var n="undefined"!=typeof window&&"undefined"!=typeof document&&"undefined"!=typeof navigator,r=function(){for(var t=["Edge","Trident","Firefox"],e=0;e<t.length;e+=1)if(n&&navigator.userAgent.indexOf(t[e])>=0)return 1;return 0}();var o=n&&window.Promise?function(t){var e=!1;return function(){e||(e=!0,window.Promise.resolve().then((function(){e=!1,t()})))}}:function(t){var e=!1;return function(){e||(e=!0,setTimeout((function(){e=!1,t()}),r))}};function i(t){return t&&"[object Function]"==={}.toString.call(t)}function a(t,e){if(1!==t.nodeType)return[];var n=t.ownerDocument.defaultView.getComputedStyle(t,null);return e?n[e]:n}function l(t){return"HTML"===t.nodeName?t:t.parentNode||t.host}function c(t){if(!t)return document.body;switch(t.nodeName){case"HTML":case"BODY":return t.ownerDocument.body;case"#document":return t.body}var e=a(t),n=e.overflow,r=e.overflowX,o=e.overflowY;return/(auto|scroll|overlay)/.test(n+o+r)?t:c(l(t))}function u(t){return t&&t.referenceNode?t.referenceNode:t}var s=n&&!(!window.MSInputMethodContext||!document.documentMode),f=n&&/MSIE 10/.test(navigator.userAgent);function d(t){return 11===t?s:10===t?f:s||f}function p(t){if(!t)return document.documentElement;for(var e=d(10)?document.body:null,n=t.offsetParent||null;n===e&&t.nextElementSibling;)n=(t=t.nextElementSibling).offsetParent;var r=n&&n.nodeName;return r&&"BODY"!==r&&"HTML"!==r?-1!==["TH","TD","TABLE"].indexOf(n.nodeName)&&"static"===a(n,"position")?p(n):n:t?t.ownerDocument.documentElement:document.documentElement}function m(t){return null!==t.parentNode?m(t.parentNode):t}function h(t,e){if(!(t&&t.nodeType&&e&&e.nodeType))return document.documentElement;var n=t.compareDocumentPosition(e)&Node.DOCUMENT_POSITION_FOLLOWING,r=n?t:e,o=n?e:t,i=document.createRange();i.setStart(r,0),i.setEnd(o,0);var a,l,c=i.commonAncestorContainer;if(t!==c&&e!==c||r.contains(o))return"BODY"===(l=(a=c).nodeName)||"HTML"!==l&&p(a.firstElementChild)!==a?p(c):c;var u=m(t);return u.host?h(u.host,e):h(t,m(e).host)}function g(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"top",n="top"===e?"scrollTop":"scrollLeft",r=t.nodeName;if("BODY"===r||"HTML"===r){var o=t.ownerDocument.documentElement,i=t.ownerDocument.scrollingElement||o;return i[n]}return t[n]}function b(t,e){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=g(e,"top"),o=g(e,"left"),i=n?-1:1;return t.top+=r*i,t.bottom+=r*i,t.left+=o*i,t.right+=o*i,t}function v(t,e){var n="x"===e?"Left":"Top",r="Left"===n?"Right":"Bottom";return parseFloat(t["border"+n+"Width"])+parseFloat(t["border"+r+"Width"])}function y(t,e,n,r){return Math.max(e["offset"+t],e["scroll"+t],n["client"+t],n["offset"+t],n["scroll"+t],d(10)?parseInt(n["offset"+t])+parseInt(r["margin"+("Height"===t?"Top":"Left")])+parseInt(r["margin"+("Height"===t?"Bottom":"Right")]):0)}function x(t){var e=t.body,n=t.documentElement,r=d(10)&&getComputedStyle(n);return{height:y("Height",e,n,r),width:y("Width",e,n,r)}}var w=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},k=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),_=function(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t},E=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t};function S(t){return E({},t,{right:t.left+t.width,bottom:t.top+t.height})}function M(t){var e={};try{if(d(10)){e=t.getBoundingClientRect();var n=g(t,"top"),r=g(t,"left");e.top+=n,e.left+=r,e.bottom+=n,e.right+=r}else e=t.getBoundingClientRect()}catch(t){}var o={left:e.left,top:e.top,width:e.right-e.left,height:e.bottom-e.top},i="HTML"===t.nodeName?x(t.ownerDocument):{},l=i.width||t.clientWidth||o.width,c=i.height||t.clientHeight||o.height,u=t.offsetWidth-l,s=t.offsetHeight-c;if(u||s){var f=a(t);u-=v(f,"x"),s-=v(f,"y"),o.width-=u,o.height-=s}return S(o)}function T(t,e){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=d(10),o="HTML"===e.nodeName,i=M(t),l=M(e),u=c(t),s=a(e),f=parseFloat(s.borderTopWidth),p=parseFloat(s.borderLeftWidth);n&&o&&(l.top=Math.max(l.top,0),l.left=Math.max(l.left,0));var m=S({top:i.top-l.top-f,left:i.left-l.left-p,width:i.width,height:i.height});if(m.marginTop=0,m.marginLeft=0,!r&&o){var h=parseFloat(s.marginTop),g=parseFloat(s.marginLeft);m.top-=f-h,m.bottom-=f-h,m.left-=p-g,m.right-=p-g,m.marginTop=h,m.marginLeft=g}return(r&&!n?e.contains(u):e===u&&"BODY"!==u.nodeName)&&(m=b(m,e)),m}function C(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=t.ownerDocument.documentElement,r=T(t,n),o=Math.max(n.clientWidth,window.innerWidth||0),i=Math.max(n.clientHeight,window.innerHeight||0),a=e?0:g(n),l=e?0:g(n,"left"),c={top:a-r.top+r.marginTop,left:l-r.left+r.marginLeft,width:o,height:i};return S(c)}function N(t){var e=t.nodeName;if("BODY"===e||"HTML"===e)return!1;if("fixed"===a(t,"position"))return!0;var n=l(t);return!!n&&N(n)}function P(t){if(!t||!t.parentElement||d())return document.documentElement;for(var e=t.parentElement;e&&"none"===a(e,"transform");)e=e.parentElement;return e||document.documentElement}function A(t,e,n,r){var o=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i={top:0,left:0},a=o?P(t):h(t,u(e));if("viewport"===r)i=C(a,o);else{var s=void 0;"scrollParent"===r?"BODY"===(s=c(l(e))).nodeName&&(s=t.ownerDocument.documentElement):s="window"===r?t.ownerDocument.documentElement:r;var f=T(s,a,o);if("HTML"!==s.nodeName||N(a))i=f;else{var d=x(t.ownerDocument),p=d.height,m=d.width;i.top+=f.top-f.marginTop,i.bottom=p+f.top,i.left+=f.left-f.marginLeft,i.right=m+f.left}}var g="number"==typeof(n=n||0);return i.left+=g?n:n.left||0,i.top+=g?n:n.top||0,i.right-=g?n:n.right||0,i.bottom-=g?n:n.bottom||0,i}function O(t){return t.width*t.height}function z(t,e,n,r,o){var i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;if(-1===t.indexOf("auto"))return t;var a=A(n,r,i,o),l={top:{width:a.width,height:e.top-a.top},right:{width:a.right-e.right,height:a.height},bottom:{width:a.width,height:a.bottom-e.bottom},left:{width:e.left-a.left,height:a.height}},c=Object.keys(l).map((function(t){return E({key:t},l[t],{area:O(l[t])})})).sort((function(t,e){return e.area-t.area})),u=c.filter((function(t){var e=t.width,r=t.height;return e>=n.clientWidth&&r>=n.clientHeight})),s=u.length>0?u[0].key:c[0].key,f=t.split("-")[1];return s+(f?"-"+f:"")}function j(t,e,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,o=r?P(e):h(e,u(n));return T(n,o,r)}function R(t){var e=t.ownerDocument.defaultView.getComputedStyle(t),n=parseFloat(e.marginTop||0)+parseFloat(e.marginBottom||0),r=parseFloat(e.marginLeft||0)+parseFloat(e.marginRight||0);return{width:t.offsetWidth+r,height:t.offsetHeight+n}}function D(t){var e={left:"right",right:"left",bottom:"top",top:"bottom"};return t.replace(/left|right|bottom|top/g,(function(t){return e[t]}))}function L(t,e,n){n=n.split("-")[0];var r=R(t),o={width:r.width,height:r.height},i=-1!==["right","left"].indexOf(n),a=i?"top":"left",l=i?"left":"top",c=i?"height":"width",u=i?"width":"height";return o[a]=e[a]+e[c]/2-r[c]/2,o[l]=n===l?e[l]-r[u]:e[D(l)],o}function I(t,e){return Array.prototype.find?t.find(e):t.filter(e)[0]}function U(t,e,n){return(void 0===n?t:t.slice(0,function(t,e,n){if(Array.prototype.findIndex)return t.findIndex((function(t){return t[e]===n}));var r=I(t,(function(t){return t[e]===n}));return t.indexOf(r)}(t,"name",n))).forEach((function(t){t.function&&console.warn("`modifier.function` is deprecated, use `modifier.fn`!");var n=t.function||t.fn;t.enabled&&i(n)&&(e.offsets.popper=S(e.offsets.popper),e.offsets.reference=S(e.offsets.reference),e=n(e,t))})),e}function F(){if(!this.state.isDestroyed){var t={instance:this,styles:{},arrowStyles:{},attributes:{},flipped:!1,offsets:{}};t.offsets.reference=j(this.state,this.popper,this.reference,this.options.positionFixed),t.placement=z(this.options.placement,t.offsets.reference,this.popper,this.reference,this.options.modifiers.flip.boundariesElement,this.options.modifiers.flip.padding),t.originalPlacement=t.placement,t.positionFixed=this.options.positionFixed,t.offsets.popper=L(this.popper,t.offsets.reference,t.placement),t.offsets.popper.position=this.options.positionFixed?"fixed":"absolute",t=U(this.modifiers,t),this.state.isCreated?this.options.onUpdate(t):(this.state.isCreated=!0,this.options.onCreate(t))}}function B(t,e){return t.some((function(t){var n=t.name;return t.enabled&&n===e}))}function q(t){for(var e=[!1,"ms","Webkit","Moz","O"],n=t.charAt(0).toUpperCase()+t.slice(1),r=0;r<e.length;r++){var o=e[r],i=o?""+o+n:t;if(void 0!==document.body.style[i])return i}return null}function H(){return this.state.isDestroyed=!0,B(this.modifiers,"applyStyle")&&(this.popper.removeAttribute("x-placement"),this.popper.style.position="",this.popper.style.top="",this.popper.style.left="",this.popper.style.right="",this.popper.style.bottom="",this.popper.style.willChange="",this.popper.style[q("transform")]=""),this.disableEventListeners(),this.options.removeOnDestroy&&this.popper.parentNode.removeChild(this.popper),this}function W(t){var e=t.ownerDocument;return e?e.defaultView:window}function $(t,e,n,r){n.updateBound=r,W(t).addEventListener("resize",n.updateBound,{passive:!0});var o=c(t);return function t(e,n,r,o){var i="BODY"===e.nodeName,a=i?e.ownerDocument.defaultView:e;a.addEventListener(n,r,{passive:!0}),i||t(c(a.parentNode),n,r,o),o.push(a)}(o,"scroll",n.updateBound,n.scrollParents),n.scrollElement=o,n.eventsEnabled=!0,n}function V(){this.state.eventsEnabled||(this.state=$(this.reference,this.options,this.state,this.scheduleUpdate))}function Y(){var t,e;this.state.eventsEnabled&&(cancelAnimationFrame(this.scheduleUpdate),this.state=(t=this.reference,e=this.state,W(t).removeEventListener("resize",e.updateBound),e.scrollParents.forEach((function(t){t.removeEventListener("scroll",e.updateBound)})),e.updateBound=null,e.scrollParents=[],e.scrollElement=null,e.eventsEnabled=!1,e))}function G(t){return""!==t&&!isNaN(parseFloat(t))&&isFinite(t)}function Q(t,e){Object.keys(e).forEach((function(n){var r="";-1!==["width","height","top","right","bottom","left"].indexOf(n)&&G(e[n])&&(r="px"),t.style[n]=e[n]+r}))}var X=n&&/Firefox/i.test(navigator.userAgent);function K(t,e,n){var r=I(t,(function(t){return t.name===e})),o=!!r&&t.some((function(t){return t.name===n&&t.enabled&&t.order<r.order}));if(!o){var i="`"+e+"`",a="`"+n+"`";console.warn(a+" modifier is required by "+i+" modifier in order to work, be sure to include it before "+i+"!")}return o}var J=["auto-start","auto","auto-end","top-start","top","top-end","right-start","right","right-end","bottom-end","bottom","bottom-start","left-end","left","left-start"],Z=J.slice(3);function tt(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Z.indexOf(t),r=Z.slice(n+1).concat(Z.slice(0,n));return e?r.reverse():r}var et="flip",nt="clockwise",rt="counterclockwise";function ot(t,e,n,r){var o=[0,0],i=-1!==["right","left"].indexOf(r),a=t.split(/(\+|\-)/).map((function(t){return t.trim()})),l=a.indexOf(I(a,(function(t){return-1!==t.search(/,|\s/)})));a[l]&&-1===a[l].indexOf(",")&&console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.");var c=/\s*,\s*|\s+/,u=-1!==l?[a.slice(0,l).concat([a[l].split(c)[0]]),[a[l].split(c)[1]].concat(a.slice(l+1))]:[a];return(u=u.map((function(t,r){var o=(1===r?!i:i)?"height":"width",a=!1;return t.reduce((function(t,e){return""===t[t.length-1]&&-1!==["+","-"].indexOf(e)?(t[t.length-1]=e,a=!0,t):a?(t[t.length-1]+=e,a=!1,t):t.concat(e)}),[]).map((function(t){return function(t,e,n,r){var o=t.match(/((?:\-|\+)?\d*\.?\d*)(.*)/),i=+o[1],a=o[2];if(!i)return t;if(0===a.indexOf("%")){var l=void 0;switch(a){case"%p":l=n;break;case"%":case"%r":default:l=r}return S(l)[e]/100*i}if("vh"===a||"vw"===a){return("vh"===a?Math.max(document.documentElement.clientHeight,window.innerHeight||0):Math.max(document.documentElement.clientWidth,window.innerWidth||0))/100*i}return i}(t,o,e,n)}))}))).forEach((function(t,e){t.forEach((function(n,r){G(n)&&(o[e]+=n*("-"===t[r-1]?-1:1))}))})),o}var it={placement:"bottom",positionFixed:!1,eventsEnabled:!0,removeOnDestroy:!1,onCreate:function(){},onUpdate:function(){},modifiers:{shift:{order:100,enabled:!0,fn:function(t){var e=t.placement,n=e.split("-")[0],r=e.split("-")[1];if(r){var o=t.offsets,i=o.reference,a=o.popper,l=-1!==["bottom","top"].indexOf(n),c=l?"left":"top",u=l?"width":"height",s={start:_({},c,i[c]),end:_({},c,i[c]+i[u]-a[u])};t.offsets.popper=E({},a,s[r])}return t}},offset:{order:200,enabled:!0,fn:function(t,e){var n=e.offset,r=t.placement,o=t.offsets,i=o.popper,a=o.reference,l=r.split("-")[0],c=void 0;return c=G(+n)?[+n,0]:ot(n,i,a,l),"left"===l?(i.top+=c[0],i.left-=c[1]):"right"===l?(i.top+=c[0],i.left+=c[1]):"top"===l?(i.left+=c[0],i.top-=c[1]):"bottom"===l&&(i.left+=c[0],i.top+=c[1]),t.popper=i,t},offset:0},preventOverflow:{order:300,enabled:!0,fn:function(t,e){var n=e.boundariesElement||p(t.instance.popper);t.instance.reference===n&&(n=p(n));var r=q("transform"),o=t.instance.popper.style,i=o.top,a=o.left,l=o[r];o.top="",o.left="",o[r]="";var c=A(t.instance.popper,t.instance.reference,e.padding,n,t.positionFixed);o.top=i,o.left=a,o[r]=l,e.boundaries=c;var u=e.priority,s=t.offsets.popper,f={primary:function(t){var n=s[t];return s[t]<c[t]&&!e.escapeWithReference&&(n=Math.max(s[t],c[t])),_({},t,n)},secondary:function(t){var n="right"===t?"left":"top",r=s[n];return s[t]>c[t]&&!e.escapeWithReference&&(r=Math.min(s[n],c[t]-("right"===t?s.width:s.height))),_({},n,r)}};return u.forEach((function(t){var e=-1!==["left","top"].indexOf(t)?"primary":"secondary";s=E({},s,f[e](t))})),t.offsets.popper=s,t},priority:["left","right","top","bottom"],padding:5,boundariesElement:"scrollParent"},keepTogether:{order:400,enabled:!0,fn:function(t){var e=t.offsets,n=e.popper,r=e.reference,o=t.placement.split("-")[0],i=Math.floor,a=-1!==["top","bottom"].indexOf(o),l=a?"right":"bottom",c=a?"left":"top",u=a?"width":"height";return n[l]<i(r[c])&&(t.offsets.popper[c]=i(r[c])-n[u]),n[c]>i(r[l])&&(t.offsets.popper[c]=i(r[l])),t}},arrow:{order:500,enabled:!0,fn:function(t,e){var n;if(!K(t.instance.modifiers,"arrow","keepTogether"))return t;var r=e.element;if("string"==typeof r){if(!(r=t.instance.popper.querySelector(r)))return t}else if(!t.instance.popper.contains(r))return console.warn("WARNING: `arrow.element` must be child of its popper element!"),t;var o=t.placement.split("-")[0],i=t.offsets,l=i.popper,c=i.reference,u=-1!==["left","right"].indexOf(o),s=u?"height":"width",f=u?"Top":"Left",d=f.toLowerCase(),p=u?"left":"top",m=u?"bottom":"right",h=R(r)[s];c[m]-h<l[d]&&(t.offsets.popper[d]-=l[d]-(c[m]-h)),c[d]+h>l[m]&&(t.offsets.popper[d]+=c[d]+h-l[m]),t.offsets.popper=S(t.offsets.popper);var g=c[d]+c[s]/2-h/2,b=a(t.instance.popper),v=parseFloat(b["margin"+f]),y=parseFloat(b["border"+f+"Width"]),x=g-t.offsets.popper[d]-v-y;return x=Math.max(Math.min(l[s]-h,x),0),t.arrowElement=r,t.offsets.arrow=(_(n={},d,Math.round(x)),_(n,p,""),n),t},element:"[x-arrow]"},flip:{order:600,enabled:!0,fn:function(t,e){if(B(t.instance.modifiers,"inner"))return t;if(t.flipped&&t.placement===t.originalPlacement)return t;var n=A(t.instance.popper,t.instance.reference,e.padding,e.boundariesElement,t.positionFixed),r=t.placement.split("-")[0],o=D(r),i=t.placement.split("-")[1]||"",a=[];switch(e.behavior){case et:a=[r,o];break;case nt:a=tt(r);break;case rt:a=tt(r,!0);break;default:a=e.behavior}return a.forEach((function(l,c){if(r!==l||a.length===c+1)return t;r=t.placement.split("-")[0],o=D(r);var u=t.offsets.popper,s=t.offsets.reference,f=Math.floor,d="left"===r&&f(u.right)>f(s.left)||"right"===r&&f(u.left)<f(s.right)||"top"===r&&f(u.bottom)>f(s.top)||"bottom"===r&&f(u.top)<f(s.bottom),p=f(u.left)<f(n.left),m=f(u.right)>f(n.right),h=f(u.top)<f(n.top),g=f(u.bottom)>f(n.bottom),b="left"===r&&p||"right"===r&&m||"top"===r&&h||"bottom"===r&&g,v=-1!==["top","bottom"].indexOf(r),y=!!e.flipVariations&&(v&&"start"===i&&p||v&&"end"===i&&m||!v&&"start"===i&&h||!v&&"end"===i&&g),x=!!e.flipVariationsByContent&&(v&&"start"===i&&m||v&&"end"===i&&p||!v&&"start"===i&&g||!v&&"end"===i&&h),w=y||x;(d||b||w)&&(t.flipped=!0,(d||b)&&(r=a[c+1]),w&&(i=function(t){return"end"===t?"start":"start"===t?"end":t}(i)),t.placement=r+(i?"-"+i:""),t.offsets.popper=E({},t.offsets.popper,L(t.instance.popper,t.offsets.reference,t.placement)),t=U(t.instance.modifiers,t,"flip"))})),t},behavior:"flip",padding:5,boundariesElement:"viewport",flipVariations:!1,flipVariationsByContent:!1},inner:{order:700,enabled:!1,fn:function(t){var e=t.placement,n=e.split("-")[0],r=t.offsets,o=r.popper,i=r.reference,a=-1!==["left","right"].indexOf(n),l=-1===["top","left"].indexOf(n);return o[a?"left":"top"]=i[n]-(l?o[a?"width":"height"]:0),t.placement=D(e),t.offsets.popper=S(o),t}},hide:{order:800,enabled:!0,fn:function(t){if(!K(t.instance.modifiers,"hide","preventOverflow"))return t;var e=t.offsets.reference,n=I(t.instance.modifiers,(function(t){return"preventOverflow"===t.name})).boundaries;if(e.bottom<n.top||e.left>n.right||e.top>n.bottom||e.right<n.left){if(!0===t.hide)return t;t.hide=!0,t.attributes["x-out-of-boundaries"]=""}else{if(!1===t.hide)return t;t.hide=!1,t.attributes["x-out-of-boundaries"]=!1}return t}},computeStyle:{order:850,enabled:!0,fn:function(t,e){var n=e.x,r=e.y,o=t.offsets.popper,i=I(t.instance.modifiers,(function(t){return"applyStyle"===t.name})).gpuAcceleration;void 0!==i&&console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!");var a=void 0!==i?i:e.gpuAcceleration,l=p(t.instance.popper),c=M(l),u={position:o.position},s=function(t,e){var n=t.offsets,r=n.popper,o=n.reference,i=Math.round,a=Math.floor,l=function(t){return t},c=i(o.width),u=i(r.width),s=-1!==["left","right"].indexOf(t.placement),f=-1!==t.placement.indexOf("-"),d=e?s||f||c%2==u%2?i:a:l,p=e?i:l;return{left:d(c%2==1&&u%2==1&&!f&&e?r.left-1:r.left),top:p(r.top),bottom:p(r.bottom),right:d(r.right)}}(t,window.devicePixelRatio<2||!X),f="bottom"===n?"top":"bottom",d="right"===r?"left":"right",m=q("transform"),h=void 0,g=void 0;if(g="bottom"===f?"HTML"===l.nodeName?-l.clientHeight+s.bottom:-c.height+s.bottom:s.top,h="right"===d?"HTML"===l.nodeName?-l.clientWidth+s.right:-c.width+s.right:s.left,a&&m)u[m]="translate3d("+h+"px, "+g+"px, 0)",u[f]=0,u[d]=0,u.willChange="transform";else{var b="bottom"===f?-1:1,v="right"===d?-1:1;u[f]=g*b,u[d]=h*v,u.willChange=f+", "+d}var y={"x-placement":t.placement};return t.attributes=E({},y,t.attributes),t.styles=E({},u,t.styles),t.arrowStyles=E({},t.offsets.arrow,t.arrowStyles),t},gpuAcceleration:!0,x:"bottom",y:"right"},applyStyle:{order:900,enabled:!0,fn:function(t){var e,n;return Q(t.instance.popper,t.styles),e=t.instance.popper,n=t.attributes,Object.keys(n).forEach((function(t){!1!==n[t]?e.setAttribute(t,n[t]):e.removeAttribute(t)})),t.arrowElement&&Object.keys(t.arrowStyles).length&&Q(t.arrowElement,t.arrowStyles),t},onLoad:function(t,e,n,r,o){var i=j(o,e,t,n.positionFixed),a=z(n.placement,i,e,t,n.modifiers.flip.boundariesElement,n.modifiers.flip.padding);return e.setAttribute("x-placement",a),Q(e,{position:n.positionFixed?"fixed":"absolute"}),n},gpuAcceleration:void 0}}},at=function(){function t(e,n){var r=this,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};w(this,t),this.scheduleUpdate=function(){return requestAnimationFrame(r.update)},this.update=o(this.update.bind(this)),this.options=E({},t.Defaults,a),this.state={isDestroyed:!1,isCreated:!1,scrollParents:[]},this.reference=e&&e.jquery?e[0]:e,this.popper=n&&n.jquery?n[0]:n,this.options.modifiers={},Object.keys(E({},t.Defaults.modifiers,a.modifiers)).forEach((function(e){r.options.modifiers[e]=E({},t.Defaults.modifiers[e]||{},a.modifiers?a.modifiers[e]:{})})),this.modifiers=Object.keys(this.options.modifiers).map((function(t){return E({name:t},r.options.modifiers[t])})).sort((function(t,e){return t.order-e.order})),this.modifiers.forEach((function(t){t.enabled&&i(t.onLoad)&&t.onLoad(r.reference,r.popper,r.options,t,r.state)})),this.update();var l=this.options.eventsEnabled;l&&this.enableEventListeners(),this.state.eventsEnabled=l}return k(t,[{key:"update",value:function(){return F.call(this)}},{key:"destroy",value:function(){return H.call(this)}},{key:"enableEventListeners",value:function(){return V.call(this)}},{key:"disableEventListeners",value:function(){return Y.call(this)}}]),t}();at.Utils=("undefined"!=typeof window?window:t).PopperUtils,at.placements=J,at.Defaults=it,e.a=at}).call(this,n(13))},,function(t,e,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function a(t){if(null==t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}t.exports=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},n=0;n<10;n++)e["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(e).map((function(t){return e[t]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(t){r[t]=t})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(t){return!1}}()?Object.assign:function(t,e){for(var n,l,c=a(t),u=1;u<arguments.length;u++){for(var s in n=Object(arguments[u]))o.call(n,s)&&(c[s]=n[s]);if(r){l=r(n);for(var f=0;f<l.length;f++)i.call(n,l[f])&&(c[l[f]]=n[l[f]])}}return c}},function(t,e,n){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},i=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),a=[];function l(t){for(var e=-1,n=0;n<a.length;n++)if(a[n].identifier===t){e=n;break}return e}function c(t,e){for(var n={},r=[],o=0;o<t.length;o++){var i=t[o],c=e.base?i[0]+e.base:i[0],u=n[c]||0,s="".concat(c," ").concat(u);n[c]=u+1;var f=l(s),d={css:i[1],media:i[2],sourceMap:i[3]};-1!==f?(a[f].references++,a[f].updater(d)):a.push({identifier:s,updater:g(d,e),references:1}),r.push(s)}return r}function u(t){var e=document.createElement("style"),r=t.attributes||{};if(void 0===r.nonce){var o=n.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(t){e.setAttribute(t,r[t])})),"function"==typeof t.insert)t.insert(e);else{var a=i(t.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var s,f=(s=[],function(t,e){return s[t]=e,s.filter(Boolean).join("\n")});function d(t,e,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(t.styleSheet)t.styleSheet.cssText=f(e,o);else{var i=document.createTextNode(o),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(i,a[e]):t.appendChild(i)}}function p(t,e,n){var r=n.css,o=n.media,i=n.sourceMap;if(o?t.setAttribute("media",o):t.removeAttribute("media"),i&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}var m=null,h=0;function g(t,e){var n,r,o;if(e.singleton){var i=h++;n=m||(m=u(e)),r=d.bind(null,n,i,!1),o=d.bind(null,n,i,!0)}else n=u(e),r=p.bind(null,n,e),o=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else o()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=o());var n=c(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var r=0;r<n.length;r++){var o=l(n[r]);a[o].references--}for(var i=c(t,e),u=0;u<n.length;u++){var s=l(n[u]);0===a[s].references&&(a[s].updater(),a.splice(s,1))}n=i}}}},function(t,e,n){"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=function(t,e){var n=t[1]||"",r=t[3];if(!r)return n;if(e&&"function"==typeof btoa){var o=(a=r,l=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(c," */")),i=r.sources.map((function(t){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(t," */")}));return[n].concat(i).concat([o]).join("\n")}var a,l,c;return[n].join("\n")}(e,t);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,r){"string"==typeof t&&(t=[[null,t,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var l=0;l<t.length;l++){var c=[].concat(t[l]);r&&o[c[0]]||(n&&(c[2]?c[2]="".concat(n," and ").concat(c[2]):c[2]=n),e.push(c))}},e}},function(t,e,n){"use strict";t.exports=n(49)},function(t,e,n){"use strict";var r=Array.prototype.slice,o=n(27),i=Object.keys,a=i?function(t){return i(t)}:n(51),l=Object.keys;a.shim=function(){Object.keys?function(){var t=Object.keys(arguments);return t&&t.length===arguments.length}(1,2)||(Object.keys=function(t){return o(t)?l(r.call(t)):l(t)}):Object.keys=a;return Object.keys||a},t.exports=a},function(t,e,n){"use strict";var r=Object.prototype.toString;t.exports=function(t){var e=r.call(t),n="[object Arguments]"===e;return n||(n="[object Array]"!==e&&null!==t&&"object"==typeof t&&"number"==typeof t.length&&t.length>=0&&"[object Function]"===r.call(t.callee)),n}},function(t,e,n){"use strict";var r=Object,o=TypeError;t.exports=function(){if(null!=this&&this!==r(this))throw new o("RegExp.prototype.flags getter called on non-object");var t="";return this.global&&(t+="g"),this.ignoreCase&&(t+="i"),this.multiline&&(t+="m"),this.dotAll&&(t+="s"),this.unicode&&(t+="u"),this.sticky&&(t+="y"),t}},function(t,e,n){"use strict";var r=n(28),o=n(15).supportsDescriptors,i=Object.getOwnPropertyDescriptor,a=TypeError;t.exports=function(){if(!o)throw new a("RegExp.prototype.flags requires a true ES5 environment that supports property descriptors");if("gim"===/a/gim.flags){var t=i(RegExp.prototype,"flags");if(t&&"function"==typeof t.get&&"boolean"==typeof/a/.dotAll)return t.get}return r}},function(t,e,n){"use strict";e.__esModule=!0,e.default=e.EXITING=e.ENTERED=e.ENTERING=e.EXITED=e.UNMOUNTED=void 0;var r=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)if(Object.prototype.hasOwnProperty.call(t,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(t,n):{};r.get||r.set?Object.defineProperty(e,n,r):e[n]=t[n]}return e.default=t,e}(n(1)),o=l(n(0)),i=l(n(8)),a=n(31);n(32);function l(t){return t&&t.__esModule?t:{default:t}}e.UNMOUNTED="unmounted";e.EXITED="exited";e.ENTERING="entering";e.ENTERED="entered";e.EXITING="exiting";var c=function(t){var e,n;function r(e,n){var r;r=t.call(this,e,n)||this;var o,i=n.transitionGroup,a=i&&!i.isMounting?e.enter:e.appear;return r.appearStatus=null,e.in?a?(o="exited",r.appearStatus="entering"):o="entered":o=e.unmountOnExit||e.mountOnEnter?"unmounted":"exited",r.state={status:o},r.nextCallback=null,r}n=t,(e=r).prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n;var a=r.prototype;return a.getChildContext=function(){return{transitionGroup:null}},r.getDerivedStateFromProps=function(t,e){return t.in&&"unmounted"===e.status?{status:"exited"}:null},a.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},a.componentDidUpdate=function(t){var e=null;if(t!==this.props){var n=this.state.status;this.props.in?"entering"!==n&&"entered"!==n&&(e="entering"):"entering"!==n&&"entered"!==n||(e="exiting")}this.updateStatus(!1,e)},a.componentWillUnmount=function(){this.cancelNextCallback()},a.getTimeouts=function(){var t,e,n,r=this.props.timeout;return t=e=n=r,null!=r&&"number"!=typeof r&&(t=r.exit,e=r.enter,n=void 0!==r.appear?r.appear:e),{exit:t,enter:e,appear:n}},a.updateStatus=function(t,e){if(void 0===t&&(t=!1),null!==e){this.cancelNextCallback();var n=i.default.findDOMNode(this);"entering"===e?this.performEnter(n,t):this.performExit(n)}else this.props.unmountOnExit&&"exited"===this.state.status&&this.setState({status:"unmounted"})},a.performEnter=function(t,e){var n=this,r=this.props.enter,o=this.context.transitionGroup?this.context.transitionGroup.isMounting:e,i=this.getTimeouts(),a=o?i.appear:i.enter;e||r?(this.props.onEnter(t,o),this.safeSetState({status:"entering"},(function(){n.props.onEntering(t,o),n.onTransitionEnd(t,a,(function(){n.safeSetState({status:"entered"},(function(){n.props.onEntered(t,o)}))}))}))):this.safeSetState({status:"entered"},(function(){n.props.onEntered(t)}))},a.performExit=function(t){var e=this,n=this.props.exit,r=this.getTimeouts();n?(this.props.onExit(t),this.safeSetState({status:"exiting"},(function(){e.props.onExiting(t),e.onTransitionEnd(t,r.exit,(function(){e.safeSetState({status:"exited"},(function(){e.props.onExited(t)}))}))}))):this.safeSetState({status:"exited"},(function(){e.props.onExited(t)}))},a.cancelNextCallback=function(){null!==this.nextCallback&&(this.nextCallback.cancel(),this.nextCallback=null)},a.safeSetState=function(t,e){e=this.setNextCallback(e),this.setState(t,e)},a.setNextCallback=function(t){var e=this,n=!0;return this.nextCallback=function(r){n&&(n=!1,e.nextCallback=null,t(r))},this.nextCallback.cancel=function(){n=!1},this.nextCallback},a.onTransitionEnd=function(t,e,n){this.setNextCallback(n);var r=null==e&&!this.props.addEndListener;t&&!r?(this.props.addEndListener&&this.props.addEndListener(t,this.nextCallback),null!=e&&setTimeout(this.nextCallback,e)):setTimeout(this.nextCallback,0)},a.render=function(){var t=this.state.status;if("unmounted"===t)return null;var e=this.props,n=e.children,r=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(e,["children"]);if(delete r.in,delete r.mountOnEnter,delete r.unmountOnExit,delete r.appear,delete r.enter,delete r.exit,delete r.timeout,delete r.addEndListener,delete r.onEnter,delete r.onEntering,delete r.onEntered,delete r.onExit,delete r.onExiting,delete r.onExited,"function"==typeof n)return n(t,r);var i=o.default.Children.only(n);return o.default.cloneElement(i,r)},r}(o.default.Component);function u(){}c.contextTypes={transitionGroup:r.object},c.childContextTypes={transitionGroup:function(){}},c.propTypes={},c.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:u,onEntering:u,onEntered:u,onExit:u,onExiting:u,onExited:u},c.UNMOUNTED=0,c.EXITED=1,c.ENTERING=2,c.ENTERED=3,c.EXITING=4;var s=(0,a.polyfill)(c);e.default=s},function(t,e,n){"use strict";function r(){var t=this.constructor.getDerivedStateFromProps(this.props,this.state);null!=t&&this.setState(t)}function o(t){this.setState(function(e){var n=this.constructor.getDerivedStateFromProps(t,e);return null!=n?n:null}.bind(this))}function i(t,e){try{var n=this.props,r=this.state;this.props=t,this.state=e,this.__reactInternalSnapshotFlag=!0,this.__reactInternalSnapshot=this.getSnapshotBeforeUpdate(n,r)}finally{this.props=n,this.state=r}}function a(t){var e=t.prototype;if(!e||!e.isReactComponent)throw new Error("Can only polyfill class components");if("function"!=typeof t.getDerivedStateFromProps&&"function"!=typeof e.getSnapshotBeforeUpdate)return t;var n=null,a=null,l=null;if("function"==typeof e.componentWillMount?n="componentWillMount":"function"==typeof e.UNSAFE_componentWillMount&&(n="UNSAFE_componentWillMount"),"function"==typeof e.componentWillReceiveProps?a="componentWillReceiveProps":"function"==typeof e.UNSAFE_componentWillReceiveProps&&(a="UNSAFE_componentWillReceiveProps"),"function"==typeof e.componentWillUpdate?l="componentWillUpdate":"function"==typeof e.UNSAFE_componentWillUpdate&&(l="UNSAFE_componentWillUpdate"),null!==n||null!==a||null!==l){var c=t.displayName||t.name,u="function"==typeof t.getDerivedStateFromProps?"getDerivedStateFromProps()":"getSnapshotBeforeUpdate()";throw Error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n"+c+" uses "+u+" but also contains the following legacy lifecycles:"+(null!==n?"\n  "+n:"")+(null!==a?"\n  "+a:"")+(null!==l?"\n  "+l:"")+"\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://fb.me/react-async-component-lifecycle-hooks")}if("function"==typeof t.getDerivedStateFromProps&&(e.componentWillMount=r,e.componentWillReceiveProps=o),"function"==typeof e.getSnapshotBeforeUpdate){if("function"!=typeof e.componentDidUpdate)throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");e.componentWillUpdate=i;var s=e.componentDidUpdate;e.componentDidUpdate=function(t,e,n){var r=this.__reactInternalSnapshotFlag?this.__reactInternalSnapshot:n;s.call(this,t,e,r)}}return t}n.r(e),n.d(e,"polyfill",(function(){return a})),r.__suppressDeprecationWarning=!0,o.__suppressDeprecationWarning=!0,i.__suppressDeprecationWarning=!0},function(t,e,n){"use strict";e.__esModule=!0,e.classNamesShape=e.timeoutsShape=void 0;var r;(r=n(1))&&r.__esModule;e.timeoutsShape=null;e.classNamesShape=null},function(t,e,n){"use strict";e.__esModule=!0,e.default=void 0;var r=l(n(1)),o=l(n(0)),i=n(31),a=n(71);function l(t){return t&&t.__esModule?t:{default:t}}function c(){return(c=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t}).apply(this,arguments)}function u(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}var s=Object.values||function(t){return Object.keys(t).map((function(e){return t[e]}))},f=function(t){var e,n;function r(e,n){var r,o=(r=t.call(this,e,n)||this).handleExited.bind(u(u(r)));return r.state={handleExited:o,firstRender:!0},r}n=t,(e=r).prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n;var i=r.prototype;return i.getChildContext=function(){return{transitionGroup:{isMounting:!this.appeared}}},i.componentDidMount=function(){this.appeared=!0,this.mounted=!0},i.componentWillUnmount=function(){this.mounted=!1},r.getDerivedStateFromProps=function(t,e){var n=e.children,r=e.handleExited;return{children:e.firstRender?(0,a.getInitialChildMapping)(t,r):(0,a.getNextChildMapping)(t,n,r),firstRender:!1}},i.handleExited=function(t,e){var n=(0,a.getChildMapping)(this.props.children);t.key in n||(t.props.onExited&&t.props.onExited(e),this.mounted&&this.setState((function(e){var n=c({},e.children);return delete n[t.key],{children:n}})))},i.render=function(){var t=this.props,e=t.component,n=t.childFactory,r=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,["component","childFactory"]),i=s(this.state.children).map(n);return delete r.appear,delete r.enter,delete r.exit,null===e?i:o.default.createElement(e,r,i)},r}(o.default.Component);f.childContextTypes={transitionGroup:r.default.object.isRequired},f.propTypes={},f.defaultProps={component:"div",childFactory:function(t){return t}};var d=(0,i.polyfill)(f);e.default=d,t.exports=e.default},function(t,e,n){"use strict";n.r(e);var r=function(t,e){return t<e?-1:t>e?1:t>=e?0:NaN},o=function(t){var e;return 1===t.length&&(e=t,t=function(t,n){return r(e(t),n)}),{left:function(e,n,r,o){for(null==r&&(r=0),null==o&&(o=e.length);r<o;){var i=r+o>>>1;t(e[i],n)<0?r=i+1:o=i}return r},right:function(e,n,r,o){for(null==r&&(r=0),null==o&&(o=e.length);r<o;){var i=r+o>>>1;t(e[i],n)>0?o=i:r=i+1}return r}}};var i=o(r),a=i.right,l=i.left,c=a,u=function(t,e){null==e&&(e=s);for(var n=0,r=t.length-1,o=t[0],i=new Array(r<0?0:r);n<r;)i[n]=e(o,o=t[++n]);return i};function s(t,e){return[t,e]}var f=function(t,e,n){var r,o,i,a,l=t.length,c=e.length,u=new Array(l*c);for(null==n&&(n=s),r=i=0;r<l;++r)for(a=t[r],o=0;o<c;++o,++i)u[i]=n(a,e[o]);return u},d=function(t,e){return e<t?-1:e>t?1:e>=t?0:NaN},p=function(t){return null===t?NaN:+t},m=function(t,e){var n,r,o=t.length,i=0,a=-1,l=0,c=0;if(null==e)for(;++a<o;)isNaN(n=p(t[a]))||(c+=(r=n-l)*(n-(l+=r/++i)));else for(;++a<o;)isNaN(n=p(e(t[a],a,t)))||(c+=(r=n-l)*(n-(l+=r/++i)));if(i>1)return c/(i-1)},h=function(t,e){var n=m(t,e);return n?Math.sqrt(n):n},g=function(t,e){var n,r,o,i=t.length,a=-1;if(null==e){for(;++a<i;)if(null!=(n=t[a])&&n>=n)for(r=o=n;++a<i;)null!=(n=t[a])&&(r>n&&(r=n),o<n&&(o=n))}else for(;++a<i;)if(null!=(n=e(t[a],a,t))&&n>=n)for(r=o=n;++a<i;)null!=(n=e(t[a],a,t))&&(r>n&&(r=n),o<n&&(o=n));return[r,o]},b=Array.prototype,v=b.slice,y=b.map,x=function(t){return function(){return t}},w=function(t){return t},k=function(t,e,n){t=+t,e=+e,n=(o=arguments.length)<2?(e=t,t=0,1):o<3?1:+n;for(var r=-1,o=0|Math.max(0,Math.ceil((e-t)/n)),i=new Array(o);++r<o;)i[r]=t+r*n;return i},_=Math.sqrt(50),E=Math.sqrt(10),S=Math.sqrt(2),M=function(t,e,n){var r,o,i,a,l=-1;if(n=+n,(t=+t)===(e=+e)&&n>0)return[t];if((r=e<t)&&(o=t,t=e,e=o),0===(a=T(t,e,n))||!isFinite(a))return[];if(a>0)for(t=Math.ceil(t/a),e=Math.floor(e/a),i=new Array(o=Math.ceil(e-t+1));++l<o;)i[l]=(t+l)*a;else for(t=Math.floor(t*a),e=Math.ceil(e*a),i=new Array(o=Math.ceil(t-e+1));++l<o;)i[l]=(t-l)/a;return r&&i.reverse(),i};function T(t,e,n){var r=(e-t)/Math.max(0,n),o=Math.floor(Math.log(r)/Math.LN10),i=r/Math.pow(10,o);return o>=0?(i>=_?10:i>=E?5:i>=S?2:1)*Math.pow(10,o):-Math.pow(10,-o)/(i>=_?10:i>=E?5:i>=S?2:1)}function C(t,e,n){var r=Math.abs(e-t)/Math.max(0,n),o=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),i=r/o;return i>=_?o*=10:i>=E?o*=5:i>=S&&(o*=2),e<t?-o:o}var N=function(t){return Math.ceil(Math.log(t.length)/Math.LN2)+1},P=function(){var t=w,e=g,n=N;function r(r){var o,i,a=r.length,l=new Array(a);for(o=0;o<a;++o)l[o]=t(r[o],o,r);var u=e(l),s=u[0],f=u[1],d=n(l,s,f);Array.isArray(d)||(d=C(s,f,d),d=k(Math.ceil(s/d)*d,f,d));for(var p=d.length;d[0]<=s;)d.shift(),--p;for(;d[p-1]>f;)d.pop(),--p;var m,h=new Array(p+1);for(o=0;o<=p;++o)(m=h[o]=[]).x0=o>0?d[o-1]:s,m.x1=o<p?d[o]:f;for(o=0;o<a;++o)s<=(i=l[o])&&i<=f&&h[c(d,i,0,p)].push(r[o]);return h}return r.value=function(e){return arguments.length?(t="function"==typeof e?e:x(e),r):t},r.domain=function(t){return arguments.length?(e="function"==typeof t?t:x([t[0],t[1]]),r):e},r.thresholds=function(t){return arguments.length?(n="function"==typeof t?t:Array.isArray(t)?x(v.call(t)):x(t),r):n},r},A=function(t,e,n){if(null==n&&(n=p),r=t.length){if((e=+e)<=0||r<2)return+n(t[0],0,t);if(e>=1)return+n(t[r-1],r-1,t);var r,o=(r-1)*e,i=Math.floor(o),a=+n(t[i],i,t);return a+(+n(t[i+1],i+1,t)-a)*(o-i)}},O=function(t,e,n){return t=y.call(t,p).sort(r),Math.ceil((n-e)/(2*(A(t,.75)-A(t,.25))*Math.pow(t.length,-1/3)))},z=function(t,e,n){return Math.ceil((n-e)/(3.5*h(t)*Math.pow(t.length,-1/3)))},j=function(t,e){var n,r,o=t.length,i=-1;if(null==e){for(;++i<o;)if(null!=(n=t[i])&&n>=n)for(r=n;++i<o;)null!=(n=t[i])&&n>r&&(r=n)}else for(;++i<o;)if(null!=(n=e(t[i],i,t))&&n>=n)for(r=n;++i<o;)null!=(n=e(t[i],i,t))&&n>r&&(r=n);return r},R=function(t,e){var n,r=t.length,o=r,i=-1,a=0;if(null==e)for(;++i<r;)isNaN(n=p(t[i]))?--o:a+=n;else for(;++i<r;)isNaN(n=p(e(t[i],i,t)))?--o:a+=n;if(o)return a/o},D=function(t,e){var n,o=t.length,i=-1,a=[];if(null==e)for(;++i<o;)isNaN(n=p(t[i]))||a.push(n);else for(;++i<o;)isNaN(n=p(e(t[i],i,t)))||a.push(n);return A(a.sort(r),.5)},L=function(t){for(var e,n,r,o=t.length,i=-1,a=0;++i<o;)a+=t[i].length;for(n=new Array(a);--o>=0;)for(e=(r=t[o]).length;--e>=0;)n[--a]=r[e];return n},I=function(t,e){var n,r,o=t.length,i=-1;if(null==e){for(;++i<o;)if(null!=(n=t[i])&&n>=n)for(r=n;++i<o;)null!=(n=t[i])&&r>n&&(r=n)}else for(;++i<o;)if(null!=(n=e(t[i],i,t))&&n>=n)for(r=n;++i<o;)null!=(n=e(t[i],i,t))&&r>n&&(r=n);return r},U=function(t,e){for(var n=e.length,r=new Array(n);n--;)r[n]=t[e[n]];return r},F=function(t,e){if(n=t.length){var n,o,i=0,a=0,l=t[a];for(null==e&&(e=r);++i<n;)(e(o=t[i],l)<0||0!==e(l,l))&&(l=o,a=i);return 0===e(l,l)?a:void 0}},B=function(t,e,n){for(var r,o,i=(null==n?t.length:n)-(e=null==e?0:+e);i;)o=Math.random()*i--|0,r=t[i+e],t[i+e]=t[o+e],t[o+e]=r;return t},q=function(t,e){var n,r=t.length,o=-1,i=0;if(null==e)for(;++o<r;)(n=+t[o])&&(i+=n);else for(;++o<r;)(n=+e(t[o],o,t))&&(i+=n);return i},H=function(t){if(!(o=t.length))return[];for(var e=-1,n=I(t,W),r=new Array(n);++e<n;)for(var o,i=-1,a=r[e]=new Array(o);++i<o;)a[i]=t[i][e];return r};function W(t){return t.length}var $=function(){return H(arguments)},V=Array.prototype.slice,Y=function(t){return t};function G(t){return"translate("+(t+.5)+",0)"}function Q(t){return"translate(0,"+(t+.5)+")"}function X(t){return function(e){return+t(e)}}function K(t){var e=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(e=Math.round(e)),function(n){return+t(n)+e}}function J(){return!this.__axis}function Z(t,e){var n=[],r=null,o=null,i=6,a=6,l=3,c=1===t||4===t?-1:1,u=4===t||2===t?"x":"y",s=1===t||3===t?G:Q;function f(f){var d=null==r?e.ticks?e.ticks.apply(e,n):e.domain():r,p=null==o?e.tickFormat?e.tickFormat.apply(e,n):Y:o,m=Math.max(i,0)+l,h=e.range(),g=+h[0]+.5,b=+h[h.length-1]+.5,v=(e.bandwidth?K:X)(e.copy()),y=f.selection?f.selection():f,x=y.selectAll(".domain").data([null]),w=y.selectAll(".tick").data(d,e).order(),k=w.exit(),_=w.enter().append("g").attr("class","tick"),E=w.select("line"),S=w.select("text");x=x.merge(x.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),w=w.merge(_),E=E.merge(_.append("line").attr("stroke","currentColor").attr(u+"2",c*i)),S=S.merge(_.append("text").attr("fill","currentColor").attr(u,c*m).attr("dy",1===t?"0em":3===t?"0.71em":"0.32em")),f!==y&&(x=x.transition(f),w=w.transition(f),E=E.transition(f),S=S.transition(f),k=k.transition(f).attr("opacity",1e-6).attr("transform",(function(t){return isFinite(t=v(t))?s(t):this.getAttribute("transform")})),_.attr("opacity",1e-6).attr("transform",(function(t){var e=this.parentNode.__axis;return s(e&&isFinite(e=e(t))?e:v(t))}))),k.remove(),x.attr("d",4===t||2==t?a?"M"+c*a+","+g+"H0.5V"+b+"H"+c*a:"M0.5,"+g+"V"+b:a?"M"+g+","+c*a+"V0.5H"+b+"V"+c*a:"M"+g+",0.5H"+b),w.attr("opacity",1).attr("transform",(function(t){return s(v(t))})),E.attr(u+"2",c*i),S.attr(u,c*m).text(p),y.filter(J).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",2===t?"start":4===t?"end":"middle"),y.each((function(){this.__axis=v}))}return f.scale=function(t){return arguments.length?(e=t,f):e},f.ticks=function(){return n=V.call(arguments),f},f.tickArguments=function(t){return arguments.length?(n=null==t?[]:V.call(t),f):n.slice()},f.tickValues=function(t){return arguments.length?(r=null==t?null:V.call(t),f):r&&r.slice()},f.tickFormat=function(t){return arguments.length?(o=t,f):o},f.tickSize=function(t){return arguments.length?(i=a=+t,f):i},f.tickSizeInner=function(t){return arguments.length?(i=+t,f):i},f.tickSizeOuter=function(t){return arguments.length?(a=+t,f):a},f.tickPadding=function(t){return arguments.length?(l=+t,f):l},f}function tt(t){return Z(1,t)}function et(t){return Z(2,t)}function nt(t){return Z(3,t)}function rt(t){return Z(4,t)}var ot={value:function(){}};function it(){for(var t,e=0,n=arguments.length,r={};e<n;++e){if(!(t=arguments[e]+"")||t in r||/[\s.]/.test(t))throw new Error("illegal type: "+t);r[t]=[]}return new at(r)}function at(t){this._=t}function lt(t,e){return t.trim().split(/^|\s+/).map((function(t){var n="",r=t.indexOf(".");if(r>=0&&(n=t.slice(r+1),t=t.slice(0,r)),t&&!e.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:n}}))}function ct(t,e){for(var n,r=0,o=t.length;r<o;++r)if((n=t[r]).name===e)return n.value}function ut(t,e,n){for(var r=0,o=t.length;r<o;++r)if(t[r].name===e){t[r]=ot,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=n&&t.push({name:e,value:n}),t}at.prototype=it.prototype={constructor:at,on:function(t,e){var n,r=this._,o=lt(t+"",r),i=-1,a=o.length;if(!(arguments.length<2)){if(null!=e&&"function"!=typeof e)throw new Error("invalid callback: "+e);for(;++i<a;)if(n=(t=o[i]).type)r[n]=ut(r[n],t.name,e);else if(null==e)for(n in r)r[n]=ut(r[n],t.name,null);return this}for(;++i<a;)if((n=(t=o[i]).type)&&(n=ct(r[n],t.name)))return n},copy:function(){var t={},e=this._;for(var n in e)t[n]=e[n].slice();return new at(t)},call:function(t,e){if((n=arguments.length-2)>0)for(var n,r,o=new Array(n),i=0;i<n;++i)o[i]=arguments[i+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(i=0,n=(r=this._[t]).length;i<n;++i)r[i].value.apply(e,o)},apply:function(t,e,n){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],o=0,i=r.length;o<i;++o)r[o].value.apply(e,n)}};var st=it;function ft(){}var dt=function(t){return null==t?ft:function(){return this.querySelector(t)}};function pt(){return[]}var mt=function(t){return null==t?pt:function(){return this.querySelectorAll(t)}},ht=function(t){return function(){return this.matches(t)}},gt=function(t){return new Array(t.length)};function bt(t,e){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=e}bt.prototype={constructor:bt,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,e){return this._parent.insertBefore(t,e)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};function vt(t,e,n,r,o,i){for(var a,l=0,c=e.length,u=i.length;l<u;++l)(a=e[l])?(a.__data__=i[l],r[l]=a):n[l]=new bt(t,i[l]);for(;l<c;++l)(a=e[l])&&(o[l]=a)}function yt(t,e,n,r,o,i,a){var l,c,u,s={},f=e.length,d=i.length,p=new Array(f);for(l=0;l<f;++l)(c=e[l])&&(p[l]=u="$"+a.call(c,c.__data__,l,e),u in s?o[l]=c:s[u]=c);for(l=0;l<d;++l)(c=s[u="$"+a.call(t,i[l],l,i)])?(r[l]=c,c.__data__=i[l],s[u]=null):n[l]=new bt(t,i[l]);for(l=0;l<f;++l)(c=e[l])&&s[p[l]]===c&&(o[l]=c)}function xt(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}var wt="http://www.w3.org/1999/xhtml",kt={svg:"http://www.w3.org/2000/svg",xhtml:wt,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},_t=function(t){var e=t+="",n=e.indexOf(":");return n>=0&&"xmlns"!==(e=t.slice(0,n))&&(t=t.slice(n+1)),kt.hasOwnProperty(e)?{space:kt[e],local:t}:t};function Et(t){return function(){this.removeAttribute(t)}}function St(t){return function(){this.removeAttributeNS(t.space,t.local)}}function Mt(t,e){return function(){this.setAttribute(t,e)}}function Tt(t,e){return function(){this.setAttributeNS(t.space,t.local,e)}}function Ct(t,e){return function(){var n=e.apply(this,arguments);null==n?this.removeAttribute(t):this.setAttribute(t,n)}}function Nt(t,e){return function(){var n=e.apply(this,arguments);null==n?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,n)}}var Pt=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function At(t){return function(){this.style.removeProperty(t)}}function Ot(t,e,n){return function(){this.style.setProperty(t,e,n)}}function zt(t,e,n){return function(){var r=e.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,n)}}function jt(t,e){return t.style.getPropertyValue(e)||Pt(t).getComputedStyle(t,null).getPropertyValue(e)}function Rt(t){return function(){delete this[t]}}function Dt(t,e){return function(){this[t]=e}}function Lt(t,e){return function(){var n=e.apply(this,arguments);null==n?delete this[t]:this[t]=n}}function It(t){return t.trim().split(/^|\s+/)}function Ut(t){return t.classList||new Ft(t)}function Ft(t){this._node=t,this._names=It(t.getAttribute("class")||"")}function Bt(t,e){for(var n=Ut(t),r=-1,o=e.length;++r<o;)n.add(e[r])}function qt(t,e){for(var n=Ut(t),r=-1,o=e.length;++r<o;)n.remove(e[r])}function Ht(t){return function(){Bt(this,t)}}function Wt(t){return function(){qt(this,t)}}function $t(t,e){return function(){(e.apply(this,arguments)?Bt:qt)(this,t)}}Ft.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var e=this._names.indexOf(t);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function Vt(){this.textContent=""}function Yt(t){return function(){this.textContent=t}}function Gt(t){return function(){var e=t.apply(this,arguments);this.textContent=null==e?"":e}}function Qt(){this.innerHTML=""}function Xt(t){return function(){this.innerHTML=t}}function Kt(t){return function(){var e=t.apply(this,arguments);this.innerHTML=null==e?"":e}}function Jt(){this.nextSibling&&this.parentNode.appendChild(this)}function Zt(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function te(t){return function(){var e=this.ownerDocument,n=this.namespaceURI;return n===wt&&e.documentElement.namespaceURI===wt?e.createElement(t):e.createElementNS(n,t)}}function ee(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}var ne=function(t){var e=_t(t);return(e.local?ee:te)(e)};function re(){return null}function oe(){var t=this.parentNode;t&&t.removeChild(this)}function ie(){var t=this.cloneNode(!1),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function ae(){var t=this.cloneNode(!0),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}var le={},ce=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(le={mouseenter:"mouseover",mouseleave:"mouseout"}));function ue(t,e,n){return t=se(t,e,n),function(e){var n=e.relatedTarget;n&&(n===this||8&n.compareDocumentPosition(this))||t.call(this,e)}}function se(t,e,n){return function(r){var o=ce;ce=r;try{t.call(this,this.__data__,e,n)}finally{ce=o}}}function fe(t){return t.trim().split(/^|\s+/).map((function(t){var e="",n=t.indexOf(".");return n>=0&&(e=t.slice(n+1),t=t.slice(0,n)),{type:t,name:e}}))}function de(t){return function(){var e=this.__on;if(e){for(var n,r=0,o=-1,i=e.length;r<i;++r)n=e[r],t.type&&n.type!==t.type||n.name!==t.name?e[++o]=n:this.removeEventListener(n.type,n.listener,n.capture);++o?e.length=o:delete this.__on}}}function pe(t,e,n){var r=le.hasOwnProperty(t.type)?ue:se;return function(o,i,a){var l,c=this.__on,u=r(e,i,a);if(c)for(var s=0,f=c.length;s<f;++s)if((l=c[s]).type===t.type&&l.name===t.name)return this.removeEventListener(l.type,l.listener,l.capture),this.addEventListener(l.type,l.listener=u,l.capture=n),void(l.value=e);this.addEventListener(t.type,u,n),l={type:t.type,name:t.name,value:e,listener:u,capture:n},c?c.push(l):this.__on=[l]}}function me(t,e,n,r){var o=ce;t.sourceEvent=ce,ce=t;try{return e.apply(n,r)}finally{ce=o}}function he(t,e,n){var r=Pt(t),o=r.CustomEvent;"function"==typeof o?o=new o(e,n):(o=r.document.createEvent("Event"),n?(o.initEvent(e,n.bubbles,n.cancelable),o.detail=n.detail):o.initEvent(e,!1,!1)),t.dispatchEvent(o)}function ge(t,e){return function(){return he(this,t,e)}}function be(t,e){return function(){return he(this,t,e.apply(this,arguments))}}var ve=[null];function ye(t,e){this._groups=t,this._parents=e}function xe(){return new ye([[document.documentElement]],ve)}ye.prototype=xe.prototype={constructor:ye,select:function(t){"function"!=typeof t&&(t=dt(t));for(var e=this._groups,n=e.length,r=new Array(n),o=0;o<n;++o)for(var i,a,l=e[o],c=l.length,u=r[o]=new Array(c),s=0;s<c;++s)(i=l[s])&&(a=t.call(i,i.__data__,s,l))&&("__data__"in i&&(a.__data__=i.__data__),u[s]=a);return new ye(r,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=mt(t));for(var e=this._groups,n=e.length,r=[],o=[],i=0;i<n;++i)for(var a,l=e[i],c=l.length,u=0;u<c;++u)(a=l[u])&&(r.push(t.call(a,a.__data__,u,l)),o.push(a));return new ye(r,o)},filter:function(t){"function"!=typeof t&&(t=ht(t));for(var e=this._groups,n=e.length,r=new Array(n),o=0;o<n;++o)for(var i,a=e[o],l=a.length,c=r[o]=[],u=0;u<l;++u)(i=a[u])&&t.call(i,i.__data__,u,a)&&c.push(i);return new ye(r,this._parents)},data:function(t,e){if(!t)return m=new Array(this.size()),s=-1,this.each((function(t){m[++s]=t})),m;var n,r=e?yt:vt,o=this._parents,i=this._groups;"function"!=typeof t&&(n=t,t=function(){return n});for(var a=i.length,l=new Array(a),c=new Array(a),u=new Array(a),s=0;s<a;++s){var f=o[s],d=i[s],p=d.length,m=t.call(f,f&&f.__data__,s,o),h=m.length,g=c[s]=new Array(h),b=l[s]=new Array(h);r(f,d,g,b,u[s]=new Array(p),m,e);for(var v,y,x=0,w=0;x<h;++x)if(v=g[x]){for(x>=w&&(w=x+1);!(y=b[w])&&++w<h;);v._next=y||null}}return(l=new ye(l,o))._enter=c,l._exit=u,l},enter:function(){return new ye(this._enter||this._groups.map(gt),this._parents)},exit:function(){return new ye(this._exit||this._groups.map(gt),this._parents)},join:function(t,e,n){var r=this.enter(),o=this,i=this.exit();return r="function"==typeof t?t(r):r.append(t+""),null!=e&&(o=e(o)),null==n?i.remove():n(i),r&&o?r.merge(o).order():o},merge:function(t){for(var e=this._groups,n=t._groups,r=e.length,o=n.length,i=Math.min(r,o),a=new Array(r),l=0;l<i;++l)for(var c,u=e[l],s=n[l],f=u.length,d=a[l]=new Array(f),p=0;p<f;++p)(c=u[p]||s[p])&&(d[p]=c);for(;l<r;++l)a[l]=e[l];return new ye(a,this._parents)},order:function(){for(var t=this._groups,e=-1,n=t.length;++e<n;)for(var r,o=t[e],i=o.length-1,a=o[i];--i>=0;)(r=o[i])&&(a&&4^r.compareDocumentPosition(a)&&a.parentNode.insertBefore(r,a),a=r);return this},sort:function(t){function e(e,n){return e&&n?t(e.__data__,n.__data__):!e-!n}t||(t=xt);for(var n=this._groups,r=n.length,o=new Array(r),i=0;i<r;++i){for(var a,l=n[i],c=l.length,u=o[i]=new Array(c),s=0;s<c;++s)(a=l[s])&&(u[s]=a);u.sort(e)}return new ye(o,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),e=-1;return this.each((function(){t[++e]=this})),t},node:function(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var r=t[e],o=0,i=r.length;o<i;++o){var a=r[o];if(a)return a}return null},size:function(){var t=0;return this.each((function(){++t})),t},empty:function(){return!this.node()},each:function(t){for(var e=this._groups,n=0,r=e.length;n<r;++n)for(var o,i=e[n],a=0,l=i.length;a<l;++a)(o=i[a])&&t.call(o,o.__data__,a,i);return this},attr:function(t,e){var n=_t(t);if(arguments.length<2){var r=this.node();return n.local?r.getAttributeNS(n.space,n.local):r.getAttribute(n)}return this.each((null==e?n.local?St:Et:"function"==typeof e?n.local?Nt:Ct:n.local?Tt:Mt)(n,e))},style:function(t,e,n){return arguments.length>1?this.each((null==e?At:"function"==typeof e?zt:Ot)(t,e,null==n?"":n)):jt(this.node(),t)},property:function(t,e){return arguments.length>1?this.each((null==e?Rt:"function"==typeof e?Lt:Dt)(t,e)):this.node()[t]},classed:function(t,e){var n=It(t+"");if(arguments.length<2){for(var r=Ut(this.node()),o=-1,i=n.length;++o<i;)if(!r.contains(n[o]))return!1;return!0}return this.each(("function"==typeof e?$t:e?Ht:Wt)(n,e))},text:function(t){return arguments.length?this.each(null==t?Vt:("function"==typeof t?Gt:Yt)(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?Qt:("function"==typeof t?Kt:Xt)(t)):this.node().innerHTML},raise:function(){return this.each(Jt)},lower:function(){return this.each(Zt)},append:function(t){var e="function"==typeof t?t:ne(t);return this.select((function(){return this.appendChild(e.apply(this,arguments))}))},insert:function(t,e){var n="function"==typeof t?t:ne(t),r=null==e?re:"function"==typeof e?e:dt(e);return this.select((function(){return this.insertBefore(n.apply(this,arguments),r.apply(this,arguments)||null)}))},remove:function(){return this.each(oe)},clone:function(t){return this.select(t?ae:ie)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,e,n){var r,o,i=fe(t+""),a=i.length;if(!(arguments.length<2)){for(l=e?pe:de,null==n&&(n=!1),r=0;r<a;++r)this.each(l(i[r],e,n));return this}var l=this.node().__on;if(l)for(var c,u=0,s=l.length;u<s;++u)for(r=0,c=l[u];r<a;++r)if((o=i[r]).type===c.type&&o.name===c.name)return c.value},dispatch:function(t,e){return this.each(("function"==typeof e?be:ge)(t,e))}};var we=xe,ke=function(t){return"string"==typeof t?new ye([[document.querySelector(t)]],[document.documentElement]):new ye([[t]],ve)};function _e(){ce.stopImmediatePropagation()}var Ee=function(){ce.preventDefault(),ce.stopImmediatePropagation()},Se=function(t){var e=t.document.documentElement,n=ke(t).on("dragstart.drag",Ee,!0);"onselectstart"in e?n.on("selectstart.drag",Ee,!0):(e.__noselect=e.style.MozUserSelect,e.style.MozUserSelect="none")};function Me(t,e){var n=t.document.documentElement,r=ke(t).on("dragstart.drag",null);e&&(r.on("click.drag",Ee,!0),setTimeout((function(){r.on("click.drag",null)}),0)),"onselectstart"in n?r.on("selectstart.drag",null):(n.style.MozUserSelect=n.__noselect,delete n.__noselect)}var Te=function(t,e,n){t.prototype=e.prototype=n,n.constructor=t};function Ce(t,e){var n=Object.create(t.prototype);for(var r in e)n[r]=e[r];return n}function Ne(){}var Pe="\\s*([+-]?\\d+)\\s*",Ae="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Oe="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",ze=/^#([0-9a-f]{3,8})$/,je=new RegExp("^rgb\\("+[Pe,Pe,Pe]+"\\)$"),Re=new RegExp("^rgb\\("+[Oe,Oe,Oe]+"\\)$"),De=new RegExp("^rgba\\("+[Pe,Pe,Pe,Ae]+"\\)$"),Le=new RegExp("^rgba\\("+[Oe,Oe,Oe,Ae]+"\\)$"),Ie=new RegExp("^hsl\\("+[Ae,Oe,Oe]+"\\)$"),Ue=new RegExp("^hsla\\("+[Ae,Oe,Oe,Ae]+"\\)$"),Fe={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Be(){return this.rgb().formatHex()}function qe(){return this.rgb().formatRgb()}function He(t){var e,n;return t=(t+"").trim().toLowerCase(),(e=ze.exec(t))?(n=e[1].length,e=parseInt(e[1],16),6===n?We(e):3===n?new Ge(e>>8&15|e>>4&240,e>>4&15|240&e,(15&e)<<4|15&e,1):8===n?new Ge(e>>24&255,e>>16&255,e>>8&255,(255&e)/255):4===n?new Ge(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|240&e,((15&e)<<4|15&e)/255):null):(e=je.exec(t))?new Ge(e[1],e[2],e[3],1):(e=Re.exec(t))?new Ge(255*e[1]/100,255*e[2]/100,255*e[3]/100,1):(e=De.exec(t))?$e(e[1],e[2],e[3],e[4]):(e=Le.exec(t))?$e(255*e[1]/100,255*e[2]/100,255*e[3]/100,e[4]):(e=Ie.exec(t))?Je(e[1],e[2]/100,e[3]/100,1):(e=Ue.exec(t))?Je(e[1],e[2]/100,e[3]/100,e[4]):Fe.hasOwnProperty(t)?We(Fe[t]):"transparent"===t?new Ge(NaN,NaN,NaN,0):null}function We(t){return new Ge(t>>16&255,t>>8&255,255&t,1)}function $e(t,e,n,r){return r<=0&&(t=e=n=NaN),new Ge(t,e,n,r)}function Ve(t){return t instanceof Ne||(t=He(t)),t?new Ge((t=t.rgb()).r,t.g,t.b,t.opacity):new Ge}function Ye(t,e,n,r){return 1===arguments.length?Ve(t):new Ge(t,e,n,null==r?1:r)}function Ge(t,e,n,r){this.r=+t,this.g=+e,this.b=+n,this.opacity=+r}function Qe(){return"#"+Ke(this.r)+Ke(this.g)+Ke(this.b)}function Xe(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}function Ke(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function Je(t,e,n,r){return r<=0?t=e=n=NaN:n<=0||n>=1?t=e=NaN:e<=0&&(t=NaN),new en(t,e,n,r)}function Ze(t){if(t instanceof en)return new en(t.h,t.s,t.l,t.opacity);if(t instanceof Ne||(t=He(t)),!t)return new en;if(t instanceof en)return t;var e=(t=t.rgb()).r/255,n=t.g/255,r=t.b/255,o=Math.min(e,n,r),i=Math.max(e,n,r),a=NaN,l=i-o,c=(i+o)/2;return l?(a=e===i?(n-r)/l+6*(n<r):n===i?(r-e)/l+2:(e-n)/l+4,l/=c<.5?i+o:2-i-o,a*=60):l=c>0&&c<1?0:a,new en(a,l,c,t.opacity)}function tn(t,e,n,r){return 1===arguments.length?Ze(t):new en(t,e,n,null==r?1:r)}function en(t,e,n,r){this.h=+t,this.s=+e,this.l=+n,this.opacity=+r}function nn(t,e,n){return 255*(t<60?e+(n-e)*t/60:t<180?n:t<240?e+(n-e)*(240-t)/60:e)}function rn(t,e,n,r,o){var i=t*t,a=i*t;return((1-3*t+3*i-a)*e+(4-6*i+3*a)*n+(1+3*t+3*i-3*a)*r+a*o)/6}Te(Ne,He,{copy:function(t){return Object.assign(new this.constructor,this,t)},displayable:function(){return this.rgb().displayable()},hex:Be,formatHex:Be,formatHsl:function(){return Ze(this).formatHsl()},formatRgb:qe,toString:qe}),Te(Ge,Ye,Ce(Ne,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Ge(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Ge(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:Qe,formatHex:Qe,formatRgb:Xe,toString:Xe})),Te(en,tn,Ce(Ne,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new en(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new en(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),e=isNaN(t)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*e,o=2*n-r;return new Ge(nn(t>=240?t-240:t+120,o,r),nn(t,o,r),nn(t<120?t+240:t-120,o,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===t?")":", "+t+")")}}));var on=function(t){var e=t.length-1;return function(n){var r=n<=0?n=0:n>=1?(n=1,e-1):Math.floor(n*e),o=t[r],i=t[r+1],a=r>0?t[r-1]:2*o-i,l=r<e-1?t[r+2]:2*i-o;return rn((n-r/e)*e,a,o,i,l)}},an=function(t){var e=t.length;return function(n){var r=Math.floor(((n%=1)<0?++n:n)*e),o=t[(r+e-1)%e],i=t[r%e],a=t[(r+1)%e],l=t[(r+2)%e];return rn((n-r/e)*e,o,i,a,l)}},ln=function(t){return function(){return t}};function cn(t,e){return function(n){return t+n*e}}function un(t,e){var n=e-t;return n?cn(t,n>180||n<-180?n-360*Math.round(n/360):n):ln(isNaN(t)?e:t)}function sn(t){return 1==(t=+t)?fn:function(e,n){return n-e?function(t,e,n){return t=Math.pow(t,n),e=Math.pow(e,n)-t,n=1/n,function(r){return Math.pow(t+r*e,n)}}(e,n,t):ln(isNaN(e)?n:e)}}function fn(t,e){var n=e-t;return n?cn(t,n):ln(isNaN(t)?e:t)}var dn=function t(e){var n=sn(e);function r(t,e){var r=n((t=Ye(t)).r,(e=Ye(e)).r),o=n(t.g,e.g),i=n(t.b,e.b),a=fn(t.opacity,e.opacity);return function(e){return t.r=r(e),t.g=o(e),t.b=i(e),t.opacity=a(e),t+""}}return r.gamma=t,r}(1);function pn(t){return function(e){var n,r,o=e.length,i=new Array(o),a=new Array(o),l=new Array(o);for(n=0;n<o;++n)r=Ye(e[n]),i[n]=r.r||0,a[n]=r.g||0,l[n]=r.b||0;return i=t(i),a=t(a),l=t(l),r.opacity=1,function(t){return r.r=i(t),r.g=a(t),r.b=l(t),r+""}}}var mn=pn(on),hn=pn(an),gn=function(t,e){e||(e=[]);var n,r=t?Math.min(e.length,t.length):0,o=e.slice();return function(i){for(n=0;n<r;++n)o[n]=t[n]*(1-i)+e[n]*i;return o}};function bn(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}var vn=function(t,e){return(bn(e)?gn:yn)(t,e)};function yn(t,e){var n,r=e?e.length:0,o=t?Math.min(r,t.length):0,i=new Array(o),a=new Array(r);for(n=0;n<o;++n)i[n]=Cn(t[n],e[n]);for(;n<r;++n)a[n]=e[n];return function(t){for(n=0;n<o;++n)a[n]=i[n](t);return a}}var xn=function(t,e){var n=new Date;return t=+t,e=+e,function(r){return n.setTime(t*(1-r)+e*r),n}},wn=function(t,e){return t=+t,e=+e,function(n){return t*(1-n)+e*n}},kn=function(t,e){var n,r={},o={};for(n in null!==t&&"object"==typeof t||(t={}),null!==e&&"object"==typeof e||(e={}),e)n in t?r[n]=Cn(t[n],e[n]):o[n]=e[n];return function(t){for(n in r)o[n]=r[n](t);return o}},_n=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,En=new RegExp(_n.source,"g");var Sn,Mn,Tn=function(t,e){var n,r,o,i=_n.lastIndex=En.lastIndex=0,a=-1,l=[],c=[];for(t+="",e+="";(n=_n.exec(t))&&(r=En.exec(e));)(o=r.index)>i&&(o=e.slice(i,o),l[a]?l[a]+=o:l[++a]=o),(n=n[0])===(r=r[0])?l[a]?l[a]+=r:l[++a]=r:(l[++a]=null,c.push({i:a,x:wn(n,r)})),i=En.lastIndex;return i<e.length&&(o=e.slice(i),l[a]?l[a]+=o:l[++a]=o),l.length<2?c[0]?function(t){return function(e){return t(e)+""}}(c[0].x):function(t){return function(){return t}}(e):(e=c.length,function(t){for(var n,r=0;r<e;++r)l[(n=c[r]).i]=n.x(t);return l.join("")})},Cn=function(t,e){var n,r=typeof e;return null==e||"boolean"===r?ln(e):("number"===r?wn:"string"===r?(n=He(e))?(e=n,dn):Tn:e instanceof He?dn:e instanceof Date?xn:bn(e)?gn:Array.isArray(e)?yn:"function"!=typeof e.valueOf&&"function"!=typeof e.toString||isNaN(e)?kn:wn)(t,e)},Nn=function(){for(var t,e=ce;t=e.sourceEvent;)e=t;return e},Pn=function(t,e){var n=t.ownerSVGElement||t;if(n.createSVGPoint){var r=n.createSVGPoint();return r.x=e.clientX,r.y=e.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}var o=t.getBoundingClientRect();return[e.clientX-o.left-t.clientLeft,e.clientY-o.top-t.clientTop]},An=function(t,e,n){arguments.length<3&&(n=e,e=Nn().changedTouches);for(var r,o=0,i=e?e.length:0;o<i;++o)if((r=e[o]).identifier===n)return Pn(t,r);return null},On=function(t){var e=Nn();return e.changedTouches&&(e=e.changedTouches[0]),Pn(t,e)},zn=0,jn=0,Rn=0,Dn=0,Ln=0,In=0,Un="object"==typeof performance&&performance.now?performance:Date,Fn="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function Bn(){return Ln||(Fn(qn),Ln=Un.now()+In)}function qn(){Ln=0}function Hn(){this._call=this._time=this._next=null}function Wn(t,e,n){var r=new Hn;return r.restart(t,e,n),r}function $n(){Bn(),++zn;for(var t,e=Sn;e;)(t=Ln-e._time)>=0&&e._call.call(null,t),e=e._next;--zn}function Vn(){Ln=(Dn=Un.now())+In,zn=jn=0;try{$n()}finally{zn=0,function(){var t,e,n=Sn,r=1/0;for(;n;)n._call?(r>n._time&&(r=n._time),t=n,n=n._next):(e=n._next,n._next=null,n=t?t._next=e:Sn=e);Mn=t,Gn(r)}(),Ln=0}}function Yn(){var t=Un.now(),e=t-Dn;e>1e3&&(In-=e,Dn=t)}function Gn(t){zn||(jn&&(jn=clearTimeout(jn)),t-Ln>24?(t<1/0&&(jn=setTimeout(Vn,t-Un.now()-In)),Rn&&(Rn=clearInterval(Rn))):(Rn||(Dn=Un.now(),Rn=setInterval(Yn,1e3)),zn=1,Fn(Vn)))}Hn.prototype=Wn.prototype={constructor:Hn,restart:function(t,e,n){if("function"!=typeof t)throw new TypeError("callback is not a function");n=(null==n?Bn():+n)+(null==e?0:+e),this._next||Mn===this||(Mn?Mn._next=this:Sn=this,Mn=this),this._call=t,this._time=n,Gn()},stop:function(){this._call&&(this._call=null,this._time=1/0,Gn())}};var Qn=function(t,e,n){var r=new Hn;return e=null==e?0:+e,r.restart((function(n){r.stop(),t(n+e)}),e,n),r},Xn=st("start","end","cancel","interrupt"),Kn=[],Jn=function(t,e,n,r,o,i){var a=t.__transition;if(a){if(n in a)return}else t.__transition={};!function(t,e,n){var r,o=t.__transition;function i(c){var u,s,f,d;if(1!==n.state)return l();for(u in o)if((d=o[u]).name===n.name){if(3===d.state)return Qn(i);4===d.state?(d.state=6,d.timer.stop(),d.on.call("interrupt",t,t.__data__,d.index,d.group),delete o[u]):+u<e&&(d.state=6,d.timer.stop(),d.on.call("cancel",t,t.__data__,d.index,d.group),delete o[u])}if(Qn((function(){3===n.state&&(n.state=4,n.timer.restart(a,n.delay,n.time),a(c))})),n.state=2,n.on.call("start",t,t.__data__,n.index,n.group),2===n.state){for(n.state=3,r=new Array(f=n.tween.length),u=0,s=-1;u<f;++u)(d=n.tween[u].value.call(t,t.__data__,n.index,n.group))&&(r[++s]=d);r.length=s+1}}function a(e){for(var o=e<n.duration?n.ease.call(null,e/n.duration):(n.timer.restart(l),n.state=5,1),i=-1,a=r.length;++i<a;)r[i].call(t,o);5===n.state&&(n.on.call("end",t,t.__data__,n.index,n.group),l())}function l(){for(var r in n.state=6,n.timer.stop(),delete o[e],o)return;delete t.__transition}o[e]=n,n.timer=Wn((function(t){n.state=1,n.timer.restart(i,n.delay,n.time),n.delay<=t&&i(t-n.delay)}),0,n.time)}(t,n,{name:e,index:r,group:o,on:Xn,tween:Kn,time:i.time,delay:i.delay,duration:i.duration,ease:i.ease,timer:null,state:0})};function Zn(t,e){var n=er(t,e);if(n.state>0)throw new Error("too late; already scheduled");return n}function tr(t,e){var n=er(t,e);if(n.state>3)throw new Error("too late; already running");return n}function er(t,e){var n=t.__transition;if(!n||!(n=n[e]))throw new Error("transition not found");return n}var nr,rr,or,ir,ar=function(t,e){var n,r,o,i=t.__transition,a=!0;if(i){for(o in e=null==e?null:e+"",i)(n=i[o]).name===e?(r=n.state>2&&n.state<5,n.state=6,n.timer.stop(),n.on.call(r?"interrupt":"cancel",t,t.__data__,n.index,n.group),delete i[o]):a=!1;a&&delete t.__transition}},lr=180/Math.PI,cr={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},ur=function(t,e,n,r,o,i){var a,l,c;return(a=Math.sqrt(t*t+e*e))&&(t/=a,e/=a),(c=t*n+e*r)&&(n-=t*c,r-=e*c),(l=Math.sqrt(n*n+r*r))&&(n/=l,r/=l,c/=l),t*r<e*n&&(t=-t,e=-e,c=-c,a=-a),{translateX:o,translateY:i,rotate:Math.atan2(e,t)*lr,skewX:Math.atan(c)*lr,scaleX:a,scaleY:l}};function sr(t,e,n,r){function o(t){return t.length?t.pop()+" ":""}return function(i,a){var l=[],c=[];return i=t(i),a=t(a),function(t,r,o,i,a,l){if(t!==o||r!==i){var c=a.push("translate(",null,e,null,n);l.push({i:c-4,x:wn(t,o)},{i:c-2,x:wn(r,i)})}else(o||i)&&a.push("translate("+o+e+i+n)}(i.translateX,i.translateY,a.translateX,a.translateY,l,c),function(t,e,n,i){t!==e?(t-e>180?e+=360:e-t>180&&(t+=360),i.push({i:n.push(o(n)+"rotate(",null,r)-2,x:wn(t,e)})):e&&n.push(o(n)+"rotate("+e+r)}(i.rotate,a.rotate,l,c),function(t,e,n,i){t!==e?i.push({i:n.push(o(n)+"skewX(",null,r)-2,x:wn(t,e)}):e&&n.push(o(n)+"skewX("+e+r)}(i.skewX,a.skewX,l,c),function(t,e,n,r,i,a){if(t!==n||e!==r){var l=i.push(o(i)+"scale(",null,",",null,")");a.push({i:l-4,x:wn(t,n)},{i:l-2,x:wn(e,r)})}else 1===n&&1===r||i.push(o(i)+"scale("+n+","+r+")")}(i.scaleX,i.scaleY,a.scaleX,a.scaleY,l,c),i=a=null,function(t){for(var e,n=-1,r=c.length;++n<r;)l[(e=c[n]).i]=e.x(t);return l.join("")}}}var fr=sr((function(t){return"none"===t?cr:(nr||(nr=document.createElement("DIV"),rr=document.documentElement,or=document.defaultView),nr.style.transform=t,t=or.getComputedStyle(rr.appendChild(nr),null).getPropertyValue("transform"),rr.removeChild(nr),t=t.slice(7,-1).split(","),ur(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))}),"px, ","px)","deg)"),dr=sr((function(t){return null==t?cr:(ir||(ir=document.createElementNS("http://www.w3.org/2000/svg","g")),ir.setAttribute("transform",t),(t=ir.transform.baseVal.consolidate())?(t=t.matrix,ur(t.a,t.b,t.c,t.d,t.e,t.f)):cr)}),", ",")",")");function pr(t,e){var n,r;return function(){var o=tr(this,t),i=o.tween;if(i!==n)for(var a=0,l=(r=n=i).length;a<l;++a)if(r[a].name===e){(r=r.slice()).splice(a,1);break}o.tween=r}}function mr(t,e,n){var r,o;if("function"!=typeof n)throw new Error;return function(){var i=tr(this,t),a=i.tween;if(a!==r){o=(r=a).slice();for(var l={name:e,value:n},c=0,u=o.length;c<u;++c)if(o[c].name===e){o[c]=l;break}c===u&&o.push(l)}i.tween=o}}function hr(t,e,n){var r=t._id;return t.each((function(){var t=tr(this,r);(t.value||(t.value={}))[e]=n.apply(this,arguments)})),function(t){return er(t,r).value[e]}}var gr=function(t,e){var n;return("number"==typeof e?wn:e instanceof He?dn:(n=He(e))?(e=n,dn):Tn)(t,e)};function br(t){return function(){this.removeAttribute(t)}}function vr(t){return function(){this.removeAttributeNS(t.space,t.local)}}function yr(t,e,n){var r,o,i=n+"";return function(){var a=this.getAttribute(t);return a===i?null:a===r?o:o=e(r=a,n)}}function xr(t,e,n){var r,o,i=n+"";return function(){var a=this.getAttributeNS(t.space,t.local);return a===i?null:a===r?o:o=e(r=a,n)}}function wr(t,e,n){var r,o,i;return function(){var a,l,c=n(this);if(null!=c)return(a=this.getAttribute(t))===(l=c+"")?null:a===r&&l===o?i:(o=l,i=e(r=a,c));this.removeAttribute(t)}}function kr(t,e,n){var r,o,i;return function(){var a,l,c=n(this);if(null!=c)return(a=this.getAttributeNS(t.space,t.local))===(l=c+"")?null:a===r&&l===o?i:(o=l,i=e(r=a,c));this.removeAttributeNS(t.space,t.local)}}function _r(t,e){return function(n){this.setAttribute(t,e.call(this,n))}}function Er(t,e){return function(n){this.setAttributeNS(t.space,t.local,e.call(this,n))}}function Sr(t,e){var n,r;function o(){var o=e.apply(this,arguments);return o!==r&&(n=(r=o)&&Er(t,o)),n}return o._value=e,o}function Mr(t,e){var n,r;function o(){var o=e.apply(this,arguments);return o!==r&&(n=(r=o)&&_r(t,o)),n}return o._value=e,o}function Tr(t,e){return function(){Zn(this,t).delay=+e.apply(this,arguments)}}function Cr(t,e){return e=+e,function(){Zn(this,t).delay=e}}function Nr(t,e){return function(){tr(this,t).duration=+e.apply(this,arguments)}}function Pr(t,e){return e=+e,function(){tr(this,t).duration=e}}function Ar(t,e){if("function"!=typeof e)throw new Error;return function(){tr(this,t).ease=e}}function Or(t,e,n){var r,o,i=function(t){return(t+"").trim().split(/^|\s+/).every((function(t){var e=t.indexOf(".");return e>=0&&(t=t.slice(0,e)),!t||"start"===t}))}(e)?Zn:tr;return function(){var a=i(this,t),l=a.on;l!==r&&(o=(r=l).copy()).on(e,n),a.on=o}}var zr=we.prototype.constructor;function jr(t){return function(){this.style.removeProperty(t)}}function Rr(t,e,n){return function(r){this.style.setProperty(t,e.call(this,r),n)}}function Dr(t,e,n){var r,o;function i(){var i=e.apply(this,arguments);return i!==o&&(r=(o=i)&&Rr(t,i,n)),r}return i._value=e,i}function Lr(t){return function(e){this.textContent=t.call(this,e)}}function Ir(t){var e,n;function r(){var r=t.apply(this,arguments);return r!==n&&(e=(n=r)&&Lr(r)),e}return r._value=t,r}var Ur=0;function Fr(t,e,n,r){this._groups=t,this._parents=e,this._name=n,this._id=r}function Br(t){return we().transition(t)}function qr(){return++Ur}var Hr=we.prototype;function Wr(t){return t*t*t}function $r(t){return--t*t*t+1}function Vr(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}Fr.prototype=Br.prototype={constructor:Fr,select:function(t){var e=this._name,n=this._id;"function"!=typeof t&&(t=dt(t));for(var r=this._groups,o=r.length,i=new Array(o),a=0;a<o;++a)for(var l,c,u=r[a],s=u.length,f=i[a]=new Array(s),d=0;d<s;++d)(l=u[d])&&(c=t.call(l,l.__data__,d,u))&&("__data__"in l&&(c.__data__=l.__data__),f[d]=c,Jn(f[d],e,n,d,f,er(l,n)));return new Fr(i,this._parents,e,n)},selectAll:function(t){var e=this._name,n=this._id;"function"!=typeof t&&(t=mt(t));for(var r=this._groups,o=r.length,i=[],a=[],l=0;l<o;++l)for(var c,u=r[l],s=u.length,f=0;f<s;++f)if(c=u[f]){for(var d,p=t.call(c,c.__data__,f,u),m=er(c,n),h=0,g=p.length;h<g;++h)(d=p[h])&&Jn(d,e,n,h,p,m);i.push(p),a.push(c)}return new Fr(i,a,e,n)},filter:function(t){"function"!=typeof t&&(t=ht(t));for(var e=this._groups,n=e.length,r=new Array(n),o=0;o<n;++o)for(var i,a=e[o],l=a.length,c=r[o]=[],u=0;u<l;++u)(i=a[u])&&t.call(i,i.__data__,u,a)&&c.push(i);return new Fr(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var e=this._groups,n=t._groups,r=e.length,o=n.length,i=Math.min(r,o),a=new Array(r),l=0;l<i;++l)for(var c,u=e[l],s=n[l],f=u.length,d=a[l]=new Array(f),p=0;p<f;++p)(c=u[p]||s[p])&&(d[p]=c);for(;l<r;++l)a[l]=e[l];return new Fr(a,this._parents,this._name,this._id)},selection:function(){return new zr(this._groups,this._parents)},transition:function(){for(var t=this._name,e=this._id,n=qr(),r=this._groups,o=r.length,i=0;i<o;++i)for(var a,l=r[i],c=l.length,u=0;u<c;++u)if(a=l[u]){var s=er(a,e);Jn(a,t,n,u,l,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new Fr(r,this._parents,t,n)},call:Hr.call,nodes:Hr.nodes,node:Hr.node,size:Hr.size,empty:Hr.empty,each:Hr.each,on:function(t,e){var n=this._id;return arguments.length<2?er(this.node(),n).on.on(t):this.each(Or(n,t,e))},attr:function(t,e){var n=_t(t),r="transform"===n?dr:gr;return this.attrTween(t,"function"==typeof e?(n.local?kr:wr)(n,r,hr(this,"attr."+t,e)):null==e?(n.local?vr:br)(n):(n.local?xr:yr)(n,r,e))},attrTween:function(t,e){var n="attr."+t;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(null==e)return this.tween(n,null);if("function"!=typeof e)throw new Error;var r=_t(t);return this.tween(n,(r.local?Sr:Mr)(r,e))},style:function(t,e,n){var r="transform"==(t+="")?fr:gr;return null==e?this.styleTween(t,function(t,e){var n,r,o;return function(){var i=jt(this,t),a=(this.style.removeProperty(t),jt(this,t));return i===a?null:i===n&&a===r?o:o=e(n=i,r=a)}}(t,r)).on("end.style."+t,jr(t)):"function"==typeof e?this.styleTween(t,function(t,e,n){var r,o,i;return function(){var a=jt(this,t),l=n(this),c=l+"";return null==l&&(this.style.removeProperty(t),c=l=jt(this,t)),a===c?null:a===r&&c===o?i:(o=c,i=e(r=a,l))}}(t,r,hr(this,"style."+t,e))).each(function(t,e){var n,r,o,i,a="style."+e,l="end."+a;return function(){var c=tr(this,t),u=c.on,s=null==c.value[a]?i||(i=jr(e)):void 0;u===n&&o===s||(r=(n=u).copy()).on(l,o=s),c.on=r}}(this._id,t)):this.styleTween(t,function(t,e,n){var r,o,i=n+"";return function(){var a=jt(this,t);return a===i?null:a===r?o:o=e(r=a,n)}}(t,r,e),n).on("end.style."+t,null)},styleTween:function(t,e,n){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==e)return this.tween(r,null);if("function"!=typeof e)throw new Error;return this.tween(r,Dr(t,e,null==n?"":n))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var e=t(this);this.textContent=null==e?"":e}}(hr(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},textTween:function(t){var e="text";if(arguments.length<1)return(e=this.tween(e))&&e._value;if(null==t)return this.tween(e,null);if("function"!=typeof t)throw new Error;return this.tween(e,Ir(t))},remove:function(){return this.on("end.remove",(t=this._id,function(){var e=this.parentNode;for(var n in this.__transition)if(+n!==t)return;e&&e.removeChild(this)}));var t},tween:function(t,e){var n=this._id;if(t+="",arguments.length<2){for(var r,o=er(this.node(),n).tween,i=0,a=o.length;i<a;++i)if((r=o[i]).name===t)return r.value;return null}return this.each((null==e?pr:mr)(n,t,e))},delay:function(t){var e=this._id;return arguments.length?this.each(("function"==typeof t?Tr:Cr)(e,t)):er(this.node(),e).delay},duration:function(t){var e=this._id;return arguments.length?this.each(("function"==typeof t?Nr:Pr)(e,t)):er(this.node(),e).duration},ease:function(t){var e=this._id;return arguments.length?this.each(Ar(e,t)):er(this.node(),e).ease},end:function(){var t,e,n=this,r=n._id,o=n.size();return new Promise((function(i,a){var l={value:a},c={value:function(){0==--o&&i()}};n.each((function(){var n=tr(this,r),o=n.on;o!==t&&((e=(t=o).copy())._.cancel.push(l),e._.interrupt.push(l),e._.end.push(c)),n.on=e}))}))}};var Yr={time:null,delay:0,duration:250,ease:Vr};function Gr(t,e){for(var n;!(n=t.__transition)||!(n=n[e]);)if(!(t=t.parentNode))return Yr.time=Bn(),Yr;return n}we.prototype.interrupt=function(t){return this.each((function(){ar(this,t)}))},we.prototype.transition=function(t){var e,n;t instanceof Fr?(e=t._id,t=t._name):(e=qr(),(n=Yr).time=Bn(),t=null==t?null:t+"");for(var r=this._groups,o=r.length,i=0;i<o;++i)for(var a,l=r[i],c=l.length,u=0;u<c;++u)(a=l[u])&&Jn(a,t,e,u,l,n||Gr(a,e));return new Fr(r,this._parents,t,e)};var Qr=[null],Xr=function(t,e){var n,r,o=t.__transition;if(o)for(r in e=null==e?null:e+"",o)if((n=o[r]).state>1&&n.name===e)return new Fr([[t]],Qr,e,+r);return null},Kr=function(t){return function(){return t}},Jr=function(t,e,n){this.target=t,this.type=e,this.selection=n};function Zr(){ce.stopImmediatePropagation()}var to=function(){ce.preventDefault(),ce.stopImmediatePropagation()},eo={name:"drag"},no={name:"space"},ro={name:"handle"},oo={name:"center"};function io(t){return[+t[0],+t[1]]}function ao(t){return[io(t[0]),io(t[1])]}function lo(t){return function(e){return An(e,ce.touches,t)}}var co={name:"x",handles:["w","e"].map(bo),input:function(t,e){return null==t?null:[[+t[0],e[0][1]],[+t[1],e[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},uo={name:"y",handles:["n","s"].map(bo),input:function(t,e){return null==t?null:[[e[0][0],+t[0]],[e[1][0],+t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},so={name:"xy",handles:["n","w","e","s","nw","ne","sw","se"].map(bo),input:function(t){return null==t?null:ao(t)},output:function(t){return t}},fo={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},po={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},mo={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},ho={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},go={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function bo(t){return{type:t}}function vo(){return!ce.ctrlKey&&!ce.button}function yo(){var t=this.ownerSVGElement||this;return t.hasAttribute("viewBox")?[[(t=t.viewBox.baseVal).x,t.y],[t.x+t.width,t.y+t.height]]:[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function xo(){return navigator.maxTouchPoints||"ontouchstart"in this}function wo(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function ko(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}function _o(t){var e=t.__brush;return e?e.dim.output(e.selection):null}function Eo(){return To(co)}function So(){return To(uo)}var Mo=function(){return To(so)};function To(t){var e,n=yo,r=vo,o=xo,i=!0,a=st("start","brush","end"),l=6;function c(e){var n=e.property("__brush",h).selectAll(".overlay").data([bo("overlay")]);n.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",fo.overlay).merge(n).each((function(){var t=wo(this).extent;ke(this).attr("x",t[0][0]).attr("y",t[0][1]).attr("width",t[1][0]-t[0][0]).attr("height",t[1][1]-t[0][1])})),e.selectAll(".selection").data([bo("selection")]).enter().append("rect").attr("class","selection").attr("cursor",fo.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var r=e.selectAll(".handle").data(t.handles,(function(t){return t.type}));r.exit().remove(),r.enter().append("rect").attr("class",(function(t){return"handle handle--"+t.type})).attr("cursor",(function(t){return fo[t.type]})),e.each(u).attr("fill","none").attr("pointer-events","all").on("mousedown.brush",d).filter(o).on("touchstart.brush",d).on("touchmove.brush",p).on("touchend.brush touchcancel.brush",m).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function u(){var t=ke(this),e=wo(this).selection;e?(t.selectAll(".selection").style("display",null).attr("x",e[0][0]).attr("y",e[0][1]).attr("width",e[1][0]-e[0][0]).attr("height",e[1][1]-e[0][1]),t.selectAll(".handle").style("display",null).attr("x",(function(t){return"e"===t.type[t.type.length-1]?e[1][0]-l/2:e[0][0]-l/2})).attr("y",(function(t){return"s"===t.type[0]?e[1][1]-l/2:e[0][1]-l/2})).attr("width",(function(t){return"n"===t.type||"s"===t.type?e[1][0]-e[0][0]+l:l})).attr("height",(function(t){return"e"===t.type||"w"===t.type?e[1][1]-e[0][1]+l:l}))):t.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function s(t,e,n){return!n&&t.__brush.emitter||new f(t,e)}function f(t,e){this.that=t,this.args=e,this.state=t.__brush,this.active=0}function d(){if((!e||ce.touches)&&r.apply(this,arguments)){var n,o,a,l,c,f,d,p,m,h,g,b=this,v=ce.target.__data__.type,y="selection"===(i&&ce.metaKey?v="overlay":v)?eo:i&&ce.altKey?oo:ro,x=t===uo?null:ho[v],w=t===co?null:go[v],k=wo(b),_=k.extent,E=k.selection,S=_[0][0],M=_[0][1],T=_[1][0],C=_[1][1],N=0,P=0,A=x&&w&&i&&ce.shiftKey,O=ce.touches?lo(ce.changedTouches[0].identifier):On,z=O(b),j=z,R=s(b,arguments,!0).beforestart();"overlay"===v?(E&&(m=!0),k.selection=E=[[n=t===uo?S:z[0],a=t===co?M:z[1]],[c=t===uo?T:n,d=t===co?C:a]]):(n=E[0][0],a=E[0][1],c=E[1][0],d=E[1][1]),o=n,l=a,f=c,p=d;var D=ke(b).attr("pointer-events","none"),L=D.selectAll(".overlay").attr("cursor",fo[v]);if(ce.touches)R.moved=U,R.ended=B;else{var I=ke(ce.view).on("mousemove.brush",U,!0).on("mouseup.brush",B,!0);i&&I.on("keydown.brush",q,!0).on("keyup.brush",H,!0),Se(ce.view)}Zr(),ar(b),u.call(b),R.start()}function U(){var t=O(b);!A||h||g||(Math.abs(t[0]-j[0])>Math.abs(t[1]-j[1])?g=!0:h=!0),j=t,m=!0,to(),F()}function F(){var t;switch(N=j[0]-z[0],P=j[1]-z[1],y){case no:case eo:x&&(N=Math.max(S-n,Math.min(T-c,N)),o=n+N,f=c+N),w&&(P=Math.max(M-a,Math.min(C-d,P)),l=a+P,p=d+P);break;case ro:x<0?(N=Math.max(S-n,Math.min(T-n,N)),o=n+N,f=c):x>0&&(N=Math.max(S-c,Math.min(T-c,N)),o=n,f=c+N),w<0?(P=Math.max(M-a,Math.min(C-a,P)),l=a+P,p=d):w>0&&(P=Math.max(M-d,Math.min(C-d,P)),l=a,p=d+P);break;case oo:x&&(o=Math.max(S,Math.min(T,n-N*x)),f=Math.max(S,Math.min(T,c+N*x))),w&&(l=Math.max(M,Math.min(C,a-P*w)),p=Math.max(M,Math.min(C,d+P*w)))}f<o&&(x*=-1,t=n,n=c,c=t,t=o,o=f,f=t,v in po&&L.attr("cursor",fo[v=po[v]])),p<l&&(w*=-1,t=a,a=d,d=t,t=l,l=p,p=t,v in mo&&L.attr("cursor",fo[v=mo[v]])),k.selection&&(E=k.selection),h&&(o=E[0][0],f=E[1][0]),g&&(l=E[0][1],p=E[1][1]),E[0][0]===o&&E[0][1]===l&&E[1][0]===f&&E[1][1]===p||(k.selection=[[o,l],[f,p]],u.call(b),R.brush())}function B(){if(Zr(),ce.touches){if(ce.touches.length)return;e&&clearTimeout(e),e=setTimeout((function(){e=null}),500)}else Me(ce.view,m),I.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);D.attr("pointer-events","all"),L.attr("cursor",fo.overlay),k.selection&&(E=k.selection),ko(E)&&(k.selection=null,u.call(b)),R.end()}function q(){switch(ce.keyCode){case 16:A=x&&w;break;case 18:y===ro&&(x&&(c=f-N*x,n=o+N*x),w&&(d=p-P*w,a=l+P*w),y=oo,F());break;case 32:y!==ro&&y!==oo||(x<0?c=f-N:x>0&&(n=o-N),w<0?d=p-P:w>0&&(a=l-P),y=no,L.attr("cursor",fo.selection),F());break;default:return}to()}function H(){switch(ce.keyCode){case 16:A&&(h=g=A=!1,F());break;case 18:y===oo&&(x<0?c=f:x>0&&(n=o),w<0?d=p:w>0&&(a=l),y=ro,F());break;case 32:y===no&&(ce.altKey?(x&&(c=f-N*x,n=o+N*x),w&&(d=p-P*w,a=l+P*w),y=oo):(x<0?c=f:x>0&&(n=o),w<0?d=p:w>0&&(a=l),y=ro),L.attr("cursor",fo[v]),F());break;default:return}to()}}function p(){s(this,arguments).moved()}function m(){s(this,arguments).ended()}function h(){var e=this.__brush||{selection:null};return e.extent=ao(n.apply(this,arguments)),e.dim=t,e}return c.move=function(e,n){e.selection?e.on("start.brush",(function(){s(this,arguments).beforestart().start()})).on("interrupt.brush end.brush",(function(){s(this,arguments).end()})).tween("brush",(function(){var e=this,r=e.__brush,o=s(e,arguments),i=r.selection,a=t.input("function"==typeof n?n.apply(this,arguments):n,r.extent),l=Cn(i,a);function c(t){r.selection=1===t&&null===a?null:l(t),u.call(e),o.brush()}return null!==i&&null!==a?c:c(1)})):e.each((function(){var e=this,r=arguments,o=e.__brush,i=t.input("function"==typeof n?n.apply(e,r):n,o.extent),a=s(e,r).beforestart();ar(e),o.selection=null===i?null:i,u.call(e),a.start().brush().end()}))},c.clear=function(t){c.move(t,null)},f.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting?(this.starting=!1,this.emit("start")):this.emit("brush"),this},brush:function(){return this.emit("brush"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(e){me(new Jr(c,e,t.output(this.state.selection)),a.apply,a,[e,this.that,this.args])}},c.extent=function(t){return arguments.length?(n="function"==typeof t?t:Kr(ao(t)),c):n},c.filter=function(t){return arguments.length?(r="function"==typeof t?t:Kr(!!t),c):r},c.touchable=function(t){return arguments.length?(o="function"==typeof t?t:Kr(!!t),c):o},c.handleSize=function(t){return arguments.length?(l=+t,c):l},c.keyModifiers=function(t){return arguments.length?(i=!!t,c):i},c.on=function(){var t=a.on.apply(a,arguments);return t===a?c:t},c}var Co=Math.cos,No=Math.sin,Po=Math.PI,Ao=Po/2,Oo=2*Po,zo=Math.max;function jo(t){return function(e,n){return t(e.source.value+e.target.value,n.source.value+n.target.value)}}var Ro=function(){var t=0,e=null,n=null,r=null;function o(o){var i,a,l,c,u,s,f=o.length,d=[],p=k(f),m=[],h=[],g=h.groups=new Array(f),b=new Array(f*f);for(i=0,u=-1;++u<f;){for(a=0,s=-1;++s<f;)a+=o[u][s];d.push(a),m.push(k(f)),i+=a}for(e&&p.sort((function(t,n){return e(d[t],d[n])})),n&&m.forEach((function(t,e){t.sort((function(t,r){return n(o[e][t],o[e][r])}))})),c=(i=zo(0,Oo-t*f)/i)?t:Oo/f,a=0,u=-1;++u<f;){for(l=a,s=-1;++s<f;){var v=p[u],y=m[v][s],x=o[v][y],w=a,_=a+=x*i;b[y*f+v]={index:v,subindex:y,startAngle:w,endAngle:_,value:x}}g[v]={index:v,startAngle:l,endAngle:a,value:d[v]},a+=c}for(u=-1;++u<f;)for(s=u-1;++s<f;){var E=b[s*f+u],S=b[u*f+s];(E.value||S.value)&&h.push(E.value<S.value?{source:S,target:E}:{source:E,target:S})}return r?h.sort(r):h}return o.padAngle=function(e){return arguments.length?(t=zo(0,e),o):t},o.sortGroups=function(t){return arguments.length?(e=t,o):e},o.sortSubgroups=function(t){return arguments.length?(n=t,o):n},o.sortChords=function(t){return arguments.length?(null==t?r=null:(r=jo(t))._=t,o):r&&r._},o},Do=Array.prototype.slice,Lo=function(t){return function(){return t}},Io=Math.PI,Uo=2*Io,Fo=Uo-1e-6;function Bo(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function qo(){return new Bo}Bo.prototype=qo.prototype={constructor:Bo,moveTo:function(t,e){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+e)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,e){this._+="L"+(this._x1=+t)+","+(this._y1=+e)},quadraticCurveTo:function(t,e,n,r){this._+="Q"+ +t+","+ +e+","+(this._x1=+n)+","+(this._y1=+r)},bezierCurveTo:function(t,e,n,r,o,i){this._+="C"+ +t+","+ +e+","+ +n+","+ +r+","+(this._x1=+o)+","+(this._y1=+i)},arcTo:function(t,e,n,r,o){t=+t,e=+e,n=+n,r=+r,o=+o;var i=this._x1,a=this._y1,l=n-t,c=r-e,u=i-t,s=a-e,f=u*u+s*s;if(o<0)throw new Error("negative radius: "+o);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=e);else if(f>1e-6)if(Math.abs(s*l-c*u)>1e-6&&o){var d=n-i,p=r-a,m=l*l+c*c,h=d*d+p*p,g=Math.sqrt(m),b=Math.sqrt(f),v=o*Math.tan((Io-Math.acos((m+f-h)/(2*g*b)))/2),y=v/b,x=v/g;Math.abs(y-1)>1e-6&&(this._+="L"+(t+y*u)+","+(e+y*s)),this._+="A"+o+","+o+",0,0,"+ +(s*d>u*p)+","+(this._x1=t+x*l)+","+(this._y1=e+x*c)}else this._+="L"+(this._x1=t)+","+(this._y1=e);else;},arc:function(t,e,n,r,o,i){t=+t,e=+e,i=!!i;var a=(n=+n)*Math.cos(r),l=n*Math.sin(r),c=t+a,u=e+l,s=1^i,f=i?r-o:o-r;if(n<0)throw new Error("negative radius: "+n);null===this._x1?this._+="M"+c+","+u:(Math.abs(this._x1-c)>1e-6||Math.abs(this._y1-u)>1e-6)&&(this._+="L"+c+","+u),n&&(f<0&&(f=f%Uo+Uo),f>Fo?this._+="A"+n+","+n+",0,1,"+s+","+(t-a)+","+(e-l)+"A"+n+","+n+",0,1,"+s+","+(this._x1=c)+","+(this._y1=u):f>1e-6&&(this._+="A"+n+","+n+",0,"+ +(f>=Io)+","+s+","+(this._x1=t+n*Math.cos(o))+","+(this._y1=e+n*Math.sin(o))))},rect:function(t,e,n,r){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+e)+"h"+ +n+"v"+ +r+"h"+-n+"Z"},toString:function(){return this._}};var Ho=qo;function Wo(t){return t.source}function $o(t){return t.target}function Vo(t){return t.radius}function Yo(t){return t.startAngle}function Go(t){return t.endAngle}var Qo=function(){var t=Wo,e=$o,n=Vo,r=Yo,o=Go,i=null;function a(){var a,l=Do.call(arguments),c=t.apply(this,l),u=e.apply(this,l),s=+n.apply(this,(l[0]=c,l)),f=r.apply(this,l)-Ao,d=o.apply(this,l)-Ao,p=s*Co(f),m=s*No(f),h=+n.apply(this,(l[0]=u,l)),g=r.apply(this,l)-Ao,b=o.apply(this,l)-Ao;if(i||(i=a=Ho()),i.moveTo(p,m),i.arc(0,0,s,f,d),f===g&&d===b||(i.quadraticCurveTo(0,0,h*Co(g),h*No(g)),i.arc(0,0,h,g,b)),i.quadraticCurveTo(0,0,p,m),i.closePath(),a)return i=null,a+""||null}return a.radius=function(t){return arguments.length?(n="function"==typeof t?t:Lo(+t),a):n},a.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:Lo(+t),a):r},a.endAngle=function(t){return arguments.length?(o="function"==typeof t?t:Lo(+t),a):o},a.source=function(e){return arguments.length?(t=e,a):t},a.target=function(t){return arguments.length?(e=t,a):e},a.context=function(t){return arguments.length?(i=null==t?null:t,a):i},a};function Xo(){}function Ko(t,e){var n=new Xo;if(t instanceof Xo)t.each((function(t,e){n.set(e,t)}));else if(Array.isArray(t)){var r,o=-1,i=t.length;if(null==e)for(;++o<i;)n.set(o,t[o]);else for(;++o<i;)n.set(e(r=t[o],o,t),r)}else if(t)for(var a in t)n.set(a,t[a]);return n}Xo.prototype=Ko.prototype={constructor:Xo,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,e){return this["$"+t]=e,this},remove:function(t){var e="$"+t;return e in this&&delete this[e]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var e in this)"$"===e[0]&&t.push(e.slice(1));return t},values:function(){var t=[];for(var e in this)"$"===e[0]&&t.push(this[e]);return t},entries:function(){var t=[];for(var e in this)"$"===e[0]&&t.push({key:e.slice(1),value:this[e]});return t},size:function(){var t=0;for(var e in this)"$"===e[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var e in this)"$"===e[0]&&t(this[e],e.slice(1),this)}};var Jo=Ko,Zo=function(){var t,e,n,r=[],o=[];function i(n,o,a,l){if(o>=r.length)return null!=t&&n.sort(t),null!=e?e(n):n;for(var c,u,s,f=-1,d=n.length,p=r[o++],m=Jo(),h=a();++f<d;)(s=m.get(c=p(u=n[f])+""))?s.push(u):m.set(c,[u]);return m.each((function(t,e){l(h,e,i(t,o,a,l))})),h}return n={object:function(t){return i(t,0,ti,ei)},map:function(t){return i(t,0,ni,ri)},entries:function(t){return function t(n,i){if(++i>r.length)return n;var a,l=o[i-1];return null!=e&&i>=r.length?a=n.entries():(a=[],n.each((function(e,n){a.push({key:n,values:t(e,i)})}))),null!=l?a.sort((function(t,e){return l(t.key,e.key)})):a}(i(t,0,ni,ri),0)},key:function(t){return r.push(t),n},sortKeys:function(t){return o[r.length-1]=t,n},sortValues:function(e){return t=e,n},rollup:function(t){return e=t,n}}};function ti(){return{}}function ei(t,e,n){t[e]=n}function ni(){return Jo()}function ri(t,e,n){t.set(e,n)}function oi(){}var ii=Jo.prototype;function ai(t,e){var n=new oi;if(t instanceof oi)t.each((function(t){n.add(t)}));else if(t){var r=-1,o=t.length;if(null==e)for(;++r<o;)n.add(t[r]);else for(;++r<o;)n.add(e(t[r],r,t))}return n}oi.prototype=ai.prototype={constructor:oi,has:ii.has,add:function(t){return this["$"+(t+="")]=t,this},remove:ii.remove,clear:ii.clear,values:ii.keys,size:ii.size,empty:ii.empty,each:ii.each};var li=ai,ci=function(t){var e=[];for(var n in t)e.push(n);return e},ui=function(t){var e=[];for(var n in t)e.push(t[n]);return e},si=function(t){var e=[];for(var n in t)e.push({key:n,value:t[n]});return e},fi=Math.PI/180,di=180/Math.PI;function pi(t){if(t instanceof gi)return new gi(t.l,t.a,t.b,t.opacity);if(t instanceof Ei)return Si(t);t instanceof Ge||(t=Ve(t));var e,n,r=xi(t.r),o=xi(t.g),i=xi(t.b),a=bi((.2225045*r+.7168786*o+.0606169*i)/1);return r===o&&o===i?e=n=a:(e=bi((.4360747*r+.3850649*o+.1430804*i)/.96422),n=bi((.0139322*r+.0971045*o+.7141733*i)/.82521)),new gi(116*a-16,500*(e-a),200*(a-n),t.opacity)}function mi(t,e){return new gi(t,0,0,null==e?1:e)}function hi(t,e,n,r){return 1===arguments.length?pi(t):new gi(t,e,n,null==r?1:r)}function gi(t,e,n,r){this.l=+t,this.a=+e,this.b=+n,this.opacity=+r}function bi(t){return t>6/29*(6/29)*(6/29)?Math.pow(t,1/3):t/(6/29*3*(6/29))+4/29}function vi(t){return t>6/29?t*t*t:6/29*3*(6/29)*(t-4/29)}function yi(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function xi(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function wi(t){if(t instanceof Ei)return new Ei(t.h,t.c,t.l,t.opacity);if(t instanceof gi||(t=pi(t)),0===t.a&&0===t.b)return new Ei(NaN,0<t.l&&t.l<100?0:NaN,t.l,t.opacity);var e=Math.atan2(t.b,t.a)*di;return new Ei(e<0?e+360:e,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function ki(t,e,n,r){return 1===arguments.length?wi(t):new Ei(n,e,t,null==r?1:r)}function _i(t,e,n,r){return 1===arguments.length?wi(t):new Ei(t,e,n,null==r?1:r)}function Ei(t,e,n,r){this.h=+t,this.c=+e,this.l=+n,this.opacity=+r}function Si(t){if(isNaN(t.h))return new gi(t.l,0,0,t.opacity);var e=t.h*fi;return new gi(t.l,Math.cos(e)*t.c,Math.sin(e)*t.c,t.opacity)}Te(gi,hi,Ce(Ne,{brighter:function(t){return new gi(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new gi(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,e=isNaN(this.a)?t:t+this.a/500,n=isNaN(this.b)?t:t-this.b/200;return new Ge(yi(3.1338561*(e=.96422*vi(e))-1.6168667*(t=1*vi(t))-.4906146*(n=.82521*vi(n))),yi(-.9787684*e+1.9161415*t+.033454*n),yi(.0719453*e-.2289914*t+1.4052427*n),this.opacity)}})),Te(Ei,_i,Ce(Ne,{brighter:function(t){return new Ei(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new Ei(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return Si(this).rgb()}}));var Mi=-.29227,Ti=-1.7884503806,Ci=3.5172982438,Ni=-.6557636667999999;function Pi(t){if(t instanceof Oi)return new Oi(t.h,t.s,t.l,t.opacity);t instanceof Ge||(t=Ve(t));var e=t.r/255,n=t.g/255,r=t.b/255,o=(Ni*r+Ti*e-Ci*n)/(Ni+Ti-Ci),i=r-o,a=(1.97294*(n-o)-Mi*i)/-.90649,l=Math.sqrt(a*a+i*i)/(1.97294*o*(1-o)),c=l?Math.atan2(a,i)*di-120:NaN;return new Oi(c<0?c+360:c,l,o,t.opacity)}function Ai(t,e,n,r){return 1===arguments.length?Pi(t):new Oi(t,e,n,null==r?1:r)}function Oi(t,e,n,r){this.h=+t,this.s=+e,this.l=+n,this.opacity=+r}Te(Oi,Ai,Ce(Ne,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Oi(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Oi(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*fi,e=+this.l,n=isNaN(this.s)?0:this.s*e*(1-e),r=Math.cos(t),o=Math.sin(t);return new Ge(255*(e+n*(-.14861*r+1.78277*o)),255*(e+n*(Mi*r+-.90649*o)),255*(e+n*(1.97294*r)),this.opacity)}}));var zi=Array.prototype.slice,ji=function(t,e){return t-e},Ri=function(t){return function(){return t}},Di=function(t,e){for(var n,r=-1,o=e.length;++r<o;)if(n=Li(t,e[r]))return n;return 0};function Li(t,e){for(var n=e[0],r=e[1],o=-1,i=0,a=t.length,l=a-1;i<a;l=i++){var c=t[i],u=c[0],s=c[1],f=t[l],d=f[0],p=f[1];if(Ii(c,f,e))return 0;s>r!=p>r&&n<(d-u)*(r-s)/(p-s)+u&&(o=-o)}return o}function Ii(t,e,n){var r,o,i,a;return function(t,e,n){return(e[0]-t[0])*(n[1]-t[1])==(n[0]-t[0])*(e[1]-t[1])}(t,e,n)&&(o=t[r=+(t[0]===e[0])],i=n[r],a=e[r],o<=i&&i<=a||a<=i&&i<=o)}var Ui=function(){},Fi=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]],Bi=function(){var t=1,e=1,n=N,r=l;function o(t){var e=n(t);if(Array.isArray(e))e=e.slice().sort(ji);else{var r=g(t),o=r[0],a=r[1];e=C(o,a,e),e=k(Math.floor(o/e)*e,Math.floor(a/e)*e,e)}return e.map((function(e){return i(t,e)}))}function i(n,o){var i=[],l=[];return function(n,r,o){var i,l,c,u,s,f,d=new Array,p=new Array;i=l=-1,u=n[0]>=r,Fi[u<<1].forEach(m);for(;++i<t-1;)c=u,u=n[i+1]>=r,Fi[c|u<<1].forEach(m);Fi[u<<0].forEach(m);for(;++l<e-1;){for(i=-1,u=n[l*t+t]>=r,s=n[l*t]>=r,Fi[u<<1|s<<2].forEach(m);++i<t-1;)c=u,u=n[l*t+t+i+1]>=r,f=s,s=n[l*t+i+1]>=r,Fi[c|u<<1|s<<2|f<<3].forEach(m);Fi[u|s<<3].forEach(m)}i=-1,s=n[l*t]>=r,Fi[s<<2].forEach(m);for(;++i<t-1;)f=s,s=n[l*t+i+1]>=r,Fi[s<<2|f<<3].forEach(m);function m(t){var e,n,r=[t[0][0]+i,t[0][1]+l],c=[t[1][0]+i,t[1][1]+l],u=a(r),s=a(c);(e=p[u])?(n=d[s])?(delete p[e.end],delete d[n.start],e===n?(e.ring.push(c),o(e.ring)):d[e.start]=p[n.end]={start:e.start,end:n.end,ring:e.ring.concat(n.ring)}):(delete p[e.end],e.ring.push(c),p[e.end=s]=e):(e=d[s])?(n=p[u])?(delete d[e.start],delete p[n.end],e===n?(e.ring.push(c),o(e.ring)):d[n.start]=p[e.end]={start:n.start,end:e.end,ring:n.ring.concat(e.ring)}):(delete d[e.start],e.ring.unshift(r),d[e.start=u]=e):d[u]=p[s]={start:u,end:s,ring:[r,c]}}Fi[s<<3].forEach(m)}(n,o,(function(t){r(t,n,o),function(t){for(var e=0,n=t.length,r=t[n-1][1]*t[0][0]-t[n-1][0]*t[0][1];++e<n;)r+=t[e-1][1]*t[e][0]-t[e-1][0]*t[e][1];return r}(t)>0?i.push([t]):l.push(t)})),l.forEach((function(t){for(var e,n=0,r=i.length;n<r;++n)if(-1!==Di((e=i[n])[0],t))return void e.push(t)})),{type:"MultiPolygon",value:o,coordinates:i}}function a(e){return 2*e[0]+e[1]*(t+1)*4}function l(n,r,o){n.forEach((function(n){var i,a=n[0],l=n[1],c=0|a,u=0|l,s=r[u*t+c];a>0&&a<t&&c===a&&(i=r[u*t+c-1],n[0]=a+(o-i)/(s-i)-.5),l>0&&l<e&&u===l&&(i=r[(u-1)*t+c],n[1]=l+(o-i)/(s-i)-.5)}))}return o.contour=i,o.size=function(n){if(!arguments.length)return[t,e];var r=Math.ceil(n[0]),i=Math.ceil(n[1]);if(!(r>0&&i>0))throw new Error("invalid size");return t=r,e=i,o},o.thresholds=function(t){return arguments.length?(n="function"==typeof t?t:Array.isArray(t)?Ri(zi.call(t)):Ri(t),o):n},o.smooth=function(t){return arguments.length?(r=t?l:Ui,o):r===l},o};function qi(t,e,n){for(var r=t.width,o=t.height,i=1+(n<<1),a=0;a<o;++a)for(var l=0,c=0;l<r+n;++l)l<r&&(c+=t.data[l+a*r]),l>=n&&(l>=i&&(c-=t.data[l-i+a*r]),e.data[l-n+a*r]=c/Math.min(l+1,r-1+i-l,i))}function Hi(t,e,n){for(var r=t.width,o=t.height,i=1+(n<<1),a=0;a<r;++a)for(var l=0,c=0;l<o+n;++l)l<o&&(c+=t.data[a+l*r]),l>=n&&(l>=i&&(c-=t.data[a+(l-i)*r]),e.data[a+(l-n)*r]=c/Math.min(l+1,o-1+i-l,i))}function Wi(t){return t[0]}function $i(t){return t[1]}function Vi(){return 1}var Yi=function(){var t=Wi,e=$i,n=Vi,r=960,o=500,i=20,a=2,l=3*i,c=r+2*l>>a,u=o+2*l>>a,s=Ri(20);function f(r){var o=new Float32Array(c*u),f=new Float32Array(c*u);r.forEach((function(r,i,s){var f=+t(r,i,s)+l>>a,d=+e(r,i,s)+l>>a,p=+n(r,i,s);f>=0&&f<c&&d>=0&&d<u&&(o[f+d*c]+=p)})),qi({width:c,height:u,data:o},{width:c,height:u,data:f},i>>a),Hi({width:c,height:u,data:f},{width:c,height:u,data:o},i>>a),qi({width:c,height:u,data:o},{width:c,height:u,data:f},i>>a),Hi({width:c,height:u,data:f},{width:c,height:u,data:o},i>>a),qi({width:c,height:u,data:o},{width:c,height:u,data:f},i>>a),Hi({width:c,height:u,data:f},{width:c,height:u,data:o},i>>a);var p=s(o);if(!Array.isArray(p)){var m=j(o);p=C(0,m,p),(p=k(0,Math.floor(m/p)*p,p)).shift()}return Bi().thresholds(p).size([c,u])(o).map(d)}function d(t){return t.value*=Math.pow(2,-2*a),t.coordinates.forEach(p),t}function p(t){t.forEach(m)}function m(t){t.forEach(h)}function h(t){t[0]=t[0]*Math.pow(2,a)-l,t[1]=t[1]*Math.pow(2,a)-l}function g(){return c=r+2*(l=3*i)>>a,u=o+2*l>>a,f}return f.x=function(e){return arguments.length?(t="function"==typeof e?e:Ri(+e),f):t},f.y=function(t){return arguments.length?(e="function"==typeof t?t:Ri(+t),f):e},f.weight=function(t){return arguments.length?(n="function"==typeof t?t:Ri(+t),f):n},f.size=function(t){if(!arguments.length)return[r,o];var e=Math.ceil(t[0]),n=Math.ceil(t[1]);if(!(e>=0||e>=0))throw new Error("invalid size");return r=e,o=n,g()},f.cellSize=function(t){if(!arguments.length)return 1<<a;if(!((t=+t)>=1))throw new Error("invalid cell size");return a=Math.floor(Math.log(t)/Math.LN2),g()},f.thresholds=function(t){return arguments.length?(s="function"==typeof t?t:Array.isArray(t)?Ri(zi.call(t)):Ri(t),f):s},f.bandwidth=function(t){if(!arguments.length)return Math.sqrt(i*(i+1));if(!((t=+t)>=0))throw new Error("invalid bandwidth");return i=Math.round((Math.sqrt(4*t*t+1)-1)/2),g()},f},Gi=function(t){return function(){return t}};function Qi(t,e,n,r,o,i,a,l,c,u){this.target=t,this.type=e,this.subject=n,this.identifier=r,this.active=o,this.x=i,this.y=a,this.dx=l,this.dy=c,this._=u}function Xi(){return!ce.ctrlKey&&!ce.button}function Ki(){return this.parentNode}function Ji(t){return null==t?{x:ce.x,y:ce.y}:t}function Zi(){return navigator.maxTouchPoints||"ontouchstart"in this}Qi.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};var ta=function(){var t,e,n,r,o=Xi,i=Ki,a=Ji,l=Zi,c={},u=st("start","drag","end"),s=0,f=0;function d(t){t.on("mousedown.drag",p).filter(l).on("touchstart.drag",g).on("touchmove.drag",b).on("touchend.drag touchcancel.drag",v).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function p(){if(!r&&o.apply(this,arguments)){var a=y("mouse",i.apply(this,arguments),On,this,arguments);a&&(ke(ce.view).on("mousemove.drag",m,!0).on("mouseup.drag",h,!0),Se(ce.view),_e(),n=!1,t=ce.clientX,e=ce.clientY,a("start"))}}function m(){if(Ee(),!n){var r=ce.clientX-t,o=ce.clientY-e;n=r*r+o*o>f}c.mouse("drag")}function h(){ke(ce.view).on("mousemove.drag mouseup.drag",null),Me(ce.view,n),Ee(),c.mouse("end")}function g(){if(o.apply(this,arguments)){var t,e,n=ce.changedTouches,r=i.apply(this,arguments),a=n.length;for(t=0;t<a;++t)(e=y(n[t].identifier,r,An,this,arguments))&&(_e(),e("start"))}}function b(){var t,e,n=ce.changedTouches,r=n.length;for(t=0;t<r;++t)(e=c[n[t].identifier])&&(Ee(),e("drag"))}function v(){var t,e,n=ce.changedTouches,o=n.length;for(r&&clearTimeout(r),r=setTimeout((function(){r=null}),500),t=0;t<o;++t)(e=c[n[t].identifier])&&(_e(),e("end"))}function y(t,e,n,r,o){var i,l,f,p=n(e,t),m=u.copy();if(me(new Qi(d,"beforestart",i,t,s,p[0],p[1],0,0,m),(function(){return null!=(ce.subject=i=a.apply(r,o))&&(l=i.x-p[0]||0,f=i.y-p[1]||0,!0)})))return function a(u){var h,g=p;switch(u){case"start":c[t]=a,h=s++;break;case"end":delete c[t],--s;case"drag":p=n(e,t),h=s}me(new Qi(d,u,i,t,h,p[0]+l,p[1]+f,p[0]-g[0],p[1]-g[1],m),m.apply,m,[u,r,o])}}return d.filter=function(t){return arguments.length?(o="function"==typeof t?t:Gi(!!t),d):o},d.container=function(t){return arguments.length?(i="function"==typeof t?t:Gi(t),d):i},d.subject=function(t){return arguments.length?(a="function"==typeof t?t:Gi(t),d):a},d.touchable=function(t){return arguments.length?(l="function"==typeof t?t:Gi(!!t),d):l},d.on=function(){var t=u.on.apply(u,arguments);return t===u?d:t},d.clickDistance=function(t){return arguments.length?(f=(t=+t)*t,d):Math.sqrt(f)},d},ea={},na={};function ra(t){return new Function("d","return {"+t.map((function(t,e){return JSON.stringify(t)+": d["+e+'] || ""'})).join(",")+"}")}function oa(t){var e=Object.create(null),n=[];return t.forEach((function(t){for(var r in t)r in e||n.push(e[r]=r)})),n}function ia(t,e){var n=t+"",r=n.length;return r<e?new Array(e-r+1).join(0)+n:n}function aa(t){var e,n=t.getUTCHours(),r=t.getUTCMinutes(),o=t.getUTCSeconds(),i=t.getUTCMilliseconds();return isNaN(t)?"Invalid Date":((e=t.getUTCFullYear())<0?"-"+ia(-e,6):e>9999?"+"+ia(e,6):ia(e,4))+"-"+ia(t.getUTCMonth()+1,2)+"-"+ia(t.getUTCDate(),2)+(i?"T"+ia(n,2)+":"+ia(r,2)+":"+ia(o,2)+"."+ia(i,3)+"Z":o?"T"+ia(n,2)+":"+ia(r,2)+":"+ia(o,2)+"Z":r||n?"T"+ia(n,2)+":"+ia(r,2)+"Z":"")}var la=function(t){var e=new RegExp('["'+t+"\n\r]"),n=t.charCodeAt(0);function r(t,e){var r,o=[],i=t.length,a=0,l=0,c=i<=0,u=!1;function s(){if(c)return na;if(u)return u=!1,ea;var e,r,o=a;if(34===t.charCodeAt(o)){for(;a++<i&&34!==t.charCodeAt(a)||34===t.charCodeAt(++a););return(e=a)>=i?c=!0:10===(r=t.charCodeAt(a++))?u=!0:13===r&&(u=!0,10===t.charCodeAt(a)&&++a),t.slice(o+1,e-1).replace(/""/g,'"')}for(;a<i;){if(10===(r=t.charCodeAt(e=a++)))u=!0;else if(13===r)u=!0,10===t.charCodeAt(a)&&++a;else if(r!==n)continue;return t.slice(o,e)}return c=!0,t.slice(o,i)}for(10===t.charCodeAt(i-1)&&--i,13===t.charCodeAt(i-1)&&--i;(r=s())!==na;){for(var f=[];r!==ea&&r!==na;)f.push(r),r=s();e&&null==(f=e(f,l++))||o.push(f)}return o}function o(e,n){return e.map((function(e){return n.map((function(t){return a(e[t])})).join(t)}))}function i(e){return e.map(a).join(t)}function a(t){return null==t?"":t instanceof Date?aa(t):e.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,e){var n,o,i=r(t,(function(t,r){if(n)return n(t,r-1);o=t,n=e?function(t,e){var n=ra(t);return function(r,o){return e(n(r),o,t)}}(t,e):ra(t)}));return i.columns=o||[],i},parseRows:r,format:function(e,n){return null==n&&(n=oa(e)),[n.map(a).join(t)].concat(o(e,n)).join("\n")},formatBody:function(t,e){return null==e&&(e=oa(t)),o(t,e).join("\n")},formatRows:function(t){return t.map(i).join("\n")},formatRow:i,formatValue:a}},ca=la(","),ua=ca.parse,sa=ca.parseRows,fa=ca.format,da=ca.formatBody,pa=ca.formatRows,ma=ca.formatRow,ha=ca.formatValue,ga=la("\t"),ba=ga.parse,va=ga.parseRows,ya=ga.format,xa=ga.formatBody,wa=ga.formatRows,ka=ga.formatRow,_a=ga.formatValue;function Ea(t){for(var e in t){var n,r,o=t[e].trim();if(o)if("true"===o)o=!0;else if("false"===o)o=!1;else if("NaN"===o)o=NaN;else if(isNaN(n=+o)){if(!(r=o.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/)))continue;Sa&&r[4]&&!r[7]&&(o=o.replace(/-/g,"/").replace(/T/," ")),o=new Date(o)}else o=n;else o=null;t[e]=o}return t}var Sa=new Date("2019-01-01T00:00").getHours()||new Date("2019-07-01T00:00").getHours();function Ma(t){return+t}function Ta(t){return t*t}function Ca(t){return t*(2-t)}function Na(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}var Pa=function t(e){function n(t){return Math.pow(t,e)}return e=+e,n.exponent=t,n}(3),Aa=function t(e){function n(t){return 1-Math.pow(1-t,e)}return e=+e,n.exponent=t,n}(3),Oa=function t(e){function n(t){return((t*=2)<=1?Math.pow(t,e):2-Math.pow(2-t,e))/2}return e=+e,n.exponent=t,n}(3),za=Math.PI,ja=za/2;function Ra(t){return 1-Math.cos(t*ja)}function Da(t){return Math.sin(t*ja)}function La(t){return(1-Math.cos(za*t))/2}function Ia(t){return Math.pow(2,10*t-10)}function Ua(t){return 1-Math.pow(2,-10*t)}function Fa(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}function Ba(t){return 1-Math.sqrt(1-t*t)}function qa(t){return Math.sqrt(1- --t*t)}function Ha(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}function Wa(t){return 1-$a(1-t)}function $a(t){return(t=+t)<4/11?7.5625*t*t:t<8/11?7.5625*(t-=6/11)*t+.75:t<10/11?7.5625*(t-=9/11)*t+.9375:7.5625*(t-=21/22)*t+63/64}function Va(t){return((t*=2)<=1?1-$a(1-t):$a(t-1)+1)/2}var Ya=function t(e){function n(t){return t*t*((e+1)*t-e)}return e=+e,n.overshoot=t,n}(1.70158),Ga=function t(e){function n(t){return--t*t*((e+1)*t+e)+1}return e=+e,n.overshoot=t,n}(1.70158),Qa=function t(e){function n(t){return((t*=2)<1?t*t*((e+1)*t-e):(t-=2)*t*((e+1)*t+e)+2)/2}return e=+e,n.overshoot=t,n}(1.70158),Xa=2*Math.PI,Ka=function t(e,n){var r=Math.asin(1/(e=Math.max(1,e)))*(n/=Xa);function o(t){return e*Math.pow(2,10*--t)*Math.sin((r-t)/n)}return o.amplitude=function(e){return t(e,n*Xa)},o.period=function(n){return t(e,n)},o}(1,.3),Ja=function t(e,n){var r=Math.asin(1/(e=Math.max(1,e)))*(n/=Xa);function o(t){return 1-e*Math.pow(2,-10*(t=+t))*Math.sin((t+r)/n)}return o.amplitude=function(e){return t(e,n*Xa)},o.period=function(n){return t(e,n)},o}(1,.3),Za=function t(e,n){var r=Math.asin(1/(e=Math.max(1,e)))*(n/=Xa);function o(t){return((t=2*t-1)<0?e*Math.pow(2,10*t)*Math.sin((r-t)/n):2-e*Math.pow(2,-10*t)*Math.sin((r+t)/n))/2}return o.amplitude=function(e){return t(e,n*Xa)},o.period=function(n){return t(e,n)},o}(1,.3);function tl(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.blob()}var el=function(t,e){return fetch(t,e).then(tl)};function nl(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.arrayBuffer()}var rl=function(t,e){return fetch(t,e).then(nl)};function ol(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}var il=function(t,e){return fetch(t,e).then(ol)};function al(t){return function(e,n,r){return 2===arguments.length&&"function"==typeof n&&(r=n,n=void 0),il(e,n).then((function(e){return t(e,r)}))}}function ll(t,e,n,r){3===arguments.length&&"function"==typeof n&&(r=n,n=void 0);var o=la(t);return il(e,n).then((function(t){return o.parse(t,r)}))}var cl=al(ua),ul=al(ba),sl=function(t,e){return new Promise((function(n,r){var o=new Image;for(var i in e)o[i]=e[i];o.onerror=r,o.onload=function(){n(o)},o.src=t}))};function fl(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.json()}var dl=function(t,e){return fetch(t,e).then(fl)};function pl(t){return function(e,n){return il(e,n).then((function(e){return(new DOMParser).parseFromString(e,t)}))}}var ml=pl("application/xml"),hl=pl("text/html"),gl=pl("image/svg+xml"),bl=function(t,e){var n;function r(){var r,o,i=n.length,a=0,l=0;for(r=0;r<i;++r)a+=(o=n[r]).x,l+=o.y;for(a=a/i-t,l=l/i-e,r=0;r<i;++r)(o=n[r]).x-=a,o.y-=l}return null==t&&(t=0),null==e&&(e=0),r.initialize=function(t){n=t},r.x=function(e){return arguments.length?(t=+e,r):t},r.y=function(t){return arguments.length?(e=+t,r):e},r},vl=function(t){return function(){return t}},yl=function(){return 1e-6*(Math.random()-.5)};function xl(t,e,n,r){if(isNaN(e)||isNaN(n))return t;var o,i,a,l,c,u,s,f,d,p=t._root,m={data:r},h=t._x0,g=t._y0,b=t._x1,v=t._y1;if(!p)return t._root=m,t;for(;p.length;)if((u=e>=(i=(h+b)/2))?h=i:b=i,(s=n>=(a=(g+v)/2))?g=a:v=a,o=p,!(p=p[f=s<<1|u]))return o[f]=m,t;if(l=+t._x.call(null,p.data),c=+t._y.call(null,p.data),e===l&&n===c)return m.next=p,o?o[f]=m:t._root=m,t;do{o=o?o[f]=new Array(4):t._root=new Array(4),(u=e>=(i=(h+b)/2))?h=i:b=i,(s=n>=(a=(g+v)/2))?g=a:v=a}while((f=s<<1|u)==(d=(c>=a)<<1|l>=i));return o[d]=p,o[f]=m,t}var wl=function(t,e,n,r,o){this.node=t,this.x0=e,this.y0=n,this.x1=r,this.y1=o};function kl(t){return t[0]}function _l(t){return t[1]}function El(t,e,n){var r=new Sl(null==e?kl:e,null==n?_l:n,NaN,NaN,NaN,NaN);return null==t?r:r.addAll(t)}function Sl(t,e,n,r,o,i){this._x=t,this._y=e,this._x0=n,this._y0=r,this._x1=o,this._y1=i,this._root=void 0}function Ml(t){for(var e={data:t.data},n=e;t=t.next;)n=n.next={data:t.data};return e}var Tl=El.prototype=Sl.prototype;function Cl(t){return t.x+t.vx}function Nl(t){return t.y+t.vy}Tl.copy=function(){var t,e,n=new Sl(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return n;if(!r.length)return n._root=Ml(r),n;for(t=[{source:r,target:n._root=new Array(4)}];r=t.pop();)for(var o=0;o<4;++o)(e=r.source[o])&&(e.length?t.push({source:e,target:r.target[o]=new Array(4)}):r.target[o]=Ml(e));return n},Tl.add=function(t){var e=+this._x.call(null,t),n=+this._y.call(null,t);return xl(this.cover(e,n),e,n,t)},Tl.addAll=function(t){var e,n,r,o,i=t.length,a=new Array(i),l=new Array(i),c=1/0,u=1/0,s=-1/0,f=-1/0;for(n=0;n<i;++n)isNaN(r=+this._x.call(null,e=t[n]))||isNaN(o=+this._y.call(null,e))||(a[n]=r,l[n]=o,r<c&&(c=r),r>s&&(s=r),o<u&&(u=o),o>f&&(f=o));if(c>s||u>f)return this;for(this.cover(c,u).cover(s,f),n=0;n<i;++n)xl(this,a[n],l[n],t[n]);return this},Tl.cover=function(t,e){if(isNaN(t=+t)||isNaN(e=+e))return this;var n=this._x0,r=this._y0,o=this._x1,i=this._y1;if(isNaN(n))o=(n=Math.floor(t))+1,i=(r=Math.floor(e))+1;else{for(var a,l,c=o-n,u=this._root;n>t||t>=o||r>e||e>=i;)switch(l=(e<r)<<1|t<n,(a=new Array(4))[l]=u,u=a,c*=2,l){case 0:o=n+c,i=r+c;break;case 1:n=o-c,i=r+c;break;case 2:o=n+c,r=i-c;break;case 3:n=o-c,r=i-c}this._root&&this._root.length&&(this._root=u)}return this._x0=n,this._y0=r,this._x1=o,this._y1=i,this},Tl.data=function(){var t=[];return this.visit((function(e){if(!e.length)do{t.push(e.data)}while(e=e.next)})),t},Tl.extent=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},Tl.find=function(t,e,n){var r,o,i,a,l,c,u,s=this._x0,f=this._y0,d=this._x1,p=this._y1,m=[],h=this._root;for(h&&m.push(new wl(h,s,f,d,p)),null==n?n=1/0:(s=t-n,f=e-n,d=t+n,p=e+n,n*=n);c=m.pop();)if(!(!(h=c.node)||(o=c.x0)>d||(i=c.y0)>p||(a=c.x1)<s||(l=c.y1)<f))if(h.length){var g=(o+a)/2,b=(i+l)/2;m.push(new wl(h[3],g,b,a,l),new wl(h[2],o,b,g,l),new wl(h[1],g,i,a,b),new wl(h[0],o,i,g,b)),(u=(e>=b)<<1|t>=g)&&(c=m[m.length-1],m[m.length-1]=m[m.length-1-u],m[m.length-1-u]=c)}else{var v=t-+this._x.call(null,h.data),y=e-+this._y.call(null,h.data),x=v*v+y*y;if(x<n){var w=Math.sqrt(n=x);s=t-w,f=e-w,d=t+w,p=e+w,r=h.data}}return r},Tl.remove=function(t){if(isNaN(i=+this._x.call(null,t))||isNaN(a=+this._y.call(null,t)))return this;var e,n,r,o,i,a,l,c,u,s,f,d,p=this._root,m=this._x0,h=this._y0,g=this._x1,b=this._y1;if(!p)return this;if(p.length)for(;;){if((u=i>=(l=(m+g)/2))?m=l:g=l,(s=a>=(c=(h+b)/2))?h=c:b=c,e=p,!(p=p[f=s<<1|u]))return this;if(!p.length)break;(e[f+1&3]||e[f+2&3]||e[f+3&3])&&(n=e,d=f)}for(;p.data!==t;)if(r=p,!(p=p.next))return this;return(o=p.next)&&delete p.next,r?(o?r.next=o:delete r.next,this):e?(o?e[f]=o:delete e[f],(p=e[0]||e[1]||e[2]||e[3])&&p===(e[3]||e[2]||e[1]||e[0])&&!p.length&&(n?n[d]=p:this._root=p),this):(this._root=o,this)},Tl.removeAll=function(t){for(var e=0,n=t.length;e<n;++e)this.remove(t[e]);return this},Tl.root=function(){return this._root},Tl.size=function(){var t=0;return this.visit((function(e){if(!e.length)do{++t}while(e=e.next)})),t},Tl.visit=function(t){var e,n,r,o,i,a,l=[],c=this._root;for(c&&l.push(new wl(c,this._x0,this._y0,this._x1,this._y1));e=l.pop();)if(!t(c=e.node,r=e.x0,o=e.y0,i=e.x1,a=e.y1)&&c.length){var u=(r+i)/2,s=(o+a)/2;(n=c[3])&&l.push(new wl(n,u,s,i,a)),(n=c[2])&&l.push(new wl(n,r,s,u,a)),(n=c[1])&&l.push(new wl(n,u,o,i,s)),(n=c[0])&&l.push(new wl(n,r,o,u,s))}return this},Tl.visitAfter=function(t){var e,n=[],r=[];for(this._root&&n.push(new wl(this._root,this._x0,this._y0,this._x1,this._y1));e=n.pop();){var o=e.node;if(o.length){var i,a=e.x0,l=e.y0,c=e.x1,u=e.y1,s=(a+c)/2,f=(l+u)/2;(i=o[0])&&n.push(new wl(i,a,l,s,f)),(i=o[1])&&n.push(new wl(i,s,l,c,f)),(i=o[2])&&n.push(new wl(i,a,f,s,u)),(i=o[3])&&n.push(new wl(i,s,f,c,u))}r.push(e)}for(;e=r.pop();)t(e.node,e.x0,e.y0,e.x1,e.y1);return this},Tl.x=function(t){return arguments.length?(this._x=t,this):this._x},Tl.y=function(t){return arguments.length?(this._y=t,this):this._y};var Pl=function(t){var e,n,r=1,o=1;function i(){for(var t,i,l,c,u,s,f,d=e.length,p=0;p<o;++p)for(i=El(e,Cl,Nl).visitAfter(a),t=0;t<d;++t)l=e[t],s=n[l.index],f=s*s,c=l.x+l.vx,u=l.y+l.vy,i.visit(m);function m(t,e,n,o,i){var a=t.data,d=t.r,p=s+d;if(!a)return e>c+p||o<c-p||n>u+p||i<u-p;if(a.index>l.index){var m=c-a.x-a.vx,h=u-a.y-a.vy,g=m*m+h*h;g<p*p&&(0===m&&(g+=(m=yl())*m),0===h&&(g+=(h=yl())*h),g=(p-(g=Math.sqrt(g)))/g*r,l.vx+=(m*=g)*(p=(d*=d)/(f+d)),l.vy+=(h*=g)*p,a.vx-=m*(p=1-p),a.vy-=h*p)}}}function a(t){if(t.data)return t.r=n[t.data.index];for(var e=t.r=0;e<4;++e)t[e]&&t[e].r>t.r&&(t.r=t[e].r)}function l(){if(e){var r,o,i=e.length;for(n=new Array(i),r=0;r<i;++r)o=e[r],n[o.index]=+t(o,r,e)}}return"function"!=typeof t&&(t=vl(null==t?1:+t)),i.initialize=function(t){e=t,l()},i.iterations=function(t){return arguments.length?(o=+t,i):o},i.strength=function(t){return arguments.length?(r=+t,i):r},i.radius=function(e){return arguments.length?(t="function"==typeof e?e:vl(+e),l(),i):t},i};function Al(t){return t.index}function Ol(t,e){var n=t.get(e);if(!n)throw new Error("missing: "+e);return n}var zl=function(t){var e,n,r,o,i,a=Al,l=function(t){return 1/Math.min(o[t.source.index],o[t.target.index])},c=vl(30),u=1;function s(r){for(var o=0,a=t.length;o<u;++o)for(var l,c,s,f,d,p,m,h=0;h<a;++h)c=(l=t[h]).source,f=(s=l.target).x+s.vx-c.x-c.vx||yl(),d=s.y+s.vy-c.y-c.vy||yl(),f*=p=((p=Math.sqrt(f*f+d*d))-n[h])/p*r*e[h],d*=p,s.vx-=f*(m=i[h]),s.vy-=d*m,c.vx+=f*(m=1-m),c.vy+=d*m}function f(){if(r){var l,c,u=r.length,s=t.length,f=Jo(r,a);for(l=0,o=new Array(u);l<s;++l)(c=t[l]).index=l,"object"!=typeof c.source&&(c.source=Ol(f,c.source)),"object"!=typeof c.target&&(c.target=Ol(f,c.target)),o[c.source.index]=(o[c.source.index]||0)+1,o[c.target.index]=(o[c.target.index]||0)+1;for(l=0,i=new Array(s);l<s;++l)c=t[l],i[l]=o[c.source.index]/(o[c.source.index]+o[c.target.index]);e=new Array(s),d(),n=new Array(s),p()}}function d(){if(r)for(var n=0,o=t.length;n<o;++n)e[n]=+l(t[n],n,t)}function p(){if(r)for(var e=0,o=t.length;e<o;++e)n[e]=+c(t[e],e,t)}return null==t&&(t=[]),s.initialize=function(t){r=t,f()},s.links=function(e){return arguments.length?(t=e,f(),s):t},s.id=function(t){return arguments.length?(a=t,s):a},s.iterations=function(t){return arguments.length?(u=+t,s):u},s.strength=function(t){return arguments.length?(l="function"==typeof t?t:vl(+t),d(),s):l},s.distance=function(t){return arguments.length?(c="function"==typeof t?t:vl(+t),p(),s):c},s};function jl(t){return t.x}function Rl(t){return t.y}var Dl=Math.PI*(3-Math.sqrt(5)),Ll=function(t){var e,n=1,r=.001,o=1-Math.pow(r,1/300),i=0,a=.6,l=Jo(),c=Wn(s),u=st("tick","end");function s(){f(),u.call("tick",e),n<r&&(c.stop(),u.call("end",e))}function f(r){var c,u,s=t.length;void 0===r&&(r=1);for(var f=0;f<r;++f)for(n+=(i-n)*o,l.each((function(t){t(n)})),c=0;c<s;++c)null==(u=t[c]).fx?u.x+=u.vx*=a:(u.x=u.fx,u.vx=0),null==u.fy?u.y+=u.vy*=a:(u.y=u.fy,u.vy=0);return e}function d(){for(var e,n=0,r=t.length;n<r;++n){if((e=t[n]).index=n,null!=e.fx&&(e.x=e.fx),null!=e.fy&&(e.y=e.fy),isNaN(e.x)||isNaN(e.y)){var o=10*Math.sqrt(n),i=n*Dl;e.x=o*Math.cos(i),e.y=o*Math.sin(i)}(isNaN(e.vx)||isNaN(e.vy))&&(e.vx=e.vy=0)}}function p(e){return e.initialize&&e.initialize(t),e}return null==t&&(t=[]),d(),e={tick:f,restart:function(){return c.restart(s),e},stop:function(){return c.stop(),e},nodes:function(n){return arguments.length?(t=n,d(),l.each(p),e):t},alpha:function(t){return arguments.length?(n=+t,e):n},alphaMin:function(t){return arguments.length?(r=+t,e):r},alphaDecay:function(t){return arguments.length?(o=+t,e):+o},alphaTarget:function(t){return arguments.length?(i=+t,e):i},velocityDecay:function(t){return arguments.length?(a=1-t,e):1-a},force:function(t,n){return arguments.length>1?(null==n?l.remove(t):l.set(t,p(n)),e):l.get(t)},find:function(e,n,r){var o,i,a,l,c,u=0,s=t.length;for(null==r?r=1/0:r*=r,u=0;u<s;++u)(a=(o=e-(l=t[u]).x)*o+(i=n-l.y)*i)<r&&(c=l,r=a);return c},on:function(t,n){return arguments.length>1?(u.on(t,n),e):u.on(t)}}},Il=function(){var t,e,n,r,o=vl(-30),i=1,a=1/0,l=.81;function c(r){var o,i=t.length,a=El(t,jl,Rl).visitAfter(s);for(n=r,o=0;o<i;++o)e=t[o],a.visit(f)}function u(){if(t){var e,n,i=t.length;for(r=new Array(i),e=0;e<i;++e)n=t[e],r[n.index]=+o(n,e,t)}}function s(t){var e,n,o,i,a,l=0,c=0;if(t.length){for(o=i=a=0;a<4;++a)(e=t[a])&&(n=Math.abs(e.value))&&(l+=e.value,c+=n,o+=n*e.x,i+=n*e.y);t.x=o/c,t.y=i/c}else{(e=t).x=e.data.x,e.y=e.data.y;do{l+=r[e.data.index]}while(e=e.next)}t.value=l}function f(t,o,c,u){if(!t.value)return!0;var s=t.x-e.x,f=t.y-e.y,d=u-o,p=s*s+f*f;if(d*d/l<p)return p<a&&(0===s&&(p+=(s=yl())*s),0===f&&(p+=(f=yl())*f),p<i&&(p=Math.sqrt(i*p)),e.vx+=s*t.value*n/p,e.vy+=f*t.value*n/p),!0;if(!(t.length||p>=a)){(t.data!==e||t.next)&&(0===s&&(p+=(s=yl())*s),0===f&&(p+=(f=yl())*f),p<i&&(p=Math.sqrt(i*p)));do{t.data!==e&&(d=r[t.data.index]*n/p,e.vx+=s*d,e.vy+=f*d)}while(t=t.next)}}return c.initialize=function(e){t=e,u()},c.strength=function(t){return arguments.length?(o="function"==typeof t?t:vl(+t),u(),c):o},c.distanceMin=function(t){return arguments.length?(i=t*t,c):Math.sqrt(i)},c.distanceMax=function(t){return arguments.length?(a=t*t,c):Math.sqrt(a)},c.theta=function(t){return arguments.length?(l=t*t,c):Math.sqrt(l)},c},Ul=function(t,e,n){var r,o,i,a=vl(.1);function l(t){for(var a=0,l=r.length;a<l;++a){var c=r[a],u=c.x-e||1e-6,s=c.y-n||1e-6,f=Math.sqrt(u*u+s*s),d=(i[a]-f)*o[a]*t/f;c.vx+=u*d,c.vy+=s*d}}function c(){if(r){var e,n=r.length;for(o=new Array(n),i=new Array(n),e=0;e<n;++e)i[e]=+t(r[e],e,r),o[e]=isNaN(i[e])?0:+a(r[e],e,r)}}return"function"!=typeof t&&(t=vl(+t)),null==e&&(e=0),null==n&&(n=0),l.initialize=function(t){r=t,c()},l.strength=function(t){return arguments.length?(a="function"==typeof t?t:vl(+t),c(),l):a},l.radius=function(e){return arguments.length?(t="function"==typeof e?e:vl(+e),c(),l):t},l.x=function(t){return arguments.length?(e=+t,l):e},l.y=function(t){return arguments.length?(n=+t,l):n},l},Fl=function(t){var e,n,r,o=vl(.1);function i(t){for(var o,i=0,a=e.length;i<a;++i)(o=e[i]).vx+=(r[i]-o.x)*n[i]*t}function a(){if(e){var i,a=e.length;for(n=new Array(a),r=new Array(a),i=0;i<a;++i)n[i]=isNaN(r[i]=+t(e[i],i,e))?0:+o(e[i],i,e)}}return"function"!=typeof t&&(t=vl(null==t?0:+t)),i.initialize=function(t){e=t,a()},i.strength=function(t){return arguments.length?(o="function"==typeof t?t:vl(+t),a(),i):o},i.x=function(e){return arguments.length?(t="function"==typeof e?e:vl(+e),a(),i):t},i},Bl=function(t){var e,n,r,o=vl(.1);function i(t){for(var o,i=0,a=e.length;i<a;++i)(o=e[i]).vy+=(r[i]-o.y)*n[i]*t}function a(){if(e){var i,a=e.length;for(n=new Array(a),r=new Array(a),i=0;i<a;++i)n[i]=isNaN(r[i]=+t(e[i],i,e))?0:+o(e[i],i,e)}}return"function"!=typeof t&&(t=vl(null==t?0:+t)),i.initialize=function(t){e=t,a()},i.strength=function(t){return arguments.length?(o="function"==typeof t?t:vl(+t),a(),i):o},i.y=function(e){return arguments.length?(t="function"==typeof e?e:vl(+e),a(),i):t},i},ql=function(t,e){if((n=(t=e?t.toExponential(e-1):t.toExponential()).indexOf("e"))<0)return null;var n,r=t.slice(0,n);return[r.length>1?r[0]+r.slice(2):r,+t.slice(n+1)]},Hl=function(t){return(t=ql(Math.abs(t)))?t[1]:NaN},Wl=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function $l(t){if(!(e=Wl.exec(t)))throw new Error("invalid format: "+t);var e;return new Vl({fill:e[1],align:e[2],sign:e[3],symbol:e[4],zero:e[5],width:e[6],comma:e[7],precision:e[8]&&e[8].slice(1),trim:e[9],type:e[10]})}function Vl(t){this.fill=void 0===t.fill?" ":t.fill+"",this.align=void 0===t.align?">":t.align+"",this.sign=void 0===t.sign?"-":t.sign+"",this.symbol=void 0===t.symbol?"":t.symbol+"",this.zero=!!t.zero,this.width=void 0===t.width?void 0:+t.width,this.comma=!!t.comma,this.precision=void 0===t.precision?void 0:+t.precision,this.trim=!!t.trim,this.type=void 0===t.type?"":t.type+""}$l.prototype=Vl.prototype,Vl.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var Yl,Gl,Ql,Xl,Kl=function(t,e){var n=ql(t,e);if(!n)return t+"";var r=n[0],o=n[1];return o<0?"0."+new Array(-o).join("0")+r:r.length>o+1?r.slice(0,o+1)+"."+r.slice(o+1):r+new Array(o-r.length+2).join("0")},Jl={"%":function(t,e){return(100*t).toFixed(e)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,e){return t.toExponential(e)},f:function(t,e){return t.toFixed(e)},g:function(t,e){return t.toPrecision(e)},o:function(t){return Math.round(t).toString(8)},p:function(t,e){return Kl(100*t,e)},r:Kl,s:function(t,e){var n=ql(t,e);if(!n)return t+"";var r=n[0],o=n[1],i=o-(Yl=3*Math.max(-8,Math.min(8,Math.floor(o/3))))+1,a=r.length;return i===a?r:i>a?r+new Array(i-a+1).join("0"):i>0?r.slice(0,i)+"."+r.slice(i):"0."+new Array(1-i).join("0")+ql(t,Math.max(0,e+i-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},Zl=function(t){return t},tc=Array.prototype.map,ec=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"],nc=function(t){var e,n,r=void 0===t.grouping||void 0===t.thousands?Zl:(e=tc.call(t.grouping,Number),n=t.thousands+"",function(t,r){for(var o=t.length,i=[],a=0,l=e[0],c=0;o>0&&l>0&&(c+l+1>r&&(l=Math.max(1,r-c)),i.push(t.substring(o-=l,o+l)),!((c+=l+1)>r));)l=e[a=(a+1)%e.length];return i.reverse().join(n)}),o=void 0===t.currency?"":t.currency[0]+"",i=void 0===t.currency?"":t.currency[1]+"",a=void 0===t.decimal?".":t.decimal+"",l=void 0===t.numerals?Zl:function(t){return function(e){return e.replace(/[0-9]/g,(function(e){return t[+e]}))}}(tc.call(t.numerals,String)),c=void 0===t.percent?"%":t.percent+"",u=void 0===t.minus?"-":t.minus+"",s=void 0===t.nan?"NaN":t.nan+"";function f(t){var e=(t=$l(t)).fill,n=t.align,f=t.sign,d=t.symbol,p=t.zero,m=t.width,h=t.comma,g=t.precision,b=t.trim,v=t.type;"n"===v?(h=!0,v="g"):Jl[v]||(void 0===g&&(g=12),b=!0,v="g"),(p||"0"===e&&"="===n)&&(p=!0,e="0",n="=");var y="$"===d?o:"#"===d&&/[boxX]/.test(v)?"0"+v.toLowerCase():"",x="$"===d?i:/[%p]/.test(v)?c:"",w=Jl[v],k=/[defgprs%]/.test(v);function _(t){var o,i,c,d=y,_=x;if("c"===v)_=w(t)+_,t="";else{var E=(t=+t)<0;if(t=isNaN(t)?s:w(Math.abs(t),g),b&&(t=function(t){t:for(var e,n=t.length,r=1,o=-1;r<n;++r)switch(t[r]){case".":o=e=r;break;case"0":0===o&&(o=r),e=r;break;default:if(!+t[r])break t;o>0&&(o=0)}return o>0?t.slice(0,o)+t.slice(e+1):t}(t)),E&&0==+t&&(E=!1),d=(E?"("===f?f:u:"-"===f||"("===f?"":f)+d,_=("s"===v?ec[8+Yl/3]:"")+_+(E&&"("===f?")":""),k)for(o=-1,i=t.length;++o<i;)if(48>(c=t.charCodeAt(o))||c>57){_=(46===c?a+t.slice(o+1):t.slice(o))+_,t=t.slice(0,o);break}}h&&!p&&(t=r(t,1/0));var S=d.length+t.length+_.length,M=S<m?new Array(m-S+1).join(e):"";switch(h&&p&&(t=r(M+t,M.length?m-_.length:1/0),M=""),n){case"<":t=d+t+_+M;break;case"=":t=d+M+t+_;break;case"^":t=M.slice(0,S=M.length>>1)+d+t+_+M.slice(S);break;default:t=M+d+t+_}return l(t)}return g=void 0===g?6:/[gprs]/.test(v)?Math.max(1,Math.min(21,g)):Math.max(0,Math.min(20,g)),_.toString=function(){return t+""},_}return{format:f,formatPrefix:function(t,e){var n=f(((t=$l(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(Hl(e)/3))),o=Math.pow(10,-r),i=ec[8+r/3];return function(t){return n(o*t)+i}}}};function rc(t){return Gl=nc(t),Ql=Gl.format,Xl=Gl.formatPrefix,Gl}rc({decimal:".",thousands:",",grouping:[3],currency:["$",""],minus:"-"});var oc=function(t){return Math.max(0,-Hl(Math.abs(t)))},ic=function(t,e){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Hl(e)/3)))-Hl(Math.abs(t)))},ac=function(t,e){return t=Math.abs(t),e=Math.abs(e)-t,Math.max(0,Hl(e)-Hl(t))+1},lc=function(){return new cc};function cc(){this.reset()}cc.prototype={constructor:cc,reset:function(){this.s=this.t=0},add:function(t){sc(uc,t,this.t),sc(this,uc.s,this.s),this.s?this.t+=uc.t:this.s=uc.t},valueOf:function(){return this.s}};var uc=new cc;function sc(t,e,n){var r=t.s=e+n,o=r-e,i=r-o;t.t=e-i+(n-o)}var fc=Math.PI,dc=fc/2,pc=fc/4,mc=2*fc,hc=180/fc,gc=fc/180,bc=Math.abs,vc=Math.atan,yc=Math.atan2,xc=Math.cos,wc=Math.ceil,kc=Math.exp,_c=(Math.floor,Math.log),Ec=Math.pow,Sc=Math.sin,Mc=Math.sign||function(t){return t>0?1:t<0?-1:0},Tc=Math.sqrt,Cc=Math.tan;function Nc(t){return t>1?0:t<-1?fc:Math.acos(t)}function Pc(t){return t>1?dc:t<-1?-dc:Math.asin(t)}function Ac(t){return(t=Sc(t/2))*t}function Oc(){}function zc(t,e){t&&Rc.hasOwnProperty(t.type)&&Rc[t.type](t,e)}var jc={Feature:function(t,e){zc(t.geometry,e)},FeatureCollection:function(t,e){for(var n=t.features,r=-1,o=n.length;++r<o;)zc(n[r].geometry,e)}},Rc={Sphere:function(t,e){e.sphere()},Point:function(t,e){t=t.coordinates,e.point(t[0],t[1],t[2])},MultiPoint:function(t,e){for(var n=t.coordinates,r=-1,o=n.length;++r<o;)t=n[r],e.point(t[0],t[1],t[2])},LineString:function(t,e){Dc(t.coordinates,e,0)},MultiLineString:function(t,e){for(var n=t.coordinates,r=-1,o=n.length;++r<o;)Dc(n[r],e,0)},Polygon:function(t,e){Lc(t.coordinates,e)},MultiPolygon:function(t,e){for(var n=t.coordinates,r=-1,o=n.length;++r<o;)Lc(n[r],e)},GeometryCollection:function(t,e){for(var n=t.geometries,r=-1,o=n.length;++r<o;)zc(n[r],e)}};function Dc(t,e,n){var r,o=-1,i=t.length-n;for(e.lineStart();++o<i;)r=t[o],e.point(r[0],r[1],r[2]);e.lineEnd()}function Lc(t,e){var n=-1,r=t.length;for(e.polygonStart();++n<r;)Dc(t[n],e,1);e.polygonEnd()}var Ic,Uc,Fc,Bc,qc,Hc=function(t,e){t&&jc.hasOwnProperty(t.type)?jc[t.type](t,e):zc(t,e)},Wc=lc(),$c=lc(),Vc={point:Oc,lineStart:Oc,lineEnd:Oc,polygonStart:function(){Wc.reset(),Vc.lineStart=Yc,Vc.lineEnd=Gc},polygonEnd:function(){var t=+Wc;$c.add(t<0?mc+t:t),this.lineStart=this.lineEnd=this.point=Oc},sphere:function(){$c.add(mc)}};function Yc(){Vc.point=Qc}function Gc(){Xc(Ic,Uc)}function Qc(t,e){Vc.point=Xc,Ic=t,Uc=e,Fc=t*=gc,Bc=xc(e=(e*=gc)/2+pc),qc=Sc(e)}function Xc(t,e){var n=(t*=gc)-Fc,r=n>=0?1:-1,o=r*n,i=xc(e=(e*=gc)/2+pc),a=Sc(e),l=qc*a,c=Bc*i+l*xc(o),u=l*r*Sc(o);Wc.add(yc(u,c)),Fc=t,Bc=i,qc=a}var Kc=function(t){return $c.reset(),Hc(t,Vc),2*$c};function Jc(t){return[yc(t[1],t[0]),Pc(t[2])]}function Zc(t){var e=t[0],n=t[1],r=xc(n);return[r*xc(e),r*Sc(e),Sc(n)]}function tu(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}function eu(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}function nu(t,e){t[0]+=e[0],t[1]+=e[1],t[2]+=e[2]}function ru(t,e){return[t[0]*e,t[1]*e,t[2]*e]}function ou(t){var e=Tc(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=e,t[1]/=e,t[2]/=e}var iu,au,lu,cu,uu,su,fu,du,pu,mu,hu=lc(),gu={point:bu,lineStart:yu,lineEnd:xu,polygonStart:function(){gu.point=wu,gu.lineStart=ku,gu.lineEnd=_u,hu.reset(),Vc.polygonStart()},polygonEnd:function(){Vc.polygonEnd(),gu.point=bu,gu.lineStart=yu,gu.lineEnd=xu,Wc<0?(iu=-(lu=180),au=-(cu=90)):hu>1e-6?cu=90:hu<-1e-6&&(au=-90),mu[0]=iu,mu[1]=lu},sphere:function(){iu=-(lu=180),au=-(cu=90)}};function bu(t,e){pu.push(mu=[iu=t,lu=t]),e<au&&(au=e),e>cu&&(cu=e)}function vu(t,e){var n=Zc([t*gc,e*gc]);if(du){var r=eu(du,n),o=eu([r[1],-r[0],0],r);ou(o),o=Jc(o);var i,a=t-uu,l=a>0?1:-1,c=o[0]*hc*l,u=bc(a)>180;u^(l*uu<c&&c<l*t)?(i=o[1]*hc)>cu&&(cu=i):u^(l*uu<(c=(c+360)%360-180)&&c<l*t)?(i=-o[1]*hc)<au&&(au=i):(e<au&&(au=e),e>cu&&(cu=e)),u?t<uu?Eu(iu,t)>Eu(iu,lu)&&(lu=t):Eu(t,lu)>Eu(iu,lu)&&(iu=t):lu>=iu?(t<iu&&(iu=t),t>lu&&(lu=t)):t>uu?Eu(iu,t)>Eu(iu,lu)&&(lu=t):Eu(t,lu)>Eu(iu,lu)&&(iu=t)}else pu.push(mu=[iu=t,lu=t]);e<au&&(au=e),e>cu&&(cu=e),du=n,uu=t}function yu(){gu.point=vu}function xu(){mu[0]=iu,mu[1]=lu,gu.point=bu,du=null}function wu(t,e){if(du){var n=t-uu;hu.add(bc(n)>180?n+(n>0?360:-360):n)}else su=t,fu=e;Vc.point(t,e),vu(t,e)}function ku(){Vc.lineStart()}function _u(){wu(su,fu),Vc.lineEnd(),bc(hu)>1e-6&&(iu=-(lu=180)),mu[0]=iu,mu[1]=lu,du=null}function Eu(t,e){return(e-=t)<0?e+360:e}function Su(t,e){return t[0]-e[0]}function Mu(t,e){return t[0]<=t[1]?t[0]<=e&&e<=t[1]:e<t[0]||t[1]<e}var Tu,Cu,Nu,Pu,Au,Ou,zu,ju,Ru,Du,Lu,Iu,Uu,Fu,Bu,qu,Hu=function(t){var e,n,r,o,i,a,l;if(cu=lu=-(iu=au=1/0),pu=[],Hc(t,gu),n=pu.length){for(pu.sort(Su),e=1,i=[r=pu[0]];e<n;++e)Mu(r,(o=pu[e])[0])||Mu(r,o[1])?(Eu(r[0],o[1])>Eu(r[0],r[1])&&(r[1]=o[1]),Eu(o[0],r[1])>Eu(r[0],r[1])&&(r[0]=o[0])):i.push(r=o);for(a=-1/0,e=0,r=i[n=i.length-1];e<=n;r=o,++e)o=i[e],(l=Eu(r[1],o[0]))>a&&(a=l,iu=o[0],lu=r[1])}return pu=mu=null,iu===1/0||au===1/0?[[NaN,NaN],[NaN,NaN]]:[[iu,au],[lu,cu]]},Wu={sphere:Oc,point:$u,lineStart:Yu,lineEnd:Xu,polygonStart:function(){Wu.lineStart=Ku,Wu.lineEnd=Ju},polygonEnd:function(){Wu.lineStart=Yu,Wu.lineEnd=Xu}};function $u(t,e){t*=gc;var n=xc(e*=gc);Vu(n*xc(t),n*Sc(t),Sc(e))}function Vu(t,e,n){++Tu,Nu+=(t-Nu)/Tu,Pu+=(e-Pu)/Tu,Au+=(n-Au)/Tu}function Yu(){Wu.point=Gu}function Gu(t,e){t*=gc;var n=xc(e*=gc);Fu=n*xc(t),Bu=n*Sc(t),qu=Sc(e),Wu.point=Qu,Vu(Fu,Bu,qu)}function Qu(t,e){t*=gc;var n=xc(e*=gc),r=n*xc(t),o=n*Sc(t),i=Sc(e),a=yc(Tc((a=Bu*i-qu*o)*a+(a=qu*r-Fu*i)*a+(a=Fu*o-Bu*r)*a),Fu*r+Bu*o+qu*i);Cu+=a,Ou+=a*(Fu+(Fu=r)),zu+=a*(Bu+(Bu=o)),ju+=a*(qu+(qu=i)),Vu(Fu,Bu,qu)}function Xu(){Wu.point=$u}function Ku(){Wu.point=Zu}function Ju(){ts(Iu,Uu),Wu.point=$u}function Zu(t,e){Iu=t,Uu=e,t*=gc,e*=gc,Wu.point=ts;var n=xc(e);Fu=n*xc(t),Bu=n*Sc(t),qu=Sc(e),Vu(Fu,Bu,qu)}function ts(t,e){t*=gc;var n=xc(e*=gc),r=n*xc(t),o=n*Sc(t),i=Sc(e),a=Bu*i-qu*o,l=qu*r-Fu*i,c=Fu*o-Bu*r,u=Tc(a*a+l*l+c*c),s=Pc(u),f=u&&-s/u;Ru+=f*a,Du+=f*l,Lu+=f*c,Cu+=s,Ou+=s*(Fu+(Fu=r)),zu+=s*(Bu+(Bu=o)),ju+=s*(qu+(qu=i)),Vu(Fu,Bu,qu)}var es=function(t){Tu=Cu=Nu=Pu=Au=Ou=zu=ju=Ru=Du=Lu=0,Hc(t,Wu);var e=Ru,n=Du,r=Lu,o=e*e+n*n+r*r;return o<1e-12&&(e=Ou,n=zu,r=ju,Cu<1e-6&&(e=Nu,n=Pu,r=Au),(o=e*e+n*n+r*r)<1e-12)?[NaN,NaN]:[yc(n,e)*hc,Pc(r/Tc(o))*hc]},ns=function(t){return function(){return t}},rs=function(t,e){function n(n,r){return n=t(n,r),e(n[0],n[1])}return t.invert&&e.invert&&(n.invert=function(n,r){return(n=e.invert(n,r))&&t.invert(n[0],n[1])}),n};function os(t,e){return[bc(t)>fc?t+Math.round(-t/mc)*mc:t,e]}function is(t,e,n){return(t%=mc)?e||n?rs(ls(t),cs(e,n)):ls(t):e||n?cs(e,n):os}function as(t){return function(e,n){return[(e+=t)>fc?e-mc:e<-fc?e+mc:e,n]}}function ls(t){var e=as(t);return e.invert=as(-t),e}function cs(t,e){var n=xc(t),r=Sc(t),o=xc(e),i=Sc(e);function a(t,e){var a=xc(e),l=xc(t)*a,c=Sc(t)*a,u=Sc(e),s=u*n+l*r;return[yc(c*o-s*i,l*n-u*r),Pc(s*o+c*i)]}return a.invert=function(t,e){var a=xc(e),l=xc(t)*a,c=Sc(t)*a,u=Sc(e),s=u*o-c*i;return[yc(c*o+u*i,l*n+s*r),Pc(s*n-l*r)]},a}os.invert=os;var us=function(t){function e(e){return(e=t(e[0]*gc,e[1]*gc))[0]*=hc,e[1]*=hc,e}return t=is(t[0]*gc,t[1]*gc,t.length>2?t[2]*gc:0),e.invert=function(e){return(e=t.invert(e[0]*gc,e[1]*gc))[0]*=hc,e[1]*=hc,e},e};function ss(t,e,n,r,o,i){if(n){var a=xc(e),l=Sc(e),c=r*n;null==o?(o=e+r*mc,i=e-c/2):(o=fs(a,o),i=fs(a,i),(r>0?o<i:o>i)&&(o+=r*mc));for(var u,s=o;r>0?s>i:s<i;s-=c)u=Jc([a,-l*xc(s),-l*Sc(s)]),t.point(u[0],u[1])}}function fs(t,e){(e=Zc(e))[0]-=t,ou(e);var n=Nc(-e[1]);return((-e[2]<0?-n:n)+mc-1e-6)%mc}var ds=function(){var t,e,n=ns([0,0]),r=ns(90),o=ns(6),i={point:function(n,r){t.push(n=e(n,r)),n[0]*=hc,n[1]*=hc}};function a(){var a=n.apply(this,arguments),l=r.apply(this,arguments)*gc,c=o.apply(this,arguments)*gc;return t=[],e=is(-a[0]*gc,-a[1]*gc,0).invert,ss(i,l,c,1),a={type:"Polygon",coordinates:[t]},t=e=null,a}return a.center=function(t){return arguments.length?(n="function"==typeof t?t:ns([+t[0],+t[1]]),a):n},a.radius=function(t){return arguments.length?(r="function"==typeof t?t:ns(+t),a):r},a.precision=function(t){return arguments.length?(o="function"==typeof t?t:ns(+t),a):o},a},ps=function(){var t,e=[];return{point:function(e,n){t.push([e,n])},lineStart:function(){e.push(t=[])},lineEnd:Oc,rejoin:function(){e.length>1&&e.push(e.pop().concat(e.shift()))},result:function(){var n=e;return e=[],t=null,n}}},ms=function(t,e){return bc(t[0]-e[0])<1e-6&&bc(t[1]-e[1])<1e-6};function hs(t,e,n,r){this.x=t,this.z=e,this.o=n,this.e=r,this.v=!1,this.n=this.p=null}var gs=function(t,e,n,r,o){var i,a,l=[],c=[];if(t.forEach((function(t){if(!((e=t.length-1)<=0)){var e,n,r=t[0],a=t[e];if(ms(r,a)){for(o.lineStart(),i=0;i<e;++i)o.point((r=t[i])[0],r[1]);o.lineEnd()}else l.push(n=new hs(r,t,null,!0)),c.push(n.o=new hs(r,null,n,!1)),l.push(n=new hs(a,t,null,!1)),c.push(n.o=new hs(a,null,n,!0))}})),l.length){for(c.sort(e),bs(l),bs(c),i=0,a=c.length;i<a;++i)c[i].e=n=!n;for(var u,s,f=l[0];;){for(var d=f,p=!0;d.v;)if((d=d.n)===f)return;u=d.z,o.lineStart();do{if(d.v=d.o.v=!0,d.e){if(p)for(i=0,a=u.length;i<a;++i)o.point((s=u[i])[0],s[1]);else r(d.x,d.n.x,1,o);d=d.n}else{if(p)for(u=d.p.z,i=u.length-1;i>=0;--i)o.point((s=u[i])[0],s[1]);else r(d.x,d.p.x,-1,o);d=d.p}u=(d=d.o).z,p=!p}while(!d.v);o.lineEnd()}}};function bs(t){if(e=t.length){for(var e,n,r=0,o=t[0];++r<e;)o.n=n=t[r],n.p=o,o=n;o.n=n=t[0],n.p=o}}var vs=lc();function ys(t){return bc(t[0])<=fc?t[0]:Mc(t[0])*((bc(t[0])+fc)%mc-fc)}var xs=function(t,e){var n=ys(e),r=e[1],o=Sc(r),i=[Sc(n),-xc(n),0],a=0,l=0;vs.reset(),1===o?r=dc+1e-6:-1===o&&(r=-dc-1e-6);for(var c=0,u=t.length;c<u;++c)if(f=(s=t[c]).length)for(var s,f,d=s[f-1],p=ys(d),m=d[1]/2+pc,h=Sc(m),g=xc(m),b=0;b<f;++b,p=y,h=w,g=k,d=v){var v=s[b],y=ys(v),x=v[1]/2+pc,w=Sc(x),k=xc(x),_=y-p,E=_>=0?1:-1,S=E*_,M=S>fc,T=h*w;if(vs.add(yc(T*E*Sc(S),g*k+T*xc(S))),a+=M?_+E*mc:_,M^p>=n^y>=n){var C=eu(Zc(d),Zc(v));ou(C);var N=eu(i,C);ou(N);var P=(M^_>=0?-1:1)*Pc(N[2]);(r>P||r===P&&(C[0]||C[1]))&&(l+=M^_>=0?1:-1)}}return(a<-1e-6||a<1e-6&&vs<-1e-6)^1&l},ws=function(t,e,n,r){return function(o){var i,a,l,c=e(o),u=ps(),s=e(u),f=!1,d={point:p,lineStart:h,lineEnd:g,polygonStart:function(){d.point=b,d.lineStart=v,d.lineEnd=y,a=[],i=[]},polygonEnd:function(){d.point=p,d.lineStart=h,d.lineEnd=g,a=L(a);var t=xs(i,r);a.length?(f||(o.polygonStart(),f=!0),gs(a,_s,t,n,o)):t&&(f||(o.polygonStart(),f=!0),o.lineStart(),n(null,null,1,o),o.lineEnd()),f&&(o.polygonEnd(),f=!1),a=i=null},sphere:function(){o.polygonStart(),o.lineStart(),n(null,null,1,o),o.lineEnd(),o.polygonEnd()}};function p(e,n){t(e,n)&&o.point(e,n)}function m(t,e){c.point(t,e)}function h(){d.point=m,c.lineStart()}function g(){d.point=p,c.lineEnd()}function b(t,e){l.push([t,e]),s.point(t,e)}function v(){s.lineStart(),l=[]}function y(){b(l[0][0],l[0][1]),s.lineEnd();var t,e,n,r,c=s.clean(),d=u.result(),p=d.length;if(l.pop(),i.push(l),l=null,p)if(1&c){if((e=(n=d[0]).length-1)>0){for(f||(o.polygonStart(),f=!0),o.lineStart(),t=0;t<e;++t)o.point((r=n[t])[0],r[1]);o.lineEnd()}}else p>1&&2&c&&d.push(d.pop().concat(d.shift())),a.push(d.filter(ks))}return d}};function ks(t){return t.length>1}function _s(t,e){return((t=t.x)[0]<0?t[1]-dc-1e-6:dc-t[1])-((e=e.x)[0]<0?e[1]-dc-1e-6:dc-e[1])}var Es=ws((function(){return!0}),(function(t){var e,n=NaN,r=NaN,o=NaN;return{lineStart:function(){t.lineStart(),e=1},point:function(i,a){var l=i>0?fc:-fc,c=bc(i-n);bc(c-fc)<1e-6?(t.point(n,r=(r+a)/2>0?dc:-dc),t.point(o,r),t.lineEnd(),t.lineStart(),t.point(l,r),t.point(i,r),e=0):o!==l&&c>=fc&&(bc(n-o)<1e-6&&(n-=1e-6*o),bc(i-l)<1e-6&&(i-=1e-6*l),r=function(t,e,n,r){var o,i,a=Sc(t-n);return bc(a)>1e-6?vc((Sc(e)*(i=xc(r))*Sc(n)-Sc(r)*(o=xc(e))*Sc(t))/(o*i*a)):(e+r)/2}(n,r,i,a),t.point(o,r),t.lineEnd(),t.lineStart(),t.point(l,r),e=0),t.point(n=i,r=a),o=l},lineEnd:function(){t.lineEnd(),n=r=NaN},clean:function(){return 2-e}}}),(function(t,e,n,r){var o;if(null==t)o=n*dc,r.point(-fc,o),r.point(0,o),r.point(fc,o),r.point(fc,0),r.point(fc,-o),r.point(0,-o),r.point(-fc,-o),r.point(-fc,0),r.point(-fc,o);else if(bc(t[0]-e[0])>1e-6){var i=t[0]<e[0]?fc:-fc;o=n*i/2,r.point(-i,o),r.point(0,o),r.point(i,o)}else r.point(e[0],e[1])}),[-fc,-dc]);var Ss=function(t){var e=xc(t),n=6*gc,r=e>0,o=bc(e)>1e-6;function i(t,n){return xc(t)*xc(n)>e}function a(t,n,r){var o=[1,0,0],i=eu(Zc(t),Zc(n)),a=tu(i,i),l=i[0],c=a-l*l;if(!c)return!r&&t;var u=e*a/c,s=-e*l/c,f=eu(o,i),d=ru(o,u);nu(d,ru(i,s));var p=f,m=tu(d,p),h=tu(p,p),g=m*m-h*(tu(d,d)-1);if(!(g<0)){var b=Tc(g),v=ru(p,(-m-b)/h);if(nu(v,d),v=Jc(v),!r)return v;var y,x=t[0],w=n[0],k=t[1],_=n[1];w<x&&(y=x,x=w,w=y);var E=w-x,S=bc(E-fc)<1e-6;if(!S&&_<k&&(y=k,k=_,_=y),S||E<1e-6?S?k+_>0^v[1]<(bc(v[0]-x)<1e-6?k:_):k<=v[1]&&v[1]<=_:E>fc^(x<=v[0]&&v[0]<=w)){var M=ru(p,(-m+b)/h);return nu(M,d),[v,Jc(M)]}}}function l(e,n){var o=r?t:fc-t,i=0;return e<-o?i|=1:e>o&&(i|=2),n<-o?i|=4:n>o&&(i|=8),i}return ws(i,(function(t){var e,n,c,u,s;return{lineStart:function(){u=c=!1,s=1},point:function(f,d){var p,m=[f,d],h=i(f,d),g=r?h?0:l(f,d):h?l(f+(f<0?fc:-fc),d):0;if(!e&&(u=c=h)&&t.lineStart(),h!==c&&(!(p=a(e,m))||ms(e,p)||ms(m,p))&&(m[0]+=1e-6,m[1]+=1e-6,h=i(m[0],m[1])),h!==c)s=0,h?(t.lineStart(),p=a(m,e),t.point(p[0],p[1])):(p=a(e,m),t.point(p[0],p[1]),t.lineEnd()),e=p;else if(o&&e&&r^h){var b;g&n||!(b=a(m,e,!0))||(s=0,r?(t.lineStart(),t.point(b[0][0],b[0][1]),t.point(b[1][0],b[1][1]),t.lineEnd()):(t.point(b[1][0],b[1][1]),t.lineEnd(),t.lineStart(),t.point(b[0][0],b[0][1])))}!h||e&&ms(e,m)||t.point(m[0],m[1]),e=m,c=h,n=g},lineEnd:function(){c&&t.lineEnd(),e=null},clean:function(){return s|(u&&c)<<1}}}),(function(e,r,o,i){ss(i,t,n,o,e,r)}),r?[0,-t]:[-fc,t-fc])};function Ms(t,e,n,r){function o(o,i){return t<=o&&o<=n&&e<=i&&i<=r}function i(o,i,l,u){var s=0,f=0;if(null==o||(s=a(o,l))!==(f=a(i,l))||c(o,i)<0^l>0)do{u.point(0===s||3===s?t:n,s>1?r:e)}while((s=(s+l+4)%4)!==f);else u.point(i[0],i[1])}function a(r,o){return bc(r[0]-t)<1e-6?o>0?0:3:bc(r[0]-n)<1e-6?o>0?2:1:bc(r[1]-e)<1e-6?o>0?1:0:o>0?3:2}function l(t,e){return c(t.x,e.x)}function c(t,e){var n=a(t,1),r=a(e,1);return n!==r?n-r:0===n?e[1]-t[1]:1===n?t[0]-e[0]:2===n?t[1]-e[1]:e[0]-t[0]}return function(a){var c,u,s,f,d,p,m,h,g,b,v,y=a,x=ps(),w={point:k,lineStart:function(){w.point=_,u&&u.push(s=[]);b=!0,g=!1,m=h=NaN},lineEnd:function(){c&&(_(f,d),p&&g&&x.rejoin(),c.push(x.result()));w.point=k,g&&y.lineEnd()},polygonStart:function(){y=x,c=[],u=[],v=!0},polygonEnd:function(){var e=function(){for(var e=0,n=0,o=u.length;n<o;++n)for(var i,a,l=u[n],c=1,s=l.length,f=l[0],d=f[0],p=f[1];c<s;++c)i=d,a=p,f=l[c],d=f[0],p=f[1],a<=r?p>r&&(d-i)*(r-a)>(p-a)*(t-i)&&++e:p<=r&&(d-i)*(r-a)<(p-a)*(t-i)&&--e;return e}(),n=v&&e,o=(c=L(c)).length;(n||o)&&(a.polygonStart(),n&&(a.lineStart(),i(null,null,1,a),a.lineEnd()),o&&gs(c,l,e,i,a),a.polygonEnd());y=a,c=u=s=null}};function k(t,e){o(t,e)&&y.point(t,e)}function _(i,a){var l=o(i,a);if(u&&s.push([i,a]),b)f=i,d=a,p=l,b=!1,l&&(y.lineStart(),y.point(i,a));else if(l&&g)y.point(i,a);else{var c=[m=Math.max(-1e9,Math.min(1e9,m)),h=Math.max(-1e9,Math.min(1e9,h))],x=[i=Math.max(-1e9,Math.min(1e9,i)),a=Math.max(-1e9,Math.min(1e9,a))];!function(t,e,n,r,o,i){var a,l=t[0],c=t[1],u=0,s=1,f=e[0]-l,d=e[1]-c;if(a=n-l,f||!(a>0)){if(a/=f,f<0){if(a<u)return;a<s&&(s=a)}else if(f>0){if(a>s)return;a>u&&(u=a)}if(a=o-l,f||!(a<0)){if(a/=f,f<0){if(a>s)return;a>u&&(u=a)}else if(f>0){if(a<u)return;a<s&&(s=a)}if(a=r-c,d||!(a>0)){if(a/=d,d<0){if(a<u)return;a<s&&(s=a)}else if(d>0){if(a>s)return;a>u&&(u=a)}if(a=i-c,d||!(a<0)){if(a/=d,d<0){if(a>s)return;a>u&&(u=a)}else if(d>0){if(a<u)return;a<s&&(s=a)}return u>0&&(t[0]=l+u*f,t[1]=c+u*d),s<1&&(e[0]=l+s*f,e[1]=c+s*d),!0}}}}}(c,x,t,e,n,r)?l&&(y.lineStart(),y.point(i,a),v=!1):(g||(y.lineStart(),y.point(c[0],c[1])),y.point(x[0],x[1]),l||y.lineEnd(),v=!1)}m=i,h=a,g=l}return w}}var Ts,Cs,Ns,Ps=function(){var t,e,n,r=0,o=0,i=960,a=500;return n={stream:function(n){return t&&e===n?t:t=Ms(r,o,i,a)(e=n)},extent:function(l){return arguments.length?(r=+l[0][0],o=+l[0][1],i=+l[1][0],a=+l[1][1],t=e=null,n):[[r,o],[i,a]]}}},As=lc(),Os={sphere:Oc,point:Oc,lineStart:function(){Os.point=js,Os.lineEnd=zs},lineEnd:Oc,polygonStart:Oc,polygonEnd:Oc};function zs(){Os.point=Os.lineEnd=Oc}function js(t,e){Ts=t*=gc,Cs=Sc(e*=gc),Ns=xc(e),Os.point=Rs}function Rs(t,e){t*=gc;var n=Sc(e*=gc),r=xc(e),o=bc(t-Ts),i=xc(o),a=r*Sc(o),l=Ns*n-Cs*r*i,c=Cs*n+Ns*r*i;As.add(yc(Tc(a*a+l*l),c)),Ts=t,Cs=n,Ns=r}var Ds=function(t){return As.reset(),Hc(t,Os),+As},Ls=[null,null],Is={type:"LineString",coordinates:Ls},Us=function(t,e){return Ls[0]=t,Ls[1]=e,Ds(Is)},Fs={Feature:function(t,e){return qs(t.geometry,e)},FeatureCollection:function(t,e){for(var n=t.features,r=-1,o=n.length;++r<o;)if(qs(n[r].geometry,e))return!0;return!1}},Bs={Sphere:function(){return!0},Point:function(t,e){return Hs(t.coordinates,e)},MultiPoint:function(t,e){for(var n=t.coordinates,r=-1,o=n.length;++r<o;)if(Hs(n[r],e))return!0;return!1},LineString:function(t,e){return Ws(t.coordinates,e)},MultiLineString:function(t,e){for(var n=t.coordinates,r=-1,o=n.length;++r<o;)if(Ws(n[r],e))return!0;return!1},Polygon:function(t,e){return $s(t.coordinates,e)},MultiPolygon:function(t,e){for(var n=t.coordinates,r=-1,o=n.length;++r<o;)if($s(n[r],e))return!0;return!1},GeometryCollection:function(t,e){for(var n=t.geometries,r=-1,o=n.length;++r<o;)if(qs(n[r],e))return!0;return!1}};function qs(t,e){return!(!t||!Bs.hasOwnProperty(t.type))&&Bs[t.type](t,e)}function Hs(t,e){return 0===Us(t,e)}function Ws(t,e){for(var n,r,o,i=0,a=t.length;i<a;i++){if(0===(r=Us(t[i],e)))return!0;if(i>0&&(o=Us(t[i],t[i-1]))>0&&n<=o&&r<=o&&(n+r-o)*(1-Math.pow((n-r)/o,2))<1e-12*o)return!0;n=r}return!1}function $s(t,e){return!!xs(t.map(Vs),Ys(e))}function Vs(t){return(t=t.map(Ys)).pop(),t}function Ys(t){return[t[0]*gc,t[1]*gc]}var Gs=function(t,e){return(t&&Fs.hasOwnProperty(t.type)?Fs[t.type]:qs)(t,e)};function Qs(t,e,n){var r=k(t,e-1e-6,n).concat(e);return function(t){return r.map((function(e){return[t,e]}))}}function Xs(t,e,n){var r=k(t,e-1e-6,n).concat(e);return function(t){return r.map((function(e){return[e,t]}))}}function Ks(){var t,e,n,r,o,i,a,l,c,u,s,f,d=10,p=d,m=90,h=360,g=2.5;function b(){return{type:"MultiLineString",coordinates:v()}}function v(){return k(wc(r/m)*m,n,m).map(s).concat(k(wc(l/h)*h,a,h).map(f)).concat(k(wc(e/d)*d,t,d).filter((function(t){return bc(t%m)>1e-6})).map(c)).concat(k(wc(i/p)*p,o,p).filter((function(t){return bc(t%h)>1e-6})).map(u))}return b.lines=function(){return v().map((function(t){return{type:"LineString",coordinates:t}}))},b.outline=function(){return{type:"Polygon",coordinates:[s(r).concat(f(a).slice(1),s(n).reverse().slice(1),f(l).reverse().slice(1))]}},b.extent=function(t){return arguments.length?b.extentMajor(t).extentMinor(t):b.extentMinor()},b.extentMajor=function(t){return arguments.length?(r=+t[0][0],n=+t[1][0],l=+t[0][1],a=+t[1][1],r>n&&(t=r,r=n,n=t),l>a&&(t=l,l=a,a=t),b.precision(g)):[[r,l],[n,a]]},b.extentMinor=function(n){return arguments.length?(e=+n[0][0],t=+n[1][0],i=+n[0][1],o=+n[1][1],e>t&&(n=e,e=t,t=n),i>o&&(n=i,i=o,o=n),b.precision(g)):[[e,i],[t,o]]},b.step=function(t){return arguments.length?b.stepMajor(t).stepMinor(t):b.stepMinor()},b.stepMajor=function(t){return arguments.length?(m=+t[0],h=+t[1],b):[m,h]},b.stepMinor=function(t){return arguments.length?(d=+t[0],p=+t[1],b):[d,p]},b.precision=function(d){return arguments.length?(g=+d,c=Qs(i,o,90),u=Xs(e,t,g),s=Qs(l,a,90),f=Xs(r,n,g),b):g},b.extentMajor([[-180,1e-6-90],[180,90-1e-6]]).extentMinor([[-180,-80-1e-6],[180,80+1e-6]])}function Js(){return Ks()()}var Zs,tf,ef,nf,rf=function(t,e){var n=t[0]*gc,r=t[1]*gc,o=e[0]*gc,i=e[1]*gc,a=xc(r),l=Sc(r),c=xc(i),u=Sc(i),s=a*xc(n),f=a*Sc(n),d=c*xc(o),p=c*Sc(o),m=2*Pc(Tc(Ac(i-r)+a*c*Ac(o-n))),h=Sc(m),g=m?function(t){var e=Sc(t*=m)/h,n=Sc(m-t)/h,r=n*s+e*d,o=n*f+e*p,i=n*l+e*u;return[yc(o,r)*hc,yc(i,Tc(r*r+o*o))*hc]}:function(){return[n*hc,r*hc]};return g.distance=m,g},of=function(t){return t},af=lc(),lf=lc(),cf={point:Oc,lineStart:Oc,lineEnd:Oc,polygonStart:function(){cf.lineStart=uf,cf.lineEnd=df},polygonEnd:function(){cf.lineStart=cf.lineEnd=cf.point=Oc,af.add(bc(lf)),lf.reset()},result:function(){var t=af/2;return af.reset(),t}};function uf(){cf.point=sf}function sf(t,e){cf.point=ff,Zs=ef=t,tf=nf=e}function ff(t,e){lf.add(nf*t-ef*e),ef=t,nf=e}function df(){ff(Zs,tf)}var pf=cf,mf=1/0,hf=mf,gf=-mf,bf=gf;var vf,yf,xf,wf,kf={point:function(t,e){t<mf&&(mf=t);t>gf&&(gf=t);e<hf&&(hf=e);e>bf&&(bf=e)},lineStart:Oc,lineEnd:Oc,polygonStart:Oc,polygonEnd:Oc,result:function(){var t=[[mf,hf],[gf,bf]];return gf=bf=-(hf=mf=1/0),t}},_f=0,Ef=0,Sf=0,Mf=0,Tf=0,Cf=0,Nf=0,Pf=0,Af=0,Of={point:zf,lineStart:jf,lineEnd:Lf,polygonStart:function(){Of.lineStart=If,Of.lineEnd=Uf},polygonEnd:function(){Of.point=zf,Of.lineStart=jf,Of.lineEnd=Lf},result:function(){var t=Af?[Nf/Af,Pf/Af]:Cf?[Mf/Cf,Tf/Cf]:Sf?[_f/Sf,Ef/Sf]:[NaN,NaN];return _f=Ef=Sf=Mf=Tf=Cf=Nf=Pf=Af=0,t}};function zf(t,e){_f+=t,Ef+=e,++Sf}function jf(){Of.point=Rf}function Rf(t,e){Of.point=Df,zf(xf=t,wf=e)}function Df(t,e){var n=t-xf,r=e-wf,o=Tc(n*n+r*r);Mf+=o*(xf+t)/2,Tf+=o*(wf+e)/2,Cf+=o,zf(xf=t,wf=e)}function Lf(){Of.point=zf}function If(){Of.point=Ff}function Uf(){Bf(vf,yf)}function Ff(t,e){Of.point=Bf,zf(vf=xf=t,yf=wf=e)}function Bf(t,e){var n=t-xf,r=e-wf,o=Tc(n*n+r*r);Mf+=o*(xf+t)/2,Tf+=o*(wf+e)/2,Cf+=o,Nf+=(o=wf*t-xf*e)*(xf+t),Pf+=o*(wf+e),Af+=3*o,zf(xf=t,wf=e)}var qf=Of;function Hf(t){this._context=t}Hf.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(t,e){switch(this._point){case 0:this._context.moveTo(t,e),this._point=1;break;case 1:this._context.lineTo(t,e);break;default:this._context.moveTo(t+this._radius,e),this._context.arc(t,e,this._radius,0,mc)}},result:Oc};var Wf,$f,Vf,Yf,Gf,Qf=lc(),Xf={point:Oc,lineStart:function(){Xf.point=Kf},lineEnd:function(){Wf&&Jf($f,Vf),Xf.point=Oc},polygonStart:function(){Wf=!0},polygonEnd:function(){Wf=null},result:function(){var t=+Qf;return Qf.reset(),t}};function Kf(t,e){Xf.point=Jf,$f=Yf=t,Vf=Gf=e}function Jf(t,e){Yf-=t,Gf-=e,Qf.add(Tc(Yf*Yf+Gf*Gf)),Yf=t,Gf=e}var Zf=Xf;function td(){this._string=[]}function ed(t){return"m0,"+t+"a"+t+","+t+" 0 1,1 0,"+-2*t+"a"+t+","+t+" 0 1,1 0,"+2*t+"z"}td.prototype={_radius:4.5,_circle:ed(4.5),pointRadius:function(t){return(t=+t)!==this._radius&&(this._radius=t,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(t,e){switch(this._point){case 0:this._string.push("M",t,",",e),this._point=1;break;case 1:this._string.push("L",t,",",e);break;default:null==this._circle&&(this._circle=ed(this._radius)),this._string.push("M",t,",",e,this._circle)}},result:function(){if(this._string.length){var t=this._string.join("");return this._string=[],t}return null}};var nd=function(t,e){var n,r,o=4.5;function i(t){return t&&("function"==typeof o&&r.pointRadius(+o.apply(this,arguments)),Hc(t,n(r))),r.result()}return i.area=function(t){return Hc(t,n(pf)),pf.result()},i.measure=function(t){return Hc(t,n(Zf)),Zf.result()},i.bounds=function(t){return Hc(t,n(kf)),kf.result()},i.centroid=function(t){return Hc(t,n(qf)),qf.result()},i.projection=function(e){return arguments.length?(n=null==e?(t=null,of):(t=e).stream,i):t},i.context=function(t){return arguments.length?(r=null==t?(e=null,new td):new Hf(e=t),"function"!=typeof o&&r.pointRadius(o),i):e},i.pointRadius=function(t){return arguments.length?(o="function"==typeof t?t:(r.pointRadius(+t),+t),i):o},i.projection(t).context(e)},rd=function(t){return{stream:od(t)}};function od(t){return function(e){var n=new id;for(var r in t)n[r]=t[r];return n.stream=e,n}}function id(){}function ad(t,e,n){var r=t.clipExtent&&t.clipExtent();return t.scale(150).translate([0,0]),null!=r&&t.clipExtent(null),Hc(n,t.stream(kf)),e(kf.result()),null!=r&&t.clipExtent(r),t}function ld(t,e,n){return ad(t,(function(n){var r=e[1][0]-e[0][0],o=e[1][1]-e[0][1],i=Math.min(r/(n[1][0]-n[0][0]),o/(n[1][1]-n[0][1])),a=+e[0][0]+(r-i*(n[1][0]+n[0][0]))/2,l=+e[0][1]+(o-i*(n[1][1]+n[0][1]))/2;t.scale(150*i).translate([a,l])}),n)}function cd(t,e,n){return ld(t,[[0,0],e],n)}function ud(t,e,n){return ad(t,(function(n){var r=+e,o=r/(n[1][0]-n[0][0]),i=(r-o*(n[1][0]+n[0][0]))/2,a=-o*n[0][1];t.scale(150*o).translate([i,a])}),n)}function sd(t,e,n){return ad(t,(function(n){var r=+e,o=r/(n[1][1]-n[0][1]),i=-o*n[0][0],a=(r-o*(n[1][1]+n[0][1]))/2;t.scale(150*o).translate([i,a])}),n)}id.prototype={constructor:id,point:function(t,e){this.stream.point(t,e)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var fd=xc(30*gc),dd=function(t,e){return+e?function(t,e){function n(r,o,i,a,l,c,u,s,f,d,p,m,h,g){var b=u-r,v=s-o,y=b*b+v*v;if(y>4*e&&h--){var x=a+d,w=l+p,k=c+m,_=Tc(x*x+w*w+k*k),E=Pc(k/=_),S=bc(bc(k)-1)<1e-6||bc(i-f)<1e-6?(i+f)/2:yc(w,x),M=t(S,E),T=M[0],C=M[1],N=T-r,P=C-o,A=v*N-b*P;(A*A/y>e||bc((b*N+v*P)/y-.5)>.3||a*d+l*p+c*m<fd)&&(n(r,o,i,a,l,c,T,C,S,x/=_,w/=_,k,h,g),g.point(T,C),n(T,C,S,x,w,k,u,s,f,d,p,m,h,g))}}return function(e){var r,o,i,a,l,c,u,s,f,d,p,m,h={point:g,lineStart:b,lineEnd:y,polygonStart:function(){e.polygonStart(),h.lineStart=x},polygonEnd:function(){e.polygonEnd(),h.lineStart=b}};function g(n,r){n=t(n,r),e.point(n[0],n[1])}function b(){s=NaN,h.point=v,e.lineStart()}function v(r,o){var i=Zc([r,o]),a=t(r,o);n(s,f,u,d,p,m,s=a[0],f=a[1],u=r,d=i[0],p=i[1],m=i[2],16,e),e.point(s,f)}function y(){h.point=g,e.lineEnd()}function x(){b(),h.point=w,h.lineEnd=k}function w(t,e){v(r=t,e),o=s,i=f,a=d,l=p,c=m,h.point=v}function k(){n(s,f,u,d,p,m,o,i,r,a,l,c,16,e),h.lineEnd=y,y()}return h}}(t,e):function(t){return od({point:function(e,n){e=t(e,n),this.stream.point(e[0],e[1])}})}(t)};var pd=od({point:function(t,e){this.stream.point(t*gc,e*gc)}});function md(t,e,n){function r(r,o){return[e+t*r,n-t*o]}return r.invert=function(r,o){return[(r-e)/t,(n-o)/t]},r}function hd(t,e,n,r){var o=xc(r),i=Sc(r),a=o*t,l=i*t,c=o/t,u=i/t,s=(i*n-o*e)/t,f=(i*e+o*n)/t;function d(t,r){return[a*t-l*r+e,n-l*t-a*r]}return d.invert=function(t,e){return[c*t-u*e+s,f-u*t-c*e]},d}function gd(t){return bd((function(){return t}))()}function bd(t){var e,n,r,o,i,a,l,c,u,s,f=150,d=480,p=250,m=0,h=0,g=0,b=0,v=0,y=0,x=null,w=Es,k=null,_=of,E=.5;function S(t){return c(t[0]*gc,t[1]*gc)}function M(t){return(t=c.invert(t[0],t[1]))&&[t[0]*hc,t[1]*hc]}function T(){var t=hd(f,0,0,y).apply(null,e(m,h)),r=(y?hd:md)(f,d-t[0],p-t[1],y);return n=is(g,b,v),l=rs(e,r),c=rs(n,l),a=dd(l,E),C()}function C(){return u=s=null,S}return S.stream=function(t){return u&&s===t?u:u=pd(function(t){return od({point:function(e,n){var r=t(e,n);return this.stream.point(r[0],r[1])}})}(n)(w(a(_(s=t)))))},S.preclip=function(t){return arguments.length?(w=t,x=void 0,C()):w},S.postclip=function(t){return arguments.length?(_=t,k=r=o=i=null,C()):_},S.clipAngle=function(t){return arguments.length?(w=+t?Ss(x=t*gc):(x=null,Es),C()):x*hc},S.clipExtent=function(t){return arguments.length?(_=null==t?(k=r=o=i=null,of):Ms(k=+t[0][0],r=+t[0][1],o=+t[1][0],i=+t[1][1]),C()):null==k?null:[[k,r],[o,i]]},S.scale=function(t){return arguments.length?(f=+t,T()):f},S.translate=function(t){return arguments.length?(d=+t[0],p=+t[1],T()):[d,p]},S.center=function(t){return arguments.length?(m=t[0]%360*gc,h=t[1]%360*gc,T()):[m*hc,h*hc]},S.rotate=function(t){return arguments.length?(g=t[0]%360*gc,b=t[1]%360*gc,v=t.length>2?t[2]%360*gc:0,T()):[g*hc,b*hc,v*hc]},S.angle=function(t){return arguments.length?(y=t%360*gc,T()):y*hc},S.precision=function(t){return arguments.length?(a=dd(l,E=t*t),C()):Tc(E)},S.fitExtent=function(t,e){return ld(S,t,e)},S.fitSize=function(t,e){return cd(S,t,e)},S.fitWidth=function(t,e){return ud(S,t,e)},S.fitHeight=function(t,e){return sd(S,t,e)},function(){return e=t.apply(this,arguments),S.invert=e.invert&&M,T()}}function vd(t){var e=0,n=fc/3,r=bd(t),o=r(e,n);return o.parallels=function(t){return arguments.length?r(e=t[0]*gc,n=t[1]*gc):[e*hc,n*hc]},o}function yd(t,e){var n=Sc(t),r=(n+Sc(e))/2;if(bc(r)<1e-6)return function(t){var e=xc(t);function n(t,n){return[t*e,Sc(n)/e]}return n.invert=function(t,n){return[t/e,Pc(n*e)]},n}(t);var o=1+n*(2*r-n),i=Tc(o)/r;function a(t,e){var n=Tc(o-2*r*Sc(e))/r;return[n*Sc(t*=r),i-n*xc(t)]}return a.invert=function(t,e){var n=i-e;return[yc(t,bc(n))/r*Mc(n),Pc((o-(t*t+n*n)*r*r)/(2*r))]},a}var xd=function(){return vd(yd).scale(155.424).center([0,33.6442])},wd=function(){return xd().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])};var kd=function(){var t,e,n,r,o,i,a=wd(),l=xd().rotate([154,0]).center([-2,58.5]).parallels([55,65]),c=xd().rotate([157,0]).center([-3,19.9]).parallels([8,18]),u={point:function(t,e){i=[t,e]}};function s(t){var e=t[0],a=t[1];return i=null,n.point(e,a),i||(r.point(e,a),i)||(o.point(e,a),i)}function f(){return t=e=null,s}return s.invert=function(t){var e=a.scale(),n=a.translate(),r=(t[0]-n[0])/e,o=(t[1]-n[1])/e;return(o>=.12&&o<.234&&r>=-.425&&r<-.214?l:o>=.166&&o<.234&&r>=-.214&&r<-.115?c:a).invert(t)},s.stream=function(n){return t&&e===n?t:(r=[a.stream(e=n),l.stream(n),c.stream(n)],o=r.length,t={point:function(t,e){for(var n=-1;++n<o;)r[n].point(t,e)},sphere:function(){for(var t=-1;++t<o;)r[t].sphere()},lineStart:function(){for(var t=-1;++t<o;)r[t].lineStart()},lineEnd:function(){for(var t=-1;++t<o;)r[t].lineEnd()},polygonStart:function(){for(var t=-1;++t<o;)r[t].polygonStart()},polygonEnd:function(){for(var t=-1;++t<o;)r[t].polygonEnd()}});var r,o},s.precision=function(t){return arguments.length?(a.precision(t),l.precision(t),c.precision(t),f()):a.precision()},s.scale=function(t){return arguments.length?(a.scale(t),l.scale(.35*t),c.scale(t),s.translate(a.translate())):a.scale()},s.translate=function(t){if(!arguments.length)return a.translate();var e=a.scale(),i=+t[0],s=+t[1];return n=a.translate(t).clipExtent([[i-.455*e,s-.238*e],[i+.455*e,s+.238*e]]).stream(u),r=l.translate([i-.307*e,s+.201*e]).clipExtent([[i-.425*e+1e-6,s+.12*e+1e-6],[i-.214*e-1e-6,s+.234*e-1e-6]]).stream(u),o=c.translate([i-.205*e,s+.212*e]).clipExtent([[i-.214*e+1e-6,s+.166*e+1e-6],[i-.115*e-1e-6,s+.234*e-1e-6]]).stream(u),f()},s.fitExtent=function(t,e){return ld(s,t,e)},s.fitSize=function(t,e){return cd(s,t,e)},s.fitWidth=function(t,e){return ud(s,t,e)},s.fitHeight=function(t,e){return sd(s,t,e)},s.scale(1070)};function _d(t){return function(e,n){var r=xc(e),o=xc(n),i=t(r*o);return[i*o*Sc(e),i*Sc(n)]}}function Ed(t){return function(e,n){var r=Tc(e*e+n*n),o=t(r),i=Sc(o),a=xc(o);return[yc(e*i,r*a),Pc(r&&n*i/r)]}}var Sd=_d((function(t){return Tc(2/(1+t))}));Sd.invert=Ed((function(t){return 2*Pc(t/2)}));var Md=function(){return gd(Sd).scale(124.75).clipAngle(179.999)},Td=_d((function(t){return(t=Nc(t))&&t/Sc(t)}));Td.invert=Ed((function(t){return t}));var Cd=function(){return gd(Td).scale(79.4188).clipAngle(179.999)};function Nd(t,e){return[t,_c(Cc((dc+e)/2))]}Nd.invert=function(t,e){return[t,2*vc(kc(e))-dc]};var Pd=function(){return Ad(Nd).scale(961/mc)};function Ad(t){var e,n,r,o=gd(t),i=o.center,a=o.scale,l=o.translate,c=o.clipExtent,u=null;function s(){var i=fc*a(),l=o(us(o.rotate()).invert([0,0]));return c(null==u?[[l[0]-i,l[1]-i],[l[0]+i,l[1]+i]]:t===Nd?[[Math.max(l[0]-i,u),e],[Math.min(l[0]+i,n),r]]:[[u,Math.max(l[1]-i,e)],[n,Math.min(l[1]+i,r)]])}return o.scale=function(t){return arguments.length?(a(t),s()):a()},o.translate=function(t){return arguments.length?(l(t),s()):l()},o.center=function(t){return arguments.length?(i(t),s()):i()},o.clipExtent=function(t){return arguments.length?(null==t?u=e=n=r=null:(u=+t[0][0],e=+t[0][1],n=+t[1][0],r=+t[1][1]),s()):null==u?null:[[u,e],[n,r]]},s()}function Od(t){return Cc((dc+t)/2)}function zd(t,e){var n=xc(t),r=t===e?Sc(t):_c(n/xc(e))/_c(Od(e)/Od(t)),o=n*Ec(Od(t),r)/r;if(!r)return Nd;function i(t,e){o>0?e<1e-6-dc&&(e=1e-6-dc):e>dc-1e-6&&(e=dc-1e-6);var n=o/Ec(Od(e),r);return[n*Sc(r*t),o-n*xc(r*t)]}return i.invert=function(t,e){var n=o-e,i=Mc(r)*Tc(t*t+n*n);return[yc(t,bc(n))/r*Mc(n),2*vc(Ec(o/i,1/r))-dc]},i}var jd=function(){return vd(zd).scale(109.5).parallels([30,30])};function Rd(t,e){return[t,e]}Rd.invert=Rd;var Dd=function(){return gd(Rd).scale(152.63)};function Ld(t,e){var n=xc(t),r=t===e?Sc(t):(n-xc(e))/(e-t),o=n/r+t;if(bc(r)<1e-6)return Rd;function i(t,e){var n=o-e,i=r*t;return[n*Sc(i),o-n*xc(i)]}return i.invert=function(t,e){var n=o-e;return[yc(t,bc(n))/r*Mc(n),o-Mc(r)*Tc(t*t+n*n)]},i}var Id=function(){return vd(Ld).scale(131.154).center([0,13.9389])},Ud=1.340264,Fd=-.081106,Bd=893e-6,qd=.003796,Hd=Tc(3)/2;function Wd(t,e){var n=Pc(Hd*Sc(e)),r=n*n,o=r*r*r;return[t*xc(n)/(Hd*(Ud+3*Fd*r+o*(7*Bd+9*qd*r))),n*(Ud+Fd*r+o*(Bd+qd*r))]}Wd.invert=function(t,e){for(var n,r=e,o=r*r,i=o*o*o,a=0;a<12&&(i=(o=(r-=n=(r*(Ud+Fd*o+i*(Bd+qd*o))-e)/(Ud+3*Fd*o+i*(7*Bd+9*qd*o)))*r)*o*o,!(bc(n)<1e-12));++a);return[Hd*t*(Ud+3*Fd*o+i*(7*Bd+9*qd*o))/xc(r),Pc(Sc(r)/Hd)]};var $d=function(){return gd(Wd).scale(177.158)};function Vd(t,e){var n=xc(e),r=xc(t)*n;return[n*Sc(t)/r,Sc(e)/r]}Vd.invert=Ed(vc);var Yd=function(){return gd(Vd).scale(144.049).clipAngle(60)};function Gd(t,e,n,r){return 1===t&&1===e&&0===n&&0===r?of:od({point:function(o,i){this.stream.point(o*t+n,i*e+r)}})}var Qd=function(){var t,e,n,r,o,i,a=1,l=0,c=0,u=1,s=1,f=of,d=null,p=of;function m(){return r=o=null,i}return i={stream:function(t){return r&&o===t?r:r=f(p(o=t))},postclip:function(r){return arguments.length?(p=r,d=t=e=n=null,m()):p},clipExtent:function(r){return arguments.length?(p=null==r?(d=t=e=n=null,of):Ms(d=+r[0][0],t=+r[0][1],e=+r[1][0],n=+r[1][1]),m()):null==d?null:[[d,t],[e,n]]},scale:function(t){return arguments.length?(f=Gd((a=+t)*u,a*s,l,c),m()):a},translate:function(t){return arguments.length?(f=Gd(a*u,a*s,l=+t[0],c=+t[1]),m()):[l,c]},reflectX:function(t){return arguments.length?(f=Gd(a*(u=t?-1:1),a*s,l,c),m()):u<0},reflectY:function(t){return arguments.length?(f=Gd(a*u,a*(s=t?-1:1),l,c),m()):s<0},fitExtent:function(t,e){return ld(i,t,e)},fitSize:function(t,e){return cd(i,t,e)},fitWidth:function(t,e){return ud(i,t,e)},fitHeight:function(t,e){return sd(i,t,e)}}};function Xd(t,e){var n=e*e,r=n*n;return[t*(.8707-.131979*n+r*(r*(.003971*n-.001529*r)-.013791)),e*(1.007226+n*(.015085+r*(.028874*n-.044475-.005916*r)))]}Xd.invert=function(t,e){var n,r=e,o=25;do{var i=r*r,a=i*i;r-=n=(r*(1.007226+i*(.015085+a*(.028874*i-.044475-.005916*a)))-e)/(1.007226+i*(.045255+a*(.259866*i-.311325-.005916*11*a)))}while(bc(n)>1e-6&&--o>0);return[t/(.8707+(i=r*r)*(i*(i*i*i*(.003971-.001529*i)-.013791)-.131979)),r]};var Kd=function(){return gd(Xd).scale(175.295)};function Jd(t,e){return[xc(e)*Sc(t),Sc(e)]}Jd.invert=Ed(Pc);var Zd=function(){return gd(Jd).scale(249.5).clipAngle(90+1e-6)};function tp(t,e){var n=xc(e),r=1+xc(t)*n;return[n*Sc(t)/r,Sc(e)/r]}tp.invert=Ed((function(t){return 2*vc(t)}));var ep=function(){return gd(tp).scale(250).clipAngle(142)};function np(t,e){return[_c(Cc((dc+e)/2)),-t]}np.invert=function(t,e){return[-e,2*vc(kc(t))-dc]};var rp=function(){var t=Ad(np),e=t.center,n=t.rotate;return t.center=function(t){return arguments.length?e([-t[1],t[0]]):[(t=e())[1],-t[0]]},t.rotate=function(t){return arguments.length?n([t[0],t[1],t.length>2?t[2]+90:90]):[(t=n())[0],t[1],t[2]-90]},n([0,0,90]).scale(159.155)};function op(t,e){return t.parent===e.parent?1:2}function ip(t,e){return t+e.x}function ap(t,e){return Math.max(t,e.y)}var lp=function(){var t=op,e=1,n=1,r=!1;function o(o){var i,a=0;o.eachAfter((function(e){var n=e.children;n?(e.x=function(t){return t.reduce(ip,0)/t.length}(n),e.y=function(t){return 1+t.reduce(ap,0)}(n)):(e.x=i?a+=t(e,i):0,e.y=0,i=e)}));var l=function(t){for(var e;e=t.children;)t=e[0];return t}(o),c=function(t){for(var e;e=t.children;)t=e[e.length-1];return t}(o),u=l.x-t(l,c)/2,s=c.x+t(c,l)/2;return o.eachAfter(r?function(t){t.x=(t.x-o.x)*e,t.y=(o.y-t.y)*n}:function(t){t.x=(t.x-u)/(s-u)*e,t.y=(1-(o.y?t.y/o.y:1))*n})}return o.separation=function(e){return arguments.length?(t=e,o):t},o.size=function(t){return arguments.length?(r=!1,e=+t[0],n=+t[1],o):r?null:[e,n]},o.nodeSize=function(t){return arguments.length?(r=!0,e=+t[0],n=+t[1],o):r?[e,n]:null},o};function cp(t){var e=0,n=t.children,r=n&&n.length;if(r)for(;--r>=0;)e+=n[r].value;else e=1;t.value=e}function up(t,e){var n,r,o,i,a,l=new pp(t),c=+t.value&&(l.value=t.value),u=[l];for(null==e&&(e=sp);n=u.pop();)if(c&&(n.value=+n.data.value),(o=e(n.data))&&(a=o.length))for(n.children=new Array(a),i=a-1;i>=0;--i)u.push(r=n.children[i]=new pp(o[i])),r.parent=n,r.depth=n.depth+1;return l.eachBefore(dp)}function sp(t){return t.children}function fp(t){t.data=t.data.data}function dp(t){var e=0;do{t.height=e}while((t=t.parent)&&t.height<++e)}function pp(t){this.data=t,this.depth=this.height=0,this.parent=null}pp.prototype=up.prototype={constructor:pp,count:function(){return this.eachAfter(cp)},each:function(t){var e,n,r,o,i=this,a=[i];do{for(e=a.reverse(),a=[];i=e.pop();)if(t(i),n=i.children)for(r=0,o=n.length;r<o;++r)a.push(n[r])}while(a.length);return this},eachAfter:function(t){for(var e,n,r,o=this,i=[o],a=[];o=i.pop();)if(a.push(o),e=o.children)for(n=0,r=e.length;n<r;++n)i.push(e[n]);for(;o=a.pop();)t(o);return this},eachBefore:function(t){for(var e,n,r=this,o=[r];r=o.pop();)if(t(r),e=r.children)for(n=e.length-1;n>=0;--n)o.push(e[n]);return this},sum:function(t){return this.eachAfter((function(e){for(var n=+t(e.data)||0,r=e.children,o=r&&r.length;--o>=0;)n+=r[o].value;e.value=n}))},sort:function(t){return this.eachBefore((function(e){e.children&&e.children.sort(t)}))},path:function(t){for(var e=this,n=function(t,e){if(t===e)return t;var n=t.ancestors(),r=e.ancestors(),o=null;t=n.pop(),e=r.pop();for(;t===e;)o=t,t=n.pop(),e=r.pop();return o}(e,t),r=[e];e!==n;)e=e.parent,r.push(e);for(var o=r.length;t!==n;)r.splice(o,0,t),t=t.parent;return r},ancestors:function(){for(var t=this,e=[t];t=t.parent;)e.push(t);return e},descendants:function(){var t=[];return this.each((function(e){t.push(e)})),t},leaves:function(){var t=[];return this.eachBefore((function(e){e.children||t.push(e)})),t},links:function(){var t=this,e=[];return t.each((function(n){n!==t&&e.push({source:n.parent,target:n})})),e},copy:function(){return up(this).eachBefore(fp)}};var mp=Array.prototype.slice;var hp=function(t){for(var e,n,r=0,o=(t=function(t){for(var e,n,r=t.length;r;)n=Math.random()*r--|0,e=t[r],t[r]=t[n],t[n]=e;return t}(mp.call(t))).length,i=[];r<o;)e=t[r],n&&vp(n,e)?++r:(n=xp(i=gp(i,e)),r=0);return n};function gp(t,e){var n,r;if(yp(e,t))return[e];for(n=0;n<t.length;++n)if(bp(e,t[n])&&yp(wp(t[n],e),t))return[t[n],e];for(n=0;n<t.length-1;++n)for(r=n+1;r<t.length;++r)if(bp(wp(t[n],t[r]),e)&&bp(wp(t[n],e),t[r])&&bp(wp(t[r],e),t[n])&&yp(kp(t[n],t[r],e),t))return[t[n],t[r],e];throw new Error}function bp(t,e){var n=t.r-e.r,r=e.x-t.x,o=e.y-t.y;return n<0||n*n<r*r+o*o}function vp(t,e){var n=t.r-e.r+1e-6,r=e.x-t.x,o=e.y-t.y;return n>0&&n*n>r*r+o*o}function yp(t,e){for(var n=0;n<e.length;++n)if(!vp(t,e[n]))return!1;return!0}function xp(t){switch(t.length){case 1:return{x:(e=t[0]).x,y:e.y,r:e.r};case 2:return wp(t[0],t[1]);case 3:return kp(t[0],t[1],t[2])}var e}function wp(t,e){var n=t.x,r=t.y,o=t.r,i=e.x,a=e.y,l=e.r,c=i-n,u=a-r,s=l-o,f=Math.sqrt(c*c+u*u);return{x:(n+i+c/f*s)/2,y:(r+a+u/f*s)/2,r:(f+o+l)/2}}function kp(t,e,n){var r=t.x,o=t.y,i=t.r,a=e.x,l=e.y,c=e.r,u=n.x,s=n.y,f=n.r,d=r-a,p=r-u,m=o-l,h=o-s,g=c-i,b=f-i,v=r*r+o*o-i*i,y=v-a*a-l*l+c*c,x=v-u*u-s*s+f*f,w=p*m-d*h,k=(m*x-h*y)/(2*w)-r,_=(h*g-m*b)/w,E=(p*y-d*x)/(2*w)-o,S=(d*b-p*g)/w,M=_*_+S*S-1,T=2*(i+k*_+E*S),C=k*k+E*E-i*i,N=-(M?(T+Math.sqrt(T*T-4*M*C))/(2*M):C/T);return{x:r+k+_*N,y:o+E+S*N,r:N}}function _p(t,e,n){var r,o,i,a,l=t.x-e.x,c=t.y-e.y,u=l*l+c*c;u?(o=e.r+n.r,o*=o,a=t.r+n.r,o>(a*=a)?(r=(u+a-o)/(2*u),i=Math.sqrt(Math.max(0,a/u-r*r)),n.x=t.x-r*l-i*c,n.y=t.y-r*c+i*l):(r=(u+o-a)/(2*u),i=Math.sqrt(Math.max(0,o/u-r*r)),n.x=e.x+r*l-i*c,n.y=e.y+r*c+i*l)):(n.x=e.x+n.r,n.y=e.y)}function Ep(t,e){var n=t.r+e.r-1e-6,r=e.x-t.x,o=e.y-t.y;return n>0&&n*n>r*r+o*o}function Sp(t){var e=t._,n=t.next._,r=e.r+n.r,o=(e.x*n.r+n.x*e.r)/r,i=(e.y*n.r+n.y*e.r)/r;return o*o+i*i}function Mp(t){this._=t,this.next=null,this.previous=null}function Tp(t){if(!(o=t.length))return 0;var e,n,r,o,i,a,l,c,u,s,f;if((e=t[0]).x=0,e.y=0,!(o>1))return e.r;if(n=t[1],e.x=-n.r,n.x=e.r,n.y=0,!(o>2))return e.r+n.r;_p(n,e,r=t[2]),e=new Mp(e),n=new Mp(n),r=new Mp(r),e.next=r.previous=n,n.next=e.previous=r,r.next=n.previous=e;t:for(l=3;l<o;++l){_p(e._,n._,r=t[l]),r=new Mp(r),c=n.next,u=e.previous,s=n._.r,f=e._.r;do{if(s<=f){if(Ep(c._,r._)){n=c,e.next=n,n.previous=e,--l;continue t}s+=c._.r,c=c.next}else{if(Ep(u._,r._)){(e=u).next=n,n.previous=e,--l;continue t}f+=u._.r,u=u.previous}}while(c!==u.next);for(r.previous=e,r.next=n,e.next=n.previous=n=r,i=Sp(e);(r=r.next)!==n;)(a=Sp(r))<i&&(e=r,i=a);n=e.next}for(e=[n._],r=n;(r=r.next)!==n;)e.push(r._);for(r=hp(e),l=0;l<o;++l)(e=t[l]).x-=r.x,e.y-=r.y;return r.r}var Cp=function(t){return Tp(t),t};function Np(t){return null==t?null:Pp(t)}function Pp(t){if("function"!=typeof t)throw new Error;return t}function Ap(){return 0}var Op=function(t){return function(){return t}};function zp(t){return Math.sqrt(t.value)}var jp=function(){var t=null,e=1,n=1,r=Ap;function o(o){return o.x=e/2,o.y=n/2,t?o.eachBefore(Rp(t)).eachAfter(Dp(r,.5)).eachBefore(Lp(1)):o.eachBefore(Rp(zp)).eachAfter(Dp(Ap,1)).eachAfter(Dp(r,o.r/Math.min(e,n))).eachBefore(Lp(Math.min(e,n)/(2*o.r))),o}return o.radius=function(e){return arguments.length?(t=Np(e),o):t},o.size=function(t){return arguments.length?(e=+t[0],n=+t[1],o):[e,n]},o.padding=function(t){return arguments.length?(r="function"==typeof t?t:Op(+t),o):r},o};function Rp(t){return function(e){e.children||(e.r=Math.max(0,+t(e)||0))}}function Dp(t,e){return function(n){if(r=n.children){var r,o,i,a=r.length,l=t(n)*e||0;if(l)for(o=0;o<a;++o)r[o].r+=l;if(i=Tp(r),l)for(o=0;o<a;++o)r[o].r-=l;n.r=i+l}}}function Lp(t){return function(e){var n=e.parent;e.r*=t,n&&(e.x=n.x+t*e.x,e.y=n.y+t*e.y)}}var Ip=function(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)},Up=function(t,e,n,r,o){for(var i,a=t.children,l=-1,c=a.length,u=t.value&&(r-e)/t.value;++l<c;)(i=a[l]).y0=n,i.y1=o,i.x0=e,i.x1=e+=i.value*u},Fp=function(){var t=1,e=1,n=0,r=!1;function o(o){var i=o.height+1;return o.x0=o.y0=n,o.x1=t,o.y1=e/i,o.eachBefore(function(t,e){return function(r){r.children&&Up(r,r.x0,t*(r.depth+1)/e,r.x1,t*(r.depth+2)/e);var o=r.x0,i=r.y0,a=r.x1-n,l=r.y1-n;a<o&&(o=a=(o+a)/2),l<i&&(i=l=(i+l)/2),r.x0=o,r.y0=i,r.x1=a,r.y1=l}}(e,i)),r&&o.eachBefore(Ip),o}return o.round=function(t){return arguments.length?(r=!!t,o):r},o.size=function(n){return arguments.length?(t=+n[0],e=+n[1],o):[t,e]},o.padding=function(t){return arguments.length?(n=+t,o):n},o},Bp={depth:-1},qp={};function Hp(t){return t.id}function Wp(t){return t.parentId}var $p=function(){var t=Hp,e=Wp;function n(n){var r,o,i,a,l,c,u,s=n.length,f=new Array(s),d={};for(o=0;o<s;++o)r=n[o],l=f[o]=new pp(r),null!=(c=t(r,o,n))&&(c+="")&&(d[u="$"+(l.id=c)]=u in d?qp:l);for(o=0;o<s;++o)if(l=f[o],null!=(c=e(n[o],o,n))&&(c+="")){if(!(a=d["$"+c]))throw new Error("missing: "+c);if(a===qp)throw new Error("ambiguous: "+c);a.children?a.children.push(l):a.children=[l],l.parent=a}else{if(i)throw new Error("multiple roots");i=l}if(!i)throw new Error("no root");if(i.parent=Bp,i.eachBefore((function(t){t.depth=t.parent.depth+1,--s})).eachBefore(dp),i.parent=null,s>0)throw new Error("cycle");return i}return n.id=function(e){return arguments.length?(t=Pp(e),n):t},n.parentId=function(t){return arguments.length?(e=Pp(t),n):e},n};function Vp(t,e){return t.parent===e.parent?1:2}function Yp(t){var e=t.children;return e?e[0]:t.t}function Gp(t){var e=t.children;return e?e[e.length-1]:t.t}function Qp(t,e,n){var r=n/(e.i-t.i);e.c-=r,e.s+=n,t.c+=r,e.z+=n,e.m+=n}function Xp(t,e,n){return t.a.parent===e.parent?t.a:n}function Kp(t,e){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=e}Kp.prototype=Object.create(pp.prototype);var Jp=function(){var t=Vp,e=1,n=1,r=null;function o(o){var c=function(t){for(var e,n,r,o,i,a=new Kp(t,0),l=[a];e=l.pop();)if(r=e._.children)for(e.children=new Array(i=r.length),o=i-1;o>=0;--o)l.push(n=e.children[o]=new Kp(r[o],o)),n.parent=e;return(a.parent=new Kp(null,0)).children=[a],a}(o);if(c.eachAfter(i),c.parent.m=-c.z,c.eachBefore(a),r)o.eachBefore(l);else{var u=o,s=o,f=o;o.eachBefore((function(t){t.x<u.x&&(u=t),t.x>s.x&&(s=t),t.depth>f.depth&&(f=t)}));var d=u===s?1:t(u,s)/2,p=d-u.x,m=e/(s.x+d+p),h=n/(f.depth||1);o.eachBefore((function(t){t.x=(t.x+p)*m,t.y=t.depth*h}))}return o}function i(e){var n=e.children,r=e.parent.children,o=e.i?r[e.i-1]:null;if(n){!function(t){for(var e,n=0,r=0,o=t.children,i=o.length;--i>=0;)(e=o[i]).z+=n,e.m+=n,n+=e.s+(r+=e.c)}(e);var i=(n[0].z+n[n.length-1].z)/2;o?(e.z=o.z+t(e._,o._),e.m=e.z-i):e.z=i}else o&&(e.z=o.z+t(e._,o._));e.parent.A=function(e,n,r){if(n){for(var o,i=e,a=e,l=n,c=i.parent.children[0],u=i.m,s=a.m,f=l.m,d=c.m;l=Gp(l),i=Yp(i),l&&i;)c=Yp(c),(a=Gp(a)).a=e,(o=l.z+f-i.z-u+t(l._,i._))>0&&(Qp(Xp(l,e,r),e,o),u+=o,s+=o),f+=l.m,u+=i.m,d+=c.m,s+=a.m;l&&!Gp(a)&&(a.t=l,a.m+=f-s),i&&!Yp(c)&&(c.t=i,c.m+=u-d,r=e)}return r}(e,o,e.parent.A||r[0])}function a(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function l(t){t.x*=e,t.y=t.depth*n}return o.separation=function(e){return arguments.length?(t=e,o):t},o.size=function(t){return arguments.length?(r=!1,e=+t[0],n=+t[1],o):r?null:[e,n]},o.nodeSize=function(t){return arguments.length?(r=!0,e=+t[0],n=+t[1],o):r?[e,n]:null},o},Zp=function(t,e,n,r,o){for(var i,a=t.children,l=-1,c=a.length,u=t.value&&(o-n)/t.value;++l<c;)(i=a[l]).x0=e,i.x1=r,i.y0=n,i.y1=n+=i.value*u},tm=(1+Math.sqrt(5))/2;function em(t,e,n,r,o,i){for(var a,l,c,u,s,f,d,p,m,h,g,b=[],v=e.children,y=0,x=0,w=v.length,k=e.value;y<w;){c=o-n,u=i-r;do{s=v[x++].value}while(!s&&x<w);for(f=d=s,g=s*s*(h=Math.max(u/c,c/u)/(k*t)),m=Math.max(d/g,g/f);x<w;++x){if(s+=l=v[x].value,l<f&&(f=l),l>d&&(d=l),g=s*s*h,(p=Math.max(d/g,g/f))>m){s-=l;break}m=p}b.push(a={value:s,dice:c<u,children:v.slice(y,x)}),a.dice?Up(a,n,r,o,k?r+=u*s/k:i):Zp(a,n,r,k?n+=c*s/k:o,i),k-=s,y=x}return b}var nm=function t(e){function n(t,n,r,o,i){em(e,t,n,r,o,i)}return n.ratio=function(e){return t((e=+e)>1?e:1)},n}(tm),rm=function(){var t=nm,e=!1,n=1,r=1,o=[0],i=Ap,a=Ap,l=Ap,c=Ap,u=Ap;function s(t){return t.x0=t.y0=0,t.x1=n,t.y1=r,t.eachBefore(f),o=[0],e&&t.eachBefore(Ip),t}function f(e){var n=o[e.depth],r=e.x0+n,s=e.y0+n,f=e.x1-n,d=e.y1-n;f<r&&(r=f=(r+f)/2),d<s&&(s=d=(s+d)/2),e.x0=r,e.y0=s,e.x1=f,e.y1=d,e.children&&(n=o[e.depth+1]=i(e)/2,r+=u(e)-n,s+=a(e)-n,(f-=l(e)-n)<r&&(r=f=(r+f)/2),(d-=c(e)-n)<s&&(s=d=(s+d)/2),t(e,r,s,f,d))}return s.round=function(t){return arguments.length?(e=!!t,s):e},s.size=function(t){return arguments.length?(n=+t[0],r=+t[1],s):[n,r]},s.tile=function(e){return arguments.length?(t=Pp(e),s):t},s.padding=function(t){return arguments.length?s.paddingInner(t).paddingOuter(t):s.paddingInner()},s.paddingInner=function(t){return arguments.length?(i="function"==typeof t?t:Op(+t),s):i},s.paddingOuter=function(t){return arguments.length?s.paddingTop(t).paddingRight(t).paddingBottom(t).paddingLeft(t):s.paddingTop()},s.paddingTop=function(t){return arguments.length?(a="function"==typeof t?t:Op(+t),s):a},s.paddingRight=function(t){return arguments.length?(l="function"==typeof t?t:Op(+t),s):l},s.paddingBottom=function(t){return arguments.length?(c="function"==typeof t?t:Op(+t),s):c},s.paddingLeft=function(t){return arguments.length?(u="function"==typeof t?t:Op(+t),s):u},s},om=function(t,e,n,r,o){var i,a,l=t.children,c=l.length,u=new Array(c+1);for(u[0]=a=i=0;i<c;++i)u[i+1]=a+=l[i].value;!function t(e,n,r,o,i,a,c){if(e>=n-1){var s=l[e];return s.x0=o,s.y0=i,s.x1=a,void(s.y1=c)}var f=u[e],d=r/2+f,p=e+1,m=n-1;for(;p<m;){var h=p+m>>>1;u[h]<d?p=h+1:m=h}d-u[p-1]<u[p]-d&&e+1<p&&--p;var g=u[p]-f,b=r-g;if(a-o>c-i){var v=(o*b+a*g)/r;t(e,p,g,o,i,v,c),t(p,n,b,v,i,a,c)}else{var y=(i*b+c*g)/r;t(e,p,g,o,i,a,y),t(p,n,b,o,y,a,c)}}(0,c,t.value,e,n,r,o)},im=function(t,e,n,r,o){(1&t.depth?Zp:Up)(t,e,n,r,o)},am=function t(e){function n(t,n,r,o,i){if((a=t._squarify)&&a.ratio===e)for(var a,l,c,u,s,f=-1,d=a.length,p=t.value;++f<d;){for(c=(l=a[f]).children,u=l.value=0,s=c.length;u<s;++u)l.value+=c[u].value;l.dice?Up(l,n,r,o,r+=(i-r)*l.value/p):Zp(l,n,r,n+=(o-n)*l.value/p,i),p-=l.value}else t._squarify=a=em(e,t,n,r,o,i),a.ratio=e}return n.ratio=function(e){return t((e=+e)>1?e:1)},n}(tm),lm=function(t){var e=t.length;return function(n){return t[Math.max(0,Math.min(e-1,Math.floor(n*e)))]}},cm=function(t,e){var n=un(+t,+e);return function(t){var e=n(t);return e-360*Math.floor(e/360)}},um=function(t,e){return t=+t,e=+e,function(n){return Math.round(t*(1-n)+e*n)}},sm=Math.SQRT2;function fm(t){return((t=Math.exp(t))+1/t)/2}var dm=function(t,e){var n,r,o=t[0],i=t[1],a=t[2],l=e[0],c=e[1],u=e[2],s=l-o,f=c-i,d=s*s+f*f;if(d<1e-12)r=Math.log(u/a)/sm,n=function(t){return[o+t*s,i+t*f,a*Math.exp(sm*t*r)]};else{var p=Math.sqrt(d),m=(u*u-a*a+4*d)/(2*a*2*p),h=(u*u-a*a-4*d)/(2*u*2*p),g=Math.log(Math.sqrt(m*m+1)-m),b=Math.log(Math.sqrt(h*h+1)-h);r=(b-g)/sm,n=function(t){var e,n=t*r,l=fm(g),c=a/(2*p)*(l*(e=sm*n+g,((e=Math.exp(2*e))-1)/(e+1))-function(t){return((t=Math.exp(t))-1/t)/2}(g));return[o+c*s,i+c*f,a*l/fm(sm*n+g)]}}return n.duration=1e3*r,n};function pm(t){return function(e,n){var r=t((e=tn(e)).h,(n=tn(n)).h),o=fn(e.s,n.s),i=fn(e.l,n.l),a=fn(e.opacity,n.opacity);return function(t){return e.h=r(t),e.s=o(t),e.l=i(t),e.opacity=a(t),e+""}}}var mm=pm(un),hm=pm(fn);function gm(t,e){var n=fn((t=hi(t)).l,(e=hi(e)).l),r=fn(t.a,e.a),o=fn(t.b,e.b),i=fn(t.opacity,e.opacity);return function(e){return t.l=n(e),t.a=r(e),t.b=o(e),t.opacity=i(e),t+""}}function bm(t){return function(e,n){var r=t((e=_i(e)).h,(n=_i(n)).h),o=fn(e.c,n.c),i=fn(e.l,n.l),a=fn(e.opacity,n.opacity);return function(t){return e.h=r(t),e.c=o(t),e.l=i(t),e.opacity=a(t),e+""}}}var vm=bm(un),ym=bm(fn);function xm(t){return function e(n){function r(e,r){var o=t((e=Ai(e)).h,(r=Ai(r)).h),i=fn(e.s,r.s),a=fn(e.l,r.l),l=fn(e.opacity,r.opacity);return function(t){return e.h=o(t),e.s=i(t),e.l=a(Math.pow(t,n)),e.opacity=l(t),e+""}}return n=+n,r.gamma=e,r}(1)}var wm=xm(un),km=xm(fn);function _m(t,e){for(var n=0,r=e.length-1,o=e[0],i=new Array(r<0?0:r);n<r;)i[n]=t(o,o=e[++n]);return function(t){var e=Math.max(0,Math.min(r-1,Math.floor(t*=r)));return i[e](t-e)}}var Em=function(t,e){for(var n=new Array(e),r=0;r<e;++r)n[r]=t(r/(e-1));return n},Sm=function(t){for(var e,n=-1,r=t.length,o=t[r-1],i=0;++n<r;)e=o,o=t[n],i+=e[1]*o[0]-e[0]*o[1];return i/2},Mm=function(t){for(var e,n,r=-1,o=t.length,i=0,a=0,l=t[o-1],c=0;++r<o;)e=l,l=t[r],c+=n=e[0]*l[1]-l[0]*e[1],i+=(e[0]+l[0])*n,a+=(e[1]+l[1])*n;return[i/(c*=3),a/c]};function Tm(t,e){return t[0]-e[0]||t[1]-e[1]}function Cm(t){for(var e,n,r,o=t.length,i=[0,1],a=2,l=2;l<o;++l){for(;a>1&&(e=t[i[a-2]],n=t[i[a-1]],r=t[l],(n[0]-e[0])*(r[1]-e[1])-(n[1]-e[1])*(r[0]-e[0])<=0);)--a;i[a++]=l}return i.slice(0,a)}var Nm=function(t){if((n=t.length)<3)return null;var e,n,r=new Array(n),o=new Array(n);for(e=0;e<n;++e)r[e]=[+t[e][0],+t[e][1],e];for(r.sort(Tm),e=0;e<n;++e)o[e]=[r[e][0],-r[e][1]];var i=Cm(r),a=Cm(o),l=a[0]===i[0],c=a[a.length-1]===i[i.length-1],u=[];for(e=i.length-1;e>=0;--e)u.push(t[r[i[e]][2]]);for(e=+l;e<a.length-c;++e)u.push(t[r[a[e]][2]]);return u},Pm=function(t,e){for(var n,r,o=t.length,i=t[o-1],a=e[0],l=e[1],c=i[0],u=i[1],s=!1,f=0;f<o;++f)n=(i=t[f])[0],(r=i[1])>l!=u>l&&a<(c-n)*(l-r)/(u-r)+n&&(s=!s),c=n,u=r;return s},Am=function(t){for(var e,n,r=-1,o=t.length,i=t[o-1],a=i[0],l=i[1],c=0;++r<o;)e=a,n=l,e-=a=(i=t[r])[0],n-=l=i[1],c+=Math.sqrt(e*e+n*n);return c},Om=function(){return Math.random()},zm=function t(e){function n(t,n){return t=null==t?0:+t,n=null==n?1:+n,1===arguments.length?(n=t,t=0):n-=t,function(){return e()*n+t}}return n.source=t,n}(Om),jm=function t(e){function n(t,n){var r,o;return t=null==t?0:+t,n=null==n?1:+n,function(){var i;if(null!=r)i=r,r=null;else do{r=2*e()-1,i=2*e()-1,o=r*r+i*i}while(!o||o>1);return t+n*i*Math.sqrt(-2*Math.log(o)/o)}}return n.source=t,n}(Om),Rm=function t(e){function n(){var t=jm.source(e).apply(this,arguments);return function(){return Math.exp(t())}}return n.source=t,n}(Om),Dm=function t(e){function n(t){return function(){for(var n=0,r=0;r<t;++r)n+=e();return n}}return n.source=t,n}(Om),Lm=function t(e){function n(t){var n=Dm.source(e)(t);return function(){return n()/t}}return n.source=t,n}(Om),Im=function t(e){function n(t){return function(){return-Math.log(1-e())/t}}return n.source=t,n}(Om);function Um(t,e){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(e).domain(t)}return this}function Fm(t,e){switch(arguments.length){case 0:break;case 1:this.interpolator(t);break;default:this.interpolator(e).domain(t)}return this}var Bm=Array.prototype,qm=Bm.map,Hm=Bm.slice,Wm={name:"implicit"};function $m(){var t=Jo(),e=[],n=[],r=Wm;function o(o){var i=o+"",a=t.get(i);if(!a){if(r!==Wm)return r;t.set(i,a=e.push(o))}return n[(a-1)%n.length]}return o.domain=function(n){if(!arguments.length)return e.slice();e=[],t=Jo();for(var r,i,a=-1,l=n.length;++a<l;)t.has(i=(r=n[a])+"")||t.set(i,e.push(r));return o},o.range=function(t){return arguments.length?(n=Hm.call(t),o):n.slice()},o.unknown=function(t){return arguments.length?(r=t,o):r},o.copy=function(){return $m(e,n).unknown(r)},Um.apply(o,arguments),o}function Vm(){var t,e,n=$m().unknown(void 0),r=n.domain,o=n.range,i=[0,1],a=!1,l=0,c=0,u=.5;function s(){var n=r().length,s=i[1]<i[0],f=i[s-0],d=i[1-s];t=(d-f)/Math.max(1,n-l+2*c),a&&(t=Math.floor(t)),f+=(d-f-t*(n-l))*u,e=t*(1-l),a&&(f=Math.round(f),e=Math.round(e));var p=k(n).map((function(e){return f+t*e}));return o(s?p.reverse():p)}return delete n.unknown,n.domain=function(t){return arguments.length?(r(t),s()):r()},n.range=function(t){return arguments.length?(i=[+t[0],+t[1]],s()):i.slice()},n.rangeRound=function(t){return i=[+t[0],+t[1]],a=!0,s()},n.bandwidth=function(){return e},n.step=function(){return t},n.round=function(t){return arguments.length?(a=!!t,s()):a},n.padding=function(t){return arguments.length?(l=Math.min(1,c=+t),s()):l},n.paddingInner=function(t){return arguments.length?(l=Math.min(1,t),s()):l},n.paddingOuter=function(t){return arguments.length?(c=+t,s()):c},n.align=function(t){return arguments.length?(u=Math.max(0,Math.min(1,t)),s()):u},n.copy=function(){return Vm(r(),i).round(a).paddingInner(l).paddingOuter(c).align(u)},Um.apply(s(),arguments)}function Ym(t){var e=t.copy;return t.padding=t.paddingOuter,delete t.paddingInner,delete t.paddingOuter,t.copy=function(){return Ym(e())},t}function Gm(){return Ym(Vm.apply(null,arguments).paddingInner(1))}var Qm=function(t){return+t},Xm=[0,1];function Km(t){return t}function Jm(t,e){return(e-=t=+t)?function(n){return(n-t)/e}:(n=isNaN(e)?NaN:.5,function(){return n});var n}function Zm(t){var e,n=t[0],r=t[t.length-1];return n>r&&(e=n,n=r,r=e),function(t){return Math.max(n,Math.min(r,t))}}function th(t,e,n){var r=t[0],o=t[1],i=e[0],a=e[1];return o<r?(r=Jm(o,r),i=n(a,i)):(r=Jm(r,o),i=n(i,a)),function(t){return i(r(t))}}function eh(t,e,n){var r=Math.min(t.length,e.length)-1,o=new Array(r),i=new Array(r),a=-1;for(t[r]<t[0]&&(t=t.slice().reverse(),e=e.slice().reverse());++a<r;)o[a]=Jm(t[a],t[a+1]),i[a]=n(e[a],e[a+1]);return function(e){var n=c(t,e,1,r)-1;return i[n](o[n](e))}}function nh(t,e){return e.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}function rh(){var t,e,n,r,o,i,a=Xm,l=Xm,c=Cn,u=Km;function s(){return r=Math.min(a.length,l.length)>2?eh:th,o=i=null,f}function f(e){return isNaN(e=+e)?n:(o||(o=r(a.map(t),l,c)))(t(u(e)))}return f.invert=function(n){return u(e((i||(i=r(l,a.map(t),wn)))(n)))},f.domain=function(t){return arguments.length?(a=qm.call(t,Qm),u===Km||(u=Zm(a)),s()):a.slice()},f.range=function(t){return arguments.length?(l=Hm.call(t),s()):l.slice()},f.rangeRound=function(t){return l=Hm.call(t),c=um,s()},f.clamp=function(t){return arguments.length?(u=t?Zm(a):Km,f):u!==Km},f.interpolate=function(t){return arguments.length?(c=t,s()):c},f.unknown=function(t){return arguments.length?(n=t,f):n},function(n,r){return t=n,e=r,s()}}function oh(t,e){return rh()(t,e)}var ih=function(t,e,n,r){var o,i=C(t,e,n);switch((r=$l(null==r?",f":r)).type){case"s":var a=Math.max(Math.abs(t),Math.abs(e));return null!=r.precision||isNaN(o=ic(i,a))||(r.precision=o),Xl(r,a);case"":case"e":case"g":case"p":case"r":null!=r.precision||isNaN(o=ac(i,Math.max(Math.abs(t),Math.abs(e))))||(r.precision=o-("e"===r.type));break;case"f":case"%":null!=r.precision||isNaN(o=oc(i))||(r.precision=o-2*("%"===r.type))}return Ql(r)};function ah(t){var e=t.domain;return t.ticks=function(t){var n=e();return M(n[0],n[n.length-1],null==t?10:t)},t.tickFormat=function(t,n){var r=e();return ih(r[0],r[r.length-1],null==t?10:t,n)},t.nice=function(n){null==n&&(n=10);var r,o=e(),i=0,a=o.length-1,l=o[i],c=o[a];return c<l&&(r=l,l=c,c=r,r=i,i=a,a=r),(r=T(l,c,n))>0?r=T(l=Math.floor(l/r)*r,c=Math.ceil(c/r)*r,n):r<0&&(r=T(l=Math.ceil(l*r)/r,c=Math.floor(c*r)/r,n)),r>0?(o[i]=Math.floor(l/r)*r,o[a]=Math.ceil(c/r)*r,e(o)):r<0&&(o[i]=Math.ceil(l*r)/r,o[a]=Math.floor(c*r)/r,e(o)),t},t}function lh(){var t=oh(Km,Km);return t.copy=function(){return nh(t,lh())},Um.apply(t,arguments),ah(t)}function ch(t){var e;function n(t){return isNaN(t=+t)?e:t}return n.invert=n,n.domain=n.range=function(e){return arguments.length?(t=qm.call(e,Qm),n):t.slice()},n.unknown=function(t){return arguments.length?(e=t,n):e},n.copy=function(){return ch(t).unknown(e)},t=arguments.length?qm.call(t,Qm):[0,1],ah(n)}var uh=function(t,e){var n,r=0,o=(t=t.slice()).length-1,i=t[r],a=t[o];return a<i&&(n=r,r=o,o=n,n=i,i=a,a=n),t[r]=e.floor(i),t[o]=e.ceil(a),t};function sh(t){return Math.log(t)}function fh(t){return Math.exp(t)}function dh(t){return-Math.log(-t)}function ph(t){return-Math.exp(-t)}function mh(t){return isFinite(t)?+("1e"+t):t<0?0:t}function hh(t){return function(e){return-t(-e)}}function gh(t){var e,n,r=t(sh,fh),o=r.domain,i=10;function a(){return e=function(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(e){return Math.log(e)/t})}(i),n=function(t){return 10===t?mh:t===Math.E?Math.exp:function(e){return Math.pow(t,e)}}(i),o()[0]<0?(e=hh(e),n=hh(n),t(dh,ph)):t(sh,fh),r}return r.base=function(t){return arguments.length?(i=+t,a()):i},r.domain=function(t){return arguments.length?(o(t),a()):o()},r.ticks=function(t){var r,a=o(),l=a[0],c=a[a.length-1];(r=c<l)&&(d=l,l=c,c=d);var u,s,f,d=e(l),p=e(c),m=null==t?10:+t,h=[];if(!(i%1)&&p-d<m){if(d=Math.round(d)-1,p=Math.round(p)+1,l>0){for(;d<p;++d)for(s=1,u=n(d);s<i;++s)if(!((f=u*s)<l)){if(f>c)break;h.push(f)}}else for(;d<p;++d)for(s=i-1,u=n(d);s>=1;--s)if(!((f=u*s)<l)){if(f>c)break;h.push(f)}}else h=M(d,p,Math.min(p-d,m)).map(n);return r?h.reverse():h},r.tickFormat=function(t,o){if(null==o&&(o=10===i?".0e":","),"function"!=typeof o&&(o=Ql(o)),t===1/0)return o;null==t&&(t=10);var a=Math.max(1,i*t/r.ticks().length);return function(t){var r=t/n(Math.round(e(t)));return r*i<i-.5&&(r*=i),r<=a?o(t):""}},r.nice=function(){return o(uh(o(),{floor:function(t){return n(Math.floor(e(t)))},ceil:function(t){return n(Math.ceil(e(t)))}}))},r}function bh(){var t=gh(rh()).domain([1,10]);return t.copy=function(){return nh(t,bh()).base(t.base())},Um.apply(t,arguments),t}function vh(t){return function(e){return Math.sign(e)*Math.log1p(Math.abs(e/t))}}function yh(t){return function(e){return Math.sign(e)*Math.expm1(Math.abs(e))*t}}function xh(t){var e=1,n=t(vh(e),yh(e));return n.constant=function(n){return arguments.length?t(vh(e=+n),yh(e)):e},ah(n)}function wh(){var t=xh(rh());return t.copy=function(){return nh(t,wh()).constant(t.constant())},Um.apply(t,arguments)}function kh(t){return function(e){return e<0?-Math.pow(-e,t):Math.pow(e,t)}}function _h(t){return t<0?-Math.sqrt(-t):Math.sqrt(t)}function Eh(t){return t<0?-t*t:t*t}function Sh(t){var e=t(Km,Km),n=1;function r(){return 1===n?t(Km,Km):.5===n?t(_h,Eh):t(kh(n),kh(1/n))}return e.exponent=function(t){return arguments.length?(n=+t,r()):n},ah(e)}function Mh(){var t=Sh(rh());return t.copy=function(){return nh(t,Mh()).exponent(t.exponent())},Um.apply(t,arguments),t}function Th(){return Mh.apply(null,arguments).exponent(.5)}function Ch(){var t,e=[],n=[],o=[];function i(){var t=0,r=Math.max(1,n.length);for(o=new Array(r-1);++t<r;)o[t-1]=A(e,t/r);return a}function a(e){return isNaN(e=+e)?t:n[c(o,e)]}return a.invertExtent=function(t){var r=n.indexOf(t);return r<0?[NaN,NaN]:[r>0?o[r-1]:e[0],r<o.length?o[r]:e[e.length-1]]},a.domain=function(t){if(!arguments.length)return e.slice();e=[];for(var n,o=0,a=t.length;o<a;++o)null==(n=t[o])||isNaN(n=+n)||e.push(n);return e.sort(r),i()},a.range=function(t){return arguments.length?(n=Hm.call(t),i()):n.slice()},a.unknown=function(e){return arguments.length?(t=e,a):t},a.quantiles=function(){return o.slice()},a.copy=function(){return Ch().domain(e).range(n).unknown(t)},Um.apply(a,arguments)}function Nh(){var t,e=0,n=1,r=1,o=[.5],i=[0,1];function a(e){return e<=e?i[c(o,e,0,r)]:t}function l(){var t=-1;for(o=new Array(r);++t<r;)o[t]=((t+1)*n-(t-r)*e)/(r+1);return a}return a.domain=function(t){return arguments.length?(e=+t[0],n=+t[1],l()):[e,n]},a.range=function(t){return arguments.length?(r=(i=Hm.call(t)).length-1,l()):i.slice()},a.invertExtent=function(t){var a=i.indexOf(t);return a<0?[NaN,NaN]:a<1?[e,o[0]]:a>=r?[o[r-1],n]:[o[a-1],o[a]]},a.unknown=function(e){return arguments.length?(t=e,a):a},a.thresholds=function(){return o.slice()},a.copy=function(){return Nh().domain([e,n]).range(i).unknown(t)},Um.apply(ah(a),arguments)}function Ph(){var t,e=[.5],n=[0,1],r=1;function o(o){return o<=o?n[c(e,o,0,r)]:t}return o.domain=function(t){return arguments.length?(e=Hm.call(t),r=Math.min(e.length,n.length-1),o):e.slice()},o.range=function(t){return arguments.length?(n=Hm.call(t),r=Math.min(e.length,n.length-1),o):n.slice()},o.invertExtent=function(t){var r=n.indexOf(t);return[e[r-1],e[r]]},o.unknown=function(e){return arguments.length?(t=e,o):t},o.copy=function(){return Ph().domain(e).range(n).unknown(t)},Um.apply(o,arguments)}var Ah=new Date,Oh=new Date;function zh(t,e,n,r){function o(e){return t(e=0===arguments.length?new Date:new Date(+e)),e}return o.floor=function(e){return t(e=new Date(+e)),e},o.ceil=function(n){return t(n=new Date(n-1)),e(n,1),t(n),n},o.round=function(t){var e=o(t),n=o.ceil(t);return t-e<n-t?e:n},o.offset=function(t,n){return e(t=new Date(+t),null==n?1:Math.floor(n)),t},o.range=function(n,r,i){var a,l=[];if(n=o.ceil(n),i=null==i?1:Math.floor(i),!(n<r&&i>0))return l;do{l.push(a=new Date(+n)),e(n,i),t(n)}while(a<n&&n<r);return l},o.filter=function(n){return zh((function(e){if(e>=e)for(;t(e),!n(e);)e.setTime(e-1)}),(function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;e(t,-1),!n(t););else for(;--r>=0;)for(;e(t,1),!n(t););}))},n&&(o.count=function(e,r){return Ah.setTime(+e),Oh.setTime(+r),t(Ah),t(Oh),Math.floor(n(Ah,Oh))},o.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?o.filter(r?function(e){return r(e)%t==0}:function(e){return o.count(0,e)%t==0}):o:null}),o}var jh=zh((function(t){t.setMonth(0,1),t.setHours(0,0,0,0)}),(function(t,e){t.setFullYear(t.getFullYear()+e)}),(function(t,e){return e.getFullYear()-t.getFullYear()}),(function(t){return t.getFullYear()}));jh.every=function(t){return isFinite(t=Math.floor(t))&&t>0?zh((function(e){e.setFullYear(Math.floor(e.getFullYear()/t)*t),e.setMonth(0,1),e.setHours(0,0,0,0)}),(function(e,n){e.setFullYear(e.getFullYear()+n*t)})):null};var Rh=jh,Dh=jh.range,Lh=zh((function(t){t.setDate(1),t.setHours(0,0,0,0)}),(function(t,e){t.setMonth(t.getMonth()+e)}),(function(t,e){return e.getMonth()-t.getMonth()+12*(e.getFullYear()-t.getFullYear())}),(function(t){return t.getMonth()})),Ih=Lh,Uh=Lh.range;function Fh(t){return zh((function(e){e.setDate(e.getDate()-(e.getDay()+7-t)%7),e.setHours(0,0,0,0)}),(function(t,e){t.setDate(t.getDate()+7*e)}),(function(t,e){return(e-t-6e4*(e.getTimezoneOffset()-t.getTimezoneOffset()))/6048e5}))}var Bh=Fh(0),qh=Fh(1),Hh=Fh(2),Wh=Fh(3),$h=Fh(4),Vh=Fh(5),Yh=Fh(6),Gh=Bh.range,Qh=qh.range,Xh=Hh.range,Kh=Wh.range,Jh=$h.range,Zh=Vh.range,tg=Yh.range,eg=zh((function(t){t.setHours(0,0,0,0)}),(function(t,e){t.setDate(t.getDate()+e)}),(function(t,e){return(e-t-6e4*(e.getTimezoneOffset()-t.getTimezoneOffset()))/864e5}),(function(t){return t.getDate()-1})),ng=eg,rg=eg.range,og=zh((function(t){t.setTime(t-t.getMilliseconds()-1e3*t.getSeconds()-6e4*t.getMinutes())}),(function(t,e){t.setTime(+t+36e5*e)}),(function(t,e){return(e-t)/36e5}),(function(t){return t.getHours()})),ig=og,ag=og.range,lg=zh((function(t){t.setTime(t-t.getMilliseconds()-1e3*t.getSeconds())}),(function(t,e){t.setTime(+t+6e4*e)}),(function(t,e){return(e-t)/6e4}),(function(t){return t.getMinutes()})),cg=lg,ug=lg.range,sg=zh((function(t){t.setTime(t-t.getMilliseconds())}),(function(t,e){t.setTime(+t+1e3*e)}),(function(t,e){return(e-t)/1e3}),(function(t){return t.getUTCSeconds()})),fg=sg,dg=sg.range,pg=zh((function(){}),(function(t,e){t.setTime(+t+e)}),(function(t,e){return e-t}));pg.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?zh((function(e){e.setTime(Math.floor(e/t)*t)}),(function(e,n){e.setTime(+e+n*t)}),(function(e,n){return(n-e)/t})):pg:null};var mg=pg,hg=pg.range;function gg(t){return zh((function(e){e.setUTCDate(e.getUTCDate()-(e.getUTCDay()+7-t)%7),e.setUTCHours(0,0,0,0)}),(function(t,e){t.setUTCDate(t.getUTCDate()+7*e)}),(function(t,e){return(e-t)/6048e5}))}var bg=gg(0),vg=gg(1),yg=gg(2),xg=gg(3),wg=gg(4),kg=gg(5),_g=gg(6),Eg=bg.range,Sg=vg.range,Mg=yg.range,Tg=xg.range,Cg=wg.range,Ng=kg.range,Pg=_g.range,Ag=zh((function(t){t.setUTCHours(0,0,0,0)}),(function(t,e){t.setUTCDate(t.getUTCDate()+e)}),(function(t,e){return(e-t)/864e5}),(function(t){return t.getUTCDate()-1})),Og=Ag,zg=Ag.range,jg=zh((function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)}),(function(t,e){t.setUTCFullYear(t.getUTCFullYear()+e)}),(function(t,e){return e.getUTCFullYear()-t.getUTCFullYear()}),(function(t){return t.getUTCFullYear()}));jg.every=function(t){return isFinite(t=Math.floor(t))&&t>0?zh((function(e){e.setUTCFullYear(Math.floor(e.getUTCFullYear()/t)*t),e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0)}),(function(e,n){e.setUTCFullYear(e.getUTCFullYear()+n*t)})):null};var Rg=jg,Dg=jg.range;function Lg(t){if(0<=t.y&&t.y<100){var e=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return e.setFullYear(t.y),e}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function Ig(t){if(0<=t.y&&t.y<100){var e=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return e.setUTCFullYear(t.y),e}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function Ug(t,e,n){return{y:t,m:e,d:n,H:0,M:0,S:0,L:0}}function Fg(t){var e=t.dateTime,n=t.date,r=t.time,o=t.periods,i=t.days,a=t.shortDays,l=t.months,c=t.shortMonths,u=Jg(o),s=Zg(o),f=Jg(i),d=Zg(i),p=Jg(a),m=Zg(a),h=Jg(l),g=Zg(l),b=Jg(c),v=Zg(c),y={a:function(t){return a[t.getDay()]},A:function(t){return i[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return l[t.getMonth()]},c:null,d:xb,e:xb,f:Sb,H:wb,I:kb,j:_b,L:Eb,m:Mb,M:Tb,p:function(t){return o[+(t.getHours()>=12)]},q:function(t){return 1+~~(t.getMonth()/3)},Q:ev,s:nv,S:Cb,u:Nb,U:Pb,V:Ab,w:Ob,W:zb,x:null,X:null,y:jb,Y:Rb,Z:Db,"%":tv},x={a:function(t){return a[t.getUTCDay()]},A:function(t){return i[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return l[t.getUTCMonth()]},c:null,d:Lb,e:Lb,f:qb,H:Ib,I:Ub,j:Fb,L:Bb,m:Hb,M:Wb,p:function(t){return o[+(t.getUTCHours()>=12)]},q:function(t){return 1+~~(t.getUTCMonth()/3)},Q:ev,s:nv,S:$b,u:Vb,U:Yb,V:Gb,w:Qb,W:Xb,x:null,X:null,y:Kb,Y:Jb,Z:Zb,"%":tv},w={a:function(t,e,n){var r=p.exec(e.slice(n));return r?(t.w=m[r[0].toLowerCase()],n+r[0].length):-1},A:function(t,e,n){var r=f.exec(e.slice(n));return r?(t.w=d[r[0].toLowerCase()],n+r[0].length):-1},b:function(t,e,n){var r=b.exec(e.slice(n));return r?(t.m=v[r[0].toLowerCase()],n+r[0].length):-1},B:function(t,e,n){var r=h.exec(e.slice(n));return r?(t.m=g[r[0].toLowerCase()],n+r[0].length):-1},c:function(t,n,r){return E(t,e,n,r)},d:sb,e:sb,f:gb,H:db,I:db,j:fb,L:hb,m:ub,M:pb,p:function(t,e,n){var r=u.exec(e.slice(n));return r?(t.p=s[r[0].toLowerCase()],n+r[0].length):-1},q:cb,Q:vb,s:yb,S:mb,u:eb,U:nb,V:rb,w:tb,W:ob,x:function(t,e,r){return E(t,n,e,r)},X:function(t,e,n){return E(t,r,e,n)},y:ab,Y:ib,Z:lb,"%":bb};function k(t,e){return function(n){var r,o,i,a=[],l=-1,c=0,u=t.length;for(n instanceof Date||(n=new Date(+n));++l<u;)37===t.charCodeAt(l)&&(a.push(t.slice(c,l)),null!=(o=Vg[r=t.charAt(++l)])?r=t.charAt(++l):o="e"===r?" ":"0",(i=e[r])&&(r=i(n,o)),a.push(r),c=l+1);return a.push(t.slice(c,l)),a.join("")}}function _(t,e){return function(n){var r,o,i=Ug(1900,void 0,1);if(E(i,t,n+="",0)!=n.length)return null;if("Q"in i)return new Date(i.Q);if("s"in i)return new Date(1e3*i.s+("L"in i?i.L:0));if(!e||"Z"in i||(i.Z=0),"p"in i&&(i.H=i.H%12+12*i.p),void 0===i.m&&(i.m="q"in i?i.q:0),"V"in i){if(i.V<1||i.V>53)return null;"w"in i||(i.w=1),"Z"in i?(o=(r=Ig(Ug(i.y,0,1))).getUTCDay(),r=o>4||0===o?vg.ceil(r):vg(r),r=Og.offset(r,7*(i.V-1)),i.y=r.getUTCFullYear(),i.m=r.getUTCMonth(),i.d=r.getUTCDate()+(i.w+6)%7):(o=(r=Lg(Ug(i.y,0,1))).getDay(),r=o>4||0===o?qh.ceil(r):qh(r),r=ng.offset(r,7*(i.V-1)),i.y=r.getFullYear(),i.m=r.getMonth(),i.d=r.getDate()+(i.w+6)%7)}else("W"in i||"U"in i)&&("w"in i||(i.w="u"in i?i.u%7:"W"in i?1:0),o="Z"in i?Ig(Ug(i.y,0,1)).getUTCDay():Lg(Ug(i.y,0,1)).getDay(),i.m=0,i.d="W"in i?(i.w+6)%7+7*i.W-(o+5)%7:i.w+7*i.U-(o+6)%7);return"Z"in i?(i.H+=i.Z/100|0,i.M+=i.Z%100,Ig(i)):Lg(i)}}function E(t,e,n,r){for(var o,i,a=0,l=e.length,c=n.length;a<l;){if(r>=c)return-1;if(37===(o=e.charCodeAt(a++))){if(o=e.charAt(a++),!(i=w[o in Vg?e.charAt(a++):o])||(r=i(t,n,r))<0)return-1}else if(o!=n.charCodeAt(r++))return-1}return r}return(y.x=k(n,y),y.X=k(r,y),y.c=k(e,y),x.x=k(n,x),x.X=k(r,x),x.c=k(e,x),{format:function(t){var e=k(t+="",y);return e.toString=function(){return t},e},parse:function(t){var e=_(t+="",!1);return e.toString=function(){return t},e},utcFormat:function(t){var e=k(t+="",x);return e.toString=function(){return t},e},utcParse:function(t){var e=_(t+="",!0);return e.toString=function(){return t},e}})}var Bg,qg,Hg,Wg,$g,Vg={"-":"",_:" ",0:"0"},Yg=/^\s*\d+/,Gg=/^%/,Qg=/[\\^$*+?|[\]().{}]/g;function Xg(t,e,n){var r=t<0?"-":"",o=(r?-t:t)+"",i=o.length;return r+(i<n?new Array(n-i+1).join(e)+o:o)}function Kg(t){return t.replace(Qg,"\\$&")}function Jg(t){return new RegExp("^(?:"+t.map(Kg).join("|")+")","i")}function Zg(t){for(var e={},n=-1,r=t.length;++n<r;)e[t[n].toLowerCase()]=n;return e}function tb(t,e,n){var r=Yg.exec(e.slice(n,n+1));return r?(t.w=+r[0],n+r[0].length):-1}function eb(t,e,n){var r=Yg.exec(e.slice(n,n+1));return r?(t.u=+r[0],n+r[0].length):-1}function nb(t,e,n){var r=Yg.exec(e.slice(n,n+2));return r?(t.U=+r[0],n+r[0].length):-1}function rb(t,e,n){var r=Yg.exec(e.slice(n,n+2));return r?(t.V=+r[0],n+r[0].length):-1}function ob(t,e,n){var r=Yg.exec(e.slice(n,n+2));return r?(t.W=+r[0],n+r[0].length):-1}function ib(t,e,n){var r=Yg.exec(e.slice(n,n+4));return r?(t.y=+r[0],n+r[0].length):-1}function ab(t,e,n){var r=Yg.exec(e.slice(n,n+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),n+r[0].length):-1}function lb(t,e,n){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(e.slice(n,n+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),n+r[0].length):-1}function cb(t,e,n){var r=Yg.exec(e.slice(n,n+1));return r?(t.q=3*r[0]-3,n+r[0].length):-1}function ub(t,e,n){var r=Yg.exec(e.slice(n,n+2));return r?(t.m=r[0]-1,n+r[0].length):-1}function sb(t,e,n){var r=Yg.exec(e.slice(n,n+2));return r?(t.d=+r[0],n+r[0].length):-1}function fb(t,e,n){var r=Yg.exec(e.slice(n,n+3));return r?(t.m=0,t.d=+r[0],n+r[0].length):-1}function db(t,e,n){var r=Yg.exec(e.slice(n,n+2));return r?(t.H=+r[0],n+r[0].length):-1}function pb(t,e,n){var r=Yg.exec(e.slice(n,n+2));return r?(t.M=+r[0],n+r[0].length):-1}function mb(t,e,n){var r=Yg.exec(e.slice(n,n+2));return r?(t.S=+r[0],n+r[0].length):-1}function hb(t,e,n){var r=Yg.exec(e.slice(n,n+3));return r?(t.L=+r[0],n+r[0].length):-1}function gb(t,e,n){var r=Yg.exec(e.slice(n,n+6));return r?(t.L=Math.floor(r[0]/1e3),n+r[0].length):-1}function bb(t,e,n){var r=Gg.exec(e.slice(n,n+1));return r?n+r[0].length:-1}function vb(t,e,n){var r=Yg.exec(e.slice(n));return r?(t.Q=+r[0],n+r[0].length):-1}function yb(t,e,n){var r=Yg.exec(e.slice(n));return r?(t.s=+r[0],n+r[0].length):-1}function xb(t,e){return Xg(t.getDate(),e,2)}function wb(t,e){return Xg(t.getHours(),e,2)}function kb(t,e){return Xg(t.getHours()%12||12,e,2)}function _b(t,e){return Xg(1+ng.count(Rh(t),t),e,3)}function Eb(t,e){return Xg(t.getMilliseconds(),e,3)}function Sb(t,e){return Eb(t,e)+"000"}function Mb(t,e){return Xg(t.getMonth()+1,e,2)}function Tb(t,e){return Xg(t.getMinutes(),e,2)}function Cb(t,e){return Xg(t.getSeconds(),e,2)}function Nb(t){var e=t.getDay();return 0===e?7:e}function Pb(t,e){return Xg(Bh.count(Rh(t)-1,t),e,2)}function Ab(t,e){var n=t.getDay();return t=n>=4||0===n?$h(t):$h.ceil(t),Xg($h.count(Rh(t),t)+(4===Rh(t).getDay()),e,2)}function Ob(t){return t.getDay()}function zb(t,e){return Xg(qh.count(Rh(t)-1,t),e,2)}function jb(t,e){return Xg(t.getFullYear()%100,e,2)}function Rb(t,e){return Xg(t.getFullYear()%1e4,e,4)}function Db(t){var e=t.getTimezoneOffset();return(e>0?"-":(e*=-1,"+"))+Xg(e/60|0,"0",2)+Xg(e%60,"0",2)}function Lb(t,e){return Xg(t.getUTCDate(),e,2)}function Ib(t,e){return Xg(t.getUTCHours(),e,2)}function Ub(t,e){return Xg(t.getUTCHours()%12||12,e,2)}function Fb(t,e){return Xg(1+Og.count(Rg(t),t),e,3)}function Bb(t,e){return Xg(t.getUTCMilliseconds(),e,3)}function qb(t,e){return Bb(t,e)+"000"}function Hb(t,e){return Xg(t.getUTCMonth()+1,e,2)}function Wb(t,e){return Xg(t.getUTCMinutes(),e,2)}function $b(t,e){return Xg(t.getUTCSeconds(),e,2)}function Vb(t){var e=t.getUTCDay();return 0===e?7:e}function Yb(t,e){return Xg(bg.count(Rg(t)-1,t),e,2)}function Gb(t,e){var n=t.getUTCDay();return t=n>=4||0===n?wg(t):wg.ceil(t),Xg(wg.count(Rg(t),t)+(4===Rg(t).getUTCDay()),e,2)}function Qb(t){return t.getUTCDay()}function Xb(t,e){return Xg(vg.count(Rg(t)-1,t),e,2)}function Kb(t,e){return Xg(t.getUTCFullYear()%100,e,2)}function Jb(t,e){return Xg(t.getUTCFullYear()%1e4,e,4)}function Zb(){return"+0000"}function tv(){return"%"}function ev(t){return+t}function nv(t){return Math.floor(+t/1e3)}function rv(t){return Bg=Fg(t),qg=Bg.format,Hg=Bg.parse,Wg=Bg.utcFormat,$g=Bg.utcParse,Bg}rv({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});function ov(t){return new Date(t)}function iv(t){return t instanceof Date?+t:+new Date(+t)}function av(t,e,n,r,i,a,l,c,u){var s=oh(Km,Km),f=s.invert,d=s.domain,p=u(".%L"),m=u(":%S"),h=u("%I:%M"),g=u("%I %p"),b=u("%a %d"),v=u("%b %d"),y=u("%B"),x=u("%Y"),w=[[l,1,1e3],[l,5,5e3],[l,15,15e3],[l,30,3e4],[a,1,6e4],[a,5,3e5],[a,15,9e5],[a,30,18e5],[i,1,36e5],[i,3,108e5],[i,6,216e5],[i,12,432e5],[r,1,864e5],[r,2,1728e5],[n,1,6048e5],[e,1,2592e6],[e,3,7776e6],[t,1,31536e6]];function k(o){return(l(o)<o?p:a(o)<o?m:i(o)<o?h:r(o)<o?g:e(o)<o?n(o)<o?b:v:t(o)<o?y:x)(o)}function _(e,n,r,i){if(null==e&&(e=10),"number"==typeof e){var a=Math.abs(r-n)/e,l=o((function(t){return t[2]})).right(w,a);l===w.length?(i=C(n/31536e6,r/31536e6,e),e=t):l?(i=(l=w[a/w[l-1][2]<w[l][2]/a?l-1:l])[1],e=l[0]):(i=Math.max(C(n,r,e),1),e=c)}return null==i?e:e.every(i)}return s.invert=function(t){return new Date(f(t))},s.domain=function(t){return arguments.length?d(qm.call(t,iv)):d().map(ov)},s.ticks=function(t,e){var n,r=d(),o=r[0],i=r[r.length-1],a=i<o;return a&&(n=o,o=i,i=n),n=(n=_(t,o,i,e))?n.range(o,i+1):[],a?n.reverse():n},s.tickFormat=function(t,e){return null==e?k:u(e)},s.nice=function(t,e){var n=d();return(t=_(t,n[0],n[n.length-1],e))?d(uh(n,t)):s},s.copy=function(){return nh(s,av(t,e,n,r,i,a,l,c,u))},s}var lv=function(){return Um.apply(av(Rh,Ih,Bh,ng,ig,cg,fg,mg,qg).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments)},cv=zh((function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)}),(function(t,e){t.setUTCMonth(t.getUTCMonth()+e)}),(function(t,e){return e.getUTCMonth()-t.getUTCMonth()+12*(e.getUTCFullYear()-t.getUTCFullYear())}),(function(t){return t.getUTCMonth()})),uv=cv,sv=cv.range,fv=zh((function(t){t.setUTCMinutes(0,0,0)}),(function(t,e){t.setTime(+t+36e5*e)}),(function(t,e){return(e-t)/36e5}),(function(t){return t.getUTCHours()})),dv=fv,pv=fv.range,mv=zh((function(t){t.setUTCSeconds(0,0)}),(function(t,e){t.setTime(+t+6e4*e)}),(function(t,e){return(e-t)/6e4}),(function(t){return t.getUTCMinutes()})),hv=mv,gv=mv.range,bv=function(){return Um.apply(av(Rg,uv,bg,Og,dv,hv,fg,mg,Wg).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)]),arguments)};function vv(){var t,e,n,r,o,i=0,a=1,l=Km,c=!1;function u(e){return isNaN(e=+e)?o:l(0===n?.5:(e=(r(e)-t)*n,c?Math.max(0,Math.min(1,e)):e))}return u.domain=function(o){return arguments.length?(t=r(i=+o[0]),e=r(a=+o[1]),n=t===e?0:1/(e-t),u):[i,a]},u.clamp=function(t){return arguments.length?(c=!!t,u):c},u.interpolator=function(t){return arguments.length?(l=t,u):l},u.unknown=function(t){return arguments.length?(o=t,u):o},function(o){return r=o,t=o(i),e=o(a),n=t===e?0:1/(e-t),u}}function yv(t,e){return e.domain(t.domain()).interpolator(t.interpolator()).clamp(t.clamp()).unknown(t.unknown())}function xv(){var t=ah(vv()(Km));return t.copy=function(){return yv(t,xv())},Fm.apply(t,arguments)}function wv(){var t=gh(vv()).domain([1,10]);return t.copy=function(){return yv(t,wv()).base(t.base())},Fm.apply(t,arguments)}function kv(){var t=xh(vv());return t.copy=function(){return yv(t,kv()).constant(t.constant())},Fm.apply(t,arguments)}function _v(){var t=Sh(vv());return t.copy=function(){return yv(t,_v()).exponent(t.exponent())},Fm.apply(t,arguments)}function Ev(){return _v.apply(null,arguments).exponent(.5)}function Sv(){var t=[],e=Km;function n(n){if(!isNaN(n=+n))return e((c(t,n)-1)/(t.length-1))}return n.domain=function(e){if(!arguments.length)return t.slice();t=[];for(var o,i=0,a=e.length;i<a;++i)null==(o=e[i])||isNaN(o=+o)||t.push(o);return t.sort(r),n},n.interpolator=function(t){return arguments.length?(e=t,n):e},n.copy=function(){return Sv(e).domain(t)},Fm.apply(n,arguments)}function Mv(){var t,e,n,r,o,i,a,l=0,c=.5,u=1,s=Km,f=!1;function d(t){return isNaN(t=+t)?a:(t=.5+((t=+i(t))-e)*(t<e?r:o),s(f?Math.max(0,Math.min(1,t)):t))}return d.domain=function(a){return arguments.length?(t=i(l=+a[0]),e=i(c=+a[1]),n=i(u=+a[2]),r=t===e?0:.5/(e-t),o=e===n?0:.5/(n-e),d):[l,c,u]},d.clamp=function(t){return arguments.length?(f=!!t,d):f},d.interpolator=function(t){return arguments.length?(s=t,d):s},d.unknown=function(t){return arguments.length?(a=t,d):a},function(a){return i=a,t=a(l),e=a(c),n=a(u),r=t===e?0:.5/(e-t),o=e===n?0:.5/(n-e),d}}function Tv(){var t=ah(Mv()(Km));return t.copy=function(){return yv(t,Tv())},Fm.apply(t,arguments)}function Cv(){var t=gh(Mv()).domain([.1,1,10]);return t.copy=function(){return yv(t,Cv()).base(t.base())},Fm.apply(t,arguments)}function Nv(){var t=xh(Mv());return t.copy=function(){return yv(t,Nv()).constant(t.constant())},Fm.apply(t,arguments)}function Pv(){var t=Sh(Mv());return t.copy=function(){return yv(t,Pv()).exponent(t.exponent())},Fm.apply(t,arguments)}function Av(){return Pv.apply(null,arguments).exponent(.5)}var Ov=function(t){for(var e=t.length/6|0,n=new Array(e),r=0;r<e;)n[r]="#"+t.slice(6*r,6*++r);return n},zv=Ov("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),jv=Ov("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),Rv=Ov("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),Dv=Ov("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),Lv=Ov("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),Iv=Ov("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),Uv=Ov("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),Fv=Ov("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),Bv=Ov("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"),qv=Ov("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab"),Hv=function(t){return mn(t[t.length-1])},Wv=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(Ov),$v=Hv(Wv),Vv=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(Ov),Yv=Hv(Vv),Gv=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(Ov),Qv=Hv(Gv),Xv=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(Ov),Kv=Hv(Xv),Jv=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(Ov),Zv=Hv(Jv),ty=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(Ov),ey=Hv(ty),ny=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(Ov),ry=Hv(ny),oy=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(Ov),iy=Hv(oy),ay=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(Ov),ly=Hv(ay),cy=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(Ov),uy=Hv(cy),sy=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(Ov),fy=Hv(sy),dy=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(Ov),py=Hv(dy),my=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(Ov),hy=Hv(my),gy=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(Ov),by=Hv(gy),vy=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(Ov),yy=Hv(vy),xy=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(Ov),wy=Hv(xy),ky=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(Ov),_y=Hv(ky),Ey=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(Ov),Sy=Hv(Ey),My=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(Ov),Ty=Hv(My),Cy=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(Ov),Ny=Hv(Cy),Py=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(Ov),Ay=Hv(Py),Oy=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(Ov),zy=Hv(Oy),jy=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(Ov),Ry=Hv(jy),Dy=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(Ov),Ly=Hv(Dy),Iy=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(Ov),Uy=Hv(Iy),Fy=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(Ov),By=Hv(Fy),qy=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(Ov),Hy=Hv(qy),Wy=function(t){return t=Math.max(0,Math.min(1,t)),"rgb("+Math.max(0,Math.min(255,Math.round(-4.54-t*(35.34-t*(2381.73-t*(6402.7-t*(7024.72-2710.57*t)))))))+", "+Math.max(0,Math.min(255,Math.round(32.49+t*(170.73+t*(52.82-t*(131.46-t*(176.58-67.37*t)))))))+", "+Math.max(0,Math.min(255,Math.round(81.24+t*(442.36-t*(2482.43-t*(6167.24-t*(6614.94-2475.67*t)))))))+")"},$y=km(Ai(300,.5,0),Ai(-240,.5,1)),Vy=km(Ai(-100,.75,.35),Ai(80,1.5,.8)),Yy=km(Ai(260,.75,.35),Ai(80,1.5,.8)),Gy=Ai(),Qy=function(t){(t<0||t>1)&&(t-=Math.floor(t));var e=Math.abs(t-.5);return Gy.h=360*t-100,Gy.s=1.5-1.5*e,Gy.l=.8-.9*e,Gy+""},Xy=Ye(),Ky=Math.PI/3,Jy=2*Math.PI/3,Zy=function(t){var e;return t=(.5-t)*Math.PI,Xy.r=255*(e=Math.sin(t))*e,Xy.g=255*(e=Math.sin(t+Ky))*e,Xy.b=255*(e=Math.sin(t+Jy))*e,Xy+""},tx=function(t){return t=Math.max(0,Math.min(1,t)),"rgb("+Math.max(0,Math.min(255,Math.round(34.61+t*(1172.33-t*(10793.56-t*(33300.12-t*(38394.49-14825.05*t)))))))+", "+Math.max(0,Math.min(255,Math.round(23.31+t*(557.33+t*(1225.33-t*(3574.96-t*(1073.77+707.56*t)))))))+", "+Math.max(0,Math.min(255,Math.round(27.2+t*(3211.1-t*(15327.97-t*(27814-t*(22569.18-6838.66*t)))))))+")"};function ex(t){var e=t.length;return function(n){return t[Math.max(0,Math.min(e-1,Math.floor(n*e)))]}}var nx=ex(Ov("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),rx=ex(Ov("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),ox=ex(Ov("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),ix=ex(Ov("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921")),ax=function(t){return ke(ne(t).call(document.documentElement))},lx=0;function cx(){return new ux}function ux(){this._="@"+(++lx).toString(36)}ux.prototype=cx.prototype={constructor:ux,get:function(t){for(var e=this._;!(e in t);)if(!(t=t.parentNode))return;return t[e]},set:function(t,e){return t[this._]=e},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var sx=function(t){return"string"==typeof t?new ye([document.querySelectorAll(t)],[document.documentElement]):new ye([null==t?[]:t],ve)},fx=function(t,e){null==e&&(e=Nn().touches);for(var n=0,r=e?e.length:0,o=new Array(r);n<r;++n)o[n]=Pn(t,e[n]);return o},dx=function(t){return function(){return t}},px=Math.abs,mx=Math.atan2,hx=Math.cos,gx=Math.max,bx=Math.min,vx=Math.sin,yx=Math.sqrt,xx=Math.PI,wx=xx/2,kx=2*xx;function _x(t){return t>1?0:t<-1?xx:Math.acos(t)}function Ex(t){return t>=1?wx:t<=-1?-wx:Math.asin(t)}function Sx(t){return t.innerRadius}function Mx(t){return t.outerRadius}function Tx(t){return t.startAngle}function Cx(t){return t.endAngle}function Nx(t){return t&&t.padAngle}function Px(t,e,n,r,o,i,a,l){var c=n-t,u=r-e,s=a-o,f=l-i,d=f*c-s*u;if(!(d*d<1e-12))return[t+(d=(s*(e-i)-f*(t-o))/d)*c,e+d*u]}function Ax(t,e,n,r,o,i,a){var l=t-n,c=e-r,u=(a?i:-i)/yx(l*l+c*c),s=u*c,f=-u*l,d=t+s,p=e+f,m=n+s,h=r+f,g=(d+m)/2,b=(p+h)/2,v=m-d,y=h-p,x=v*v+y*y,w=o-i,k=d*h-m*p,_=(y<0?-1:1)*yx(gx(0,w*w*x-k*k)),E=(k*y-v*_)/x,S=(-k*v-y*_)/x,M=(k*y+v*_)/x,T=(-k*v+y*_)/x,C=E-g,N=S-b,P=M-g,A=T-b;return C*C+N*N>P*P+A*A&&(E=M,S=T),{cx:E,cy:S,x01:-s,y01:-f,x11:E*(o/w-1),y11:S*(o/w-1)}}var Ox=function(){var t=Sx,e=Mx,n=dx(0),r=null,o=Tx,i=Cx,a=Nx,l=null;function c(){var c,u,s=+t.apply(this,arguments),f=+e.apply(this,arguments),d=o.apply(this,arguments)-wx,p=i.apply(this,arguments)-wx,m=px(p-d),h=p>d;if(l||(l=c=Ho()),f<s&&(u=f,f=s,s=u),f>1e-12)if(m>kx-1e-12)l.moveTo(f*hx(d),f*vx(d)),l.arc(0,0,f,d,p,!h),s>1e-12&&(l.moveTo(s*hx(p),s*vx(p)),l.arc(0,0,s,p,d,h));else{var g,b,v=d,y=p,x=d,w=p,k=m,_=m,E=a.apply(this,arguments)/2,S=E>1e-12&&(r?+r.apply(this,arguments):yx(s*s+f*f)),M=bx(px(f-s)/2,+n.apply(this,arguments)),T=M,C=M;if(S>1e-12){var N=Ex(S/s*vx(E)),P=Ex(S/f*vx(E));(k-=2*N)>1e-12?(x+=N*=h?1:-1,w-=N):(k=0,x=w=(d+p)/2),(_-=2*P)>1e-12?(v+=P*=h?1:-1,y-=P):(_=0,v=y=(d+p)/2)}var A=f*hx(v),O=f*vx(v),z=s*hx(w),j=s*vx(w);if(M>1e-12){var R,D=f*hx(y),L=f*vx(y),I=s*hx(x),U=s*vx(x);if(m<xx&&(R=Px(A,O,I,U,D,L,z,j))){var F=A-R[0],B=O-R[1],q=D-R[0],H=L-R[1],W=1/vx(_x((F*q+B*H)/(yx(F*F+B*B)*yx(q*q+H*H)))/2),$=yx(R[0]*R[0]+R[1]*R[1]);T=bx(M,(s-$)/(W-1)),C=bx(M,(f-$)/(W+1))}}_>1e-12?C>1e-12?(g=Ax(I,U,A,O,f,C,h),b=Ax(D,L,z,j,f,C,h),l.moveTo(g.cx+g.x01,g.cy+g.y01),C<M?l.arc(g.cx,g.cy,C,mx(g.y01,g.x01),mx(b.y01,b.x01),!h):(l.arc(g.cx,g.cy,C,mx(g.y01,g.x01),mx(g.y11,g.x11),!h),l.arc(0,0,f,mx(g.cy+g.y11,g.cx+g.x11),mx(b.cy+b.y11,b.cx+b.x11),!h),l.arc(b.cx,b.cy,C,mx(b.y11,b.x11),mx(b.y01,b.x01),!h))):(l.moveTo(A,O),l.arc(0,0,f,v,y,!h)):l.moveTo(A,O),s>1e-12&&k>1e-12?T>1e-12?(g=Ax(z,j,D,L,s,-T,h),b=Ax(A,O,I,U,s,-T,h),l.lineTo(g.cx+g.x01,g.cy+g.y01),T<M?l.arc(g.cx,g.cy,T,mx(g.y01,g.x01),mx(b.y01,b.x01),!h):(l.arc(g.cx,g.cy,T,mx(g.y01,g.x01),mx(g.y11,g.x11),!h),l.arc(0,0,s,mx(g.cy+g.y11,g.cx+g.x11),mx(b.cy+b.y11,b.cx+b.x11),h),l.arc(b.cx,b.cy,T,mx(b.y11,b.x11),mx(b.y01,b.x01),!h))):l.arc(0,0,s,w,x,h):l.lineTo(z,j)}else l.moveTo(0,0);if(l.closePath(),c)return l=null,c+""||null}return c.centroid=function(){var n=(+t.apply(this,arguments)+ +e.apply(this,arguments))/2,r=(+o.apply(this,arguments)+ +i.apply(this,arguments))/2-xx/2;return[hx(r)*n,vx(r)*n]},c.innerRadius=function(e){return arguments.length?(t="function"==typeof e?e:dx(+e),c):t},c.outerRadius=function(t){return arguments.length?(e="function"==typeof t?t:dx(+t),c):e},c.cornerRadius=function(t){return arguments.length?(n="function"==typeof t?t:dx(+t),c):n},c.padRadius=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:dx(+t),c):r},c.startAngle=function(t){return arguments.length?(o="function"==typeof t?t:dx(+t),c):o},c.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:dx(+t),c):i},c.padAngle=function(t){return arguments.length?(a="function"==typeof t?t:dx(+t),c):a},c.context=function(t){return arguments.length?(l=null==t?null:t,c):l},c};function zx(t){this._context=t}zx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;default:this._context.lineTo(t,e)}}};var jx=function(t){return new zx(t)};function Rx(t){return t[0]}function Dx(t){return t[1]}var Lx=function(){var t=Rx,e=Dx,n=dx(!0),r=null,o=jx,i=null;function a(a){var l,c,u,s=a.length,f=!1;for(null==r&&(i=o(u=Ho())),l=0;l<=s;++l)!(l<s&&n(c=a[l],l,a))===f&&((f=!f)?i.lineStart():i.lineEnd()),f&&i.point(+t(c,l,a),+e(c,l,a));if(u)return i=null,u+""||null}return a.x=function(e){return arguments.length?(t="function"==typeof e?e:dx(+e),a):t},a.y=function(t){return arguments.length?(e="function"==typeof t?t:dx(+t),a):e},a.defined=function(t){return arguments.length?(n="function"==typeof t?t:dx(!!t),a):n},a.curve=function(t){return arguments.length?(o=t,null!=r&&(i=o(r)),a):o},a.context=function(t){return arguments.length?(null==t?r=i=null:i=o(r=t),a):r},a},Ix=function(){var t=Rx,e=null,n=dx(0),r=Dx,o=dx(!0),i=null,a=jx,l=null;function c(c){var u,s,f,d,p,m=c.length,h=!1,g=new Array(m),b=new Array(m);for(null==i&&(l=a(p=Ho())),u=0;u<=m;++u){if(!(u<m&&o(d=c[u],u,c))===h)if(h=!h)s=u,l.areaStart(),l.lineStart();else{for(l.lineEnd(),l.lineStart(),f=u-1;f>=s;--f)l.point(g[f],b[f]);l.lineEnd(),l.areaEnd()}h&&(g[u]=+t(d,u,c),b[u]=+n(d,u,c),l.point(e?+e(d,u,c):g[u],r?+r(d,u,c):b[u]))}if(p)return l=null,p+""||null}function u(){return Lx().defined(o).curve(a).context(i)}return c.x=function(n){return arguments.length?(t="function"==typeof n?n:dx(+n),e=null,c):t},c.x0=function(e){return arguments.length?(t="function"==typeof e?e:dx(+e),c):t},c.x1=function(t){return arguments.length?(e=null==t?null:"function"==typeof t?t:dx(+t),c):e},c.y=function(t){return arguments.length?(n="function"==typeof t?t:dx(+t),r=null,c):n},c.y0=function(t){return arguments.length?(n="function"==typeof t?t:dx(+t),c):n},c.y1=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:dx(+t),c):r},c.lineX0=c.lineY0=function(){return u().x(t).y(n)},c.lineY1=function(){return u().x(t).y(r)},c.lineX1=function(){return u().x(e).y(n)},c.defined=function(t){return arguments.length?(o="function"==typeof t?t:dx(!!t),c):o},c.curve=function(t){return arguments.length?(a=t,null!=i&&(l=a(i)),c):a},c.context=function(t){return arguments.length?(null==t?i=l=null:l=a(i=t),c):i},c},Ux=function(t,e){return e<t?-1:e>t?1:e>=t?0:NaN},Fx=function(t){return t},Bx=function(){var t=Fx,e=Ux,n=null,r=dx(0),o=dx(kx),i=dx(0);function a(a){var l,c,u,s,f,d=a.length,p=0,m=new Array(d),h=new Array(d),g=+r.apply(this,arguments),b=Math.min(kx,Math.max(-kx,o.apply(this,arguments)-g)),v=Math.min(Math.abs(b)/d,i.apply(this,arguments)),y=v*(b<0?-1:1);for(l=0;l<d;++l)(f=h[m[l]=l]=+t(a[l],l,a))>0&&(p+=f);for(null!=e?m.sort((function(t,n){return e(h[t],h[n])})):null!=n&&m.sort((function(t,e){return n(a[t],a[e])})),l=0,u=p?(b-d*y)/p:0;l<d;++l,g=s)c=m[l],s=g+((f=h[c])>0?f*u:0)+y,h[c]={data:a[c],index:l,value:f,startAngle:g,endAngle:s,padAngle:v};return h}return a.value=function(e){return arguments.length?(t="function"==typeof e?e:dx(+e),a):t},a.sortValues=function(t){return arguments.length?(e=t,n=null,a):e},a.sort=function(t){return arguments.length?(n=t,e=null,a):n},a.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:dx(+t),a):r},a.endAngle=function(t){return arguments.length?(o="function"==typeof t?t:dx(+t),a):o},a.padAngle=function(t){return arguments.length?(i="function"==typeof t?t:dx(+t),a):i},a},qx=Wx(jx);function Hx(t){this._curve=t}function Wx(t){function e(e){return new Hx(t(e))}return e._curve=t,e}function $x(t){var e=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?e(Wx(t)):e()._curve},t}Hx.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,e){this._curve.point(e*Math.sin(t),e*-Math.cos(t))}};var Vx=function(){return $x(Lx().curve(qx))},Yx=function(){var t=Ix().curve(qx),e=t.curve,n=t.lineX0,r=t.lineX1,o=t.lineY0,i=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return $x(n())},delete t.lineX0,t.lineEndAngle=function(){return $x(r())},delete t.lineX1,t.lineInnerRadius=function(){return $x(o())},delete t.lineY0,t.lineOuterRadius=function(){return $x(i())},delete t.lineY1,t.curve=function(t){return arguments.length?e(Wx(t)):e()._curve},t},Gx=function(t,e){return[(e=+e)*Math.cos(t-=Math.PI/2),e*Math.sin(t)]},Qx=Array.prototype.slice;function Xx(t){return t.source}function Kx(t){return t.target}function Jx(t){var e=Xx,n=Kx,r=Rx,o=Dx,i=null;function a(){var a,l=Qx.call(arguments),c=e.apply(this,l),u=n.apply(this,l);if(i||(i=a=Ho()),t(i,+r.apply(this,(l[0]=c,l)),+o.apply(this,l),+r.apply(this,(l[0]=u,l)),+o.apply(this,l)),a)return i=null,a+""||null}return a.source=function(t){return arguments.length?(e=t,a):e},a.target=function(t){return arguments.length?(n=t,a):n},a.x=function(t){return arguments.length?(r="function"==typeof t?t:dx(+t),a):r},a.y=function(t){return arguments.length?(o="function"==typeof t?t:dx(+t),a):o},a.context=function(t){return arguments.length?(i=null==t?null:t,a):i},a}function Zx(t,e,n,r,o){t.moveTo(e,n),t.bezierCurveTo(e=(e+r)/2,n,e,o,r,o)}function tw(t,e,n,r,o){t.moveTo(e,n),t.bezierCurveTo(e,n=(n+o)/2,r,n,r,o)}function ew(t,e,n,r,o){var i=Gx(e,n),a=Gx(e,n=(n+o)/2),l=Gx(r,n),c=Gx(r,o);t.moveTo(i[0],i[1]),t.bezierCurveTo(a[0],a[1],l[0],l[1],c[0],c[1])}function nw(){return Jx(Zx)}function rw(){return Jx(tw)}function ow(){var t=Jx(ew);return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t}var iw={draw:function(t,e){var n=Math.sqrt(e/xx);t.moveTo(n,0),t.arc(0,0,n,0,kx)}},aw={draw:function(t,e){var n=Math.sqrt(e/5)/2;t.moveTo(-3*n,-n),t.lineTo(-n,-n),t.lineTo(-n,-3*n),t.lineTo(n,-3*n),t.lineTo(n,-n),t.lineTo(3*n,-n),t.lineTo(3*n,n),t.lineTo(n,n),t.lineTo(n,3*n),t.lineTo(-n,3*n),t.lineTo(-n,n),t.lineTo(-3*n,n),t.closePath()}},lw=Math.sqrt(1/3),cw=2*lw,uw={draw:function(t,e){var n=Math.sqrt(e/cw),r=n*lw;t.moveTo(0,-n),t.lineTo(r,0),t.lineTo(0,n),t.lineTo(-r,0),t.closePath()}},sw=Math.sin(xx/10)/Math.sin(7*xx/10),fw=Math.sin(kx/10)*sw,dw=-Math.cos(kx/10)*sw,pw={draw:function(t,e){var n=Math.sqrt(.8908130915292852*e),r=fw*n,o=dw*n;t.moveTo(0,-n),t.lineTo(r,o);for(var i=1;i<5;++i){var a=kx*i/5,l=Math.cos(a),c=Math.sin(a);t.lineTo(c*n,-l*n),t.lineTo(l*r-c*o,c*r+l*o)}t.closePath()}},mw={draw:function(t,e){var n=Math.sqrt(e),r=-n/2;t.rect(r,r,n,n)}},hw=Math.sqrt(3),gw={draw:function(t,e){var n=-Math.sqrt(e/(3*hw));t.moveTo(0,2*n),t.lineTo(-hw*n,-n),t.lineTo(hw*n,-n),t.closePath()}},bw=Math.sqrt(3)/2,vw=1/Math.sqrt(12),yw=3*(vw/2+1),xw={draw:function(t,e){var n=Math.sqrt(e/yw),r=n/2,o=n*vw,i=r,a=n*vw+n,l=-i,c=a;t.moveTo(r,o),t.lineTo(i,a),t.lineTo(l,c),t.lineTo(-.5*r-bw*o,bw*r+-.5*o),t.lineTo(-.5*i-bw*a,bw*i+-.5*a),t.lineTo(-.5*l-bw*c,bw*l+-.5*c),t.lineTo(-.5*r+bw*o,-.5*o-bw*r),t.lineTo(-.5*i+bw*a,-.5*a-bw*i),t.lineTo(-.5*l+bw*c,-.5*c-bw*l),t.closePath()}},ww=[iw,aw,uw,mw,pw,gw,xw],kw=function(){var t=dx(iw),e=dx(64),n=null;function r(){var r;if(n||(n=r=Ho()),t.apply(this,arguments).draw(n,+e.apply(this,arguments)),r)return n=null,r+""||null}return r.type=function(e){return arguments.length?(t="function"==typeof e?e:dx(e),r):t},r.size=function(t){return arguments.length?(e="function"==typeof t?t:dx(+t),r):e},r.context=function(t){return arguments.length?(n=null==t?null:t,r):n},r},_w=function(){};function Ew(t,e,n){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+e)/6,(t._y0+4*t._y1+n)/6)}function Sw(t){this._context=t}Sw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:Ew(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:Ew(this,t,e)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e}};var Mw=function(t){return new Sw(t)};function Tw(t){this._context=t}Tw.prototype={areaStart:_w,areaEnd:_w,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._x2=t,this._y2=e;break;case 1:this._point=2,this._x3=t,this._y3=e;break;case 2:this._point=3,this._x4=t,this._y4=e,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+e)/6);break;default:Ew(this,t,e)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e}};var Cw=function(t){return new Tw(t)};function Nw(t){this._context=t}Nw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var n=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+e)/6;this._line?this._context.lineTo(n,r):this._context.moveTo(n,r);break;case 3:this._point=4;default:Ew(this,t,e)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e}};var Pw=function(t){return new Nw(t)};function Aw(t,e){this._basis=new Sw(t),this._beta=e}Aw.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,e=this._y,n=t.length-1;if(n>0)for(var r,o=t[0],i=e[0],a=t[n]-o,l=e[n]-i,c=-1;++c<=n;)r=c/n,this._basis.point(this._beta*t[c]+(1-this._beta)*(o+r*a),this._beta*e[c]+(1-this._beta)*(i+r*l));this._x=this._y=null,this._basis.lineEnd()},point:function(t,e){this._x.push(+t),this._y.push(+e)}};var Ow=function t(e){function n(t){return 1===e?new Sw(t):new Aw(t,e)}return n.beta=function(e){return t(+e)},n}(.85);function zw(t,e,n){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-e),t._y2+t._k*(t._y1-n),t._x2,t._y2)}function jw(t,e){this._context=t,this._k=(1-e)/6}jw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:zw(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2,this._x1=t,this._y1=e;break;case 2:this._point=3;default:zw(this,t,e)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};var Rw=function t(e){function n(t){return new jw(t,e)}return n.tension=function(e){return t(+e)},n}(0);function Dw(t,e){this._context=t,this._k=(1-e)/6}Dw.prototype={areaStart:_w,areaEnd:_w,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._x3=t,this._y3=e;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=e);break;case 2:this._point=3,this._x5=t,this._y5=e;break;default:zw(this,t,e)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};var Lw=function t(e){function n(t){return new Dw(t,e)}return n.tension=function(e){return t(+e)},n}(0);function Iw(t,e){this._context=t,this._k=(1-e)/6}Iw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:zw(this,t,e)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};var Uw=function t(e){function n(t){return new Iw(t,e)}return n.tension=function(e){return t(+e)},n}(0);function Fw(t,e,n){var r=t._x1,o=t._y1,i=t._x2,a=t._y2;if(t._l01_a>1e-12){var l=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,c=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*l-t._x0*t._l12_2a+t._x2*t._l01_2a)/c,o=(o*l-t._y0*t._l12_2a+t._y2*t._l01_2a)/c}if(t._l23_a>1e-12){var u=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,s=3*t._l23_a*(t._l23_a+t._l12_a);i=(i*u+t._x1*t._l23_2a-e*t._l12_2a)/s,a=(a*u+t._y1*t._l23_2a-n*t._l12_2a)/s}t._context.bezierCurveTo(r,o,i,a,t._x2,t._y2)}function Bw(t,e){this._context=t,this._alpha=e}Bw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){if(t=+t,e=+e,this._point){var n=this._x2-t,r=this._y2-e;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;break;case 2:this._point=3;default:Fw(this,t,e)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};var qw=function t(e){function n(t){return e?new Bw(t,e):new jw(t,0)}return n.alpha=function(e){return t(+e)},n}(.5);function Hw(t,e){this._context=t,this._alpha=e}Hw.prototype={areaStart:_w,areaEnd:_w,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,e){if(t=+t,e=+e,this._point){var n=this._x2-t,r=this._y2-e;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=e;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=e);break;case 2:this._point=3,this._x5=t,this._y5=e;break;default:Fw(this,t,e)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};var Ww=function t(e){function n(t){return e?new Hw(t,e):new Dw(t,0)}return n.alpha=function(e){return t(+e)},n}(.5);function $w(t,e){this._context=t,this._alpha=e}$w.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){if(t=+t,e=+e,this._point){var n=this._x2-t,r=this._y2-e;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Fw(this,t,e)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};var Vw=function t(e){function n(t){return e?new $w(t,e):new Iw(t,0)}return n.alpha=function(e){return t(+e)},n}(.5);function Yw(t){this._context=t}Yw.prototype={areaStart:_w,areaEnd:_w,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,e){t=+t,e=+e,this._point?this._context.lineTo(t,e):(this._point=1,this._context.moveTo(t,e))}};var Gw=function(t){return new Yw(t)};function Qw(t){return t<0?-1:1}function Xw(t,e,n){var r=t._x1-t._x0,o=e-t._x1,i=(t._y1-t._y0)/(r||o<0&&-0),a=(n-t._y1)/(o||r<0&&-0),l=(i*o+a*r)/(r+o);return(Qw(i)+Qw(a))*Math.min(Math.abs(i),Math.abs(a),.5*Math.abs(l))||0}function Kw(t,e){var n=t._x1-t._x0;return n?(3*(t._y1-t._y0)/n-e)/2:e}function Jw(t,e,n){var r=t._x0,o=t._y0,i=t._x1,a=t._y1,l=(i-r)/3;t._context.bezierCurveTo(r+l,o+l*e,i-l,a-l*n,i,a)}function Zw(t){this._context=t}function tk(t){this._context=new ek(t)}function ek(t){this._context=t}function nk(t){return new Zw(t)}function rk(t){return new tk(t)}function ok(t){this._context=t}function ik(t){var e,n,r=t.length-1,o=new Array(r),i=new Array(r),a=new Array(r);for(o[0]=0,i[0]=2,a[0]=t[0]+2*t[1],e=1;e<r-1;++e)o[e]=1,i[e]=4,a[e]=4*t[e]+2*t[e+1];for(o[r-1]=2,i[r-1]=7,a[r-1]=8*t[r-1]+t[r],e=1;e<r;++e)n=o[e]/i[e-1],i[e]-=n,a[e]-=n*a[e-1];for(o[r-1]=a[r-1]/i[r-1],e=r-2;e>=0;--e)o[e]=(a[e]-o[e+1])/i[e];for(i[r-1]=(t[r]+o[r-1])/2,e=0;e<r-1;++e)i[e]=2*t[e+1]-o[e+1];return[o,i]}Zw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:Jw(this,this._t0,Kw(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){var n=NaN;if(e=+e,(t=+t)!==this._x1||e!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;break;case 2:this._point=3,Jw(this,Kw(this,n=Xw(this,t,e)),n);break;default:Jw(this,this._t0,n=Xw(this,t,e))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e,this._t0=n}}},(tk.prototype=Object.create(Zw.prototype)).point=function(t,e){Zw.prototype.point.call(this,e,t)},ek.prototype={moveTo:function(t,e){this._context.moveTo(e,t)},closePath:function(){this._context.closePath()},lineTo:function(t,e){this._context.lineTo(e,t)},bezierCurveTo:function(t,e,n,r,o,i){this._context.bezierCurveTo(e,t,r,n,i,o)}},ok.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,e=this._y,n=t.length;if(n)if(this._line?this._context.lineTo(t[0],e[0]):this._context.moveTo(t[0],e[0]),2===n)this._context.lineTo(t[1],e[1]);else for(var r=ik(t),o=ik(e),i=0,a=1;a<n;++i,++a)this._context.bezierCurveTo(r[0][i],o[0][i],r[1][i],o[1][i],t[a],e[a]);(this._line||0!==this._line&&1===n)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,e){this._x.push(+t),this._y.push(+e)}};var ak=function(t){return new ok(t)};function lk(t,e){this._context=t,this._t=e}lk.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,e),this._context.lineTo(t,e);else{var n=this._x*(1-this._t)+t*this._t;this._context.lineTo(n,this._y),this._context.lineTo(n,e)}}this._x=t,this._y=e}};var ck=function(t){return new lk(t,.5)};function uk(t){return new lk(t,0)}function sk(t){return new lk(t,1)}var fk=function(t,e){if((o=t.length)>1)for(var n,r,o,i=1,a=t[e[0]],l=a.length;i<o;++i)for(r=a,a=t[e[i]],n=0;n<l;++n)a[n][1]+=a[n][0]=isNaN(r[n][1])?r[n][0]:r[n][1]},dk=function(t){for(var e=t.length,n=new Array(e);--e>=0;)n[e]=e;return n};function pk(t,e){return t[e]}var mk=function(){var t=dx([]),e=dk,n=fk,r=pk;function o(o){var i,a,l=t.apply(this,arguments),c=o.length,u=l.length,s=new Array(u);for(i=0;i<u;++i){for(var f,d=l[i],p=s[i]=new Array(c),m=0;m<c;++m)p[m]=f=[0,+r(o[m],d,m,o)],f.data=o[m];p.key=d}for(i=0,a=e(s);i<u;++i)s[a[i]].index=i;return n(s,a),s}return o.keys=function(e){return arguments.length?(t="function"==typeof e?e:dx(Qx.call(e)),o):t},o.value=function(t){return arguments.length?(r="function"==typeof t?t:dx(+t),o):r},o.order=function(t){return arguments.length?(e=null==t?dk:"function"==typeof t?t:dx(Qx.call(t)),o):e},o.offset=function(t){return arguments.length?(n=null==t?fk:t,o):n},o},hk=function(t,e){if((r=t.length)>0){for(var n,r,o,i=0,a=t[0].length;i<a;++i){for(o=n=0;n<r;++n)o+=t[n][i][1]||0;if(o)for(n=0;n<r;++n)t[n][i][1]/=o}fk(t,e)}},gk=function(t,e){if((l=t.length)>0)for(var n,r,o,i,a,l,c=0,u=t[e[0]].length;c<u;++c)for(i=a=0,n=0;n<l;++n)(o=(r=t[e[n]][c])[1]-r[0])>0?(r[0]=i,r[1]=i+=o):o<0?(r[1]=a,r[0]=a+=o):(r[0]=0,r[1]=o)},bk=function(t,e){if((n=t.length)>0){for(var n,r=0,o=t[e[0]],i=o.length;r<i;++r){for(var a=0,l=0;a<n;++a)l+=t[a][r][1]||0;o[r][1]+=o[r][0]=-l/2}fk(t,e)}},vk=function(t,e){if((o=t.length)>0&&(r=(n=t[e[0]]).length)>0){for(var n,r,o,i=0,a=1;a<r;++a){for(var l=0,c=0,u=0;l<o;++l){for(var s=t[e[l]],f=s[a][1]||0,d=(f-(s[a-1][1]||0))/2,p=0;p<l;++p){var m=t[e[p]];d+=(m[a][1]||0)-(m[a-1][1]||0)}c+=f,u+=d*f}n[a-1][1]+=n[a-1][0]=i,c&&(i-=u/c)}n[a-1][1]+=n[a-1][0]=i,fk(t,e)}},yk=function(t){var e=t.map(xk);return dk(t).sort((function(t,n){return e[t]-e[n]}))};function xk(t){for(var e,n=-1,r=0,o=t.length,i=-1/0;++n<o;)(e=+t[n][1])>i&&(i=e,r=n);return r}var wk=function(t){var e=t.map(kk);return dk(t).sort((function(t,n){return e[t]-e[n]}))};function kk(t){for(var e,n=0,r=-1,o=t.length;++r<o;)(e=+t[r][1])&&(n+=e);return n}var _k=function(t){return wk(t).reverse()},Ek=function(t){var e,n,r=t.length,o=t.map(kk),i=yk(t),a=0,l=0,c=[],u=[];for(e=0;e<r;++e)n=i[e],a<l?(a+=o[n],c.push(n)):(l+=o[n],u.push(n));return u.reverse().concat(c)},Sk=function(t){return dk(t).reverse()};var Mk=Date.prototype.toISOString?function(t){return t.toISOString()}:Wg("%Y-%m-%dT%H:%M:%S.%LZ");var Tk=+new Date("2000-01-01T00:00:00.000Z")?function(t){var e=new Date(t);return isNaN(e)?null:e}:$g("%Y-%m-%dT%H:%M:%S.%LZ"),Ck=function(t,e,n){var r=new Hn,o=e;return null==e?(r.restart(t,e,n),r):(e=+e,n=null==n?Bn():+n,r.restart((function i(a){a+=o,r.restart(i,o+=e,n),t(a)}),e,n),r)},Nk=function(t){return function(){return t}};function Pk(t){return t[0]}function Ak(t){return t[1]}function Ok(){this._=null}function zk(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function jk(t,e){var n=e,r=e.R,o=n.U;o?o.L===n?o.L=r:o.R=r:t._=r,r.U=o,n.U=r,n.R=r.L,n.R&&(n.R.U=n),r.L=n}function Rk(t,e){var n=e,r=e.L,o=n.U;o?o.L===n?o.L=r:o.R=r:t._=r,r.U=o,n.U=r,n.L=r.R,n.L&&(n.L.U=n),r.R=n}function Dk(t){for(;t.L;)t=t.L;return t}Ok.prototype={constructor:Ok,insert:function(t,e){var n,r,o;if(t){if(e.P=t,e.N=t.N,t.N&&(t.N.P=e),t.N=e,t.R){for(t=t.R;t.L;)t=t.L;t.L=e}else t.R=e;n=t}else this._?(t=Dk(this._),e.P=null,e.N=t,t.P=t.L=e,n=t):(e.P=e.N=null,this._=e,n=null);for(e.L=e.R=null,e.U=n,e.C=!0,t=e;n&&n.C;)n===(r=n.U).L?(o=r.R)&&o.C?(n.C=o.C=!1,r.C=!0,t=r):(t===n.R&&(jk(this,n),n=(t=n).U),n.C=!1,r.C=!0,Rk(this,r)):(o=r.L)&&o.C?(n.C=o.C=!1,r.C=!0,t=r):(t===n.L&&(Rk(this,n),n=(t=n).U),n.C=!1,r.C=!0,jk(this,r)),n=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var e,n,r,o=t.U,i=t.L,a=t.R;if(n=i?a?Dk(a):i:a,o?o.L===t?o.L=n:o.R=n:this._=n,i&&a?(r=n.C,n.C=t.C,n.L=i,i.U=n,n!==a?(o=n.U,n.U=t.U,t=n.R,o.L=t,n.R=a,a.U=n):(n.U=o,o=n,t=n.R)):(r=t.C,t=n),t&&(t.U=o),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===o.L){if((e=o.R).C&&(e.C=!1,o.C=!0,jk(this,o),e=o.R),e.L&&e.L.C||e.R&&e.R.C){e.R&&e.R.C||(e.L.C=!1,e.C=!0,Rk(this,e),e=o.R),e.C=o.C,o.C=e.R.C=!1,jk(this,o),t=this._;break}}else if((e=o.L).C&&(e.C=!1,o.C=!0,Rk(this,o),e=o.L),e.L&&e.L.C||e.R&&e.R.C){e.L&&e.L.C||(e.R.C=!1,e.C=!0,jk(this,e),e=o.L),e.C=o.C,o.C=e.L.C=!1,Rk(this,o),t=this._;break}e.C=!0,t=o,o=o.U}while(!t.C);t&&(t.C=!1)}}};var Lk=Ok;function Ik(t,e,n,r){var o=[null,null],i=c_.push(o)-1;return o.left=t,o.right=e,n&&Fk(o,t,e,n),r&&Fk(o,e,t,r),a_[t.index].halfedges.push(i),a_[e.index].halfedges.push(i),o}function Uk(t,e,n){var r=[e,n];return r.left=t,r}function Fk(t,e,n,r){t[0]||t[1]?t.left===n?t[1]=r:t[0]=r:(t[0]=r,t.left=e,t.right=n)}function Bk(t,e,n,r,o){var i,a=t[0],l=t[1],c=a[0],u=a[1],s=0,f=1,d=l[0]-c,p=l[1]-u;if(i=e-c,d||!(i>0)){if(i/=d,d<0){if(i<s)return;i<f&&(f=i)}else if(d>0){if(i>f)return;i>s&&(s=i)}if(i=r-c,d||!(i<0)){if(i/=d,d<0){if(i>f)return;i>s&&(s=i)}else if(d>0){if(i<s)return;i<f&&(f=i)}if(i=n-u,p||!(i>0)){if(i/=p,p<0){if(i<s)return;i<f&&(f=i)}else if(p>0){if(i>f)return;i>s&&(s=i)}if(i=o-u,p||!(i<0)){if(i/=p,p<0){if(i>f)return;i>s&&(s=i)}else if(p>0){if(i<s)return;i<f&&(f=i)}return!(s>0||f<1)||(s>0&&(t[0]=[c+s*d,u+s*p]),f<1&&(t[1]=[c+f*d,u+f*p]),!0)}}}}}function qk(t,e,n,r,o){var i=t[1];if(i)return!0;var a,l,c=t[0],u=t.left,s=t.right,f=u[0],d=u[1],p=s[0],m=s[1],h=(f+p)/2,g=(d+m)/2;if(m===d){if(h<e||h>=r)return;if(f>p){if(c){if(c[1]>=o)return}else c=[h,n];i=[h,o]}else{if(c){if(c[1]<n)return}else c=[h,o];i=[h,n]}}else if(l=g-(a=(f-p)/(m-d))*h,a<-1||a>1)if(f>p){if(c){if(c[1]>=o)return}else c=[(n-l)/a,n];i=[(o-l)/a,o]}else{if(c){if(c[1]<n)return}else c=[(o-l)/a,o];i=[(n-l)/a,n]}else if(d<m){if(c){if(c[0]>=r)return}else c=[e,a*e+l];i=[r,a*r+l]}else{if(c){if(c[0]<e)return}else c=[r,a*r+l];i=[e,a*e+l]}return t[0]=c,t[1]=i,!0}function Hk(t,e){var n=t.site,r=e.left,o=e.right;return n===o&&(o=r,r=n),o?Math.atan2(o[1]-r[1],o[0]-r[0]):(n===r?(r=e[1],o=e[0]):(r=e[0],o=e[1]),Math.atan2(r[0]-o[0],o[1]-r[1]))}function Wk(t,e){return e[+(e.left!==t.site)]}function $k(t,e){return e[+(e.left===t.site)]}var Vk,Yk=[];function Gk(){zk(this),this.x=this.y=this.arc=this.site=this.cy=null}function Qk(t){var e=t.P,n=t.N;if(e&&n){var r=e.site,o=t.site,i=n.site;if(r!==i){var a=o[0],l=o[1],c=r[0]-a,u=r[1]-l,s=i[0]-a,f=i[1]-l,d=2*(c*f-u*s);if(!(d>=-s_)){var p=c*c+u*u,m=s*s+f*f,h=(f*p-u*m)/d,g=(c*m-s*p)/d,b=Yk.pop()||new Gk;b.arc=t,b.site=o,b.x=h+a,b.y=(b.cy=g+l)+Math.sqrt(h*h+g*g),t.circle=b;for(var v=null,y=l_._;y;)if(b.y<y.y||b.y===y.y&&b.x<=y.x){if(!y.L){v=y.P;break}y=y.L}else{if(!y.R){v=y;break}y=y.R}l_.insert(v,b),v||(Vk=b)}}}}function Xk(t){var e=t.circle;e&&(e.P||(Vk=e.N),l_.remove(e),Yk.push(e),zk(e),t.circle=null)}var Kk=[];function Jk(){zk(this),this.edge=this.site=this.circle=null}function Zk(t){var e=Kk.pop()||new Jk;return e.site=t,e}function t_(t){Xk(t),i_.remove(t),Kk.push(t),zk(t)}function e_(t){var e=t.circle,n=e.x,r=e.cy,o=[n,r],i=t.P,a=t.N,l=[t];t_(t);for(var c=i;c.circle&&Math.abs(n-c.circle.x)<u_&&Math.abs(r-c.circle.cy)<u_;)i=c.P,l.unshift(c),t_(c),c=i;l.unshift(c),Xk(c);for(var u=a;u.circle&&Math.abs(n-u.circle.x)<u_&&Math.abs(r-u.circle.cy)<u_;)a=u.N,l.push(u),t_(u),u=a;l.push(u),Xk(u);var s,f=l.length;for(s=1;s<f;++s)u=l[s],c=l[s-1],Fk(u.edge,c.site,u.site,o);c=l[0],(u=l[f-1]).edge=Ik(c.site,u.site,null,o),Qk(c),Qk(u)}function n_(t){for(var e,n,r,o,i=t[0],a=t[1],l=i_._;l;)if((r=r_(l,a)-i)>u_)l=l.L;else{if(!((o=i-o_(l,a))>u_)){r>-u_?(e=l.P,n=l):o>-u_?(e=l,n=l.N):e=n=l;break}if(!l.R){e=l;break}l=l.R}!function(t){a_[t.index]={site:t,halfedges:[]}}(t);var c=Zk(t);if(i_.insert(e,c),e||n){if(e===n)return Xk(e),n=Zk(e.site),i_.insert(c,n),c.edge=n.edge=Ik(e.site,c.site),Qk(e),void Qk(n);if(n){Xk(e),Xk(n);var u=e.site,s=u[0],f=u[1],d=t[0]-s,p=t[1]-f,m=n.site,h=m[0]-s,g=m[1]-f,b=2*(d*g-p*h),v=d*d+p*p,y=h*h+g*g,x=[(g*v-p*y)/b+s,(d*y-h*v)/b+f];Fk(n.edge,u,m,x),c.edge=Ik(u,t,null,x),n.edge=Ik(t,m,null,x),Qk(e),Qk(n)}else c.edge=Ik(e.site,c.site)}}function r_(t,e){var n=t.site,r=n[0],o=n[1],i=o-e;if(!i)return r;var a=t.P;if(!a)return-1/0;var l=(n=a.site)[0],c=n[1],u=c-e;if(!u)return l;var s=l-r,f=1/i-1/u,d=s/u;return f?(-d+Math.sqrt(d*d-2*f*(s*s/(-2*u)-c+u/2+o-i/2)))/f+r:(r+l)/2}function o_(t,e){var n=t.N;if(n)return r_(n,e);var r=t.site;return r[1]===e?r[0]:1/0}var i_,a_,l_,c_,u_=1e-6,s_=1e-12;function f_(t,e){return e[1]-t[1]||e[0]-t[0]}function d_(t,e){var n,r,o,i=t.sort(f_).pop();for(c_=[],a_=new Array(t.length),i_=new Lk,l_=new Lk;;)if(o=Vk,i&&(!o||i[1]<o.y||i[1]===o.y&&i[0]<o.x))i[0]===n&&i[1]===r||(n_(i),n=i[0],r=i[1]),i=t.pop();else{if(!o)break;e_(o.arc)}if(function(){for(var t,e,n,r,o=0,i=a_.length;o<i;++o)if((t=a_[o])&&(r=(e=t.halfedges).length)){var a=new Array(r),l=new Array(r);for(n=0;n<r;++n)a[n]=n,l[n]=Hk(t,c_[e[n]]);for(a.sort((function(t,e){return l[e]-l[t]})),n=0;n<r;++n)l[n]=e[a[n]];for(n=0;n<r;++n)e[n]=l[n]}}(),e){var a=+e[0][0],l=+e[0][1],c=+e[1][0],u=+e[1][1];!function(t,e,n,r){for(var o,i=c_.length;i--;)qk(o=c_[i],t,e,n,r)&&Bk(o,t,e,n,r)&&(Math.abs(o[0][0]-o[1][0])>u_||Math.abs(o[0][1]-o[1][1])>u_)||delete c_[i]}(a,l,c,u),function(t,e,n,r){var o,i,a,l,c,u,s,f,d,p,m,h,g=a_.length,b=!0;for(o=0;o<g;++o)if(i=a_[o]){for(a=i.site,l=(c=i.halfedges).length;l--;)c_[c[l]]||c.splice(l,1);for(l=0,u=c.length;l<u;)m=(p=$k(i,c_[c[l]]))[0],h=p[1],f=(s=Wk(i,c_[c[++l%u]]))[0],d=s[1],(Math.abs(m-f)>u_||Math.abs(h-d)>u_)&&(c.splice(l,0,c_.push(Uk(a,p,Math.abs(m-t)<u_&&r-h>u_?[t,Math.abs(f-t)<u_?d:r]:Math.abs(h-r)<u_&&n-m>u_?[Math.abs(d-r)<u_?f:n,r]:Math.abs(m-n)<u_&&h-e>u_?[n,Math.abs(f-n)<u_?d:e]:Math.abs(h-e)<u_&&m-t>u_?[Math.abs(d-e)<u_?f:t,e]:null))-1),++u);u&&(b=!1)}if(b){var v,y,x,w=1/0;for(o=0,b=null;o<g;++o)(i=a_[o])&&(x=(v=(a=i.site)[0]-t)*v+(y=a[1]-e)*y)<w&&(w=x,b=i);if(b){var k=[t,e],_=[t,r],E=[n,r],S=[n,e];b.halfedges.push(c_.push(Uk(a=b.site,k,_))-1,c_.push(Uk(a,_,E))-1,c_.push(Uk(a,E,S))-1,c_.push(Uk(a,S,k))-1)}}for(o=0;o<g;++o)(i=a_[o])&&(i.halfedges.length||delete a_[o])}(a,l,c,u)}this.edges=c_,this.cells=a_,i_=l_=c_=a_=null}d_.prototype={constructor:d_,polygons:function(){var t=this.edges;return this.cells.map((function(e){var n=e.halfedges.map((function(n){return Wk(e,t[n])}));return n.data=e.site.data,n}))},triangles:function(){var t=[],e=this.edges;return this.cells.forEach((function(n,r){if(i=(o=n.halfedges).length)for(var o,i,a,l,c,u,s=n.site,f=-1,d=e[o[i-1]],p=d.left===s?d.right:d.left;++f<i;)a=p,p=(d=e[o[f]]).left===s?d.right:d.left,a&&p&&r<a.index&&r<p.index&&(c=a,u=p,((l=s)[0]-u[0])*(c[1]-l[1])-(l[0]-c[0])*(u[1]-l[1])<0)&&t.push([s.data,a.data,p.data])})),t},links:function(){return this.edges.filter((function(t){return t.right})).map((function(t){return{source:t.left.data,target:t.right.data}}))},find:function(t,e,n){for(var r,o,i=this,a=i._found||0,l=i.cells.length;!(o=i.cells[a]);)if(++a>=l)return null;var c=t-o.site[0],u=e-o.site[1],s=c*c+u*u;do{o=i.cells[r=a],a=null,o.halfedges.forEach((function(n){var r=i.edges[n],l=r.left;if(l!==o.site&&l||(l=r.right)){var c=t-l[0],u=e-l[1],f=c*c+u*u;f<s&&(s=f,a=l.index)}}))}while(null!==a);return i._found=r,null==n||s<=n*n?o.site:null}};var p_=function(){var t=Pk,e=Ak,n=null;function r(r){return new d_(r.map((function(n,o){var i=[Math.round(t(n,o,r)/u_)*u_,Math.round(e(n,o,r)/u_)*u_];return i.index=o,i.data=n,i})),n)}return r.polygons=function(t){return r(t).polygons()},r.links=function(t){return r(t).links()},r.triangles=function(t){return r(t).triangles()},r.x=function(e){return arguments.length?(t="function"==typeof e?e:Nk(+e),r):t},r.y=function(t){return arguments.length?(e="function"==typeof t?t:Nk(+t),r):e},r.extent=function(t){return arguments.length?(n=null==t?null:[[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]],r):n&&[[n[0][0],n[0][1]],[n[1][0],n[1][1]]]},r.size=function(t){return arguments.length?(n=null==t?null:[[0,0],[+t[0],+t[1]]],r):n&&[n[1][0]-n[0][0],n[1][1]-n[0][1]]},r},m_=function(t){return function(){return t}};function h_(t,e,n){this.target=t,this.type=e,this.transform=n}function g_(t,e,n){this.k=t,this.x=e,this.y=n}g_.prototype={constructor:g_,scale:function(t){return 1===t?this:new g_(this.k*t,this.x,this.y)},translate:function(t,e){return 0===t&0===e?this:new g_(this.k,this.x+this.k*t,this.y+this.k*e)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var b_=new g_(1,0,0);function v_(t){for(;!t.__zoom;)if(!(t=t.parentNode))return b_;return t.__zoom}function y_(){ce.stopImmediatePropagation()}v_.prototype=g_.prototype;var x_=function(){ce.preventDefault(),ce.stopImmediatePropagation()};function w_(){return!ce.ctrlKey&&!ce.button}function k_(){var t=this;return t instanceof SVGElement?(t=t.ownerSVGElement||t).hasAttribute("viewBox")?[[(t=t.viewBox.baseVal).x,t.y],[t.x+t.width,t.y+t.height]]:[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]:[[0,0],[t.clientWidth,t.clientHeight]]}function __(){return this.__zoom||b_}function E_(){return-ce.deltaY*(1===ce.deltaMode?.05:ce.deltaMode?1:.002)}function S_(){return navigator.maxTouchPoints||"ontouchstart"in this}function M_(t,e,n){var r=t.invertX(e[0][0])-n[0][0],o=t.invertX(e[1][0])-n[1][0],i=t.invertY(e[0][1])-n[0][1],a=t.invertY(e[1][1])-n[1][1];return t.translate(o>r?(r+o)/2:Math.min(0,r)||Math.max(0,o),a>i?(i+a)/2:Math.min(0,i)||Math.max(0,a))}var T_=function(){var t,e,n=w_,r=k_,o=M_,i=E_,a=S_,l=[0,1/0],c=[[-1/0,-1/0],[1/0,1/0]],u=250,s=dm,f=st("start","zoom","end"),d=0;function p(t){t.property("__zoom",__).on("wheel.zoom",x).on("mousedown.zoom",w).on("dblclick.zoom",k).filter(a).on("touchstart.zoom",_).on("touchmove.zoom",E).on("touchend.zoom touchcancel.zoom",S).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function m(t,e){return(e=Math.max(l[0],Math.min(l[1],e)))===t.k?t:new g_(e,t.x,t.y)}function h(t,e,n){var r=e[0]-n[0]*t.k,o=e[1]-n[1]*t.k;return r===t.x&&o===t.y?t:new g_(t.k,r,o)}function g(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function b(t,e,n){t.on("start.zoom",(function(){v(this,arguments).start()})).on("interrupt.zoom end.zoom",(function(){v(this,arguments).end()})).tween("zoom",(function(){var t=this,o=arguments,i=v(t,o),a=r.apply(t,o),l=null==n?g(a):"function"==typeof n?n.apply(t,o):n,c=Math.max(a[1][0]-a[0][0],a[1][1]-a[0][1]),u=t.__zoom,f="function"==typeof e?e.apply(t,o):e,d=s(u.invert(l).concat(c/u.k),f.invert(l).concat(c/f.k));return function(t){if(1===t)t=f;else{var e=d(t),n=c/e[2];t=new g_(n,l[0]-e[0]*n,l[1]-e[1]*n)}i.zoom(null,t)}}))}function v(t,e,n){return!n&&t.__zooming||new y(t,e)}function y(t,e){this.that=t,this.args=e,this.active=0,this.extent=r.apply(t,e),this.taps=0}function x(){if(n.apply(this,arguments)){var t=v(this,arguments),e=this.__zoom,r=Math.max(l[0],Math.min(l[1],e.k*Math.pow(2,i.apply(this,arguments)))),a=On(this);if(t.wheel)t.mouse[0][0]===a[0]&&t.mouse[0][1]===a[1]||(t.mouse[1]=e.invert(t.mouse[0]=a)),clearTimeout(t.wheel);else{if(e.k===r)return;t.mouse=[a,e.invert(a)],ar(this),t.start()}x_(),t.wheel=setTimeout(u,150),t.zoom("mouse",o(h(m(e,r),t.mouse[0],t.mouse[1]),t.extent,c))}function u(){t.wheel=null,t.end()}}function w(){if(!e&&n.apply(this,arguments)){var t=v(this,arguments,!0),r=ke(ce.view).on("mousemove.zoom",u,!0).on("mouseup.zoom",s,!0),i=On(this),a=ce.clientX,l=ce.clientY;Se(ce.view),y_(),t.mouse=[i,this.__zoom.invert(i)],ar(this),t.start()}function u(){if(x_(),!t.moved){var e=ce.clientX-a,n=ce.clientY-l;t.moved=e*e+n*n>d}t.zoom("mouse",o(h(t.that.__zoom,t.mouse[0]=On(t.that),t.mouse[1]),t.extent,c))}function s(){r.on("mousemove.zoom mouseup.zoom",null),Me(ce.view,t.moved),x_(),t.end()}}function k(){if(n.apply(this,arguments)){var t=this.__zoom,e=On(this),i=t.invert(e),a=t.k*(ce.shiftKey?.5:2),l=o(h(m(t,a),e,i),r.apply(this,arguments),c);x_(),u>0?ke(this).transition().duration(u).call(b,l,e):ke(this).call(p.transform,l)}}function _(){if(n.apply(this,arguments)){var e,r,o,i,a=ce.touches,l=a.length,c=v(this,arguments,ce.changedTouches.length===l);for(y_(),r=0;r<l;++r)o=a[r],i=[i=An(this,a,o.identifier),this.__zoom.invert(i),o.identifier],c.touch0?c.touch1||c.touch0[2]===i[2]||(c.touch1=i,c.taps=0):(c.touch0=i,e=!0,c.taps=1+!!t);t&&(t=clearTimeout(t)),e&&(c.taps<2&&(t=setTimeout((function(){t=null}),500)),ar(this),c.start())}}function E(){if(this.__zooming){var e,n,r,i,a=v(this,arguments),l=ce.changedTouches,u=l.length;for(x_(),t&&(t=clearTimeout(t)),a.taps=0,e=0;e<u;++e)n=l[e],r=An(this,l,n.identifier),a.touch0&&a.touch0[2]===n.identifier?a.touch0[0]=r:a.touch1&&a.touch1[2]===n.identifier&&(a.touch1[0]=r);if(n=a.that.__zoom,a.touch1){var s=a.touch0[0],f=a.touch0[1],d=a.touch1[0],p=a.touch1[1],g=(g=d[0]-s[0])*g+(g=d[1]-s[1])*g,b=(b=p[0]-f[0])*b+(b=p[1]-f[1])*b;n=m(n,Math.sqrt(g/b)),r=[(s[0]+d[0])/2,(s[1]+d[1])/2],i=[(f[0]+p[0])/2,(f[1]+p[1])/2]}else{if(!a.touch0)return;r=a.touch0[0],i=a.touch0[1]}a.zoom("touch",o(h(n,r,i),a.extent,c))}}function S(){if(this.__zooming){var t,n,r=v(this,arguments),o=ce.changedTouches,i=o.length;for(y_(),e&&clearTimeout(e),e=setTimeout((function(){e=null}),500),t=0;t<i;++t)n=o[t],r.touch0&&r.touch0[2]===n.identifier?delete r.touch0:r.touch1&&r.touch1[2]===n.identifier&&delete r.touch1;if(r.touch1&&!r.touch0&&(r.touch0=r.touch1,delete r.touch1),r.touch0)r.touch0[1]=this.__zoom.invert(r.touch0[0]);else if(r.end(),2===r.taps){var a=ke(this).on("dblclick.zoom");a&&a.apply(this,arguments)}}}return p.transform=function(t,e,n){var r=t.selection?t.selection():t;r.property("__zoom",__),t!==r?b(t,e,n):r.interrupt().each((function(){v(this,arguments).start().zoom(null,"function"==typeof e?e.apply(this,arguments):e).end()}))},p.scaleBy=function(t,e,n){p.scaleTo(t,(function(){var t=this.__zoom.k,n="function"==typeof e?e.apply(this,arguments):e;return t*n}),n)},p.scaleTo=function(t,e,n){p.transform(t,(function(){var t=r.apply(this,arguments),i=this.__zoom,a=null==n?g(t):"function"==typeof n?n.apply(this,arguments):n,l=i.invert(a),u="function"==typeof e?e.apply(this,arguments):e;return o(h(m(i,u),a,l),t,c)}),n)},p.translateBy=function(t,e,n){p.transform(t,(function(){return o(this.__zoom.translate("function"==typeof e?e.apply(this,arguments):e,"function"==typeof n?n.apply(this,arguments):n),r.apply(this,arguments),c)}))},p.translateTo=function(t,e,n,i){p.transform(t,(function(){var t=r.apply(this,arguments),a=this.__zoom,l=null==i?g(t):"function"==typeof i?i.apply(this,arguments):i;return o(b_.translate(l[0],l[1]).scale(a.k).translate("function"==typeof e?-e.apply(this,arguments):-e,"function"==typeof n?-n.apply(this,arguments):-n),t,c)}),i)},y.prototype={start:function(){return 1==++this.active&&(this.that.__zooming=this,this.emit("start")),this},zoom:function(t,e){return this.mouse&&"mouse"!==t&&(this.mouse[1]=e.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=e.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=e.invert(this.touch1[0])),this.that.__zoom=e,this.emit("zoom"),this},end:function(){return 0==--this.active&&(delete this.that.__zooming,this.emit("end")),this},emit:function(t){me(new h_(p,t,this.that.__zoom),f.apply,f,[t,this.that,this.args])}},p.wheelDelta=function(t){return arguments.length?(i="function"==typeof t?t:m_(+t),p):i},p.filter=function(t){return arguments.length?(n="function"==typeof t?t:m_(!!t),p):n},p.touchable=function(t){return arguments.length?(a="function"==typeof t?t:m_(!!t),p):a},p.extent=function(t){return arguments.length?(r="function"==typeof t?t:m_([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),p):r},p.scaleExtent=function(t){return arguments.length?(l[0]=+t[0],l[1]=+t[1],p):[l[0],l[1]]},p.translateExtent=function(t){return arguments.length?(c[0][0]=+t[0][0],c[1][0]=+t[1][0],c[0][1]=+t[0][1],c[1][1]=+t[1][1],p):[[c[0][0],c[0][1]],[c[1][0],c[1][1]]]},p.constrain=function(t){return arguments.length?(o=t,p):o},p.duration=function(t){return arguments.length?(u=+t,p):u},p.interpolate=function(t){return arguments.length?(s=t,p):s},p.on=function(){var t=f.on.apply(f,arguments);return t===f?p:t},p.clickDistance=function(t){return arguments.length?(d=(t=+t)*t,p):Math.sqrt(d)},p};n.d(e,"version",(function(){return"5.15.0"})),n.d(e,"bisect",(function(){return c})),n.d(e,"bisectRight",(function(){return a})),n.d(e,"bisectLeft",(function(){return l})),n.d(e,"ascending",(function(){return r})),n.d(e,"bisector",(function(){return o})),n.d(e,"cross",(function(){return f})),n.d(e,"descending",(function(){return d})),n.d(e,"deviation",(function(){return h})),n.d(e,"extent",(function(){return g})),n.d(e,"histogram",(function(){return P})),n.d(e,"thresholdFreedmanDiaconis",(function(){return O})),n.d(e,"thresholdScott",(function(){return z})),n.d(e,"thresholdSturges",(function(){return N})),n.d(e,"max",(function(){return j})),n.d(e,"mean",(function(){return R})),n.d(e,"median",(function(){return D})),n.d(e,"merge",(function(){return L})),n.d(e,"min",(function(){return I})),n.d(e,"pairs",(function(){return u})),n.d(e,"permute",(function(){return U})),n.d(e,"quantile",(function(){return A})),n.d(e,"range",(function(){return k})),n.d(e,"scan",(function(){return F})),n.d(e,"shuffle",(function(){return B})),n.d(e,"sum",(function(){return q})),n.d(e,"ticks",(function(){return M})),n.d(e,"tickIncrement",(function(){return T})),n.d(e,"tickStep",(function(){return C})),n.d(e,"transpose",(function(){return H})),n.d(e,"variance",(function(){return m})),n.d(e,"zip",(function(){return $})),n.d(e,"axisTop",(function(){return tt})),n.d(e,"axisRight",(function(){return et})),n.d(e,"axisBottom",(function(){return nt})),n.d(e,"axisLeft",(function(){return rt})),n.d(e,"brush",(function(){return Mo})),n.d(e,"brushX",(function(){return Eo})),n.d(e,"brushY",(function(){return So})),n.d(e,"brushSelection",(function(){return _o})),n.d(e,"chord",(function(){return Ro})),n.d(e,"ribbon",(function(){return Qo})),n.d(e,"nest",(function(){return Zo})),n.d(e,"set",(function(){return li})),n.d(e,"map",(function(){return Jo})),n.d(e,"keys",(function(){return ci})),n.d(e,"values",(function(){return ui})),n.d(e,"entries",(function(){return si})),n.d(e,"color",(function(){return He})),n.d(e,"rgb",(function(){return Ye})),n.d(e,"hsl",(function(){return tn})),n.d(e,"lab",(function(){return hi})),n.d(e,"hcl",(function(){return _i})),n.d(e,"lch",(function(){return ki})),n.d(e,"gray",(function(){return mi})),n.d(e,"cubehelix",(function(){return Ai})),n.d(e,"contours",(function(){return Bi})),n.d(e,"contourDensity",(function(){return Yi})),n.d(e,"dispatch",(function(){return st})),n.d(e,"drag",(function(){return ta})),n.d(e,"dragDisable",(function(){return Se})),n.d(e,"dragEnable",(function(){return Me})),n.d(e,"dsvFormat",(function(){return la})),n.d(e,"csvParse",(function(){return ua})),n.d(e,"csvParseRows",(function(){return sa})),n.d(e,"csvFormat",(function(){return fa})),n.d(e,"csvFormatBody",(function(){return da})),n.d(e,"csvFormatRows",(function(){return pa})),n.d(e,"csvFormatRow",(function(){return ma})),n.d(e,"csvFormatValue",(function(){return ha})),n.d(e,"tsvParse",(function(){return ba})),n.d(e,"tsvParseRows",(function(){return va})),n.d(e,"tsvFormat",(function(){return ya})),n.d(e,"tsvFormatBody",(function(){return xa})),n.d(e,"tsvFormatRows",(function(){return wa})),n.d(e,"tsvFormatRow",(function(){return ka})),n.d(e,"tsvFormatValue",(function(){return _a})),n.d(e,"autoType",(function(){return Ea})),n.d(e,"easeLinear",(function(){return Ma})),n.d(e,"easeQuad",(function(){return Na})),n.d(e,"easeQuadIn",(function(){return Ta})),n.d(e,"easeQuadOut",(function(){return Ca})),n.d(e,"easeQuadInOut",(function(){return Na})),n.d(e,"easeCubic",(function(){return Vr})),n.d(e,"easeCubicIn",(function(){return Wr})),n.d(e,"easeCubicOut",(function(){return $r})),n.d(e,"easeCubicInOut",(function(){return Vr})),n.d(e,"easePoly",(function(){return Oa})),n.d(e,"easePolyIn",(function(){return Pa})),n.d(e,"easePolyOut",(function(){return Aa})),n.d(e,"easePolyInOut",(function(){return Oa})),n.d(e,"easeSin",(function(){return La})),n.d(e,"easeSinIn",(function(){return Ra})),n.d(e,"easeSinOut",(function(){return Da})),n.d(e,"easeSinInOut",(function(){return La})),n.d(e,"easeExp",(function(){return Fa})),n.d(e,"easeExpIn",(function(){return Ia})),n.d(e,"easeExpOut",(function(){return Ua})),n.d(e,"easeExpInOut",(function(){return Fa})),n.d(e,"easeCircle",(function(){return Ha})),n.d(e,"easeCircleIn",(function(){return Ba})),n.d(e,"easeCircleOut",(function(){return qa})),n.d(e,"easeCircleInOut",(function(){return Ha})),n.d(e,"easeBounce",(function(){return $a})),n.d(e,"easeBounceIn",(function(){return Wa})),n.d(e,"easeBounceOut",(function(){return $a})),n.d(e,"easeBounceInOut",(function(){return Va})),n.d(e,"easeBack",(function(){return Qa})),n.d(e,"easeBackIn",(function(){return Ya})),n.d(e,"easeBackOut",(function(){return Ga})),n.d(e,"easeBackInOut",(function(){return Qa})),n.d(e,"easeElastic",(function(){return Ja})),n.d(e,"easeElasticIn",(function(){return Ka})),n.d(e,"easeElasticOut",(function(){return Ja})),n.d(e,"easeElasticInOut",(function(){return Za})),n.d(e,"blob",(function(){return el})),n.d(e,"buffer",(function(){return rl})),n.d(e,"dsv",(function(){return ll})),n.d(e,"csv",(function(){return cl})),n.d(e,"tsv",(function(){return ul})),n.d(e,"image",(function(){return sl})),n.d(e,"json",(function(){return dl})),n.d(e,"text",(function(){return il})),n.d(e,"xml",(function(){return ml})),n.d(e,"html",(function(){return hl})),n.d(e,"svg",(function(){return gl})),n.d(e,"forceCenter",(function(){return bl})),n.d(e,"forceCollide",(function(){return Pl})),n.d(e,"forceLink",(function(){return zl})),n.d(e,"forceManyBody",(function(){return Il})),n.d(e,"forceRadial",(function(){return Ul})),n.d(e,"forceSimulation",(function(){return Ll})),n.d(e,"forceX",(function(){return Fl})),n.d(e,"forceY",(function(){return Bl})),n.d(e,"formatDefaultLocale",(function(){return rc})),n.d(e,"format",(function(){return Ql})),n.d(e,"formatPrefix",(function(){return Xl})),n.d(e,"formatLocale",(function(){return nc})),n.d(e,"formatSpecifier",(function(){return $l})),n.d(e,"FormatSpecifier",(function(){return Vl})),n.d(e,"precisionFixed",(function(){return oc})),n.d(e,"precisionPrefix",(function(){return ic})),n.d(e,"precisionRound",(function(){return ac})),n.d(e,"geoArea",(function(){return Kc})),n.d(e,"geoBounds",(function(){return Hu})),n.d(e,"geoCentroid",(function(){return es})),n.d(e,"geoCircle",(function(){return ds})),n.d(e,"geoClipAntimeridian",(function(){return Es})),n.d(e,"geoClipCircle",(function(){return Ss})),n.d(e,"geoClipExtent",(function(){return Ps})),n.d(e,"geoClipRectangle",(function(){return Ms})),n.d(e,"geoContains",(function(){return Gs})),n.d(e,"geoDistance",(function(){return Us})),n.d(e,"geoGraticule",(function(){return Ks})),n.d(e,"geoGraticule10",(function(){return Js})),n.d(e,"geoInterpolate",(function(){return rf})),n.d(e,"geoLength",(function(){return Ds})),n.d(e,"geoPath",(function(){return nd})),n.d(e,"geoAlbers",(function(){return wd})),n.d(e,"geoAlbersUsa",(function(){return kd})),n.d(e,"geoAzimuthalEqualArea",(function(){return Md})),n.d(e,"geoAzimuthalEqualAreaRaw",(function(){return Sd})),n.d(e,"geoAzimuthalEquidistant",(function(){return Cd})),n.d(e,"geoAzimuthalEquidistantRaw",(function(){return Td})),n.d(e,"geoConicConformal",(function(){return jd})),n.d(e,"geoConicConformalRaw",(function(){return zd})),n.d(e,"geoConicEqualArea",(function(){return xd})),n.d(e,"geoConicEqualAreaRaw",(function(){return yd})),n.d(e,"geoConicEquidistant",(function(){return Id})),n.d(e,"geoConicEquidistantRaw",(function(){return Ld})),n.d(e,"geoEqualEarth",(function(){return $d})),n.d(e,"geoEqualEarthRaw",(function(){return Wd})),n.d(e,"geoEquirectangular",(function(){return Dd})),n.d(e,"geoEquirectangularRaw",(function(){return Rd})),n.d(e,"geoGnomonic",(function(){return Yd})),n.d(e,"geoGnomonicRaw",(function(){return Vd})),n.d(e,"geoIdentity",(function(){return Qd})),n.d(e,"geoProjection",(function(){return gd})),n.d(e,"geoProjectionMutator",(function(){return bd})),n.d(e,"geoMercator",(function(){return Pd})),n.d(e,"geoMercatorRaw",(function(){return Nd})),n.d(e,"geoNaturalEarth1",(function(){return Kd})),n.d(e,"geoNaturalEarth1Raw",(function(){return Xd})),n.d(e,"geoOrthographic",(function(){return Zd})),n.d(e,"geoOrthographicRaw",(function(){return Jd})),n.d(e,"geoStereographic",(function(){return ep})),n.d(e,"geoStereographicRaw",(function(){return tp})),n.d(e,"geoTransverseMercator",(function(){return rp})),n.d(e,"geoTransverseMercatorRaw",(function(){return np})),n.d(e,"geoRotation",(function(){return us})),n.d(e,"geoStream",(function(){return Hc})),n.d(e,"geoTransform",(function(){return rd})),n.d(e,"cluster",(function(){return lp})),n.d(e,"hierarchy",(function(){return up})),n.d(e,"pack",(function(){return jp})),n.d(e,"packSiblings",(function(){return Cp})),n.d(e,"packEnclose",(function(){return hp})),n.d(e,"partition",(function(){return Fp})),n.d(e,"stratify",(function(){return $p})),n.d(e,"tree",(function(){return Jp})),n.d(e,"treemap",(function(){return rm})),n.d(e,"treemapBinary",(function(){return om})),n.d(e,"treemapDice",(function(){return Up})),n.d(e,"treemapSlice",(function(){return Zp})),n.d(e,"treemapSliceDice",(function(){return im})),n.d(e,"treemapSquarify",(function(){return nm})),n.d(e,"treemapResquarify",(function(){return am})),n.d(e,"interpolate",(function(){return Cn})),n.d(e,"interpolateArray",(function(){return vn})),n.d(e,"interpolateBasis",(function(){return on})),n.d(e,"interpolateBasisClosed",(function(){return an})),n.d(e,"interpolateDate",(function(){return xn})),n.d(e,"interpolateDiscrete",(function(){return lm})),n.d(e,"interpolateHue",(function(){return cm})),n.d(e,"interpolateNumber",(function(){return wn})),n.d(e,"interpolateNumberArray",(function(){return gn})),n.d(e,"interpolateObject",(function(){return kn})),n.d(e,"interpolateRound",(function(){return um})),n.d(e,"interpolateString",(function(){return Tn})),n.d(e,"interpolateTransformCss",(function(){return fr})),n.d(e,"interpolateTransformSvg",(function(){return dr})),n.d(e,"interpolateZoom",(function(){return dm})),n.d(e,"interpolateRgb",(function(){return dn})),n.d(e,"interpolateRgbBasis",(function(){return mn})),n.d(e,"interpolateRgbBasisClosed",(function(){return hn})),n.d(e,"interpolateHsl",(function(){return mm})),n.d(e,"interpolateHslLong",(function(){return hm})),n.d(e,"interpolateLab",(function(){return gm})),n.d(e,"interpolateHcl",(function(){return vm})),n.d(e,"interpolateHclLong",(function(){return ym})),n.d(e,"interpolateCubehelix",(function(){return wm})),n.d(e,"interpolateCubehelixLong",(function(){return km})),n.d(e,"piecewise",(function(){return _m})),n.d(e,"quantize",(function(){return Em})),n.d(e,"path",(function(){return Ho})),n.d(e,"polygonArea",(function(){return Sm})),n.d(e,"polygonCentroid",(function(){return Mm})),n.d(e,"polygonHull",(function(){return Nm})),n.d(e,"polygonContains",(function(){return Pm})),n.d(e,"polygonLength",(function(){return Am})),n.d(e,"quadtree",(function(){return El})),n.d(e,"randomUniform",(function(){return zm})),n.d(e,"randomNormal",(function(){return jm})),n.d(e,"randomLogNormal",(function(){return Rm})),n.d(e,"randomBates",(function(){return Lm})),n.d(e,"randomIrwinHall",(function(){return Dm})),n.d(e,"randomExponential",(function(){return Im})),n.d(e,"scaleBand",(function(){return Vm})),n.d(e,"scalePoint",(function(){return Gm})),n.d(e,"scaleIdentity",(function(){return ch})),n.d(e,"scaleLinear",(function(){return lh})),n.d(e,"scaleLog",(function(){return bh})),n.d(e,"scaleSymlog",(function(){return wh})),n.d(e,"scaleOrdinal",(function(){return $m})),n.d(e,"scaleImplicit",(function(){return Wm})),n.d(e,"scalePow",(function(){return Mh})),n.d(e,"scaleSqrt",(function(){return Th})),n.d(e,"scaleQuantile",(function(){return Ch})),n.d(e,"scaleQuantize",(function(){return Nh})),n.d(e,"scaleThreshold",(function(){return Ph})),n.d(e,"scaleTime",(function(){return lv})),n.d(e,"scaleUtc",(function(){return bv})),n.d(e,"scaleSequential",(function(){return xv})),n.d(e,"scaleSequentialLog",(function(){return wv})),n.d(e,"scaleSequentialPow",(function(){return _v})),n.d(e,"scaleSequentialSqrt",(function(){return Ev})),n.d(e,"scaleSequentialSymlog",(function(){return kv})),n.d(e,"scaleSequentialQuantile",(function(){return Sv})),n.d(e,"scaleDiverging",(function(){return Tv})),n.d(e,"scaleDivergingLog",(function(){return Cv})),n.d(e,"scaleDivergingPow",(function(){return Pv})),n.d(e,"scaleDivergingSqrt",(function(){return Av})),n.d(e,"scaleDivergingSymlog",(function(){return Nv})),n.d(e,"tickFormat",(function(){return ih})),n.d(e,"schemeCategory10",(function(){return zv})),n.d(e,"schemeAccent",(function(){return jv})),n.d(e,"schemeDark2",(function(){return Rv})),n.d(e,"schemePaired",(function(){return Dv})),n.d(e,"schemePastel1",(function(){return Lv})),n.d(e,"schemePastel2",(function(){return Iv})),n.d(e,"schemeSet1",(function(){return Uv})),n.d(e,"schemeSet2",(function(){return Fv})),n.d(e,"schemeSet3",(function(){return Bv})),n.d(e,"schemeTableau10",(function(){return qv})),n.d(e,"interpolateBrBG",(function(){return $v})),n.d(e,"schemeBrBG",(function(){return Wv})),n.d(e,"interpolatePRGn",(function(){return Yv})),n.d(e,"schemePRGn",(function(){return Vv})),n.d(e,"interpolatePiYG",(function(){return Qv})),n.d(e,"schemePiYG",(function(){return Gv})),n.d(e,"interpolatePuOr",(function(){return Kv})),n.d(e,"schemePuOr",(function(){return Xv})),n.d(e,"interpolateRdBu",(function(){return Zv})),n.d(e,"schemeRdBu",(function(){return Jv})),n.d(e,"interpolateRdGy",(function(){return ey})),n.d(e,"schemeRdGy",(function(){return ty})),n.d(e,"interpolateRdYlBu",(function(){return ry})),n.d(e,"schemeRdYlBu",(function(){return ny})),n.d(e,"interpolateRdYlGn",(function(){return iy})),n.d(e,"schemeRdYlGn",(function(){return oy})),n.d(e,"interpolateSpectral",(function(){return ly})),n.d(e,"schemeSpectral",(function(){return ay})),n.d(e,"interpolateBuGn",(function(){return uy})),n.d(e,"schemeBuGn",(function(){return cy})),n.d(e,"interpolateBuPu",(function(){return fy})),n.d(e,"schemeBuPu",(function(){return sy})),n.d(e,"interpolateGnBu",(function(){return py})),n.d(e,"schemeGnBu",(function(){return dy})),n.d(e,"interpolateOrRd",(function(){return hy})),n.d(e,"schemeOrRd",(function(){return my})),n.d(e,"interpolatePuBuGn",(function(){return by})),n.d(e,"schemePuBuGn",(function(){return gy})),n.d(e,"interpolatePuBu",(function(){return yy})),n.d(e,"schemePuBu",(function(){return vy})),n.d(e,"interpolatePuRd",(function(){return wy})),n.d(e,"schemePuRd",(function(){return xy})),n.d(e,"interpolateRdPu",(function(){return _y})),n.d(e,"schemeRdPu",(function(){return ky})),n.d(e,"interpolateYlGnBu",(function(){return Sy})),n.d(e,"schemeYlGnBu",(function(){return Ey})),n.d(e,"interpolateYlGn",(function(){return Ty})),n.d(e,"schemeYlGn",(function(){return My})),n.d(e,"interpolateYlOrBr",(function(){return Ny})),n.d(e,"schemeYlOrBr",(function(){return Cy})),n.d(e,"interpolateYlOrRd",(function(){return Ay})),n.d(e,"schemeYlOrRd",(function(){return Py})),n.d(e,"interpolateBlues",(function(){return zy})),n.d(e,"schemeBlues",(function(){return Oy})),n.d(e,"interpolateGreens",(function(){return Ry})),n.d(e,"schemeGreens",(function(){return jy})),n.d(e,"interpolateGreys",(function(){return Ly})),n.d(e,"schemeGreys",(function(){return Dy})),n.d(e,"interpolatePurples",(function(){return Uy})),n.d(e,"schemePurples",(function(){return Iy})),n.d(e,"interpolateReds",(function(){return By})),n.d(e,"schemeReds",(function(){return Fy})),n.d(e,"interpolateOranges",(function(){return Hy})),n.d(e,"schemeOranges",(function(){return qy})),n.d(e,"interpolateCividis",(function(){return Wy})),n.d(e,"interpolateCubehelixDefault",(function(){return $y})),n.d(e,"interpolateRainbow",(function(){return Qy})),n.d(e,"interpolateWarm",(function(){return Vy})),n.d(e,"interpolateCool",(function(){return Yy})),n.d(e,"interpolateSinebow",(function(){return Zy})),n.d(e,"interpolateTurbo",(function(){return tx})),n.d(e,"interpolateViridis",(function(){return nx})),n.d(e,"interpolateMagma",(function(){return rx})),n.d(e,"interpolateInferno",(function(){return ox})),n.d(e,"interpolatePlasma",(function(){return ix})),n.d(e,"create",(function(){return ax})),n.d(e,"creator",(function(){return ne})),n.d(e,"local",(function(){return cx})),n.d(e,"matcher",(function(){return ht})),n.d(e,"mouse",(function(){return On})),n.d(e,"namespace",(function(){return _t})),n.d(e,"namespaces",(function(){return kt})),n.d(e,"clientPoint",(function(){return Pn})),n.d(e,"select",(function(){return ke})),n.d(e,"selectAll",(function(){return sx})),n.d(e,"selection",(function(){return we})),n.d(e,"selector",(function(){return dt})),n.d(e,"selectorAll",(function(){return mt})),n.d(e,"style",(function(){return jt})),n.d(e,"touch",(function(){return An})),n.d(e,"touches",(function(){return fx})),n.d(e,"window",(function(){return Pt})),n.d(e,"event",(function(){return ce})),n.d(e,"customEvent",(function(){return me})),n.d(e,"arc",(function(){return Ox})),n.d(e,"area",(function(){return Ix})),n.d(e,"line",(function(){return Lx})),n.d(e,"pie",(function(){return Bx})),n.d(e,"areaRadial",(function(){return Yx})),n.d(e,"radialArea",(function(){return Yx})),n.d(e,"lineRadial",(function(){return Vx})),n.d(e,"radialLine",(function(){return Vx})),n.d(e,"pointRadial",(function(){return Gx})),n.d(e,"linkHorizontal",(function(){return nw})),n.d(e,"linkVertical",(function(){return rw})),n.d(e,"linkRadial",(function(){return ow})),n.d(e,"symbol",(function(){return kw})),n.d(e,"symbols",(function(){return ww})),n.d(e,"symbolCircle",(function(){return iw})),n.d(e,"symbolCross",(function(){return aw})),n.d(e,"symbolDiamond",(function(){return uw})),n.d(e,"symbolSquare",(function(){return mw})),n.d(e,"symbolStar",(function(){return pw})),n.d(e,"symbolTriangle",(function(){return gw})),n.d(e,"symbolWye",(function(){return xw})),n.d(e,"curveBasisClosed",(function(){return Cw})),n.d(e,"curveBasisOpen",(function(){return Pw})),n.d(e,"curveBasis",(function(){return Mw})),n.d(e,"curveBundle",(function(){return Ow})),n.d(e,"curveCardinalClosed",(function(){return Lw})),n.d(e,"curveCardinalOpen",(function(){return Uw})),n.d(e,"curveCardinal",(function(){return Rw})),n.d(e,"curveCatmullRomClosed",(function(){return Ww})),n.d(e,"curveCatmullRomOpen",(function(){return Vw})),n.d(e,"curveCatmullRom",(function(){return qw})),n.d(e,"curveLinearClosed",(function(){return Gw})),n.d(e,"curveLinear",(function(){return jx})),n.d(e,"curveMonotoneX",(function(){return nk})),n.d(e,"curveMonotoneY",(function(){return rk})),n.d(e,"curveNatural",(function(){return ak})),n.d(e,"curveStep",(function(){return ck})),n.d(e,"curveStepAfter",(function(){return sk})),n.d(e,"curveStepBefore",(function(){return uk})),n.d(e,"stack",(function(){return mk})),n.d(e,"stackOffsetExpand",(function(){return hk})),n.d(e,"stackOffsetDiverging",(function(){return gk})),n.d(e,"stackOffsetNone",(function(){return fk})),n.d(e,"stackOffsetSilhouette",(function(){return bk})),n.d(e,"stackOffsetWiggle",(function(){return vk})),n.d(e,"stackOrderAppearance",(function(){return yk})),n.d(e,"stackOrderAscending",(function(){return wk})),n.d(e,"stackOrderDescending",(function(){return _k})),n.d(e,"stackOrderInsideOut",(function(){return Ek})),n.d(e,"stackOrderNone",(function(){return dk})),n.d(e,"stackOrderReverse",(function(){return Sk})),n.d(e,"timeInterval",(function(){return zh})),n.d(e,"timeMillisecond",(function(){return mg})),n.d(e,"timeMilliseconds",(function(){return hg})),n.d(e,"utcMillisecond",(function(){return mg})),n.d(e,"utcMilliseconds",(function(){return hg})),n.d(e,"timeSecond",(function(){return fg})),n.d(e,"timeSeconds",(function(){return dg})),n.d(e,"utcSecond",(function(){return fg})),n.d(e,"utcSeconds",(function(){return dg})),n.d(e,"timeMinute",(function(){return cg})),n.d(e,"timeMinutes",(function(){return ug})),n.d(e,"timeHour",(function(){return ig})),n.d(e,"timeHours",(function(){return ag})),n.d(e,"timeDay",(function(){return ng})),n.d(e,"timeDays",(function(){return rg})),n.d(e,"timeWeek",(function(){return Bh})),n.d(e,"timeWeeks",(function(){return Gh})),n.d(e,"timeSunday",(function(){return Bh})),n.d(e,"timeSundays",(function(){return Gh})),n.d(e,"timeMonday",(function(){return qh})),n.d(e,"timeMondays",(function(){return Qh})),n.d(e,"timeTuesday",(function(){return Hh})),n.d(e,"timeTuesdays",(function(){return Xh})),n.d(e,"timeWednesday",(function(){return Wh})),n.d(e,"timeWednesdays",(function(){return Kh})),n.d(e,"timeThursday",(function(){return $h})),n.d(e,"timeThursdays",(function(){return Jh})),n.d(e,"timeFriday",(function(){return Vh})),n.d(e,"timeFridays",(function(){return Zh})),n.d(e,"timeSaturday",(function(){return Yh})),n.d(e,"timeSaturdays",(function(){return tg})),n.d(e,"timeMonth",(function(){return Ih})),n.d(e,"timeMonths",(function(){return Uh})),n.d(e,"timeYear",(function(){return Rh})),n.d(e,"timeYears",(function(){return Dh})),n.d(e,"utcMinute",(function(){return hv})),n.d(e,"utcMinutes",(function(){return gv})),n.d(e,"utcHour",(function(){return dv})),n.d(e,"utcHours",(function(){return pv})),n.d(e,"utcDay",(function(){return Og})),n.d(e,"utcDays",(function(){return zg})),n.d(e,"utcWeek",(function(){return bg})),n.d(e,"utcWeeks",(function(){return Eg})),n.d(e,"utcSunday",(function(){return bg})),n.d(e,"utcSundays",(function(){return Eg})),n.d(e,"utcMonday",(function(){return vg})),n.d(e,"utcMondays",(function(){return Sg})),n.d(e,"utcTuesday",(function(){return yg})),n.d(e,"utcTuesdays",(function(){return Mg})),n.d(e,"utcWednesday",(function(){return xg})),n.d(e,"utcWednesdays",(function(){return Tg})),n.d(e,"utcThursday",(function(){return wg})),n.d(e,"utcThursdays",(function(){return Cg})),n.d(e,"utcFriday",(function(){return kg})),n.d(e,"utcFridays",(function(){return Ng})),n.d(e,"utcSaturday",(function(){return _g})),n.d(e,"utcSaturdays",(function(){return Pg})),n.d(e,"utcMonth",(function(){return uv})),n.d(e,"utcMonths",(function(){return sv})),n.d(e,"utcYear",(function(){return Rg})),n.d(e,"utcYears",(function(){return Dg})),n.d(e,"timeFormatDefaultLocale",(function(){return rv})),n.d(e,"timeFormat",(function(){return qg})),n.d(e,"timeParse",(function(){return Hg})),n.d(e,"utcFormat",(function(){return Wg})),n.d(e,"utcParse",(function(){return $g})),n.d(e,"timeFormatLocale",(function(){return Fg})),n.d(e,"isoFormat",(function(){return Mk})),n.d(e,"isoParse",(function(){return Tk})),n.d(e,"now",(function(){return Bn})),n.d(e,"timer",(function(){return Wn})),n.d(e,"timerFlush",(function(){return $n})),n.d(e,"timeout",(function(){return Qn})),n.d(e,"interval",(function(){return Ck})),n.d(e,"transition",(function(){return Br})),n.d(e,"active",(function(){return Xr})),n.d(e,"interrupt",(function(){return ar})),n.d(e,"voronoi",(function(){return p_})),n.d(e,"zoom",(function(){return T_})),n.d(e,"zoomTransform",(function(){return v_})),n.d(e,"zoomIdentity",(function(){return b_}))},function(t,e,n){"use strict";var r=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.default=t,e},o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var i=n(34),a=r(n(0));n(5);var l=o(n(45));e.default=function(t){var e=[],n=[],r=[],o=a.default.createElement("div",null),c=a.useState([]),u=c[0],s=c[1],f=a.useState(!1),d=f[0],p=f[1];var m=a.useRef();return a.useEffect((function(){p(!1),s([]);var o=function(r){var o=0;e.push(r),t.dataCat[r].forEach((function(t){o+=t.timing[1]/1e9})),n.push(o/t.dataCat[r].length)};for(var a in t.dataCat)o(a);var l=i.select(m.current),c=1.5*Math.max.apply(Math,n),u=document.getElementById("chartArea"),f={yheight:u.clientHeight,xwidth:u.clientWidth};window.addEventListener("resize",(function(){f.yheight=u.clientHeight,f.xwidth=u.clientWidth,d.range([0,f.xwidth]),l.select(".y-axis").style("transform","translateX("+f.xwidth+"px)").call(x),y=i.axisBottom(d).ticks(n.length+1),l.select(".x-axis").call(y),l.selectAll(".bar").attr("x",(function(t,e){return d(e)})).attr("width",d.bandwidth())}));var d=i.scaleBand().domain(n.map((function(t,e){return e}))).range([0,f.xwidth]).padding(.5),h=i.scaleLinear().domain([0,c]).range([300,0]),g=i.scaleLinear().domain([.2*c,c]).range(["blue","red"]).clamp(!0),b=l.append("defs").append("filter").attr("id","glow");b.append("feGaussianBlur").attr("stdDeviation","3.5").attr("result","coloredBlur");var v=b.append("feMerge");v.append("feMergeNode").attr("in","coloredBlur"),v.append("feMergeNode").attr("in","SourceGraphic");var y=i.axisBottom(d).ticks(n.length);l.select(".x-axis").style("transform","translateY(300px)").call(y).style("filter","url(#glow)");var x=i.axisRight(h);l.select(".y-axis").style("transform","translateX("+f.xwidth+"px)").style("filter","url(#glow)").call(x),0!==n.length&&l.select(".y-axis").append("text").attr("class","yaxislabel").attr("transform","rotate(90)").attr("y",20).attr("dy","-3em").attr("x","3em").style("text-anchor","start").style("fill","white").attr("font-size","20px").text("Avg. Response Time(s)"),l.selectAll(".bar").data(n).join("rect").attr("class","bar").style("transform","scale(1, -1)").attr("x",(function(t,e){return d(e)})).attr("y",-300).attr("width",d.bandwidth()).on("mouseenter",(function(t,n){l.selectAll(".tooltip").append("div").data([t]).join((function(e){return e.append("text").attr("y",h(t)-50)})).attr("class","tooltip").text(""+e[n]).attr("x",d(n)+d.bandwidth()/2).attr("text-anchor","middle").transition().attr("y",h(t)-80).style("opacity",1)})).on("mouseleave",(function(){return l.select(".tooltip").remove()})).on("click",(function(t,n){var o;o=""+e[n],r.includes(o)?(r=[],s([]),p(!1)):((r=[]).push(o),s([]),s([o]),p(!0))})).transition().attr("fill",g).attr("height",(function(t){return 350-h(t)}))}),[t.dataCat]),!0===d&&(o=a.default.createElement(l.default,{key:"lineGraph",timeData:t.dataCat,selectedQueries:u})),a.default.createElement(a.default.Fragment,null,a.default.createElement("svg",{ref:m},a.default.createElement("g",{className:"x-axis"}),a.default.createElement("g",{className:"y-axis"})),a.default.createElement("div",null,o))}},function(t,e,n){"use strict";var r=n(25),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function c(t){return r.isMemo(t)?a:l[t.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=a;var u=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;t.exports=function t(e,n,r){if("string"!=typeof n){if(m){var o=p(n);o&&o!==m&&t(e,o,r)}var a=s(n);f&&(a=a.concat(f(n)));for(var l=c(e),h=c(n),g=0;g<a.length;++g){var b=a[g];if(!(i[b]||r&&r[b]||h&&h[b]||l&&l[b])){var v=d(n,b);try{u(e,b,v)}catch(t){}}}}return e}},function(t,e){t.exports=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}},function(t,e,n){var r=n(26),o=n(52),i=n(53),a=n(54),l=n(57),c=n(63),u=Date.prototype.getTime;function s(t,e,n){var p=n||{};return!(p.strict?!i(t,e):t!==e)||(!t||!e||"object"!=typeof t&&"object"!=typeof e?p.strict?i(t,e):t==e:function(t,e,n){var i,p;if(typeof t!=typeof e)return!1;if(f(t)||f(e))return!1;if(t.prototype!==e.prototype)return!1;if(o(t)!==o(e))return!1;var m=a(t),h=a(e);if(m!==h)return!1;if(m||h)return t.source===e.source&&l(t)===l(e);if(c(t)&&c(e))return u.call(t)===u.call(e);var g=d(t),b=d(e);if(g!==b)return!1;if(g||b){if(t.length!==e.length)return!1;for(i=0;i<t.length;i++)if(t[i]!==e[i])return!1;return!0}if(typeof t!=typeof e)return!1;try{var v=r(t),y=r(e)}catch(t){return!1}if(v.length!==y.length)return!1;for(v.sort(),y.sort(),i=v.length-1;i>=0;i--)if(v[i]!=y[i])return!1;for(i=v.length-1;i>=0;i--)if(p=v[i],!s(t[p],e[p],n))return!1;return!0}(t,e,p))}function f(t){return null==t}function d(t){return!(!t||"object"!=typeof t||"number"!=typeof t.length)&&("function"==typeof t.copy&&"function"==typeof t.slice&&!(t.length>0&&"number"!=typeof t[0]))}t.exports=s},function(t,e,n){"use strict";
/** @license React v16.12.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(22),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,c=o?Symbol.for("react.strict_mode"):60108,u=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113;o&&Symbol.for("react.suspense_list");var m=o?Symbol.for("react.memo"):60115,h=o?Symbol.for("react.lazy"):60116;o&&Symbol.for("react.fundamental"),o&&Symbol.for("react.responder"),o&&Symbol.for("react.scope");var g="function"==typeof Symbol&&Symbol.iterator;function b(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},y={};function x(t,e,n){this.props=t,this.context=e,this.refs=y,this.updater=n||v}function w(){}function k(t,e,n){this.props=t,this.context=e,this.refs=y,this.updater=n||v}x.prototype.isReactComponent={},x.prototype.setState=function(t,e){if("object"!=typeof t&&"function"!=typeof t&&null!=t)throw Error(b(85));this.updater.enqueueSetState(this,t,e,"setState")},x.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")},w.prototype=x.prototype;var _=k.prototype=new w;_.constructor=k,r(_,x.prototype),_.isPureReactComponent=!0;var E={current:null},S={current:null},M=Object.prototype.hasOwnProperty,T={key:!0,ref:!0,__self:!0,__source:!0};function C(t,e,n){var r,o={},a=null,l=null;if(null!=e)for(r in void 0!==e.ref&&(l=e.ref),void 0!==e.key&&(a=""+e.key),e)M.call(e,r)&&!T.hasOwnProperty(r)&&(o[r]=e[r]);var c=arguments.length-2;if(1===c)o.children=n;else if(1<c){for(var u=Array(c),s=0;s<c;s++)u[s]=arguments[s+2];o.children=u}if(t&&t.defaultProps)for(r in c=t.defaultProps)void 0===o[r]&&(o[r]=c[r]);return{$$typeof:i,type:t,key:a,ref:l,props:o,_owner:S.current}}function N(t){return"object"==typeof t&&null!==t&&t.$$typeof===i}var P=/\/+/g,A=[];function O(t,e,n,r){if(A.length){var o=A.pop();return o.result=t,o.keyPrefix=e,o.func=n,o.context=r,o.count=0,o}return{result:t,keyPrefix:e,func:n,context:r,count:0}}function z(t){t.result=null,t.keyPrefix=null,t.func=null,t.context=null,t.count=0,10>A.length&&A.push(t)}function j(t,e,n){return null==t?0:function t(e,n,r,o){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var c=!1;if(null===e)c=!0;else switch(l){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case i:case a:c=!0}}if(c)return r(o,e,""===n?"."+R(e,0):n),1;if(c=0,n=""===n?".":n+":",Array.isArray(e))for(var u=0;u<e.length;u++){var s=n+R(l=e[u],u);c+=t(l,s,r,o)}else if(null===e||"object"!=typeof e?s=null:s="function"==typeof(s=g&&e[g]||e["@@iterator"])?s:null,"function"==typeof s)for(e=s.call(e),u=0;!(l=e.next()).done;)c+=t(l=l.value,s=n+R(l,u++),r,o);else if("object"===l)throw r=""+e,Error(b(31,"[object Object]"===r?"object with keys {"+Object.keys(e).join(", ")+"}":r,""));return c}(t,"",e,n)}function R(t,e){return"object"==typeof t&&null!==t&&null!=t.key?function(t){var e={"=":"=0",":":"=2"};return"$"+(""+t).replace(/[=:]/g,(function(t){return e[t]}))}(t.key):e.toString(36)}function D(t,e){t.func.call(t.context,e,t.count++)}function L(t,e,n){var r=t.result,o=t.keyPrefix;t=t.func.call(t.context,e,t.count++),Array.isArray(t)?I(t,r,n,(function(t){return t})):null!=t&&(N(t)&&(t=function(t,e){return{$$typeof:i,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}(t,o+(!t.key||e&&e.key===t.key?"":(""+t.key).replace(P,"$&/")+"/")+n)),r.push(t))}function I(t,e,n,r,o){var i="";null!=n&&(i=(""+n).replace(P,"$&/")+"/"),j(t,L,e=O(e,i,r,o)),z(e)}function U(){var t=E.current;if(null===t)throw Error(b(321));return t}var F={Children:{map:function(t,e,n){if(null==t)return t;var r=[];return I(t,r,null,e,n),r},forEach:function(t,e,n){if(null==t)return t;j(t,D,e=O(null,null,e,n)),z(e)},count:function(t){return j(t,(function(){return null}),null)},toArray:function(t){var e=[];return I(t,e,null,(function(t){return t})),e},only:function(t){if(!N(t))throw Error(b(143));return t}},createRef:function(){return{current:null}},Component:x,PureComponent:k,createContext:function(t,e){return void 0===e&&(e=null),(t={$$typeof:f,_calculateChangedBits:e,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:t},t.Consumer=t},forwardRef:function(t){return{$$typeof:d,render:t}},lazy:function(t){return{$$typeof:h,_ctor:t,_status:-1,_result:null}},memo:function(t,e){return{$$typeof:m,type:t,compare:void 0===e?null:e}},useCallback:function(t,e){return U().useCallback(t,e)},useContext:function(t,e){return U().useContext(t,e)},useEffect:function(t,e){return U().useEffect(t,e)},useImperativeHandle:function(t,e,n){return U().useImperativeHandle(t,e,n)},useDebugValue:function(){},useLayoutEffect:function(t,e){return U().useLayoutEffect(t,e)},useMemo:function(t,e){return U().useMemo(t,e)},useReducer:function(t,e,n){return U().useReducer(t,e,n)},useRef:function(t){return U().useRef(t)},useState:function(t){return U().useState(t)},Fragment:l,Profiler:u,StrictMode:c,Suspense:p,createElement:C,cloneElement:function(t,e,n){if(null==t)throw Error(b(267,t));var o=r({},t.props),a=t.key,l=t.ref,c=t._owner;if(null!=e){if(void 0!==e.ref&&(l=e.ref,c=S.current),void 0!==e.key&&(a=""+e.key),t.type&&t.type.defaultProps)var u=t.type.defaultProps;for(s in e)M.call(e,s)&&!T.hasOwnProperty(s)&&(o[s]=void 0===e[s]&&void 0!==u?u[s]:e[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){u=Array(s);for(var f=0;f<s;f++)u[f]=arguments[f+2];o.children=u}return{$$typeof:i,type:t.type,key:a,ref:l,props:o,_owner:c}},createFactory:function(t){var e=C.bind(null,t);return e.type=t,e},isValidElement:N,version:"16.12.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:E,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:S,IsSomeRendererActing:{current:!1},assign:r}},B={default:F},q=B&&F||B;t.exports=q.default||q},function(t,e,n){"use strict";
/** @license React v16.12.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(22),i=n(41);function a(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(a(227));var l=null,c={};function u(){if(l)for(var t in c){var e=c[t],n=l.indexOf(t);if(!(-1<n))throw Error(a(96,t));if(!f[n]){if(!e.extractEvents)throw Error(a(97,t));for(var r in f[n]=e,n=e.eventTypes){var o=void 0,i=n[r],u=e,p=r;if(d.hasOwnProperty(p))throw Error(a(99,p));d[p]=i;var m=i.phasedRegistrationNames;if(m){for(o in m)m.hasOwnProperty(o)&&s(m[o],u,p);o=!0}else i.registrationName?(s(i.registrationName,u,p),o=!0):o=!1;if(!o)throw Error(a(98,r,t))}}}}function s(t,e,n){if(p[t])throw Error(a(100,t));p[t]=e,m[t]=e.eventTypes[n].dependencies}var f=[],d={},p={},m={};function h(t,e,n,r,o,i,a,l,c){var u=Array.prototype.slice.call(arguments,3);try{e.apply(n,u)}catch(t){this.onError(t)}}var g=!1,b=null,v=!1,y=null,x={onError:function(t){g=!0,b=t}};function w(t,e,n,r,o,i,a,l,c){g=!1,b=null,h.apply(x,arguments)}var k=null,_=null,E=null;function S(t,e,n){var r=t.type||"unknown-event";t.currentTarget=E(n),function(t,e,n,r,o,i,l,c,u){if(w.apply(this,arguments),g){if(!g)throw Error(a(198));var s=b;g=!1,b=null,v||(v=!0,y=s)}}(r,e,void 0,t),t.currentTarget=null}function M(t,e){if(null==e)throw Error(a(30));return null==t?e:Array.isArray(t)?Array.isArray(e)?(t.push.apply(t,e),t):(t.push(e),t):Array.isArray(e)?[t].concat(e):[t,e]}function T(t,e,n){Array.isArray(t)?t.forEach(e,n):t&&e.call(n,t)}var C=null;function N(t){if(t){var e=t._dispatchListeners,n=t._dispatchInstances;if(Array.isArray(e))for(var r=0;r<e.length&&!t.isPropagationStopped();r++)S(t,e[r],n[r]);else e&&S(t,e,n);t._dispatchListeners=null,t._dispatchInstances=null,t.isPersistent()||t.constructor.release(t)}}function P(t){if(null!==t&&(C=M(C,t)),t=C,C=null,t){if(T(t,N),C)throw Error(a(95));if(v)throw t=y,v=!1,y=null,t}}var A={injectEventPluginOrder:function(t){if(l)throw Error(a(101));l=Array.prototype.slice.call(t),u()},injectEventPluginsByName:function(t){var e,n=!1;for(e in t)if(t.hasOwnProperty(e)){var r=t[e];if(!c.hasOwnProperty(e)||c[e]!==r){if(c[e])throw Error(a(102,e));c[e]=r,n=!0}}n&&u()}};function O(t,e){var n=t.stateNode;if(!n)return null;var r=k(n);if(!r)return null;n=r[e];t:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(t=t.type)||"input"===t||"select"===t||"textarea"===t)),t=!r;break t;default:t=!1}if(t)return null;if(n&&"function"!=typeof n)throw Error(a(231,e,typeof n));return n}var z=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;z.hasOwnProperty("ReactCurrentDispatcher")||(z.ReactCurrentDispatcher={current:null}),z.hasOwnProperty("ReactCurrentBatchConfig")||(z.ReactCurrentBatchConfig={suspense:null});var j=/^(.*)[\\\/]/,R="function"==typeof Symbol&&Symbol.for,D=R?Symbol.for("react.element"):60103,L=R?Symbol.for("react.portal"):60106,I=R?Symbol.for("react.fragment"):60107,U=R?Symbol.for("react.strict_mode"):60108,F=R?Symbol.for("react.profiler"):60114,B=R?Symbol.for("react.provider"):60109,q=R?Symbol.for("react.context"):60110,H=R?Symbol.for("react.concurrent_mode"):60111,W=R?Symbol.for("react.forward_ref"):60112,$=R?Symbol.for("react.suspense"):60113,V=R?Symbol.for("react.suspense_list"):60120,Y=R?Symbol.for("react.memo"):60115,G=R?Symbol.for("react.lazy"):60116;R&&Symbol.for("react.fundamental"),R&&Symbol.for("react.responder"),R&&Symbol.for("react.scope");var Q="function"==typeof Symbol&&Symbol.iterator;function X(t){return null===t||"object"!=typeof t?null:"function"==typeof(t=Q&&t[Q]||t["@@iterator"])?t:null}function K(t){if(null==t)return null;if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t;switch(t){case I:return"Fragment";case L:return"Portal";case F:return"Profiler";case U:return"StrictMode";case $:return"Suspense";case V:return"SuspenseList"}if("object"==typeof t)switch(t.$$typeof){case q:return"Context.Consumer";case B:return"Context.Provider";case W:var e=t.render;return e=e.displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case Y:return K(t.type);case G:if(t=1===t._status?t._result:null)return K(t)}return null}function J(t){var e="";do{t:switch(t.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break t;default:var r=t._debugOwner,o=t._debugSource,i=K(t.type);n=null,r&&(n=K(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(j,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}e+=n,t=t.return}while(t);return e}var Z=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),tt=null,et=null,nt=null;function rt(t){if(t=_(t)){if("function"!=typeof tt)throw Error(a(280));var e=k(t.stateNode);tt(t.stateNode,t.type,e)}}function ot(t){et?nt?nt.push(t):nt=[t]:et=t}function it(){if(et){var t=et,e=nt;if(nt=et=null,rt(t),e)for(t=0;t<e.length;t++)rt(e[t])}}function at(t,e){return t(e)}function lt(t,e,n,r){return t(e,n,r)}function ct(){}var ut=at,st=!1,ft=!1;function dt(){null===et&&null===nt||(ct(),it())}new Map;var pt=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,mt=Object.prototype.hasOwnProperty,ht={},gt={};function bt(t,e,n,r,o,i){this.acceptsBooleans=2===e||3===e||4===e,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=t,this.type=e,this.sanitizeURL=i}var vt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(t){vt[t]=new bt(t,0,!1,t,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(t){var e=t[0];vt[e]=new bt(e,1,!1,t[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(t){vt[t]=new bt(t,2,!1,t.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(t){vt[t]=new bt(t,2,!1,t,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(t){vt[t]=new bt(t,3,!1,t.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(t){vt[t]=new bt(t,3,!0,t,null,!1)})),["capture","download"].forEach((function(t){vt[t]=new bt(t,4,!1,t,null,!1)})),["cols","rows","size","span"].forEach((function(t){vt[t]=new bt(t,6,!1,t,null,!1)})),["rowSpan","start"].forEach((function(t){vt[t]=new bt(t,5,!1,t.toLowerCase(),null,!1)}));var yt=/[\-:]([a-z])/g;function xt(t){return t[1].toUpperCase()}function wt(t){switch(typeof t){case"boolean":case"number":case"object":case"string":case"undefined":return t;default:return""}}function kt(t,e,n,r){var o=vt.hasOwnProperty(e)?vt[e]:null;(null!==o?0===o.type:!r&&(2<e.length&&("o"===e[0]||"O"===e[0])&&("n"===e[1]||"N"===e[1])))||(function(t,e,n,r){if(null==e||function(t,e,n,r){if(null!==n&&0===n.type)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(t=t.toLowerCase().slice(0,5))&&"aria-"!==t);default:return!1}}(t,e,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!e;case 4:return!1===e;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}(e,n,o,r)&&(n=null),r||null===o?function(t){return!!mt.call(gt,t)||!mt.call(ht,t)&&(pt.test(t)?gt[t]=!0:(ht[t]=!0,!1))}(e)&&(null===n?t.removeAttribute(e):t.setAttribute(e,""+n)):o.mustUseProperty?t[o.propertyName]=null===n?3!==o.type&&"":n:(e=o.attributeName,r=o.attributeNamespace,null===n?t.removeAttribute(e):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?t.setAttributeNS(r,e,n):t.setAttribute(e,n))))}function _t(t){var e=t.type;return(t=t.nodeName)&&"input"===t.toLowerCase()&&("checkbox"===e||"radio"===e)}function Et(t){t._valueTracker||(t._valueTracker=function(t){var e=_t(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),r=""+t[e];if(!t.hasOwnProperty(e)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return o.call(this)},set:function(t){r=""+t,i.call(this,t)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(t){r=""+t},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}(t))}function St(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),r="";return t&&(r=_t(t)?t.checked?"true":"false":t.value),(t=r)!==n&&(e.setValue(t),!0)}function Mt(t,e){var n=e.checked;return o({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:t._wrapperState.initialChecked})}function Tt(t,e){var n=null==e.defaultValue?"":e.defaultValue,r=null!=e.checked?e.checked:e.defaultChecked;n=wt(null!=e.value?e.value:n),t._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===e.type||"radio"===e.type?null!=e.checked:null!=e.value}}function Ct(t,e){null!=(e=e.checked)&&kt(t,"checked",e,!1)}function Nt(t,e){Ct(t,e);var n=wt(e.value),r=e.type;if(null!=n)"number"===r?(0===n&&""===t.value||t.value!=n)&&(t.value=""+n):t.value!==""+n&&(t.value=""+n);else if("submit"===r||"reset"===r)return void t.removeAttribute("value");e.hasOwnProperty("value")?At(t,e.type,n):e.hasOwnProperty("defaultValue")&&At(t,e.type,wt(e.defaultValue)),null==e.checked&&null!=e.defaultChecked&&(t.defaultChecked=!!e.defaultChecked)}function Pt(t,e,n){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var r=e.type;if(!("submit"!==r&&"reset"!==r||void 0!==e.value&&null!==e.value))return;e=""+t._wrapperState.initialValue,n||e===t.value||(t.value=e),t.defaultValue=e}""!==(n=t.name)&&(t.name=""),t.defaultChecked=!t.defaultChecked,t.defaultChecked=!!t._wrapperState.initialChecked,""!==n&&(t.name=n)}function At(t,e,n){"number"===e&&t.ownerDocument.activeElement===t||(null==n?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+n&&(t.defaultValue=""+n))}function Ot(t,e){return t=o({children:void 0},e),(e=function(t){var e="";return r.Children.forEach(t,(function(t){null!=t&&(e+=t)})),e}(e.children))&&(t.children=e),t}function zt(t,e,n,r){if(t=t.options,e){e={};for(var o=0;o<n.length;o++)e["$"+n[o]]=!0;for(n=0;n<t.length;n++)o=e.hasOwnProperty("$"+t[n].value),t[n].selected!==o&&(t[n].selected=o),o&&r&&(t[n].defaultSelected=!0)}else{for(n=""+wt(n),e=null,o=0;o<t.length;o++){if(t[o].value===n)return t[o].selected=!0,void(r&&(t[o].defaultSelected=!0));null!==e||t[o].disabled||(e=t[o])}null!==e&&(e.selected=!0)}}function jt(t,e){if(null!=e.dangerouslySetInnerHTML)throw Error(a(91));return o({},e,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function Rt(t,e){var n=e.value;if(null==n){if(n=e.defaultValue,null!=(e=e.children)){if(null!=n)throw Error(a(92));if(Array.isArray(e)){if(!(1>=e.length))throw Error(a(93));e=e[0]}n=e}null==n&&(n="")}t._wrapperState={initialValue:wt(n)}}function Dt(t,e){var n=wt(e.value),r=wt(e.defaultValue);null!=n&&((n=""+n)!==t.value&&(t.value=n),null==e.defaultValue&&t.defaultValue!==n&&(t.defaultValue=n)),null!=r&&(t.defaultValue=""+r)}function Lt(t){var e=t.textContent;e===t._wrapperState.initialValue&&""!==e&&null!==e&&(t.value=e)}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(t){var e=t.replace(yt,xt);vt[e]=new bt(e,1,!1,t,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(t){var e=t.replace(yt,xt);vt[e]=new bt(e,1,!1,t,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(t){var e=t.replace(yt,xt);vt[e]=new bt(e,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(t){vt[t]=new bt(t,1,!1,t.toLowerCase(),null,!1)})),vt.xlinkHref=new bt("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(t){vt[t]=new bt(t,1,!1,t.toLowerCase(),null,!0)}));var It="http://www.w3.org/1999/xhtml",Ut="http://www.w3.org/2000/svg";function Ft(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Bt(t,e){return null==t||"http://www.w3.org/1999/xhtml"===t?Ft(e):"http://www.w3.org/2000/svg"===t&&"foreignObject"===e?"http://www.w3.org/1999/xhtml":t}var qt,Ht=function(t){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,r,o){MSApp.execUnsafeLocalFunction((function(){return t(e,n)}))}:t}((function(t,e){if(t.namespaceURI!==Ut||"innerHTML"in t)t.innerHTML=e;else{for((qt=qt||document.createElement("div")).innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=qt.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}}));function Wt(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&3===n.nodeType)return void(n.nodeValue=e)}t.textContent=e}function $t(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var Vt={animationend:$t("Animation","AnimationEnd"),animationiteration:$t("Animation","AnimationIteration"),animationstart:$t("Animation","AnimationStart"),transitionend:$t("Transition","TransitionEnd")},Yt={},Gt={};function Qt(t){if(Yt[t])return Yt[t];if(!Vt[t])return t;var e,n=Vt[t];for(e in n)if(n.hasOwnProperty(e)&&e in Gt)return Yt[t]=n[e];return t}Z&&(Gt=document.createElement("div").style,"AnimationEvent"in window||(delete Vt.animationend.animation,delete Vt.animationiteration.animation,delete Vt.animationstart.animation),"TransitionEvent"in window||delete Vt.transitionend.transition);var Xt=Qt("animationend"),Kt=Qt("animationiteration"),Jt=Qt("animationstart"),Zt=Qt("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" ");function ee(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do{0!=(1026&(e=t).effectTag)&&(n=e.return),t=e.return}while(t)}return 3===e.tag?n:null}function ne(t){if(13===t.tag){var e=t.memoizedState;if(null===e&&(null!==(t=t.alternate)&&(e=t.memoizedState)),null!==e)return e.dehydrated}return null}function re(t){if(ee(t)!==t)throw Error(a(188))}function oe(t){if(!(t=function(t){var e=t.alternate;if(!e){if(null===(e=ee(t)))throw Error(a(188));return e!==t?null:t}for(var n=t,r=e;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return re(o),t;if(i===r)return re(o),e;i=i.sibling}throw Error(a(188))}if(n.return!==r.return)n=o,r=i;else{for(var l=!1,c=o.child;c;){if(c===n){l=!0,n=o,r=i;break}if(c===r){l=!0,r=o,n=i;break}c=c.sibling}if(!l){for(c=i.child;c;){if(c===n){l=!0,n=i,r=o;break}if(c===r){l=!0,r=i,n=o;break}c=c.sibling}if(!l)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?t:e}(t)))return null;for(var e=t;;){if(5===e.tag||6===e.tag)return e;if(e.child)e.child.return=e,e=e.child;else{if(e===t)break;for(;!e.sibling;){if(!e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}}return null}var ie,ae,le,ce=!1,ue=[],se=null,fe=null,de=null,pe=new Map,me=new Map,he=[],ge="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),be="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function ve(t,e,n,r){return{blockedOn:t,topLevelType:e,eventSystemFlags:32|n,nativeEvent:r}}function ye(t,e){switch(t){case"focus":case"blur":se=null;break;case"dragenter":case"dragleave":fe=null;break;case"mouseover":case"mouseout":de=null;break;case"pointerover":case"pointerout":pe.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":me.delete(e.pointerId)}}function xe(t,e,n,r,o){return null===t||t.nativeEvent!==o?(t=ve(e,n,r,o),null!==e&&(null!==(e=ur(e))&&ae(e)),t):(t.eventSystemFlags|=r,t)}function we(t){var e=cr(t.target);if(null!==e){var n=ee(e);if(null!==n)if(13===(e=n.tag)){if(null!==(e=ne(n)))return t.blockedOn=e,void i.unstable_runWithPriority(t.priority,(function(){le(n)}))}else if(3===e&&n.stateNode.hydrate)return void(t.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}t.blockedOn=null}function ke(t){if(null!==t.blockedOn)return!1;var e=An(t.topLevelType,t.eventSystemFlags,t.nativeEvent);if(null!==e){var n=ur(e);return null!==n&&ae(n),t.blockedOn=e,!1}return!0}function _e(t,e,n){ke(t)&&n.delete(e)}function Ee(){for(ce=!1;0<ue.length;){var t=ue[0];if(null!==t.blockedOn){null!==(t=ur(t.blockedOn))&&ie(t);break}var e=An(t.topLevelType,t.eventSystemFlags,t.nativeEvent);null!==e?t.blockedOn=e:ue.shift()}null!==se&&ke(se)&&(se=null),null!==fe&&ke(fe)&&(fe=null),null!==de&&ke(de)&&(de=null),pe.forEach(_e),me.forEach(_e)}function Se(t,e){t.blockedOn===e&&(t.blockedOn=null,ce||(ce=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,Ee)))}function Me(t){function e(e){return Se(e,t)}if(0<ue.length){Se(ue[0],t);for(var n=1;n<ue.length;n++){var r=ue[n];r.blockedOn===t&&(r.blockedOn=null)}}for(null!==se&&Se(se,t),null!==fe&&Se(fe,t),null!==de&&Se(de,t),pe.forEach(e),me.forEach(e),n=0;n<he.length;n++)(r=he[n]).blockedOn===t&&(r.blockedOn=null);for(;0<he.length&&null===(n=he[0]).blockedOn;)we(n),null===n.blockedOn&&he.shift()}function Te(t){return(t=t.target||t.srcElement||window).correspondingUseElement&&(t=t.correspondingUseElement),3===t.nodeType?t.parentNode:t}function Ce(t){do{t=t.return}while(t&&5!==t.tag);return t||null}function Ne(t,e,n){(e=O(t,n.dispatchConfig.phasedRegistrationNames[e]))&&(n._dispatchListeners=M(n._dispatchListeners,e),n._dispatchInstances=M(n._dispatchInstances,t))}function Pe(t){if(t&&t.dispatchConfig.phasedRegistrationNames){for(var e=t._targetInst,n=[];e;)n.push(e),e=Ce(e);for(e=n.length;0<e--;)Ne(n[e],"captured",t);for(e=0;e<n.length;e++)Ne(n[e],"bubbled",t)}}function Ae(t,e,n){t&&n&&n.dispatchConfig.registrationName&&(e=O(t,n.dispatchConfig.registrationName))&&(n._dispatchListeners=M(n._dispatchListeners,e),n._dispatchInstances=M(n._dispatchInstances,t))}function Oe(t){t&&t.dispatchConfig.registrationName&&Ae(t._targetInst,null,t)}function ze(t){T(t,Pe)}function je(){return!0}function Re(){return!1}function De(t,e,n,r){for(var o in this.dispatchConfig=t,this._targetInst=e,this.nativeEvent=n,t=this.constructor.Interface)t.hasOwnProperty(o)&&((e=t[o])?this[o]=e(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?je:Re,this.isPropagationStopped=Re,this}function Le(t,e,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,t,e,n,r),o}return new this(t,e,n,r)}function Ie(t){if(!(t instanceof this))throw Error(a(279));t.destructor(),10>this.eventPool.length&&this.eventPool.push(t)}function Ue(t){t.eventPool=[],t.getPooled=Le,t.release=Ie}o(De.prototype,{preventDefault:function(){this.defaultPrevented=!0;var t=this.nativeEvent;t&&(t.preventDefault?t.preventDefault():"unknown"!=typeof t.returnValue&&(t.returnValue=!1),this.isDefaultPrevented=je)},stopPropagation:function(){var t=this.nativeEvent;t&&(t.stopPropagation?t.stopPropagation():"unknown"!=typeof t.cancelBubble&&(t.cancelBubble=!0),this.isPropagationStopped=je)},persist:function(){this.isPersistent=je},isPersistent:Re,destructor:function(){var t,e=this.constructor.Interface;for(t in e)this[t]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Re,this._dispatchInstances=this._dispatchListeners=null}}),De.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},De.extend=function(t){function e(){}function n(){return r.apply(this,arguments)}var r=this;e.prototype=r.prototype;var i=new e;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,t),n.extend=r.extend,Ue(n),n},Ue(De);var Fe=De.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Be=De.extend({clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),qe=De.extend({view:null,detail:null}),He=qe.extend({relatedTarget:null});function We(t){var e=t.keyCode;return"charCode"in t?0===(t=t.charCode)&&13===e&&(t=13):t=e,10===t&&(t=13),32<=t||13===t?t:0}var $e={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Ve={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Ye={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Ge(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):!!(t=Ye[t])&&!!e[t]}function Qe(){return Ge}for(var Xe=qe.extend({key:function(t){if(t.key){var e=$e[t.key]||t.key;if("Unidentified"!==e)return e}return"keypress"===t.type?13===(t=We(t))?"Enter":String.fromCharCode(t):"keydown"===t.type||"keyup"===t.type?Ve[t.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Qe,charCode:function(t){return"keypress"===t.type?We(t):0},keyCode:function(t){return"keydown"===t.type||"keyup"===t.type?t.keyCode:0},which:function(t){return"keypress"===t.type?We(t):"keydown"===t.type||"keyup"===t.type?t.keyCode:0}}),Ke=0,Je=0,Ze=!1,tn=!1,en=qe.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Qe,button:null,buttons:null,relatedTarget:function(t){return t.relatedTarget||(t.fromElement===t.srcElement?t.toElement:t.fromElement)},movementX:function(t){if("movementX"in t)return t.movementX;var e=Ke;return Ke=t.screenX,Ze?"mousemove"===t.type?t.screenX-e:0:(Ze=!0,0)},movementY:function(t){if("movementY"in t)return t.movementY;var e=Je;return Je=t.screenY,tn?"mousemove"===t.type?t.screenY-e:0:(tn=!0,0)}}),nn=en.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),rn=en.extend({dataTransfer:null}),on=qe.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Qe}),an=De.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),ln=en.extend({deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:null,deltaMode:null}),cn=[["blur","blur",0],["cancel","cancel",0],["click","click",0],["close","close",0],["contextmenu","contextMenu",0],["copy","copy",0],["cut","cut",0],["auxclick","auxClick",0],["dblclick","doubleClick",0],["dragend","dragEnd",0],["dragstart","dragStart",0],["drop","drop",0],["focus","focus",0],["input","input",0],["invalid","invalid",0],["keydown","keyDown",0],["keypress","keyPress",0],["keyup","keyUp",0],["mousedown","mouseDown",0],["mouseup","mouseUp",0],["paste","paste",0],["pause","pause",0],["play","play",0],["pointercancel","pointerCancel",0],["pointerdown","pointerDown",0],["pointerup","pointerUp",0],["ratechange","rateChange",0],["reset","reset",0],["seeked","seeked",0],["submit","submit",0],["touchcancel","touchCancel",0],["touchend","touchEnd",0],["touchstart","touchStart",0],["volumechange","volumeChange",0],["drag","drag",1],["dragenter","dragEnter",1],["dragexit","dragExit",1],["dragleave","dragLeave",1],["dragover","dragOver",1],["mousemove","mouseMove",1],["mouseout","mouseOut",1],["mouseover","mouseOver",1],["pointermove","pointerMove",1],["pointerout","pointerOut",1],["pointerover","pointerOver",1],["scroll","scroll",1],["toggle","toggle",1],["touchmove","touchMove",1],["wheel","wheel",1],["abort","abort",2],[Xt,"animationEnd",2],[Kt,"animationIteration",2],[Jt,"animationStart",2],["canplay","canPlay",2],["canplaythrough","canPlayThrough",2],["durationchange","durationChange",2],["emptied","emptied",2],["encrypted","encrypted",2],["ended","ended",2],["error","error",2],["gotpointercapture","gotPointerCapture",2],["load","load",2],["loadeddata","loadedData",2],["loadedmetadata","loadedMetadata",2],["loadstart","loadStart",2],["lostpointercapture","lostPointerCapture",2],["playing","playing",2],["progress","progress",2],["seeking","seeking",2],["stalled","stalled",2],["suspend","suspend",2],["timeupdate","timeUpdate",2],[Zt,"transitionEnd",2],["waiting","waiting",2]],un={},sn={},fn=0;fn<cn.length;fn++){var dn=cn[fn],pn=dn[0],mn=dn[1],hn=dn[2],gn="on"+(mn[0].toUpperCase()+mn.slice(1)),bn={phasedRegistrationNames:{bubbled:gn,captured:gn+"Capture"},dependencies:[pn],eventPriority:hn};un[mn]=bn,sn[pn]=bn}var vn={eventTypes:un,getEventPriority:function(t){return void 0!==(t=sn[t])?t.eventPriority:2},extractEvents:function(t,e,n,r){var o=sn[t];if(!o)return null;switch(t){case"keypress":if(0===We(n))return null;case"keydown":case"keyup":t=Xe;break;case"blur":case"focus":t=He;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":t=en;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":t=rn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":t=on;break;case Xt:case Kt:case Jt:t=Fe;break;case Zt:t=an;break;case"scroll":t=qe;break;case"wheel":t=ln;break;case"copy":case"cut":case"paste":t=Be;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":t=nn;break;default:t=De}return ze(e=t.getPooled(o,e,n,r)),e}},yn=i.unstable_UserBlockingPriority,xn=i.unstable_runWithPriority,wn=vn.getEventPriority,kn=[];function _n(t){var e=t.targetInst,n=e;do{if(!n){t.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(e=n.tag)&&6!==e||t.ancestors.push(n),n=cr(r)}while(n);for(n=0;n<t.ancestors.length;n++){e=t.ancestors[n];var o=Te(t.nativeEvent);r=t.topLevelType;for(var i=t.nativeEvent,a=t.eventSystemFlags,l=null,c=0;c<f.length;c++){var u=f[c];u&&(u=u.extractEvents(r,e,i,o,a))&&(l=M(l,u))}P(l)}}var En=!0;function Sn(t,e){Mn(e,t,!1)}function Mn(t,e,n){switch(wn(e)){case 0:var r=Tn.bind(null,e,1);break;case 1:r=Cn.bind(null,e,1);break;default:r=Pn.bind(null,e,1)}n?t.addEventListener(e,r,!0):t.addEventListener(e,r,!1)}function Tn(t,e,n){st||ct();var r=Pn,o=st;st=!0;try{lt(r,t,e,n)}finally{(st=o)||dt()}}function Cn(t,e,n){xn(yn,Pn.bind(null,t,e,n))}function Nn(t,e,n,r){if(kn.length){var o=kn.pop();o.topLevelType=t,o.eventSystemFlags=e,o.nativeEvent=n,o.targetInst=r,t=o}else t={topLevelType:t,eventSystemFlags:e,nativeEvent:n,targetInst:r,ancestors:[]};try{if(e=_n,n=t,ft)e(n,void 0);else{ft=!0;try{ut(e,n,void 0)}finally{ft=!1,dt()}}}finally{t.topLevelType=null,t.nativeEvent=null,t.targetInst=null,t.ancestors.length=0,kn.length<10&&kn.push(t)}}function Pn(t,e,n){if(En)if(0<ue.length&&-1<ge.indexOf(t))t=ve(null,t,e,n),ue.push(t);else{var r=An(t,e,n);null===r?ye(t,n):-1<ge.indexOf(t)?(t=ve(r,t,e,n),ue.push(t)):function(t,e,n,r){switch(e){case"focus":return se=xe(se,t,e,n,r),!0;case"dragenter":return fe=xe(fe,t,e,n,r),!0;case"mouseover":return de=xe(de,t,e,n,r),!0;case"pointerover":var o=r.pointerId;return pe.set(o,xe(pe.get(o)||null,t,e,n,r)),!0;case"gotpointercapture":return o=r.pointerId,me.set(o,xe(me.get(o)||null,t,e,n,r)),!0}return!1}(r,t,e,n)||(ye(t,n),Nn(t,e,n,null))}}function An(t,e,n){var r=Te(n);if(null!==(r=cr(r))){var o=ee(r);if(null===o)r=null;else{var i=o.tag;if(13===i){if(null!==(r=ne(o)))return r;r=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;r=null}else o!==r&&(r=null)}}return Nn(t,e,n,r),null}function On(t){if(!Z)return!1;var e=(t="on"+t)in document;return e||((e=document.createElement("div")).setAttribute(t,"return;"),e="function"==typeof e[t]),e}var zn=new("function"==typeof WeakMap?WeakMap:Map);function jn(t){var e=zn.get(t);return void 0===e&&(e=new Set,zn.set(t,e)),e}function Rn(t,e,n){if(!n.has(t)){switch(t){case"scroll":Mn(e,"scroll",!0);break;case"focus":case"blur":Mn(e,"focus",!0),Mn(e,"blur",!0),n.add("blur"),n.add("focus");break;case"cancel":case"close":On(t)&&Mn(e,t,!0);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(t)&&Sn(t,e)}n.add(t)}}var Dn={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Ln=["Webkit","ms","Moz","O"];function In(t,e,n){return null==e||"boolean"==typeof e||""===e?"":n||"number"!=typeof e||0===e||Dn.hasOwnProperty(t)&&Dn[t]?(""+e).trim():e+"px"}function Un(t,e){for(var n in t=t.style,e)if(e.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=In(n,e[n],r);"float"===n&&(n="cssFloat"),r?t.setProperty(n,o):t[n]=o}}Object.keys(Dn).forEach((function(t){Ln.forEach((function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),Dn[e]=Dn[t]}))}));var Fn=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Bn(t,e){if(e){if(Fn[t]&&(null!=e.children||null!=e.dangerouslySetInnerHTML))throw Error(a(137,t,""));if(null!=e.dangerouslySetInnerHTML){if(null!=e.children)throw Error(a(60));if(!("object"==typeof e.dangerouslySetInnerHTML&&"__html"in e.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=e.style&&"object"!=typeof e.style)throw Error(a(62,""))}}function qn(t,e){if(-1===t.indexOf("-"))return"string"==typeof e.is;switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Hn(t,e){var n=jn(t=9===t.nodeType||11===t.nodeType?t:t.ownerDocument);e=m[e];for(var r=0;r<e.length;r++)Rn(e[r],t,n)}function Wn(){}function $n(t){if(void 0===(t=t||("undefined"!=typeof document?document:void 0)))return null;try{return t.activeElement||t.body}catch(e){return t.body}}function Vn(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function Yn(t,e){var n,r=Vn(t);for(t=0;r;){if(3===r.nodeType){if(n=t+r.textContent.length,t<=e&&n>=e)return{node:r,offset:e-t};t=n}t:{for(;r;){if(r.nextSibling){r=r.nextSibling;break t}r=r.parentNode}r=void 0}r=Vn(r)}}function Gn(){for(var t=window,e=$n();e instanceof t.HTMLIFrameElement;){try{var n="string"==typeof e.contentWindow.location.href}catch(t){n=!1}if(!n)break;e=$n((t=e.contentWindow).document)}return e}function Qn(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&("input"===e&&("text"===t.type||"search"===t.type||"tel"===t.type||"url"===t.type||"password"===t.type)||"textarea"===e||"true"===t.contentEditable)}var Xn=null,Kn=null;function Jn(t,e){switch(t){case"button":case"input":case"select":case"textarea":return!!e.autoFocus}return!1}function Zn(t,e){return"textarea"===t||"option"===t||"noscript"===t||"string"==typeof e.children||"number"==typeof e.children||"object"==typeof e.dangerouslySetInnerHTML&&null!==e.dangerouslySetInnerHTML&&null!=e.dangerouslySetInnerHTML.__html}var tr="function"==typeof setTimeout?setTimeout:void 0,er="function"==typeof clearTimeout?clearTimeout:void 0;function nr(t){for(;null!=t;t=t.nextSibling){var e=t.nodeType;if(1===e||3===e)break}return t}function rr(t){t=t.previousSibling;for(var e=0;t;){if(8===t.nodeType){var n=t.data;if("$"===n||"$!"===n||"$?"===n){if(0===e)return t;e--}else"/$"===n&&e++}t=t.previousSibling}return null}var or=Math.random().toString(36).slice(2),ir="__reactInternalInstance$"+or,ar="__reactEventHandlers$"+or,lr="__reactContainere$"+or;function cr(t){var e=t[ir];if(e)return e;for(var n=t.parentNode;n;){if(e=n[lr]||n[ir]){if(n=e.alternate,null!==e.child||null!==n&&null!==n.child)for(t=rr(t);null!==t;){if(n=t[ir])return n;t=rr(t)}return e}n=(t=n).parentNode}return null}function ur(t){return!(t=t[ir]||t[lr])||5!==t.tag&&6!==t.tag&&13!==t.tag&&3!==t.tag?null:t}function sr(t){if(5===t.tag||6===t.tag)return t.stateNode;throw Error(a(33))}function fr(t){return t[ar]||null}var dr=null,pr=null,mr=null;function hr(){if(mr)return mr;var t,e,n=pr,r=n.length,o="value"in dr?dr.value:dr.textContent,i=o.length;for(t=0;t<r&&n[t]===o[t];t++);var a=r-t;for(e=1;e<=a&&n[r-e]===o[i-e];e++);return mr=o.slice(t,1<e?1-e:void 0)}var gr=De.extend({data:null}),br=De.extend({data:null}),vr=[9,13,27,32],yr=Z&&"CompositionEvent"in window,xr=null;Z&&"documentMode"in document&&(xr=document.documentMode);var wr=Z&&"TextEvent"in window&&!xr,kr=Z&&(!yr||xr&&8<xr&&11>=xr),_r=String.fromCharCode(32),Er={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Sr=!1;function Mr(t,e){switch(t){case"keyup":return-1!==vr.indexOf(e.keyCode);case"keydown":return 229!==e.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Tr(t){return"object"==typeof(t=t.detail)&&"data"in t?t.data:null}var Cr=!1;var Nr={eventTypes:Er,extractEvents:function(t,e,n,r){var o;if(yr)t:{switch(t){case"compositionstart":var i=Er.compositionStart;break t;case"compositionend":i=Er.compositionEnd;break t;case"compositionupdate":i=Er.compositionUpdate;break t}i=void 0}else Cr?Mr(t,n)&&(i=Er.compositionEnd):"keydown"===t&&229===n.keyCode&&(i=Er.compositionStart);return i?(kr&&"ko"!==n.locale&&(Cr||i!==Er.compositionStart?i===Er.compositionEnd&&Cr&&(o=hr()):(pr="value"in(dr=r)?dr.value:dr.textContent,Cr=!0)),i=gr.getPooled(i,e,n,r),o?i.data=o:null!==(o=Tr(n))&&(i.data=o),ze(i),o=i):o=null,(t=wr?function(t,e){switch(t){case"compositionend":return Tr(e);case"keypress":return 32!==e.which?null:(Sr=!0,_r);case"textInput":return(t=e.data)===_r&&Sr?null:t;default:return null}}(t,n):function(t,e){if(Cr)return"compositionend"===t||!yr&&Mr(t,e)?(t=hr(),mr=pr=dr=null,Cr=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return kr&&"ko"!==e.locale?null:e.data;default:return null}}(t,n))?((e=br.getPooled(Er.beforeInput,e,n,r)).data=t,ze(e)):e=null,null===o?e:null===e?o:[o,e]}},Pr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ar(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return"input"===e?!!Pr[t.type]:"textarea"===e}var Or={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function zr(t,e,n){return(t=De.getPooled(Or.change,t,e,n)).type="change",ot(n),ze(t),t}var jr=null,Rr=null;function Dr(t){P(t)}function Lr(t){if(St(sr(t)))return t}function Ir(t,e){if("change"===t)return e}var Ur=!1;function Fr(){jr&&(jr.detachEvent("onpropertychange",Br),Rr=jr=null)}function Br(t){if("value"===t.propertyName&&Lr(Rr))if(t=zr(Rr,t,Te(t)),st)P(t);else{st=!0;try{at(Dr,t)}finally{st=!1,dt()}}}function qr(t,e,n){"focus"===t?(Fr(),Rr=n,(jr=e).attachEvent("onpropertychange",Br)):"blur"===t&&Fr()}function Hr(t){if("selectionchange"===t||"keyup"===t||"keydown"===t)return Lr(Rr)}function Wr(t,e){if("click"===t)return Lr(e)}function $r(t,e){if("input"===t||"change"===t)return Lr(e)}Z&&(Ur=On("input")&&(!document.documentMode||9<document.documentMode));var Vr,Yr={eventTypes:Or,_isInputEventSupported:Ur,extractEvents:function(t,e,n,r){var o=e?sr(e):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var a=Ir;else if(Ar(o))if(Ur)a=$r;else{a=Hr;var l=qr}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=Wr);if(a&&(a=a(t,e)))return zr(a,n,r);l&&l(t,o,e),"blur"===t&&(t=o._wrapperState)&&t.controlled&&"number"===o.type&&At(o,"number",o.value)}},Gr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Qr={eventTypes:Gr,extractEvents:function(t,e,n,r,o){var i="mouseover"===t||"pointerover"===t,a="mouseout"===t||"pointerout"===t;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!a&&!i)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=e,null!==(e=(e=n.relatedTarget||n.toElement)?cr(e):null)&&(e!==(i=ee(e))||5!==e.tag&&6!==e.tag)&&(e=null)):a=null,a===e)return null;if("mouseout"===t||"mouseover"===t)var l=en,c=Gr.mouseLeave,u=Gr.mouseEnter,s="mouse";else"pointerout"!==t&&"pointerover"!==t||(l=nn,c=Gr.pointerLeave,u=Gr.pointerEnter,s="pointer");if(t=null==a?o:sr(a),o=null==e?o:sr(e),(c=l.getPooled(c,a,n,r)).type=s+"leave",c.target=t,c.relatedTarget=o,(r=l.getPooled(u,e,n,r)).type=s+"enter",r.target=o,r.relatedTarget=t,s=e,(l=a)&&s)t:{for(t=s,a=0,e=u=l;e;e=Ce(e))a++;for(e=0,o=t;o;o=Ce(o))e++;for(;0<a-e;)u=Ce(u),a--;for(;0<e-a;)t=Ce(t),e--;for(;a--;){if(u===t||u===t.alternate)break t;u=Ce(u),t=Ce(t)}u=null}else u=null;for(t=u,u=[];l&&l!==t&&(null===(a=l.alternate)||a!==t);)u.push(l),l=Ce(l);for(l=[];s&&s!==t&&(null===(a=s.alternate)||a!==t);)l.push(s),s=Ce(s);for(s=0;s<u.length;s++)Ae(u[s],"bubbled",c);for(s=l.length;0<s--;)Ae(l[s],"captured",r);return n===Vr?(Vr=null,[c]):(Vr=n,[c,r])}};var Xr="function"==typeof Object.is?Object.is:function(t,e){return t===e&&(0!==t||1/t==1/e)||t!=t&&e!=e},Kr=Object.prototype.hasOwnProperty;function Jr(t,e){if(Xr(t,e))return!0;if("object"!=typeof t||null===t||"object"!=typeof e||null===e)return!1;var n=Object.keys(t),r=Object.keys(e);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Kr.call(e,n[r])||!Xr(t[n[r]],e[n[r]]))return!1;return!0}var Zr=Z&&"documentMode"in document&&11>=document.documentMode,to={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},eo=null,no=null,ro=null,oo=!1;function io(t,e){var n=e.window===e?e.document:9===e.nodeType?e:e.ownerDocument;return oo||null==eo||eo!==$n(n)?null:("selectionStart"in(n=eo)&&Qn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},ro&&Jr(ro,n)?null:(ro=n,(t=De.getPooled(to.select,no,t,e)).type="select",t.target=eo,ze(t),t))}var ao={eventTypes:to,extractEvents:function(t,e,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){t:{i=jn(i),o=m.onSelect;for(var a=0;a<o.length;a++)if(!i.has(o[a])){i=!1;break t}i=!0}o=!i}if(o)return null;switch(i=e?sr(e):window,t){case"focus":(Ar(i)||"true"===i.contentEditable)&&(eo=i,no=e,ro=null);break;case"blur":ro=no=eo=null;break;case"mousedown":oo=!0;break;case"contextmenu":case"mouseup":case"dragend":return oo=!1,io(n,r);case"selectionchange":if(Zr)break;case"keydown":case"keyup":return io(n,r)}return null}};A.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),k=fr,_=ur,E=sr,A.injectEventPluginsByName({SimpleEventPlugin:vn,EnterLeaveEventPlugin:Qr,ChangeEventPlugin:Yr,SelectEventPlugin:ao,BeforeInputEventPlugin:Nr}),new Set;var lo=[],co=-1;function uo(t){0>co||(t.current=lo[co],lo[co]=null,co--)}function so(t,e){co++,lo[co]=t.current,t.current=e}var fo={},po={current:fo},mo={current:!1},ho=fo;function go(t,e){var n=t.type.contextTypes;if(!n)return fo;var r=t.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===e)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=e[o];return r&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=i),i}function bo(t){return null!=(t=t.childContextTypes)}function vo(t){uo(mo),uo(po)}function yo(t){uo(mo),uo(po)}function xo(t,e,n){if(po.current!==fo)throw Error(a(168));so(po,e),so(mo,n)}function wo(t,e,n){var r=t.stateNode;if(t=e.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in t))throw Error(a(108,K(e)||"Unknown",i));return o({},n,{},r)}function ko(t){var e=t.stateNode;return e=e&&e.__reactInternalMemoizedMergedChildContext||fo,ho=po.current,so(po,e),so(mo,mo.current),!0}function _o(t,e,n){var r=t.stateNode;if(!r)throw Error(a(169));n?(e=wo(t,e,ho),r.__reactInternalMemoizedMergedChildContext=e,uo(mo),uo(po),so(po,e)):uo(mo),so(mo,n)}var Eo=i.unstable_runWithPriority,So=i.unstable_scheduleCallback,Mo=i.unstable_cancelCallback,To=i.unstable_shouldYield,Co=i.unstable_requestPaint,No=i.unstable_now,Po=i.unstable_getCurrentPriorityLevel,Ao=i.unstable_ImmediatePriority,Oo=i.unstable_UserBlockingPriority,zo=i.unstable_NormalPriority,jo=i.unstable_LowPriority,Ro=i.unstable_IdlePriority,Do={},Lo=void 0!==Co?Co:function(){},Io=null,Uo=null,Fo=!1,Bo=No(),qo=1e4>Bo?No:function(){return No()-Bo};function Ho(){switch(Po()){case Ao:return 99;case Oo:return 98;case zo:return 97;case jo:return 96;case Ro:return 95;default:throw Error(a(332))}}function Wo(t){switch(t){case 99:return Ao;case 98:return Oo;case 97:return zo;case 96:return jo;case 95:return Ro;default:throw Error(a(332))}}function $o(t,e){return t=Wo(t),Eo(t,e)}function Vo(t,e,n){return t=Wo(t),So(t,e,n)}function Yo(t){return null===Io?(Io=[t],Uo=So(Ao,Qo)):Io.push(t),Do}function Go(){if(null!==Uo){var t=Uo;Uo=null,Mo(t)}Qo()}function Qo(){if(!Fo&&null!==Io){Fo=!0;var t=0;try{var e=Io;$o(99,(function(){for(;t<e.length;t++){var n=e[t];do{n=n(!0)}while(null!==n)}})),Io=null}catch(e){throw null!==Io&&(Io=Io.slice(t+1)),So(Ao,Go),e}finally{Fo=!1}}}var Xo=3;function Ko(t,e,n){return 1073741821-(1+((1073741821-t+e/10)/(n/=10)|0))*n}function Jo(t,e){if(t&&t.defaultProps)for(var n in e=o({},e),t=t.defaultProps)void 0===e[n]&&(e[n]=t[n]);return e}var Zo={current:null},ti=null,ei=null,ni=null;function ri(){ni=ei=ti=null}function oi(t,e){var n=t.type._context;so(Zo,n._currentValue),n._currentValue=e}function ii(t){var e=Zo.current;uo(Zo),t.type._context._currentValue=e}function ai(t,e){for(;null!==t;){var n=t.alternate;if(t.childExpirationTime<e)t.childExpirationTime=e,null!==n&&n.childExpirationTime<e&&(n.childExpirationTime=e);else{if(!(null!==n&&n.childExpirationTime<e))break;n.childExpirationTime=e}t=t.return}}function li(t,e){ti=t,ni=ei=null,null!==(t=t.dependencies)&&null!==t.firstContext&&(t.expirationTime>=e&&(Ba=!0),t.firstContext=null)}function ci(t,e){if(ni!==t&&!1!==e&&0!==e)if("number"==typeof e&&1073741823!==e||(ni=t,e=1073741823),e={context:t,observedBits:e,next:null},null===ei){if(null===ti)throw Error(a(308));ei=e,ti.dependencies={expirationTime:0,firstContext:e,responders:null}}else ei=ei.next=e;return t._currentValue}var ui=!1;function si(t){return{baseState:t,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function fi(t){return{baseState:t.baseState,firstUpdate:t.firstUpdate,lastUpdate:t.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function di(t,e){return{expirationTime:t,suspenseConfig:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function pi(t,e){null===t.lastUpdate?t.firstUpdate=t.lastUpdate=e:(t.lastUpdate.next=e,t.lastUpdate=e)}function mi(t,e){var n=t.alternate;if(null===n){var r=t.updateQueue,o=null;null===r&&(r=t.updateQueue=si(t.memoizedState))}else r=t.updateQueue,o=n.updateQueue,null===r?null===o?(r=t.updateQueue=si(t.memoizedState),o=n.updateQueue=si(n.memoizedState)):r=t.updateQueue=fi(o):null===o&&(o=n.updateQueue=fi(r));null===o||r===o?pi(r,e):null===r.lastUpdate||null===o.lastUpdate?(pi(r,e),pi(o,e)):(pi(r,e),o.lastUpdate=e)}function hi(t,e){var n=t.updateQueue;null===(n=null===n?t.updateQueue=si(t.memoizedState):gi(t,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=e:(n.lastCapturedUpdate.next=e,n.lastCapturedUpdate=e)}function gi(t,e){var n=t.alternate;return null!==n&&e===n.updateQueue&&(e=t.updateQueue=fi(e)),e}function bi(t,e,n,r,i,a){switch(n.tag){case 1:return"function"==typeof(t=n.payload)?t.call(a,r,i):t;case 3:t.effectTag=-4097&t.effectTag|64;case 0:if(null==(i="function"==typeof(t=n.payload)?t.call(a,r,i):t))break;return o({},r,i);case 2:ui=!0}return r}function vi(t,e,n,r,o){ui=!1;for(var i=(e=gi(t,e)).baseState,a=null,l=0,c=e.firstUpdate,u=i;null!==c;){var s=c.expirationTime;s<o?(null===a&&(a=c,i=u),l<s&&(l=s)):(fc(s,c.suspenseConfig),u=bi(t,0,c,u,n,r),null!==c.callback&&(t.effectTag|=32,c.nextEffect=null,null===e.lastEffect?e.firstEffect=e.lastEffect=c:(e.lastEffect.nextEffect=c,e.lastEffect=c))),c=c.next}for(s=null,c=e.firstCapturedUpdate;null!==c;){var f=c.expirationTime;f<o?(null===s&&(s=c,null===a&&(i=u)),l<f&&(l=f)):(u=bi(t,0,c,u,n,r),null!==c.callback&&(t.effectTag|=32,c.nextEffect=null,null===e.lastCapturedEffect?e.firstCapturedEffect=e.lastCapturedEffect=c:(e.lastCapturedEffect.nextEffect=c,e.lastCapturedEffect=c))),c=c.next}null===a&&(e.lastUpdate=null),null===s?e.lastCapturedUpdate=null:t.effectTag|=32,null===a&&null===s&&(i=u),e.baseState=i,e.firstUpdate=a,e.firstCapturedUpdate=s,dc(l),t.expirationTime=l,t.memoizedState=u}function yi(t,e,n){null!==e.firstCapturedUpdate&&(null!==e.lastUpdate&&(e.lastUpdate.next=e.firstCapturedUpdate,e.lastUpdate=e.lastCapturedUpdate),e.firstCapturedUpdate=e.lastCapturedUpdate=null),xi(e.firstEffect,n),e.firstEffect=e.lastEffect=null,xi(e.firstCapturedEffect,n),e.firstCapturedEffect=e.lastCapturedEffect=null}function xi(t,e){for(;null!==t;){var n=t.callback;if(null!==n){t.callback=null;var r=e;if("function"!=typeof n)throw Error(a(191,n));n.call(r)}t=t.nextEffect}}var wi=z.ReactCurrentBatchConfig,ki=(new r.Component).refs;function _i(t,e,n,r){n=null==(n=n(r,e=t.memoizedState))?e:o({},e,n),t.memoizedState=n,null!==(r=t.updateQueue)&&0===t.expirationTime&&(r.baseState=n)}var Ei={isMounted:function(t){return!!(t=t._reactInternalFiber)&&ee(t)===t},enqueueSetState:function(t,e,n){t=t._reactInternalFiber;var r=Jl(),o=wi.suspense;(o=di(r=Zl(r,t,o),o)).payload=e,null!=n&&(o.callback=n),mi(t,o),tc(t,r)},enqueueReplaceState:function(t,e,n){t=t._reactInternalFiber;var r=Jl(),o=wi.suspense;(o=di(r=Zl(r,t,o),o)).tag=1,o.payload=e,null!=n&&(o.callback=n),mi(t,o),tc(t,r)},enqueueForceUpdate:function(t,e){t=t._reactInternalFiber;var n=Jl(),r=wi.suspense;(r=di(n=Zl(n,t,r),r)).tag=2,null!=e&&(r.callback=e),mi(t,r),tc(t,n)}};function Si(t,e,n,r,o,i,a){return"function"==typeof(t=t.stateNode).shouldComponentUpdate?t.shouldComponentUpdate(r,i,a):!e.prototype||!e.prototype.isPureReactComponent||(!Jr(n,r)||!Jr(o,i))}function Mi(t,e,n){var r=!1,o=fo,i=e.contextType;return"object"==typeof i&&null!==i?i=ci(i):(o=bo(e)?ho:po.current,i=(r=null!=(r=e.contextTypes))?go(t,o):fo),e=new e(n,i),t.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,e.updater=Ei,t.stateNode=e,e._reactInternalFiber=t,r&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,t.__reactInternalMemoizedMaskedChildContext=i),e}function Ti(t,e,n,r){t=e.state,"function"==typeof e.componentWillReceiveProps&&e.componentWillReceiveProps(n,r),"function"==typeof e.UNSAFE_componentWillReceiveProps&&e.UNSAFE_componentWillReceiveProps(n,r),e.state!==t&&Ei.enqueueReplaceState(e,e.state,null)}function Ci(t,e,n,r){var o=t.stateNode;o.props=n,o.state=t.memoizedState,o.refs=ki;var i=e.contextType;"object"==typeof i&&null!==i?o.context=ci(i):(i=bo(e)?ho:po.current,o.context=go(t,i)),null!==(i=t.updateQueue)&&(vi(t,i,n,o,r),o.state=t.memoizedState),"function"==typeof(i=e.getDerivedStateFromProps)&&(_i(t,e,i,n),o.state=t.memoizedState),"function"==typeof e.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(e=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),e!==o.state&&Ei.enqueueReplaceState(o,o.state,null),null!==(i=t.updateQueue)&&(vi(t,i,n,o,r),o.state=t.memoizedState)),"function"==typeof o.componentDidMount&&(t.effectTag|=4)}var Ni=Array.isArray;function Pi(t,e,n){if(null!==(t=n.ref)&&"function"!=typeof t&&"object"!=typeof t){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,t));var o=""+t;return null!==e&&null!==e.ref&&"function"==typeof e.ref&&e.ref._stringRef===o?e.ref:((e=function(t){var e=r.refs;e===ki&&(e=r.refs={}),null===t?delete e[o]:e[o]=t})._stringRef=o,e)}if("string"!=typeof t)throw Error(a(284));if(!n._owner)throw Error(a(290,t))}return t}function Ai(t,e){if("textarea"!==t.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(e)?"object with keys {"+Object.keys(e).join(", ")+"}":e,""))}function Oi(t){function e(e,n){if(t){var r=e.lastEffect;null!==r?(r.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!t)return null;for(;null!==r;)e(n,r),r=r.sibling;return null}function r(t,e){for(t=new Map;null!==e;)null!==e.key?t.set(e.key,e):t.set(e.index,e),e=e.sibling;return t}function o(t,e,n){return(t=Oc(t,e)).index=0,t.sibling=null,t}function i(e,n,r){return e.index=r,t?null!==(r=e.alternate)?(r=r.index)<n?(e.effectTag=2,n):r:(e.effectTag=2,n):n}function l(e){return t&&null===e.alternate&&(e.effectTag=2),e}function c(t,e,n,r){return null===e||6!==e.tag?((e=Rc(n,t.mode,r)).return=t,e):((e=o(e,n)).return=t,e)}function u(t,e,n,r){return null!==e&&e.elementType===n.type?((r=o(e,n.props)).ref=Pi(t,e,n),r.return=t,r):((r=zc(n.type,n.key,n.props,null,t.mode,r)).ref=Pi(t,e,n),r.return=t,r)}function s(t,e,n,r){return null===e||4!==e.tag||e.stateNode.containerInfo!==n.containerInfo||e.stateNode.implementation!==n.implementation?((e=Dc(n,t.mode,r)).return=t,e):((e=o(e,n.children||[])).return=t,e)}function f(t,e,n,r,i){return null===e||7!==e.tag?((e=jc(n,t.mode,r,i)).return=t,e):((e=o(e,n)).return=t,e)}function d(t,e,n){if("string"==typeof e||"number"==typeof e)return(e=Rc(""+e,t.mode,n)).return=t,e;if("object"==typeof e&&null!==e){switch(e.$$typeof){case D:return(n=zc(e.type,e.key,e.props,null,t.mode,n)).ref=Pi(t,null,e),n.return=t,n;case L:return(e=Dc(e,t.mode,n)).return=t,e}if(Ni(e)||X(e))return(e=jc(e,t.mode,n,null)).return=t,e;Ai(t,e)}return null}function p(t,e,n,r){var o=null!==e?e.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:c(t,e,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case D:return n.key===o?n.type===I?f(t,e,n.props.children,r,o):u(t,e,n,r):null;case L:return n.key===o?s(t,e,n,r):null}if(Ni(n)||X(n))return null!==o?null:f(t,e,n,r,null);Ai(t,n)}return null}function m(t,e,n,r,o){if("string"==typeof r||"number"==typeof r)return c(e,t=t.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case D:return t=t.get(null===r.key?n:r.key)||null,r.type===I?f(e,t,r.props.children,o,r.key):u(e,t,r,o);case L:return s(e,t=t.get(null===r.key?n:r.key)||null,r,o)}if(Ni(r)||X(r))return f(e,t=t.get(n)||null,r,o,null);Ai(e,r)}return null}function h(o,a,l,c){for(var u=null,s=null,f=a,h=a=0,g=null;null!==f&&h<l.length;h++){f.index>h?(g=f,f=null):g=f.sibling;var b=p(o,f,l[h],c);if(null===b){null===f&&(f=g);break}t&&f&&null===b.alternate&&e(o,f),a=i(b,a,h),null===s?u=b:s.sibling=b,s=b,f=g}if(h===l.length)return n(o,f),u;if(null===f){for(;h<l.length;h++)null!==(f=d(o,l[h],c))&&(a=i(f,a,h),null===s?u=f:s.sibling=f,s=f);return u}for(f=r(o,f);h<l.length;h++)null!==(g=m(f,o,h,l[h],c))&&(t&&null!==g.alternate&&f.delete(null===g.key?h:g.key),a=i(g,a,h),null===s?u=g:s.sibling=g,s=g);return t&&f.forEach((function(t){return e(o,t)})),u}function g(o,l,c,u){var s=X(c);if("function"!=typeof s)throw Error(a(150));if(null==(c=s.call(c)))throw Error(a(151));for(var f=s=null,h=l,g=l=0,b=null,v=c.next();null!==h&&!v.done;g++,v=c.next()){h.index>g?(b=h,h=null):b=h.sibling;var y=p(o,h,v.value,u);if(null===y){null===h&&(h=b);break}t&&h&&null===y.alternate&&e(o,h),l=i(y,l,g),null===f?s=y:f.sibling=y,f=y,h=b}if(v.done)return n(o,h),s;if(null===h){for(;!v.done;g++,v=c.next())null!==(v=d(o,v.value,u))&&(l=i(v,l,g),null===f?s=v:f.sibling=v,f=v);return s}for(h=r(o,h);!v.done;g++,v=c.next())null!==(v=m(h,o,g,v.value,u))&&(t&&null!==v.alternate&&h.delete(null===v.key?g:v.key),l=i(v,l,g),null===f?s=v:f.sibling=v,f=v);return t&&h.forEach((function(t){return e(o,t)})),s}return function(t,r,i,c){var u="object"==typeof i&&null!==i&&i.type===I&&null===i.key;u&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case D:t:{for(s=i.key,u=r;null!==u;){if(u.key===s){if(7===u.tag?i.type===I:u.elementType===i.type){n(t,u.sibling),(r=o(u,i.type===I?i.props.children:i.props)).ref=Pi(t,u,i),r.return=t,t=r;break t}n(t,u);break}e(t,u),u=u.sibling}i.type===I?((r=jc(i.props.children,t.mode,c,i.key)).return=t,t=r):((c=zc(i.type,i.key,i.props,null,t.mode,c)).ref=Pi(t,r,i),c.return=t,t=c)}return l(t);case L:t:{for(u=i.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(t,r.sibling),(r=o(r,i.children||[])).return=t,t=r;break t}n(t,r);break}e(t,r),r=r.sibling}(r=Dc(i,t.mode,c)).return=t,t=r}return l(t)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(t,r.sibling),(r=o(r,i)).return=t,t=r):(n(t,r),(r=Rc(i,t.mode,c)).return=t,t=r),l(t);if(Ni(i))return h(t,r,i,c);if(X(i))return g(t,r,i,c);if(s&&Ai(t,i),void 0===i&&!u)switch(t.tag){case 1:case 0:throw t=t.type,Error(a(152,t.displayName||t.name||"Component"))}return n(t,r)}}var zi=Oi(!0),ji=Oi(!1),Ri={},Di={current:Ri},Li={current:Ri},Ii={current:Ri};function Ui(t){if(t===Ri)throw Error(a(174));return t}function Fi(t,e){so(Ii,e),so(Li,t),so(Di,Ri);var n=e.nodeType;switch(n){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:Bt(null,"");break;default:e=Bt(e=(n=8===n?e.parentNode:e).namespaceURI||null,n=n.tagName)}uo(Di),so(Di,e)}function Bi(t){uo(Di),uo(Li),uo(Ii)}function qi(t){Ui(Ii.current);var e=Ui(Di.current),n=Bt(e,t.type);e!==n&&(so(Li,t),so(Di,n))}function Hi(t){Li.current===t&&(uo(Di),uo(Li))}var Wi={current:0};function $i(t){for(var e=t;null!==e;){if(13===e.tag){var n=e.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return e}else if(19===e.tag&&void 0!==e.memoizedProps.revealOrder){if(0!=(64&e.effectTag))return e}else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break;for(;null===e.sibling;){if(null===e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}function Vi(t,e){return{responder:t,props:e}}var Yi=z.ReactCurrentDispatcher,Gi=z.ReactCurrentBatchConfig,Qi=0,Xi=null,Ki=null,Ji=null,Zi=null,ta=null,ea=null,na=0,ra=null,oa=0,ia=!1,aa=null,la=0;function ca(){throw Error(a(321))}function ua(t,e){if(null===e)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!Xr(t[n],e[n]))return!1;return!0}function sa(t,e,n,r,o,i){if(Qi=i,Xi=e,Ji=null!==t?t.memoizedState:null,Yi.current=null===Ji?Na:Pa,e=n(r,o),ia){do{ia=!1,la+=1,Ji=null!==t?t.memoizedState:null,ea=Zi,ra=ta=Ki=null,Yi.current=Pa,e=n(r,o)}while(ia);aa=null,la=0}if(Yi.current=Ca,(t=Xi).memoizedState=Zi,t.expirationTime=na,t.updateQueue=ra,t.effectTag|=oa,t=null!==Ki&&null!==Ki.next,Qi=0,ea=ta=Zi=Ji=Ki=Xi=null,na=0,ra=null,oa=0,t)throw Error(a(300));return e}function fa(){Yi.current=Ca,Qi=0,ea=ta=Zi=Ji=Ki=Xi=null,na=0,ra=null,oa=0,ia=!1,aa=null,la=0}function da(){var t={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===ta?Zi=ta=t:ta=ta.next=t,ta}function pa(){if(null!==ea)ea=(ta=ea).next,Ji=null!==(Ki=Ji)?Ki.next:null;else{if(null===Ji)throw Error(a(310));var t={memoizedState:(Ki=Ji).memoizedState,baseState:Ki.baseState,queue:Ki.queue,baseUpdate:Ki.baseUpdate,next:null};ta=null===ta?Zi=t:ta.next=t,Ji=Ki.next}return ta}function ma(t,e){return"function"==typeof e?e(t):e}function ha(t){var e=pa(),n=e.queue;if(null===n)throw Error(a(311));if(n.lastRenderedReducer=t,0<la){var r=n.dispatch;if(null!==aa){var o=aa.get(n);if(void 0!==o){aa.delete(n);var i=e.memoizedState;do{i=t(i,o.action),o=o.next}while(null!==o);return Xr(i,e.memoizedState)||(Ba=!0),e.memoizedState=i,e.baseUpdate===n.last&&(e.baseState=i),n.lastRenderedState=i,[i,r]}}return[e.memoizedState,r]}r=n.last;var l=e.baseUpdate;if(i=e.baseState,null!==l?(null!==r&&(r.next=null),r=l.next):r=null!==r?r.next:null,null!==r){var c=o=null,u=r,s=!1;do{var f=u.expirationTime;f<Qi?(s||(s=!0,c=l,o=i),f>na&&dc(na=f)):(fc(f,u.suspenseConfig),i=u.eagerReducer===t?u.eagerState:t(i,u.action)),l=u,u=u.next}while(null!==u&&u!==r);s||(c=l,o=i),Xr(i,e.memoizedState)||(Ba=!0),e.memoizedState=i,e.baseUpdate=c,e.baseState=o,n.lastRenderedState=i}return[e.memoizedState,n.dispatch]}function ga(t){var e=da();return"function"==typeof t&&(t=t()),e.memoizedState=e.baseState=t,t=(t=e.queue={last:null,dispatch:null,lastRenderedReducer:ma,lastRenderedState:t}).dispatch=Ta.bind(null,Xi,t),[e.memoizedState,t]}function ba(t){return ha(ma)}function va(t,e,n,r){return t={tag:t,create:e,destroy:n,deps:r,next:null},null===ra?(ra={lastEffect:null}).lastEffect=t.next=t:null===(e=ra.lastEffect)?ra.lastEffect=t.next=t:(n=e.next,e.next=t,t.next=n,ra.lastEffect=t),t}function ya(t,e,n,r){var o=da();oa|=t,o.memoizedState=va(e,n,void 0,void 0===r?null:r)}function xa(t,e,n,r){var o=pa();r=void 0===r?null:r;var i=void 0;if(null!==Ki){var a=Ki.memoizedState;if(i=a.destroy,null!==r&&ua(r,a.deps))return void va(0,n,i,r)}oa|=t,o.memoizedState=va(e,n,i,r)}function wa(t,e){return ya(516,192,t,e)}function ka(t,e){return xa(516,192,t,e)}function _a(t,e){return"function"==typeof e?(t=t(),e(t),function(){e(null)}):null!=e?(t=t(),e.current=t,function(){e.current=null}):void 0}function Ea(){}function Sa(t,e){return da().memoizedState=[t,void 0===e?null:e],t}function Ma(t,e){var n=pa();e=void 0===e?null:e;var r=n.memoizedState;return null!==r&&null!==e&&ua(e,r[1])?r[0]:(n.memoizedState=[t,e],t)}function Ta(t,e,n){if(!(25>la))throw Error(a(301));var r=t.alternate;if(t===Xi||null!==r&&r===Xi)if(ia=!0,t={expirationTime:Qi,suspenseConfig:null,action:n,eagerReducer:null,eagerState:null,next:null},null===aa&&(aa=new Map),void 0===(n=aa.get(e)))aa.set(e,t);else{for(e=n;null!==e.next;)e=e.next;e.next=t}else{var o=Jl(),i=wi.suspense;i={expirationTime:o=Zl(o,t,i),suspenseConfig:i,action:n,eagerReducer:null,eagerState:null,next:null};var l=e.last;if(null===l)i.next=i;else{var c=l.next;null!==c&&(i.next=c),l.next=i}if(e.last=i,0===t.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=e.lastRenderedReducer))try{var u=e.lastRenderedState,s=r(u,n);if(i.eagerReducer=r,i.eagerState=s,Xr(s,u))return}catch(t){}tc(t,o)}}var Ca={readContext:ci,useCallback:ca,useContext:ca,useEffect:ca,useImperativeHandle:ca,useLayoutEffect:ca,useMemo:ca,useReducer:ca,useRef:ca,useState:ca,useDebugValue:ca,useResponder:ca,useDeferredValue:ca,useTransition:ca},Na={readContext:ci,useCallback:Sa,useContext:ci,useEffect:wa,useImperativeHandle:function(t,e,n){return n=null!=n?n.concat([t]):null,ya(4,36,_a.bind(null,e,t),n)},useLayoutEffect:function(t,e){return ya(4,36,t,e)},useMemo:function(t,e){var n=da();return e=void 0===e?null:e,t=t(),n.memoizedState=[t,e],t},useReducer:function(t,e,n){var r=da();return e=void 0!==n?n(e):e,r.memoizedState=r.baseState=e,t=(t=r.queue={last:null,dispatch:null,lastRenderedReducer:t,lastRenderedState:e}).dispatch=Ta.bind(null,Xi,t),[r.memoizedState,t]},useRef:function(t){return t={current:t},da().memoizedState=t},useState:ga,useDebugValue:Ea,useResponder:Vi,useDeferredValue:function(t,e){var n=ga(t),r=n[0],o=n[1];return wa((function(){i.unstable_next((function(){var n=Gi.suspense;Gi.suspense=void 0===e?null:e;try{o(t)}finally{Gi.suspense=n}}))}),[t,e]),r},useTransition:function(t){var e=ga(!1),n=e[0],r=e[1];return[Sa((function(e){r(!0),i.unstable_next((function(){var n=Gi.suspense;Gi.suspense=void 0===t?null:t;try{r(!1),e()}finally{Gi.suspense=n}}))}),[t,n]),n]}},Pa={readContext:ci,useCallback:Ma,useContext:ci,useEffect:ka,useImperativeHandle:function(t,e,n){return n=null!=n?n.concat([t]):null,xa(4,36,_a.bind(null,e,t),n)},useLayoutEffect:function(t,e){return xa(4,36,t,e)},useMemo:function(t,e){var n=pa();e=void 0===e?null:e;var r=n.memoizedState;return null!==r&&null!==e&&ua(e,r[1])?r[0]:(t=t(),n.memoizedState=[t,e],t)},useReducer:ha,useRef:function(){return pa().memoizedState},useState:ba,useDebugValue:Ea,useResponder:Vi,useDeferredValue:function(t,e){var n=ba(),r=n[0],o=n[1];return ka((function(){i.unstable_next((function(){var n=Gi.suspense;Gi.suspense=void 0===e?null:e;try{o(t)}finally{Gi.suspense=n}}))}),[t,e]),r},useTransition:function(t){var e=ba(),n=e[0],r=e[1];return[Ma((function(e){r(!0),i.unstable_next((function(){var n=Gi.suspense;Gi.suspense=void 0===t?null:t;try{r(!1),e()}finally{Gi.suspense=n}}))}),[t,n]),n]}},Aa=null,Oa=null,za=!1;function ja(t,e){var n=Pc(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=e,n.return=t,n.effectTag=8,null!==t.lastEffect?(t.lastEffect.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n}function Ra(t,e){switch(t.tag){case 5:var n=t.type;return null!==(e=1!==e.nodeType||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e)&&(t.stateNode=e,!0);case 6:return null!==(e=""===t.pendingProps||3!==e.nodeType?null:e)&&(t.stateNode=e,!0);case 13:default:return!1}}function Da(t){if(za){var e=Oa;if(e){var n=e;if(!Ra(t,e)){if(!(e=nr(n.nextSibling))||!Ra(t,e))return t.effectTag=-1025&t.effectTag|2,za=!1,void(Aa=t);ja(Aa,n)}Aa=t,Oa=nr(e.firstChild)}else t.effectTag=-1025&t.effectTag|2,za=!1,Aa=t}}function La(t){for(t=t.return;null!==t&&5!==t.tag&&3!==t.tag&&13!==t.tag;)t=t.return;Aa=t}function Ia(t){if(t!==Aa)return!1;if(!za)return La(t),za=!0,!1;var e=t.type;if(5!==t.tag||"head"!==e&&"body"!==e&&!Zn(e,t.memoizedProps))for(e=Oa;e;)ja(t,e),e=nr(e.nextSibling);if(La(t),13===t.tag){if(!(t=null!==(t=t.memoizedState)?t.dehydrated:null))throw Error(a(317));t:{for(t=t.nextSibling,e=0;t;){if(8===t.nodeType){var n=t.data;if("/$"===n){if(0===e){Oa=nr(t.nextSibling);break t}e--}else"$"!==n&&"$!"!==n&&"$?"!==n||e++}t=t.nextSibling}Oa=null}}else Oa=Aa?nr(t.stateNode.nextSibling):null;return!0}function Ua(){Oa=Aa=null,za=!1}var Fa=z.ReactCurrentOwner,Ba=!1;function qa(t,e,n,r){e.child=null===t?ji(e,null,n,r):zi(e,t.child,n,r)}function Ha(t,e,n,r,o){n=n.render;var i=e.ref;return li(e,o),r=sa(t,e,n,r,i,o),null===t||Ba?(e.effectTag|=1,qa(t,e,r,o),e.child):(e.updateQueue=t.updateQueue,e.effectTag&=-517,t.expirationTime<=o&&(t.expirationTime=0),il(t,e,o))}function Wa(t,e,n,r,o,i){if(null===t){var a=n.type;return"function"!=typeof a||Ac(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((t=zc(n.type,null,r,null,e.mode,i)).ref=e.ref,t.return=e,e.child=t):(e.tag=15,e.type=a,$a(t,e,a,r,o,i))}return a=t.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:Jr)(o,r)&&t.ref===e.ref)?il(t,e,i):(e.effectTag|=1,(t=Oc(a,r)).ref=e.ref,t.return=e,e.child=t)}function $a(t,e,n,r,o,i){return null!==t&&Jr(t.memoizedProps,r)&&t.ref===e.ref&&(Ba=!1,o<i)?il(t,e,i):Ya(t,e,n,r,i)}function Va(t,e){var n=e.ref;(null===t&&null!==n||null!==t&&t.ref!==n)&&(e.effectTag|=128)}function Ya(t,e,n,r,o){var i=bo(n)?ho:po.current;return i=go(e,i),li(e,o),n=sa(t,e,n,r,i,o),null===t||Ba?(e.effectTag|=1,qa(t,e,n,o),e.child):(e.updateQueue=t.updateQueue,e.effectTag&=-517,t.expirationTime<=o&&(t.expirationTime=0),il(t,e,o))}function Ga(t,e,n,r,o){if(bo(n)){var i=!0;ko(e)}else i=!1;if(li(e,o),null===e.stateNode)null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),Mi(e,n,r),Ci(e,n,r,o),r=!0;else if(null===t){var a=e.stateNode,l=e.memoizedProps;a.props=l;var c=a.context,u=n.contextType;"object"==typeof u&&null!==u?u=ci(u):u=go(e,u=bo(n)?ho:po.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||c!==u)&&Ti(e,a,r,u),ui=!1;var d=e.memoizedState;c=a.state=d;var p=e.updateQueue;null!==p&&(vi(e,p,r,a,o),c=e.memoizedState),l!==r||d!==c||mo.current||ui?("function"==typeof s&&(_i(e,n,s,r),c=e.memoizedState),(l=ui||Si(e,n,l,r,d,c,u))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(e.effectTag|=4)):("function"==typeof a.componentDidMount&&(e.effectTag|=4),e.memoizedProps=r,e.memoizedState=c),a.props=r,a.state=c,a.context=u,r=l):("function"==typeof a.componentDidMount&&(e.effectTag|=4),r=!1)}else a=e.stateNode,l=e.memoizedProps,a.props=e.type===e.elementType?l:Jo(e.type,l),c=a.context,"object"==typeof(u=n.contextType)&&null!==u?u=ci(u):u=go(e,u=bo(n)?ho:po.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||c!==u)&&Ti(e,a,r,u),ui=!1,c=e.memoizedState,d=a.state=c,null!==(p=e.updateQueue)&&(vi(e,p,r,a,o),d=e.memoizedState),l!==r||c!==d||mo.current||ui?("function"==typeof s&&(_i(e,n,s,r),d=e.memoizedState),(s=ui||Si(e,n,l,r,c,d,u))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,d,u),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,d,u)),"function"==typeof a.componentDidUpdate&&(e.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(e.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=256),e.memoizedProps=r,e.memoizedState=d),a.props=r,a.state=d,a.context=u,r=s):("function"!=typeof a.componentDidUpdate||l===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=256),r=!1);return Qa(t,e,n,r,i,o)}function Qa(t,e,n,r,o,i){Va(t,e);var a=0!=(64&e.effectTag);if(!r&&!a)return o&&_o(e,n,!1),il(t,e,i);r=e.stateNode,Fa.current=e;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return e.effectTag|=1,null!==t&&a?(e.child=zi(e,t.child,null,i),e.child=zi(e,null,l,i)):qa(t,e,l,i),e.memoizedState=r.state,o&&_o(e,n,!0),e.child}function Xa(t){var e=t.stateNode;e.pendingContext?xo(0,e.pendingContext,e.pendingContext!==e.context):e.context&&xo(0,e.context,!1),Fi(t,e.containerInfo)}var Ka,Ja,Za,tl={dehydrated:null,retryTime:0};function el(t,e,n){var r,o=e.mode,i=e.pendingProps,a=Wi.current,l=!1;if((r=0!=(64&e.effectTag))||(r=0!=(2&a)&&(null===t||null!==t.memoizedState)),r?(l=!0,e.effectTag&=-65):null!==t&&null===t.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(a|=1),so(Wi,1&a),null===t){if(void 0!==i.fallback&&Da(e),l){if(l=i.fallback,(i=jc(null,o,0,null)).return=e,0==(2&e.mode))for(t=null!==e.memoizedState?e.child.child:e.child,i.child=t;null!==t;)t.return=i,t=t.sibling;return(n=jc(l,o,n,null)).return=e,i.sibling=n,e.memoizedState=tl,e.child=i,n}return o=i.children,e.memoizedState=null,e.child=ji(e,null,o,n)}if(null!==t.memoizedState){if(o=(t=t.child).sibling,l){if(i=i.fallback,(n=Oc(t,t.pendingProps)).return=e,0==(2&e.mode)&&(l=null!==e.memoizedState?e.child.child:e.child)!==t.child)for(n.child=l;null!==l;)l.return=n,l=l.sibling;return(o=Oc(o,i,o.expirationTime)).return=e,n.sibling=o,n.childExpirationTime=0,e.memoizedState=tl,e.child=n,o}return n=zi(e,t.child,i.children,n),e.memoizedState=null,e.child=n}if(t=t.child,l){if(l=i.fallback,(i=jc(null,o,0,null)).return=e,i.child=t,null!==t&&(t.return=i),0==(2&e.mode))for(t=null!==e.memoizedState?e.child.child:e.child,i.child=t;null!==t;)t.return=i,t=t.sibling;return(n=jc(l,o,n,null)).return=e,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,e.memoizedState=tl,e.child=i,n}return e.memoizedState=null,e.child=zi(e,t,i.children,n)}function nl(t,e){t.expirationTime<e&&(t.expirationTime=e);var n=t.alternate;null!==n&&n.expirationTime<e&&(n.expirationTime=e),ai(t.return,e)}function rl(t,e,n,r,o,i){var a=t.memoizedState;null===a?t.memoizedState={isBackwards:e,rendering:null,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(a.isBackwards=e,a.rendering=null,a.last=r,a.tail=n,a.tailExpiration=0,a.tailMode=o,a.lastEffect=i)}function ol(t,e,n){var r=e.pendingProps,o=r.revealOrder,i=r.tail;if(qa(t,e,r.children,n),0!=(2&(r=Wi.current)))r=1&r|2,e.effectTag|=64;else{if(null!==t&&0!=(64&t.effectTag))t:for(t=e.child;null!==t;){if(13===t.tag)null!==t.memoizedState&&nl(t,n);else if(19===t.tag)nl(t,n);else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break t;for(;null===t.sibling;){if(null===t.return||t.return===e)break t;t=t.return}t.sibling.return=t.return,t=t.sibling}r&=1}if(so(Wi,r),0==(2&e.mode))e.memoizedState=null;else switch(o){case"forwards":for(n=e.child,o=null;null!==n;)null!==(t=n.alternate)&&null===$i(t)&&(o=n),n=n.sibling;null===(n=o)?(o=e.child,e.child=null):(o=n.sibling,n.sibling=null),rl(e,!1,o,n,i,e.lastEffect);break;case"backwards":for(n=null,o=e.child,e.child=null;null!==o;){if(null!==(t=o.alternate)&&null===$i(t)){e.child=o;break}t=o.sibling,o.sibling=n,n=o,o=t}rl(e,!0,n,null,i,e.lastEffect);break;case"together":rl(e,!1,null,null,void 0,e.lastEffect);break;default:e.memoizedState=null}return e.child}function il(t,e,n){null!==t&&(e.dependencies=t.dependencies);var r=e.expirationTime;if(0!==r&&dc(r),e.childExpirationTime<n)return null;if(null!==t&&e.child!==t.child)throw Error(a(153));if(null!==e.child){for(n=Oc(t=e.child,t.pendingProps,t.expirationTime),e.child=n,n.return=e;null!==t.sibling;)t=t.sibling,(n=n.sibling=Oc(t,t.pendingProps,t.expirationTime)).return=e;n.sibling=null}return e.child}function al(t){t.effectTag|=4}function ll(t,e){switch(t.tailMode){case"hidden":e=t.tail;for(var n=null;null!==e;)null!==e.alternate&&(n=e),e=e.sibling;null===n?t.tail=null:n.sibling=null;break;case"collapsed":n=t.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?e||null===t.tail?t.tail=null:t.tail.sibling=null:r.sibling=null}}function cl(t){switch(t.tag){case 1:bo(t.type)&&vo();var e=t.effectTag;return 4096&e?(t.effectTag=-4097&e|64,t):null;case 3:if(Bi(),yo(),0!=(64&(e=t.effectTag)))throw Error(a(285));return t.effectTag=-4097&e|64,t;case 5:return Hi(t),null;case 13:return uo(Wi),4096&(e=t.effectTag)?(t.effectTag=-4097&e|64,t):null;case 19:return uo(Wi),null;case 4:return Bi(),null;case 10:return ii(t),null;default:return null}}function ul(t,e){return{value:t,source:e,stack:J(e)}}Ka=function(t,e){for(var n=e.child;null!==n;){if(5===n.tag||6===n.tag)t.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ja=function(t,e,n,r,i){var a=t.memoizedProps;if(a!==r){var l,c,u=e.stateNode;switch(Ui(Di.current),t=null,n){case"input":a=Mt(u,a),r=Mt(u,r),t=[];break;case"option":a=Ot(u,a),r=Ot(u,r),t=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),t=[];break;case"textarea":a=jt(u,a),r=jt(u,r),t=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(u.onclick=Wn)}for(l in Bn(n,r),n=null,a)if(!r.hasOwnProperty(l)&&a.hasOwnProperty(l)&&null!=a[l])if("style"===l)for(c in u=a[l])u.hasOwnProperty(c)&&(n||(n={}),n[c]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(p.hasOwnProperty(l)?t||(t=[]):(t=t||[]).push(l,null));for(l in r){var s=r[l];if(u=null!=a?a[l]:void 0,r.hasOwnProperty(l)&&s!==u&&(null!=s||null!=u))if("style"===l)if(u){for(c in u)!u.hasOwnProperty(c)||s&&s.hasOwnProperty(c)||(n||(n={}),n[c]="");for(c in s)s.hasOwnProperty(c)&&u[c]!==s[c]&&(n||(n={}),n[c]=s[c])}else n||(t||(t=[]),t.push(l,n)),n=s;else"dangerouslySetInnerHTML"===l?(s=s?s.__html:void 0,u=u?u.__html:void 0,null!=s&&u!==s&&(t=t||[]).push(l,""+s)):"children"===l?u===s||"string"!=typeof s&&"number"!=typeof s||(t=t||[]).push(l,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(p.hasOwnProperty(l)?(null!=s&&Hn(i,l),t||u===s||(t=[])):(t=t||[]).push(l,s))}n&&(t=t||[]).push("style",n),i=t,(e.updateQueue=i)&&al(e)}},Za=function(t,e,n,r){n!==r&&al(e)};var sl="function"==typeof WeakSet?WeakSet:Set;function fl(t,e){var n=e.source,r=e.stack;null===r&&null!==n&&(r=J(n)),null!==n&&K(n.type),e=e.value,null!==t&&1===t.tag&&K(t.type);try{console.error(e)}catch(t){setTimeout((function(){throw t}))}}function dl(t){var e=t.ref;if(null!==e)if("function"==typeof e)try{e(null)}catch(e){Ec(t,e)}else e.current=null}function pl(t,e){switch(e.tag){case 0:case 11:case 15:ml(2,0,e);break;case 1:if(256&e.effectTag&&null!==t){var n=t.memoizedProps,r=t.memoizedState;e=(t=e.stateNode).getSnapshotBeforeUpdate(e.elementType===e.type?n:Jo(e.type,n),r),t.__reactInternalSnapshotBeforeUpdate=e}break;case 3:case 5:case 6:case 4:case 17:break;default:throw Error(a(163))}}function ml(t,e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if(0!=(r.tag&t)){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}0!=(r.tag&e)&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function hl(t,e,n){switch("function"==typeof Cc&&Cc(e),e.tag){case 0:case 11:case 14:case 15:if(null!==(t=e.updateQueue)&&null!==(t=t.lastEffect)){var r=t.next;$o(97<n?97:n,(function(){var t=r;do{var n=t.destroy;if(void 0!==n){var o=e;try{n()}catch(t){Ec(o,t)}}t=t.next}while(t!==r)}))}break;case 1:dl(e),"function"==typeof(n=e.stateNode).componentWillUnmount&&function(t,e){try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Ec(t,e)}}(e,n);break;case 5:dl(e);break;case 4:yl(t,e,n)}}function gl(t){var e=t.alternate;t.return=null,t.child=null,t.memoizedState=null,t.updateQueue=null,t.dependencies=null,t.alternate=null,t.firstEffect=null,t.lastEffect=null,t.pendingProps=null,t.memoizedProps=null,null!==e&&gl(e)}function bl(t){return 5===t.tag||3===t.tag||4===t.tag}function vl(t){t:{for(var e=t.return;null!==e;){if(bl(e)){var n=e;break t}e=e.return}throw Error(a(160))}switch(e=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:e=e.containerInfo,r=!0;break;default:throw Error(a(161))}16&n.effectTag&&(Wt(e,""),n.effectTag&=-17);t:e:for(n=t;;){for(;null===n.sibling;){if(null===n.return||bl(n.return)){n=null;break t}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue e;if(null===n.child||4===n.tag)continue e;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break t}}for(var o=t;;){var i=5===o.tag||6===o.tag;if(i){var l=i?o.stateNode:o.stateNode.instance;if(n)if(r){var c=l;l=n,8===(i=e).nodeType?i.parentNode.insertBefore(c,l):i.insertBefore(c,l)}else e.insertBefore(l,n);else r?(8===(c=e).nodeType?(i=c.parentNode).insertBefore(l,c):(i=c).appendChild(l),null!=(c=c._reactRootContainer)||null!==i.onclick||(i.onclick=Wn)):e.appendChild(l)}else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function yl(t,e,n){for(var r,o,i=e,l=!1;;){if(!l){l=i.return;t:for(;;){if(null===l)throw Error(a(160));switch(r=l.stateNode,l.tag){case 5:o=!1;break t;case 3:case 4:r=r.containerInfo,o=!0;break t}l=l.return}l=!0}if(5===i.tag||6===i.tag){t:for(var c=t,u=i,s=n,f=u;;)if(hl(c,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===u)break;for(;null===f.sibling;){if(null===f.return||f.return===u)break t;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(c=r,u=i.stateNode,8===c.nodeType?c.parentNode.removeChild(u):c.removeChild(u)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(hl(t,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===e)break;for(;null===i.sibling;){if(null===i.return||i.return===e)return;4===(i=i.return).tag&&(l=!1)}i.sibling.return=i.return,i=i.sibling}}function xl(t,e){switch(e.tag){case 0:case 11:case 14:case 15:ml(4,8,e);break;case 1:break;case 5:var n=e.stateNode;if(null!=n){var r=e.memoizedProps,o=null!==t?t.memoizedProps:r;t=e.type;var i=e.updateQueue;if(e.updateQueue=null,null!==i){for(n[ar]=r,"input"===t&&"radio"===r.type&&null!=r.name&&Ct(n,r),qn(t,o),e=qn(t,r),o=0;o<i.length;o+=2){var l=i[o],c=i[o+1];"style"===l?Un(n,c):"dangerouslySetInnerHTML"===l?Ht(n,c):"children"===l?Wt(n,c):kt(n,l,c,e)}switch(t){case"input":Nt(n,r);break;case"textarea":Dt(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(t=r.value)?zt(n,!!r.multiple,t,!1):e!==!!r.multiple&&(null!=r.defaultValue?zt(n,!!r.multiple,r.defaultValue,!0):zt(n,!!r.multiple,r.multiple?[]:"",!1))}}}break;case 6:if(null===e.stateNode)throw Error(a(162));e.stateNode.nodeValue=e.memoizedProps;break;case 3:(e=e.stateNode).hydrate&&(e.hydrate=!1,Me(e.containerInfo));break;case 12:break;case 13:if(n=e,null===e.memoizedState?r=!1:(r=!0,n=e.child,Fl=qo()),null!==n)t:for(t=n;;){if(5===t.tag)i=t.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=t.stateNode,o=null!=(o=t.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=In("display",o));else if(6===t.tag)t.stateNode.nodeValue=r?"":t.memoizedProps;else{if(13===t.tag&&null!==t.memoizedState&&null===t.memoizedState.dehydrated){(i=t.child.sibling).return=t,t=i;continue}if(null!==t.child){t.child.return=t,t=t.child;continue}}if(t===n)break t;for(;null===t.sibling;){if(null===t.return||t.return===n)break t;t=t.return}t.sibling.return=t.return,t=t.sibling}wl(e);break;case 19:wl(e);break;case 17:case 20:case 21:break;default:throw Error(a(163))}}function wl(t){var e=t.updateQueue;if(null!==e){t.updateQueue=null;var n=t.stateNode;null===n&&(n=t.stateNode=new sl),e.forEach((function(e){var r=Mc.bind(null,t,e);n.has(e)||(n.add(e),e.then(r,r))}))}}var kl="function"==typeof WeakMap?WeakMap:Map;function _l(t,e,n){(n=di(n,null)).tag=3,n.payload={element:null};var r=e.value;return n.callback=function(){ql||(ql=!0,Hl=r),fl(t,e)},n}function El(t,e,n){(n=di(n,null)).tag=3;var r=t.type.getDerivedStateFromError;if("function"==typeof r){var o=e.value;n.payload=function(){return fl(t,e),r(o)}}var i=t.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Wl?Wl=new Set([this]):Wl.add(this),fl(t,e));var n=e.stack;this.componentDidCatch(e.value,{componentStack:null!==n?n:""})}),n}var Sl,Ml=Math.ceil,Tl=z.ReactCurrentDispatcher,Cl=z.ReactCurrentOwner,Nl=0,Pl=null,Al=null,Ol=0,zl=0,jl=null,Rl=1073741823,Dl=1073741823,Ll=null,Il=0,Ul=!1,Fl=0,Bl=null,ql=!1,Hl=null,Wl=null,$l=!1,Vl=null,Yl=90,Gl=null,Ql=0,Xl=null,Kl=0;function Jl(){return 0!=(48&Nl)?1073741821-(qo()/10|0):0!==Kl?Kl:Kl=1073741821-(qo()/10|0)}function Zl(t,e,n){if(0==(2&(e=e.mode)))return 1073741823;var r=Ho();if(0==(4&e))return 99===r?1073741823:1073741822;if(0!=(16&Nl))return Ol;if(null!==n)t=Ko(t,0|n.timeoutMs||5e3,250);else switch(r){case 99:t=1073741823;break;case 98:t=Ko(t,150,100);break;case 97:case 96:t=Ko(t,5e3,250);break;case 95:t=2;break;default:throw Error(a(326))}return null!==Pl&&t===Ol&&--t,t}function tc(t,e){if(50<Ql)throw Ql=0,Xl=null,Error(a(185));if(null!==(t=ec(t,e))){var n=Ho();1073741823===e?0!=(8&Nl)&&0==(48&Nl)?ic(t):(rc(t),0===Nl&&Go()):rc(t),0==(4&Nl)||98!==n&&99!==n||(null===Gl?Gl=new Map([[t,e]]):(void 0===(n=Gl.get(t))||n>e)&&Gl.set(t,e))}}function ec(t,e){t.expirationTime<e&&(t.expirationTime=e);var n=t.alternate;null!==n&&n.expirationTime<e&&(n.expirationTime=e);var r=t.return,o=null;if(null===r&&3===t.tag)o=t.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<e&&(r.childExpirationTime=e),null!==n&&n.childExpirationTime<e&&(n.childExpirationTime=e),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Pl===o&&(dc(e),4===zl&&Uc(o,Ol)),Fc(o,e)),o}function nc(t){var e=t.lastExpiredTime;return 0!==e?e:Ic(t,e=t.firstPendingTime)?(e=t.lastPingedTime)>(t=t.nextKnownPendingLevel)?e:t:e}function rc(t){if(0!==t.lastExpiredTime)t.callbackExpirationTime=1073741823,t.callbackPriority=99,t.callbackNode=Yo(ic.bind(null,t));else{var e=nc(t),n=t.callbackNode;if(0===e)null!==n&&(t.callbackNode=null,t.callbackExpirationTime=0,t.callbackPriority=90);else{var r=Jl();if(1073741823===e?r=99:1===e||2===e?r=95:r=0>=(r=10*(1073741821-e)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=t.callbackPriority;if(t.callbackExpirationTime===e&&o>=r)return;n!==Do&&Mo(n)}t.callbackExpirationTime=e,t.callbackPriority=r,e=1073741823===e?Yo(ic.bind(null,t)):Vo(r,oc.bind(null,t),{timeout:10*(1073741821-e)-qo()}),t.callbackNode=e}}}function oc(t,e){if(Kl=0,e)return Bc(t,e=Jl()),rc(t),null;var n=nc(t);if(0!==n){if(e=t.callbackNode,0!=(48&Nl))throw Error(a(327));if(wc(),t===Pl&&n===Ol||cc(t,n),null!==Al){var r=Nl;Nl|=16;for(var o=sc();;)try{mc();break}catch(e){uc(t,e)}if(ri(),Nl=r,Tl.current=o,1===zl)throw e=jl,cc(t,n),Uc(t,n),rc(t),e;if(null===Al)switch(o=t.finishedWork=t.current.alternate,t.finishedExpirationTime=n,r=zl,Pl=null,r){case 0:case 1:throw Error(a(345));case 2:Bc(t,2<n?2:n);break;case 3:if(Uc(t,n),n===(r=t.lastSuspendedTime)&&(t.nextKnownPendingLevel=bc(o)),1073741823===Rl&&10<(o=Fl+500-qo())){if(Ul){var i=t.lastPingedTime;if(0===i||i>=n){t.lastPingedTime=n,cc(t,n);break}}if(0!==(i=nc(t))&&i!==n)break;if(0!==r&&r!==n){t.lastPingedTime=r;break}t.timeoutHandle=tr(vc.bind(null,t),o);break}vc(t);break;case 4:if(Uc(t,n),n===(r=t.lastSuspendedTime)&&(t.nextKnownPendingLevel=bc(o)),Ul&&(0===(o=t.lastPingedTime)||o>=n)){t.lastPingedTime=n,cc(t,n);break}if(0!==(o=nc(t))&&o!==n)break;if(0!==r&&r!==n){t.lastPingedTime=r;break}if(1073741823!==Dl?r=10*(1073741821-Dl)-qo():1073741823===Rl?r=0:(r=10*(1073741821-Rl)-5e3,0>(r=(o=qo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Ml(r/1960))-r)&&(r=n)),10<r){t.timeoutHandle=tr(vc.bind(null,t),r);break}vc(t);break;case 5:if(1073741823!==Rl&&null!==Ll){i=Rl;var l=Ll;if(0>=(r=0|l.busyMinDurationMs)?r=0:(o=0|l.busyDelayMs,r=(i=qo()-(10*(1073741821-i)-(0|l.timeoutMs||5e3)))<=o?0:o+r-i),10<r){Uc(t,n),t.timeoutHandle=tr(vc.bind(null,t),r);break}}vc(t);break;default:throw Error(a(329))}if(rc(t),t.callbackNode===e)return oc.bind(null,t)}}return null}function ic(t){var e=t.lastExpiredTime;if(e=0!==e?e:1073741823,t.finishedExpirationTime===e)vc(t);else{if(0!=(48&Nl))throw Error(a(327));if(wc(),t===Pl&&e===Ol||cc(t,e),null!==Al){var n=Nl;Nl|=16;for(var r=sc();;)try{pc();break}catch(e){uc(t,e)}if(ri(),Nl=n,Tl.current=r,1===zl)throw n=jl,cc(t,e),Uc(t,e),rc(t),n;if(null!==Al)throw Error(a(261));t.finishedWork=t.current.alternate,t.finishedExpirationTime=e,Pl=null,vc(t),rc(t)}}return null}function ac(t,e){var n=Nl;Nl|=1;try{return t(e)}finally{0===(Nl=n)&&Go()}}function lc(t,e){var n=Nl;Nl&=-2,Nl|=8;try{return t(e)}finally{0===(Nl=n)&&Go()}}function cc(t,e){t.finishedWork=null,t.finishedExpirationTime=0;var n=t.timeoutHandle;if(-1!==n&&(t.timeoutHandle=-1,er(n)),null!==Al)for(n=Al.return;null!==n;){var r=n;switch(r.tag){case 1:var o=r.type.childContextTypes;null!=o&&vo();break;case 3:Bi(),yo();break;case 5:Hi(r);break;case 4:Bi();break;case 13:case 19:uo(Wi);break;case 10:ii(r)}n=n.return}Pl=t,Al=Oc(t.current,null),Ol=e,zl=0,jl=null,Dl=Rl=1073741823,Ll=null,Il=0,Ul=!1}function uc(t,e){for(;;){try{if(ri(),fa(),null===Al||null===Al.return)return zl=1,jl=e,null;t:{var n=t,r=Al.return,o=Al,i=e;if(e=Ol,o.effectTag|=2048,o.firstEffect=o.lastEffect=null,null!==i&&"object"==typeof i&&"function"==typeof i.then){var a=i,l=0!=(1&Wi.current),c=r;do{var u;if(u=13===c.tag){var s=c.memoizedState;if(null!==s)u=null!==s.dehydrated;else{var f=c.memoizedProps;u=void 0!==f.fallback&&(!0!==f.unstable_avoidThisFallback||!l)}}if(u){var d=c.updateQueue;if(null===d){var p=new Set;p.add(a),c.updateQueue=p}else d.add(a);if(0==(2&c.mode)){if(c.effectTag|=64,o.effectTag&=-2981,1===o.tag)if(null===o.alternate)o.tag=17;else{var m=di(1073741823,null);m.tag=2,mi(o,m)}o.expirationTime=1073741823;break t}i=void 0,o=e;var h=n.pingCache;if(null===h?(h=n.pingCache=new kl,i=new Set,h.set(a,i)):void 0===(i=h.get(a))&&(i=new Set,h.set(a,i)),!i.has(o)){i.add(o);var g=Sc.bind(null,n,a,o);a.then(g,g)}c.effectTag|=4096,c.expirationTime=e;break t}c=c.return}while(null!==c);i=Error((K(o.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+J(o))}5!==zl&&(zl=2),i=ul(i,o),c=r;do{switch(c.tag){case 3:a=i,c.effectTag|=4096,c.expirationTime=e,hi(c,_l(c,a,e));break t;case 1:a=i;var b=c.type,v=c.stateNode;if(0==(64&c.effectTag)&&("function"==typeof b.getDerivedStateFromError||null!==v&&"function"==typeof v.componentDidCatch&&(null===Wl||!Wl.has(v)))){c.effectTag|=4096,c.expirationTime=e,hi(c,El(c,a,e));break t}}c=c.return}while(null!==c)}Al=gc(Al)}catch(t){e=t;continue}break}}function sc(){var t=Tl.current;return Tl.current=Ca,null===t?Ca:t}function fc(t,e){t<Rl&&2<t&&(Rl=t),null!==e&&t<Dl&&2<t&&(Dl=t,Ll=e)}function dc(t){t>Il&&(Il=t)}function pc(){for(;null!==Al;)Al=hc(Al)}function mc(){for(;null!==Al&&!To();)Al=hc(Al)}function hc(t){var e=Sl(t.alternate,t,Ol);return t.memoizedProps=t.pendingProps,null===e&&(e=gc(t)),Cl.current=null,e}function gc(t){Al=t;do{var e=Al.alternate;if(t=Al.return,0==(2048&Al.effectTag)){t:{var n=e,r=Ol,i=(e=Al).pendingProps;switch(e.tag){case 2:case 16:break;case 15:case 0:break;case 1:bo(e.type)&&vo();break;case 3:Bi(),yo(),(i=e.stateNode).pendingContext&&(i.context=i.pendingContext,i.pendingContext=null),(null===n||null===n.child)&&Ia(e)&&al(e);break;case 5:Hi(e),r=Ui(Ii.current);var l=e.type;if(null!==n&&null!=e.stateNode)Ja(n,e,l,i,r),n.ref!==e.ref&&(e.effectTag|=128);else if(i){var c=Ui(Di.current);if(Ia(e)){var u=(i=e).stateNode;n=i.type;var s=i.memoizedProps,f=r;switch(u[ir]=i,u[ar]=s,l=void 0,r=u,n){case"iframe":case"object":case"embed":Sn("load",r);break;case"video":case"audio":for(u=0;u<te.length;u++)Sn(te[u],r);break;case"source":Sn("error",r);break;case"img":case"image":case"link":Sn("error",r),Sn("load",r);break;case"form":Sn("reset",r),Sn("submit",r);break;case"details":Sn("toggle",r);break;case"input":Tt(r,s),Sn("invalid",r),Hn(f,"onChange");break;case"select":r._wrapperState={wasMultiple:!!s.multiple},Sn("invalid",r),Hn(f,"onChange");break;case"textarea":Rt(r,s),Sn("invalid",r),Hn(f,"onChange")}for(l in Bn(n,s),u=null,s)s.hasOwnProperty(l)&&(c=s[l],"children"===l?"string"==typeof c?r.textContent!==c&&(u=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(u=["children",""+c]):p.hasOwnProperty(l)&&null!=c&&Hn(f,l));switch(n){case"input":Et(r),Pt(r,s,!0);break;case"textarea":Et(r),Lt(r);break;case"select":case"option":break;default:"function"==typeof s.onClick&&(r.onclick=Wn)}l=u,i.updateQueue=l,(i=null!==l)&&al(e)}else{n=e,f=l,s=i,u=9===r.nodeType?r:r.ownerDocument,c===It&&(c=Ft(f)),c===It?"script"===f?((s=u.createElement("div")).innerHTML="<script><\/script>",u=s.removeChild(s.firstChild)):"string"==typeof s.is?u=u.createElement(f,{is:s.is}):(u=u.createElement(f),"select"===f&&(f=u,s.multiple?f.multiple=!0:s.size&&(f.size=s.size))):u=u.createElementNS(c,f),(s=u)[ir]=n,s[ar]=i,Ka(s,e),e.stateNode=s;var d=r,m=qn(f=l,n=i);switch(f){case"iframe":case"object":case"embed":Sn("load",s),r=n;break;case"video":case"audio":for(r=0;r<te.length;r++)Sn(te[r],s);r=n;break;case"source":Sn("error",s),r=n;break;case"img":case"image":case"link":Sn("error",s),Sn("load",s),r=n;break;case"form":Sn("reset",s),Sn("submit",s),r=n;break;case"details":Sn("toggle",s),r=n;break;case"input":Tt(s,n),r=Mt(s,n),Sn("invalid",s),Hn(d,"onChange");break;case"option":r=Ot(s,n);break;case"select":s._wrapperState={wasMultiple:!!n.multiple},r=o({},n,{value:void 0}),Sn("invalid",s),Hn(d,"onChange");break;case"textarea":Rt(s,n),r=jt(s,n),Sn("invalid",s),Hn(d,"onChange");break;default:r=n}Bn(f,r),u=void 0,c=f;var h=s,g=r;for(u in g)if(g.hasOwnProperty(u)){var b=g[u];"style"===u?Un(h,b):"dangerouslySetInnerHTML"===u?null!=(b=b?b.__html:void 0)&&Ht(h,b):"children"===u?"string"==typeof b?("textarea"!==c||""!==b)&&Wt(h,b):"number"==typeof b&&Wt(h,""+b):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(p.hasOwnProperty(u)?null!=b&&Hn(d,u):null!=b&&kt(h,u,b,m))}switch(f){case"input":Et(s),Pt(s,n,!1);break;case"textarea":Et(s),Lt(s);break;case"option":null!=n.value&&s.setAttribute("value",""+wt(n.value));break;case"select":(r=s).multiple=!!n.multiple,null!=(s=n.value)?zt(r,!!n.multiple,s,!1):null!=n.defaultValue&&zt(r,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof r.onClick&&(s.onclick=Wn)}(i=Jn(l,i))&&al(e)}null!==e.ref&&(e.effectTag|=128)}else if(null===e.stateNode)throw Error(a(166));break;case 6:if(n&&null!=e.stateNode)Za(0,e,n.memoizedProps,i);else{if("string"!=typeof i&&null===e.stateNode)throw Error(a(166));r=Ui(Ii.current),Ui(Di.current),Ia(e)?(l=(i=e).stateNode,r=i.memoizedProps,l[ir]=i,(i=l.nodeValue!==r)&&al(e)):(l=e,(i=(9===r.nodeType?r:r.ownerDocument).createTextNode(i))[ir]=l,e.stateNode=i)}break;case 11:break;case 13:if(uo(Wi),i=e.memoizedState,0!=(64&e.effectTag)){e.expirationTime=r;break t}i=null!==i,l=!1,null===n?void 0!==e.memoizedProps.fallback&&Ia(e):(l=null!==(r=n.memoizedState),i||null===r||null!==(r=n.child.sibling)&&(null!==(s=e.firstEffect)?(e.firstEffect=r,r.nextEffect=s):(e.firstEffect=e.lastEffect=r,r.nextEffect=null),r.effectTag=8)),i&&!l&&0!=(2&e.mode)&&(null===n&&!0!==e.memoizedProps.unstable_avoidThisFallback||0!=(1&Wi.current)?0===zl&&(zl=3):(0!==zl&&3!==zl||(zl=4),0!==Il&&null!==Pl&&(Uc(Pl,Ol),Fc(Pl,Il)))),(i||l)&&(e.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Bi();break;case 10:ii(e);break;case 9:case 14:break;case 17:bo(e.type)&&vo();break;case 19:if(uo(Wi),null===(i=e.memoizedState))break;if(l=0!=(64&e.effectTag),null===(s=i.rendering)){if(l)ll(i,!1);else if(0!==zl||null!==n&&0!=(64&n.effectTag))for(n=e.child;null!==n;){if(null!==(s=$i(n))){for(e.effectTag|=64,ll(i,!1),null!==(l=s.updateQueue)&&(e.updateQueue=l,e.effectTag|=4),null===i.lastEffect&&(e.firstEffect=null),e.lastEffect=i.lastEffect,i=r,l=e.child;null!==l;)n=i,(r=l).effectTag&=2,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null,null===(s=r.alternate)?(r.childExpirationTime=0,r.expirationTime=n,r.child=null,r.memoizedProps=null,r.memoizedState=null,r.updateQueue=null,r.dependencies=null):(r.childExpirationTime=s.childExpirationTime,r.expirationTime=s.expirationTime,r.child=s.child,r.memoizedProps=s.memoizedProps,r.memoizedState=s.memoizedState,r.updateQueue=s.updateQueue,n=s.dependencies,r.dependencies=null===n?null:{expirationTime:n.expirationTime,firstContext:n.firstContext,responders:n.responders}),l=l.sibling;so(Wi,1&Wi.current|2),e=e.child;break t}n=n.sibling}}else{if(!l)if(null!==(n=$i(s))){if(e.effectTag|=64,l=!0,null!==(r=n.updateQueue)&&(e.updateQueue=r,e.effectTag|=4),ll(i,!0),null===i.tail&&"hidden"===i.tailMode&&!s.alternate){null!==(e=e.lastEffect=i.lastEffect)&&(e.nextEffect=null);break}}else qo()>i.tailExpiration&&1<r&&(e.effectTag|=64,l=!0,ll(i,!1),e.expirationTime=e.childExpirationTime=r-1);i.isBackwards?(s.sibling=e.child,e.child=s):(null!==(r=i.last)?r.sibling=s:e.child=s,i.last=s)}if(null!==i.tail){0===i.tailExpiration&&(i.tailExpiration=qo()+500),r=i.tail,i.rendering=r,i.tail=r.sibling,i.lastEffect=e.lastEffect,r.sibling=null,i=Wi.current,so(Wi,i=l?1&i|2:1&i),e=r;break t}break;case 20:case 21:break;default:throw Error(a(156,e.tag))}e=null}if(i=Al,1===Ol||1!==i.childExpirationTime){for(l=0,r=i.child;null!==r;)(n=r.expirationTime)>l&&(l=n),(s=r.childExpirationTime)>l&&(l=s),r=r.sibling;i.childExpirationTime=l}if(null!==e)return e;null!==t&&0==(2048&t.effectTag)&&(null===t.firstEffect&&(t.firstEffect=Al.firstEffect),null!==Al.lastEffect&&(null!==t.lastEffect&&(t.lastEffect.nextEffect=Al.firstEffect),t.lastEffect=Al.lastEffect),1<Al.effectTag&&(null!==t.lastEffect?t.lastEffect.nextEffect=Al:t.firstEffect=Al,t.lastEffect=Al))}else{if(null!==(e=cl(Al)))return e.effectTag&=2047,e;null!==t&&(t.firstEffect=t.lastEffect=null,t.effectTag|=2048)}if(null!==(e=Al.sibling))return e;Al=t}while(null!==Al);return 0===zl&&(zl=5),null}function bc(t){var e=t.expirationTime;return e>(t=t.childExpirationTime)?e:t}function vc(t){var e=Ho();return $o(99,yc.bind(null,t,e)),null}function yc(t,e){do{wc()}while(null!==Vl);if(0!=(48&Nl))throw Error(a(327));var n=t.finishedWork,r=t.finishedExpirationTime;if(null===n)return null;if(t.finishedWork=null,t.finishedExpirationTime=0,n===t.current)throw Error(a(177));t.callbackNode=null,t.callbackExpirationTime=0,t.callbackPriority=90,t.nextKnownPendingLevel=0;var o=bc(n);if(t.firstPendingTime=o,r<=t.lastSuspendedTime?t.firstSuspendedTime=t.lastSuspendedTime=t.nextKnownPendingLevel=0:r<=t.firstSuspendedTime&&(t.firstSuspendedTime=r-1),r<=t.lastPingedTime&&(t.lastPingedTime=0),r<=t.lastExpiredTime&&(t.lastExpiredTime=0),t===Pl&&(Al=Pl=null,Ol=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=Nl;Nl|=32,Cl.current=null,Xn=En;var l=Gn();if(Qn(l)){if("selectionStart"in l)var c={start:l.selectionStart,end:l.selectionEnd};else t:{var u=(c=(c=l.ownerDocument)&&c.defaultView||window).getSelection&&c.getSelection();if(u&&0!==u.rangeCount){c=u.anchorNode;var s=u.anchorOffset,f=u.focusNode;u=u.focusOffset;try{c.nodeType,f.nodeType}catch(t){c=null;break t}var d=0,p=-1,m=-1,h=0,g=0,b=l,v=null;e:for(;;){for(var y;b!==c||0!==s&&3!==b.nodeType||(p=d+s),b!==f||0!==u&&3!==b.nodeType||(m=d+u),3===b.nodeType&&(d+=b.nodeValue.length),null!==(y=b.firstChild);)v=b,b=y;for(;;){if(b===l)break e;if(v===c&&++h===s&&(p=d),v===f&&++g===u&&(m=d),null!==(y=b.nextSibling))break;v=(b=v).parentNode}b=y}c=-1===p||-1===m?null:{start:p,end:m}}else c=null}c=c||{start:0,end:0}}else c=null;Kn={focusedElem:l,selectionRange:c},En=!1,Bl=o;do{try{xc()}catch(t){if(null===Bl)throw Error(a(330));Ec(Bl,t),Bl=Bl.nextEffect}}while(null!==Bl);Bl=o;do{try{for(l=t,c=e;null!==Bl;){var x=Bl.effectTag;if(16&x&&Wt(Bl.stateNode,""),128&x){var w=Bl.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&x){case 2:vl(Bl),Bl.effectTag&=-3;break;case 6:vl(Bl),Bl.effectTag&=-3,xl(Bl.alternate,Bl);break;case 1024:Bl.effectTag&=-1025;break;case 1028:Bl.effectTag&=-1025,xl(Bl.alternate,Bl);break;case 4:xl(Bl.alternate,Bl);break;case 8:yl(l,s=Bl,c),gl(s)}Bl=Bl.nextEffect}}catch(t){if(null===Bl)throw Error(a(330));Ec(Bl,t),Bl=Bl.nextEffect}}while(null!==Bl);if(k=Kn,w=Gn(),x=k.focusedElem,c=k.selectionRange,w!==x&&x&&x.ownerDocument&&function t(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?t(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}(x.ownerDocument.documentElement,x)){null!==c&&Qn(x)&&(w=c.start,void 0===(k=c.end)&&(k=w),"selectionStart"in x?(x.selectionStart=w,x.selectionEnd=Math.min(k,x.value.length)):(k=(w=x.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),s=x.textContent.length,l=Math.min(c.start,s),c=void 0===c.end?l:Math.min(c.end,s),!k.extend&&l>c&&(s=c,c=l,l=s),s=Yn(x,l),f=Yn(x,c),s&&f&&(1!==k.rangeCount||k.anchorNode!==s.node||k.anchorOffset!==s.offset||k.focusNode!==f.node||k.focusOffset!==f.offset)&&((w=w.createRange()).setStart(s.node,s.offset),k.removeAllRanges(),l>c?(k.addRange(w),k.extend(f.node,f.offset)):(w.setEnd(f.node,f.offset),k.addRange(w))))),w=[];for(k=x;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof x.focus&&x.focus(),x=0;x<w.length;x++)(k=w[x]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Kn=null,En=!!Xn,Xn=null,t.current=n,Bl=o;do{try{for(x=r;null!==Bl;){var _=Bl.effectTag;if(36&_){var E=Bl.alternate;switch(k=x,(w=Bl).tag){case 0:case 11:case 15:ml(16,32,w);break;case 1:var S=w.stateNode;if(4&w.effectTag)if(null===E)S.componentDidMount();else{var M=w.elementType===w.type?E.memoizedProps:Jo(w.type,E.memoizedProps);S.componentDidUpdate(M,E.memoizedState,S.__reactInternalSnapshotBeforeUpdate)}var T=w.updateQueue;null!==T&&yi(0,T,S);break;case 3:var C=w.updateQueue;if(null!==C){if(l=null,null!==w.child)switch(w.child.tag){case 5:l=w.child.stateNode;break;case 1:l=w.child.stateNode}yi(0,C,l)}break;case 5:var N=w.stateNode;null===E&&4&w.effectTag&&Jn(w.type,w.memoizedProps)&&N.focus();break;case 6:case 4:case 12:break;case 13:if(null===w.memoizedState){var P=w.alternate;if(null!==P){var A=P.memoizedState;if(null!==A){var O=A.dehydrated;null!==O&&Me(O)}}}break;case 19:case 17:case 20:case 21:break;default:throw Error(a(163))}}if(128&_){w=void 0;var z=Bl.ref;if(null!==z){var j=Bl.stateNode;switch(Bl.tag){case 5:w=j;break;default:w=j}"function"==typeof z?z(w):z.current=w}}Bl=Bl.nextEffect}}catch(t){if(null===Bl)throw Error(a(330));Ec(Bl,t),Bl=Bl.nextEffect}}while(null!==Bl);Bl=null,Lo(),Nl=i}else t.current=n;if($l)$l=!1,Vl=t,Yl=e;else for(Bl=o;null!==Bl;)e=Bl.nextEffect,Bl.nextEffect=null,Bl=e;if(0===(e=t.firstPendingTime)&&(Wl=null),1073741823===e?t===Xl?Ql++:(Ql=0,Xl=t):Ql=0,"function"==typeof Tc&&Tc(n.stateNode,r),rc(t),ql)throw ql=!1,t=Hl,Hl=null,t;return 0!=(8&Nl)?null:(Go(),null)}function xc(){for(;null!==Bl;){var t=Bl.effectTag;0!=(256&t)&&pl(Bl.alternate,Bl),0==(512&t)||$l||($l=!0,Vo(97,(function(){return wc(),null}))),Bl=Bl.nextEffect}}function wc(){if(90!==Yl){var t=97<Yl?97:Yl;return Yl=90,$o(t,kc)}}function kc(){if(null===Vl)return!1;var t=Vl;if(Vl=null,0!=(48&Nl))throw Error(a(331));var e=Nl;for(Nl|=32,t=t.current.firstEffect;null!==t;){try{var n=t;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:ml(128,0,n),ml(0,64,n)}}catch(e){if(null===t)throw Error(a(330));Ec(t,e)}n=t.nextEffect,t.nextEffect=null,t=n}return Nl=e,Go(),!0}function _c(t,e,n){mi(t,e=_l(t,e=ul(n,e),1073741823)),null!==(t=ec(t,1073741823))&&rc(t)}function Ec(t,e){if(3===t.tag)_c(t,t,e);else for(var n=t.return;null!==n;){if(3===n.tag){_c(n,t,e);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Wl||!Wl.has(r))){mi(n,t=El(n,t=ul(e,t),1073741823)),null!==(n=ec(n,1073741823))&&rc(n);break}}n=n.return}}function Sc(t,e,n){var r=t.pingCache;null!==r&&r.delete(e),Pl===t&&Ol===n?4===zl||3===zl&&1073741823===Rl&&qo()-Fl<500?cc(t,Ol):Ul=!0:Ic(t,n)&&(0!==(e=t.lastPingedTime)&&e<n||(t.lastPingedTime=n,t.finishedExpirationTime===n&&(t.finishedExpirationTime=0,t.finishedWork=null),rc(t)))}function Mc(t,e){var n=t.stateNode;null!==n&&n.delete(e),0===(e=0)&&(e=Zl(e=Jl(),t,null)),null!==(t=ec(t,e))&&rc(t)}Sl=function(t,e,n){var r=e.expirationTime;if(null!==t){var o=e.pendingProps;if(t.memoizedProps!==o||mo.current)Ba=!0;else{if(r<n){switch(Ba=!1,e.tag){case 3:Xa(e),Ua();break;case 5:if(qi(e),4&e.mode&&1!==n&&o.hidden)return e.expirationTime=e.childExpirationTime=1,null;break;case 1:bo(e.type)&&ko(e);break;case 4:Fi(e,e.stateNode.containerInfo);break;case 10:oi(e,e.memoizedProps.value);break;case 13:if(null!==e.memoizedState)return 0!==(r=e.child.childExpirationTime)&&r>=n?el(t,e,n):(so(Wi,1&Wi.current),null!==(e=il(t,e,n))?e.sibling:null);so(Wi,1&Wi.current);break;case 19:if(r=e.childExpirationTime>=n,0!=(64&t.effectTag)){if(r)return ol(t,e,n);e.effectTag|=64}if(null!==(o=e.memoizedState)&&(o.rendering=null,o.tail=null),so(Wi,Wi.current),!r)return null}return il(t,e,n)}Ba=!1}}else Ba=!1;switch(e.expirationTime=0,e.tag){case 2:if(r=e.type,null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),t=e.pendingProps,o=go(e,po.current),li(e,n),o=sa(null,e,r,t,o,n),e.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(e.tag=1,fa(),bo(r)){var i=!0;ko(e)}else i=!1;e.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&_i(e,r,l,t),o.updater=Ei,e.stateNode=o,o._reactInternalFiber=e,Ci(e,r,t,n),e=Qa(null,e,r,!0,i,n)}else e.tag=0,qa(null,e,o,n),e=e.child;return e;case 16:if(o=e.elementType,null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),t=e.pendingProps,function(t){if(-1===t._status){t._status=0;var e=t._ctor;e=e(),t._result=e,e.then((function(e){0===t._status&&(e=e.default,t._status=1,t._result=e)}),(function(e){0===t._status&&(t._status=2,t._result=e)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,e.type=o,i=e.tag=function(t){if("function"==typeof t)return Ac(t)?1:0;if(null!=t){if((t=t.$$typeof)===W)return 11;if(t===Y)return 14}return 2}(o),t=Jo(o,t),i){case 0:e=Ya(null,e,o,t,n);break;case 1:e=Ga(null,e,o,t,n);break;case 11:e=Ha(null,e,o,t,n);break;case 14:e=Wa(null,e,o,Jo(o.type,t),r,n);break;default:throw Error(a(306,o,""))}return e;case 0:return r=e.type,o=e.pendingProps,Ya(t,e,r,o=e.elementType===r?o:Jo(r,o),n);case 1:return r=e.type,o=e.pendingProps,Ga(t,e,r,o=e.elementType===r?o:Jo(r,o),n);case 3:if(Xa(e),null===(r=e.updateQueue))throw Error(a(282));if(o=null!==(o=e.memoizedState)?o.element:null,vi(e,r,e.pendingProps,null,n),(r=e.memoizedState.element)===o)Ua(),e=il(t,e,n);else{if((o=e.stateNode.hydrate)&&(Oa=nr(e.stateNode.containerInfo.firstChild),Aa=e,o=za=!0),o)for(n=ji(e,null,r,n),e.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else qa(t,e,r,n),Ua();e=e.child}return e;case 5:return qi(e),null===t&&Da(e),r=e.type,o=e.pendingProps,i=null!==t?t.memoizedProps:null,l=o.children,Zn(r,o)?l=null:null!==i&&Zn(r,i)&&(e.effectTag|=16),Va(t,e),4&e.mode&&1!==n&&o.hidden?(e.expirationTime=e.childExpirationTime=1,e=null):(qa(t,e,l,n),e=e.child),e;case 6:return null===t&&Da(e),null;case 13:return el(t,e,n);case 4:return Fi(e,e.stateNode.containerInfo),r=e.pendingProps,null===t?e.child=zi(e,null,r,n):qa(t,e,r,n),e.child;case 11:return r=e.type,o=e.pendingProps,Ha(t,e,r,o=e.elementType===r?o:Jo(r,o),n);case 7:return qa(t,e,e.pendingProps,n),e.child;case 8:case 12:return qa(t,e,e.pendingProps.children,n),e.child;case 10:t:{if(r=e.type._context,o=e.pendingProps,l=e.memoizedProps,oi(e,i=o.value),null!==l){var c=l.value;if(0===(i=Xr(c,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(c,i):1073741823))){if(l.children===o.children&&!mo.current){e=il(t,e,n);break t}}else for(null!==(c=e.child)&&(c.return=e);null!==c;){var u=c.dependencies;if(null!==u){l=c.child;for(var s=u.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===c.tag&&((s=di(n,null)).tag=2,mi(c,s)),c.expirationTime<n&&(c.expirationTime=n),null!==(s=c.alternate)&&s.expirationTime<n&&(s.expirationTime=n),ai(c.return,n),u.expirationTime<n&&(u.expirationTime=n);break}s=s.next}}else l=10===c.tag&&c.type===e.type?null:c.child;if(null!==l)l.return=c;else for(l=c;null!==l;){if(l===e){l=null;break}if(null!==(c=l.sibling)){c.return=l.return,l=c;break}l=l.return}c=l}}qa(t,e,o.children,n),e=e.child}return e;case 9:return o=e.type,r=(i=e.pendingProps).children,li(e,n),r=r(o=ci(o,i.unstable_observedBits)),e.effectTag|=1,qa(t,e,r,n),e.child;case 14:return i=Jo(o=e.type,e.pendingProps),Wa(t,e,o,i=Jo(o.type,i),r,n);case 15:return $a(t,e,e.type,e.pendingProps,r,n);case 17:return r=e.type,o=e.pendingProps,o=e.elementType===r?o:Jo(r,o),null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),e.tag=1,bo(r)?(t=!0,ko(e)):t=!1,li(e,n),Mi(e,r,o),Ci(e,r,o,n),Qa(null,e,r,!0,t,n);case 19:return ol(t,e,n)}throw Error(a(156,e.tag))};var Tc=null,Cc=null;function Nc(t,e,n,r){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Pc(t,e,n,r){return new Nc(t,e,n,r)}function Ac(t){return!(!(t=t.prototype)||!t.isReactComponent)}function Oc(t,e){var n=t.alternate;return null===n?((n=Pc(t.tag,e,t.key,t.mode)).elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=t.childExpirationTime,n.expirationTime=t.expirationTime,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=null===e?null:{expirationTime:e.expirationTime,firstContext:e.firstContext,responders:e.responders},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n}function zc(t,e,n,r,o,i){var l=2;if(r=t,"function"==typeof t)Ac(t)&&(l=1);else if("string"==typeof t)l=5;else t:switch(t){case I:return jc(n.children,o,i,e);case H:l=8,o|=7;break;case U:l=8,o|=1;break;case F:return(t=Pc(12,n,e,8|o)).elementType=F,t.type=F,t.expirationTime=i,t;case $:return(t=Pc(13,n,e,o)).type=$,t.elementType=$,t.expirationTime=i,t;case V:return(t=Pc(19,n,e,o)).elementType=V,t.expirationTime=i,t;default:if("object"==typeof t&&null!==t)switch(t.$$typeof){case B:l=10;break t;case q:l=9;break t;case W:l=11;break t;case Y:l=14;break t;case G:l=16,r=null;break t}throw Error(a(130,null==t?t:typeof t,""))}return(e=Pc(l,n,e,o)).elementType=t,e.type=r,e.expirationTime=i,e}function jc(t,e,n,r){return(t=Pc(7,t,r,e)).expirationTime=n,t}function Rc(t,e,n){return(t=Pc(6,t,null,e)).expirationTime=n,t}function Dc(t,e,n){return(e=Pc(4,null!==t.children?t.children:[],t.key,e)).expirationTime=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function Lc(t,e,n){this.tag=e,this.current=null,this.containerInfo=t,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Ic(t,e){var n=t.firstSuspendedTime;return t=t.lastSuspendedTime,0!==n&&n>=e&&t<=e}function Uc(t,e){var n=t.firstSuspendedTime,r=t.lastSuspendedTime;n<e&&(t.firstSuspendedTime=e),(r>e||0===n)&&(t.lastSuspendedTime=e),e<=t.lastPingedTime&&(t.lastPingedTime=0),e<=t.lastExpiredTime&&(t.lastExpiredTime=0)}function Fc(t,e){e>t.firstPendingTime&&(t.firstPendingTime=e);var n=t.firstSuspendedTime;0!==n&&(e>=n?t.firstSuspendedTime=t.lastSuspendedTime=t.nextKnownPendingLevel=0:e>=t.lastSuspendedTime&&(t.lastSuspendedTime=e+1),e>t.nextKnownPendingLevel&&(t.nextKnownPendingLevel=e))}function Bc(t,e){var n=t.lastExpiredTime;(0===n||n>e)&&(t.lastExpiredTime=e)}function qc(t,e,n,r){var o=e.current,i=Jl(),l=wi.suspense;i=Zl(i,o,l);t:if(n){e:{if(ee(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(a(170));var c=n;do{switch(c.tag){case 3:c=c.stateNode.context;break e;case 1:if(bo(c.type)){c=c.stateNode.__reactInternalMemoizedMergedChildContext;break e}}c=c.return}while(null!==c);throw Error(a(171))}if(1===n.tag){var u=n.type;if(bo(u)){n=wo(n,u,c);break t}}n=c}else n=fo;return null===e.context?e.context=n:e.pendingContext=n,(e=di(i,l)).payload={element:t},null!==(r=void 0===r?null:r)&&(e.callback=r),mi(o,e),tc(o,i),i}function Hc(t){if(!(t=t.current).child)return null;switch(t.child.tag){case 5:default:return t.child.stateNode}}function Wc(t,e){null!==(t=t.memoizedState)&&null!==t.dehydrated&&t.retryTime<e&&(t.retryTime=e)}function $c(t,e){Wc(t,e),(t=t.alternate)&&Wc(t,e)}function Vc(t,e,n){var r=new Lc(t,e,n=null!=n&&!0===n.hydrate),o=Pc(3,null,null,2===e?7:1===e?3:0);r.current=o,o.stateNode=r,t[lr]=r.current,n&&0!==e&&function(t){var e=jn(t);ge.forEach((function(n){Rn(n,t,e)})),be.forEach((function(n){Rn(n,t,e)}))}(9===t.nodeType?t:t.ownerDocument),this._internalRoot=r}function Yc(t){return!(!t||1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType&&(8!==t.nodeType||" react-mount-point-unstable "!==t.nodeValue))}function Gc(t,e,n,r,o){var i=n._reactRootContainer;if(i){var a=i._internalRoot;if("function"==typeof o){var l=o;o=function(){var t=Hc(a);l.call(t)}}qc(e,a,t,o)}else{if(i=n._reactRootContainer=function(t,e){if(e||(e=!(!(e=t?9===t.nodeType?t.documentElement:t.firstChild:null)||1!==e.nodeType||!e.hasAttribute("data-reactroot"))),!e)for(var n;n=t.lastChild;)t.removeChild(n);return new Vc(t,0,e?{hydrate:!0}:void 0)}(n,r),a=i._internalRoot,"function"==typeof o){var c=o;o=function(){var t=Hc(a);c.call(t)}}lc((function(){qc(e,a,t,o)}))}return Hc(a)}function Qc(t,e,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:L,key:null==r?null:""+r,children:t,containerInfo:e,implementation:n}}function Xc(t,e){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Yc(e))throw Error(a(200));return Qc(t,e,null,n)}Vc.prototype.render=function(t,e){qc(t,this._internalRoot,null,void 0===e?null:e)},Vc.prototype.unmount=function(t){var e=this._internalRoot,n=void 0===t?null:t,r=e.containerInfo;qc(null,e,null,(function(){r[lr]=null,null!==n&&n()}))},ie=function(t){if(13===t.tag){var e=Ko(Jl(),150,100);tc(t,e),$c(t,e)}},ae=function(t){if(13===t.tag){Jl();var e=Xo++;tc(t,e),$c(t,e)}},le=function(t){if(13===t.tag){var e=Jl();tc(t,e=Zl(e,t,null)),$c(t,e)}},tt=function(t,e,n){switch(e){case"input":if(Nt(t,n),e=n.name,"radio"===n.type&&null!=e){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<n.length;e++){var r=n[e];if(r!==t&&r.form===t.form){var o=fr(r);if(!o)throw Error(a(90));St(r),Nt(r,o)}}}break;case"textarea":Dt(t,n);break;case"select":null!=(e=n.value)&&zt(t,!!n.multiple,e,!1)}},at=ac,lt=function(t,e,n,r){var o=Nl;Nl|=4;try{return $o(98,t.bind(null,e,n,r))}finally{0===(Nl=o)&&Go()}},ct=function(){0==(49&Nl)&&(function(){if(null!==Gl){var t=Gl;Gl=null,t.forEach((function(t,e){Bc(e,t),rc(e)})),Go()}}(),wc())},ut=function(t,e){var n=Nl;Nl|=2;try{return t(e)}finally{0===(Nl=n)&&Go()}};var Kc,Jc,Zc={createPortal:Xc,findDOMNode:function(t){if(null==t)return null;if(1===t.nodeType)return t;var e=t._reactInternalFiber;if(void 0===e){if("function"==typeof t.render)throw Error(a(188));throw Error(a(268,Object.keys(t)))}return t=null===(t=oe(e))?null:t.stateNode},hydrate:function(t,e,n){if(!Yc(e))throw Error(a(200));return Gc(null,t,e,!0,n)},render:function(t,e,n){if(!Yc(e))throw Error(a(200));return Gc(null,t,e,!1,n)},unstable_renderSubtreeIntoContainer:function(t,e,n,r){if(!Yc(n))throw Error(a(200));if(null==t||void 0===t._reactInternalFiber)throw Error(a(38));return Gc(t,e,n,!1,r)},unmountComponentAtNode:function(t){if(!Yc(t))throw Error(a(40));return!!t._reactRootContainer&&(lc((function(){Gc(null,null,t,!1,(function(){t._reactRootContainer=null,t[lr]=null}))})),!0)},unstable_createPortal:function(){return Xc.apply(void 0,arguments)},unstable_batchedUpdates:ac,flushSync:function(t,e){if(0!=(48&Nl))throw Error(a(187));var n=Nl;Nl|=1;try{return $o(99,t.bind(null,e))}finally{Nl=n,Go()}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[ur,sr,fr,A.injectEventPluginsByName,d,ze,function(t){T(t,Oe)},ot,it,Pn,P,wc,{current:!1}]}};Jc=(Kc={findFiberByHostInstance:cr,bundleType:0,version:"16.12.0",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(t){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var e=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(e.isDisabled||!e.supportsFiber)return!0;try{var n=e.inject(t);Tc=function(t){try{e.onCommitFiberRoot(n,t,void 0,64==(64&t.current.effectTag))}catch(t){}},Cc=function(t){try{e.onCommitFiberUnmount(n,t)}catch(t){}}}catch(t){}}(o({},Kc,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:z.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return null===(t=oe(t))?null:t.stateNode},findFiberByHostInstance:function(t){return Jc?Jc(t):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}));var tu={default:Zc},eu=tu&&Zc||tu;t.exports=eu.default||eu},function(t,e,n){"use strict";t.exports=n(42)},function(t,e,n){"use strict";
/** @license React v0.18.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,o,i,a,l;if(Object.defineProperty(e,"__esModule",{value:!0}),"undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,u=null,s=function(){if(null!==c)try{var t=e.unstable_now();c(!0,t),c=null}catch(t){throw setTimeout(s,0),t}},f=Date.now();e.unstable_now=function(){return Date.now()-f},r=function(t){null!==c?setTimeout(r,0,t):(c=t,setTimeout(s,0))},o=function(t,e){u=setTimeout(t,e)},i=function(){clearTimeout(u)},a=function(){return!1},l=e.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,m=window.setTimeout,h=window.clearTimeout;if("undefined"!=typeof console){var g=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof g&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)e.unstable_now=function(){return d.now()};else{var b=p.now();e.unstable_now=function(){return p.now()-b}}var v=!1,y=null,x=-1,w=5,k=0;a=function(){return e.unstable_now()>=k},l=function(){},e.unstable_forceFrameRate=function(t){0>t||125<t?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):w=0<t?Math.floor(1e3/t):5};var _=new MessageChannel,E=_.port2;_.port1.onmessage=function(){if(null!==y){var t=e.unstable_now();k=t+w;try{y(!0,t)?E.postMessage(null):(v=!1,y=null)}catch(t){throw E.postMessage(null),t}}else v=!1},r=function(t){y=t,v||(v=!0,E.postMessage(null))},o=function(t,n){x=m((function(){t(e.unstable_now())}),n)},i=function(){h(x),x=-1}}function S(t,e){var n=t.length;t.push(e);t:for(;;){var r=Math.floor((n-1)/2),o=t[r];if(!(void 0!==o&&0<C(o,e)))break t;t[r]=e,t[n]=o,n=r}}function M(t){return void 0===(t=t[0])?null:t}function T(t){var e=t[0];if(void 0!==e){var n=t.pop();if(n!==e){t[0]=n;t:for(var r=0,o=t.length;r<o;){var i=2*(r+1)-1,a=t[i],l=i+1,c=t[l];if(void 0!==a&&0>C(a,n))void 0!==c&&0>C(c,a)?(t[r]=c,t[l]=n,r=l):(t[r]=a,t[i]=n,r=i);else{if(!(void 0!==c&&0>C(c,n)))break t;t[r]=c,t[l]=n,r=l}}}return e}return null}function C(t,e){var n=t.sortIndex-e.sortIndex;return 0!==n?n:t.id-e.id}var N=[],P=[],A=1,O=null,z=3,j=!1,R=!1,D=!1;function L(t){for(var e=M(P);null!==e;){if(null===e.callback)T(P);else{if(!(e.startTime<=t))break;T(P),e.sortIndex=e.expirationTime,S(N,e)}e=M(P)}}function I(t){if(D=!1,L(t),!R)if(null!==M(N))R=!0,r(U);else{var e=M(P);null!==e&&o(I,e.startTime-t)}}function U(t,n){R=!1,D&&(D=!1,i()),j=!0;var r=z;try{for(L(n),O=M(N);null!==O&&(!(O.expirationTime>n)||t&&!a());){var l=O.callback;if(null!==l){O.callback=null,z=O.priorityLevel;var c=l(O.expirationTime<=n);n=e.unstable_now(),"function"==typeof c?O.callback=c:O===M(N)&&T(N),L(n)}else T(N);O=M(N)}if(null!==O)var u=!0;else{var s=M(P);null!==s&&o(I,s.startTime-n),u=!1}return u}finally{O=null,z=r,j=!1}}function F(t){switch(t){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var B=l;e.unstable_ImmediatePriority=1,e.unstable_UserBlockingPriority=2,e.unstable_NormalPriority=3,e.unstable_IdlePriority=5,e.unstable_LowPriority=4,e.unstable_runWithPriority=function(t,e){switch(t){case 1:case 2:case 3:case 4:case 5:break;default:t=3}var n=z;z=t;try{return e()}finally{z=n}},e.unstable_next=function(t){switch(z){case 1:case 2:case 3:var e=3;break;default:e=z}var n=z;z=e;try{return t()}finally{z=n}},e.unstable_scheduleCallback=function(t,n,a){var l=e.unstable_now();if("object"==typeof a&&null!==a){var c=a.delay;c="number"==typeof c&&0<c?l+c:l,a="number"==typeof a.timeout?a.timeout:F(t)}else a=F(t),c=l;return t={id:A++,callback:n,priorityLevel:t,startTime:c,expirationTime:a=c+a,sortIndex:-1},c>l?(t.sortIndex=c,S(P,t),null===M(N)&&t===M(P)&&(D?i():D=!0,o(I,c-l))):(t.sortIndex=a,S(N,t),R||j||(R=!0,r(U))),t},e.unstable_cancelCallback=function(t){t.callback=null},e.unstable_wrapCallback=function(t){var e=z;return function(){var n=z;z=e;try{return t.apply(this,arguments)}finally{z=n}}},e.unstable_getCurrentPriorityLevel=function(){return z},e.unstable_shouldYield=function(){var t=e.unstable_now();L(t);var n=M(N);return n!==O&&null!==O&&null!==n&&null!==n.callback&&n.startTime<=t&&n.expirationTime<O.expirationTime||a()},e.unstable_requestPaint=B,e.unstable_continueExecution=function(){R||j||(R=!0,r(U))},e.unstable_pauseExecution=function(){},e.unstable_getFirstCallbackNode=function(){return M(N)},e.unstable_Profiling=null},function(t,e,n){(e=n(24)(!1)).push([t.i,'/*!\n * Bootstrap v4.4.1 (https://getbootstrap.com/)\n * Copyright 2011-2019 The Bootstrap Authors\n * Copyright 2011-2019 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n */:root{--blue: #007bff;--indigo: #6610f2;--purple: #6f42c1;--pink: #e83e8c;--red: #dc3545;--orange: #fd7e14;--yellow: #ffc107;--green: #28a745;--teal: #20c997;--cyan: #17a2b8;--white: #fff;--gray: #6c757d;--gray-dark: #343a40;--primary: #007bff;--secondary: #6c757d;--success: #28a745;--info: #17a2b8;--warning: #ffc107;--danger: #dc3545;--light: #f8f9fa;--dark: #343a40;--breakpoint-xs: 0;--breakpoint-sm: 576px;--breakpoint-md: 768px;--breakpoint-lg: 992px;--breakpoint-xl: 1200px;--font-family-sans-serif: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";--font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace}*,*::before,*::after{box-sizing:border-box}html{font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0,0,0,0)}article,aside,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}body{margin:0;font-family:-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-size:1rem;font-weight:400;line-height:1.5;color:#212529;text-align:left;background-color:#fff}[tabindex="-1"]:focus:not(:focus-visible){outline:0 !important}hr{box-sizing:content-box;height:0;overflow:visible}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:0.5rem}p{margin-top:0;margin-bottom:1rem}abbr[title],abbr[data-original-title]{text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;cursor:help;border-bottom:0;-webkit-text-decoration-skip-ink:none;text-decoration-skip-ink:none}address{margin-bottom:1rem;font-style:normal;line-height:inherit}ol,ul,dl{margin-top:0;margin-bottom:1rem}ol ol,ul ul,ol ul,ul ol{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:#007bff;text-decoration:none;background-color:transparent}a:hover{color:#0056b3;text-decoration:underline}a:not([href]){color:inherit;text-decoration:none}a:not([href]):hover{color:inherit;text-decoration:none}pre,code,kbd,samp{font-family:SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;font-size:1em}pre{margin-top:0;margin-bottom:1rem;overflow:auto}figure{margin:0 0 1rem}img{vertical-align:middle;border-style:none}svg{overflow:hidden;vertical-align:middle}table{border-collapse:collapse}caption{padding-top:0.75rem;padding-bottom:0.75rem;color:#6c757d;text-align:left;caption-side:bottom}th{text-align:inherit}label{display:inline-block;margin-bottom:0.5rem}button{border-radius:0}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}input,button,select,optgroup,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}select{word-wrap:normal}button,[type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button:not(:disabled),[type="button"]:not(:disabled),[type="reset"]:not(:disabled),[type="submit"]:not(:disabled){cursor:pointer}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{padding:0;border-style:none}input[type="radio"],input[type="checkbox"]{box-sizing:border-box;padding:0}input[type="date"],input[type="time"],input[type="datetime-local"],input[type="month"]{-webkit-appearance:listbox}textarea{overflow:auto;resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;max-width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit;color:inherit;white-space:normal}progress{vertical-align:baseline}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{outline-offset:-2px;-webkit-appearance:none}[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}output{display:inline-block}summary{display:list-item;cursor:pointer}template{display:none}[hidden]{display:none !important}h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6{margin-bottom:0.5rem;font-weight:500;line-height:1.2}h1,.h1{font-size:2.5rem}h2,.h2{font-size:2rem}h3,.h3{font-size:1.75rem}h4,.h4{font-size:1.5rem}h5,.h5{font-size:1.25rem}h6,.h6{font-size:1rem}.lead{font-size:1.25rem;font-weight:300}.display-1{font-size:6rem;font-weight:300;line-height:1.2}.display-2{font-size:5.5rem;font-weight:300;line-height:1.2}.display-3{font-size:4.5rem;font-weight:300;line-height:1.2}.display-4{font-size:3.5rem;font-weight:300;line-height:1.2}hr{margin-top:1rem;margin-bottom:1rem;border:0;border-top:1px solid rgba(0,0,0,0.1)}small,.small{font-size:80%;font-weight:400}mark,.mark{padding:0.2em;background-color:#fcf8e3}.list-unstyled{padding-left:0;list-style:none}.list-inline{padding-left:0;list-style:none}.list-inline-item{display:inline-block}.list-inline-item:not(:last-child){margin-right:0.5rem}.initialism{font-size:90%;text-transform:uppercase}.blockquote{margin-bottom:1rem;font-size:1.25rem}.blockquote-footer{display:block;font-size:80%;color:#6c757d}.blockquote-footer::before{content:"\\2014\\00A0"}.img-fluid{max-width:100%;height:auto}.img-thumbnail{padding:0.25rem;background-color:#fff;border:1px solid #dee2e6;border-radius:0.25rem;max-width:100%;height:auto}.figure{display:inline-block}.figure-img{margin-bottom:0.5rem;line-height:1}.figure-caption{font-size:90%;color:#6c757d}code{font-size:87.5%;color:#e83e8c;word-wrap:break-word}a>code{color:inherit}kbd{padding:0.2rem 0.4rem;font-size:87.5%;color:#fff;background-color:#212529;border-radius:0.2rem}kbd kbd{padding:0;font-size:100%;font-weight:700}pre{display:block;font-size:87.5%;color:#212529}pre code{font-size:inherit;color:inherit;word-break:normal}.pre-scrollable{max-height:340px;overflow-y:scroll}.container{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}@media (min-width: 576px){.container{max-width:540px}}@media (min-width: 768px){.container{max-width:720px}}@media (min-width: 992px){.container{max-width:960px}}@media (min-width: 1200px){.container{max-width:1140px}}.container-fluid,.container-sm,.container-md,.container-lg,.container-xl{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}@media (min-width: 576px){.container,.container-sm{max-width:540px}}@media (min-width: 768px){.container,.container-sm,.container-md{max-width:720px}}@media (min-width: 992px){.container,.container-sm,.container-md,.container-lg{max-width:960px}}@media (min-width: 1200px){.container,.container-sm,.container-md,.container-lg,.container-xl{max-width:1140px}}.row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-15px;margin-left:-15px}.no-gutters{margin-right:0;margin-left:0}.no-gutters>.col,.no-gutters>[class*="col-"]{padding-right:0;padding-left:0}.col-1,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-10,.col-11,.col-12,.col,.col-auto,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm,.col-sm-auto,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12,.col-md,.col-md-auto,.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg,.col-lg-auto,.col-xl-1,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-10,.col-xl-11,.col-xl-12,.col-xl,.col-xl-auto{position:relative;width:100%;padding-right:15px;padding-left:15px}.col{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-first{-ms-flex-order:-1;order:-1}.order-last{-ms-flex-order:13;order:13}.order-0{-ms-flex-order:0;order:0}.order-1{-ms-flex-order:1;order:1}.order-2{-ms-flex-order:2;order:2}.order-3{-ms-flex-order:3;order:3}.order-4{-ms-flex-order:4;order:4}.order-5{-ms-flex-order:5;order:5}.order-6{-ms-flex-order:6;order:6}.order-7{-ms-flex-order:7;order:7}.order-8{-ms-flex-order:8;order:8}.order-9{-ms-flex-order:9;order:9}.order-10{-ms-flex-order:10;order:10}.order-11{-ms-flex-order:11;order:11}.order-12{-ms-flex-order:12;order:12}.offset-1{margin-left:8.333333%}.offset-2{margin-left:16.666667%}.offset-3{margin-left:25%}.offset-4{margin-left:33.333333%}.offset-5{margin-left:41.666667%}.offset-6{margin-left:50%}.offset-7{margin-left:58.333333%}.offset-8{margin-left:66.666667%}.offset-9{margin-left:75%}.offset-10{margin-left:83.333333%}.offset-11{margin-left:91.666667%}@media (min-width: 576px){.col-sm{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-sm-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-sm-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-sm-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-sm-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-sm-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-sm-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-sm-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-sm-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-sm-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-sm-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-sm-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-sm-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-sm-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-sm-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-sm-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-sm-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-sm-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-sm-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-sm-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-sm-first{-ms-flex-order:-1;order:-1}.order-sm-last{-ms-flex-order:13;order:13}.order-sm-0{-ms-flex-order:0;order:0}.order-sm-1{-ms-flex-order:1;order:1}.order-sm-2{-ms-flex-order:2;order:2}.order-sm-3{-ms-flex-order:3;order:3}.order-sm-4{-ms-flex-order:4;order:4}.order-sm-5{-ms-flex-order:5;order:5}.order-sm-6{-ms-flex-order:6;order:6}.order-sm-7{-ms-flex-order:7;order:7}.order-sm-8{-ms-flex-order:8;order:8}.order-sm-9{-ms-flex-order:9;order:9}.order-sm-10{-ms-flex-order:10;order:10}.order-sm-11{-ms-flex-order:11;order:11}.order-sm-12{-ms-flex-order:12;order:12}.offset-sm-0{margin-left:0}.offset-sm-1{margin-left:8.333333%}.offset-sm-2{margin-left:16.666667%}.offset-sm-3{margin-left:25%}.offset-sm-4{margin-left:33.333333%}.offset-sm-5{margin-left:41.666667%}.offset-sm-6{margin-left:50%}.offset-sm-7{margin-left:58.333333%}.offset-sm-8{margin-left:66.666667%}.offset-sm-9{margin-left:75%}.offset-sm-10{margin-left:83.333333%}.offset-sm-11{margin-left:91.666667%}}@media (min-width: 768px){.col-md{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-md-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-md-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-md-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-md-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-md-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-md-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-md-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-md-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-md-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-md-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-md-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-md-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-md-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-md-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-md-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-md-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-md-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-md-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-md-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-md-first{-ms-flex-order:-1;order:-1}.order-md-last{-ms-flex-order:13;order:13}.order-md-0{-ms-flex-order:0;order:0}.order-md-1{-ms-flex-order:1;order:1}.order-md-2{-ms-flex-order:2;order:2}.order-md-3{-ms-flex-order:3;order:3}.order-md-4{-ms-flex-order:4;order:4}.order-md-5{-ms-flex-order:5;order:5}.order-md-6{-ms-flex-order:6;order:6}.order-md-7{-ms-flex-order:7;order:7}.order-md-8{-ms-flex-order:8;order:8}.order-md-9{-ms-flex-order:9;order:9}.order-md-10{-ms-flex-order:10;order:10}.order-md-11{-ms-flex-order:11;order:11}.order-md-12{-ms-flex-order:12;order:12}.offset-md-0{margin-left:0}.offset-md-1{margin-left:8.333333%}.offset-md-2{margin-left:16.666667%}.offset-md-3{margin-left:25%}.offset-md-4{margin-left:33.333333%}.offset-md-5{margin-left:41.666667%}.offset-md-6{margin-left:50%}.offset-md-7{margin-left:58.333333%}.offset-md-8{margin-left:66.666667%}.offset-md-9{margin-left:75%}.offset-md-10{margin-left:83.333333%}.offset-md-11{margin-left:91.666667%}}@media (min-width: 992px){.col-lg{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-lg-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-lg-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-lg-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-lg-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-lg-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-lg-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-lg-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-lg-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-lg-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-lg-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-lg-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-lg-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-lg-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-lg-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-lg-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-lg-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-lg-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-lg-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-lg-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-lg-first{-ms-flex-order:-1;order:-1}.order-lg-last{-ms-flex-order:13;order:13}.order-lg-0{-ms-flex-order:0;order:0}.order-lg-1{-ms-flex-order:1;order:1}.order-lg-2{-ms-flex-order:2;order:2}.order-lg-3{-ms-flex-order:3;order:3}.order-lg-4{-ms-flex-order:4;order:4}.order-lg-5{-ms-flex-order:5;order:5}.order-lg-6{-ms-flex-order:6;order:6}.order-lg-7{-ms-flex-order:7;order:7}.order-lg-8{-ms-flex-order:8;order:8}.order-lg-9{-ms-flex-order:9;order:9}.order-lg-10{-ms-flex-order:10;order:10}.order-lg-11{-ms-flex-order:11;order:11}.order-lg-12{-ms-flex-order:12;order:12}.offset-lg-0{margin-left:0}.offset-lg-1{margin-left:8.333333%}.offset-lg-2{margin-left:16.666667%}.offset-lg-3{margin-left:25%}.offset-lg-4{margin-left:33.333333%}.offset-lg-5{margin-left:41.666667%}.offset-lg-6{margin-left:50%}.offset-lg-7{margin-left:58.333333%}.offset-lg-8{margin-left:66.666667%}.offset-lg-9{margin-left:75%}.offset-lg-10{margin-left:83.333333%}.offset-lg-11{margin-left:91.666667%}}@media (min-width: 1200px){.col-xl{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-xl-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-xl-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-xl-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-xl-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-xl-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-xl-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-xl-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-xl-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-xl-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-xl-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-xl-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-xl-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-xl-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-xl-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-xl-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-xl-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-xl-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-xl-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-xl-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-xl-first{-ms-flex-order:-1;order:-1}.order-xl-last{-ms-flex-order:13;order:13}.order-xl-0{-ms-flex-order:0;order:0}.order-xl-1{-ms-flex-order:1;order:1}.order-xl-2{-ms-flex-order:2;order:2}.order-xl-3{-ms-flex-order:3;order:3}.order-xl-4{-ms-flex-order:4;order:4}.order-xl-5{-ms-flex-order:5;order:5}.order-xl-6{-ms-flex-order:6;order:6}.order-xl-7{-ms-flex-order:7;order:7}.order-xl-8{-ms-flex-order:8;order:8}.order-xl-9{-ms-flex-order:9;order:9}.order-xl-10{-ms-flex-order:10;order:10}.order-xl-11{-ms-flex-order:11;order:11}.order-xl-12{-ms-flex-order:12;order:12}.offset-xl-0{margin-left:0}.offset-xl-1{margin-left:8.333333%}.offset-xl-2{margin-left:16.666667%}.offset-xl-3{margin-left:25%}.offset-xl-4{margin-left:33.333333%}.offset-xl-5{margin-left:41.666667%}.offset-xl-6{margin-left:50%}.offset-xl-7{margin-left:58.333333%}.offset-xl-8{margin-left:66.666667%}.offset-xl-9{margin-left:75%}.offset-xl-10{margin-left:83.333333%}.offset-xl-11{margin-left:91.666667%}}.table{width:100%;margin-bottom:1rem;color:#212529}.table th,.table td{padding:0.75rem;vertical-align:top;border-top:1px solid #dee2e6}.table thead th{vertical-align:bottom;border-bottom:2px solid #dee2e6}.table tbody+tbody{border-top:2px solid #dee2e6}.table-sm th,.table-sm td{padding:0.3rem}.table-bordered{border:1px solid #dee2e6}.table-bordered th,.table-bordered td{border:1px solid #dee2e6}.table-bordered thead th,.table-bordered thead td{border-bottom-width:2px}.table-borderless th,.table-borderless td,.table-borderless thead th,.table-borderless tbody+tbody{border:0}.table-striped tbody tr:nth-of-type(odd){background-color:rgba(0,0,0,0.05)}.table-hover tbody tr:hover{color:#212529;background-color:rgba(0,0,0,0.075)}.table-primary,.table-primary>th,.table-primary>td{background-color:#b8daff}.table-primary th,.table-primary td,.table-primary thead th,.table-primary tbody+tbody{border-color:#7abaff}.table-hover .table-primary:hover{background-color:#9fcdff}.table-hover .table-primary:hover>td,.table-hover .table-primary:hover>th{background-color:#9fcdff}.table-secondary,.table-secondary>th,.table-secondary>td{background-color:#d6d8db}.table-secondary th,.table-secondary td,.table-secondary thead th,.table-secondary tbody+tbody{border-color:#b3b7bb}.table-hover .table-secondary:hover{background-color:#c8cbcf}.table-hover .table-secondary:hover>td,.table-hover .table-secondary:hover>th{background-color:#c8cbcf}.table-success,.table-success>th,.table-success>td{background-color:#c3e6cb}.table-success th,.table-success td,.table-success thead th,.table-success tbody+tbody{border-color:#8fd19e}.table-hover .table-success:hover{background-color:#b1dfbb}.table-hover .table-success:hover>td,.table-hover .table-success:hover>th{background-color:#b1dfbb}.table-info,.table-info>th,.table-info>td{background-color:#bee5eb}.table-info th,.table-info td,.table-info thead th,.table-info tbody+tbody{border-color:#86cfda}.table-hover .table-info:hover{background-color:#abdde5}.table-hover .table-info:hover>td,.table-hover .table-info:hover>th{background-color:#abdde5}.table-warning,.table-warning>th,.table-warning>td{background-color:#ffeeba}.table-warning th,.table-warning td,.table-warning thead th,.table-warning tbody+tbody{border-color:#ffdf7e}.table-hover .table-warning:hover{background-color:#ffe8a1}.table-hover .table-warning:hover>td,.table-hover .table-warning:hover>th{background-color:#ffe8a1}.table-danger,.table-danger>th,.table-danger>td{background-color:#f5c6cb}.table-danger th,.table-danger td,.table-danger thead th,.table-danger tbody+tbody{border-color:#ed969e}.table-hover .table-danger:hover{background-color:#f1b0b7}.table-hover .table-danger:hover>td,.table-hover .table-danger:hover>th{background-color:#f1b0b7}.table-light,.table-light>th,.table-light>td{background-color:#fdfdfe}.table-light th,.table-light td,.table-light thead th,.table-light tbody+tbody{border-color:#fbfcfc}.table-hover .table-light:hover{background-color:#ececf6}.table-hover .table-light:hover>td,.table-hover .table-light:hover>th{background-color:#ececf6}.table-dark,.table-dark>th,.table-dark>td{background-color:#c6c8ca}.table-dark th,.table-dark td,.table-dark thead th,.table-dark tbody+tbody{border-color:#95999c}.table-hover .table-dark:hover{background-color:#b9bbbe}.table-hover .table-dark:hover>td,.table-hover .table-dark:hover>th{background-color:#b9bbbe}.table-active,.table-active>th,.table-active>td{background-color:rgba(0,0,0,0.075)}.table-hover .table-active:hover{background-color:rgba(0,0,0,0.075)}.table-hover .table-active:hover>td,.table-hover .table-active:hover>th{background-color:rgba(0,0,0,0.075)}.table .thead-dark th{color:#fff;background-color:#343a40;border-color:#454d55}.table .thead-light th{color:#495057;background-color:#e9ecef;border-color:#dee2e6}.table-dark{color:#fff;background-color:#343a40}.table-dark th,.table-dark td,.table-dark thead th{border-color:#454d55}.table-dark.table-bordered{border:0}.table-dark.table-striped tbody tr:nth-of-type(odd){background-color:rgba(255,255,255,0.05)}.table-dark.table-hover tbody tr:hover{color:#fff;background-color:rgba(255,255,255,0.075)}@media (max-width: 575.98px){.table-responsive-sm{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-sm>.table-bordered{border:0}}@media (max-width: 767.98px){.table-responsive-md{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-md>.table-bordered{border:0}}@media (max-width: 991.98px){.table-responsive-lg{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-lg>.table-bordered{border:0}}@media (max-width: 1199.98px){.table-responsive-xl{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-xl>.table-bordered{border:0}}.table-responsive{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive>.table-bordered{border:0}.form-control{display:block;width:100%;height:calc(1.5em + 0.75rem + 2px);padding:0.375rem 0.75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;border-radius:0.25rem;transition:border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.form-control{transition:none}}.form-control::-ms-expand{background-color:transparent;border:0}.form-control:-moz-focusring{color:transparent;text-shadow:0 0 0 #495057}.form-control:focus{color:#495057;background-color:#fff;border-color:#80bdff;outline:0;box-shadow:0 0 0 0.2rem rgba(0,123,255,0.25)}.form-control::-webkit-input-placeholder{color:#6c757d;opacity:1}.form-control::-moz-placeholder{color:#6c757d;opacity:1}.form-control:-ms-input-placeholder{color:#6c757d;opacity:1}.form-control::-ms-input-placeholder{color:#6c757d;opacity:1}.form-control::placeholder{color:#6c757d;opacity:1}.form-control:disabled,.form-control[readonly]{background-color:#e9ecef;opacity:1}select.form-control:focus::-ms-value{color:#495057;background-color:#fff}.form-control-file,.form-control-range{display:block;width:100%}.col-form-label{padding-top:calc(0.375rem + 1px);padding-bottom:calc(0.375rem + 1px);margin-bottom:0;font-size:inherit;line-height:1.5}.col-form-label-lg{padding-top:calc(0.5rem + 1px);padding-bottom:calc(0.5rem + 1px);font-size:1.25rem;line-height:1.5}.col-form-label-sm{padding-top:calc(0.25rem + 1px);padding-bottom:calc(0.25rem + 1px);font-size:0.875rem;line-height:1.5}.form-control-plaintext{display:block;width:100%;padding:0.375rem 0;margin-bottom:0;font-size:1rem;line-height:1.5;color:#212529;background-color:transparent;border:solid transparent;border-width:1px 0}.form-control-plaintext.form-control-sm,.form-control-plaintext.form-control-lg{padding-right:0;padding-left:0}.form-control-sm{height:calc(1.5em + 0.5rem + 2px);padding:0.25rem 0.5rem;font-size:0.875rem;line-height:1.5;border-radius:0.2rem}.form-control-lg{height:calc(1.5em + 1rem + 2px);padding:0.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:0.3rem}select.form-control[size],select.form-control[multiple]{height:auto}textarea.form-control{height:auto}.form-group{margin-bottom:1rem}.form-text{display:block;margin-top:0.25rem}.form-row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-5px;margin-left:-5px}.form-row>.col,.form-row>[class*="col-"]{padding-right:5px;padding-left:5px}.form-check{position:relative;display:block;padding-left:1.25rem}.form-check-input{position:absolute;margin-top:0.3rem;margin-left:-1.25rem}.form-check-input[disabled] ~ .form-check-label,.form-check-input:disabled ~ .form-check-label{color:#6c757d}.form-check-label{margin-bottom:0}.form-check-inline{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;padding-left:0;margin-right:0.75rem}.form-check-inline .form-check-input{position:static;margin-top:0;margin-right:0.3125rem;margin-left:0}.valid-feedback{display:none;width:100%;margin-top:0.25rem;font-size:80%;color:#28a745}.valid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:0.25rem 0.5rem;margin-top:.1rem;font-size:0.875rem;line-height:1.5;color:#fff;background-color:rgba(40,167,69,0.9);border-radius:0.25rem}.was-validated :valid ~ .valid-feedback,.was-validated :valid ~ .valid-tooltip,.is-valid ~ .valid-feedback,.is-valid ~ .valid-tooltip{display:block}.was-validated .form-control:valid,.form-control.is-valid{border-color:#28a745;padding-right:calc(1.5em + 0.75rem);background-image:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'8\' height=\'8\' viewBox=\'0 0 8 8\'%3e%3cpath fill=\'%2328a745\' d=\'M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z\'/%3e%3c/svg%3e");background-repeat:no-repeat;background-position:right calc(0.375em + 0.1875rem) center;background-size:calc(0.75em + 0.375rem) calc(0.75em + 0.375rem)}.was-validated .form-control:valid:focus,.form-control.is-valid:focus{border-color:#28a745;box-shadow:0 0 0 0.2rem rgba(40,167,69,0.25)}.was-validated textarea.form-control:valid,textarea.form-control.is-valid{padding-right:calc(1.5em + 0.75rem);background-position:top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem)}.was-validated .custom-select:valid,.custom-select.is-valid{border-color:#28a745;padding-right:calc(0.75em + 2.3125rem);background:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'4\' height=\'5\' viewBox=\'0 0 4 5\'%3e%3cpath fill=\'%23343a40\' d=\'M2 0L0 2h4zm0 5L0 3h4z\'/%3e%3c/svg%3e") no-repeat right 0.75rem center/8px 10px,url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'8\' height=\'8\' viewBox=\'0 0 8 8\'%3e%3cpath fill=\'%2328a745\' d=\'M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z\'/%3e%3c/svg%3e") #fff no-repeat center right 1.75rem/calc(0.75em + 0.375rem) calc(0.75em + 0.375rem)}.was-validated .custom-select:valid:focus,.custom-select.is-valid:focus{border-color:#28a745;box-shadow:0 0 0 0.2rem rgba(40,167,69,0.25)}.was-validated .form-check-input:valid ~ .form-check-label,.form-check-input.is-valid ~ .form-check-label{color:#28a745}.was-validated .form-check-input:valid ~ .valid-feedback,.was-validated .form-check-input:valid ~ .valid-tooltip,.form-check-input.is-valid ~ .valid-feedback,.form-check-input.is-valid ~ .valid-tooltip{display:block}.was-validated .custom-control-input:valid ~ .custom-control-label,.custom-control-input.is-valid ~ .custom-control-label{color:#28a745}.was-validated .custom-control-input:valid ~ .custom-control-label::before,.custom-control-input.is-valid ~ .custom-control-label::before{border-color:#28a745}.was-validated .custom-control-input:valid:checked ~ .custom-control-label::before,.custom-control-input.is-valid:checked ~ .custom-control-label::before{border-color:#34ce57;background-color:#34ce57}.was-validated .custom-control-input:valid:focus ~ .custom-control-label::before,.custom-control-input.is-valid:focus ~ .custom-control-label::before{box-shadow:0 0 0 0.2rem rgba(40,167,69,0.25)}.was-validated .custom-control-input:valid:focus:not(:checked) ~ .custom-control-label::before,.custom-control-input.is-valid:focus:not(:checked) ~ .custom-control-label::before{border-color:#28a745}.was-validated .custom-file-input:valid ~ .custom-file-label,.custom-file-input.is-valid ~ .custom-file-label{border-color:#28a745}.was-validated .custom-file-input:valid:focus ~ .custom-file-label,.custom-file-input.is-valid:focus ~ .custom-file-label{border-color:#28a745;box-shadow:0 0 0 0.2rem rgba(40,167,69,0.25)}.invalid-feedback{display:none;width:100%;margin-top:0.25rem;font-size:80%;color:#dc3545}.invalid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:0.25rem 0.5rem;margin-top:.1rem;font-size:0.875rem;line-height:1.5;color:#fff;background-color:rgba(220,53,69,0.9);border-radius:0.25rem}.was-validated :invalid ~ .invalid-feedback,.was-validated :invalid ~ .invalid-tooltip,.is-invalid ~ .invalid-feedback,.is-invalid ~ .invalid-tooltip{display:block}.was-validated .form-control:invalid,.form-control.is-invalid{border-color:#dc3545;padding-right:calc(1.5em + 0.75rem);background-image:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'12\' height=\'12\' fill=\'none\' stroke=\'%23dc3545\' viewBox=\'0 0 12 12\'%3e%3ccircle cx=\'6\' cy=\'6\' r=\'4.5\'/%3e%3cpath stroke-linejoin=\'round\' d=\'M5.8 3.6h.4L6 6.5z\'/%3e%3ccircle cx=\'6\' cy=\'8.2\' r=\'.6\' fill=\'%23dc3545\' stroke=\'none\'/%3e%3c/svg%3e");background-repeat:no-repeat;background-position:right calc(0.375em + 0.1875rem) center;background-size:calc(0.75em + 0.375rem) calc(0.75em + 0.375rem)}.was-validated .form-control:invalid:focus,.form-control.is-invalid:focus{border-color:#dc3545;box-shadow:0 0 0 0.2rem rgba(220,53,69,0.25)}.was-validated textarea.form-control:invalid,textarea.form-control.is-invalid{padding-right:calc(1.5em + 0.75rem);background-position:top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem)}.was-validated .custom-select:invalid,.custom-select.is-invalid{border-color:#dc3545;padding-right:calc(0.75em + 2.3125rem);background:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'4\' height=\'5\' viewBox=\'0 0 4 5\'%3e%3cpath fill=\'%23343a40\' d=\'M2 0L0 2h4zm0 5L0 3h4z\'/%3e%3c/svg%3e") no-repeat right 0.75rem center/8px 10px,url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'12\' height=\'12\' fill=\'none\' stroke=\'%23dc3545\' viewBox=\'0 0 12 12\'%3e%3ccircle cx=\'6\' cy=\'6\' r=\'4.5\'/%3e%3cpath stroke-linejoin=\'round\' d=\'M5.8 3.6h.4L6 6.5z\'/%3e%3ccircle cx=\'6\' cy=\'8.2\' r=\'.6\' fill=\'%23dc3545\' stroke=\'none\'/%3e%3c/svg%3e") #fff no-repeat center right 1.75rem/calc(0.75em + 0.375rem) calc(0.75em + 0.375rem)}.was-validated .custom-select:invalid:focus,.custom-select.is-invalid:focus{border-color:#dc3545;box-shadow:0 0 0 0.2rem rgba(220,53,69,0.25)}.was-validated .form-check-input:invalid ~ .form-check-label,.form-check-input.is-invalid ~ .form-check-label{color:#dc3545}.was-validated .form-check-input:invalid ~ .invalid-feedback,.was-validated .form-check-input:invalid ~ .invalid-tooltip,.form-check-input.is-invalid ~ .invalid-feedback,.form-check-input.is-invalid ~ .invalid-tooltip{display:block}.was-validated .custom-control-input:invalid ~ .custom-control-label,.custom-control-input.is-invalid ~ .custom-control-label{color:#dc3545}.was-validated .custom-control-input:invalid ~ .custom-control-label::before,.custom-control-input.is-invalid ~ .custom-control-label::before{border-color:#dc3545}.was-validated .custom-control-input:invalid:checked ~ .custom-control-label::before,.custom-control-input.is-invalid:checked ~ .custom-control-label::before{border-color:#e4606d;background-color:#e4606d}.was-validated .custom-control-input:invalid:focus ~ .custom-control-label::before,.custom-control-input.is-invalid:focus ~ .custom-control-label::before{box-shadow:0 0 0 0.2rem rgba(220,53,69,0.25)}.was-validated .custom-control-input:invalid:focus:not(:checked) ~ .custom-control-label::before,.custom-control-input.is-invalid:focus:not(:checked) ~ .custom-control-label::before{border-color:#dc3545}.was-validated .custom-file-input:invalid ~ .custom-file-label,.custom-file-input.is-invalid ~ .custom-file-label{border-color:#dc3545}.was-validated .custom-file-input:invalid:focus ~ .custom-file-label,.custom-file-input.is-invalid:focus ~ .custom-file-label{border-color:#dc3545;box-shadow:0 0 0 0.2rem rgba(220,53,69,0.25)}.form-inline{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center}.form-inline .form-check{width:100%}@media (min-width: 576px){.form-inline label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin-bottom:0}.form-inline .form-group{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center;margin-bottom:0}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-plaintext{display:inline-block}.form-inline .input-group,.form-inline .custom-select{width:auto}.form-inline .form-check{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:auto;padding-left:0}.form-inline .form-check-input{position:relative;-ms-flex-negative:0;flex-shrink:0;margin-top:0;margin-right:0.25rem;margin-left:0}.form-inline .custom-control{-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.form-inline .custom-control-label{margin-bottom:0}}.btn{display:inline-block;font-weight:400;color:#212529;text-align:center;vertical-align:middle;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;border:1px solid transparent;padding:0.375rem 0.75rem;font-size:1rem;line-height:1.5;border-radius:0.25rem;transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.btn{transition:none}}.btn:hover{color:#212529;text-decoration:none}.btn:focus,.btn.focus{outline:0;box-shadow:0 0 0 0.2rem rgba(0,123,255,0.25)}.btn.disabled,.btn:disabled{opacity:0.65}a.btn.disabled,fieldset:disabled a.btn{pointer-events:none}.btn-primary{color:#fff;background-color:#007bff;border-color:#007bff}.btn-primary:hover{color:#fff;background-color:#0069d9;border-color:#0062cc}.btn-primary:focus,.btn-primary.focus{color:#fff;background-color:#0069d9;border-color:#0062cc;box-shadow:0 0 0 0.2rem rgba(38,143,255,0.5)}.btn-primary.disabled,.btn-primary:disabled{color:#fff;background-color:#007bff;border-color:#007bff}.btn-primary:not(:disabled):not(.disabled):active,.btn-primary:not(:disabled):not(.disabled).active,.show>.btn-primary.dropdown-toggle{color:#fff;background-color:#0062cc;border-color:#005cbf}.btn-primary:not(:disabled):not(.disabled):active:focus,.btn-primary:not(:disabled):not(.disabled).active:focus,.show>.btn-primary.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(38,143,255,0.5)}.btn-secondary{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:hover{color:#fff;background-color:#5a6268;border-color:#545b62}.btn-secondary:focus,.btn-secondary.focus{color:#fff;background-color:#5a6268;border-color:#545b62;box-shadow:0 0 0 0.2rem rgba(130,138,145,0.5)}.btn-secondary.disabled,.btn-secondary:disabled{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:not(:disabled):not(.disabled):active,.btn-secondary:not(:disabled):not(.disabled).active,.show>.btn-secondary.dropdown-toggle{color:#fff;background-color:#545b62;border-color:#4e555b}.btn-secondary:not(:disabled):not(.disabled):active:focus,.btn-secondary:not(:disabled):not(.disabled).active:focus,.show>.btn-secondary.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(130,138,145,0.5)}.btn-success{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:hover{color:#fff;background-color:#218838;border-color:#1e7e34}.btn-success:focus,.btn-success.focus{color:#fff;background-color:#218838;border-color:#1e7e34;box-shadow:0 0 0 0.2rem rgba(72,180,97,0.5)}.btn-success.disabled,.btn-success:disabled{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:not(:disabled):not(.disabled):active,.btn-success:not(:disabled):not(.disabled).active,.show>.btn-success.dropdown-toggle{color:#fff;background-color:#1e7e34;border-color:#1c7430}.btn-success:not(:disabled):not(.disabled):active:focus,.btn-success:not(:disabled):not(.disabled).active:focus,.show>.btn-success.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(72,180,97,0.5)}.btn-info{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:hover{color:#fff;background-color:#138496;border-color:#117a8b}.btn-info:focus,.btn-info.focus{color:#fff;background-color:#138496;border-color:#117a8b;box-shadow:0 0 0 0.2rem rgba(58,176,195,0.5)}.btn-info.disabled,.btn-info:disabled{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:not(:disabled):not(.disabled):active,.btn-info:not(:disabled):not(.disabled).active,.show>.btn-info.dropdown-toggle{color:#fff;background-color:#117a8b;border-color:#10707f}.btn-info:not(:disabled):not(.disabled):active:focus,.btn-info:not(:disabled):not(.disabled).active:focus,.show>.btn-info.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(58,176,195,0.5)}.btn-warning{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-warning:hover{color:#212529;background-color:#e0a800;border-color:#d39e00}.btn-warning:focus,.btn-warning.focus{color:#212529;background-color:#e0a800;border-color:#d39e00;box-shadow:0 0 0 0.2rem rgba(222,170,12,0.5)}.btn-warning.disabled,.btn-warning:disabled{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-warning:not(:disabled):not(.disabled):active,.btn-warning:not(:disabled):not(.disabled).active,.show>.btn-warning.dropdown-toggle{color:#212529;background-color:#d39e00;border-color:#c69500}.btn-warning:not(:disabled):not(.disabled):active:focus,.btn-warning:not(:disabled):not(.disabled).active:focus,.show>.btn-warning.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(222,170,12,0.5)}.btn-danger{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:hover{color:#fff;background-color:#c82333;border-color:#bd2130}.btn-danger:focus,.btn-danger.focus{color:#fff;background-color:#c82333;border-color:#bd2130;box-shadow:0 0 0 0.2rem rgba(225,83,97,0.5)}.btn-danger.disabled,.btn-danger:disabled{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:not(:disabled):not(.disabled):active,.btn-danger:not(:disabled):not(.disabled).active,.show>.btn-danger.dropdown-toggle{color:#fff;background-color:#bd2130;border-color:#b21f2d}.btn-danger:not(:disabled):not(.disabled):active:focus,.btn-danger:not(:disabled):not(.disabled).active:focus,.show>.btn-danger.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(225,83,97,0.5)}.btn-light{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:hover{color:#212529;background-color:#e2e6ea;border-color:#dae0e5}.btn-light:focus,.btn-light.focus{color:#212529;background-color:#e2e6ea;border-color:#dae0e5;box-shadow:0 0 0 0.2rem rgba(216,217,219,0.5)}.btn-light.disabled,.btn-light:disabled{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:not(:disabled):not(.disabled):active,.btn-light:not(:disabled):not(.disabled).active,.show>.btn-light.dropdown-toggle{color:#212529;background-color:#dae0e5;border-color:#d3d9df}.btn-light:not(:disabled):not(.disabled):active:focus,.btn-light:not(:disabled):not(.disabled).active:focus,.show>.btn-light.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(216,217,219,0.5)}.btn-dark{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:hover{color:#fff;background-color:#23272b;border-color:#1d2124}.btn-dark:focus,.btn-dark.focus{color:#fff;background-color:#23272b;border-color:#1d2124;box-shadow:0 0 0 0.2rem rgba(82,88,93,0.5)}.btn-dark.disabled,.btn-dark:disabled{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:not(:disabled):not(.disabled):active,.btn-dark:not(:disabled):not(.disabled).active,.show>.btn-dark.dropdown-toggle{color:#fff;background-color:#1d2124;border-color:#171a1d}.btn-dark:not(:disabled):not(.disabled):active:focus,.btn-dark:not(:disabled):not(.disabled).active:focus,.show>.btn-dark.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(82,88,93,0.5)}.btn-outline-primary{color:#007bff;border-color:#007bff}.btn-outline-primary:hover{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary:focus,.btn-outline-primary.focus{box-shadow:0 0 0 0.2rem rgba(0,123,255,0.5)}.btn-outline-primary.disabled,.btn-outline-primary:disabled{color:#007bff;background-color:transparent}.btn-outline-primary:not(:disabled):not(.disabled):active,.btn-outline-primary:not(:disabled):not(.disabled).active,.show>.btn-outline-primary.dropdown-toggle{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary:not(:disabled):not(.disabled):active:focus,.btn-outline-primary:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-primary.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(0,123,255,0.5)}.btn-outline-secondary{color:#6c757d;border-color:#6c757d}.btn-outline-secondary:hover{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary:focus,.btn-outline-secondary.focus{box-shadow:0 0 0 0.2rem rgba(108,117,125,0.5)}.btn-outline-secondary.disabled,.btn-outline-secondary:disabled{color:#6c757d;background-color:transparent}.btn-outline-secondary:not(:disabled):not(.disabled):active,.btn-outline-secondary:not(:disabled):not(.disabled).active,.show>.btn-outline-secondary.dropdown-toggle{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary:not(:disabled):not(.disabled):active:focus,.btn-outline-secondary:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-secondary.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(108,117,125,0.5)}.btn-outline-success{color:#28a745;border-color:#28a745}.btn-outline-success:hover{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success:focus,.btn-outline-success.focus{box-shadow:0 0 0 0.2rem rgba(40,167,69,0.5)}.btn-outline-success.disabled,.btn-outline-success:disabled{color:#28a745;background-color:transparent}.btn-outline-success:not(:disabled):not(.disabled):active,.btn-outline-success:not(:disabled):not(.disabled).active,.show>.btn-outline-success.dropdown-toggle{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success:not(:disabled):not(.disabled):active:focus,.btn-outline-success:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-success.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(40,167,69,0.5)}.btn-outline-info{color:#17a2b8;border-color:#17a2b8}.btn-outline-info:hover{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info:focus,.btn-outline-info.focus{box-shadow:0 0 0 0.2rem rgba(23,162,184,0.5)}.btn-outline-info.disabled,.btn-outline-info:disabled{color:#17a2b8;background-color:transparent}.btn-outline-info:not(:disabled):not(.disabled):active,.btn-outline-info:not(:disabled):not(.disabled).active,.show>.btn-outline-info.dropdown-toggle{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info:not(:disabled):not(.disabled):active:focus,.btn-outline-info:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-info.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(23,162,184,0.5)}.btn-outline-warning{color:#ffc107;border-color:#ffc107}.btn-outline-warning:hover{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning:focus,.btn-outline-warning.focus{box-shadow:0 0 0 0.2rem rgba(255,193,7,0.5)}.btn-outline-warning.disabled,.btn-outline-warning:disabled{color:#ffc107;background-color:transparent}.btn-outline-warning:not(:disabled):not(.disabled):active,.btn-outline-warning:not(:disabled):not(.disabled).active,.show>.btn-outline-warning.dropdown-toggle{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning:not(:disabled):not(.disabled):active:focus,.btn-outline-warning:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-warning.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(255,193,7,0.5)}.btn-outline-danger{color:#dc3545;border-color:#dc3545}.btn-outline-danger:hover{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger:focus,.btn-outline-danger.focus{box-shadow:0 0 0 0.2rem rgba(220,53,69,0.5)}.btn-outline-danger.disabled,.btn-outline-danger:disabled{color:#dc3545;background-color:transparent}.btn-outline-danger:not(:disabled):not(.disabled):active,.btn-outline-danger:not(:disabled):not(.disabled).active,.show>.btn-outline-danger.dropdown-toggle{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger:not(:disabled):not(.disabled):active:focus,.btn-outline-danger:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-danger.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(220,53,69,0.5)}.btn-outline-light{color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:hover{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:focus,.btn-outline-light.focus{box-shadow:0 0 0 0.2rem rgba(248,249,250,0.5)}.btn-outline-light.disabled,.btn-outline-light:disabled{color:#f8f9fa;background-color:transparent}.btn-outline-light:not(:disabled):not(.disabled):active,.btn-outline-light:not(:disabled):not(.disabled).active,.show>.btn-outline-light.dropdown-toggle{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:not(:disabled):not(.disabled):active:focus,.btn-outline-light:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-light.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(248,249,250,0.5)}.btn-outline-dark{color:#343a40;border-color:#343a40}.btn-outline-dark:hover{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark:focus,.btn-outline-dark.focus{box-shadow:0 0 0 0.2rem rgba(52,58,64,0.5)}.btn-outline-dark.disabled,.btn-outline-dark:disabled{color:#343a40;background-color:transparent}.btn-outline-dark:not(:disabled):not(.disabled):active,.btn-outline-dark:not(:disabled):not(.disabled).active,.show>.btn-outline-dark.dropdown-toggle{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark:not(:disabled):not(.disabled):active:focus,.btn-outline-dark:not(:disabled):not(.disabled).active:focus,.show>.btn-outline-dark.dropdown-toggle:focus{box-shadow:0 0 0 0.2rem rgba(52,58,64,0.5)}.btn-link{font-weight:400;color:#007bff;text-decoration:none}.btn-link:hover{color:#0056b3;text-decoration:underline}.btn-link:focus,.btn-link.focus{text-decoration:underline;box-shadow:none}.btn-link:disabled,.btn-link.disabled{color:#6c757d;pointer-events:none}.btn-lg,.btn-group-lg>.btn{padding:0.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:0.3rem}.btn-sm,.btn-group-sm>.btn{padding:0.25rem 0.5rem;font-size:0.875rem;line-height:1.5;border-radius:0.2rem}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:0.5rem}input[type="submit"].btn-block,input[type="reset"].btn-block,input[type="button"].btn-block{width:100%}.fade{transition:opacity 0.15s linear}@media (prefers-reduced-motion: reduce){.fade{transition:none}}.fade:not(.show){opacity:0}.collapse:not(.show){display:none}.collapsing{position:relative;height:0;overflow:hidden;transition:height 0.35s ease}@media (prefers-reduced-motion: reduce){.collapsing{transition:none}}.dropup,.dropright,.dropdown,.dropleft{position:relative}.dropdown-toggle{white-space:nowrap}.dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:"";border-top:0.3em solid;border-right:0.3em solid transparent;border-bottom:0;border-left:0.3em solid transparent}.dropdown-toggle:empty::after{margin-left:0}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:10rem;padding:0.5rem 0;margin:0.125rem 0 0;font-size:1rem;color:#212529;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,0.15);border-radius:0.25rem}.dropdown-menu-left{right:auto;left:0}.dropdown-menu-right{right:0;left:auto}@media (min-width: 576px){.dropdown-menu-sm-left{right:auto;left:0}.dropdown-menu-sm-right{right:0;left:auto}}@media (min-width: 768px){.dropdown-menu-md-left{right:auto;left:0}.dropdown-menu-md-right{right:0;left:auto}}@media (min-width: 992px){.dropdown-menu-lg-left{right:auto;left:0}.dropdown-menu-lg-right{right:0;left:auto}}@media (min-width: 1200px){.dropdown-menu-xl-left{right:auto;left:0}.dropdown-menu-xl-right{right:0;left:auto}}.dropup .dropdown-menu{top:auto;bottom:100%;margin-top:0;margin-bottom:0.125rem}.dropup .dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:"";border-top:0;border-right:0.3em solid transparent;border-bottom:0.3em solid;border-left:0.3em solid transparent}.dropup .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-menu{top:0;right:auto;left:100%;margin-top:0;margin-left:0.125rem}.dropright .dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:"";border-top:0.3em solid transparent;border-right:0;border-bottom:0.3em solid transparent;border-left:0.3em solid}.dropright .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-toggle::after{vertical-align:0}.dropleft .dropdown-menu{top:0;right:100%;left:auto;margin-top:0;margin-right:0.125rem}.dropleft .dropdown-toggle::after{display:inline-block;margin-left:0.255em;vertical-align:0.255em;content:""}.dropleft .dropdown-toggle::after{display:none}.dropleft .dropdown-toggle::before{display:inline-block;margin-right:0.255em;vertical-align:0.255em;content:"";border-top:0.3em solid transparent;border-right:0.3em solid;border-bottom:0.3em solid transparent}.dropleft .dropdown-toggle:empty::after{margin-left:0}.dropleft .dropdown-toggle::before{vertical-align:0}.dropdown-menu[x-placement^="top"],.dropdown-menu[x-placement^="right"],.dropdown-menu[x-placement^="bottom"],.dropdown-menu[x-placement^="left"]{right:auto;bottom:auto}.dropdown-divider{height:0;margin:0.5rem 0;overflow:hidden;border-top:1px solid #e9ecef}.dropdown-item{display:block;width:100%;padding:0.25rem 1.5rem;clear:both;font-weight:400;color:#212529;text-align:inherit;white-space:nowrap;background-color:transparent;border:0}.dropdown-item:hover,.dropdown-item:focus{color:#16181b;text-decoration:none;background-color:#f8f9fa}.dropdown-item.active,.dropdown-item:active{color:#fff;text-decoration:none;background-color:#007bff}.dropdown-item.disabled,.dropdown-item:disabled{color:#6c757d;pointer-events:none;background-color:transparent}.dropdown-menu.show{display:block}.dropdown-header{display:block;padding:0.5rem 1.5rem;margin-bottom:0;font-size:0.875rem;color:#6c757d;white-space:nowrap}.dropdown-item-text{display:block;padding:0.25rem 1.5rem;color:#212529}.btn-group,.btn-group-vertical{position:relative;display:-ms-inline-flexbox;display:inline-flex;vertical-align:middle}.btn-group>.btn,.btn-group-vertical>.btn{position:relative;-ms-flex:1 1 auto;flex:1 1 auto}.btn-group>.btn:hover,.btn-group-vertical>.btn:hover{z-index:1}.btn-group>.btn:focus,.btn-group>.btn:active,.btn-group>.btn.active,.btn-group-vertical>.btn:focus,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn.active{z-index:1}.btn-toolbar{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}.btn-toolbar .input-group{width:auto}.btn-group>.btn:not(:first-child),.btn-group>.btn-group:not(:first-child){margin-left:-1px}.btn-group>.btn:not(:last-child):not(.dropdown-toggle),.btn-group>.btn-group:not(:last-child)>.btn{border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn:not(:first-child),.btn-group>.btn-group:not(:first-child)>.btn{border-top-left-radius:0;border-bottom-left-radius:0}.dropdown-toggle-split{padding-right:0.5625rem;padding-left:0.5625rem}.dropdown-toggle-split::after,.dropup .dropdown-toggle-split::after,.dropright .dropdown-toggle-split::after{margin-left:0}.dropleft .dropdown-toggle-split::before{margin-right:0}.btn-sm+.dropdown-toggle-split,.btn-group-sm>.btn+.dropdown-toggle-split{padding-right:0.375rem;padding-left:0.375rem}.btn-lg+.dropdown-toggle-split,.btn-group-lg>.btn+.dropdown-toggle-split{padding-right:0.75rem;padding-left:0.75rem}.btn-group-vertical{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:center;justify-content:center}.btn-group-vertical>.btn,.btn-group-vertical>.btn-group{width:100%}.btn-group-vertical>.btn:not(:first-child),.btn-group-vertical>.btn-group:not(:first-child){margin-top:-1px}.btn-group-vertical>.btn:not(:last-child):not(.dropdown-toggle),.btn-group-vertical>.btn-group:not(:last-child)>.btn{border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn:not(:first-child),.btn-group-vertical>.btn-group:not(:first-child)>.btn{border-top-left-radius:0;border-top-right-radius:0}.btn-group-toggle>.btn,.btn-group-toggle>.btn-group>.btn{margin-bottom:0}.btn-group-toggle>.btn input[type="radio"],.btn-group-toggle>.btn input[type="checkbox"],.btn-group-toggle>.btn-group>.btn input[type="radio"],.btn-group-toggle>.btn-group>.btn input[type="checkbox"]{position:absolute;clip:rect(0, 0, 0, 0);pointer-events:none}.input-group{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:stretch;align-items:stretch;width:100%}.input-group>.form-control,.input-group>.form-control-plaintext,.input-group>.custom-select,.input-group>.custom-file{position:relative;-ms-flex:1 1 0%;flex:1 1 0%;min-width:0;margin-bottom:0}.input-group>.form-control+.form-control,.input-group>.form-control+.custom-select,.input-group>.form-control+.custom-file,.input-group>.form-control-plaintext+.form-control,.input-group>.form-control-plaintext+.custom-select,.input-group>.form-control-plaintext+.custom-file,.input-group>.custom-select+.form-control,.input-group>.custom-select+.custom-select,.input-group>.custom-select+.custom-file,.input-group>.custom-file+.form-control,.input-group>.custom-file+.custom-select,.input-group>.custom-file+.custom-file{margin-left:-1px}.input-group>.form-control:focus,.input-group>.custom-select:focus,.input-group>.custom-file .custom-file-input:focus ~ .custom-file-label{z-index:3}.input-group>.custom-file .custom-file-input:focus{z-index:4}.input-group>.form-control:not(:last-child),.input-group>.custom-select:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.form-control:not(:first-child),.input-group>.custom-select:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.input-group>.custom-file{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.input-group>.custom-file:not(:last-child) .custom-file-label,.input-group>.custom-file:not(:last-child) .custom-file-label::after{border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.custom-file:not(:first-child) .custom-file-label{border-top-left-radius:0;border-bottom-left-radius:0}.input-group-prepend,.input-group-append{display:-ms-flexbox;display:flex}.input-group-prepend .btn,.input-group-append .btn{position:relative;z-index:2}.input-group-prepend .btn:focus,.input-group-append .btn:focus{z-index:3}.input-group-prepend .btn+.btn,.input-group-prepend .btn+.input-group-text,.input-group-prepend .input-group-text+.input-group-text,.input-group-prepend .input-group-text+.btn,.input-group-append .btn+.btn,.input-group-append .btn+.input-group-text,.input-group-append .input-group-text+.input-group-text,.input-group-append .input-group-text+.btn{margin-left:-1px}.input-group-prepend{margin-right:-1px}.input-group-append{margin-left:-1px}.input-group-text{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:0.375rem 0.75rem;margin-bottom:0;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;text-align:center;white-space:nowrap;background-color:#e9ecef;border:1px solid #ced4da;border-radius:0.25rem}.input-group-text input[type="radio"],.input-group-text input[type="checkbox"]{margin-top:0}.input-group-lg>.form-control:not(textarea),.input-group-lg>.custom-select{height:calc(1.5em + 1rem + 2px)}.input-group-lg>.form-control,.input-group-lg>.custom-select,.input-group-lg>.input-group-prepend>.input-group-text,.input-group-lg>.input-group-append>.input-group-text,.input-group-lg>.input-group-prepend>.btn,.input-group-lg>.input-group-append>.btn{padding:0.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:0.3rem}.input-group-sm>.form-control:not(textarea),.input-group-sm>.custom-select{height:calc(1.5em + 0.5rem + 2px)}.input-group-sm>.form-control,.input-group-sm>.custom-select,.input-group-sm>.input-group-prepend>.input-group-text,.input-group-sm>.input-group-append>.input-group-text,.input-group-sm>.input-group-prepend>.btn,.input-group-sm>.input-group-append>.btn{padding:0.25rem 0.5rem;font-size:0.875rem;line-height:1.5;border-radius:0.2rem}.input-group-lg>.custom-select,.input-group-sm>.custom-select{padding-right:1.75rem}.input-group>.input-group-prepend>.btn,.input-group>.input-group-prepend>.input-group-text,.input-group>.input-group-append:not(:last-child)>.btn,.input-group>.input-group-append:not(:last-child)>.input-group-text,.input-group>.input-group-append:last-child>.btn:not(:last-child):not(.dropdown-toggle),.input-group>.input-group-append:last-child>.input-group-text:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.input-group-append>.btn,.input-group>.input-group-append>.input-group-text,.input-group>.input-group-prepend:not(:first-child)>.btn,.input-group>.input-group-prepend:not(:first-child)>.input-group-text,.input-group>.input-group-prepend:first-child>.btn:not(:first-child),.input-group>.input-group-prepend:first-child>.input-group-text:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.custom-control{position:relative;display:block;min-height:1.5rem;padding-left:1.5rem}.custom-control-inline{display:-ms-inline-flexbox;display:inline-flex;margin-right:1rem}.custom-control-input{position:absolute;left:0;z-index:-1;width:1rem;height:1.25rem;opacity:0}.custom-control-input:checked ~ .custom-control-label::before{color:#fff;border-color:#007bff;background-color:#007bff}.custom-control-input:focus ~ .custom-control-label::before{box-shadow:0 0 0 0.2rem rgba(0,123,255,0.25)}.custom-control-input:focus:not(:checked) ~ .custom-control-label::before{border-color:#80bdff}.custom-control-input:not(:disabled):active ~ .custom-control-label::before{color:#fff;background-color:#b3d7ff;border-color:#b3d7ff}.custom-control-input[disabled] ~ .custom-control-label,.custom-control-input:disabled ~ .custom-control-label{color:#6c757d}.custom-control-input[disabled] ~ .custom-control-label::before,.custom-control-input:disabled ~ .custom-control-label::before{background-color:#e9ecef}.custom-control-label{position:relative;margin-bottom:0;vertical-align:top}.custom-control-label::before{position:absolute;top:0.25rem;left:-1.5rem;display:block;width:1rem;height:1rem;pointer-events:none;content:"";background-color:#fff;border:#adb5bd solid 1px}.custom-control-label::after{position:absolute;top:0.25rem;left:-1.5rem;display:block;width:1rem;height:1rem;content:"";background:no-repeat 50% / 50% 50%}.custom-checkbox .custom-control-label::before{border-radius:0.25rem}.custom-checkbox .custom-control-input:checked ~ .custom-control-label::after{background-image:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'8\' height=\'8\' viewBox=\'0 0 8 8\'%3e%3cpath fill=\'%23fff\' d=\'M6.564.75l-3.59 3.612-1.538-1.55L0 4.26l2.974 2.99L8 2.193z\'/%3e%3c/svg%3e")}.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-label::before{border-color:#007bff;background-color:#007bff}.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-label::after{background-image:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'4\' height=\'4\' viewBox=\'0 0 4 4\'%3e%3cpath stroke=\'%23fff\' d=\'M0 2h4\'/%3e%3c/svg%3e")}.custom-checkbox .custom-control-input:disabled:checked ~ .custom-control-label::before{background-color:rgba(0,123,255,0.5)}.custom-checkbox .custom-control-input:disabled:indeterminate ~ .custom-control-label::before{background-color:rgba(0,123,255,0.5)}.custom-radio .custom-control-label::before{border-radius:50%}.custom-radio .custom-control-input:checked ~ .custom-control-label::after{background-image:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'12\' height=\'12\' viewBox=\'-4 -4 8 8\'%3e%3ccircle r=\'3\' fill=\'%23fff\'/%3e%3c/svg%3e")}.custom-radio .custom-control-input:disabled:checked ~ .custom-control-label::before{background-color:rgba(0,123,255,0.5)}.custom-switch{padding-left:2.25rem}.custom-switch .custom-control-label::before{left:-2.25rem;width:1.75rem;pointer-events:all;border-radius:0.5rem}.custom-switch .custom-control-label::after{top:calc(0.25rem + 2px);left:calc(-2.25rem + 2px);width:calc(1rem - 4px);height:calc(1rem - 4px);background-color:#adb5bd;border-radius:0.5rem;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-transform 0.15s ease-in-out;transition:transform 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:transform 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-transform 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.custom-switch .custom-control-label::after{transition:none}}.custom-switch .custom-control-input:checked ~ .custom-control-label::after{background-color:#fff;-webkit-transform:translateX(0.75rem);transform:translateX(0.75rem)}.custom-switch .custom-control-input:disabled:checked ~ .custom-control-label::before{background-color:rgba(0,123,255,0.5)}.custom-select{display:inline-block;width:100%;height:calc(1.5em + 0.75rem + 2px);padding:0.375rem 1.75rem 0.375rem 0.75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;vertical-align:middle;background:#fff url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'4\' height=\'5\' viewBox=\'0 0 4 5\'%3e%3cpath fill=\'%23343a40\' d=\'M2 0L0 2h4zm0 5L0 3h4z\'/%3e%3c/svg%3e") no-repeat right 0.75rem center/8px 10px;border:1px solid #ced4da;border-radius:0.25rem;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-select:focus{border-color:#80bdff;outline:0;box-shadow:0 0 0 0.2rem rgba(0,123,255,0.25)}.custom-select:focus::-ms-value{color:#495057;background-color:#fff}.custom-select[multiple],.custom-select[size]:not([size="1"]){height:auto;padding-right:0.75rem;background-image:none}.custom-select:disabled{color:#6c757d;background-color:#e9ecef}.custom-select::-ms-expand{display:none}.custom-select:-moz-focusring{color:transparent;text-shadow:0 0 0 #495057}.custom-select-sm{height:calc(1.5em + 0.5rem + 2px);padding-top:0.25rem;padding-bottom:0.25rem;padding-left:0.5rem;font-size:0.875rem}.custom-select-lg{height:calc(1.5em + 1rem + 2px);padding-top:0.5rem;padding-bottom:0.5rem;padding-left:1rem;font-size:1.25rem}.custom-file{position:relative;display:inline-block;width:100%;height:calc(1.5em + 0.75rem + 2px);margin-bottom:0}.custom-file-input{position:relative;z-index:2;width:100%;height:calc(1.5em + 0.75rem + 2px);margin:0;opacity:0}.custom-file-input:focus ~ .custom-file-label{border-color:#80bdff;box-shadow:0 0 0 0.2rem rgba(0,123,255,0.25)}.custom-file-input[disabled] ~ .custom-file-label,.custom-file-input:disabled ~ .custom-file-label{background-color:#e9ecef}.custom-file-input:lang(en) ~ .custom-file-label::after{content:"Browse"}.custom-file-input ~ .custom-file-label[data-browse]::after{content:attr(data-browse)}.custom-file-label{position:absolute;top:0;right:0;left:0;z-index:1;height:calc(1.5em + 0.75rem + 2px);padding:0.375rem 0.75rem;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;border:1px solid #ced4da;border-radius:0.25rem}.custom-file-label::after{position:absolute;top:0;right:0;bottom:0;z-index:3;display:block;height:calc(1.5em + 0.75rem);padding:0.375rem 0.75rem;line-height:1.5;color:#495057;content:"Browse";background-color:#e9ecef;border-left:inherit;border-radius:0 0.25rem 0.25rem 0}.custom-range{width:100%;height:1.4rem;padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-range:focus{outline:none}.custom-range:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 0.2rem rgba(0,123,255,0.25)}.custom-range:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 0.2rem rgba(0,123,255,0.25)}.custom-range:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 0.2rem rgba(0,123,255,0.25)}.custom-range::-moz-focus-outer{border:0}.custom-range::-webkit-slider-thumb{width:1rem;height:1rem;margin-top:-0.25rem;background-color:#007bff;border:0;border-radius:1rem;-webkit-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;-webkit-appearance:none;appearance:none}@media (prefers-reduced-motion: reduce){.custom-range::-webkit-slider-thumb{-webkit-transition:none;transition:none}}.custom-range::-webkit-slider-thumb:active{background-color:#b3d7ff}.custom-range::-webkit-slider-runnable-track{width:100%;height:0.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.custom-range::-moz-range-thumb{width:1rem;height:1rem;background-color:#007bff;border:0;border-radius:1rem;-moz-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;-moz-appearance:none;appearance:none}@media (prefers-reduced-motion: reduce){.custom-range::-moz-range-thumb{-moz-transition:none;transition:none}}.custom-range::-moz-range-thumb:active{background-color:#b3d7ff}.custom-range::-moz-range-track{width:100%;height:0.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.custom-range::-ms-thumb{width:1rem;height:1rem;margin-top:0;margin-right:0.2rem;margin-left:0.2rem;background-color:#007bff;border:0;border-radius:1rem;-ms-transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;appearance:none}@media (prefers-reduced-motion: reduce){.custom-range::-ms-thumb{-ms-transition:none;transition:none}}.custom-range::-ms-thumb:active{background-color:#b3d7ff}.custom-range::-ms-track{width:100%;height:0.5rem;color:transparent;cursor:pointer;background-color:transparent;border-color:transparent;border-width:0.5rem}.custom-range::-ms-fill-lower{background-color:#dee2e6;border-radius:1rem}.custom-range::-ms-fill-upper{margin-right:15px;background-color:#dee2e6;border-radius:1rem}.custom-range:disabled::-webkit-slider-thumb{background-color:#adb5bd}.custom-range:disabled::-webkit-slider-runnable-track{cursor:default}.custom-range:disabled::-moz-range-thumb{background-color:#adb5bd}.custom-range:disabled::-moz-range-track{cursor:default}.custom-range:disabled::-ms-thumb{background-color:#adb5bd}.custom-control-label::before,.custom-file-label,.custom-select{transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.custom-control-label::before,.custom-file-label,.custom-select{transition:none}}.nav{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:block;padding:0.5rem 1rem}.nav-link:hover,.nav-link:focus{text-decoration:none}.nav-link.disabled{color:#6c757d;pointer-events:none;cursor:default}.nav-tabs{border-bottom:1px solid #dee2e6}.nav-tabs .nav-item{margin-bottom:-1px}.nav-tabs .nav-link{border:1px solid transparent;border-top-left-radius:0.25rem;border-top-right-radius:0.25rem}.nav-tabs .nav-link:hover,.nav-tabs .nav-link:focus{border-color:#e9ecef #e9ecef #dee2e6}.nav-tabs .nav-link.disabled{color:#6c757d;background-color:transparent;border-color:transparent}.nav-tabs .nav-link.active,.nav-tabs .nav-item.show .nav-link{color:#495057;background-color:#fff;border-color:#dee2e6 #dee2e6 #fff}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.nav-pills .nav-link{border-radius:0.25rem}.nav-pills .nav-link.active,.nav-pills .show>.nav-link{color:#fff;background-color:#007bff}.nav-fill .nav-item{-ms-flex:1 1 auto;flex:1 1 auto;text-align:center}.nav-justified .nav-item{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;text-align:center}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.navbar{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;padding:0.5rem 1rem}.navbar .container,.navbar .container-fluid,.navbar .container-sm,.navbar .container-md,.navbar .container-lg,.navbar .container-xl{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.navbar-brand{display:inline-block;padding-top:0.3125rem;padding-bottom:0.3125rem;margin-right:1rem;font-size:1.25rem;line-height:inherit;white-space:nowrap}.navbar-brand:hover,.navbar-brand:focus{text-decoration:none}.navbar-nav{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.navbar-nav .nav-link{padding-right:0;padding-left:0}.navbar-nav .dropdown-menu{position:static;float:none}.navbar-text{display:inline-block;padding-top:0.5rem;padding-bottom:0.5rem}.navbar-collapse{-ms-flex-preferred-size:100%;flex-basis:100%;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center}.navbar-toggler{padding:0.25rem 0.75rem;font-size:1.25rem;line-height:1;background-color:transparent;border:1px solid transparent;border-radius:0.25rem}.navbar-toggler:hover,.navbar-toggler:focus{text-decoration:none}.navbar-toggler-icon{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;content:"";background:no-repeat center center;background-size:100% 100%}@media (max-width: 575.98px){.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid,.navbar-expand-sm>.container-sm,.navbar-expand-sm>.container-md,.navbar-expand-sm>.container-lg,.navbar-expand-sm>.container-xl{padding-right:0;padding-left:0}}@media (min-width: 576px){.navbar-expand-sm{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-sm .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-sm .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-sm .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid,.navbar-expand-sm>.container-sm,.navbar-expand-sm>.container-md,.navbar-expand-sm>.container-lg,.navbar-expand-sm>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-sm .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-sm .navbar-toggler{display:none}}@media (max-width: 767.98px){.navbar-expand-md>.container,.navbar-expand-md>.container-fluid,.navbar-expand-md>.container-sm,.navbar-expand-md>.container-md,.navbar-expand-md>.container-lg,.navbar-expand-md>.container-xl{padding-right:0;padding-left:0}}@media (min-width: 768px){.navbar-expand-md{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-md .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-md .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-md .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-md>.container,.navbar-expand-md>.container-fluid,.navbar-expand-md>.container-sm,.navbar-expand-md>.container-md,.navbar-expand-md>.container-lg,.navbar-expand-md>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-md .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-md .navbar-toggler{display:none}}@media (max-width: 991.98px){.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid,.navbar-expand-lg>.container-sm,.navbar-expand-lg>.container-md,.navbar-expand-lg>.container-lg,.navbar-expand-lg>.container-xl{padding-right:0;padding-left:0}}@media (min-width: 992px){.navbar-expand-lg{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-lg .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-lg .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-lg .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid,.navbar-expand-lg>.container-sm,.navbar-expand-lg>.container-md,.navbar-expand-lg>.container-lg,.navbar-expand-lg>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-lg .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-lg .navbar-toggler{display:none}}@media (max-width: 1199.98px){.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid,.navbar-expand-xl>.container-sm,.navbar-expand-xl>.container-md,.navbar-expand-xl>.container-lg,.navbar-expand-xl>.container-xl{padding-right:0;padding-left:0}}@media (min-width: 1200px){.navbar-expand-xl{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-xl .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-xl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xl .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid,.navbar-expand-xl>.container-sm,.navbar-expand-xl>.container-md,.navbar-expand-xl>.container-lg,.navbar-expand-xl>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-xl .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-xl .navbar-toggler{display:none}}.navbar-expand{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand>.container,.navbar-expand>.container-fluid,.navbar-expand>.container-sm,.navbar-expand>.container-md,.navbar-expand>.container-lg,.navbar-expand>.container-xl{padding-right:0;padding-left:0}.navbar-expand .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand .navbar-nav .dropdown-menu{position:absolute}.navbar-expand .navbar-nav .nav-link{padding-right:0.5rem;padding-left:0.5rem}.navbar-expand>.container,.navbar-expand>.container-fluid,.navbar-expand>.container-sm,.navbar-expand>.container-md,.navbar-expand>.container-lg,.navbar-expand>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand .navbar-collapse{display:-ms-flexbox !important;display:flex !important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand .navbar-toggler{display:none}.navbar-light .navbar-brand{color:rgba(0,0,0,0.9)}.navbar-light .navbar-brand:hover,.navbar-light .navbar-brand:focus{color:rgba(0,0,0,0.9)}.navbar-light .navbar-nav .nav-link{color:rgba(0,0,0,0.5)}.navbar-light .navbar-nav .nav-link:hover,.navbar-light .navbar-nav .nav-link:focus{color:rgba(0,0,0,0.7)}.navbar-light .navbar-nav .nav-link.disabled{color:rgba(0,0,0,0.3)}.navbar-light .navbar-nav .show>.nav-link,.navbar-light .navbar-nav .active>.nav-link,.navbar-light .navbar-nav .nav-link.show,.navbar-light .navbar-nav .nav-link.active{color:rgba(0,0,0,0.9)}.navbar-light .navbar-toggler{color:rgba(0,0,0,0.5);border-color:rgba(0,0,0,0.1)}.navbar-light .navbar-toggler-icon{background-image:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'30\' height=\'30\' viewBox=\'0 0 30 30\'%3e%3cpath stroke=\'rgba(0, 0, 0, 0.5)\' stroke-linecap=\'round\' stroke-miterlimit=\'10\' stroke-width=\'2\' d=\'M4 7h22M4 15h22M4 23h22\'/%3e%3c/svg%3e")}.navbar-light .navbar-text{color:rgba(0,0,0,0.5)}.navbar-light .navbar-text a{color:rgba(0,0,0,0.9)}.navbar-light .navbar-text a:hover,.navbar-light .navbar-text a:focus{color:rgba(0,0,0,0.9)}.navbar-dark .navbar-brand{color:#fff}.navbar-dark .navbar-brand:hover,.navbar-dark .navbar-brand:focus{color:#fff}.navbar-dark .navbar-nav .nav-link{color:rgba(255,255,255,0.5)}.navbar-dark .navbar-nav .nav-link:hover,.navbar-dark .navbar-nav .nav-link:focus{color:rgba(255,255,255,0.75)}.navbar-dark .navbar-nav .nav-link.disabled{color:rgba(255,255,255,0.25)}.navbar-dark .navbar-nav .show>.nav-link,.navbar-dark .navbar-nav .active>.nav-link,.navbar-dark .navbar-nav .nav-link.show,.navbar-dark .navbar-nav .nav-link.active{color:#fff}.navbar-dark .navbar-toggler{color:rgba(255,255,255,0.5);border-color:rgba(255,255,255,0.1)}.navbar-dark .navbar-toggler-icon{background-image:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'30\' height=\'30\' viewBox=\'0 0 30 30\'%3e%3cpath stroke=\'rgba(255, 255, 255, 0.5)\' stroke-linecap=\'round\' stroke-miterlimit=\'10\' stroke-width=\'2\' d=\'M4 7h22M4 15h22M4 23h22\'/%3e%3c/svg%3e")}.navbar-dark .navbar-text{color:rgba(255,255,255,0.5)}.navbar-dark .navbar-text a{color:#fff}.navbar-dark .navbar-text a:hover,.navbar-dark .navbar-text a:focus{color:#fff}.card{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:1px solid rgba(0,0,0,0.125);border-radius:0.25rem}.card>hr{margin-right:0;margin-left:0}.card>.list-group:first-child .list-group-item:first-child{border-top-left-radius:0.25rem;border-top-right-radius:0.25rem}.card>.list-group:last-child .list-group-item:last-child{border-bottom-right-radius:0.25rem;border-bottom-left-radius:0.25rem}.card-body{-ms-flex:1 1 auto;flex:1 1 auto;min-height:1px;padding:1.25rem}.card-title{margin-bottom:0.75rem}.card-subtitle{margin-top:-0.375rem;margin-bottom:0}.card-text:last-child{margin-bottom:0}.card-link:hover{text-decoration:none}.card-link+.card-link{margin-left:1.25rem}.card-header{padding:0.75rem 1.25rem;margin-bottom:0;background-color:rgba(0,0,0,0.03);border-bottom:1px solid rgba(0,0,0,0.125)}.card-header:first-child{border-radius:calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0}.card-header+.list-group .list-group-item:first-child{border-top:0}.card-footer{padding:0.75rem 1.25rem;background-color:rgba(0,0,0,0.03);border-top:1px solid rgba(0,0,0,0.125)}.card-footer:last-child{border-radius:0 0 calc(0.25rem - 1px) calc(0.25rem - 1px)}.card-header-tabs{margin-right:-0.625rem;margin-bottom:-0.75rem;margin-left:-0.625rem;border-bottom:0}.card-header-pills{margin-right:-0.625rem;margin-left:-0.625rem}.card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:1.25rem}.card-img,.card-img-top,.card-img-bottom{-ms-flex-negative:0;flex-shrink:0;width:100%}.card-img,.card-img-top{border-top-left-radius:calc(0.25rem - 1px);border-top-right-radius:calc(0.25rem - 1px)}.card-img,.card-img-bottom{border-bottom-right-radius:calc(0.25rem - 1px);border-bottom-left-radius:calc(0.25rem - 1px)}.card-deck .card{margin-bottom:15px}@media (min-width: 576px){.card-deck{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap;margin-right:-15px;margin-left:-15px}.card-deck .card{-ms-flex:1 0 0%;flex:1 0 0%;margin-right:15px;margin-bottom:0;margin-left:15px}}.card-group>.card{margin-bottom:15px}@media (min-width: 576px){.card-group{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap}.card-group>.card{-ms-flex:1 0 0%;flex:1 0 0%;margin-bottom:0}.card-group>.card+.card{margin-left:0;border-left:0}.card-group>.card:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.card-group>.card:not(:last-child) .card-img-top,.card-group>.card:not(:last-child) .card-header{border-top-right-radius:0}.card-group>.card:not(:last-child) .card-img-bottom,.card-group>.card:not(:last-child) .card-footer{border-bottom-right-radius:0}.card-group>.card:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.card-group>.card:not(:first-child) .card-img-top,.card-group>.card:not(:first-child) .card-header{border-top-left-radius:0}.card-group>.card:not(:first-child) .card-img-bottom,.card-group>.card:not(:first-child) .card-footer{border-bottom-left-radius:0}}.card-columns .card{margin-bottom:0.75rem}@media (min-width: 576px){.card-columns{-webkit-column-count:3;-moz-column-count:3;column-count:3;-webkit-column-gap:1.25rem;-moz-column-gap:1.25rem;column-gap:1.25rem;orphans:1;widows:1}.card-columns .card{display:inline-block;width:100%}}.accordion>.card{overflow:hidden}.accordion>.card:not(:last-of-type){border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.accordion>.card:not(:first-of-type){border-top-left-radius:0;border-top-right-radius:0}.accordion>.card>.card-header{border-radius:0;margin-bottom:-1px}.breadcrumb{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:0.75rem 1rem;margin-bottom:1rem;list-style:none;background-color:#e9ecef;border-radius:0.25rem}.breadcrumb-item+.breadcrumb-item{padding-left:0.5rem}.breadcrumb-item+.breadcrumb-item::before{display:inline-block;padding-right:0.5rem;color:#6c757d;content:"/"}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:underline}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:none}.breadcrumb-item.active{color:#6c757d}.pagination{display:-ms-flexbox;display:flex;padding-left:0;list-style:none;border-radius:0.25rem}.page-link{position:relative;display:block;padding:0.5rem 0.75rem;margin-left:-1px;line-height:1.25;color:#007bff;background-color:#fff;border:1px solid #dee2e6}.page-link:hover{z-index:2;color:#0056b3;text-decoration:none;background-color:#e9ecef;border-color:#dee2e6}.page-link:focus{z-index:3;outline:0;box-shadow:0 0 0 0.2rem rgba(0,123,255,0.25)}.page-item:first-child .page-link{margin-left:0;border-top-left-radius:0.25rem;border-bottom-left-radius:0.25rem}.page-item:last-child .page-link{border-top-right-radius:0.25rem;border-bottom-right-radius:0.25rem}.page-item.active .page-link{z-index:3;color:#fff;background-color:#007bff;border-color:#007bff}.page-item.disabled .page-link{color:#6c757d;pointer-events:none;cursor:auto;background-color:#fff;border-color:#dee2e6}.pagination-lg .page-link{padding:0.75rem 1.5rem;font-size:1.25rem;line-height:1.5}.pagination-lg .page-item:first-child .page-link{border-top-left-radius:0.3rem;border-bottom-left-radius:0.3rem}.pagination-lg .page-item:last-child .page-link{border-top-right-radius:0.3rem;border-bottom-right-radius:0.3rem}.pagination-sm .page-link{padding:0.25rem 0.5rem;font-size:0.875rem;line-height:1.5}.pagination-sm .page-item:first-child .page-link{border-top-left-radius:0.2rem;border-bottom-left-radius:0.2rem}.pagination-sm .page-item:last-child .page-link{border-top-right-radius:0.2rem;border-bottom-right-radius:0.2rem}.badge{display:inline-block;padding:0.25em 0.4em;font-size:75%;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:0.25rem;transition:color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out}@media (prefers-reduced-motion: reduce){.badge{transition:none}}a.badge:hover,a.badge:focus{text-decoration:none}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.badge-pill{padding-right:0.6em;padding-left:0.6em;border-radius:10rem}.badge-primary{color:#fff;background-color:#007bff}a.badge-primary:hover,a.badge-primary:focus{color:#fff;background-color:#0062cc}a.badge-primary:focus,a.badge-primary.focus{outline:0;box-shadow:0 0 0 0.2rem rgba(0,123,255,0.5)}.badge-secondary{color:#fff;background-color:#6c757d}a.badge-secondary:hover,a.badge-secondary:focus{color:#fff;background-color:#545b62}a.badge-secondary:focus,a.badge-secondary.focus{outline:0;box-shadow:0 0 0 0.2rem rgba(108,117,125,0.5)}.badge-success{color:#fff;background-color:#28a745}a.badge-success:hover,a.badge-success:focus{color:#fff;background-color:#1e7e34}a.badge-success:focus,a.badge-success.focus{outline:0;box-shadow:0 0 0 0.2rem rgba(40,167,69,0.5)}.badge-info{color:#fff;background-color:#17a2b8}a.badge-info:hover,a.badge-info:focus{color:#fff;background-color:#117a8b}a.badge-info:focus,a.badge-info.focus{outline:0;box-shadow:0 0 0 0.2rem rgba(23,162,184,0.5)}.badge-warning{color:#212529;background-color:#ffc107}a.badge-warning:hover,a.badge-warning:focus{color:#212529;background-color:#d39e00}a.badge-warning:focus,a.badge-warning.focus{outline:0;box-shadow:0 0 0 0.2rem rgba(255,193,7,0.5)}.badge-danger{color:#fff;background-color:#dc3545}a.badge-danger:hover,a.badge-danger:focus{color:#fff;background-color:#bd2130}a.badge-danger:focus,a.badge-danger.focus{outline:0;box-shadow:0 0 0 0.2rem rgba(220,53,69,0.5)}.badge-light{color:#212529;background-color:#f8f9fa}a.badge-light:hover,a.badge-light:focus{color:#212529;background-color:#dae0e5}a.badge-light:focus,a.badge-light.focus{outline:0;box-shadow:0 0 0 0.2rem rgba(248,249,250,0.5)}.badge-dark{color:#fff;background-color:#343a40}a.badge-dark:hover,a.badge-dark:focus{color:#fff;background-color:#1d2124}a.badge-dark:focus,a.badge-dark.focus{outline:0;box-shadow:0 0 0 0.2rem rgba(52,58,64,0.5)}.jumbotron{padding:2rem 1rem;margin-bottom:2rem;background-color:#e9ecef;border-radius:0.3rem}@media (min-width: 576px){.jumbotron{padding:4rem 2rem}}.jumbotron-fluid{padding-right:0;padding-left:0;border-radius:0}.alert{position:relative;padding:0.75rem 1.25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:0.25rem}.alert-heading{color:inherit}.alert-link{font-weight:700}.alert-dismissible{padding-right:4rem}.alert-dismissible .close{position:absolute;top:0;right:0;padding:0.75rem 1.25rem;color:inherit}.alert-primary{color:#004085;background-color:#cce5ff;border-color:#b8daff}.alert-primary hr{border-top-color:#9fcdff}.alert-primary .alert-link{color:#002752}.alert-secondary{color:#383d41;background-color:#e2e3e5;border-color:#d6d8db}.alert-secondary hr{border-top-color:#c8cbcf}.alert-secondary .alert-link{color:#202326}.alert-success{color:#155724;background-color:#d4edda;border-color:#c3e6cb}.alert-success hr{border-top-color:#b1dfbb}.alert-success .alert-link{color:#0b2e13}.alert-info{color:#0c5460;background-color:#d1ecf1;border-color:#bee5eb}.alert-info hr{border-top-color:#abdde5}.alert-info .alert-link{color:#062c33}.alert-warning{color:#856404;background-color:#fff3cd;border-color:#ffeeba}.alert-warning hr{border-top-color:#ffe8a1}.alert-warning .alert-link{color:#533f03}.alert-danger{color:#721c24;background-color:#f8d7da;border-color:#f5c6cb}.alert-danger hr{border-top-color:#f1b0b7}.alert-danger .alert-link{color:#491217}.alert-light{color:#818182;background-color:#fefefe;border-color:#fdfdfe}.alert-light hr{border-top-color:#ececf6}.alert-light .alert-link{color:#686868}.alert-dark{color:#1b1e21;background-color:#d6d8d9;border-color:#c6c8ca}.alert-dark hr{border-top-color:#b9bbbe}.alert-dark .alert-link{color:#040505}@-webkit-keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}@keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}.progress{display:-ms-flexbox;display:flex;height:1rem;overflow:hidden;font-size:0.75rem;background-color:#e9ecef;border-radius:0.25rem}.progress-bar{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;overflow:hidden;color:#fff;text-align:center;white-space:nowrap;background-color:#007bff;transition:width 0.6s ease}@media (prefers-reduced-motion: reduce){.progress-bar{transition:none}}.progress-bar-striped{background-image:linear-gradient(45deg, rgba(255,255,255,0.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,0.15) 50%, rgba(255,255,255,0.15) 75%, transparent 75%, transparent);background-size:1rem 1rem}.progress-bar-animated{-webkit-animation:progress-bar-stripes 1s linear infinite;animation:progress-bar-stripes 1s linear infinite}@media (prefers-reduced-motion: reduce){.progress-bar-animated{-webkit-animation:none;animation:none}}.media{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start}.media-body{-ms-flex:1;flex:1}.list-group{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0}.list-group-item-action{width:100%;color:#495057;text-align:inherit}.list-group-item-action:hover,.list-group-item-action:focus{z-index:1;color:#495057;text-decoration:none;background-color:#f8f9fa}.list-group-item-action:active{color:#212529;background-color:#e9ecef}.list-group-item{position:relative;display:block;padding:0.75rem 1.25rem;background-color:#fff;border:1px solid rgba(0,0,0,0.125)}.list-group-item:first-child{border-top-left-radius:0.25rem;border-top-right-radius:0.25rem}.list-group-item:last-child{border-bottom-right-radius:0.25rem;border-bottom-left-radius:0.25rem}.list-group-item.disabled,.list-group-item:disabled{color:#6c757d;pointer-events:none;background-color:#fff}.list-group-item.active{z-index:2;color:#fff;background-color:#007bff;border-color:#007bff}.list-group-item+.list-group-item{border-top-width:0}.list-group-item+.list-group-item.active{margin-top:-1px;border-top-width:1px}.list-group-horizontal{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal .list-group-item:first-child{border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal .list-group-item:last-child{border-top-right-radius:0.25rem;border-bottom-left-radius:0}.list-group-horizontal .list-group-item.active{margin-top:0}.list-group-horizontal .list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal .list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}@media (min-width: 576px){.list-group-horizontal-sm{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-sm .list-group-item:first-child{border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-sm .list-group-item:last-child{border-top-right-radius:0.25rem;border-bottom-left-radius:0}.list-group-horizontal-sm .list-group-item.active{margin-top:0}.list-group-horizontal-sm .list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-sm .list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width: 768px){.list-group-horizontal-md{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-md .list-group-item:first-child{border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-md .list-group-item:last-child{border-top-right-radius:0.25rem;border-bottom-left-radius:0}.list-group-horizontal-md .list-group-item.active{margin-top:0}.list-group-horizontal-md .list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-md .list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width: 992px){.list-group-horizontal-lg{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-lg .list-group-item:first-child{border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-lg .list-group-item:last-child{border-top-right-radius:0.25rem;border-bottom-left-radius:0}.list-group-horizontal-lg .list-group-item.active{margin-top:0}.list-group-horizontal-lg .list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-lg .list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width: 1200px){.list-group-horizontal-xl{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-xl .list-group-item:first-child{border-bottom-left-radius:0.25rem;border-top-right-radius:0}.list-group-horizontal-xl .list-group-item:last-child{border-top-right-radius:0.25rem;border-bottom-left-radius:0}.list-group-horizontal-xl .list-group-item.active{margin-top:0}.list-group-horizontal-xl .list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-xl .list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}.list-group-flush .list-group-item{border-right-width:0;border-left-width:0;border-radius:0}.list-group-flush .list-group-item:first-child{border-top-width:0}.list-group-flush:last-child .list-group-item:last-child{border-bottom-width:0}.list-group-item-primary{color:#004085;background-color:#b8daff}.list-group-item-primary.list-group-item-action:hover,.list-group-item-primary.list-group-item-action:focus{color:#004085;background-color:#9fcdff}.list-group-item-primary.list-group-item-action.active{color:#fff;background-color:#004085;border-color:#004085}.list-group-item-secondary{color:#383d41;background-color:#d6d8db}.list-group-item-secondary.list-group-item-action:hover,.list-group-item-secondary.list-group-item-action:focus{color:#383d41;background-color:#c8cbcf}.list-group-item-secondary.list-group-item-action.active{color:#fff;background-color:#383d41;border-color:#383d41}.list-group-item-success{color:#155724;background-color:#c3e6cb}.list-group-item-success.list-group-item-action:hover,.list-group-item-success.list-group-item-action:focus{color:#155724;background-color:#b1dfbb}.list-group-item-success.list-group-item-action.active{color:#fff;background-color:#155724;border-color:#155724}.list-group-item-info{color:#0c5460;background-color:#bee5eb}.list-group-item-info.list-group-item-action:hover,.list-group-item-info.list-group-item-action:focus{color:#0c5460;background-color:#abdde5}.list-group-item-info.list-group-item-action.active{color:#fff;background-color:#0c5460;border-color:#0c5460}.list-group-item-warning{color:#856404;background-color:#ffeeba}.list-group-item-warning.list-group-item-action:hover,.list-group-item-warning.list-group-item-action:focus{color:#856404;background-color:#ffe8a1}.list-group-item-warning.list-group-item-action.active{color:#fff;background-color:#856404;border-color:#856404}.list-group-item-danger{color:#721c24;background-color:#f5c6cb}.list-group-item-danger.list-group-item-action:hover,.list-group-item-danger.list-group-item-action:focus{color:#721c24;background-color:#f1b0b7}.list-group-item-danger.list-group-item-action.active{color:#fff;background-color:#721c24;border-color:#721c24}.list-group-item-light{color:#818182;background-color:#fdfdfe}.list-group-item-light.list-group-item-action:hover,.list-group-item-light.list-group-item-action:focus{color:#818182;background-color:#ececf6}.list-group-item-light.list-group-item-action.active{color:#fff;background-color:#818182;border-color:#818182}.list-group-item-dark{color:#1b1e21;background-color:#c6c8ca}.list-group-item-dark.list-group-item-action:hover,.list-group-item-dark.list-group-item-action:focus{color:#1b1e21;background-color:#b9bbbe}.list-group-item-dark.list-group-item-action.active{color:#fff;background-color:#1b1e21;border-color:#1b1e21}.close{float:right;font-size:1.5rem;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:.5}.close:hover{color:#000;text-decoration:none}.close:not(:disabled):not(.disabled):hover,.close:not(:disabled):not(.disabled):focus{opacity:.75}button.close{padding:0;background-color:transparent;border:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}a.close.disabled{pointer-events:none}.toast{max-width:350px;overflow:hidden;font-size:0.875rem;background-color:rgba(255,255,255,0.85);background-clip:padding-box;border:1px solid rgba(0,0,0,0.1);box-shadow:0 0.25rem 0.75rem rgba(0,0,0,0.1);-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);opacity:0;border-radius:0.25rem}.toast:not(:last-child){margin-bottom:0.75rem}.toast.showing{opacity:1}.toast.show{display:block;opacity:1}.toast.hide{display:none}.toast-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:0.25rem 0.75rem;color:#6c757d;background-color:rgba(255,255,255,0.85);background-clip:padding-box;border-bottom:1px solid rgba(0,0,0,0.05)}.toast-body{padding:0.75rem}.modal-open{overflow:hidden}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal{position:fixed;top:0;left:0;z-index:1050;display:none;width:100%;height:100%;overflow:hidden;outline:0}.modal-dialog{position:relative;width:auto;margin:0.5rem;pointer-events:none}.modal.fade .modal-dialog{transition:-webkit-transform 0.3s ease-out;transition:transform 0.3s ease-out;transition:transform 0.3s ease-out, -webkit-transform 0.3s ease-out;-webkit-transform:translate(0, -50px);transform:translate(0, -50px)}@media (prefers-reduced-motion: reduce){.modal.fade .modal-dialog{transition:none}}.modal.show .modal-dialog{-webkit-transform:none;transform:none}.modal.modal-static .modal-dialog{-webkit-transform:scale(1.02);transform:scale(1.02)}.modal-dialog-scrollable{display:-ms-flexbox;display:flex;max-height:calc(100% - 1rem)}.modal-dialog-scrollable .modal-content{max-height:calc(100vh - 1rem);overflow:hidden}.modal-dialog-scrollable .modal-header,.modal-dialog-scrollable .modal-footer{-ms-flex-negative:0;flex-shrink:0}.modal-dialog-scrollable .modal-body{overflow-y:auto}.modal-dialog-centered{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;min-height:calc(100% - 1rem)}.modal-dialog-centered::before{display:block;height:calc(100vh - 1rem);content:""}.modal-dialog-centered.modal-dialog-scrollable{-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.modal-dialog-centered.modal-dialog-scrollable .modal-content{max-height:none}.modal-dialog-centered.modal-dialog-scrollable::before{content:none}.modal-content{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;width:100%;pointer-events:auto;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,0.2);border-radius:0.3rem;outline:0}.modal-backdrop{position:fixed;top:0;left:0;z-index:1040;width:100vw;height:100vh;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop.show{opacity:0.5}.modal-header{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:justify;justify-content:space-between;padding:1rem 1rem;border-bottom:1px solid #dee2e6;border-top-left-radius:calc(0.3rem - 1px);border-top-right-radius:calc(0.3rem - 1px)}.modal-header .close{padding:1rem 1rem;margin:-1rem -1rem -1rem auto}.modal-title{margin-bottom:0;line-height:1.5}.modal-body{position:relative;-ms-flex:1 1 auto;flex:1 1 auto;padding:1rem}.modal-footer{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end;padding:0.75rem;border-top:1px solid #dee2e6;border-bottom-right-radius:calc(0.3rem - 1px);border-bottom-left-radius:calc(0.3rem - 1px)}.modal-footer>*{margin:0.25rem}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width: 576px){.modal-dialog{max-width:500px;margin:1.75rem auto}.modal-dialog-scrollable{max-height:calc(100% - 3.5rem)}.modal-dialog-scrollable .modal-content{max-height:calc(100vh - 3.5rem)}.modal-dialog-centered{min-height:calc(100% - 3.5rem)}.modal-dialog-centered::before{height:calc(100vh - 3.5rem)}.modal-sm{max-width:300px}}@media (min-width: 992px){.modal-lg,.modal-xl{max-width:800px}}@media (min-width: 1200px){.modal-xl{max-width:1140px}}.tooltip{position:absolute;z-index:1070;display:block;margin:0;font-family:-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:0.875rem;word-wrap:break-word;opacity:0}.tooltip.show{opacity:0.9}.tooltip .arrow{position:absolute;display:block;width:0.8rem;height:0.4rem}.tooltip .arrow::before{position:absolute;content:"";border-color:transparent;border-style:solid}.bs-tooltip-top,.bs-tooltip-auto[x-placement^="top"]{padding:0.4rem 0}.bs-tooltip-top .arrow,.bs-tooltip-auto[x-placement^="top"] .arrow{bottom:0}.bs-tooltip-top .arrow::before,.bs-tooltip-auto[x-placement^="top"] .arrow::before{top:0;border-width:0.4rem 0.4rem 0;border-top-color:#000}.bs-tooltip-right,.bs-tooltip-auto[x-placement^="right"]{padding:0 0.4rem}.bs-tooltip-right .arrow,.bs-tooltip-auto[x-placement^="right"] .arrow{left:0;width:0.4rem;height:0.8rem}.bs-tooltip-right .arrow::before,.bs-tooltip-auto[x-placement^="right"] .arrow::before{right:0;border-width:0.4rem 0.4rem 0.4rem 0;border-right-color:#000}.bs-tooltip-bottom,.bs-tooltip-auto[x-placement^="bottom"]{padding:0.4rem 0}.bs-tooltip-bottom .arrow,.bs-tooltip-auto[x-placement^="bottom"] .arrow{top:0}.bs-tooltip-bottom .arrow::before,.bs-tooltip-auto[x-placement^="bottom"] .arrow::before{bottom:0;border-width:0 0.4rem 0.4rem;border-bottom-color:#000}.bs-tooltip-left,.bs-tooltip-auto[x-placement^="left"]{padding:0 0.4rem}.bs-tooltip-left .arrow,.bs-tooltip-auto[x-placement^="left"] .arrow{right:0;width:0.4rem;height:0.8rem}.bs-tooltip-left .arrow::before,.bs-tooltip-auto[x-placement^="left"] .arrow::before{left:0;border-width:0.4rem 0 0.4rem 0.4rem;border-left-color:#000}.tooltip-inner{max-width:200px;padding:0.25rem 0.5rem;color:#fff;text-align:center;background-color:#000;border-radius:0.25rem}.popover{position:absolute;top:0;left:0;z-index:1060;display:block;max-width:276px;font-family:-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:0.875rem;word-wrap:break-word;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,0.2);border-radius:0.3rem}.popover .arrow{position:absolute;display:block;width:1rem;height:0.5rem;margin:0 0.3rem}.popover .arrow::before,.popover .arrow::after{position:absolute;display:block;content:"";border-color:transparent;border-style:solid}.bs-popover-top,.bs-popover-auto[x-placement^="top"]{margin-bottom:0.5rem}.bs-popover-top>.arrow,.bs-popover-auto[x-placement^="top"]>.arrow{bottom:calc(-0.5rem - 1px)}.bs-popover-top>.arrow::before,.bs-popover-auto[x-placement^="top"]>.arrow::before{bottom:0;border-width:0.5rem 0.5rem 0;border-top-color:rgba(0,0,0,0.25)}.bs-popover-top>.arrow::after,.bs-popover-auto[x-placement^="top"]>.arrow::after{bottom:1px;border-width:0.5rem 0.5rem 0;border-top-color:#fff}.bs-popover-right,.bs-popover-auto[x-placement^="right"]{margin-left:0.5rem}.bs-popover-right>.arrow,.bs-popover-auto[x-placement^="right"]>.arrow{left:calc(-0.5rem - 1px);width:0.5rem;height:1rem;margin:0.3rem 0}.bs-popover-right>.arrow::before,.bs-popover-auto[x-placement^="right"]>.arrow::before{left:0;border-width:0.5rem 0.5rem 0.5rem 0;border-right-color:rgba(0,0,0,0.25)}.bs-popover-right>.arrow::after,.bs-popover-auto[x-placement^="right"]>.arrow::after{left:1px;border-width:0.5rem 0.5rem 0.5rem 0;border-right-color:#fff}.bs-popover-bottom,.bs-popover-auto[x-placement^="bottom"]{margin-top:0.5rem}.bs-popover-bottom>.arrow,.bs-popover-auto[x-placement^="bottom"]>.arrow{top:calc(-0.5rem - 1px)}.bs-popover-bottom>.arrow::before,.bs-popover-auto[x-placement^="bottom"]>.arrow::before{top:0;border-width:0 0.5rem 0.5rem 0.5rem;border-bottom-color:rgba(0,0,0,0.25)}.bs-popover-bottom>.arrow::after,.bs-popover-auto[x-placement^="bottom"]>.arrow::after{top:1px;border-width:0 0.5rem 0.5rem 0.5rem;border-bottom-color:#fff}.bs-popover-bottom .popover-header::before,.bs-popover-auto[x-placement^="bottom"] .popover-header::before{position:absolute;top:0;left:50%;display:block;width:1rem;margin-left:-0.5rem;content:"";border-bottom:1px solid #f7f7f7}.bs-popover-left,.bs-popover-auto[x-placement^="left"]{margin-right:0.5rem}.bs-popover-left>.arrow,.bs-popover-auto[x-placement^="left"]>.arrow{right:calc(-0.5rem - 1px);width:0.5rem;height:1rem;margin:0.3rem 0}.bs-popover-left>.arrow::before,.bs-popover-auto[x-placement^="left"]>.arrow::before{right:0;border-width:0.5rem 0 0.5rem 0.5rem;border-left-color:rgba(0,0,0,0.25)}.bs-popover-left>.arrow::after,.bs-popover-auto[x-placement^="left"]>.arrow::after{right:1px;border-width:0.5rem 0 0.5rem 0.5rem;border-left-color:#fff}.popover-header{padding:0.5rem 0.75rem;margin-bottom:0;font-size:1rem;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-top-left-radius:calc(0.3rem - 1px);border-top-right-radius:calc(0.3rem - 1px)}.popover-header:empty{display:none}.popover-body{padding:0.5rem 0.75rem;color:#212529}.carousel{position:relative}.carousel.pointer-event{-ms-touch-action:pan-y;touch-action:pan-y}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-inner::after{display:block;clear:both;content:""}.carousel-item{position:relative;display:none;float:left;width:100%;margin-right:-100%;-webkit-backface-visibility:hidden;backface-visibility:hidden;transition:-webkit-transform 0.6s ease-in-out;transition:transform 0.6s ease-in-out;transition:transform 0.6s ease-in-out, -webkit-transform 0.6s ease-in-out}@media (prefers-reduced-motion: reduce){.carousel-item{transition:none}}.carousel-item.active,.carousel-item-next,.carousel-item-prev{display:block}.carousel-item-next:not(.carousel-item-left),.active.carousel-item-right{-webkit-transform:translateX(100%);transform:translateX(100%)}.carousel-item-prev:not(.carousel-item-right),.active.carousel-item-left{-webkit-transform:translateX(-100%);transform:translateX(-100%)}.carousel-fade .carousel-item{opacity:0;transition-property:opacity;-webkit-transform:none;transform:none}.carousel-fade .carousel-item.active,.carousel-fade .carousel-item-next.carousel-item-left,.carousel-fade .carousel-item-prev.carousel-item-right{z-index:1;opacity:1}.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right{z-index:0;opacity:0;transition:opacity 0s 0.6s}@media (prefers-reduced-motion: reduce){.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right{transition:none}}.carousel-control-prev,.carousel-control-next{position:absolute;top:0;bottom:0;z-index:1;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:15%;color:#fff;text-align:center;opacity:0.5;transition:opacity 0.15s ease}@media (prefers-reduced-motion: reduce){.carousel-control-prev,.carousel-control-next{transition:none}}.carousel-control-prev:hover,.carousel-control-prev:focus,.carousel-control-next:hover,.carousel-control-next:focus{color:#fff;text-decoration:none;outline:0;opacity:0.9}.carousel-control-prev{left:0}.carousel-control-next{right:0}.carousel-control-prev-icon,.carousel-control-next-icon{display:inline-block;width:20px;height:20px;background:no-repeat 50% / 100% 100%}.carousel-control-prev-icon{background-image:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' fill=\'%23fff\' width=\'8\' height=\'8\' viewBox=\'0 0 8 8\'%3e%3cpath d=\'M5.25 0l-4 4 4 4 1.5-1.5L4.25 4l2.5-2.5L5.25 0z\'/%3e%3c/svg%3e")}.carousel-control-next-icon{background-image:url("data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' fill=\'%23fff\' width=\'8\' height=\'8\' viewBox=\'0 0 8 8\'%3e%3cpath d=\'M2.75 0l-1.5 1.5L3.75 4l-2.5 2.5L2.75 8l4-4-4-4z\'/%3e%3c/svg%3e")}.carousel-indicators{position:absolute;right:0;bottom:0;left:0;z-index:15;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;padding-left:0;margin-right:15%;margin-left:15%;list-style:none}.carousel-indicators li{box-sizing:content-box;-ms-flex:0 1 auto;flex:0 1 auto;width:30px;height:3px;margin-right:3px;margin-left:3px;text-indent:-999px;cursor:pointer;background-color:#fff;background-clip:padding-box;border-top:10px solid transparent;border-bottom:10px solid transparent;opacity:.5;transition:opacity 0.6s ease}@media (prefers-reduced-motion: reduce){.carousel-indicators li{transition:none}}.carousel-indicators .active{opacity:1}.carousel-caption{position:absolute;right:15%;bottom:20px;left:15%;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center}@-webkit-keyframes spinner-border{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-border{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.spinner-border{display:inline-block;width:2rem;height:2rem;vertical-align:text-bottom;border:0.25em solid currentColor;border-right-color:transparent;border-radius:50%;-webkit-animation:spinner-border .75s linear infinite;animation:spinner-border .75s linear infinite}.spinner-border-sm{width:1rem;height:1rem;border-width:0.2em}@-webkit-keyframes spinner-grow{0%{-webkit-transform:scale(0);transform:scale(0)}50%{opacity:1}}@keyframes spinner-grow{0%{-webkit-transform:scale(0);transform:scale(0)}50%{opacity:1}}.spinner-grow{display:inline-block;width:2rem;height:2rem;vertical-align:text-bottom;background-color:currentColor;border-radius:50%;opacity:0;-webkit-animation:spinner-grow .75s linear infinite;animation:spinner-grow .75s linear infinite}.spinner-grow-sm{width:1rem;height:1rem}.align-baseline{vertical-align:baseline !important}.align-top{vertical-align:top !important}.align-middle{vertical-align:middle !important}.align-bottom{vertical-align:bottom !important}.align-text-bottom{vertical-align:text-bottom !important}.align-text-top{vertical-align:text-top !important}.bg-primary{background-color:#007bff !important}a.bg-primary:hover,a.bg-primary:focus,button.bg-primary:hover,button.bg-primary:focus{background-color:#0062cc !important}.bg-secondary{background-color:#6c757d !important}a.bg-secondary:hover,a.bg-secondary:focus,button.bg-secondary:hover,button.bg-secondary:focus{background-color:#545b62 !important}.bg-success{background-color:#28a745 !important}a.bg-success:hover,a.bg-success:focus,button.bg-success:hover,button.bg-success:focus{background-color:#1e7e34 !important}.bg-info{background-color:#17a2b8 !important}a.bg-info:hover,a.bg-info:focus,button.bg-info:hover,button.bg-info:focus{background-color:#117a8b !important}.bg-warning{background-color:#ffc107 !important}a.bg-warning:hover,a.bg-warning:focus,button.bg-warning:hover,button.bg-warning:focus{background-color:#d39e00 !important}.bg-danger{background-color:#dc3545 !important}a.bg-danger:hover,a.bg-danger:focus,button.bg-danger:hover,button.bg-danger:focus{background-color:#bd2130 !important}.bg-light{background-color:#f8f9fa !important}a.bg-light:hover,a.bg-light:focus,button.bg-light:hover,button.bg-light:focus{background-color:#dae0e5 !important}.bg-dark{background-color:#343a40 !important}a.bg-dark:hover,a.bg-dark:focus,button.bg-dark:hover,button.bg-dark:focus{background-color:#1d2124 !important}.bg-white{background-color:#fff !important}.bg-transparent{background-color:transparent !important}.border{border:1px solid #dee2e6 !important}.border-top{border-top:1px solid #dee2e6 !important}.border-right{border-right:1px solid #dee2e6 !important}.border-bottom{border-bottom:1px solid #dee2e6 !important}.border-left{border-left:1px solid #dee2e6 !important}.border-0{border:0 !important}.border-top-0{border-top:0 !important}.border-right-0{border-right:0 !important}.border-bottom-0{border-bottom:0 !important}.border-left-0{border-left:0 !important}.border-primary{border-color:#007bff !important}.border-secondary{border-color:#6c757d !important}.border-success{border-color:#28a745 !important}.border-info{border-color:#17a2b8 !important}.border-warning{border-color:#ffc107 !important}.border-danger{border-color:#dc3545 !important}.border-light{border-color:#f8f9fa !important}.border-dark{border-color:#343a40 !important}.border-white{border-color:#fff !important}.rounded-sm{border-radius:0.2rem !important}.rounded{border-radius:0.25rem !important}.rounded-top{border-top-left-radius:0.25rem !important;border-top-right-radius:0.25rem !important}.rounded-right{border-top-right-radius:0.25rem !important;border-bottom-right-radius:0.25rem !important}.rounded-bottom{border-bottom-right-radius:0.25rem !important;border-bottom-left-radius:0.25rem !important}.rounded-left{border-top-left-radius:0.25rem !important;border-bottom-left-radius:0.25rem !important}.rounded-lg{border-radius:0.3rem !important}.rounded-circle{border-radius:50% !important}.rounded-pill{border-radius:50rem !important}.rounded-0{border-radius:0 !important}.clearfix::after{display:block;clear:both;content:""}.d-none{display:none !important}.d-inline{display:inline !important}.d-inline-block{display:inline-block !important}.d-block{display:block !important}.d-table{display:table !important}.d-table-row{display:table-row !important}.d-table-cell{display:table-cell !important}.d-flex{display:-ms-flexbox !important;display:flex !important}.d-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}@media (min-width: 576px){.d-sm-none{display:none !important}.d-sm-inline{display:inline !important}.d-sm-inline-block{display:inline-block !important}.d-sm-block{display:block !important}.d-sm-table{display:table !important}.d-sm-table-row{display:table-row !important}.d-sm-table-cell{display:table-cell !important}.d-sm-flex{display:-ms-flexbox !important;display:flex !important}.d-sm-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}@media (min-width: 768px){.d-md-none{display:none !important}.d-md-inline{display:inline !important}.d-md-inline-block{display:inline-block !important}.d-md-block{display:block !important}.d-md-table{display:table !important}.d-md-table-row{display:table-row !important}.d-md-table-cell{display:table-cell !important}.d-md-flex{display:-ms-flexbox !important;display:flex !important}.d-md-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}@media (min-width: 992px){.d-lg-none{display:none !important}.d-lg-inline{display:inline !important}.d-lg-inline-block{display:inline-block !important}.d-lg-block{display:block !important}.d-lg-table{display:table !important}.d-lg-table-row{display:table-row !important}.d-lg-table-cell{display:table-cell !important}.d-lg-flex{display:-ms-flexbox !important;display:flex !important}.d-lg-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}@media (min-width: 1200px){.d-xl-none{display:none !important}.d-xl-inline{display:inline !important}.d-xl-inline-block{display:inline-block !important}.d-xl-block{display:block !important}.d-xl-table{display:table !important}.d-xl-table-row{display:table-row !important}.d-xl-table-cell{display:table-cell !important}.d-xl-flex{display:-ms-flexbox !important;display:flex !important}.d-xl-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}@media print{.d-print-none{display:none !important}.d-print-inline{display:inline !important}.d-print-inline-block{display:inline-block !important}.d-print-block{display:block !important}.d-print-table{display:table !important}.d-print-table-row{display:table-row !important}.d-print-table-cell{display:table-cell !important}.d-print-flex{display:-ms-flexbox !important;display:flex !important}.d-print-inline-flex{display:-ms-inline-flexbox !important;display:inline-flex !important}}.embed-responsive{position:relative;display:block;width:100%;padding:0;overflow:hidden}.embed-responsive::before{display:block;content:""}.embed-responsive .embed-responsive-item,.embed-responsive iframe,.embed-responsive embed,.embed-responsive object,.embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.embed-responsive-21by9::before{padding-top:42.857143%}.embed-responsive-16by9::before{padding-top:56.25%}.embed-responsive-4by3::before{padding-top:75%}.embed-responsive-1by1::before{padding-top:100%}.flex-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-center{-ms-flex-align:center !important;align-items:center !important}.align-items-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}@media (min-width: 576px){.flex-sm-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-sm-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-sm-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-sm-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-sm-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-sm-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-sm-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-sm-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-sm-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-sm-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-sm-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-sm-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-sm-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-sm-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-sm-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-sm-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-sm-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-sm-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-sm-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-sm-center{-ms-flex-align:center !important;align-items:center !important}.align-items-sm-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-sm-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-sm-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-sm-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-sm-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-sm-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-sm-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-sm-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-sm-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-sm-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-sm-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-sm-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-sm-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-sm-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}@media (min-width: 768px){.flex-md-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-md-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-md-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-md-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-md-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-md-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-md-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-md-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-md-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-md-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-md-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-md-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-md-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-md-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-md-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-md-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-md-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-md-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-md-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-md-center{-ms-flex-align:center !important;align-items:center !important}.align-items-md-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-md-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-md-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-md-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-md-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-md-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-md-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-md-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-md-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-md-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-md-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-md-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-md-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-md-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}@media (min-width: 992px){.flex-lg-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-lg-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-lg-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-lg-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-lg-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-lg-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-lg-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-lg-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-lg-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-lg-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-lg-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-lg-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-lg-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-lg-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-lg-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-lg-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-lg-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-lg-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-lg-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-lg-center{-ms-flex-align:center !important;align-items:center !important}.align-items-lg-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-lg-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-lg-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-lg-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-lg-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-lg-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-lg-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-lg-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-lg-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-lg-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-lg-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-lg-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-lg-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-lg-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}@media (min-width: 1200px){.flex-xl-row{-ms-flex-direction:row !important;flex-direction:row !important}.flex-xl-column{-ms-flex-direction:column !important;flex-direction:column !important}.flex-xl-row-reverse{-ms-flex-direction:row-reverse !important;flex-direction:row-reverse !important}.flex-xl-column-reverse{-ms-flex-direction:column-reverse !important;flex-direction:column-reverse !important}.flex-xl-wrap{-ms-flex-wrap:wrap !important;flex-wrap:wrap !important}.flex-xl-nowrap{-ms-flex-wrap:nowrap !important;flex-wrap:nowrap !important}.flex-xl-wrap-reverse{-ms-flex-wrap:wrap-reverse !important;flex-wrap:wrap-reverse !important}.flex-xl-fill{-ms-flex:1 1 auto !important;flex:1 1 auto !important}.flex-xl-grow-0{-ms-flex-positive:0 !important;flex-grow:0 !important}.flex-xl-grow-1{-ms-flex-positive:1 !important;flex-grow:1 !important}.flex-xl-shrink-0{-ms-flex-negative:0 !important;flex-shrink:0 !important}.flex-xl-shrink-1{-ms-flex-negative:1 !important;flex-shrink:1 !important}.justify-content-xl-start{-ms-flex-pack:start !important;justify-content:flex-start !important}.justify-content-xl-end{-ms-flex-pack:end !important;justify-content:flex-end !important}.justify-content-xl-center{-ms-flex-pack:center !important;justify-content:center !important}.justify-content-xl-between{-ms-flex-pack:justify !important;justify-content:space-between !important}.justify-content-xl-around{-ms-flex-pack:distribute !important;justify-content:space-around !important}.align-items-xl-start{-ms-flex-align:start !important;align-items:flex-start !important}.align-items-xl-end{-ms-flex-align:end !important;align-items:flex-end !important}.align-items-xl-center{-ms-flex-align:center !important;align-items:center !important}.align-items-xl-baseline{-ms-flex-align:baseline !important;align-items:baseline !important}.align-items-xl-stretch{-ms-flex-align:stretch !important;align-items:stretch !important}.align-content-xl-start{-ms-flex-line-pack:start !important;align-content:flex-start !important}.align-content-xl-end{-ms-flex-line-pack:end !important;align-content:flex-end !important}.align-content-xl-center{-ms-flex-line-pack:center !important;align-content:center !important}.align-content-xl-between{-ms-flex-line-pack:justify !important;align-content:space-between !important}.align-content-xl-around{-ms-flex-line-pack:distribute !important;align-content:space-around !important}.align-content-xl-stretch{-ms-flex-line-pack:stretch !important;align-content:stretch !important}.align-self-xl-auto{-ms-flex-item-align:auto !important;align-self:auto !important}.align-self-xl-start{-ms-flex-item-align:start !important;align-self:flex-start !important}.align-self-xl-end{-ms-flex-item-align:end !important;align-self:flex-end !important}.align-self-xl-center{-ms-flex-item-align:center !important;align-self:center !important}.align-self-xl-baseline{-ms-flex-item-align:baseline !important;align-self:baseline !important}.align-self-xl-stretch{-ms-flex-item-align:stretch !important;align-self:stretch !important}}.float-left{float:left !important}.float-right{float:right !important}.float-none{float:none !important}@media (min-width: 576px){.float-sm-left{float:left !important}.float-sm-right{float:right !important}.float-sm-none{float:none !important}}@media (min-width: 768px){.float-md-left{float:left !important}.float-md-right{float:right !important}.float-md-none{float:none !important}}@media (min-width: 992px){.float-lg-left{float:left !important}.float-lg-right{float:right !important}.float-lg-none{float:none !important}}@media (min-width: 1200px){.float-xl-left{float:left !important}.float-xl-right{float:right !important}.float-xl-none{float:none !important}}.overflow-auto{overflow:auto !important}.overflow-hidden{overflow:hidden !important}.position-static{position:static !important}.position-relative{position:relative !important}.position-absolute{position:absolute !important}.position-fixed{position:fixed !important}.position-sticky{position:-webkit-sticky !important;position:sticky !important}.fixed-top{position:fixed;top:0;right:0;left:0;z-index:1030}.fixed-bottom{position:fixed;right:0;bottom:0;left:0;z-index:1030}@supports (position: -webkit-sticky) or (position: sticky){.sticky-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;overflow:visible;clip:auto;white-space:normal}.shadow-sm{box-shadow:0 0.125rem 0.25rem rgba(0,0,0,0.075) !important}.shadow{box-shadow:0 0.5rem 1rem rgba(0,0,0,0.15) !important}.shadow-lg{box-shadow:0 1rem 3rem rgba(0,0,0,0.175) !important}.shadow-none{box-shadow:none !important}.w-25{width:25% !important}.w-50{width:50% !important}.w-75{width:75% !important}.w-100{width:100% !important}.w-auto{width:auto !important}.h-25{height:25% !important}.h-50{height:50% !important}.h-75{height:75% !important}.h-100{height:100% !important}.h-auto{height:auto !important}.mw-100{max-width:100% !important}.mh-100{max-height:100% !important}.min-vw-100{min-width:100vw !important}.min-vh-100{min-height:100vh !important}.vw-100{width:100vw !important}.vh-100{height:100vh !important}.stretched-link::after{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;pointer-events:auto;content:"";background-color:rgba(0,0,0,0)}.m-0{margin:0 !important}.mt-0,.my-0{margin-top:0 !important}.mr-0,.mx-0{margin-right:0 !important}.mb-0,.my-0{margin-bottom:0 !important}.ml-0,.mx-0{margin-left:0 !important}.m-1{margin:0.25rem !important}.mt-1,.my-1{margin-top:0.25rem !important}.mr-1,.mx-1{margin-right:0.25rem !important}.mb-1,.my-1{margin-bottom:0.25rem !important}.ml-1,.mx-1{margin-left:0.25rem !important}.m-2{margin:0.5rem !important}.mt-2,.my-2{margin-top:0.5rem !important}.mr-2,.mx-2{margin-right:0.5rem !important}.mb-2,.my-2{margin-bottom:0.5rem !important}.ml-2,.mx-2{margin-left:0.5rem !important}.m-3{margin:1rem !important}.mt-3,.my-3{margin-top:1rem !important}.mr-3,.mx-3{margin-right:1rem !important}.mb-3,.my-3{margin-bottom:1rem !important}.ml-3,.mx-3{margin-left:1rem !important}.m-4{margin:1.5rem !important}.mt-4,.my-4{margin-top:1.5rem !important}.mr-4,.mx-4{margin-right:1.5rem !important}.mb-4,.my-4{margin-bottom:1.5rem !important}.ml-4,.mx-4{margin-left:1.5rem !important}.m-5{margin:3rem !important}.mt-5,.my-5{margin-top:3rem !important}.mr-5,.mx-5{margin-right:3rem !important}.mb-5,.my-5{margin-bottom:3rem !important}.ml-5,.mx-5{margin-left:3rem !important}.p-0{padding:0 !important}.pt-0,.py-0{padding-top:0 !important}.pr-0,.px-0{padding-right:0 !important}.pb-0,.py-0{padding-bottom:0 !important}.pl-0,.px-0{padding-left:0 !important}.p-1{padding:0.25rem !important}.pt-1,.py-1{padding-top:0.25rem !important}.pr-1,.px-1{padding-right:0.25rem !important}.pb-1,.py-1{padding-bottom:0.25rem !important}.pl-1,.px-1{padding-left:0.25rem !important}.p-2{padding:0.5rem !important}.pt-2,.py-2{padding-top:0.5rem !important}.pr-2,.px-2{padding-right:0.5rem !important}.pb-2,.py-2{padding-bottom:0.5rem !important}.pl-2,.px-2{padding-left:0.5rem !important}.p-3{padding:1rem !important}.pt-3,.py-3{padding-top:1rem !important}.pr-3,.px-3{padding-right:1rem !important}.pb-3,.py-3{padding-bottom:1rem !important}.pl-3,.px-3{padding-left:1rem !important}.p-4{padding:1.5rem !important}.pt-4,.py-4{padding-top:1.5rem !important}.pr-4,.px-4{padding-right:1.5rem !important}.pb-4,.py-4{padding-bottom:1.5rem !important}.pl-4,.px-4{padding-left:1.5rem !important}.p-5{padding:3rem !important}.pt-5,.py-5{padding-top:3rem !important}.pr-5,.px-5{padding-right:3rem !important}.pb-5,.py-5{padding-bottom:3rem !important}.pl-5,.px-5{padding-left:3rem !important}.m-n1{margin:-0.25rem !important}.mt-n1,.my-n1{margin-top:-0.25rem !important}.mr-n1,.mx-n1{margin-right:-0.25rem !important}.mb-n1,.my-n1{margin-bottom:-0.25rem !important}.ml-n1,.mx-n1{margin-left:-0.25rem !important}.m-n2{margin:-0.5rem !important}.mt-n2,.my-n2{margin-top:-0.5rem !important}.mr-n2,.mx-n2{margin-right:-0.5rem !important}.mb-n2,.my-n2{margin-bottom:-0.5rem !important}.ml-n2,.mx-n2{margin-left:-0.5rem !important}.m-n3{margin:-1rem !important}.mt-n3,.my-n3{margin-top:-1rem !important}.mr-n3,.mx-n3{margin-right:-1rem !important}.mb-n3,.my-n3{margin-bottom:-1rem !important}.ml-n3,.mx-n3{margin-left:-1rem !important}.m-n4{margin:-1.5rem !important}.mt-n4,.my-n4{margin-top:-1.5rem !important}.mr-n4,.mx-n4{margin-right:-1.5rem !important}.mb-n4,.my-n4{margin-bottom:-1.5rem !important}.ml-n4,.mx-n4{margin-left:-1.5rem !important}.m-n5{margin:-3rem !important}.mt-n5,.my-n5{margin-top:-3rem !important}.mr-n5,.mx-n5{margin-right:-3rem !important}.mb-n5,.my-n5{margin-bottom:-3rem !important}.ml-n5,.mx-n5{margin-left:-3rem !important}.m-auto{margin:auto !important}.mt-auto,.my-auto{margin-top:auto !important}.mr-auto,.mx-auto{margin-right:auto !important}.mb-auto,.my-auto{margin-bottom:auto !important}.ml-auto,.mx-auto{margin-left:auto !important}@media (min-width: 576px){.m-sm-0{margin:0 !important}.mt-sm-0,.my-sm-0{margin-top:0 !important}.mr-sm-0,.mx-sm-0{margin-right:0 !important}.mb-sm-0,.my-sm-0{margin-bottom:0 !important}.ml-sm-0,.mx-sm-0{margin-left:0 !important}.m-sm-1{margin:0.25rem !important}.mt-sm-1,.my-sm-1{margin-top:0.25rem !important}.mr-sm-1,.mx-sm-1{margin-right:0.25rem !important}.mb-sm-1,.my-sm-1{margin-bottom:0.25rem !important}.ml-sm-1,.mx-sm-1{margin-left:0.25rem !important}.m-sm-2{margin:0.5rem !important}.mt-sm-2,.my-sm-2{margin-top:0.5rem !important}.mr-sm-2,.mx-sm-2{margin-right:0.5rem !important}.mb-sm-2,.my-sm-2{margin-bottom:0.5rem !important}.ml-sm-2,.mx-sm-2{margin-left:0.5rem !important}.m-sm-3{margin:1rem !important}.mt-sm-3,.my-sm-3{margin-top:1rem !important}.mr-sm-3,.mx-sm-3{margin-right:1rem !important}.mb-sm-3,.my-sm-3{margin-bottom:1rem !important}.ml-sm-3,.mx-sm-3{margin-left:1rem !important}.m-sm-4{margin:1.5rem !important}.mt-sm-4,.my-sm-4{margin-top:1.5rem !important}.mr-sm-4,.mx-sm-4{margin-right:1.5rem !important}.mb-sm-4,.my-sm-4{margin-bottom:1.5rem !important}.ml-sm-4,.mx-sm-4{margin-left:1.5rem !important}.m-sm-5{margin:3rem !important}.mt-sm-5,.my-sm-5{margin-top:3rem !important}.mr-sm-5,.mx-sm-5{margin-right:3rem !important}.mb-sm-5,.my-sm-5{margin-bottom:3rem !important}.ml-sm-5,.mx-sm-5{margin-left:3rem !important}.p-sm-0{padding:0 !important}.pt-sm-0,.py-sm-0{padding-top:0 !important}.pr-sm-0,.px-sm-0{padding-right:0 !important}.pb-sm-0,.py-sm-0{padding-bottom:0 !important}.pl-sm-0,.px-sm-0{padding-left:0 !important}.p-sm-1{padding:0.25rem !important}.pt-sm-1,.py-sm-1{padding-top:0.25rem !important}.pr-sm-1,.px-sm-1{padding-right:0.25rem !important}.pb-sm-1,.py-sm-1{padding-bottom:0.25rem !important}.pl-sm-1,.px-sm-1{padding-left:0.25rem !important}.p-sm-2{padding:0.5rem !important}.pt-sm-2,.py-sm-2{padding-top:0.5rem !important}.pr-sm-2,.px-sm-2{padding-right:0.5rem !important}.pb-sm-2,.py-sm-2{padding-bottom:0.5rem !important}.pl-sm-2,.px-sm-2{padding-left:0.5rem !important}.p-sm-3{padding:1rem !important}.pt-sm-3,.py-sm-3{padding-top:1rem !important}.pr-sm-3,.px-sm-3{padding-right:1rem !important}.pb-sm-3,.py-sm-3{padding-bottom:1rem !important}.pl-sm-3,.px-sm-3{padding-left:1rem !important}.p-sm-4{padding:1.5rem !important}.pt-sm-4,.py-sm-4{padding-top:1.5rem !important}.pr-sm-4,.px-sm-4{padding-right:1.5rem !important}.pb-sm-4,.py-sm-4{padding-bottom:1.5rem !important}.pl-sm-4,.px-sm-4{padding-left:1.5rem !important}.p-sm-5{padding:3rem !important}.pt-sm-5,.py-sm-5{padding-top:3rem !important}.pr-sm-5,.px-sm-5{padding-right:3rem !important}.pb-sm-5,.py-sm-5{padding-bottom:3rem !important}.pl-sm-5,.px-sm-5{padding-left:3rem !important}.m-sm-n1{margin:-0.25rem !important}.mt-sm-n1,.my-sm-n1{margin-top:-0.25rem !important}.mr-sm-n1,.mx-sm-n1{margin-right:-0.25rem !important}.mb-sm-n1,.my-sm-n1{margin-bottom:-0.25rem !important}.ml-sm-n1,.mx-sm-n1{margin-left:-0.25rem !important}.m-sm-n2{margin:-0.5rem !important}.mt-sm-n2,.my-sm-n2{margin-top:-0.5rem !important}.mr-sm-n2,.mx-sm-n2{margin-right:-0.5rem !important}.mb-sm-n2,.my-sm-n2{margin-bottom:-0.5rem !important}.ml-sm-n2,.mx-sm-n2{margin-left:-0.5rem !important}.m-sm-n3{margin:-1rem !important}.mt-sm-n3,.my-sm-n3{margin-top:-1rem !important}.mr-sm-n3,.mx-sm-n3{margin-right:-1rem !important}.mb-sm-n3,.my-sm-n3{margin-bottom:-1rem !important}.ml-sm-n3,.mx-sm-n3{margin-left:-1rem !important}.m-sm-n4{margin:-1.5rem !important}.mt-sm-n4,.my-sm-n4{margin-top:-1.5rem !important}.mr-sm-n4,.mx-sm-n4{margin-right:-1.5rem !important}.mb-sm-n4,.my-sm-n4{margin-bottom:-1.5rem !important}.ml-sm-n4,.mx-sm-n4{margin-left:-1.5rem !important}.m-sm-n5{margin:-3rem !important}.mt-sm-n5,.my-sm-n5{margin-top:-3rem !important}.mr-sm-n5,.mx-sm-n5{margin-right:-3rem !important}.mb-sm-n5,.my-sm-n5{margin-bottom:-3rem !important}.ml-sm-n5,.mx-sm-n5{margin-left:-3rem !important}.m-sm-auto{margin:auto !important}.mt-sm-auto,.my-sm-auto{margin-top:auto !important}.mr-sm-auto,.mx-sm-auto{margin-right:auto !important}.mb-sm-auto,.my-sm-auto{margin-bottom:auto !important}.ml-sm-auto,.mx-sm-auto{margin-left:auto !important}}@media (min-width: 768px){.m-md-0{margin:0 !important}.mt-md-0,.my-md-0{margin-top:0 !important}.mr-md-0,.mx-md-0{margin-right:0 !important}.mb-md-0,.my-md-0{margin-bottom:0 !important}.ml-md-0,.mx-md-0{margin-left:0 !important}.m-md-1{margin:0.25rem !important}.mt-md-1,.my-md-1{margin-top:0.25rem !important}.mr-md-1,.mx-md-1{margin-right:0.25rem !important}.mb-md-1,.my-md-1{margin-bottom:0.25rem !important}.ml-md-1,.mx-md-1{margin-left:0.25rem !important}.m-md-2{margin:0.5rem !important}.mt-md-2,.my-md-2{margin-top:0.5rem !important}.mr-md-2,.mx-md-2{margin-right:0.5rem !important}.mb-md-2,.my-md-2{margin-bottom:0.5rem !important}.ml-md-2,.mx-md-2{margin-left:0.5rem !important}.m-md-3{margin:1rem !important}.mt-md-3,.my-md-3{margin-top:1rem !important}.mr-md-3,.mx-md-3{margin-right:1rem !important}.mb-md-3,.my-md-3{margin-bottom:1rem !important}.ml-md-3,.mx-md-3{margin-left:1rem !important}.m-md-4{margin:1.5rem !important}.mt-md-4,.my-md-4{margin-top:1.5rem !important}.mr-md-4,.mx-md-4{margin-right:1.5rem !important}.mb-md-4,.my-md-4{margin-bottom:1.5rem !important}.ml-md-4,.mx-md-4{margin-left:1.5rem !important}.m-md-5{margin:3rem !important}.mt-md-5,.my-md-5{margin-top:3rem !important}.mr-md-5,.mx-md-5{margin-right:3rem !important}.mb-md-5,.my-md-5{margin-bottom:3rem !important}.ml-md-5,.mx-md-5{margin-left:3rem !important}.p-md-0{padding:0 !important}.pt-md-0,.py-md-0{padding-top:0 !important}.pr-md-0,.px-md-0{padding-right:0 !important}.pb-md-0,.py-md-0{padding-bottom:0 !important}.pl-md-0,.px-md-0{padding-left:0 !important}.p-md-1{padding:0.25rem !important}.pt-md-1,.py-md-1{padding-top:0.25rem !important}.pr-md-1,.px-md-1{padding-right:0.25rem !important}.pb-md-1,.py-md-1{padding-bottom:0.25rem !important}.pl-md-1,.px-md-1{padding-left:0.25rem !important}.p-md-2{padding:0.5rem !important}.pt-md-2,.py-md-2{padding-top:0.5rem !important}.pr-md-2,.px-md-2{padding-right:0.5rem !important}.pb-md-2,.py-md-2{padding-bottom:0.5rem !important}.pl-md-2,.px-md-2{padding-left:0.5rem !important}.p-md-3{padding:1rem !important}.pt-md-3,.py-md-3{padding-top:1rem !important}.pr-md-3,.px-md-3{padding-right:1rem !important}.pb-md-3,.py-md-3{padding-bottom:1rem !important}.pl-md-3,.px-md-3{padding-left:1rem !important}.p-md-4{padding:1.5rem !important}.pt-md-4,.py-md-4{padding-top:1.5rem !important}.pr-md-4,.px-md-4{padding-right:1.5rem !important}.pb-md-4,.py-md-4{padding-bottom:1.5rem !important}.pl-md-4,.px-md-4{padding-left:1.5rem !important}.p-md-5{padding:3rem !important}.pt-md-5,.py-md-5{padding-top:3rem !important}.pr-md-5,.px-md-5{padding-right:3rem !important}.pb-md-5,.py-md-5{padding-bottom:3rem !important}.pl-md-5,.px-md-5{padding-left:3rem !important}.m-md-n1{margin:-0.25rem !important}.mt-md-n1,.my-md-n1{margin-top:-0.25rem !important}.mr-md-n1,.mx-md-n1{margin-right:-0.25rem !important}.mb-md-n1,.my-md-n1{margin-bottom:-0.25rem !important}.ml-md-n1,.mx-md-n1{margin-left:-0.25rem !important}.m-md-n2{margin:-0.5rem !important}.mt-md-n2,.my-md-n2{margin-top:-0.5rem !important}.mr-md-n2,.mx-md-n2{margin-right:-0.5rem !important}.mb-md-n2,.my-md-n2{margin-bottom:-0.5rem !important}.ml-md-n2,.mx-md-n2{margin-left:-0.5rem !important}.m-md-n3{margin:-1rem !important}.mt-md-n3,.my-md-n3{margin-top:-1rem !important}.mr-md-n3,.mx-md-n3{margin-right:-1rem !important}.mb-md-n3,.my-md-n3{margin-bottom:-1rem !important}.ml-md-n3,.mx-md-n3{margin-left:-1rem !important}.m-md-n4{margin:-1.5rem !important}.mt-md-n4,.my-md-n4{margin-top:-1.5rem !important}.mr-md-n4,.mx-md-n4{margin-right:-1.5rem !important}.mb-md-n4,.my-md-n4{margin-bottom:-1.5rem !important}.ml-md-n4,.mx-md-n4{margin-left:-1.5rem !important}.m-md-n5{margin:-3rem !important}.mt-md-n5,.my-md-n5{margin-top:-3rem !important}.mr-md-n5,.mx-md-n5{margin-right:-3rem !important}.mb-md-n5,.my-md-n5{margin-bottom:-3rem !important}.ml-md-n5,.mx-md-n5{margin-left:-3rem !important}.m-md-auto{margin:auto !important}.mt-md-auto,.my-md-auto{margin-top:auto !important}.mr-md-auto,.mx-md-auto{margin-right:auto !important}.mb-md-auto,.my-md-auto{margin-bottom:auto !important}.ml-md-auto,.mx-md-auto{margin-left:auto !important}}@media (min-width: 992px){.m-lg-0{margin:0 !important}.mt-lg-0,.my-lg-0{margin-top:0 !important}.mr-lg-0,.mx-lg-0{margin-right:0 !important}.mb-lg-0,.my-lg-0{margin-bottom:0 !important}.ml-lg-0,.mx-lg-0{margin-left:0 !important}.m-lg-1{margin:0.25rem !important}.mt-lg-1,.my-lg-1{margin-top:0.25rem !important}.mr-lg-1,.mx-lg-1{margin-right:0.25rem !important}.mb-lg-1,.my-lg-1{margin-bottom:0.25rem !important}.ml-lg-1,.mx-lg-1{margin-left:0.25rem !important}.m-lg-2{margin:0.5rem !important}.mt-lg-2,.my-lg-2{margin-top:0.5rem !important}.mr-lg-2,.mx-lg-2{margin-right:0.5rem !important}.mb-lg-2,.my-lg-2{margin-bottom:0.5rem !important}.ml-lg-2,.mx-lg-2{margin-left:0.5rem !important}.m-lg-3{margin:1rem !important}.mt-lg-3,.my-lg-3{margin-top:1rem !important}.mr-lg-3,.mx-lg-3{margin-right:1rem !important}.mb-lg-3,.my-lg-3{margin-bottom:1rem !important}.ml-lg-3,.mx-lg-3{margin-left:1rem !important}.m-lg-4{margin:1.5rem !important}.mt-lg-4,.my-lg-4{margin-top:1.5rem !important}.mr-lg-4,.mx-lg-4{margin-right:1.5rem !important}.mb-lg-4,.my-lg-4{margin-bottom:1.5rem !important}.ml-lg-4,.mx-lg-4{margin-left:1.5rem !important}.m-lg-5{margin:3rem !important}.mt-lg-5,.my-lg-5{margin-top:3rem !important}.mr-lg-5,.mx-lg-5{margin-right:3rem !important}.mb-lg-5,.my-lg-5{margin-bottom:3rem !important}.ml-lg-5,.mx-lg-5{margin-left:3rem !important}.p-lg-0{padding:0 !important}.pt-lg-0,.py-lg-0{padding-top:0 !important}.pr-lg-0,.px-lg-0{padding-right:0 !important}.pb-lg-0,.py-lg-0{padding-bottom:0 !important}.pl-lg-0,.px-lg-0{padding-left:0 !important}.p-lg-1{padding:0.25rem !important}.pt-lg-1,.py-lg-1{padding-top:0.25rem !important}.pr-lg-1,.px-lg-1{padding-right:0.25rem !important}.pb-lg-1,.py-lg-1{padding-bottom:0.25rem !important}.pl-lg-1,.px-lg-1{padding-left:0.25rem !important}.p-lg-2{padding:0.5rem !important}.pt-lg-2,.py-lg-2{padding-top:0.5rem !important}.pr-lg-2,.px-lg-2{padding-right:0.5rem !important}.pb-lg-2,.py-lg-2{padding-bottom:0.5rem !important}.pl-lg-2,.px-lg-2{padding-left:0.5rem !important}.p-lg-3{padding:1rem !important}.pt-lg-3,.py-lg-3{padding-top:1rem !important}.pr-lg-3,.px-lg-3{padding-right:1rem !important}.pb-lg-3,.py-lg-3{padding-bottom:1rem !important}.pl-lg-3,.px-lg-3{padding-left:1rem !important}.p-lg-4{padding:1.5rem !important}.pt-lg-4,.py-lg-4{padding-top:1.5rem !important}.pr-lg-4,.px-lg-4{padding-right:1.5rem !important}.pb-lg-4,.py-lg-4{padding-bottom:1.5rem !important}.pl-lg-4,.px-lg-4{padding-left:1.5rem !important}.p-lg-5{padding:3rem !important}.pt-lg-5,.py-lg-5{padding-top:3rem !important}.pr-lg-5,.px-lg-5{padding-right:3rem !important}.pb-lg-5,.py-lg-5{padding-bottom:3rem !important}.pl-lg-5,.px-lg-5{padding-left:3rem !important}.m-lg-n1{margin:-0.25rem !important}.mt-lg-n1,.my-lg-n1{margin-top:-0.25rem !important}.mr-lg-n1,.mx-lg-n1{margin-right:-0.25rem !important}.mb-lg-n1,.my-lg-n1{margin-bottom:-0.25rem !important}.ml-lg-n1,.mx-lg-n1{margin-left:-0.25rem !important}.m-lg-n2{margin:-0.5rem !important}.mt-lg-n2,.my-lg-n2{margin-top:-0.5rem !important}.mr-lg-n2,.mx-lg-n2{margin-right:-0.5rem !important}.mb-lg-n2,.my-lg-n2{margin-bottom:-0.5rem !important}.ml-lg-n2,.mx-lg-n2{margin-left:-0.5rem !important}.m-lg-n3{margin:-1rem !important}.mt-lg-n3,.my-lg-n3{margin-top:-1rem !important}.mr-lg-n3,.mx-lg-n3{margin-right:-1rem !important}.mb-lg-n3,.my-lg-n3{margin-bottom:-1rem !important}.ml-lg-n3,.mx-lg-n3{margin-left:-1rem !important}.m-lg-n4{margin:-1.5rem !important}.mt-lg-n4,.my-lg-n4{margin-top:-1.5rem !important}.mr-lg-n4,.mx-lg-n4{margin-right:-1.5rem !important}.mb-lg-n4,.my-lg-n4{margin-bottom:-1.5rem !important}.ml-lg-n4,.mx-lg-n4{margin-left:-1.5rem !important}.m-lg-n5{margin:-3rem !important}.mt-lg-n5,.my-lg-n5{margin-top:-3rem !important}.mr-lg-n5,.mx-lg-n5{margin-right:-3rem !important}.mb-lg-n5,.my-lg-n5{margin-bottom:-3rem !important}.ml-lg-n5,.mx-lg-n5{margin-left:-3rem !important}.m-lg-auto{margin:auto !important}.mt-lg-auto,.my-lg-auto{margin-top:auto !important}.mr-lg-auto,.mx-lg-auto{margin-right:auto !important}.mb-lg-auto,.my-lg-auto{margin-bottom:auto !important}.ml-lg-auto,.mx-lg-auto{margin-left:auto !important}}@media (min-width: 1200px){.m-xl-0{margin:0 !important}.mt-xl-0,.my-xl-0{margin-top:0 !important}.mr-xl-0,.mx-xl-0{margin-right:0 !important}.mb-xl-0,.my-xl-0{margin-bottom:0 !important}.ml-xl-0,.mx-xl-0{margin-left:0 !important}.m-xl-1{margin:0.25rem !important}.mt-xl-1,.my-xl-1{margin-top:0.25rem !important}.mr-xl-1,.mx-xl-1{margin-right:0.25rem !important}.mb-xl-1,.my-xl-1{margin-bottom:0.25rem !important}.ml-xl-1,.mx-xl-1{margin-left:0.25rem !important}.m-xl-2{margin:0.5rem !important}.mt-xl-2,.my-xl-2{margin-top:0.5rem !important}.mr-xl-2,.mx-xl-2{margin-right:0.5rem !important}.mb-xl-2,.my-xl-2{margin-bottom:0.5rem !important}.ml-xl-2,.mx-xl-2{margin-left:0.5rem !important}.m-xl-3{margin:1rem !important}.mt-xl-3,.my-xl-3{margin-top:1rem !important}.mr-xl-3,.mx-xl-3{margin-right:1rem !important}.mb-xl-3,.my-xl-3{margin-bottom:1rem !important}.ml-xl-3,.mx-xl-3{margin-left:1rem !important}.m-xl-4{margin:1.5rem !important}.mt-xl-4,.my-xl-4{margin-top:1.5rem !important}.mr-xl-4,.mx-xl-4{margin-right:1.5rem !important}.mb-xl-4,.my-xl-4{margin-bottom:1.5rem !important}.ml-xl-4,.mx-xl-4{margin-left:1.5rem !important}.m-xl-5{margin:3rem !important}.mt-xl-5,.my-xl-5{margin-top:3rem !important}.mr-xl-5,.mx-xl-5{margin-right:3rem !important}.mb-xl-5,.my-xl-5{margin-bottom:3rem !important}.ml-xl-5,.mx-xl-5{margin-left:3rem !important}.p-xl-0{padding:0 !important}.pt-xl-0,.py-xl-0{padding-top:0 !important}.pr-xl-0,.px-xl-0{padding-right:0 !important}.pb-xl-0,.py-xl-0{padding-bottom:0 !important}.pl-xl-0,.px-xl-0{padding-left:0 !important}.p-xl-1{padding:0.25rem !important}.pt-xl-1,.py-xl-1{padding-top:0.25rem !important}.pr-xl-1,.px-xl-1{padding-right:0.25rem !important}.pb-xl-1,.py-xl-1{padding-bottom:0.25rem !important}.pl-xl-1,.px-xl-1{padding-left:0.25rem !important}.p-xl-2{padding:0.5rem !important}.pt-xl-2,.py-xl-2{padding-top:0.5rem !important}.pr-xl-2,.px-xl-2{padding-right:0.5rem !important}.pb-xl-2,.py-xl-2{padding-bottom:0.5rem !important}.pl-xl-2,.px-xl-2{padding-left:0.5rem !important}.p-xl-3{padding:1rem !important}.pt-xl-3,.py-xl-3{padding-top:1rem !important}.pr-xl-3,.px-xl-3{padding-right:1rem !important}.pb-xl-3,.py-xl-3{padding-bottom:1rem !important}.pl-xl-3,.px-xl-3{padding-left:1rem !important}.p-xl-4{padding:1.5rem !important}.pt-xl-4,.py-xl-4{padding-top:1.5rem !important}.pr-xl-4,.px-xl-4{padding-right:1.5rem !important}.pb-xl-4,.py-xl-4{padding-bottom:1.5rem !important}.pl-xl-4,.px-xl-4{padding-left:1.5rem !important}.p-xl-5{padding:3rem !important}.pt-xl-5,.py-xl-5{padding-top:3rem !important}.pr-xl-5,.px-xl-5{padding-right:3rem !important}.pb-xl-5,.py-xl-5{padding-bottom:3rem !important}.pl-xl-5,.px-xl-5{padding-left:3rem !important}.m-xl-n1{margin:-0.25rem !important}.mt-xl-n1,.my-xl-n1{margin-top:-0.25rem !important}.mr-xl-n1,.mx-xl-n1{margin-right:-0.25rem !important}.mb-xl-n1,.my-xl-n1{margin-bottom:-0.25rem !important}.ml-xl-n1,.mx-xl-n1{margin-left:-0.25rem !important}.m-xl-n2{margin:-0.5rem !important}.mt-xl-n2,.my-xl-n2{margin-top:-0.5rem !important}.mr-xl-n2,.mx-xl-n2{margin-right:-0.5rem !important}.mb-xl-n2,.my-xl-n2{margin-bottom:-0.5rem !important}.ml-xl-n2,.mx-xl-n2{margin-left:-0.5rem !important}.m-xl-n3{margin:-1rem !important}.mt-xl-n3,.my-xl-n3{margin-top:-1rem !important}.mr-xl-n3,.mx-xl-n3{margin-right:-1rem !important}.mb-xl-n3,.my-xl-n3{margin-bottom:-1rem !important}.ml-xl-n3,.mx-xl-n3{margin-left:-1rem !important}.m-xl-n4{margin:-1.5rem !important}.mt-xl-n4,.my-xl-n4{margin-top:-1.5rem !important}.mr-xl-n4,.mx-xl-n4{margin-right:-1.5rem !important}.mb-xl-n4,.my-xl-n4{margin-bottom:-1.5rem !important}.ml-xl-n4,.mx-xl-n4{margin-left:-1.5rem !important}.m-xl-n5{margin:-3rem !important}.mt-xl-n5,.my-xl-n5{margin-top:-3rem !important}.mr-xl-n5,.mx-xl-n5{margin-right:-3rem !important}.mb-xl-n5,.my-xl-n5{margin-bottom:-3rem !important}.ml-xl-n5,.mx-xl-n5{margin-left:-3rem !important}.m-xl-auto{margin:auto !important}.mt-xl-auto,.my-xl-auto{margin-top:auto !important}.mr-xl-auto,.mx-xl-auto{margin-right:auto !important}.mb-xl-auto,.my-xl-auto{margin-bottom:auto !important}.ml-xl-auto,.mx-xl-auto{margin-left:auto !important}}.text-monospace{font-family:SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace !important}.text-justify{text-align:justify !important}.text-wrap{white-space:normal !important}.text-nowrap{white-space:nowrap !important}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.text-left{text-align:left !important}.text-right{text-align:right !important}.text-center{text-align:center !important}@media (min-width: 576px){.text-sm-left{text-align:left !important}.text-sm-right{text-align:right !important}.text-sm-center{text-align:center !important}}@media (min-width: 768px){.text-md-left{text-align:left !important}.text-md-right{text-align:right !important}.text-md-center{text-align:center !important}}@media (min-width: 992px){.text-lg-left{text-align:left !important}.text-lg-right{text-align:right !important}.text-lg-center{text-align:center !important}}@media (min-width: 1200px){.text-xl-left{text-align:left !important}.text-xl-right{text-align:right !important}.text-xl-center{text-align:center !important}}.text-lowercase{text-transform:lowercase !important}.text-uppercase{text-transform:uppercase !important}.text-capitalize{text-transform:capitalize !important}.font-weight-light{font-weight:300 !important}.font-weight-lighter{font-weight:lighter !important}.font-weight-normal{font-weight:400 !important}.font-weight-bold{font-weight:700 !important}.font-weight-bolder{font-weight:bolder !important}.font-italic{font-style:italic !important}.text-white{color:#fff !important}.text-primary{color:#007bff !important}a.text-primary:hover,a.text-primary:focus{color:#0056b3 !important}.text-secondary{color:#6c757d !important}a.text-secondary:hover,a.text-secondary:focus{color:#494f54 !important}.text-success{color:#28a745 !important}a.text-success:hover,a.text-success:focus{color:#19692c !important}.text-info{color:#17a2b8 !important}a.text-info:hover,a.text-info:focus{color:#0f6674 !important}.text-warning{color:#ffc107 !important}a.text-warning:hover,a.text-warning:focus{color:#ba8b00 !important}.text-danger{color:#dc3545 !important}a.text-danger:hover,a.text-danger:focus{color:#a71d2a !important}.text-light{color:#f8f9fa !important}a.text-light:hover,a.text-light:focus{color:#cbd3da !important}.text-dark{color:#343a40 !important}a.text-dark:hover,a.text-dark:focus{color:#121416 !important}.text-body{color:#212529 !important}.text-muted{color:#6c757d !important}.text-black-50{color:rgba(0,0,0,0.5) !important}.text-white-50{color:rgba(255,255,255,0.5) !important}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.text-decoration-none{text-decoration:none !important}.text-break{word-break:break-word !important;overflow-wrap:break-word !important}.text-reset{color:inherit !important}.visible{visibility:visible !important}.invisible{visibility:hidden !important}@media print{*,*::before,*::after{text-shadow:none !important;box-shadow:none !important}a:not(.btn){text-decoration:underline}abbr[title]::after{content:" (" attr(title) ")"}pre{white-space:pre-wrap !important}pre,blockquote{border:1px solid #adb5bd;page-break-inside:avoid}thead{display:table-header-group}tr,img{page-break-inside:avoid}p,h2,h3{orphans:3;widows:3}h2,h3{page-break-after:avoid}@page{size:a3}body{min-width:992px !important}.container{min-width:992px !important}.navbar{display:none}.badge{border:1px solid #000}.table{border-collapse:collapse !important}.table td,.table th{background-color:#fff !important}.table-bordered th,.table-bordered td{border:1px solid #dee2e6 !important}.table-dark{color:inherit}.table-dark th,.table-dark td,.table-dark thead th,.table-dark tbody+tbody{border-color:#dee2e6}.table .thead-dark th{color:inherit;border-color:#dee2e6}}\n',""]),t.exports=e},function(t,e,n){(e=n(24)(!1)).push([t.i,"footer{display:flex;justify-content:center}h1,h2{display:flex;justify-content:center;align-items:center}div a{width:100%;height:100%}.configButton{position:absolute;right:10px;top:15px}#catInput{width:100%}#UserDashboard{color:white;font-family:'Audiowide', cursive}#configDashboard{width:80%;color:black;font-family:'Audiowide', cursive}div#configHeader{background-color:lightgray;border-radius:5px}.router{width:100%;display:flex;flex-direction:row;align-items:center;justify-content:center}.categoriesDrop{display:flex;justify-content:center;align-items:center}.btn{width:100%}#chartArea{width:80%}svg{width:100%;height:300px;overflow:visible;margin-bottom:2rem;display:block;box-shadow:inset 1px 2000px rgba(208,208,208,0.75)}text{color:whitesmoke}span.querySpan.input{margin-right:10px}#root{font-family:'Audiowide', cursive;flex-basis:100%;display:flex;flex-direction:column;align-items:center;justify-content:center}#userDashboard{display:flex;flex-direction:column;align-items:center;justify-content:center;flex-basis:100%;height:100vh}#navBtn{display:flex;flex-direction:row;align-self:flex-end;align-items:center}div#navBtn{display:flex;flex-direction:row-reverse}span{display:flex;justify-content:space-evenly}button{margin-top:10px;margin-bottom:5px;width:100%}button:hover{color:#7278ab;box-shadow:0 5px 15px #7278ab}div .tooltip{background:lightsteelblue}text.tooltip{background:lightsteelblue}.tooltip{padding:5;font-size:20px;fill:black;font-weight:600}.bar:hover{fill:#ffb74b;fill-opacity:70%;box-shadow:0 5px 15px #7278ab}#endpointHeader{margin-left:10px}#categoriesHeader{margin-left:10px}#btnAddQuery button{width:100%}button.btnSecondary.btn.btn-outline-secondary{width:100%;background-color:whitesmoke;color:black}.deleteBtn{color:white;margin-left:10px;size:10%;height:50px;width:50px;border-radius:5px}span#navBtnSpan{width:100%;align-content:space-between;align-items:center}#navBtnGroup{width:100%;align-items:center}#btnContainer{width:100%}div.col-6{display:flex;flex-direction:column;align-items:center}button#navUserDash{margin:auto;margin-top:10px;margin-bottom:10px}button#navProjectSelect{margin:auto;margin-top:10px;margin-bottom:10px}button#navConfigDash{display:flex;flex-direction:column;align-items:center}a#navConfigLink{color:whitesmoke;text-decoration-line:none;width:100%}a#navUserDashLink{color:whitesmoke;text-decoration-line:none;width:100%}a#navProjLink{color:whitesmoke;text-decoration-line:none;width:100%}#projectSelect{display:flex;flex-direction:column;align-items:center}link{color:white;text-size-adjust:100%}.btn-primary{background-color:#073b66;border-color:#194779}.close{width:25%}.btn-danger{margin:auto}div#freqExamples{color:gray}@media only screen and (max-width: 700px){#navProjectSelect{width:max-content;max-width:230px;flex-wrap:wrap}.router{min-width:500}#navUserDash{width:max-content}link{color:white;min-width:230px;height:max-content;text-size-adjust:100%}}\n",""]),t.exports=e},function(t,e,n){"use strict";var r=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.default=t,e};Object.defineProperty(e,"__esModule",{value:!0});var o=n(34),i=r(n(0));n(5);e.default=function(t){var e,n=t.timeData,r=t.selectedQueries,a={},l=[],c=function(t){a[t]=[],n[t].forEach((function(e){l.push(e.timestamp),a[t].push(e.timing[0]+e.timing[1]/1e9)})),a[t].shift()};for(var u in n)c(u);e=a[r[0]]?a[r[0]]:[.1,.1,.1,.1,.1,.1,.1];var s=i.useRef();return i.useEffect((function(){var t=document.getElementById("chartArea"),n={yheight:t.clientHeight,xwidth:t.clientWidth};window.addEventListener("resize",(function(){n.yheight=t.clientHeight,n.xwidth=t.clientWidth,a.range([0,n.xwidth]),c=o.axisBottom(a).ticks(e.length),i.select(".x-axis").call(c),i.select(".y-axis").style("transform","translateX("+n.xwidth+"px)"),f=o.line().x((function(t,e){return a(e)})).y(l).curve(o.curveCardinal),i.select("rect").style("pointer-events","all").attr("width",""+n.xwidth),i.selectAll(".line").attr("d",f)}));var r=1.5*Math.max.apply(Math,e),i=o.select(s.current),a=o.scaleLinear().domain([0,e.length-1]).range([0,n.xwidth]),l=o.scaleLinear().domain([0,r]).range([300,0]),c=o.axisBottom(a).ticks(e.length);c.tickFormat((function(t){return Math.floor(t).toString()})),i.select(".x-axis").style("transform","translateY(300px)").style("filter","url(#glow)").call(c);var u=o.axisRight(l).ticks(20);u.tickFormat((function(t){return(Math.round(1e3*t)/1e3).toString()})),i.select(".y-axis").style("transform","translateX("+n.xwidth+"px)").style("filter","url(#glow)").call(u),i.select(".y-axis").append("text").attr("class","yaxislabel").attr("transform","rotate(90)").attr("y",20).attr("dy","-3em").attr("x","3.75em").style("text-anchor","start").style("fill","white").attr("font-size","20px").text("Response Time(s)");var f=o.line().x((function(t,e){return a(e)})).y(l).curve(o.curveCardinal),d=i.append("defs").append("filter").attr("id","glow");d.append("feGaussianBlur").attr("stdDeviation","3.5").attr("result","coloredBlur");var p=d.append("feMerge");p.append("feMergeNode").attr("in","coloredBlur"),p.append("feMergeNode").attr("in","SourceGraphic"),i.append("rect").style("fill","none").style("pointer-events","all").attr("width",""+n.xwidth).attr("height",300).on("mouseover",(function(){m.style("opacity",1),g.style("opacity",1),h.style("opacity",1)})).on("mousemove",(function(){var t=Math.ceil(a.invert(o.mouse(this)[0]))-1,n=e[t];m.attr("cx",a(t)).attr("cy",l(n)),g.html(t+"  : "+n+"s").attr("x",a(t)+15).attr("y",l(n)-25),h.attr("d",(function(){var e="M"+a(t)+",300";return e+=" "+a(t)+",0"}))})).on("mouseout",(function(){m.style("opacity",0),g.style("opacity",0),h.style("opacity",0)})),i.selectAll(".line").data([e]).join("path").attr("class","line").attr("d",f).attr("fill","none").attr("stroke","rgb(6, 75, 115)").style("filter","url(#glow)");var m=i.append("g").append("circle").style("fill","none").attr("stroke","black").attr("r",8.5).style("opacity",0),h=i.append("g").append("path").attr("class","mouse-line").style("stroke","black").style("stroke-width","1px").attr("height",300).style("opacity",0),g=i.append("g").append("text").style("opacity",0).attr("text-anchor","left").attr("alignment-baseline","middle")}),[e]),i.default.createElement(i.default.Fragment,null,i.default.createElement("svg",{ref:s},i.default.createElement("g",{className:"x-axis"}),i.default.createElement("g",{className:"y-axis"})),i.default.createElement("br",null))}},function(t,e,n){"use strict";var r=n(47);function o(){}function i(){}i.resetWarningCache=o,t.exports=function(){function t(t,e,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function e(){return t}t.isRequired=t;var n={array:t,bool:t,func:t,number:t,object:t,string:t,symbol:t,any:t,arrayOf:e,element:t,elementType:t,instanceOf:e,node:t,objectOf:e,oneOf:e,oneOfType:e,shape:e,exact:e,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(t,e,n){"use strict";t.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(t,e){t.exports=Array.isArray||function(t){return"[object Array]"==Object.prototype.toString.call(t)}},function(t,e,n){"use strict";
/** @license React v16.12.0
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(e,"__esModule",{value:!0});var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,c=r?Symbol.for("react.profiler"):60114,u=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,m=r?Symbol.for("react.suspense"):60113,h=r?Symbol.for("react.suspense_list"):60120,g=r?Symbol.for("react.memo"):60115,b=r?Symbol.for("react.lazy"):60116,v=r?Symbol.for("react.fundamental"):60117,y=r?Symbol.for("react.responder"):60118,x=r?Symbol.for("react.scope"):60119;function w(t){if("object"==typeof t&&null!==t){var e=t.$$typeof;switch(e){case o:switch(t=t.type){case f:case d:case a:case c:case l:case m:return t;default:switch(t=t&&t.$$typeof){case s:case p:case b:case g:case u:return t;default:return e}}case i:return e}}}function k(t){return w(t)===d}e.typeOf=w,e.AsyncMode=f,e.ConcurrentMode=d,e.ContextConsumer=s,e.ContextProvider=u,e.Element=o,e.ForwardRef=p,e.Fragment=a,e.Lazy=b,e.Memo=g,e.Portal=i,e.Profiler=c,e.StrictMode=l,e.Suspense=m,e.isValidElementType=function(t){return"string"==typeof t||"function"==typeof t||t===a||t===d||t===c||t===l||t===m||t===h||"object"==typeof t&&null!==t&&(t.$$typeof===b||t.$$typeof===g||t.$$typeof===u||t.$$typeof===s||t.$$typeof===p||t.$$typeof===v||t.$$typeof===y||t.$$typeof===x)},e.isAsyncMode=function(t){return k(t)||w(t)===f},e.isConcurrentMode=k,e.isContextConsumer=function(t){return w(t)===s},e.isContextProvider=function(t){return w(t)===u},e.isElement=function(t){return"object"==typeof t&&null!==t&&t.$$typeof===o},e.isForwardRef=function(t){return w(t)===p},e.isFragment=function(t){return w(t)===a},e.isLazy=function(t){return w(t)===b},e.isMemo=function(t){return w(t)===g},e.isPortal=function(t){return w(t)===i},e.isProfiler=function(t){return w(t)===c},e.isStrictMode=function(t){return w(t)===l},e.isSuspense=function(t){return w(t)===m}},function(t,e,n){"use strict";e.__esModule=!0;var r=n(0),o=(a(r),a(n(1))),i=a(n(16));a(n(17));function a(t){return t&&t.__esModule?t:{default:t}}function l(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function c(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function u(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function s(t){var e=[];return{on:function(t){e.push(t)},off:function(t){e=e.filter((function(e){return e!==t}))},get:function(){return t},set:function(n,r){t=n,e.forEach((function(e){return e(t,r)}))}}}e.default=function(t,e){var n,a,f="__create-react-context-"+(0,i.default)()+"__",d=function(t){function n(){var e,r;l(this,n);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return e=r=c(this,t.call.apply(t,[this].concat(i))),r.emitter=s(r.props.value),c(r,e)}return u(n,t),n.prototype.getChildContext=function(){var t;return(t={})[f]=this.emitter,t},n.prototype.componentWillReceiveProps=function(t){if(this.props.value!==t.value){var n=this.props.value,r=t.value,o=void 0;((i=n)===(a=r)?0!==i||1/i==1/a:i!=i&&a!=a)?o=0:(o="function"==typeof e?e(n,r):1073741823,0!==(o|=0)&&this.emitter.set(t.value,o))}var i,a},n.prototype.render=function(){return this.props.children},n}(r.Component);d.childContextTypes=((n={})[f]=o.default.object.isRequired,n);var p=function(e){function n(){var t,r;l(this,n);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return t=r=c(this,e.call.apply(e,[this].concat(i))),r.state={value:r.getValue()},r.onUpdate=function(t,e){0!=((0|r.observedBits)&e)&&r.setState({value:r.getValue()})},c(r,t)}return u(n,e),n.prototype.componentWillReceiveProps=function(t){var e=t.observedBits;this.observedBits=null==e?1073741823:e},n.prototype.componentDidMount=function(){this.context[f]&&this.context[f].on(this.onUpdate);var t=this.props.observedBits;this.observedBits=null==t?1073741823:t},n.prototype.componentWillUnmount=function(){this.context[f]&&this.context[f].off(this.onUpdate)},n.prototype.getValue=function(){return this.context[f]?this.context[f].get():t},n.prototype.render=function(){return(t=this.props.children,Array.isArray(t)?t[0]:t)(this.state.value);var t},n}(r.Component);return p.contextTypes=((a={})[f]=o.default.object,a),{Provider:d,Consumer:p}},t.exports=e.default},function(t,e,n){"use strict";var r;if(!Object.keys){var o=Object.prototype.hasOwnProperty,i=Object.prototype.toString,a=n(27),l=Object.prototype.propertyIsEnumerable,c=!l.call({toString:null},"toString"),u=l.call((function(){}),"prototype"),s=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],f=function(t){var e=t.constructor;return e&&e.prototype===t},d={$applicationCache:!0,$console:!0,$external:!0,$frame:!0,$frameElement:!0,$frames:!0,$innerHeight:!0,$innerWidth:!0,$onmozfullscreenchange:!0,$onmozfullscreenerror:!0,$outerHeight:!0,$outerWidth:!0,$pageXOffset:!0,$pageYOffset:!0,$parent:!0,$scrollLeft:!0,$scrollTop:!0,$scrollX:!0,$scrollY:!0,$self:!0,$webkitIndexedDB:!0,$webkitStorageInfo:!0,$window:!0},p=function(){if("undefined"==typeof window)return!1;for(var t in window)try{if(!d["$"+t]&&o.call(window,t)&&null!==window[t]&&"object"==typeof window[t])try{f(window[t])}catch(t){return!0}}catch(t){return!0}return!1}();r=function(t){var e=null!==t&&"object"==typeof t,n="[object Function]"===i.call(t),r=a(t),l=e&&"[object String]"===i.call(t),d=[];if(!e&&!n&&!r)throw new TypeError("Object.keys called on a non-object");var m=u&&n;if(l&&t.length>0&&!o.call(t,0))for(var h=0;h<t.length;++h)d.push(String(h));if(r&&t.length>0)for(var g=0;g<t.length;++g)d.push(String(g));else for(var b in t)m&&"prototype"===b||!o.call(t,b)||d.push(String(b));if(c)for(var v=function(t){if("undefined"==typeof window||!p)return f(t);try{return f(t)}catch(t){return!1}}(t),y=0;y<s.length;++y)v&&"constructor"===s[y]||!o.call(t,s[y])||d.push(s[y]);return d}}t.exports=r},function(t,e,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag,o=Object.prototype.toString,i=function(t){return!(r&&t&&"object"==typeof t&&Symbol.toStringTag in t)&&"[object Arguments]"===o.call(t)},a=function(t){return!!i(t)||null!==t&&"object"==typeof t&&"number"==typeof t.length&&t.length>=0&&"[object Array]"!==o.call(t)&&"[object Function]"===o.call(t.callee)},l=function(){return i(arguments)}();i.isLegacyArguments=a,t.exports=l?i:a},function(t,e,n){"use strict";var r=function(t){return t!=t};t.exports=function(t,e){return 0===t&&0===e?1/t==1/e:t===e||!(!r(t)||!r(e))}},function(t,e,n){"use strict";var r=n(55),o=RegExp.prototype.exec,i=Object.getOwnPropertyDescriptor,a=Object.prototype.toString,l="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;t.exports=function(t){if(!t||"object"!=typeof t)return!1;if(!l)return"[object RegExp]"===a.call(t);var e=i(t,"lastIndex");return!(!e||!r(e,"value"))&&function(t){try{var e=t.lastIndex;return t.lastIndex=0,o.call(t),!0}catch(t){return!1}finally{t.lastIndex=e}}(t)}},function(t,e,n){"use strict";var r=n(14);t.exports=r.call(Function.call,Object.prototype.hasOwnProperty)},function(t,e,n){"use strict";var r="Function.prototype.bind called on incompatible ",o=Array.prototype.slice,i=Object.prototype.toString;t.exports=function(t){var e=this;if("function"!=typeof e||"[object Function]"!==i.call(e))throw new TypeError(r+e);for(var n,a=o.call(arguments,1),l=function(){if(this instanceof n){var r=e.apply(this,a.concat(o.call(arguments)));return Object(r)===r?r:this}return e.apply(t,a.concat(o.call(arguments)))},c=Math.max(0,e.length-a.length),u=[],s=0;s<c;s++)u.push("$"+s);if(n=Function("binder","return function ("+u.join(",")+"){ return binder.apply(this,arguments); }")(l),e.prototype){var f=function(){};f.prototype=e.prototype,n.prototype=new f,f.prototype=null}return n}},function(t,e,n){"use strict";var r=n(15),o=n(58),i=n(28),a=n(29),l=n(62),c=o(i);r(c,{getPolyfill:a,implementation:i,shim:l}),t.exports=c},function(t,e,n){"use strict";var r=n(14),o=n(59)("%Function%"),i=o.apply,a=o.call;t.exports=function(){return r.apply(a,arguments)},t.exports.apply=function(){return r.apply(i,arguments)}},function(t,e,n){"use strict";var r=TypeError,o=Object.getOwnPropertyDescriptor;if(o)try{o({},"")}catch(t){o=null}var i=function(){throw new r},a=o?function(){try{return arguments.callee,i}catch(t){try{return o(arguments,"callee").get}catch(t){return i}}}():i,l=n(60)(),c=Object.getPrototypeOf||function(t){return t.__proto__},u=void 0,s="undefined"==typeof Uint8Array?void 0:c(Uint8Array),f={"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer,"%ArrayBufferPrototype%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer.prototype,"%ArrayIteratorPrototype%":l?c([][Symbol.iterator]()):void 0,"%ArrayPrototype%":Array.prototype,"%ArrayProto_entries%":Array.prototype.entries,"%ArrayProto_forEach%":Array.prototype.forEach,"%ArrayProto_keys%":Array.prototype.keys,"%ArrayProto_values%":Array.prototype.values,"%AsyncFromSyncIteratorPrototype%":void 0,"%AsyncFunction%":void 0,"%AsyncFunctionPrototype%":void 0,"%AsyncGenerator%":void 0,"%AsyncGeneratorFunction%":void 0,"%AsyncGeneratorPrototype%":void 0,"%AsyncIteratorPrototype%":u&&l&&Symbol.asyncIterator?u[Symbol.asyncIterator]():void 0,"%Atomics%":"undefined"==typeof Atomics?void 0:Atomics,"%Boolean%":Boolean,"%BooleanPrototype%":Boolean.prototype,"%DataView%":"undefined"==typeof DataView?void 0:DataView,"%DataViewPrototype%":"undefined"==typeof DataView?void 0:DataView.prototype,"%Date%":Date,"%DatePrototype%":Date.prototype,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%ErrorPrototype%":Error.prototype,"%eval%":eval,"%EvalError%":EvalError,"%EvalErrorPrototype%":EvalError.prototype,"%Float32Array%":"undefined"==typeof Float32Array?void 0:Float32Array,"%Float32ArrayPrototype%":"undefined"==typeof Float32Array?void 0:Float32Array.prototype,"%Float64Array%":"undefined"==typeof Float64Array?void 0:Float64Array,"%Float64ArrayPrototype%":"undefined"==typeof Float64Array?void 0:Float64Array.prototype,"%Function%":Function,"%FunctionPrototype%":Function.prototype,"%Generator%":void 0,"%GeneratorFunction%":void 0,"%GeneratorPrototype%":void 0,"%Int8Array%":"undefined"==typeof Int8Array?void 0:Int8Array,"%Int8ArrayPrototype%":"undefined"==typeof Int8Array?void 0:Int8Array.prototype,"%Int16Array%":"undefined"==typeof Int16Array?void 0:Int16Array,"%Int16ArrayPrototype%":"undefined"==typeof Int16Array?void 0:Int8Array.prototype,"%Int32Array%":"undefined"==typeof Int32Array?void 0:Int32Array,"%Int32ArrayPrototype%":"undefined"==typeof Int32Array?void 0:Int32Array.prototype,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":l?c(c([][Symbol.iterator]())):void 0,"%JSON%":"object"==typeof JSON?JSON:void 0,"%JSONParse%":"object"==typeof JSON?JSON.parse:void 0,"%Map%":"undefined"==typeof Map?void 0:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&l?c((new Map)[Symbol.iterator]()):void 0,"%MapPrototype%":"undefined"==typeof Map?void 0:Map.prototype,"%Math%":Math,"%Number%":Number,"%NumberPrototype%":Number.prototype,"%Object%":Object,"%ObjectPrototype%":Object.prototype,"%ObjProto_toString%":Object.prototype.toString,"%ObjProto_valueOf%":Object.prototype.valueOf,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?void 0:Promise,"%PromisePrototype%":"undefined"==typeof Promise?void 0:Promise.prototype,"%PromiseProto_then%":"undefined"==typeof Promise?void 0:Promise.prototype.then,"%Promise_all%":"undefined"==typeof Promise?void 0:Promise.all,"%Promise_reject%":"undefined"==typeof Promise?void 0:Promise.reject,"%Promise_resolve%":"undefined"==typeof Promise?void 0:Promise.resolve,"%Proxy%":"undefined"==typeof Proxy?void 0:Proxy,"%RangeError%":RangeError,"%RangeErrorPrototype%":RangeError.prototype,"%ReferenceError%":ReferenceError,"%ReferenceErrorPrototype%":ReferenceError.prototype,"%Reflect%":"undefined"==typeof Reflect?void 0:Reflect,"%RegExp%":RegExp,"%RegExpPrototype%":RegExp.prototype,"%Set%":"undefined"==typeof Set?void 0:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&l?c((new Set)[Symbol.iterator]()):void 0,"%SetPrototype%":"undefined"==typeof Set?void 0:Set.prototype,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer,"%SharedArrayBufferPrototype%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer.prototype,"%String%":String,"%StringIteratorPrototype%":l?c(""[Symbol.iterator]()):void 0,"%StringPrototype%":String.prototype,"%Symbol%":l?Symbol:void 0,"%SymbolPrototype%":l?Symbol.prototype:void 0,"%SyntaxError%":SyntaxError,"%SyntaxErrorPrototype%":SyntaxError.prototype,"%ThrowTypeError%":a,"%TypedArray%":s,"%TypedArrayPrototype%":s?s.prototype:void 0,"%TypeError%":r,"%TypeErrorPrototype%":r.prototype,"%Uint8Array%":"undefined"==typeof Uint8Array?void 0:Uint8Array,"%Uint8ArrayPrototype%":"undefined"==typeof Uint8Array?void 0:Uint8Array.prototype,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray,"%Uint8ClampedArrayPrototype%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray.prototype,"%Uint16Array%":"undefined"==typeof Uint16Array?void 0:Uint16Array,"%Uint16ArrayPrototype%":"undefined"==typeof Uint16Array?void 0:Uint16Array.prototype,"%Uint32Array%":"undefined"==typeof Uint32Array?void 0:Uint32Array,"%Uint32ArrayPrototype%":"undefined"==typeof Uint32Array?void 0:Uint32Array.prototype,"%URIError%":URIError,"%URIErrorPrototype%":URIError.prototype,"%WeakMap%":"undefined"==typeof WeakMap?void 0:WeakMap,"%WeakMapPrototype%":"undefined"==typeof WeakMap?void 0:WeakMap.prototype,"%WeakSet%":"undefined"==typeof WeakSet?void 0:WeakSet,"%WeakSetPrototype%":"undefined"==typeof WeakSet?void 0:WeakSet.prototype},d=n(14).call(Function.call,String.prototype.replace),p=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,m=/\\(\\)?/g,h=function(t){var e=[];return d(t,p,(function(t,n,r,o){e[e.length]=r?d(o,m,"$1"):n||t})),e},g=function(t,e){if(!(t in f))throw new SyntaxError("intrinsic "+t+" does not exist!");if(void 0===f[t]&&!e)throw new r("intrinsic "+t+" exists, but is not available. Please file an issue!");return f[t]};t.exports=function(t,e){if("string"!=typeof t||0===t.length)throw new TypeError("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof e)throw new TypeError('"allowMissing" argument must be a boolean');for(var n=h(t),i=g("%"+(n.length>0?n[0]:"")+"%",e),a=1;a<n.length;a+=1)if(null!=i)if(o&&a+1>=n.length){var l=o(i,n[a]);if(!(e||n[a]in i))throw new r("base intrinsic for "+t+" exists, but the property is not available.");i=l?l.get||l.value:i[n[a]]}else i=i[n[a]];return i}},function(t,e,n){"use strict";(function(e){var r=e.Symbol,o=n(61);t.exports=function(){return"function"==typeof r&&("function"==typeof Symbol&&("symbol"==typeof r("foo")&&("symbol"==typeof Symbol("bar")&&o())))}}).call(this,n(13))},function(t,e,n){"use strict";t.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var t={},e=Symbol("test"),n=Object(e);if("string"==typeof e)return!1;if("[object Symbol]"!==Object.prototype.toString.call(e))return!1;if("[object Symbol]"!==Object.prototype.toString.call(n))return!1;for(e in t[e]=42,t)return!1;if("function"==typeof Object.keys&&0!==Object.keys(t).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(t).length)return!1;var r=Object.getOwnPropertySymbols(t);if(1!==r.length||r[0]!==e)return!1;if(!Object.prototype.propertyIsEnumerable.call(t,e))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var o=Object.getOwnPropertyDescriptor(t,e);if(42!==o.value||!0!==o.enumerable)return!1}return!0}},function(t,e,n){"use strict";var r=n(15).supportsDescriptors,o=n(29),i=Object.getOwnPropertyDescriptor,a=Object.defineProperty,l=TypeError,c=Object.getPrototypeOf,u=/a/;t.exports=function(){if(!r||!c)throw new l("RegExp.prototype.flags requires a true ES5 environment that supports property descriptors");var t=o(),e=c(u),n=i(e,"flags");return n&&n.get===t||a(e,"flags",{configurable:!0,enumerable:!1,get:t}),t}},function(t,e,n){"use strict";var r=Date.prototype.getDay,o=Object.prototype.toString,i="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;t.exports=function(t){return"object"==typeof t&&null!==t&&(i?function(t){try{return r.call(t),!0}catch(t){return!1}}(t):"[object Date]"===o.call(t))}},function(t,e,n){var r=function(t){"use strict";var e=Object.prototype,n=e.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},o=r.iterator||"@@iterator",i=r.asyncIterator||"@@asyncIterator",a=r.toStringTag||"@@toStringTag";function l(t,e,n,r){var o=e&&e.prototype instanceof s?e:s,i=Object.create(o.prototype),a=new k(r||[]);return i._invoke=function(t,e,n){var r="suspendedStart";return function(o,i){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===o)throw i;return E()}for(n.method=o,n.arg=i;;){var a=n.delegate;if(a){var l=y(a,n);if(l){if(l===u)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var s=c(t,e,n);if("normal"===s.type){if(r=n.done?"completed":"suspendedYield",s.arg===u)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(r="completed",n.method="throw",n.arg=s.arg)}}}(t,n,a),i}function c(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}t.wrap=l;var u={};function s(){}function f(){}function d(){}var p={};p[o]=function(){return this};var m=Object.getPrototypeOf,h=m&&m(m(_([])));h&&h!==e&&n.call(h,o)&&(p=h);var g=d.prototype=s.prototype=Object.create(p);function b(t){["next","throw","return"].forEach((function(e){t[e]=function(t){return this._invoke(e,t)}}))}function v(t){var e;this._invoke=function(r,o){function i(){return new Promise((function(e,i){!function e(r,o,i,a){var l=c(t[r],t,o);if("throw"!==l.type){var u=l.arg,s=u.value;return s&&"object"==typeof s&&n.call(s,"__await")?Promise.resolve(s.__await).then((function(t){e("next",t,i,a)}),(function(t){e("throw",t,i,a)})):Promise.resolve(s).then((function(t){u.value=t,i(u)}),(function(t){return e("throw",t,i,a)}))}a(l.arg)}(r,o,e,i)}))}return e=e?e.then(i,i):i()}}function y(t,e){var n=t.iterator[e.method];if(void 0===n){if(e.delegate=null,"throw"===e.method){if(t.iterator.return&&(e.method="return",e.arg=void 0,y(t,e),"throw"===e.method))return u;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var r=c(n,t.iterator,e.arg);if("throw"===r.type)return e.method="throw",e.arg=r.arg,e.delegate=null,u;var o=r.arg;return o?o.done?(e[t.resultName]=o.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,u):o:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,u)}function x(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function w(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function k(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(x,this),this.reset(!0)}function _(t){if(t){var e=t[o];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var r=-1,i=function e(){for(;++r<t.length;)if(n.call(t,r))return e.value=t[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:E}}function E(){return{value:void 0,done:!0}}return f.prototype=g.constructor=d,d.constructor=f,d[a]=f.displayName="GeneratorFunction",t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===f||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,d):(t.__proto__=d,a in t||(t[a]="GeneratorFunction")),t.prototype=Object.create(g),t},t.awrap=function(t){return{__await:t}},b(v.prototype),v.prototype[i]=function(){return this},t.AsyncIterator=v,t.async=function(e,n,r,o){var i=new v(l(e,n,r,o));return t.isGeneratorFunction(n)?i:i.next().then((function(t){return t.done?t.value:i.next()}))},b(g),g[a]="Generator",g[o]=function(){return this},g.toString=function(){return"[object Generator]"},t.keys=function(t){var e=[];for(var n in t)e.push(n);return e.reverse(),function n(){for(;e.length;){var r=e.pop();if(r in t)return n.value=r,n.done=!1,n}return n.done=!0,n}},t.values=_,k.prototype={constructor:k,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(w),!t)for(var e in this)"t"===e.charAt(0)&&n.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function r(n,r){return a.type="throw",a.arg=t,e.next=n,r&&(e.method="next",e.arg=void 0),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var l=n.call(i,"catchLoc"),c=n.call(i,"finallyLoc");if(l&&c){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,u):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),u},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),w(n),u}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var o=r.arg;w(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,n){return this.delegate={iterator:_(t),resultName:e,nextLoc:n},"next"===this.method&&(this.arg=void 0),u}},t}(t.exports);try{regeneratorRuntime=r}catch(t){Function("r","regeneratorRuntime = r")(r)}},function(t,e,n){"use strict";e.__esModule=!0,e.default=void 0;!function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)if(Object.prototype.hasOwnProperty.call(t,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(t,n):{};r.get||r.set?Object.defineProperty(e,n,r):e[n]=t[n]}e.default=t}(n(1));var r=l(n(66)),o=l(n(69)),i=l(n(0)),a=l(n(30));n(32);function l(t){return t&&t.__esModule?t:{default:t}}function c(){return(c=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t}).apply(this,arguments)}var u=function(t,e){return t&&e&&e.split(" ").forEach((function(e){return(0,r.default)(t,e)}))},s=function(t,e){return t&&e&&e.split(" ").forEach((function(e){return(0,o.default)(t,e)}))},f=function(t){var e,n;function r(){for(var e,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(e=t.call.apply(t,[this].concat(r))||this).onEnter=function(t,n){var r=e.getClassNames(n?"appear":"enter").className;e.removeClasses(t,"exit"),u(t,r),e.props.onEnter&&e.props.onEnter(t,n)},e.onEntering=function(t,n){var r=e.getClassNames(n?"appear":"enter").activeClassName;e.reflowAndAddClass(t,r),e.props.onEntering&&e.props.onEntering(t,n)},e.onEntered=function(t,n){var r=e.getClassNames("appear").doneClassName,o=e.getClassNames("enter").doneClassName,i=n?r+" "+o:o;e.removeClasses(t,n?"appear":"enter"),u(t,i),e.props.onEntered&&e.props.onEntered(t,n)},e.onExit=function(t){var n=e.getClassNames("exit").className;e.removeClasses(t,"appear"),e.removeClasses(t,"enter"),u(t,n),e.props.onExit&&e.props.onExit(t)},e.onExiting=function(t){var n=e.getClassNames("exit").activeClassName;e.reflowAndAddClass(t,n),e.props.onExiting&&e.props.onExiting(t)},e.onExited=function(t){var n=e.getClassNames("exit").doneClassName;e.removeClasses(t,"exit"),u(t,n),e.props.onExited&&e.props.onExited(t)},e.getClassNames=function(t){var n=e.props.classNames,r="string"==typeof n,o=r?(r&&n?n+"-":"")+t:n[t];return{className:o,activeClassName:r?o+"-active":n[t+"Active"],doneClassName:r?o+"-done":n[t+"Done"]}},e}n=t,(e=r).prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n;var o=r.prototype;return o.removeClasses=function(t,e){var n=this.getClassNames(e),r=n.className,o=n.activeClassName,i=n.doneClassName;r&&s(t,r),o&&s(t,o),i&&s(t,i)},o.reflowAndAddClass=function(t,e){e&&(t&&t.scrollTop,u(t,e))},o.render=function(){var t=c({},this.props);return delete t.classNames,i.default.createElement(a.default,c({},t,{onEnter:this.onEnter,onEntered:this.onEntered,onEntering:this.onEntering,onExit:this.onExit,onExiting:this.onExiting,onExited:this.onExited}))},r}(i.default.Component);f.defaultProps={classNames:""},f.propTypes={};var d=f;e.default=d,t.exports=e.default},function(t,e,n){"use strict";var r=n(67);e.__esModule=!0,e.default=function(t,e){t.classList?t.classList.add(e):(0,o.default)(t,e)||("string"==typeof t.className?t.className=t.className+" "+e:t.setAttribute("class",(t.className&&t.className.baseVal||"")+" "+e))};var o=r(n(68));t.exports=e.default},function(t,e){t.exports=function(t){return t&&t.__esModule?t:{default:t}}},function(t,e,n){"use strict";e.__esModule=!0,e.default=function(t,e){return t.classList?!!e&&t.classList.contains(e):-1!==(" "+(t.className.baseVal||t.className)+" ").indexOf(" "+e+" ")},t.exports=e.default},function(t,e,n){"use strict";function r(t,e){return t.replace(new RegExp("(^|\\s)"+e+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,"")}t.exports=function(t,e){t.classList?t.classList.remove(e):"string"==typeof t.className?t.className=r(t.className,e):t.setAttribute("class",r(t.className&&t.className.baseVal||"",e))}},function(t,e,n){"use strict";e.__esModule=!0,e.default=void 0;a(n(1));var r=a(n(0)),o=n(8),i=a(n(33));function a(t){return t&&t.__esModule?t:{default:t}}var l=function(t){var e,n;function a(){for(var e,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(e=t.call.apply(t,[this].concat(r))||this).handleEnter=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return e.handleLifecycle("onEnter",0,n)},e.handleEntering=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return e.handleLifecycle("onEntering",0,n)},e.handleEntered=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return e.handleLifecycle("onEntered",0,n)},e.handleExit=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return e.handleLifecycle("onExit",1,n)},e.handleExiting=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return e.handleLifecycle("onExiting",1,n)},e.handleExited=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return e.handleLifecycle("onExited",1,n)},e}n=t,(e=a).prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n;var l=a.prototype;return l.handleLifecycle=function(t,e,n){var i,a=this.props.children,l=r.default.Children.toArray(a)[e];l.props[t]&&(i=l.props)[t].apply(i,n),this.props[t]&&this.props[t]((0,o.findDOMNode)(this))},l.render=function(){var t=this.props,e=t.children,n=t.in,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,["children","in"]),a=r.default.Children.toArray(e),l=a[0],c=a[1];return delete o.onEnter,delete o.onEntering,delete o.onEntered,delete o.onExit,delete o.onExiting,delete o.onExited,r.default.createElement(i.default,o,n?r.default.cloneElement(l,{key:"first",onEnter:this.handleEnter,onEntering:this.handleEntering,onEntered:this.handleEntered}):r.default.cloneElement(c,{key:"second",onEnter:this.handleExit,onEntering:this.handleExiting,onEntered:this.handleExited}))},a}(r.default.Component);l.propTypes={};var c=l;e.default=c,t.exports=e.default},function(t,e,n){"use strict";e.__esModule=!0,e.getChildMapping=o,e.mergeChildMappings=i,e.getInitialChildMapping=function(t,e){return o(t.children,(function(n){return(0,r.cloneElement)(n,{onExited:e.bind(null,n),in:!0,appear:a(n,"appear",t),enter:a(n,"enter",t),exit:a(n,"exit",t)})}))},e.getNextChildMapping=function(t,e,n){var l=o(t.children),c=i(e,l);return Object.keys(c).forEach((function(o){var i=c[o];if((0,r.isValidElement)(i)){var u=o in e,s=o in l,f=e[o],d=(0,r.isValidElement)(f)&&!f.props.in;!s||u&&!d?s||!u||d?s&&u&&(0,r.isValidElement)(f)&&(c[o]=(0,r.cloneElement)(i,{onExited:n.bind(null,i),in:f.props.in,exit:a(i,"exit",t),enter:a(i,"enter",t)})):c[o]=(0,r.cloneElement)(i,{in:!1}):c[o]=(0,r.cloneElement)(i,{onExited:n.bind(null,i),in:!0,exit:a(i,"exit",t),enter:a(i,"enter",t)})}})),c};var r=n(0);function o(t,e){var n=Object.create(null);return t&&r.Children.map(t,(function(t){return t})).forEach((function(t){n[t.key]=function(t){return e&&(0,r.isValidElement)(t)?e(t):t}(t)})),n}function i(t,e){function n(n){return n in e?e[n]:t[n]}t=t||{},e=e||{};var r,o=Object.create(null),i=[];for(var a in t)a in e?i.length&&(o[a]=i,i=[]):i.push(a);var l={};for(var c in e){if(o[c])for(r=0;r<o[c].length;r++){var u=o[c][r];l[o[c][r]]=n(u)}l[c]=n(c)}for(r=0;r<i.length;r++)l[i[r]]=n(i[r]);return l}function a(t,e,n){return null!=n[e]?n[e]:t.props[e]}},function(t,e,n){"use strict";n.r(e);var r=n(0),o=n.n(r),i=n(8),a=n.n(i);function l(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e}var c=n(1),u=n.n(c);function s(){return(s=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t}).apply(this,arguments)}function f(t){return"/"===t.charAt(0)}function d(t,e){for(var n=e,r=n+1,o=t.length;r<o;n+=1,r+=1)t[n]=t[r];t.pop()}var p=function(t,e){void 0===e&&(e="");var n,r=t&&t.split("/")||[],o=e&&e.split("/")||[],i=t&&f(t),a=e&&f(e),l=i||a;if(t&&f(t)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var c=o[o.length-1];n="."===c||".."===c||""===c}else n=!1;for(var u=0,s=o.length;s>=0;s--){var p=o[s];"."===p?d(o,s):".."===p?(d(o,s),u++):u&&(d(o,s),u--)}if(!l)for(;u--;u)o.unshift("..");!l||""===o[0]||o[0]&&f(o[0])||o.unshift("");var m=o.join("/");return n&&"/"!==m.substr(-1)&&(m+="/"),m};var m=function(t,e){if(!t)throw new Error("Invariant failed")};function h(t){return"/"===t.charAt(0)?t:"/"+t}function g(t){return"/"===t.charAt(0)?t.substr(1):t}function b(t,e){return function(t,e){return 0===t.toLowerCase().indexOf(e.toLowerCase())&&-1!=="/?#".indexOf(t.charAt(e.length))}(t,e)?t.substr(e.length):t}function v(t){return"/"===t.charAt(t.length-1)?t.slice(0,-1):t}function y(t){var e=t.pathname,n=t.search,r=t.hash,o=e||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function x(t,e,n,r){var o;"string"==typeof t?(o=function(t){var e=t||"/",n="",r="",o=e.indexOf("#");-1!==o&&(r=e.substr(o),e=e.substr(0,o));var i=e.indexOf("?");return-1!==i&&(n=e.substr(i),e=e.substr(0,i)),{pathname:e,search:"?"===n?"":n,hash:"#"===r?"":r}}(t)).state=e:(void 0===(o=s({},t)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==e&&void 0===o.state&&(o.state=e));try{o.pathname=decodeURI(o.pathname)}catch(t){throw t instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):t}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=p(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function w(){var t=null;var e=[];return{setPrompt:function(e){return t=e,function(){t===e&&(t=null)}},confirmTransitionTo:function(e,n,r,o){if(null!=t){var i="function"==typeof t?t(e,n):t;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(t){var n=!0;function r(){n&&t.apply(void 0,arguments)}return e.push(r),function(){n=!1,e=e.filter((function(t){return t!==r}))}},notifyListeners:function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];e.forEach((function(t){return t.apply(void 0,n)}))}}}var k=!("undefined"==typeof window||!window.document||!window.document.createElement);function _(t,e){e(window.confirm(t))}function E(){try{return window.history.state||{}}catch(t){return{}}}function S(t){void 0===t&&(t={}),k||m(!1);var e,n=window.history,r=(-1===(e=window.navigator.userAgent).indexOf("Android 2.")&&-1===e.indexOf("Android 4.0")||-1===e.indexOf("Mobile Safari")||-1!==e.indexOf("Chrome")||-1!==e.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=t,a=i.forceRefresh,l=void 0!==a&&a,c=i.getUserConfirmation,u=void 0===c?_:c,f=i.keyLength,d=void 0===f?6:f,p=t.basename?v(h(t.basename)):"";function g(t){var e=t||{},n=e.key,r=e.state,o=window.location,i=o.pathname+o.search+o.hash;return p&&(i=b(i,p)),x(i,r,n)}function S(){return Math.random().toString(36).substr(2,d)}var M=w();function T(t){s(U,t),U.length=n.length,M.notifyListeners(U.location,U.action)}function C(t){(function(t){return void 0===t.state&&-1===navigator.userAgent.indexOf("CriOS")})(t)||A(g(t.state))}function N(){A(g(E()))}var P=!1;function A(t){if(P)P=!1,T();else{M.confirmTransitionTo(t,"POP",u,(function(e){e?T({action:"POP",location:t}):function(t){var e=U.location,n=z.indexOf(e.key);-1===n&&(n=0);var r=z.indexOf(t.key);-1===r&&(r=0);var o=n-r;o&&(P=!0,R(o))}(t)}))}}var O=g(E()),z=[O.key];function j(t){return p+y(t)}function R(t){n.go(t)}var D=0;function L(t){1===(D+=t)&&1===t?(window.addEventListener("popstate",C),o&&window.addEventListener("hashchange",N)):0===D&&(window.removeEventListener("popstate",C),o&&window.removeEventListener("hashchange",N))}var I=!1;var U={length:n.length,action:"POP",location:O,createHref:j,push:function(t,e){var o=x(t,e,S(),U.location);M.confirmTransitionTo(o,"PUSH",u,(function(t){if(t){var e=j(o),i=o.key,a=o.state;if(r)if(n.pushState({key:i,state:a},null,e),l)window.location.href=e;else{var c=z.indexOf(U.location.key),u=z.slice(0,c+1);u.push(o.key),z=u,T({action:"PUSH",location:o})}else window.location.href=e}}))},replace:function(t,e){var o=x(t,e,S(),U.location);M.confirmTransitionTo(o,"REPLACE",u,(function(t){if(t){var e=j(o),i=o.key,a=o.state;if(r)if(n.replaceState({key:i,state:a},null,e),l)window.location.replace(e);else{var c=z.indexOf(U.location.key);-1!==c&&(z[c]=o.key),T({action:"REPLACE",location:o})}else window.location.replace(e)}}))},go:R,goBack:function(){R(-1)},goForward:function(){R(1)},block:function(t){void 0===t&&(t=!1);var e=M.setPrompt(t);return I||(L(1),I=!0),function(){return I&&(I=!1,L(-1)),e()}},listen:function(t){var e=M.appendListener(t);return L(1),function(){L(-1),e()}}};return U}var M={hashbang:{encodePath:function(t){return"!"===t.charAt(0)?t:"!/"+g(t)},decodePath:function(t){return"!"===t.charAt(0)?t.substr(1):t}},noslash:{encodePath:g,decodePath:h},slash:{encodePath:h,decodePath:h}};function T(t){var e=t.indexOf("#");return-1===e?t:t.slice(0,e)}function C(){var t=window.location.href,e=t.indexOf("#");return-1===e?"":t.substring(e+1)}function N(t){window.location.replace(T(window.location.href)+"#"+t)}function P(t){void 0===t&&(t={}),k||m(!1);var e=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),t),r=n.getUserConfirmation,o=void 0===r?_:r,i=n.hashType,a=void 0===i?"slash":i,l=t.basename?v(h(t.basename)):"",c=M[a],u=c.encodePath,f=c.decodePath;function d(){var t=f(C());return l&&(t=b(t,l)),x(t)}var p=w();function g(t){s(U,t),U.length=e.length,p.notifyListeners(U.location,U.action)}var E=!1,S=null;function P(){var t,e,n=C(),r=u(n);if(n!==r)N(r);else{var i=d(),a=U.location;if(!E&&(e=i,(t=a).pathname===e.pathname&&t.search===e.search&&t.hash===e.hash))return;if(S===y(i))return;S=null,function(t){if(E)E=!1,g();else{p.confirmTransitionTo(t,"POP",o,(function(e){e?g({action:"POP",location:t}):function(t){var e=U.location,n=j.lastIndexOf(y(e));-1===n&&(n=0);var r=j.lastIndexOf(y(t));-1===r&&(r=0);var o=n-r;o&&(E=!0,R(o))}(t)}))}}(i)}}var A=C(),O=u(A);A!==O&&N(O);var z=d(),j=[y(z)];function R(t){e.go(t)}var D=0;function L(t){1===(D+=t)&&1===t?window.addEventListener("hashchange",P):0===D&&window.removeEventListener("hashchange",P)}var I=!1;var U={length:e.length,action:"POP",location:z,createHref:function(t){var e=document.querySelector("base"),n="";return e&&e.getAttribute("href")&&(n=T(window.location.href)),n+"#"+u(l+y(t))},push:function(t,e){var n=x(t,void 0,void 0,U.location);p.confirmTransitionTo(n,"PUSH",o,(function(t){if(t){var e=y(n),r=u(l+e);if(C()!==r){S=e,function(t){window.location.hash=t}(r);var o=j.lastIndexOf(y(U.location)),i=j.slice(0,o+1);i.push(e),j=i,g({action:"PUSH",location:n})}else g()}}))},replace:function(t,e){var n=x(t,void 0,void 0,U.location);p.confirmTransitionTo(n,"REPLACE",o,(function(t){if(t){var e=y(n),r=u(l+e);C()!==r&&(S=e,N(r));var o=j.indexOf(y(U.location));-1!==o&&(j[o]=e),g({action:"REPLACE",location:n})}}))},go:R,goBack:function(){R(-1)},goForward:function(){R(1)},block:function(t){void 0===t&&(t=!1);var e=p.setPrompt(t);return I||(L(1),I=!0),function(){return I&&(I=!1,L(-1)),e()}},listen:function(t){var e=p.appendListener(t);return L(1),function(){L(-1),e()}}};return U}function A(t,e,n){return Math.min(Math.max(t,e),n)}function O(t){void 0===t&&(t={});var e=t,n=e.getUserConfirmation,r=e.initialEntries,o=void 0===r?["/"]:r,i=e.initialIndex,a=void 0===i?0:i,l=e.keyLength,c=void 0===l?6:l,u=w();function f(t){s(b,t),b.length=b.entries.length,u.notifyListeners(b.location,b.action)}function d(){return Math.random().toString(36).substr(2,c)}var p=A(a,0,o.length-1),m=o.map((function(t){return x(t,void 0,"string"==typeof t?d():t.key||d())})),h=y;function g(t){var e=A(b.index+t,0,b.entries.length-1),r=b.entries[e];u.confirmTransitionTo(r,"POP",n,(function(t){t?f({action:"POP",location:r,index:e}):f()}))}var b={length:m.length,action:"POP",location:m[p],index:p,entries:m,createHref:h,push:function(t,e){var r=x(t,e,d(),b.location);u.confirmTransitionTo(r,"PUSH",n,(function(t){if(t){var e=b.index+1,n=b.entries.slice(0);n.length>e?n.splice(e,n.length-e,r):n.push(r),f({action:"PUSH",location:r,index:e,entries:n})}}))},replace:function(t,e){var r=x(t,e,d(),b.location);u.confirmTransitionTo(r,"REPLACE",n,(function(t){t&&(b.entries[b.index]=r,f({action:"REPLACE",location:r}))}))},go:g,goBack:function(){g(-1)},goForward:function(){g(1)},canGo:function(t){var e=b.index+t;return e>=0&&e<b.entries.length},block:function(t){return void 0===t&&(t=!1),u.setPrompt(t)},listen:function(t){return u.appendListener(t)}};return b}var z=n(6),j=n.n(z),R=n(16),D=n.n(R);function L(t){var e=[];return{on:function(t){e.push(t)},off:function(t){e=e.filter((function(e){return e!==t}))},get:function(){return t},set:function(n,r){t=n,e.forEach((function(e){return e(t,r)}))}}}var I=o.a.createContext||function(t,e){var n,o,i="__create-react-context-"+D()()+"__",a=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).emitter=L(e.props.value),e}j()(n,t);var r=n.prototype;return r.getChildContext=function(){var t;return(t={})[i]=this.emitter,t},r.componentWillReceiveProps=function(t){if(this.props.value!==t.value){var n,r=this.props.value,o=t.value;((i=r)===(a=o)?0!==i||1/i==1/a:i!=i&&a!=a)?n=0:(n="function"==typeof e?e(r,o):1073741823,0!==(n|=0)&&this.emitter.set(t.value,n))}var i,a},r.render=function(){return this.props.children},n}(r.Component);a.childContextTypes=((n={})[i]=u.a.object.isRequired,n);var l=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).state={value:t.getValue()},t.onUpdate=function(e,n){0!=((0|t.observedBits)&n)&&t.setState({value:t.getValue()})},t}j()(n,e);var r=n.prototype;return r.componentWillReceiveProps=function(t){var e=t.observedBits;this.observedBits=null==e?1073741823:e},r.componentDidMount=function(){this.context[i]&&this.context[i].on(this.onUpdate);var t=this.props.observedBits;this.observedBits=null==t?1073741823:t},r.componentWillUnmount=function(){this.context[i]&&this.context[i].off(this.onUpdate)},r.getValue=function(){return this.context[i]?this.context[i].get():t},r.render=function(){return(t=this.props.children,Array.isArray(t)?t[0]:t)(this.state.value);var t},n}(r.Component);return l.contextTypes=((o={})[i]=u.a.object,o),{Provider:a,Consumer:l}},U=n(18),F=n.n(U);n(25);function B(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}n(36);var q=function(t){var e=I();return e.displayName=t,e}("Router"),H=function(t){function e(e){var n;return(n=t.call(this,e)||this).state={location:e.history.location},n._isMounted=!1,n._pendingLocation=null,e.staticContext||(n.unlisten=e.history.listen((function(t){n._isMounted?n.setState({location:t}):n._pendingLocation=t}))),n}l(e,t),e.computeRootMatch=function(t){return{path:"/",url:"/",params:{},isExact:"/"===t}};var n=e.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return o.a.createElement(q.Provider,{children:this.props.children||null,value:{history:this.props.history,location:this.state.location,match:e.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}})},e}(o.a.Component);o.a.Component;o.a.Component;var W={},$=0;function V(t,e){void 0===e&&(e={}),("string"==typeof e||Array.isArray(e))&&(e={path:e});var n=e,r=n.path,o=n.exact,i=void 0!==o&&o,a=n.strict,l=void 0!==a&&a,c=n.sensitive,u=void 0!==c&&c;return[].concat(r).reduce((function(e,n){if(!n&&""!==n)return null;if(e)return e;var r=function(t,e){var n=""+e.end+e.strict+e.sensitive,r=W[n]||(W[n]={});if(r[t])return r[t];var o=[],i={regexp:F()(t,o,e),keys:o};return $<1e4&&(r[t]=i,$++),i}(n,{end:i,strict:l,sensitive:u}),o=r.regexp,a=r.keys,c=o.exec(t);if(!c)return null;var s=c[0],f=c.slice(1),d=t===s;return i&&!d?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:d,params:a.reduce((function(t,e,n){return t[e.name]=f[n],t}),{})}}),null)}var Y=function(t){function e(){return t.apply(this,arguments)||this}return l(e,t),e.prototype.render=function(){var t=this;return o.a.createElement(q.Consumer,null,(function(e){e||m(!1);var n=t.props.location||e.location,r=s({},e,{location:n,match:t.props.computedMatch?t.props.computedMatch:t.props.path?V(n.pathname,t.props):e.match}),i=t.props,a=i.children,l=i.component,c=i.render;return Array.isArray(a)&&0===a.length&&(a=null),o.a.createElement(q.Provider,{value:r},r.match?a?"function"==typeof a?a(r):a:l?o.a.createElement(l,r):c?c(r):null:"function"==typeof a?a(r):null)}))},e}(o.a.Component);function G(t){return"/"===t.charAt(0)?t:"/"+t}function Q(t,e){if(!t)return e;var n=G(t);return 0!==e.pathname.indexOf(n)?e:s({},e,{pathname:e.pathname.substr(n.length)})}function X(t){return"string"==typeof t?t:y(t)}function K(t){return function(){m(!1)}}function J(){}o.a.Component;o.a.Component;o.a.useContext;var Z=function(t){function e(){for(var e,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(e=t.call.apply(t,[this].concat(r))||this).history=S(e.props),e}return l(e,t),e.prototype.render=function(){return o.a.createElement(H,{history:this.history,children:this.props.children})},e}(o.a.Component);o.a.Component;var tt=function(t,e){return"function"==typeof t?t(e):t},et=function(t,e){return"string"==typeof t?x(t,null,null,e):t},nt=function(t){return t},rt=o.a.forwardRef;void 0===rt&&(rt=nt);var ot=rt((function(t,e){var n=t.innerRef,r=t.navigate,i=t.onClick,a=B(t,["innerRef","navigate","onClick"]),l=a.target,c=s({},a,{onClick:function(t){try{i&&i(t)}catch(e){throw t.preventDefault(),e}t.defaultPrevented||0!==t.button||l&&"_self"!==l||function(t){return!!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)}(t)||(t.preventDefault(),r())}});return c.ref=nt!==rt&&e||n,o.a.createElement("a",c)}));var it=rt((function(t,e){var n=t.component,r=void 0===n?ot:n,i=t.replace,a=t.to,l=t.innerRef,c=B(t,["component","replace","to","innerRef"]);return o.a.createElement(q.Consumer,null,(function(t){t||m(!1);var n=t.history,u=et(tt(a,t.location),t.location),f=u?n.createHref(u):"",d=s({},c,{href:f,navigate:function(){var e=tt(a,t.location);(i?n.replace:n.push)(e)}});return nt!==rt?d.ref=e||l:d.innerRef=l,o.a.createElement(r,d)}))})),at=function(t){return t},lt=o.a.forwardRef;void 0===lt&&(lt=at);lt((function(t,e){var n=t["aria-current"],r=void 0===n?"page":n,i=t.activeClassName,a=void 0===i?"active":i,l=t.activeStyle,c=t.className,u=t.exact,f=t.isActive,d=t.location,p=t.strict,h=t.style,g=t.to,b=t.innerRef,v=B(t,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","strict","style","to","innerRef"]);return o.a.createElement(q.Consumer,null,(function(t){t||m(!1);var n=d||t.location,i=et(tt(g,n),n),y=i.pathname,x=y&&y.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),w=x?V(n.pathname,{path:x,exact:u,strict:p}):null,k=!!(f?f(w,n):w),_=k?function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return e.filter((function(t){return t})).join(" ")}(c,a):c,E=k?s({},h,{},l):h,S=s({"aria-current":k&&r||null,className:_,style:E,to:i},v);return at!==lt?S.ref=e||b:S.innerRef=b,o.a.createElement(it,S)}))}));function ct(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}var ut,st=n(2),ft=n.n(st),dt=o.a.createContext({});function pt(t){document.body.style.paddingRight=t>0?t+"px":null}function mt(){var t=function(){var t=document.createElement("div");t.style.position="absolute",t.style.top="-9999px",t.style.width="50px",t.style.height="50px",t.style.overflow="scroll",document.body.appendChild(t);var e=t.offsetWidth-t.clientWidth;return document.body.removeChild(t),e}(),e=document.querySelectorAll(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top")[0],n=e?parseInt(e.style.paddingRight||0,10):0;document.body.clientWidth<window.innerWidth&&pt(n+t)}function ht(t,e){return void 0===t&&(t=""),void 0===e&&(e=ut),e?t.split(" ").map((function(t){return e[t]||t})).join(" "):t}function gt(t,e){var n={};return Object.keys(t).forEach((function(r){-1===e.indexOf(r)&&(n[r]=t[r])})),n}var bt={};function vt(t){bt[t]||("undefined"!=typeof console&&console.error(t),bt[t]=!0)}var yt="object"==typeof window&&window.Element||function(){};u.a.oneOfType([u.a.string,u.a.func,function(t,e,n){if(!(t[e]instanceof yt))return new Error("Invalid prop `"+e+"` supplied to `"+n+"`. Expected prop to be an instance of Element. Validation failed.")},u.a.shape({current:u.a.any})]);var xt=u.a.oneOfType([u.a.func,u.a.string,u.a.shape({$$typeof:u.a.symbol,render:u.a.func}),u.a.arrayOf(u.a.oneOfType([u.a.func,u.a.string,u.a.shape({$$typeof:u.a.symbol,render:u.a.func})]))]),wt=150,kt=300,_t=["in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","onEnter","onEntering","onEntered","onExit","onExiting","onExited"],Et={esc:27,space:32,enter:13,tab:9,up:38,down:40,home:36,end:35,n:78,p:80},St=!("undefined"==typeof window||!window.document||!window.document.createElement);function Mt(t){var e=typeof t;return null!=t&&("object"===e||"function"===e)}var Tt=["a[href]","area[href]","input:not([disabled]):not([type=hidden])","select:not([disabled])","textarea:not([disabled])","button:not([disabled])","object","embed","[tabindex]:not(.modal)","audio[controls]","video[controls]",'[contenteditable]:not([contenteditable="false"])'],Ct={children:u.a.node,active:u.a.bool,disabled:u.a.bool,divider:u.a.bool,tag:xt,header:u.a.bool,onClick:u.a.func,className:u.a.string,cssModule:u.a.object,toggle:u.a.bool},Nt=function(t){function e(e){var n;return(n=t.call(this,e)||this).onClick=n.onClick.bind(ct(n)),n.getTabIndex=n.getTabIndex.bind(ct(n)),n}l(e,t);var n=e.prototype;return n.onClick=function(t){this.props.disabled||this.props.header||this.props.divider?t.preventDefault():(this.props.onClick&&this.props.onClick(t),this.props.toggle&&this.context.toggle(t))},n.getTabIndex=function(){return this.props.disabled||this.props.header||this.props.divider?"-1":"0"},n.render=function(){var t=this.getTabIndex(),e=t>-1?"menuitem":void 0,n=gt(this.props,["toggle"]),r=n.className,i=n.cssModule,a=n.divider,l=n.tag,c=n.header,u=n.active,f=B(n,["className","cssModule","divider","tag","header","active"]),d=ht(ft()(r,{disabled:f.disabled,"dropdown-item":!a&&!c,active:u,"dropdown-header":c,"dropdown-divider":a}),i);return"button"===l&&(c?l="h6":a?l="div":f.href&&(l="a")),o.a.createElement(l,s({type:"button"===l&&(f.onClick||this.props.toggle)?"button":void 0},f,{tabIndex:t,role:e,className:d,onClick:this.onClick}))},e}(o.a.Component);Nt.propTypes=Ct,Nt.defaultProps={tag:"button",toggle:!0},Nt.contextType=dt;var Pt=Nt,At={tag:xt,fluid:u.a.oneOfType([u.a.bool,u.a.string]),className:u.a.string,cssModule:u.a.object},Ot=function(t){var e=t.className,n=t.cssModule,r=t.fluid,i=t.tag,a=B(t,["className","cssModule","fluid","tag"]),l="container";!0===r?l="container-fluid":r&&(l="container-"+r);var c=ht(ft()(e,l),n);return o.a.createElement(i,s({},a,{className:c}))};Ot.propTypes=At,Ot.defaultProps={tag:"div"};var zt=Ot,jt=u.a.oneOfType([u.a.number,u.a.string]),Rt={tag:xt,noGutters:u.a.bool,className:u.a.string,cssModule:u.a.object,form:u.a.bool,xs:jt,sm:jt,md:jt,lg:jt,xl:jt},Dt={tag:"div",widths:["xs","sm","md","lg","xl"]},Lt=function(t){var e=t.className,n=t.cssModule,r=t.noGutters,i=t.tag,a=t.form,l=t.widths,c=B(t,["className","cssModule","noGutters","tag","form","widths"]),u=[];l.forEach((function(e,n){var r=t[e];if(delete c[e],r){var o=!n;u.push(o?"row-cols-"+r:"row-cols-"+e+"-"+r)}}));var f=ht(ft()(e,r?"no-gutters":null,a?"form-row":"row",u),n);return o.a.createElement(i,s({},c,{className:f}))};Lt.propTypes=Rt,Lt.defaultProps=Dt;var It=Lt,Ut=u.a.oneOfType([u.a.number,u.a.string]),Ft=u.a.oneOfType([u.a.bool,u.a.number,u.a.string,u.a.shape({size:u.a.oneOfType([u.a.bool,u.a.number,u.a.string]),order:Ut,offset:Ut})]),Bt={tag:xt,xs:Ft,sm:Ft,md:Ft,lg:Ft,xl:Ft,className:u.a.string,cssModule:u.a.object,widths:u.a.array},qt={tag:"div",widths:["xs","sm","md","lg","xl"]},Ht=function(t,e,n){return!0===n||""===n?t?"col":"col-"+e:"auto"===n?t?"col-auto":"col-"+e+"-auto":t?"col-"+n:"col-"+e+"-"+n},Wt=function(t){var e=t.className,n=t.cssModule,r=t.widths,i=t.tag,a=B(t,["className","cssModule","widths","tag"]),l=[];r.forEach((function(e,r){var o=t[e];if(delete a[e],o||""===o){var i=!r;if(Mt(o)){var c,u=i?"-":"-"+e+"-",s=Ht(i,e,o.size);l.push(ht(ft()(((c={})[s]=o.size||""===o.size,c["order"+u+o.order]=o.order||0===o.order,c["offset"+u+o.offset]=o.offset||0===o.offset,c)),n))}else{var f=Ht(i,e,o);l.push(f)}}})),l.length||l.push("col");var c=ht(ft()(e,l),n);return o.a.createElement(i,s({},a,{className:c}))};Wt.propTypes=Bt,Wt.defaultProps=qt;var $t=Wt,Vt={active:u.a.bool,"aria-label":u.a.string,block:u.a.bool,color:u.a.string,disabled:u.a.bool,outline:u.a.bool,tag:xt,innerRef:u.a.oneOfType([u.a.object,u.a.func,u.a.string]),onClick:u.a.func,size:u.a.string,children:u.a.node,className:u.a.string,cssModule:u.a.object,close:u.a.bool},Yt=function(t){function e(e){var n;return(n=t.call(this,e)||this).onClick=n.onClick.bind(ct(n)),n}l(e,t);var n=e.prototype;return n.onClick=function(t){this.props.disabled?t.preventDefault():this.props.onClick&&this.props.onClick(t)},n.render=function(){var t=this.props,e=t.active,n=t["aria-label"],r=t.block,i=t.className,a=t.close,l=t.cssModule,c=t.color,u=t.outline,f=t.size,d=t.tag,p=t.innerRef,m=B(t,["active","aria-label","block","className","close","cssModule","color","outline","size","tag","innerRef"]);a&&void 0===m.children&&(m.children=o.a.createElement("span",{"aria-hidden":!0},"×"));var h="btn"+(u?"-outline":"")+"-"+c,g=ht(ft()(i,{close:a},a||"btn",a||h,!!f&&"btn-"+f,!!r&&"btn-block",{active:e,disabled:this.props.disabled}),l);m.href&&"button"===d&&(d="a");var b=a?"Close":null;return o.a.createElement(d,s({type:"button"===d&&m.onClick?"button":void 0},m,{className:g,ref:p,onClick:this.onClick,"aria-label":n||b}))},e}(o.a.Component);Yt.propTypes=Vt,Yt.defaultProps={color:"secondary",tag:"button"};var Gt=Yt,Qt=n(3),Xt=n.n(Qt),Kt=n(4),Jt=n.n(Kt),Zt=n(19),te=n.n(Zt),ee=te()(),ne=te()(),re=function(t){function e(){for(var e,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return e=t.call.apply(t,[this].concat(r))||this,Jt()(Xt()(e),"referenceNode",void 0),Jt()(Xt()(e),"setReferenceNode",(function(t){t&&e.referenceNode!==t&&(e.referenceNode=t,e.forceUpdate())})),e}j()(e,t);var n=e.prototype;return n.componentWillUnmount=function(){this.referenceNode=null},n.render=function(){return r.createElement(ee.Provider,{value:this.referenceNode},r.createElement(ne.Provider,{value:this.setReferenceNode},this.props.children))},e}(r.Component),oe={a11y:u.a.bool,disabled:u.a.bool,direction:u.a.oneOf(["up","down","left","right"]),group:u.a.bool,isOpen:u.a.bool,nav:u.a.bool,active:u.a.bool,addonType:u.a.oneOfType([u.a.bool,u.a.oneOf(["prepend","append"])]),size:u.a.string,tag:xt,toggle:u.a.func,children:u.a.node,className:u.a.string,cssModule:u.a.object,inNavbar:u.a.bool,setActiveFromChild:u.a.bool},ie=[Et.space,Et.enter,Et.up,Et.down,Et.end,Et.home],ae=function(t){function e(e){var n;return(n=t.call(this,e)||this).addEvents=n.addEvents.bind(ct(n)),n.handleDocumentClick=n.handleDocumentClick.bind(ct(n)),n.handleKeyDown=n.handleKeyDown.bind(ct(n)),n.removeEvents=n.removeEvents.bind(ct(n)),n.toggle=n.toggle.bind(ct(n)),n.containerRef=o.a.createRef(),n}l(e,t);var n=e.prototype;return n.getContextValue=function(){return{toggle:this.toggle,isOpen:this.props.isOpen,direction:"down"===this.props.direction&&this.props.dropup?"up":this.props.direction,inNavbar:this.props.inNavbar,disabled:this.props.disabled}},n.componentDidMount=function(){this.handleProps()},n.componentDidUpdate=function(t){this.props.isOpen!==t.isOpen&&this.handleProps()},n.componentWillUnmount=function(){this.removeEvents()},n.getContainer=function(){return this.containerRef.current},n.getMenuCtrl=function(){return this._$menuCtrl?this._$menuCtrl:(this._$menuCtrl=this.getContainer().querySelector("[aria-expanded]"),this._$menuCtrl)},n.getMenuItems=function(){return[].slice.call(this.getContainer().querySelectorAll('[role="menuitem"]'))},n.addEvents=function(){var t=this;["click","touchstart","keyup"].forEach((function(e){return document.addEventListener(e,t.handleDocumentClick,!0)}))},n.removeEvents=function(){var t=this;["click","touchstart","keyup"].forEach((function(e){return document.removeEventListener(e,t.handleDocumentClick,!0)}))},n.handleDocumentClick=function(t){if(!t||3!==t.which&&("keyup"!==t.type||t.which===Et.tab)){var e=this.getContainer();(!e.contains(t.target)||e===t.target||"keyup"===t.type&&t.which!==Et.tab)&&this.toggle(t)}},n.handleKeyDown=function(t){var e=this;if(!/input|textarea/i.test(t.target.tagName)&&(Et.tab!==t.which||"menuitem"===t.target.getAttribute("role")&&this.props.a11y)&&((-1!==ie.indexOf(t.which)||t.which>=48&&t.which<=90)&&t.preventDefault(),!this.props.disabled&&(this.getMenuCtrl()===t.target&&(!this.props.isOpen&&[Et.space,Et.enter,Et.up,Et.down].indexOf(t.which)>-1?(this.toggle(t),setTimeout((function(){return e.getMenuItems()[0].focus()}))):this.props.isOpen&&t.which===Et.esc&&this.toggle(t)),this.props.isOpen&&"menuitem"===t.target.getAttribute("role"))))if([Et.tab,Et.esc].indexOf(t.which)>-1)this.toggle(t),this.getMenuCtrl().focus();else if([Et.space,Et.enter].indexOf(t.which)>-1)t.target.click(),this.getMenuCtrl().focus();else if([Et.down,Et.up].indexOf(t.which)>-1||[Et.n,Et.p].indexOf(t.which)>-1&&t.ctrlKey){var n=this.getMenuItems(),r=n.indexOf(t.target);Et.up===t.which||Et.p===t.which&&t.ctrlKey?r=0!==r?r-1:n.length-1:(Et.down===t.which||Et.n===t.which&&t.ctrlKey)&&(r=r===n.length-1?0:r+1),n[r].focus()}else if(Et.end===t.which){var o=this.getMenuItems();o[o.length-1].focus()}else if(Et.home===t.which){this.getMenuItems()[0].focus()}else if(t.which>=48&&t.which<=90)for(var i=this.getMenuItems(),a=String.fromCharCode(t.which).toLowerCase(),l=0;l<i.length;l+=1){if((i[l].textContent&&i[l].textContent[0].toLowerCase())===a){i[l].focus();break}}},n.handleProps=function(){this.props.isOpen?this.addEvents():this.removeEvents()},n.toggle=function(t){return this.props.disabled?t&&t.preventDefault():this.props.toggle(t)},n.render=function(){var t,e,n=gt(this.props,["toggle","disabled","inNavbar","a11y"]),r=n.className,i=n.cssModule,a=n.direction,l=n.isOpen,c=n.group,u=n.size,f=n.nav,d=n.setActiveFromChild,p=n.active,m=n.addonType,h=n.tag,g=B(n,["className","cssModule","direction","isOpen","group","size","nav","setActiveFromChild","active","addonType","tag"]),b=h||(f?"li":"div"),v=!1;d&&o.a.Children.map(this.props.children[1].props.children,(function(t){t&&t.props.active&&(v=!0)}));var y=ht(ft()(r,"down"!==a&&"drop"+a,!(!f||!p)&&"active",!(!d||!v)&&"active",((t={})["input-group-"+m]=m,t["btn-group"]=c,t["btn-group-"+u]=!!u,t.dropdown=!c&&!m,t.show=l,t["nav-item"]=f,t)),i);return o.a.createElement(dt.Provider,{value:this.getContextValue()},o.a.createElement(re,null,o.a.createElement(b,s({},g,((e={})["string"==typeof b?"ref":"innerRef"]=this.containerRef,e),{onKeyDown:this.handleKeyDown,className:y}))))},e}(o.a.Component);ae.propTypes=oe,ae.defaultProps={a11y:!0,isOpen:!1,direction:"down",nav:!1,active:!1,addonType:!1,inNavbar:!1,setActiveFromChild:!1};var le=ae,ce={children:u.a.node},ue=function(t){return o.a.createElement(le,s({group:!0},t))};ue.propTypes=ce;var se=ue,fe=n(9),de=n.n(fe),pe=n(17),me=n.n(pe),he=function(t){return Array.isArray(t)?t[0]:t},ge=function(t){if("function"==typeof t){for(var e=arguments.length,n=new Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];return t.apply(void 0,n)}},be=function(t,e){if("function"==typeof t)return ge(t,e);null!=t&&(t.current=e)},ve=function(t){function e(){for(var e,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return e=t.call.apply(t,[this].concat(r))||this,Jt()(Xt()(e),"refHandler",(function(t){be(e.props.innerRef,t),ge(e.props.setReferenceNode,t)})),e}j()(e,t);var n=e.prototype;return n.componentWillUnmount=function(){be(this.props.innerRef,null)},n.render=function(){return me()(Boolean(this.props.setReferenceNode),"`Reference` should not be used outside of a `Manager` component."),he(this.props.children)({ref:this.refHandler})},e}(r.Component);function ye(t){return r.createElement(ne.Consumer,null,(function(e){return r.createElement(ve,de()({setReferenceNode:e},t))}))}var xe={caret:u.a.bool,color:u.a.string,children:u.a.node,className:u.a.string,cssModule:u.a.object,disabled:u.a.bool,onClick:u.a.func,"aria-haspopup":u.a.bool,split:u.a.bool,tag:xt,nav:u.a.bool},we=function(t){function e(e){var n;return(n=t.call(this,e)||this).onClick=n.onClick.bind(ct(n)),n}l(e,t);var n=e.prototype;return n.onClick=function(t){this.props.disabled||this.context.disabled?t.preventDefault():(this.props.nav&&!this.props.tag&&t.preventDefault(),this.props.onClick&&this.props.onClick(t),this.context.toggle(t))},n.render=function(){var t,e=this,n=this.props,r=n.className,i=n.color,a=n.cssModule,l=n.caret,c=n.split,u=n.nav,f=n.tag,d=n.innerRef,p=B(n,["className","color","cssModule","caret","split","nav","tag","innerRef"]),m=p["aria-label"]||"Toggle Dropdown",h=ht(ft()(r,{"dropdown-toggle":l||c,"dropdown-toggle-split":c,"nav-link":u}),a),g=p.children||o.a.createElement("span",{className:"sr-only"},m);return u&&!f?(t="a",p.href="#"):f?t=f:(t=Gt,p.color=i,p.cssModule=a),this.context.inNavbar?o.a.createElement(t,s({},p,{className:h,onClick:this.onClick,"aria-expanded":this.context.isOpen,children:g})):o.a.createElement(ye,{innerRef:d},(function(n){var r,i=n.ref;return o.a.createElement(t,s({},p,((r={})["string"==typeof t?"ref":"innerRef"]=i,r),{className:h,onClick:e.onClick,"aria-expanded":e.context.isOpen,children:g}))}))},e}(o.a.Component);we.propTypes=xe,we.defaultProps={"aria-haspopup":!0,color:"secondary"},we.contextType=dt;var ke=we;function _e(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Ee(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?Object(arguments[e]):{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable})))),r.forEach((function(e){_e(t,e,n[e])}))}return t}var Se=n(37),Me=n.n(Se),Te=n(38),Ce=n.n(Te),Ne=n(20),Pe={position:"absolute",top:0,left:0,opacity:0,pointerEvents:"none"},Ae={},Oe=function(t){function e(){for(var e,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return e=t.call.apply(t,[this].concat(r))||this,Jt()(Xt()(e),"state",{data:void 0,placement:void 0}),Jt()(Xt()(e),"popperInstance",void 0),Jt()(Xt()(e),"popperNode",null),Jt()(Xt()(e),"arrowNode",null),Jt()(Xt()(e),"setPopperNode",(function(t){t&&e.popperNode!==t&&(be(e.props.innerRef,t),e.popperNode=t,e.updatePopperInstance())})),Jt()(Xt()(e),"setArrowNode",(function(t){e.arrowNode=t})),Jt()(Xt()(e),"updateStateModifier",{enabled:!0,order:900,fn:function(t){var n=t.placement;return e.setState({data:t,placement:n}),t}}),Jt()(Xt()(e),"getOptions",(function(){return{placement:e.props.placement,eventsEnabled:e.props.eventsEnabled,positionFixed:e.props.positionFixed,modifiers:de()({},e.props.modifiers,{arrow:de()({},e.props.modifiers&&e.props.modifiers.arrow,{enabled:!!e.arrowNode,element:e.arrowNode}),applyStyle:{enabled:!1},updateStateModifier:e.updateStateModifier})}})),Jt()(Xt()(e),"getPopperStyle",(function(){return e.popperNode&&e.state.data?de()({position:e.state.data.offsets.popper.position},e.state.data.styles):Pe})),Jt()(Xt()(e),"getPopperPlacement",(function(){return e.state.data?e.state.placement:void 0})),Jt()(Xt()(e),"getArrowStyle",(function(){return e.arrowNode&&e.state.data?e.state.data.arrowStyles:Ae})),Jt()(Xt()(e),"getOutOfBoundariesState",(function(){return e.state.data?e.state.data.hide:void 0})),Jt()(Xt()(e),"destroyPopperInstance",(function(){e.popperInstance&&(e.popperInstance.destroy(),e.popperInstance=null)})),Jt()(Xt()(e),"updatePopperInstance",(function(){e.destroyPopperInstance();var t=Xt()(e).popperNode,n=e.props.referenceElement;n&&t&&(e.popperInstance=new Ne.a(n,t,e.getOptions()))})),Jt()(Xt()(e),"scheduleUpdate",(function(){e.popperInstance&&e.popperInstance.scheduleUpdate()})),e}j()(e,t);var n=e.prototype;return n.componentDidUpdate=function(t,e){this.props.placement===t.placement&&this.props.referenceElement===t.referenceElement&&this.props.positionFixed===t.positionFixed&&Ce()(this.props.modifiers,t.modifiers,{strict:!0})?this.props.eventsEnabled!==t.eventsEnabled&&this.popperInstance&&(this.props.eventsEnabled?this.popperInstance.enableEventListeners():this.popperInstance.disableEventListeners()):this.updatePopperInstance(),e.placement!==this.state.placement&&this.scheduleUpdate()},n.componentWillUnmount=function(){be(this.props.innerRef,null),this.destroyPopperInstance()},n.render=function(){return he(this.props.children)({ref:this.setPopperNode,style:this.getPopperStyle(),placement:this.getPopperPlacement(),outOfBoundaries:this.getOutOfBoundariesState(),scheduleUpdate:this.scheduleUpdate,arrowProps:{ref:this.setArrowNode,style:this.getArrowStyle()}})},e}(r.Component);Jt()(Oe,"defaultProps",{placement:"bottom",eventsEnabled:!0,referenceElement:void 0,positionFixed:!1});Ne.a.placements;function ze(t){var e=t.referenceElement,n=Me()(t,["referenceElement"]);return r.createElement(ee.Consumer,null,(function(t){return r.createElement(Oe,de()({referenceElement:void 0!==e?e:t},n))}))}var je={tag:xt,children:u.a.node.isRequired,right:u.a.bool,flip:u.a.bool,modifiers:u.a.object,className:u.a.string,cssModule:u.a.object,persist:u.a.bool,positionFixed:u.a.bool},Re={flip:{enabled:!1}},De={up:"top",left:"left",right:"right",down:"bottom"},Le=function(t){function e(){return t.apply(this,arguments)||this}return l(e,t),e.prototype.render=function(){var t=this,e=this.props,n=e.className,r=e.cssModule,i=e.right,a=e.tag,l=e.flip,c=e.modifiers,u=e.persist,f=e.positionFixed,d=B(e,["className","cssModule","right","tag","flip","modifiers","persist","positionFixed"]),p=ht(ft()(n,"dropdown-menu",{"dropdown-menu-right":i,show:this.context.isOpen}),r),m=a;if(u||this.context.isOpen&&!this.context.inNavbar){var h=(De[this.context.direction]||"bottom")+"-"+(i?"end":"start"),g=l?c:Ee({},c,{},Re),b=!!f;return o.a.createElement(ze,{placement:h,modifiers:g,positionFixed:b},(function(e){var n=e.ref,r=e.style,i=e.placement;return o.a.createElement(m,s({tabIndex:"-1",role:"menu",ref:n,style:r},d,{"aria-hidden":!t.context.isOpen,className:p,"x-placement":i}))}))}return o.a.createElement(m,s({tabIndex:"-1",role:"menu"},d,{"aria-hidden":!this.context.isOpen,className:p,"x-placement":d.placement}))},e}(o.a.Component);Le.propTypes=je,Le.defaultProps={tag:"div",flip:!0},Le.contextType=dt;var Ie=Le,Ue=(n(12),n(35)),Fe=n.n(Ue);function Be(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(!(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=t[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==l.return||l.return()}finally{if(o)throw i}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var qe=Object(r.createContext)();function He(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(!(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=t[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==l.return||l.return()}finally{if(o)throw i}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var We=function(t){var e=He(Object(r.useState)(!1),2),n=e[0],i=e[1],a=He(Object(r.useState)([]),2),l=a[0],c=a[1],u=He(Object(r.useState)(!1),2),s=u[0],f=u[1],d=Object(r.useContext)(qe),p=d.project;d.updateProject,p.projects||t.history.push("/");var m=He(Object(r.useState)(""),2),h=m[0],g=m[1];Object(r.useEffect)((function(){s||(fetch("".concat(p.projects,"/parsedData.json")).then((function(t){return t.json()})).then((function(t){c(t)})).catch((function(t){return console.log(t)})),f(!0))}),[p]);var b=[],v=function(t){b.push(o.a.createElement(Pt,{key:t,onClick:function(){return g(t)}},t))};for(var y in l)v(y);return o.a.createElement("div",{id:"UserDashboard"},o.a.createElement(zt,null,o.a.createElement(It,{xs:"1"},o.a.createElement($t,{xs:"6"},o.a.createElement(it,{id:"navProjLink",to:"/"},o.a.createElement(Gt,{color:"secondary",id:"navProjSelect",block:!0},"Project Select"))),o.a.createElement($t,{xs:"6"},o.a.createElement(it,{id:"navConfigLink",to:"/configDash"},o.a.createElement(Gt,{id:"navConfigDash",color:"secondary",block:!0},"Config Dashboard"))))),o.a.createElement("h1",null," User Dashboard "),o.a.createElement("div",{className:"categoriesDrop"},o.a.createElement(se,{isOpen:n,toggle:function(){i(!n)}},o.a.createElement(ke,{caret:!0,color:"primary"},"Categories:"),o.a.createElement(Ie,null,b))),o.a.createElement("div",{id:"chartArea"},o.a.createElement(Fe.a,{dataCat:l[h]})))},$e={children:u.a.node,inline:u.a.bool,tag:xt,innerRef:u.a.oneOfType([u.a.object,u.a.func,u.a.string]),className:u.a.string,cssModule:u.a.object},Ve=function(t){function e(e){var n;return(n=t.call(this,e)||this).getRef=n.getRef.bind(ct(n)),n.submit=n.submit.bind(ct(n)),n}l(e,t);var n=e.prototype;return n.getRef=function(t){this.props.innerRef&&this.props.innerRef(t),this.ref=t},n.submit=function(){this.ref&&this.ref.submit()},n.render=function(){var t=this.props,e=t.className,n=t.cssModule,r=t.inline,i=t.tag,a=t.innerRef,l=B(t,["className","cssModule","inline","tag","innerRef"]),c=ht(ft()(e,!!r&&"form-inline"),n);return o.a.createElement(i,s({},l,{ref:a,className:c}))},e}(r.Component);Ve.propTypes=$e,Ve.defaultProps={tag:"form"};var Ye=Ve,Ge={children:u.a.node,row:u.a.bool,check:u.a.bool,inline:u.a.bool,disabled:u.a.bool,tag:xt,className:u.a.string,cssModule:u.a.object},Qe=function(t){var e=t.className,n=t.cssModule,r=t.row,i=t.disabled,a=t.check,l=t.inline,c=t.tag,u=B(t,["className","cssModule","row","disabled","check","inline","tag"]),f=ht(ft()(e,!!r&&"row",a?"form-check":"form-group",!(!a||!l)&&"form-check-inline",!(!a||!i)&&"disabled"),n);return"fieldset"===c&&(u.disabled=i),o.a.createElement(c,s({},u,{className:f}))};Qe.propTypes=Ge,Qe.defaultProps={tag:"div"};var Xe=Qe,Ke=u.a.oneOfType([u.a.number,u.a.string]),Je=u.a.oneOfType([u.a.string,u.a.number,u.a.shape({size:Ke,order:Ke,offset:Ke})]),Ze={children:u.a.node,hidden:u.a.bool,check:u.a.bool,size:u.a.string,for:u.a.string,tag:xt,className:u.a.string,cssModule:u.a.object,xs:Je,sm:Je,md:Je,lg:Je,xl:Je,widths:u.a.array},tn={tag:"label",widths:["xs","sm","md","lg","xl"]},en=function(t,e,n){return!0===n||""===n?t?"col":"col-"+e:"auto"===n?t?"col-auto":"col-"+e+"-auto":t?"col-"+n:"col-"+e+"-"+n},nn=function(t){var e=t.className,n=t.cssModule,r=t.hidden,i=t.widths,a=t.tag,l=t.check,c=t.size,u=t.for,f=B(t,["className","cssModule","hidden","widths","tag","check","size","for"]),d=[];i.forEach((function(e,r){var o=t[e];if(delete f[e],o||""===o){var i,a=!r;if(Mt(o)){var l,c=a?"-":"-"+e+"-";i=en(a,e,o.size),d.push(ht(ft()(((l={})[i]=o.size||""===o.size,l["order"+c+o.order]=o.order||0===o.order,l["offset"+c+o.offset]=o.offset||0===o.offset,l))),n)}else i=en(a,e,o),d.push(i)}}));var p=ht(ft()(e,!!r&&"sr-only",!!l&&"form-check-label",!!c&&"col-form-label-"+c,d,!!d.length&&"col-form-label"),n);return o.a.createElement(a,s({htmlFor:u},f,{className:p}))};nn.propTypes=Ze,nn.defaultProps=tn;var rn=nn,on={children:u.a.node,type:u.a.string,size:u.a.string,bsSize:u.a.string,valid:u.a.bool,invalid:u.a.bool,tag:xt,innerRef:u.a.oneOfType([u.a.object,u.a.func,u.a.string]),plaintext:u.a.bool,addon:u.a.bool,className:u.a.string,cssModule:u.a.object},an=function(t){function e(e){var n;return(n=t.call(this,e)||this).getRef=n.getRef.bind(ct(n)),n.focus=n.focus.bind(ct(n)),n}l(e,t);var n=e.prototype;return n.getRef=function(t){this.props.innerRef&&this.props.innerRef(t),this.ref=t},n.focus=function(){this.ref&&this.ref.focus()},n.render=function(){var t=this.props,e=t.className,n=t.cssModule,r=t.type,i=t.bsSize,a=t.valid,l=t.invalid,c=t.tag,u=t.addon,f=t.plaintext,d=t.innerRef,p=B(t,["className","cssModule","type","bsSize","valid","invalid","tag","addon","plaintext","innerRef"]),m=["radio","checkbox"].indexOf(r)>-1,h=new RegExp("\\D","g"),g=c||("select"===r||"textarea"===r?r:"input"),b="form-control";f?(b+="-plaintext",g=c||"input"):"file"===r?b+="-file":m&&(b=u?null:"form-check-input"),p.size&&h.test(p.size)&&(vt('Please use the prop "bsSize" instead of the "size" to bootstrap\'s input sizing.'),i=p.size,delete p.size);var v=ht(ft()(e,l&&"is-invalid",a&&"is-valid",!!i&&"form-control-"+i,b),n);return("input"===g||c&&"function"==typeof c)&&(p.type=r),p.children&&!f&&"select"!==r&&"string"==typeof g&&"select"!==g&&(vt('Input with a type of "'+r+'" cannot have children. Please use "value"/"defaultValue" instead.'),delete p.children),o.a.createElement(g,s({},p,{ref:d,className:v}))},e}(o.a.Component);an.propTypes=on,an.defaultProps={type:"text"};var ln=an,cn=(n(5),{tag:xt,inverse:u.a.bool,color:u.a.string,body:u.a.bool,outline:u.a.bool,className:u.a.string,cssModule:u.a.object,innerRef:u.a.oneOfType([u.a.object,u.a.string,u.a.func])}),un=function(t){var e=t.className,n=t.cssModule,r=t.color,i=t.body,a=t.inverse,l=t.outline,c=t.tag,u=t.innerRef,f=B(t,["className","cssModule","color","body","inverse","outline","tag","innerRef"]),d=ht(ft()(e,"card",!!a&&"text-white",!!i&&"card-body",!!r&&(l?"border":"bg")+"-"+r),n);return o.a.createElement(c,s({},f,{className:d,ref:u}))};un.propTypes=cn,un.defaultProps={tag:"div"};var sn=un,fn={tag:xt,className:u.a.string,cssModule:u.a.object,innerRef:u.a.oneOfType([u.a.object,u.a.string,u.a.func])},dn=function(t){var e=t.className,n=t.cssModule,r=t.innerRef,i=t.tag,a=B(t,["className","cssModule","innerRef","tag"]),l=ht(ft()(e,"card-body"),n);return o.a.createElement(i,s({},a,{className:l,ref:r}))};dn.propTypes=fn,dn.defaultProps={tag:"div"};var pn=dn,mn={tag:xt,className:u.a.string,cssModule:u.a.object},hn=function(t){var e=t.className,n=t.cssModule,r=t.tag,i=B(t,["className","cssModule","tag"]),a=ht(ft()(e,"card-title"),n);return o.a.createElement(r,s({},i,{className:a}))};hn.propTypes=mn,hn.defaultProps={tag:"div"};var gn=hn,bn={tag:xt,className:u.a.string,cssModule:u.a.object},vn=function(t){var e=t.className,n=t.cssModule,r=t.tag,i=B(t,["className","cssModule","tag"]),a=ht(ft()(e,"card-subtitle"),n);return o.a.createElement(r,s({},i,{className:a}))};vn.propTypes=bn,vn.defaultProps={tag:"div"};var yn=vn,xn=(n(64),function(t){return o.a.createElement("div",{key:"".concat(t.id,"-queryItem"),id:"".concat(t.id,"-queryItem")},o.a.createElement("span",{className:"querySpan"},o.a.createElement(ln,{type:"textarea",name:"queryString",id:"".concat(t.id,"-queries"),placeholder:"Input your GraphQL queries",value:t.queryItem,onChange:t.queryChange}),o.a.createElement(Gt,{key:"button-".concat(t.id),className:"deleteBtn",type:"button",size:"sm",id:"".concat(t.id,"-delete"),onClick:t.deleteQuery,color:"secondary"},"X")))}),wn=function(t){for(var e=[],n=0;n<t.queries.length;n+=1)e.push(o.a.createElement(xn,{key:n,id:"".concat(t.name,"-").concat(n),name:"".concat(t.name,"-queryItem"),queryItem:"".concat(t.queries[n]),queryChange:t.queryChange,deleteQuery:t.deleteQuery}));return o.a.createElement("div",null,o.a.createElement(Xe,null,e))},kn=function(t){return o.a.createElement("div",null,o.a.createElement(gn,null,o.a.createElement("h4",null,t.catData.name)),o.a.createElement(yn,null,"Frequency(ms): ",o.a.createElement("br",null)," ",o.a.createElement("div",{id:"freqExamples"},"(ex: 1 sec = 1000; 1 min = 60000; 30 min = 1800000; 1 hour = 3600000; 1 day = 86400000)")),o.a.createElement(ln,{type:"text",name:"frequency",id:"".concat(t.catData.name,"-freq"),placeholder:"Set frequency of query execution",value:t.catData.frequency,onChange:t.freqChange}),o.a.createElement("br",null),o.a.createElement(yn,null,"Queries:"),o.a.createElement(wn,{key:t.catData.name,name:t.catData.name,queries:t.catData.queries,deleteQuery:t.deleteQuery,queryChange:t.queryChange}),o.a.createElement("div",{id:"btnAddQuery"},o.a.createElement(Gt,{className:"addQueryBtn",color:"primary",size:"md",id:"".concat(t.catData.name,"-addQuery"),onClick:t.addQuery,block:!0},"Add Query")))},_n=function(t){var e=[];return function(n){var r=!0,i=!1,a=void 0;try{for(var l,c=n[Symbol.iterator]();!(r=(l=c.next()).done);r=!0){var u=l.value;e.push(o.a.createElement("div",{key:u.name},o.a.createElement(sn,{size:"md",name:u.name},o.a.createElement(pn,null,o.a.createElement(kn,{catData:u,queryChange:t.queryChange,addQuery:t.addQuery,deleteQuery:t.deleteQuery,freqChange:t.freqChange}))),o.a.createElement("br",null),o.a.createElement("br",null)))}}catch(t){i=!0,a=t}finally{try{r||null==c.return||c.return()}finally{if(i)throw a}}}(t.categories),e},En=function(t){var e=[];for(var n in t.configData.categories){var r={};r.name=n,r.queries=t.configData.categories[n].queries,r.frequency=t.configData.categories[n].frequency,e.push(r)}return o.a.createElement("div",{className:"category"},o.a.createElement("div",null,o.a.createElement(_n,{categories:e,configData:t.configData,queryChange:t.queryChange,addQuery:t.addQuery,deleteQuery:t.deleteQuery,freqChange:t.freqChange})),o.a.createElement("input",{type:"text",id:"catInput",placeholder:" Add/Select Category (lower case)",onChange:t.addTypedCat,value:t.typedCat}),o.a.createElement("button",{type:"button",onClick:t.addCategory},"Add Category"),o.a.createElement("button",{type:"button",onClick:t.delCategory},"Delete Category"))},Sn={children:u.a.node.isRequired,node:u.a.any},Mn=function(t){function e(){return t.apply(this,arguments)||this}l(e,t);var n=e.prototype;return n.componentWillUnmount=function(){this.defaultNode&&document.body.removeChild(this.defaultNode),this.defaultNode=null},n.render=function(){return St?(this.props.node||this.defaultNode||(this.defaultNode=document.createElement("div"),document.body.appendChild(this.defaultNode)),a.a.createPortal(this.props.children,this.props.node||this.defaultNode)):null},e}(o.a.Component);Mn.propTypes=Sn;var Tn=Mn,Cn=n(10),Nn=Ee({},Cn.Transition.propTypes,{children:u.a.oneOfType([u.a.arrayOf(u.a.node),u.a.node]),tag:xt,baseClass:u.a.string,baseClassActive:u.a.string,className:u.a.string,cssModule:u.a.object,innerRef:u.a.oneOfType([u.a.object,u.a.string,u.a.func])}),Pn=Ee({},Cn.Transition.defaultProps,{tag:"div",baseClass:"fade",baseClassActive:"show",timeout:wt,appear:!0,enter:!0,exit:!0,in:!0});function An(t){var e=t.tag,n=t.baseClass,r=t.baseClassActive,i=t.className,a=t.cssModule,l=t.children,c=t.innerRef,u=B(t,["tag","baseClass","baseClassActive","className","cssModule","children","innerRef"]),f=function(t,e){for(var n,r=Array.isArray(e)?e:[e],o=r.length,i={};o>0;)i[n=r[o-=1]]=t[n];return i}(u,_t),d=gt(u,_t);return o.a.createElement(Cn.Transition,f,(function(t){var u="entered"===t,f=ht(ft()(i,n,u&&r),a);return o.a.createElement(e,s({className:f},d,{ref:c}),l)}))}An.propTypes=Nn,An.defaultProps=Pn;var On=An;function zn(){}var jn=u.a.shape(On.propTypes),Rn={isOpen:u.a.bool,autoFocus:u.a.bool,centered:u.a.bool,scrollable:u.a.bool,size:u.a.string,toggle:u.a.func,keyboard:u.a.bool,role:u.a.string,labelledBy:u.a.string,backdrop:u.a.oneOfType([u.a.bool,u.a.oneOf(["static"])]),onEnter:u.a.func,onExit:u.a.func,onOpened:u.a.func,onClosed:u.a.func,children:u.a.node,className:u.a.string,wrapClassName:u.a.string,modalClassName:u.a.string,backdropClassName:u.a.string,contentClassName:u.a.string,external:u.a.node,fade:u.a.bool,cssModule:u.a.object,zIndex:u.a.oneOfType([u.a.number,u.a.string]),backdropTransition:jn,modalTransition:jn,innerRef:u.a.oneOfType([u.a.object,u.a.string,u.a.func]),unmountOnClose:u.a.bool,returnFocusAfterClose:u.a.bool},Dn=Object.keys(Rn),Ln={isOpen:!1,autoFocus:!0,centered:!1,scrollable:!1,role:"dialog",backdrop:!0,keyboard:!0,zIndex:1050,fade:!0,onOpened:zn,onClosed:zn,modalTransition:{timeout:kt},backdropTransition:{mountOnEnter:!0,timeout:wt},unmountOnClose:!0,returnFocusAfterClose:!0},In=function(t){function e(e){var n;return(n=t.call(this,e)||this)._element=null,n._originalBodyPadding=null,n.getFocusableChildren=n.getFocusableChildren.bind(ct(n)),n.handleBackdropClick=n.handleBackdropClick.bind(ct(n)),n.handleBackdropMouseDown=n.handleBackdropMouseDown.bind(ct(n)),n.handleEscape=n.handleEscape.bind(ct(n)),n.handleStaticBackdropAnimation=n.handleStaticBackdropAnimation.bind(ct(n)),n.handleTab=n.handleTab.bind(ct(n)),n.onOpened=n.onOpened.bind(ct(n)),n.onClosed=n.onClosed.bind(ct(n)),n.manageFocusAfterClose=n.manageFocusAfterClose.bind(ct(n)),n.clearBackdropAnimationTimeout=n.clearBackdropAnimationTimeout.bind(ct(n)),n.state={isOpen:!1,showStaticBackdropAnimation:!1},n}l(e,t);var n=e.prototype;return n.componentDidMount=function(){var t=this.props,e=t.isOpen,n=t.autoFocus,r=t.onEnter;e&&(this.init(),this.setState({isOpen:!0}),n&&this.setFocus()),r&&r(),this._isMounted=!0},n.componentDidUpdate=function(t,e){if(this.props.isOpen&&!t.isOpen)return this.init(),void this.setState({isOpen:!0});this.props.autoFocus&&this.state.isOpen&&!e.isOpen&&this.setFocus(),this._element&&t.zIndex!==this.props.zIndex&&(this._element.style.zIndex=this.props.zIndex)},n.componentWillUnmount=function(){this.clearBackdropAnimationTimeout(),this.props.onExit&&this.props.onExit(),this._element&&(this.destroy(),this.props.isOpen&&this.close()),this._isMounted=!1},n.onOpened=function(t,e){this.props.onOpened(),(this.props.modalTransition.onEntered||zn)(t,e)},n.onClosed=function(t){var e=this.props.unmountOnClose;this.props.onClosed(),(this.props.modalTransition.onExited||zn)(t),e&&this.destroy(),this.close(),this._isMounted&&this.setState({isOpen:!1})},n.setFocus=function(){this._dialog&&this._dialog.parentNode&&"function"==typeof this._dialog.parentNode.focus&&this._dialog.parentNode.focus()},n.getFocusableChildren=function(){return this._element.querySelectorAll(Tt.join(", "))},n.getFocusedChild=function(){var t,e=this.getFocusableChildren();try{t=document.activeElement}catch(n){t=e[0]}return t},n.handleBackdropClick=function(t){if(t.target===this._mouseDownElement){t.stopPropagation();var e=this._dialog?this._dialog.parentNode:null;if(e&&t.target===e&&"static"===this.props.backdrop&&this.handleStaticBackdropAnimation(),!this.props.isOpen||!0!==this.props.backdrop)return;e&&t.target===e&&this.props.toggle&&this.props.toggle(t)}},n.handleTab=function(t){if(9===t.which){var e=this.getFocusableChildren(),n=e.length;if(0!==n){for(var r=this.getFocusedChild(),o=0,i=0;i<n;i+=1)if(e[i]===r){o=i;break}t.shiftKey&&0===o?(t.preventDefault(),e[n-1].focus()):t.shiftKey||o!==n-1||(t.preventDefault(),e[0].focus())}}},n.handleBackdropMouseDown=function(t){this._mouseDownElement=t.target},n.handleEscape=function(t){if(this.props.isOpen&&this.props.keyboard&&t.keyCode===Et.esc&&this.props.toggle){if(t.preventDefault(),t.stopPropagation(),"static"===this.props.backdrop)return void this.handleStaticBackdropAnimation();this.props.toggle(t)}},n.handleStaticBackdropAnimation=function(){var t=this;this.clearBackdropAnimationTimeout(),this.setState({showStaticBackdropAnimation:!0}),this._backdropAnimationTimeout=setTimeout((function(){t.setState({showStaticBackdropAnimation:!1})}),100)},n.init=function(){try{this._triggeringElement=document.activeElement}catch(t){this._triggeringElement=null}var t;this._element||(this._element=document.createElement("div"),this._element.setAttribute("tabindex","-1"),this._element.style.position="relative",this._element.style.zIndex=this.props.zIndex,document.body.appendChild(this._element)),this._originalBodyPadding=(t=window.getComputedStyle(document.body,null),parseInt(t&&t.getPropertyValue("padding-right")||0,10)),mt(),0===e.openCount&&(document.body.className=ft()(document.body.className,ht("modal-open",this.props.cssModule))),e.openCount+=1},n.destroy=function(){this._element&&(document.body.removeChild(this._element),this._element=null),this.manageFocusAfterClose()},n.manageFocusAfterClose=function(){if(this._triggeringElement){var t=this.props.returnFocusAfterClose;this._triggeringElement.focus&&t&&this._triggeringElement.focus(),this._triggeringElement=null}},n.close=function(){if(e.openCount<=1){var t=ht("modal-open",this.props.cssModule),n=new RegExp("(^| )"+t+"( |$)");document.body.className=document.body.className.replace(n," ").trim()}this.manageFocusAfterClose(),e.openCount=Math.max(0,e.openCount-1),pt(this._originalBodyPadding)},n.renderModalDialog=function(){var t,e=this,n=gt(this.props,Dn);return o.a.createElement("div",s({},n,{className:ht(ft()("modal-dialog",this.props.className,(t={},t["modal-"+this.props.size]=this.props.size,t["modal-dialog-centered"]=this.props.centered,t["modal-dialog-scrollable"]=this.props.scrollable,t)),this.props.cssModule),role:"document",ref:function(t){e._dialog=t}}),o.a.createElement("div",{className:ht(ft()("modal-content",this.props.contentClassName),this.props.cssModule)},this.props.children))},n.render=function(){var t=this.props.unmountOnClose;if(this._element&&(this.state.isOpen||!t)){var e=!!this._element&&!this.state.isOpen&&!t;this._element.style.display=e?"none":"block";var n=this.props,r=n.wrapClassName,i=n.modalClassName,a=n.backdropClassName,l=n.cssModule,c=n.isOpen,u=n.backdrop,f=n.role,d=n.labelledBy,p=n.external,m=n.innerRef,h={onClick:this.handleBackdropClick,onMouseDown:this.handleBackdropMouseDown,onKeyUp:this.handleEscape,onKeyDown:this.handleTab,style:{display:"block"},"aria-labelledby":d,role:f,tabIndex:"-1"},g=this.props.fade,b=Ee({},On.defaultProps,{},this.props.modalTransition,{baseClass:g?this.props.modalTransition.baseClass:"",timeout:g?this.props.modalTransition.timeout:0}),v=Ee({},On.defaultProps,{},this.props.backdropTransition,{baseClass:g?this.props.backdropTransition.baseClass:"",timeout:g?this.props.backdropTransition.timeout:0}),y=u&&(g?o.a.createElement(On,s({},v,{in:c&&!!u,cssModule:l,className:ht(ft()("modal-backdrop",a),l)})):o.a.createElement("div",{className:ht(ft()("modal-backdrop","show",a),l)}));return o.a.createElement(Tn,{node:this._element},o.a.createElement("div",{className:ht(r)},o.a.createElement(On,s({},h,b,{in:c,onEntered:this.onOpened,onExited:this.onClosed,cssModule:l,className:ht(ft()("modal",i,this.state.showStaticBackdropAnimation&&"modal-static"),l),innerRef:m}),p,this.renderModalDialog()),y))}return null},n.clearBackdropAnimationTimeout=function(){this._backdropAnimationTimeout&&(clearTimeout(this._backdropAnimationTimeout),this._backdropAnimationTimeout=void 0)},e}(o.a.Component);In.propTypes=Rn,In.defaultProps=Ln,In.openCount=0;var Un=In,Fn={tag:xt,wrapTag:xt,toggle:u.a.func,className:u.a.string,cssModule:u.a.object,children:u.a.node,closeAriaLabel:u.a.string,charCode:u.a.oneOfType([u.a.string,u.a.number]),close:u.a.object},Bn=function(t){var e,n=t.className,r=t.cssModule,i=t.children,a=t.toggle,l=t.tag,c=t.wrapTag,u=t.closeAriaLabel,f=t.charCode,d=t.close,p=B(t,["className","cssModule","children","toggle","tag","wrapTag","closeAriaLabel","charCode","close"]),m=ht(ft()(n,"modal-header"),r);if(!d&&a){var h="number"==typeof f?String.fromCharCode(f):f;e=o.a.createElement("button",{type:"button",onClick:a,className:ht("close",r),"aria-label":u},o.a.createElement("span",{"aria-hidden":"true"},h))}return o.a.createElement(c,s({},p,{className:m}),o.a.createElement(l,{className:ht("modal-title",r)},i),d||e)};Bn.propTypes=Fn,Bn.defaultProps={tag:"h5",wrapTag:"div",closeAriaLabel:"Close",charCode:215};var qn=Bn,Hn={tag:xt,className:u.a.string,cssModule:u.a.object},Wn=function(t){var e=t.className,n=t.cssModule,r=t.tag,i=B(t,["className","cssModule","tag"]),a=ht(ft()(e,"modal-body"),n);return o.a.createElement(r,s({},i,{className:a}))};Wn.propTypes=Hn,Wn.defaultProps={tag:"div"};var $n=Wn,Vn={tag:xt,className:u.a.string,cssModule:u.a.object},Yn=function(t){var e=t.className,n=t.cssModule,r=t.tag,i=B(t,["className","cssModule","tag"]),a=ht(ft()(e,"modal-footer"),n);return o.a.createElement(r,s({},i,{className:a}))};Yn.propTypes=Vn,Yn.defaultProps={tag:"div"};var Gn=Yn;function Qn(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(!(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=t[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==l.return||l.return()}finally{if(o)throw i}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var Xn=function(t){var e=t.buttonLabel,n=t.className,i=t.handleSubmit,a=Qn(Object(r.useState)(!1),2),l=a[0],c=a[1],u=function(){return c(!l)};return o.a.createElement("div",null,o.a.createElement(Gt,{color:"primary",onClick:u},e),o.a.createElement(Un,{centered:!0,isOpen:l,toggle:u,className:n},o.a.createElement(qn,{toggle:u},"Confirm Current Configuration"),o.a.createElement($n,null,"Saving will overwrite your existing configuration. Are you sure you want to do this?"),o.a.createElement(Gn,null,o.a.createElement(Gt,{color:"primary",onClick:function(){i(),u()}},"Save")," ",o.a.createElement(Gt,{color:"secondary",onClick:u},"Cancel"))))};function Kn(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(!(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=t[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==l.return||l.return()}finally{if(o)throw i}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var Jn=function(t){var e=t.buttonLabel,n=t.className,i=t.handleReset,a=Kn(Object(r.useState)(!1),2),l=a[0],c=a[1],u=function(){return c(!l)};return o.a.createElement("div",null,o.a.createElement(Gt,{color:"danger",onClick:u},e),o.a.createElement(Un,{centered:!0,isOpen:l,toggle:u,className:n},o.a.createElement(qn,{toggle:u},"Confirm Reset"),o.a.createElement($n,null,"Form data will revert to your last saved configuration. Are you sure you want to do this?"),o.a.createElement(Gn,null,o.a.createElement(Gt,{color:"primary",onClick:function(){i(),u()}},"Reset Form")," ",o.a.createElement(Gt,{color:"secondary",onClick:u},"Cancel Reset"))))};function Zn(t,e,n,r,o,i,a){try{var l=t[i](a),c=l.value}catch(t){return void n(t)}l.done?e(c):Promise.resolve(c).then(r,o)}function tr(t){return function(){var e=this,n=arguments;return new Promise((function(r,o){var i=t.apply(e,n);function a(t){Zn(i,r,o,a,l,"next",t)}function l(t){Zn(i,r,o,a,l,"throw",t)}a(void 0)}))}}function er(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(!(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=t[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==l.return||l.return()}finally{if(o)throw i}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var nr=function(t){var e=er(Object(r.useState)({}),2),n=e[0],i=e[1],a=er(Object(r.useState)({}),2),l=a[0],c=a[1],u=er(Object(r.useState)(""),2),s=u[0],f=u[1],d=er(Object(r.useState)(""),2),p=d[0],m=d[1],h=Object(r.useContext)(qe).project;function g(){return(g=tr(regeneratorRuntime.mark((function t(){var e;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,fetch("".concat(h.projects,"/config.json"));case 2:return e=t.sent,t.next=5,e.json().then((function(t){i(t),c(t),f(t.endpoint)}));case 5:t.sent;case 6:case"end":return t.stop()}}),t)})))).apply(this,arguments)}h.projects||t.history.push("/"),Object(r.useEffect)((function(){!function(){g.apply(this,arguments)}()}),[]);function b(){return(b=tr(regeneratorRuntime.mark((function t(){var e,n;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:e={project:h.projects,data:l},t.t0=regeneratorRuntime.keys(l.categories);case 2:if((t.t1=t.t0()).done){t.next=9;break}if(n=t.t1.value,!1!==/^\d+$/.test(l.categories[n].frequency)){t.next=7;break}return alert("Please ensure Frequencies are whole positive integers"),t.abrupt("return");case 7:t.next=2;break;case 9:return t.next=11,fetch("/api/configDash",{method:"post",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(e)});case 11:case"end":return t.stop()}}),t)})))).apply(this,arguments)}return o.a.createElement("div",{id:"configDashboard"},o.a.createElement("div",{id:"navBtn"},o.a.createElement(zt,null,o.a.createElement(It,{xs:"1"},o.a.createElement($t,{xs:"6"},o.a.createElement(it,{id:"navUserDashLink",to:"/userDashBoard"},o.a.createElement(Gt,{id:"navUserDash",type:"button",color:"secondary",className:"btnSecondary"},"Back to User Dashboard"))),o.a.createElement($t,{xs:"6"},o.a.createElement(it,{id:"navProjLink",to:"/"},o.a.createElement(Gt,{id:"navProjectSelect",type:"button",color:"secondary",className:"btnSecondary"},"Back to Project Select")))))),o.a.createElement("div",{id:"configHeader"},o.a.createElement("br",null),o.a.createElement("h1",null,"Config Dashboard"),o.a.createElement("hr",null),o.a.createElement(Ye,{id:"configForm"},o.a.createElement("div",{id:"categories"},o.a.createElement(Xe,null,o.a.createElement(rn,{for:"endpointLabel"},o.a.createElement("h4",{id:"endpointHeader"},"Endpoint")),o.a.createElement(ln,{type:"text",name:"endpoint",id:"endpoint",placeholder:"Input your GraphQL endpoint",value:s,onChange:function(t){var e=t.target.value,n=JSON.stringify(l),r=JSON.parse(n);r.endpoint=e,c(r),f(e)}}),o.a.createElement("hr",null),o.a.createElement(rn,{for:"categories"},o.a.createElement("h4",{id:"categoriesHeader"},"Categories")),o.a.createElement(En,{configData:l,addCategory:function(){var t=JSON.stringify(l),e=JSON.parse(t);e.categories[p]={},e.categories[p].queries=[""],e.categories[p].frequency="",m(""),c(e)},delCategory:function(){var t=JSON.stringify(l),e=JSON.parse(t);delete e.categories[p],m(""),c(e)},addTypedCat:function(t){m(t.target.value)},typedCat:p,queryChange:function(t){var e=t.target.id.split("-")[0],n=t.target.id.split("-")[1],r=JSON.stringify(l),o=JSON.parse(r);o.categories[e].queries[n]=t.target.value,c(o)},addQuery:function(t){var e=t.target.id.split("-")[0],n=JSON.stringify(l),r=JSON.parse(n);r.categories[e].queries.push(""),c(r)},deleteQuery:function(t){var e=t.target.id.split("-")[0],n=t.target.id.split("-")[1],r=JSON.stringify(l),o=JSON.parse(r);o.categories[e].queries.splice(n,1),c(o)},freqChange:function(t){var e=t.target.id.split("-")[0],n=JSON.stringify(l),r=JSON.parse(n);r.categories[e].frequency=t.target.value,c(r)}}))),o.a.createElement(Xn,{handleSubmit:function(){return b.apply(this,arguments)},buttonLabel:"Save Configuration",className:"saveConfig"}),o.a.createElement(Jn,{handleReset:function(){c(n),f(n.endpoint),t.history.push("/configDash")},buttonLabel:"Reset Configuration",className:"resetConfig"}))))};function rr(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(!(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=t[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==l.return||l.return()}finally{if(o)throw i}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var or=function(t){var e=rr(Object(r.useState)(!1),2),n=e[0],i=e[1],a=Object(r.useContext)(qe),l=a.project,c=a.updateProject,u=rr(Object(r.useState)([1,2]),2),s=u[0],f=u[1],d=rr(Object(r.useState)(!1),2),p=d[0],m=d[1];Object(r.useEffect)((function(){p||(fetch("/projectNames.json").then((function(t){return t.json()})).then((function(t){f(t)})).catch((function(t){return console.log(t)})),m(!0))}),[s]);var h=[],g=!0,b=!1,v=void 0;try{for(var y,x=function(){var t=y.value;h.push(o.a.createElement(Pt,{key:t,onClick:function(){return c({projects:t})}},t))},w=s[Symbol.iterator]();!(g=(y=w.next()).done);g=!0)x()}catch(t){b=!0,v=t}finally{try{g||null==w.return||w.return()}finally{if(b)throw v}}return o.a.createElement("div",{id:"projectSelect"},o.a.createElement("div",{className:"projDrop"},o.a.createElement(se,{isOpen:n,toggle:function(){i(!n)}},o.a.createElement(ke,{caret:!0,color:"primary"},"Projects:"),o.a.createElement(Ie,null,h))),l.projects&&o.a.createElement("div",null,o.a.createElement("div",{id:"userDashBtn"},o.a.createElement(it,{to:"/userDashBoard"},o.a.createElement(Gt,{size:"md",type:"button",className:"btnSecondary"},"DASHBOARD"))),o.a.createElement("div",{id:"configBtn"},o.a.createElement(it,{to:"/configDash"},o.a.createElement(Gt,{type:"button",className:"btnSecondary"},"CONFIG")))))};i.render(r.createElement((function(t){var e=Be(Object(r.useState)({}),2),n=e[0],i=e[1];return o.a.createElement(qe.Provider,{value:{project:n,updateProject:function(t){i(t)}}},t.children)}),null,r.createElement((function(){return o.a.createElement("div",{className:"router"},o.a.createElement(Z,null,o.a.createElement(Y,{exact:!0,path:"/",component:or}),o.a.createElement(Y,{exact:!0,path:"/configDash",component:nr}),o.a.createElement(Y,{exact:!0,path:"/userDashBoard",component:We})))}),null)),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,